\qecho 'CREATING PRIMARY KEY ANLA_PK'
ALTER TABLE ANL_ACCURACY ADD CONSTRAINT ANLA_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
ACCURACY_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLAB_PK'
ALTER TABLE ANL_ANALYSIS_BATCH ADD CONSTRAINT ANLAB_PK PRIMARY KEY
(
BATCH_ID
);

\qecho 'CREATING PRIMARY KEY ANLR_PK'
ALTER TABLE ANL_ANALYSIS_REPORT ADD CONSTRAINT ANLR_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE
);

\qecho 'CREATING PRIMARY KEY ANLAS_PK'
ALTER TABLE ANL_ANALYSIS_STEP ADD CONSTRAINT ANLAS_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY ANLB_PK'
ALTER TABLE ANL_BA ADD CONSTRAINT ANLB_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
BA_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLCA_PK'
ALTER TABLE ANL_CALC_ALIAS ADD CONSTRAINT ANLCA_PK PRIMARY KEY
(
CALCULATE_METHOD_ID,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY ANLCE_PK'
ALTER TABLE ANL_CALC_EQUIV ADD CONSTRAINT ANLCE_PK PRIMARY KEY
(
CALCULATE_METHOD_ID1,
CALCULATE_METHOD_ID2
);

\qecho 'CREATING PRIMARY KEY ANLCF_PK'
ALTER TABLE ANL_CALC_FORMULA ADD CONSTRAINT ANLCF_PK PRIMARY KEY
(
CALCULATE_METHOD_ID,
FORMULA_PART_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLCM_PK'
ALTER TABLE ANL_CALC_METHOD ADD CONSTRAINT ANLCM_PK PRIMARY KEY
(
CALCULATE_METHOD_ID
);

\qecho 'CREATING PRIMARY KEY ANLCS_PK'
ALTER TABLE ANL_CALC_SET ADD CONSTRAINT ANLCS_PK PRIMARY KEY
(
CALC_SET_ID
);

\qecho 'CREATING PRIMARY KEY ANLCR_PK'
ALTER TABLE ANL_COAL_RANK ADD CONSTRAINT ANLCR_PK PRIMARY KEY
(
COAL_RANK_ID
);

\qecho 'CREATING PRIMARY KEY ANLCRS_PK'
ALTER TABLE ANL_COAL_RANK_SCHEME ADD CONSTRAINT ANLCRS_PK PRIMARY KEY
(
COAL_RANK_SCHEME_ID
);

\qecho 'CREATING PRIMARY KEY ANLCOMP_PK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_PK PRIMARY KEY
(
ANL_SOURCE,
ANALYSIS_ID,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLD_PK'
ALTER TABLE ANL_DETAIL ADD CONSTRAINT ANLD_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
DETAIL_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLE_PK'
ALTER TABLE ANL_ELEMENTAL ADD CONSTRAINT ANLE_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
ELEMENTAL_ANL_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLED_PK'
ALTER TABLE ANL_ELEMENTAL_DETAIL ADD CONSTRAINT ANLED_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
DETAIL_ANL_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLEQP_PK'
ALTER TABLE ANL_EQUIP ADD CONSTRAINT ANLEQP_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
EQUIP_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLF_PK'
ALTER TABLE ANL_FLUOR ADD CONSTRAINT ANLF_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
FLUOR_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLGA_PK'
ALTER TABLE ANL_GAS_ANALYSIS ADD CONSTRAINT ANLGA_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
GAS_ANL_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLGC_PK'
ALTER TABLE ANL_GAS_CHRO ADD CONSTRAINT ANLGC_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
ANL_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLGCP_PK'
ALTER TABLE ANL_GAS_COMPOSITION ADD CONSTRAINT ANLGCP_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
GAS_ANL_COMPOSITION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLGD_PK'
ALTER TABLE ANL_GAS_DETAIL ADD CONSTRAINT ANLGD_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
GAS_ANL_DETAIL_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLGH_PK'
ALTER TABLE ANL_GAS_HEAT ADD CONSTRAINT ANLGH_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
HEAT_CONTENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLGP_PK'
ALTER TABLE ANL_GAS_PRESS ADD CONSTRAINT ANLGP_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
GAS_ANL_PRESS_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLI_PK'
ALTER TABLE ANL_ISOTOPE ADD CONSTRAINT ANLI_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
ISOTOPE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLIS_PK'
ALTER TABLE ANL_ISOTOPE_STD ADD CONSTRAINT ANLIS_PK PRIMARY KEY
(
STANDARD_ID,
SUBSTANCE_ID
);

\qecho 'CREATING PRIMARY KEY ANLLC_PK'
ALTER TABLE ANL_LIQUID_CHRO ADD CONSTRAINT ANLLC_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
CHRO_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLLCD_PK'
ALTER TABLE ANL_LIQUID_CHRO_DETAIL ADD CONSTRAINT ANLLCD_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
DETAIL_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLMAC_PK'
ALTER TABLE ANL_MACERAL ADD CONSTRAINT ANLMAC_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
MACERAL_ANL_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLMACM_PK'
ALTER TABLE ANL_MACERAL_MATURITY ADD CONSTRAINT ANLMACM_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
MEASUREMENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLM_PK'
ALTER TABLE ANL_METHOD ADD CONSTRAINT ANLM_PK PRIMARY KEY
(
METHOD_SET_ID,
METHOD_ID
);

\qecho 'CREATING PRIMARY KEY ANLMA_PK'
ALTER TABLE ANL_METHOD_ALIAS ADD CONSTRAINT ANLMA_PK PRIMARY KEY
(
METHOD_SET_ID,
METHOD_ID,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY ANLME_PK'
ALTER TABLE ANL_METHOD_EQUIV ADD CONSTRAINT ANLME_PK PRIMARY KEY
(
METHOD_SET_ID1,
METHOD_ID1,
METHOD_SET_ID2,
METHOD_ID2
);

\qecho 'CREATING PRIMARY KEY ANLMP_PK'
ALTER TABLE ANL_METHOD_PARM ADD CONSTRAINT ANLMP_PK PRIMARY KEY
(
METHOD_SET_ID,
METHOD_ID,
PARAMETER_TYPE,
METHOD_PARM_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLMS_PK'
ALTER TABLE ANL_METHOD_SET ADD CONSTRAINT ANLMS_PK PRIMARY KEY
(
METHOD_SET_ID
);

\qecho 'CREATING PRIMARY KEY ANLOA_PK'
ALTER TABLE ANL_OIL_ANALYSIS ADD CONSTRAINT ANLOA_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
OIL_ANALYSIS_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLOD_PK'
ALTER TABLE ANL_OIL_DETAIL ADD CONSTRAINT ANLOD_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
DETAIL_ANL_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLODL_PK'
ALTER TABLE ANL_OIL_DISTILL ADD CONSTRAINT ANLODL_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
DSTL_SUMMARY_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLOF_PK'
ALTER TABLE ANL_OIL_FRACTION ADD CONSTRAINT ANLOF_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
DISTILL_FRACTION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLOV_PK'
ALTER TABLE ANL_OIL_VISCOSITY ADD CONSTRAINT ANLOV_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
VISCOSITY_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLP_PK'
ALTER TABLE ANL_PALEO ADD CONSTRAINT ANLP_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
PALYNOLOGY_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLPM_PK'
ALTER TABLE ANL_PALEO_MATURITY ADD CONSTRAINT ANLPM_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
MATURATION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLPRM_PK'
ALTER TABLE ANL_PARM ADD CONSTRAINT ANLPRM_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
PARM_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLPRB_PK'
ALTER TABLE ANL_PROBLEM ADD CONSTRAINT ANLPRB_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
PROBLEM_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLPYR_PK'
ALTER TABLE ANL_PYROLYSIS ADD CONSTRAINT ANLPYR_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
PYROLYSIS_ANL_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLQT_PK'
ALTER TABLE ANL_QGF_TSF ADD CONSTRAINT ANLQT_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
MEASUREMENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLRMK_PK'
ALTER TABLE ANL_REMARK ADD CONSTRAINT ANLRMK_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
REMARK_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY ANLRA_PK'
ALTER TABLE ANL_REPORT_ALIAS ADD CONSTRAINT ANLRA_PK PRIMARY KEY
(
ANALYSIS_ID,
SOURCE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY ANLS_PK'
ALTER TABLE ANL_SAMPLE ADD CONSTRAINT ANLS_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
SAMPLE_ID
);

\qecho 'CREATING PRIMARY KEY ANLSX_PK'
ALTER TABLE ANL_STEP_XREF ADD CONSTRAINT ANLSX_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO1,
STEP_SEQ_NO2
);

\qecho 'CREATING PRIMARY KEY ANLTR_PK'
ALTER TABLE ANL_TABLE_RESULT ADD CONSTRAINT ANLTR_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
);

\qecho 'CREATING PRIMARY KEY ANLVB_PK'
ALTER TABLE ANL_VALID_BA ADD CONSTRAINT ANLVB_PK PRIMARY KEY
(
METHOD_SET_ID,
METHOD_ID,
VALID_BA_ID,
VALID_BA_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLVE_PK'
ALTER TABLE ANL_VALID_EQUIP ADD CONSTRAINT ANLVE_PK PRIMARY KEY
(
METHOD_SET_ID,
METHOD_ID,
EQUIP_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLVM_PK'
ALTER TABLE ANL_VALID_MEASURE ADD CONSTRAINT ANLVM_PK PRIMARY KEY
(
METHOD_SET_ID,
METHOD_ID,
MEASUREMENT_TYPE,
VALID_VALUE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLVP_PK'
ALTER TABLE ANL_VALID_PROBLEM ADD CONSTRAINT ANLVP_PK PRIMARY KEY
(
METHOD_SET_ID,
METHOD_ID,
PROBLEM_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLVTR_PK'
ALTER TABLE ANL_VALID_TABLE_RESULT ADD CONSTRAINT ANLVTR_PK PRIMARY KEY
(
METHOD_SET_ID,
METHOD_ID,
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
);

\qecho 'CREATING PRIMARY KEY ANLVT_PK'
ALTER TABLE ANL_VALID_TOLERANCE ADD CONSTRAINT ANLVT_PK PRIMARY KEY
(
METHOD_SET_ID,
METHOD_ID,
EQUIP_OBS_NO,
TOLERANCE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLWA_PK'
ALTER TABLE ANL_WATER_ANALYSIS ADD CONSTRAINT ANLWA_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
WATER_ANALYSIS_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLWD_PK'
ALTER TABLE ANL_WATER_DETAIL ADD CONSTRAINT ANLWD_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
DETAIL_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ANLWS_PK'
ALTER TABLE ANL_WATER_SALINITY ADD CONSTRAINT ANLWS_PK PRIMARY KEY
(
ANALYSIS_ID,
ANL_SOURCE,
WATER_SALINITY_OBS_NO
);

\qecho 'CREATING PRIMARY KEY APP_PK'
ALTER TABLE APPLICATION ADD CONSTRAINT APP_PK PRIMARY KEY
(
APPLICATION_ID
);

\qecho 'CREATING PRIMARY KEY APPC_PK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_PK PRIMARY KEY
(
APPLICATION_ID,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY APPAL_PK'
ALTER TABLE APPLIC_ALIAS ADD CONSTRAINT APPAL_PK PRIMARY KEY
(
APPLICATION_ID,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY APPA_PK'
ALTER TABLE APPLIC_AREA ADD CONSTRAINT APPA_PK PRIMARY KEY
(
APPLICATION_ID,
AREA_ID,
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY APPT_PK'
ALTER TABLE APPLIC_ATTACH ADD CONSTRAINT APPT_PK PRIMARY KEY
(
APPLICATION_ID,
ATTACHMENT_ID
);

\qecho 'CREATING PRIMARY KEY APPB_PK'
ALTER TABLE APPLIC_BA ADD CONSTRAINT APPB_PK PRIMARY KEY
(
APPLICATION_ID,
APPLICATION_BA_ID,
APPLICATION_BA_OBS_NO
);

\qecho 'CREATING PRIMARY KEY APPD_PK'
ALTER TABLE APPLIC_DESC ADD CONSTRAINT APPD_PK PRIMARY KEY
(
APPLICATION_ID,
DESCRIPTION_ID
);

\qecho 'CREATING PRIMARY KEY APPR_PK'
ALTER TABLE APPLIC_REMARK ADD CONSTRAINT APPR_PK PRIMARY KEY
(
APPLICATION_ID,
REMARK_ID
);

\qecho 'CREATING PRIMARY KEY A_PK'
ALTER TABLE AREA ADD CONSTRAINT A_PK PRIMARY KEY
(
AREA_ID,
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY AA_PK'
ALTER TABLE AREA_ALIAS ADD CONSTRAINT AA_PK PRIMARY KEY
(
AREA_ID,
AREA_TYPE,
AREA_ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY ACL_PK'
ALTER TABLE AREA_CLASS ADD CONSTRAINT ACL_PK PRIMARY KEY
(
AREA_ID_PARENT,
AREA_TYPE_PARENT,
AREA_ID,
AREA_TYPE,
AREA_HIERARCHY_ID
);

\qecho 'CREATING PRIMARY KEY ACMP_PK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_PK PRIMARY KEY
(
AREA_ID,
AREA_TYPE,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY AC_PK'
ALTER TABLE AREA_CONTAIN ADD CONSTRAINT AC_PK PRIMARY KEY
(
CONTAINING_AREA_ID,
CONTAINING_AREA_TYPE,
CONTAINED_AREA_ID,
CONTAINED_AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY AD_PK'
ALTER TABLE AREA_DESCRIPTION ADD CONSTRAINT AD_PK PRIMARY KEY
(
AREA_ID,
AREA_TYPE,
DESCRIPTION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY AH_PK'
ALTER TABLE AREA_HIERARCHY ADD CONSTRAINT AH_PK PRIMARY KEY
(
AREA_HIERARCHY_ID
);

\qecho 'CREATING PRIMARY KEY AHD_PK'
ALTER TABLE AREA_HIER_DETAIL ADD CONSTRAINT AHD_PK PRIMARY KEY
(
AREA_HIERARCHY_ID,
AREA_HIER_LEVEL_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY AX_PK'
ALTER TABLE AREA_XREF ADD CONSTRAINT AX_PK PRIMARY KEY
(
AREA_ID1,
AREA_TYPE1,
AREA_ID2,
AREA_TYPE2,
AREA_XREF_OBS_NO
);

\qecho 'CREATING PRIMARY KEY BAA_PK'
ALTER TABLE BA_ADDRESS ADD CONSTRAINT BAA_PK PRIMARY KEY
(
BUSINESS_ASSOCIATE_ID,
SOURCE,
ADDRESS_OBS_NO
);

\qecho 'CREATING PRIMARY KEY BAAL_PK'
ALTER TABLE BA_ALIAS ADD CONSTRAINT BAAL_PK PRIMARY KEY
(
BUSINESS_ASSOCIATE_ID,
SOURCE,
BA_ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY BAAU_PK'
ALTER TABLE BA_AUTHORITY ADD CONSTRAINT BAAU_PK PRIMARY KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);

\qecho 'CREATING PRIMARY KEY BAAUC_PK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_PK PRIMARY KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY BACOMP_PK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_PK PRIMARY KEY
(
BUSINESS_ASSOCIATE_ID,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY BACS_PK'
ALTER TABLE BA_CONSORTIUM_SERVICE ADD CONSTRAINT BACS_PK PRIMARY KEY
(
CONSORTIUM_BA_ID,
PROVIDED_BY,
SERVICE_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY BACI_PK'
ALTER TABLE BA_CONTACT_INFO ADD CONSTRAINT BACI_PK PRIMARY KEY
(
BUSINESS_ASSOCIATE_ID,
LOCATION_ID
);

\qecho 'CREATING PRIMARY KEY BAC_PK'
ALTER TABLE BA_CREW ADD CONSTRAINT BAC_PK PRIMARY KEY
(
CREW_COMPANY_BA_ID,
CREW_ID
);

\qecho 'CREATING PRIMARY KEY BACM_PK'
ALTER TABLE BA_CREW_MEMBER ADD CONSTRAINT BACM_PK PRIMARY KEY
(
CREW_COMPANY_BA_ID,
CREW_ID,
MEMBER_OBS_NO,
CREW_MEMBER_BA_ID
);

\qecho 'CREATING PRIMARY KEY BAD_PK'
ALTER TABLE BA_DESCRIPTION ADD CONSTRAINT BAD_PK PRIMARY KEY
(
BUSINESS_ASSOCIATE_ID,
DESCRIPTION_ID
);

\qecho 'CREATING PRIMARY KEY BAE_PK'
ALTER TABLE BA_EMPLOYEE ADD CONSTRAINT BAE_PK PRIMARY KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY BALIC_PK'
ALTER TABLE BA_LICENSE ADD CONSTRAINT BALIC_PK PRIMARY KEY
(
LICENSEE_BA_ID,
LICENSE_ID
);

\qecho 'CREATING PRIMARY KEY BALICAL_PK'
ALTER TABLE BA_LICENSE_ALIAS ADD CONSTRAINT BALICAL_PK PRIMARY KEY
(
LICENSEE_BA_ID,
LICENSE_ID,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY BALICA_PK'
ALTER TABLE BA_LICENSE_AREA ADD CONSTRAINT BALICA_PK PRIMARY KEY
(
LICENSEE_BA_ID,
LICENSE_ID,
AREA_ID,
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY BALICC_PK'
ALTER TABLE BA_LICENSE_COND ADD CONSTRAINT BALICC_PK PRIMARY KEY
(
LICENSEE_BA_ID,
LICENSE_ID,
CONDITION_ID
);

\qecho 'CREATING PRIMARY KEY BALICCC_PK'
ALTER TABLE BA_LICENSE_COND_CODE ADD CONSTRAINT BALICCC_PK PRIMARY KEY
(
GRANTED_BY_BA_ID,
LICENSE_TYPE,
CONDITION_TYPE,
CONDITION_CODE
);

\qecho 'CREATING PRIMARY KEY BALICCT_PK'
ALTER TABLE BA_LICENSE_COND_TYPE ADD CONSTRAINT BALICCT_PK PRIMARY KEY
(
GRANTED_BY_BA_ID,
LICENSE_TYPE,
CONDITION_TYPE
);

\qecho 'CREATING PRIMARY KEY BALICR_PK'
ALTER TABLE BA_LICENSE_REMARK ADD CONSTRAINT BALICR_PK PRIMARY KEY
(
LICENSEE_BA_ID,
LICENSE_ID,
REMARK_ID,
REMARK_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY BALICS_PK'
ALTER TABLE BA_LICENSE_STATUS ADD CONSTRAINT BALICS_PK PRIMARY KEY
(
LICENSEE_BA_ID,
LICENSE_ID,
STATUS_ID
);

\qecho 'CREATING PRIMARY KEY BALICT_PK'
ALTER TABLE BA_LICENSE_TYPE ADD CONSTRAINT BALICT_PK PRIMARY KEY
(
GRANTED_BY_BA_ID,
LICENSE_TYPE
);

\qecho 'CREATING PRIMARY KEY BALICV_PK'
ALTER TABLE BA_LICENSE_VIOLATION ADD CONSTRAINT BALICV_PK PRIMARY KEY
(
LICENSEE_BA_ID,
LICENSE_ID,
VIOLATION_ID
);

\qecho 'CREATING PRIMARY KEY BAO_PK'
ALTER TABLE BA_ORGANIZATION ADD CONSTRAINT BAO_PK PRIMARY KEY
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY BAOC_PK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_PK PRIMARY KEY
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY BAP_PK'
ALTER TABLE BA_PERMIT ADD CONSTRAINT BAP_PK PRIMARY KEY
(
BUSINESS_ASSOCIATE_ID,
JURISDICTION,
PERMIT_TYPE,
PERMIT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY BAPR_PK'
ALTER TABLE BA_PREFERENCE ADD CONSTRAINT BAPR_PK PRIMARY KEY
(
BUSINESS_ASSOCIATE_ID,
PREFERENCE_TYPE,
PREFERENCE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY BAPRL_PK'
ALTER TABLE BA_PREFERENCE_LEVEL ADD CONSTRAINT BAPRL_PK PRIMARY KEY
(
BUSINESS_ASSOCIATE_ID,
PREFERENCE_TYPE,
PREFERENCE_OBS_NO,
LEVEL_ID
);

\qecho 'CREATING PRIMARY KEY BAS_PK'
ALTER TABLE BA_SERVICE ADD CONSTRAINT BAS_PK PRIMARY KEY
(
BUSINESS_ASSOCIATE_ID,
BA_SERVICE_TYPE,
BA_SERVICE_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY BASA_PK'
ALTER TABLE BA_SERVICE_ADDRESS ADD CONSTRAINT BASA_PK PRIMARY KEY
(
BUSINESS_ASSOCIATE_ID,
ADDRESS_OBS_NO,
BA_SERVICE_TYPE,
BA_SERVICE_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY BAX_PK'
ALTER TABLE BA_XREF ADD CONSTRAINT BAX_PK PRIMARY KEY
(
BUSINESS_ASSOCIATE_ID,
NEW_BA_ID,
BA_XREF_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY BA_PK'
ALTER TABLE BUSINESS_ASSOCIATE ADD CONSTRAINT BA_PK PRIMARY KEY
(
BUSINESS_ASSOCIATE_ID
);

\qecho 'CREATING PRIMARY KEY CA_PK'
ALTER TABLE CAT_ADDITIVE ADD CONSTRAINT CA_PK PRIMARY KEY
(
CATALOGUE_ADDITIVE_ID
);

\qecho 'CREATING PRIMARY KEY CAA_PK'
ALTER TABLE CAT_ADDITIVE_ALIAS ADD CONSTRAINT CAA_PK PRIMARY KEY
(
CATALOGUE_ADDITIVE_ID,
CAT_ADDITIVE_ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY CAAL_PK'
ALTER TABLE CAT_ADDITIVE_ALLOWANCE ADD CONSTRAINT CAAL_PK PRIMARY KEY
(
ALLOWANCE_ID
);

\qecho 'CREATING PRIMARY KEY CAG_PK'
ALTER TABLE CAT_ADDITIVE_GROUP ADD CONSTRAINT CAG_PK PRIMARY KEY
(
ADDITIVE_GROUP_ID
);

\qecho 'CREATING PRIMARY KEY CAGP_1_PK'
ALTER TABLE CAT_ADDITIVE_GROUP_PART ADD CONSTRAINT CAGP_1_PK PRIMARY KEY
(
ADDITIVE_GROUP_ID,
ADDITIVE_TYPE_ID,
ADDITIVE_PART_OBS_NO
);

\qecho 'CREATING PRIMARY KEY CAS_PK'
ALTER TABLE CAT_ADDITIVE_SPEC ADD CONSTRAINT CAS_PK PRIMARY KEY
(
CATALOGUE_ADDITIVE_ID,
SPEC_ID
);

\qecho 'CREATING PRIMARY KEY CAT_PK'
ALTER TABLE CAT_ADDITIVE_TYPE ADD CONSTRAINT CAT_PK PRIMARY KEY
(
ADDITIVE_TYPE
);

\qecho 'CREATING PRIMARY KEY CAX_PK'
ALTER TABLE CAT_ADDITIVE_XREF ADD CONSTRAINT CAX_PK PRIMARY KEY
(
CATALOGUE_ADDITIVE_ID,
CATALOGUE_ADDITIVE_ID2,
XREF_OBS_NO
);

\qecho 'CREATING PRIMARY KEY CEQ_PK'
ALTER TABLE CAT_EQUIPMENT ADD CONSTRAINT CEQ_PK PRIMARY KEY
(
CATALOGUE_EQUIP_ID
);

\qecho 'CREATING PRIMARY KEY CEQA_PK'
ALTER TABLE CAT_EQUIP_ALIAS ADD CONSTRAINT CEQA_PK PRIMARY KEY
(
CATALOGUE_EQUIP_ID,
CAT_EQUIP_ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY CEQS_PK'
ALTER TABLE CAT_EQUIP_SPEC ADD CONSTRAINT CEQS_PK PRIMARY KEY
(
CATALOGUE_EQUIP_ID,
SPEC_ID
);

\qecho 'CREATING PRIMARY KEY CLSL_PK'
ALTER TABLE CLASS_LEVEL ADD CONSTRAINT CLSL_PK PRIMARY KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);

\qecho 'CREATING PRIMARY KEY CLSLAL_PK'
ALTER TABLE CLASS_LEVEL_ALIAS ADD CONSTRAINT CLSLAL_PK PRIMARY KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID,
CLASS_LEVEL_ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY CLSLCOMP_PK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_PK PRIMARY KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY CLSLD_PK'
ALTER TABLE CLASS_LEVEL_DESC ADD CONSTRAINT CLSLD_PK PRIMARY KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID,
DESC_OBS_NO
);

\qecho 'CREATING PRIMARY KEY CLSLT_PK'
ALTER TABLE CLASS_LEVEL_TYPE ADD CONSTRAINT CLSLT_PK PRIMARY KEY
(
CLASSIFICATION_SYSTEM_ID,
LEVEL_TYPE
);

\qecho 'CREATING PRIMARY KEY CLSLX_PK'
ALTER TABLE CLASS_LEVEL_XREF ADD CONSTRAINT CLSLX_PK PRIMARY KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID,
CLASSIFICATION_SYSTEM_ID2,
CLASS_LEVEL_ID2,
XREF_ID
);

\qecho 'CREATING PRIMARY KEY CLSS_PK'
ALTER TABLE CLASS_SYSTEM ADD CONSTRAINT CLSS_PK PRIMARY KEY
(
CLASSIFICATION_SYSTEM_ID
);

\qecho 'CREATING PRIMARY KEY CLSSAL_PK'
ALTER TABLE CLASS_SYSTEM_ALIAS ADD CONSTRAINT CLSSAL_PK PRIMARY KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_SYSTEM_ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY CLSSEQ_PK'
ALTER TABLE CLASS_SYSTEM_XREF ADD CONSTRAINT CLSSEQ_PK PRIMARY KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASSIFICATION_SYSTEM_ID2,
EQUIV_ID
);

\qecho 'CREATING PRIMARY KEY CON_PK'
ALTER TABLE CONSENT ADD CONSTRAINT CON_PK PRIMARY KEY
(
CONSENT_ID
);

\qecho 'CREATING PRIMARY KEY CONB_PK'
ALTER TABLE CONSENT_BA ADD CONSTRAINT CONB_PK PRIMARY KEY
(
CONSENT_ID,
CONSENT_BA_OBS_NO
);

\qecho 'CREATING PRIMARY KEY CONCOM_PK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_PK PRIMARY KEY
(
CONSENT_ID,
COMPONENT_ID
);

\qecho 'CREATING PRIMARY KEY CONC_PK'
ALTER TABLE CONSENT_COND ADD CONSTRAINT CONC_PK PRIMARY KEY
(
CONSENT_ID,
CONDITION_ID
);

\qecho 'CREATING PRIMARY KEY CONR_PK'
ALTER TABLE CONSENT_REMARK ADD CONSTRAINT CONR_PK PRIMARY KEY
(
CONSENT_ID,
REMARK_ID
);

\qecho 'CREATING PRIMARY KEY CO_PK'
ALTER TABLE CONSULT ADD CONSTRAINT CO_PK PRIMARY KEY
(
CONSULT_ID
);

\qecho 'CREATING PRIMARY KEY COB_PK'
ALTER TABLE CONSULT_BA ADD CONSTRAINT COB_PK PRIMARY KEY
(
CONSULT_ID,
BUSINESS_ASSOCIATE_ID
);

\qecho 'CREATING PRIMARY KEY COCOM_PK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_PK PRIMARY KEY
(
CONSULT_ID,
COMPONENT_ID
);

\qecho 'CREATING PRIMARY KEY COD_PK'
ALTER TABLE CONSULT_DISC ADD CONSTRAINT COD_PK PRIMARY KEY
(
CONSULT_ID,
DISCUSSION_ID
);

\qecho 'CREATING PRIMARY KEY CODB_PK'
ALTER TABLE CONSULT_DISC_BA ADD CONSTRAINT CODB_PK PRIMARY KEY
(
CONSULT_ID,
DISCUSSION_ID,
BUSINESS_ASSOCIATE_ID
);

\qecho 'CREATING PRIMARY KEY CODI_PK'
ALTER TABLE CONSULT_DISC_ISSUE ADD CONSTRAINT CODI_PK PRIMARY KEY
(
CONSULT_ID,
DISCUSSION_ID,
DETAIL_ID
);

\qecho 'CREATING PRIMARY KEY COI_PK'
ALTER TABLE CONSULT_ISSUE ADD CONSTRAINT COI_PK PRIMARY KEY
(
CONSULT_ID,
DETAIL_ID
);

\qecho 'CREATING PRIMARY KEY COX_PK'
ALTER TABLE CONSULT_XREF ADD CONSTRAINT COX_PK PRIMARY KEY
(
CONSULT_ID,
CONSULT_ID2
);

\qecho 'CREATING PRIMARY KEY COT_PK'
ALTER TABLE CONTEST ADD CONSTRAINT COT_PK PRIMARY KEY
(
CONTEST_ID
);

\qecho 'CREATING PRIMARY KEY COTCOM_PK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_PK PRIMARY KEY
(
CONTEST_ID,
COMPONENT_ID
);

\qecho 'CREATING PRIMARY KEY COTP_PK'
ALTER TABLE CONTEST_PARTY ADD CONSTRAINT COTP_PK PRIMARY KEY
(
CONTEST_ID,
BUSINESS_ASSOCIATE_ID,
BA_OBS_NO
);

\qecho 'CREATING PRIMARY KEY COTR_PK'
ALTER TABLE CONTEST_REMARK ADD CONSTRAINT COTR_PK PRIMARY KEY
(
CONTEST_ID,
REMARK_ID
);

\qecho 'CREATING PRIMARY KEY C_PK'
ALTER TABLE CONTRACT ADD CONSTRAINT C_PK PRIMARY KEY
(
CONTRACT_ID
);

\qecho 'CREATING PRIMARY KEY CCOM_PK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_PK PRIMARY KEY
(
CONTRACT_ID,
COMPONENT_ID
);

\qecho 'CREATING PRIMARY KEY CAP_PK'
ALTER TABLE CONT_ACCOUNT_PROC ADD CONSTRAINT CAP_PK PRIMARY KEY
(
CONTRACT_ID,
ACCOUNT_PROC_TYPE,
ACCOUNT_PROC_OBS_NO
);

\qecho 'CREATING PRIMARY KEY CAL_PK'
ALTER TABLE CONT_ALIAS ADD CONSTRAINT CAL_PK PRIMARY KEY
(
CONTRACT_ID,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY CAE_PK'
ALTER TABLE CONT_ALLOW_EXPENSE ADD CONSTRAINT CAE_PK PRIMARY KEY
(
CONTRACT_ID,
ALLOW_EXPENSE_TYPE,
ALLOW_EXPENSE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY CAR_PK'
ALTER TABLE CONT_AREA ADD CONSTRAINT CAR_PK PRIMARY KEY
(
CONTRACT_ID,
AREA_ID,
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY CBA_PK'
ALTER TABLE CONT_BA ADD CONSTRAINT CBA_PK PRIMARY KEY
(
CONTRACT_ID,
BUSINESS_ASSOCIATE_ID,
ROLE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY CBS_PK'
ALTER TABLE CONT_BA_SERVICE ADD CONSTRAINT CBS_PK PRIMARY KEY
(
CONTRACT_ID,
PROVIDED_BY,
SERVICE_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY CE_PK'
ALTER TABLE CONT_EXEMPTION ADD CONSTRAINT CE_PK PRIMARY KEY
(
CONTRACT_ID,
BUSINESS_ASSOCIATE_ID,
EXEMPTION_ID
);

\qecho 'CREATING PRIMARY KEY CEX_PK'
ALTER TABLE CONT_EXTENSION ADD CONSTRAINT CEX_PK PRIMARY KEY
(
CONTRACT_ID,
EXTENSION_ID
);

\qecho 'CREATING PRIMARY KEY CJ_PK'
ALTER TABLE CONT_JURISDICTION ADD CONSTRAINT CJ_PK PRIMARY KEY
(
CONTRACT_ID,
JURISDICTION
);

\qecho 'CREATING PRIMARY KEY CKW_PK'
ALTER TABLE CONT_KEY_WORD ADD CONSTRAINT CKW_PK PRIMARY KEY
(
CONTRACT_ID,
PROVISION_ID,
KEY_WORD_ID
);

\qecho 'CREATING PRIMARY KEY CMES_PK'
ALTER TABLE CONT_MKTG_ELECT_SUBST ADD CONSTRAINT CMES_PK PRIMARY KEY
(
CONTRACT_ID,
OPERATING_PROCEDURE_ID,
SUBSTANCE_ID,
SUBSTANCE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY COP_PK'
ALTER TABLE CONT_OPER_PROC ADD CONSTRAINT COP_PK PRIMARY KEY
(
CONTRACT_ID,
OPERATING_PROCEDURE_ID
);

\qecho 'CREATING PRIMARY KEY CP_PK'
ALTER TABLE CONT_PROVISION ADD CONSTRAINT CP_PK PRIMARY KEY
(
CONTRACT_ID,
PROVISION_ID
);

\qecho 'CREATING PRIMARY KEY CPT_PK'
ALTER TABLE CONT_PROVISION_TEXT ADD CONSTRAINT CPT_PK PRIMARY KEY
(
CONTRACT_ID,
PROVISION_ID,
PROVISION_TEXT_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY CPX_PK'
ALTER TABLE CONT_PROVISION_XREF ADD CONSTRAINT CPX_PK PRIMARY KEY
(
CONTRACT_ID,
PROVISION_ID,
CONTRACT_ID_2,
PROVISION_ID_2
);

\qecho 'CREATING PRIMARY KEY CR_PK'
ALTER TABLE CONT_REMARK ADD CONSTRAINT CR_PK PRIMARY KEY
(
CONTRACT_ID,
REMARK_ID,
REMARK_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY CST_PK'
ALTER TABLE CONT_STATUS ADD CONSTRAINT CST_PK PRIMARY KEY
(
CONTRACT_ID,
STATUS_ID
);

\qecho 'CREATING PRIMARY KEY CT_PK'
ALTER TABLE CONT_TYPE ADD CONSTRAINT CT_PK PRIMARY KEY
(
CONTRACT_ID,
CONTRACT_TYPE
);

\qecho 'CREATING PRIMARY KEY CVP_PK'
ALTER TABLE CONT_VOTING_PROC ADD CONSTRAINT CVP_PK PRIMARY KEY
(
CONTRACT_ID,
VOTING_PROCEDURE_ID
);

\qecho 'CREATING PRIMARY KEY CX_PK'
ALTER TABLE CONT_XREF ADD CONSTRAINT CX_PK PRIMARY KEY
(
CONTRACT_ID,
CONTRACT_ID_2
);

\qecho 'CREATING PRIMARY KEY CSA_PK'
ALTER TABLE CS_ALIAS ADD CONSTRAINT CSA_PK PRIMARY KEY
(
COORD_SYSTEM_ID,
COORD_SYSTEM_ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY CS_PK'
ALTER TABLE CS_COORDINATE_SYSTEM ADD CONSTRAINT CS_PK PRIMARY KEY
(
COORD_SYSTEM_ID
);

\qecho 'CREATING PRIMARY KEY CSCA_PK'
ALTER TABLE CS_COORD_ACQUISITION ADD CONSTRAINT CSCA_PK PRIMARY KEY
(
ACQUISITION_ID
);

\qecho 'CREATING PRIMARY KEY CSCT_PK'
ALTER TABLE CS_COORD_TRANSFORM ADD CONSTRAINT CSCT_PK PRIMARY KEY
(
TRANSFORM_ID
);

\qecho 'CREATING PRIMARY KEY CSCTP_PK'
ALTER TABLE CS_COORD_TRANS_PARM ADD CONSTRAINT CSCTP_PK PRIMARY KEY
(
TRANSFORM_TYPE,
PARAMETER_ID
);

\qecho 'CREATING PRIMARY KEY CSCTV_PK'
ALTER TABLE CS_COORD_TRANS_VALUE ADD CONSTRAINT CSCTV_PK PRIMARY KEY
(
TRANSFORM_ID,
TRANSFORM_TYPE,
PARAMETER_ID,
VALUE_ID
);

\qecho 'CREATING PRIMARY KEY CSE_PK'
ALTER TABLE CS_ELLIPSOID ADD CONSTRAINT CSE_PK PRIMARY KEY
(
ELLIPSOID_ID
);

\qecho 'CREATING PRIMARY KEY CSGD_PK'
ALTER TABLE CS_GEODETIC_DATUM ADD CONSTRAINT CSGD_PK PRIMARY KEY
(
GEODETIC_DATUM
);

\qecho 'CREATING PRIMARY KEY CSPM_PK'
ALTER TABLE CS_PRIME_MERIDIAN ADD CONSTRAINT CSPM_PK PRIMARY KEY
(
PRIME_MERIDIAN_ID
);

\qecho 'CREATING PRIMARY KEY CSPME_PK'
ALTER TABLE CS_PRINCIPAL_MERIDIAN ADD CONSTRAINT CSPME_PK PRIMARY KEY
(
PRINCIPAL_MERIDIAN
);

\qecho 'CREATING PRIMARY KEY EZ_PK'
ALTER TABLE ECOZONE ADD CONSTRAINT EZ_PK PRIMARY KEY
(
ECOZONE_ID
);

\qecho 'CREATING PRIMARY KEY EZA_PK'
ALTER TABLE ECOZONE_ALIAS ADD CONSTRAINT EZA_PK PRIMARY KEY
(
ECOZONE_ID,
ECOZONE_ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY EZH_PK'
ALTER TABLE ECOZONE_HIERARCHY ADD CONSTRAINT EZH_PK PRIMARY KEY
(
ECOZONE_SET_ID,
PARENT_ECOZONE_ID,
CHILD_ECOZONE_ID
);

\qecho 'CREATING PRIMARY KEY EZS_PK'
ALTER TABLE ECOZONE_SET ADD CONSTRAINT EZS_PK PRIMARY KEY
(
ECOZONE_SET_ID
);

\qecho 'CREATING PRIMARY KEY EZSP_PK'
ALTER TABLE ECOZONE_SET_PART ADD CONSTRAINT EZSP_PK PRIMARY KEY
(
ECOZONE_SET_ID,
ECOZONE_ID
);

\qecho 'CREATING PRIMARY KEY EZX_PK'
ALTER TABLE ECOZONE_XREF ADD CONSTRAINT EZX_PK PRIMARY KEY
(
ECOZONE_ID1,
ECOZONE_ID2,
ECOZONE_XREF_ID
);

\qecho 'CREATING PRIMARY KEY ENT_PK'
ALTER TABLE ENTITLEMENT ADD CONSTRAINT ENT_PK PRIMARY KEY
(
ENTITLEMENT_ID
);

\qecho 'CREATING PRIMARY KEY ENTCOM_PK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_PK PRIMARY KEY
(
ENTITLEMENT_ID,
COMPONENT_ID,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ENTG_PK'
ALTER TABLE ENT_GROUP ADD CONSTRAINT ENTG_PK PRIMARY KEY
(
ENTITLEMENT_ID,
SECURITY_GROUP_ID,
GROUP_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ENTSB_PK'
ALTER TABLE ENT_SECURITY_BA ADD CONSTRAINT ENTSB_PK PRIMARY KEY
(
SECURITY_GROUP_ID,
BUSINESS_ASSOCIATE_ID,
BA_OBS_NO
);

\qecho 'CREATING PRIMARY KEY ENTSG_PK'
ALTER TABLE ENT_SECURITY_GROUP ADD CONSTRAINT ENTSG_PK PRIMARY KEY
(
SECURITY_GROUP_ID
);

\qecho 'CREATING PRIMARY KEY ENTSX_PK'
ALTER TABLE ENT_SECURITY_GROUP_XREF ADD CONSTRAINT ENTSX_PK PRIMARY KEY
(
SECURITY_GROUP_ID1,
SECURITY_GROUP_ID2,
XREF_OBS_NO
);

\qecho 'CREATING PRIMARY KEY EQ_PK'
ALTER TABLE EQUIPMENT ADD CONSTRAINT EQ_PK PRIMARY KEY
(
EQUIPMENT_ID
);

\qecho 'CREATING PRIMARY KEY EQA_PK'
ALTER TABLE EQUIPMENT_ALIAS ADD CONSTRAINT EQA_PK PRIMARY KEY
(
EQUIPMENT_ID,
EQUIP_ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY EQBA_PK'
ALTER TABLE EQUIPMENT_BA ADD CONSTRAINT EQBA_PK PRIMARY KEY
(
EQUIP_ID,
BA_OBS_NO
);

\qecho 'CREATING PRIMARY KEY EQCOMP_PK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_PK PRIMARY KEY
(
EQUIPMENT_ID,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY EQM_PK'
ALTER TABLE EQUIPMENT_MAINTAIN ADD CONSTRAINT EQM_PK PRIMARY KEY
(
EQUIPMENT_ID,
EQUIP_MAINT_ID
);

\qecho 'CREATING PRIMARY KEY EQMS_PK'
ALTER TABLE EQUIPMENT_MAINT_STATUS ADD CONSTRAINT EQMS_PK PRIMARY KEY
(
EQUIPMENT_ID,
EQUIP_MAINT_ID,
STATUS_ID
);

\qecho 'CREATING PRIMARY KEY EQMT_PK'
ALTER TABLE EQUIPMENT_MAINT_TYPE ADD CONSTRAINT EQMT_PK PRIMARY KEY
(
CATALOGUE_EQUIP_ID,
MAINT_TYPE
);

\qecho 'CREATING PRIMARY KEY EQS_PK'
ALTER TABLE EQUIPMENT_SPEC ADD CONSTRAINT EQS_PK PRIMARY KEY
(
EQUIPMENT_ID,
SPEC_SET_ID,
SPEC_TYPE,
SPEC_ID
);

\qecho 'CREATING PRIMARY KEY EQSS_PK'
ALTER TABLE EQUIPMENT_SPEC_SET ADD CONSTRAINT EQSS_PK PRIMARY KEY
(
SPEC_SET_ID
);

\qecho 'CREATING PRIMARY KEY EQSSS_PK'
ALTER TABLE EQUIPMENT_SPEC_SET_SPEC ADD CONSTRAINT EQSSS_PK PRIMARY KEY
(
SPEC_SET_ID,
SPEC_TYPE
);

\qecho 'CREATING PRIMARY KEY EQST_PK'
ALTER TABLE EQUIPMENT_STATUS ADD CONSTRAINT EQST_PK PRIMARY KEY
(
EQUIPMENT_ID,
EQUIP_STATUS_ID
);

\qecho 'CREATING PRIMARY KEY EQUS_PK'
ALTER TABLE EQUIPMENT_USE_STAT ADD CONSTRAINT EQUS_PK PRIMARY KEY
(
EQUIPMENT_ID,
SPEC_ID
);

\qecho 'CREATING PRIMARY KEY EQX_PK'
ALTER TABLE EQUIPMENT_XREF ADD CONSTRAINT EQX_PK PRIMARY KEY
(
EQUIPMENT_ID,
EQUIPMENT_PART_ID,
EQUIPMENT_XREF_OBS_NO
);

\qecho 'CREATING PRIMARY KEY FAC_PK'
ALTER TABLE FACILITY ADD CONSTRAINT FAC_PK PRIMARY KEY
(
FACILITY_ID,
FACILITY_TYPE
);

\qecho 'CREATING PRIMARY KEY FACA_PK'
ALTER TABLE FACILITY_ALIAS ADD CONSTRAINT FACA_PK PRIMARY KEY
(
FACILITY_ID,
FACILITY_TYPE,
FACILITY_ALIAS_ID,
SOURCE
);

\qecho 'CREATING PRIMARY KEY FACAR_PK'
ALTER TABLE FACILITY_AREA ADD CONSTRAINT FACAR_PK PRIMARY KEY
(
FACILITY_TYPE,
FACILITY_ID,
AREA_ID,
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY FACBS_PK'
ALTER TABLE FACILITY_BA_SERVICE ADD CONSTRAINT FACBS_PK PRIMARY KEY
(
FACILITY_ID,
FACILITY_TYPE,
PROVIDED_BY,
SERVICE_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY FACC_PK'
ALTER TABLE FACILITY_CLASS ADD CONSTRAINT FACC_PK PRIMARY KEY
(
FACILITY_ID,
FACILITY_TYPE,
FACILITY_CLASS_TYPE,
FACILITY_CLASS_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY FACCMP_PK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_PK PRIMARY KEY
(
FACILITY_ID,
FACILITY_TYPE,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY FACD_PK'
ALTER TABLE FACILITY_DESCRIPTION ADD CONSTRAINT FACD_PK PRIMARY KEY
(
FACILITY_ID,
FACILITY_TYPE,
SPEC_ID
);

\qecho 'CREATING PRIMARY KEY FACEQ_PK'
ALTER TABLE FACILITY_EQUIPMENT ADD CONSTRAINT FACEQ_PK PRIMARY KEY
(
FACILITY_ID,
FACILITY_TYPE,
EQUIPMENT_ID,
INSTALL_OBS_NO
);

\qecho 'CREATING PRIMARY KEY FACF_PK'
ALTER TABLE FACILITY_FIELD ADD CONSTRAINT FACF_PK PRIMARY KEY
(
FACILITY_ID,
FACILITY_TYPE,
FIELD_ID
);

\qecho 'CREATING PRIMARY KEY FACL_PK'
ALTER TABLE FACILITY_LICENSE ADD CONSTRAINT FACL_PK PRIMARY KEY
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID
);

\qecho 'CREATING PRIMARY KEY FACLAL_PK'
ALTER TABLE FACILITY_LIC_ALIAS ADD CONSTRAINT FACLAL_PK PRIMARY KEY
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY FACLA_PK'
ALTER TABLE FACILITY_LIC_AREA ADD CONSTRAINT FACLA_PK PRIMARY KEY
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID,
AREA_ID,
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY FACLC_PK'
ALTER TABLE FACILITY_LIC_COND ADD CONSTRAINT FACLC_PK PRIMARY KEY
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID,
CONDITION_ID
);

\qecho 'CREATING PRIMARY KEY FACLR_PK'
ALTER TABLE FACILITY_LIC_REMARK ADD CONSTRAINT FACLR_PK PRIMARY KEY
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID,
REMARK_ID,
REMARK_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY FACLS_PK'
ALTER TABLE FACILITY_LIC_STATUS ADD CONSTRAINT FACLS_PK PRIMARY KEY
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID,
STATUS_ID
);

\qecho 'CREATING PRIMARY KEY FACLT_PK'
ALTER TABLE FACILITY_LIC_TYPE ADD CONSTRAINT FACLT_PK PRIMARY KEY
(
GRANTED_BY_BA_ID,
FACILITY_LICENSE_TYPE
);

\qecho 'CREATING PRIMARY KEY FACLV_PK'
ALTER TABLE FACILITY_LIC_VIOLATION ADD CONSTRAINT FACLV_PK PRIMARY KEY
(
LICENSE_ID,
FACILITY_TYPE,
FACILITY_ID,
VIOLATION_ID
);

\qecho 'CREATING PRIMARY KEY FACM_PK'
ALTER TABLE FACILITY_MAINTAIN ADD CONSTRAINT FACM_PK PRIMARY KEY
(
FACILITY_ID,
FACILITY_TYPE,
MAINTAIN_ID
);

\qecho 'CREATING PRIMARY KEY FACMS_PK'
ALTER TABLE FACILITY_MAINT_STATUS ADD CONSTRAINT FACMS_PK PRIMARY KEY
(
FACILITY_ID,
FACILITY_TYPE,
MAINTAIN_ID,
STATUS_ID
);

\qecho 'CREATING PRIMARY KEY FACRT_PK'
ALTER TABLE FACILITY_RATE ADD CONSTRAINT FACRT_PK PRIMARY KEY
(
FACILITY_ID,
FACILITY_TYPE,
RATE_SCHEDULE_ID
);

\qecho 'CREATING PRIMARY KEY FACR_PK'
ALTER TABLE FACILITY_RESTRICTION ADD CONSTRAINT FACR_PK PRIMARY KEY
(
FACILITY_ID,
FACILITY_TYPE,
RESTRICTION_ID,
RESTRICTION_VERSION
);

\qecho 'CREATING PRIMARY KEY FACS_PK'
ALTER TABLE FACILITY_STATUS ADD CONSTRAINT FACS_PK PRIMARY KEY
(
FACILITY_ID,
FACILITY_TYPE,
STATUS_ID
);

\qecho 'CREATING PRIMARY KEY FACSU_PK'
ALTER TABLE FACILITY_SUBSTANCE ADD CONSTRAINT FACSU_PK PRIMARY KEY
(
FACILITY_ID,
FACILITY_TYPE,
SUBSTANCE_ID
);

\qecho 'CREATING PRIMARY KEY FACV_PK'
ALTER TABLE FACILITY_VERSION ADD CONSTRAINT FACV_PK PRIMARY KEY
(
FACILITY_ID,
FACILITY_TYPE,
SOURCE
);

\qecho 'CREATING PRIMARY KEY FACX_PK'
ALTER TABLE FACILITY_XREF ADD CONSTRAINT FACX_PK PRIMARY KEY
(
FACILITY_ID,
FACILITY_TYPE,
FACILITY_ID_2,
FACILITY_TYPE_2,
XREF_OBS_NO
);

\qecho 'CREATING PRIMARY KEY FLD_PK'
ALTER TABLE FIELD ADD CONSTRAINT FLD_PK PRIMARY KEY
(
FIELD_ID
);

\qecho 'CREATING PRIMARY KEY FLDA_PK'
ALTER TABLE FIELD_ALIAS ADD CONSTRAINT FLDA_PK PRIMARY KEY
(
FIELD_ID,
FIELD_ALIAS_ID,
SOURCE
);

\qecho 'CREATING PRIMARY KEY FLDAR_PK'
ALTER TABLE FIELD_AREA ADD CONSTRAINT FLDAR_PK PRIMARY KEY
(
FIELD_ID,
AREA_ID,
AREA_TYPE,
AREA_OBS_NO
);

\qecho 'CREATING PRIMARY KEY FLDC_PK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_PK PRIMARY KEY
(
FIELD_ID,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY FLDI_PK'
ALTER TABLE FIELD_INSTRUMENT ADD CONSTRAINT FLDI_PK PRIMARY KEY
(
FIELD_ID,
INSTRUMENT_ID
);

\qecho 'CREATING PRIMARY KEY FLDV_PK'
ALTER TABLE FIELD_VERSION ADD CONSTRAINT FLDV_PK PRIMARY KEY
(
FIELD_ID,
SOURCE
);

\qecho 'CREATING PRIMARY KEY FIN_PK'
ALTER TABLE FINANCE ADD CONSTRAINT FIN_PK PRIMARY KEY
(
FINANCE_ID
);

\qecho 'CREATING PRIMARY KEY FINC_PK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_PK PRIMARY KEY
(
FINANCE_ID,
FINANCE_COMPONENT_ID
);

\qecho 'CREATING PRIMARY KEY FINCS_PK'
ALTER TABLE FIN_COST_SUMMARY ADD CONSTRAINT FINCS_PK PRIMARY KEY
(
COST_ID
);

\qecho 'CREATING PRIMARY KEY FINX_PK'
ALTER TABLE FIN_XREF ADD CONSTRAINT FINX_PK PRIMARY KEY
(
FINANCE_ID1,
FINANCE_ID2
);

\qecho 'CREATING PRIMARY KEY FOS_PK'
ALTER TABLE FOSSIL ADD CONSTRAINT FOS_PK PRIMARY KEY
(
FOSSIL_ID
);

\qecho 'CREATING PRIMARY KEY FOSAG_PK'
ALTER TABLE FOSSIL_AGE ADD CONSTRAINT FOSAG_PK PRIMARY KEY
(
FOSSIL_ID,
AGE_INTERP_ID
);

\qecho 'CREATING PRIMARY KEY FOSAS_PK'
ALTER TABLE FOSSIL_ASSEMBLAGE ADD CONSTRAINT FOSAS_PK PRIMARY KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
TAXON_LEAF_ID,
INTERP_ID
);

\qecho 'CREATING PRIMARY KEY FOSD_PK'
ALTER TABLE FOSSIL_DESC ADD CONSTRAINT FOSD_PK PRIMARY KEY
(
FOSSIL_ID,
FOSSIL_DESC_ID
);

\qecho 'CREATING PRIMARY KEY FOSDO_PK'
ALTER TABLE FOSSIL_DOCUMENT ADD CONSTRAINT FOSDO_PK PRIMARY KEY
(
FOSSIL_ID,
SOURCE_DOCUMENT_ID
);

\qecho 'CREATING PRIMARY KEY FOSA_PK'
ALTER TABLE FOSSIL_EQUIVALENCE ADD CONSTRAINT FOSA_PK PRIMARY KEY
(
FOSSIL_ID,
EQUIV_FOSSIL_ID
);

\qecho 'CREATING PRIMARY KEY FOSNS_PK'
ALTER TABLE FOSSIL_NAME_SET ADD CONSTRAINT FOSNS_PK PRIMARY KEY
(
FOSSIL_NAME_SET_ID
);

\qecho 'CREATING PRIMARY KEY FOSNSF_PK'
ALTER TABLE FOSSIL_NAME_SET_FOSSIL ADD CONSTRAINT FOSNSF_PK PRIMARY KEY
(
FOSSIL_NAME_SET_ID,
FOSSIL_ID
);

\qecho 'CREATING PRIMARY KEY FOSAL_PK'
ALTER TABLE FOSSIL_TAXON_ALIAS ADD CONSTRAINT FOSAL_PK PRIMARY KEY
(
TAXON_LEAF_ID,
FOSSIL_ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY FOSTH_PK'
ALTER TABLE FOSSIL_TAXON_HIER ADD CONSTRAINT FOSTH_PK PRIMARY KEY
(
PARENT_TAXON_LEAF_ID,
CHILD_TAXON_LEAF_ID
);

\qecho 'CREATING PRIMARY KEY FOSTL_PK'
ALTER TABLE FOSSIL_TAXON_LEAF ADD CONSTRAINT FOSTL_PK PRIMARY KEY
(
TAXON_LEAF_ID
);

\qecho 'CREATING PRIMARY KEY FOSX_PK'
ALTER TABLE FOSSIL_XREF ADD CONSTRAINT FOSX_PK PRIMARY KEY
(
FOSSIL_ID1,
FOSSIL_ID2,
FOSSIL_XREF_ID
);

\qecho 'CREATING PRIMARY KEY HI_PK'
ALTER TABLE HSE_INCIDENT ADD CONSTRAINT HI_PK PRIMARY KEY
(
INCIDENT_ID
);

\qecho 'CREATING PRIMARY KEY HIB_PK'
ALTER TABLE HSE_INCIDENT_BA ADD CONSTRAINT HIB_PK PRIMARY KEY
(
INCIDENT_ID,
PARTY_OBS_NO,
PARTY_ROLE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY HIC_PK'
ALTER TABLE HSE_INCIDENT_CAUSE ADD CONSTRAINT HIC_PK PRIMARY KEY
(
INCIDENT_ID,
CAUSE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY HICL_PK'
ALTER TABLE HSE_INCIDENT_CLASS ADD CONSTRAINT HICL_PK PRIMARY KEY
(
INCIDENT_CLASS_ID
);

\qecho 'CREATING PRIMARY KEY HICA_PK'
ALTER TABLE HSE_INCIDENT_CLASS_ALIAS ADD CONSTRAINT HICA_PK PRIMARY KEY
(
INCIDENT_CLASS_ID,
ALIAS_OBS_NO
);

\qecho 'CREATING PRIMARY KEY HICOM_PK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_PK PRIMARY KEY
(
INCIDENT_ID,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY HID_PK'
ALTER TABLE HSE_INCIDENT_DETAIL ADD CONSTRAINT HID_PK PRIMARY KEY
(
INCIDENT_ID,
DETAIL_OBS_NO
);

\qecho 'CREATING PRIMARY KEY HIE_PK'
ALTER TABLE HSE_INCIDENT_EQUIP ADD CONSTRAINT HIE_PK PRIMARY KEY
(
INCIDENT_ID,
EQUIP_OBS_NO,
EQUIP_ROLE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY HIEQ_PK'
ALTER TABLE HSE_INCIDENT_EQUIV ADD CONSTRAINT HIEQ_PK PRIMARY KEY
(
INCIDENT_SET_ID,
INCIDENT_TYPE_ID,
INCIDENT_SET_ID2,
INCIDENT_TYPE_ID2
);

\qecho 'CREATING PRIMARY KEY HII_PK'
ALTER TABLE HSE_INCIDENT_INTERACTION ADD CONSTRAINT HII_PK PRIMARY KEY
(
INCIDENT_ID,
INTERACTION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY HIRK_PK'
ALTER TABLE HSE_INCIDENT_REMARK ADD CONSTRAINT HIRK_PK PRIMARY KEY
(
INCIDENT_ID,
REMARK_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY HIRE_PK'
ALTER TABLE HSE_INCIDENT_RESPONSE ADD CONSTRAINT HIRE_PK PRIMARY KEY
(
INCIDENT_ID,
RESPONSE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY HIS_PK'
ALTER TABLE HSE_INCIDENT_SET ADD CONSTRAINT HIS_PK PRIMARY KEY
(
INCIDENT_SET_ID
);

\qecho 'CREATING PRIMARY KEY HISV_PK'
ALTER TABLE HSE_INCIDENT_SEVERITY ADD CONSTRAINT HISV_PK PRIMARY KEY
(
INCIDENT_SET_ID,
INCIDENT_TYPE_ID,
INCIDENT_SEVERITY_ID
);

\qecho 'CREATING PRIMARY KEY HISA_PK'
ALTER TABLE HSE_INCIDENT_SEV_ALIAS ADD CONSTRAINT HISA_PK PRIMARY KEY
(
INCIDENT_SET_ID,
INCIDENT_TYPE_ID,
INCIDENT_SEVERITY_ID,
SEVERITY_ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY HISU_PK'
ALTER TABLE HSE_INCIDENT_SUBSTANCE ADD CONSTRAINT HISU_PK PRIMARY KEY
(
INCIDENT_ID,
INCIDENT_SUBSTANCE,
SUBSTANCE_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY HIT_PK'
ALTER TABLE HSE_INCIDENT_TYPE ADD CONSTRAINT HIT_PK PRIMARY KEY
(
INCIDENT_SET_ID,
INCIDENT_TYPE_ID
);

\qecho 'CREATING PRIMARY KEY HITA_PK'
ALTER TABLE HSE_INCIDENT_TYPE_ALIAS ADD CONSTRAINT HITA_PK PRIMARY KEY
(
INCIDENT_SET_ID,
INCIDENT_TYPE_ID,
INCIDENT_ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY HIW_PK'
ALTER TABLE HSE_INCIDENT_WEATHER ADD CONSTRAINT HIW_PK PRIMARY KEY
(
INCIDENT_ID,
WEATHER_OBS_NO
);

\qecho 'CREATING PRIMARY KEY INS_PK'
ALTER TABLE INSTRUMENT ADD CONSTRAINT INS_PK PRIMARY KEY
(
INSTRUMENT_ID
);

\qecho 'CREATING PRIMARY KEY INSA_PK'
ALTER TABLE INSTRUMENT_AREA ADD CONSTRAINT INSA_PK PRIMARY KEY
(
INSTRUMENT_ID,
AREA_ID,
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY INSCOMP_PK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_PK PRIMARY KEY
(
INSTRUMENT_ID,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY INSD_PK'
ALTER TABLE INSTRUMENT_DETAIL ADD CONSTRAINT INSD_PK PRIMARY KEY
(
INSTRUMENT_ID,
DETAIL_ID
);

\qecho 'CREATING PRIMARY KEY INSX_PK'
ALTER TABLE INSTRUMENT_XREF ADD CONSTRAINT INSX_PK PRIMARY KEY
(
INSTRUMENT_ID,
PARENT_INSTRUMENT_ID
);

\qecho 'CREATING PRIMARY KEY INT_PK'
ALTER TABLE INTEREST_SET ADD CONSTRAINT INT_PK PRIMARY KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY INTCOM_PK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_PK PRIMARY KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY INTP_PK'
ALTER TABLE INT_SET_PARTNER ADD CONSTRAINT INTP_PK PRIMARY KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO,
PARTNER_BA_ID,
PARTNER_OBS_NO
);

\qecho 'CREATING PRIMARY KEY INTPC_PK'
ALTER TABLE INT_SET_PARTNER_CONT ADD CONSTRAINT INTPC_PK PRIMARY KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO,
PARTNER_BA_ID,
PARTNER_OBS_NO,
CONTACT_BA_ID,
CONTACT_OBS_NO,
CONTACT_ID
);

\qecho 'CREATING PRIMARY KEY INTS_PK'
ALTER TABLE INT_SET_STATUS ADD CONSTRAINT INTS_PK PRIMARY KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO,
STATUS_OBS_NO
);

\qecho 'CREATING PRIMARY KEY INTX_PK'
ALTER TABLE INT_SET_XREF ADD CONSTRAINT INTX_PK PRIMARY KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO,
INTEREST_SET_ID_2,
INTEREST_SET_SEQ_NO_2,
INT_SET_XREF_OBS_NO
);

\qecho 'CREATING PRIMARY KEY LRAG_PK'
ALTER TABLE LAND_AGREEMENT ADD CONSTRAINT LRAG_PK PRIMARY KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);

\qecho 'CREATING PRIMARY KEY LRAP_PK'
ALTER TABLE LAND_AGREE_PART ADD CONSTRAINT LRAP_PK PRIMARY KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);

\qecho 'CREATING PRIMARY KEY LRAL_PK'
ALTER TABLE LAND_ALIAS ADD CONSTRAINT LRAL_PK PRIMARY KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
LR_ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY LRAR_PK'
ALTER TABLE LAND_AREA ADD CONSTRAINT LRAR_PK PRIMARY KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
AREA_ID,
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY LRBS_PK'
ALTER TABLE LAND_BA_SERVICE ADD CONSTRAINT LRBS_PK PRIMARY KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
PROVIDED_BY,
SERVICE_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY LRO_PK'
ALTER TABLE LAND_OCCUPANT ADD CONSTRAINT LRO_PK PRIMARY KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
BUSINESS_ASSOCIATE_ID,
OCCUPANCY_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY LRRM_PK'
ALTER TABLE LAND_REMARK ADD CONSTRAINT LRRM_PK PRIMARY KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
REMARK_ID,
REMARK_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY LR_PK'
ALTER TABLE LAND_RIGHT ADD CONSTRAINT LR_PK PRIMARY KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);

\qecho 'CREATING PRIMARY KEY LRAPP_PK'
ALTER TABLE LAND_RIGHT_APPLIC ADD CONSTRAINT LRAPP_PK PRIMARY KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
APPLICATION_ID
);

\qecho 'CREATING PRIMARY KEY LRBAL_PK'
ALTER TABLE LAND_RIGHT_BA_LIC ADD CONSTRAINT LRBAL_PK PRIMARY KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
LICENSEE_BA_ID,
LICENSE_ID
);

\qecho 'CREATING PRIMARY KEY LRCOMP_PK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_PK PRIMARY KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY LRFAC_PK'
ALTER TABLE LAND_RIGHT_FACILITY ADD CONSTRAINT LRFAC_PK PRIMARY KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
FACILITY_ID,
FACILITY_TYPE
);

\qecho 'CREATING PRIMARY KEY LRFLD_PK'
ALTER TABLE LAND_RIGHT_FIELD ADD CONSTRAINT LRFLD_PK PRIMARY KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
FIELD_ID
);

\qecho 'CREATING PRIMARY KEY LRI_PK'
ALTER TABLE LAND_RIGHT_INSTRUMENT ADD CONSTRAINT LRI_PK PRIMARY KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
INSTRUMENT_ID,
LR_INST_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY LRP_PK'
ALTER TABLE LAND_RIGHT_POOL ADD CONSTRAINT LRP_PK PRIMARY KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
POOL_ID,
OBS_NO
);

\qecho 'CREATING PRIMARY KEY LRR_PK'
ALTER TABLE LAND_RIGHT_REST ADD CONSTRAINT LRR_PK PRIMARY KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
RESTRICTION_ID,
RESTRICTION_VERSION
);

\qecho 'CREATING PRIMARY KEY LRRR_PK'
ALTER TABLE LAND_RIGHT_REST_REM ADD CONSTRAINT LRRR_PK PRIMARY KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
RESTRICTION_ID,
RESTRICTION_VERSION,
REMARK_ID,
REMARK_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY LRW_PK'
ALTER TABLE LAND_RIGHT_WELL ADD CONSTRAINT LRW_PK PRIMARY KEY
(
UWI,
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
LR_WELL_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY LRWS_PK'
ALTER TABLE LAND_RIGHT_WELL_SUBST ADD CONSTRAINT LRWS_PK PRIMARY KEY
(
UWI,
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
LR_WELL_SEQ_NO,
SUBSTANCE_ID
);

\qecho 'CREATING PRIMARY KEY LS_PK'
ALTER TABLE LAND_SALE ADD CONSTRAINT LS_PK PRIMARY KEY
(
JURISDICTION,
LAND_SALE_NUMBER
);

\qecho 'CREATING PRIMARY KEY LSBS_PK'
ALTER TABLE LAND_SALE_BA_SERVICE ADD CONSTRAINT LSBS_PK PRIMARY KEY
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID,
PROVIDED_BY,
SERVICE_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY LSOB_PK'
ALTER TABLE LAND_SALE_BID ADD CONSTRAINT LSOB_PK PRIMARY KEY
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID,
LAND_OFFERING_BID_ID
);

\qecho 'CREATING PRIMARY KEY LSBS1_PK'
ALTER TABLE LAND_SALE_BID_SET ADD CONSTRAINT LSBS1_PK PRIMARY KEY
(
LAND_SALE_BID_SET_ID
);

\qecho 'CREATING PRIMARY KEY LSBSB_PK'
ALTER TABLE LAND_SALE_BID_SET_BID ADD CONSTRAINT LSBSB_PK PRIMARY KEY
(
LAND_SALE_BID_SET_ID,
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID,
LAND_OFFERING_BID_ID
);

\qecho 'CREATING PRIMARY KEY LSF_PK'
ALTER TABLE LAND_SALE_FEE ADD CONSTRAINT LSF_PK PRIMARY KEY
(
JURISDICTION,
LAND_SALE_NUMBER,
RATE_SCHEDULE_ID
);

\qecho 'CREATING PRIMARY KEY LSO_PK'
ALTER TABLE LAND_SALE_OFFERING ADD CONSTRAINT LSO_PK PRIMARY KEY
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID
);

\qecho 'CREATING PRIMARY KEY LSOA_PK'
ALTER TABLE LAND_SALE_OFFERING_AREA ADD CONSTRAINT LSOA_PK PRIMARY KEY
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID,
AREA_ID,
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY LSRQ_PK'
ALTER TABLE LAND_SALE_REQUEST ADD CONSTRAINT LSRQ_PK PRIMARY KEY
(
LAND_REQUEST_ID
);

\qecho 'CREATING PRIMARY KEY LSOR_PK'
ALTER TABLE LAND_SALE_RESTRICTION ADD CONSTRAINT LSOR_PK PRIMARY KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION,
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID
);

\qecho 'CREATING PRIMARY KEY LSRR_PK'
ALTER TABLE LAND_SALE_REST_REMARK ADD CONSTRAINT LSRR_PK PRIMARY KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION,
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID,
RESTRICTION_REMARK_ID
);

\qecho 'CREATING PRIMARY KEY LSWB_PK'
ALTER TABLE LAND_SALE_WORK_BID ADD CONSTRAINT LSWB_PK PRIMARY KEY
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID,
LAND_OFFERING_BID_ID,
WORK_BID_ID
);

\qecho 'CREATING PRIMARY KEY LRSZ_PK'
ALTER TABLE LAND_SIZE ADD CONSTRAINT LRSZ_PK PRIMARY KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
SIZE_TYPE,
SIZE_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY LRST_PK'
ALTER TABLE LAND_STATUS ADD CONSTRAINT LRST_PK PRIMARY KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
STATUS_TYPE,
LAND_RIGHT_STATUS,
STATUS_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY LRTM_PK'
ALTER TABLE LAND_TERMINATION ADD CONSTRAINT LRTM_PK PRIMARY KEY
(
LR_TERMINATION_ID,
LR_TERMINATION_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY LRT_PK'
ALTER TABLE LAND_TITLE ADD CONSTRAINT LRT_PK PRIMARY KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);

\qecho 'CREATING PRIMARY KEY LRTF_PK'
ALTER TABLE LAND_TRACT_FACTOR ADD CONSTRAINT LRTF_PK PRIMARY KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
TRACT_FACTOR_OBS_NO
);

\qecho 'CREATING PRIMARY KEY LRU_PK'
ALTER TABLE LAND_UNIT ADD CONSTRAINT LRU_PK PRIMARY KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);

\qecho 'CREATING PRIMARY KEY LRUT_PK'
ALTER TABLE LAND_UNIT_TRACT ADD CONSTRAINT LRUT_PK PRIMARY KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);

\qecho 'CREATING PRIMARY KEY LRX_PK'
ALTER TABLE LAND_XREF ADD CONSTRAINT LRX_PK PRIMARY KEY
(
PARENT_LAND_RIGHT_SUBTYPE,
CHILD_LAND_RIGHT_SUBTYPE,
PARENT_LAND_RIGHT_ID,
CHILD_LAND_RIGHT_ID,
LR_XREF_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY LECTR_PK'
ALTER TABLE LEGAL_CARTER_LOC ADD CONSTRAINT LECTR_PK PRIMARY KEY
(
LEGAL_CARTER_LOC_ID,
LOCATION_TYPE,
SOURCE
);

\qecho 'CREATING PRIMARY KEY LECON_PK'
ALTER TABLE LEGAL_CONGRESS_LOC ADD CONSTRAINT LECON_PK PRIMARY KEY
(
LEGAL_CONGRESS_LOC_ID,
LOCATION_TYPE,
SOURCE
);

\qecho 'CREATING PRIMARY KEY LEDLS_PK'
ALTER TABLE LEGAL_DLS_LOC ADD CONSTRAINT LEDLS_PK PRIMARY KEY
(
LEGAL_DLS_LOC_ID,
LOCATION_TYPE,
SOURCE
);

\qecho 'CREATING PRIMARY KEY LEFPS_PK'
ALTER TABLE LEGAL_FPS_LOC ADD CONSTRAINT LEFPS_PK PRIMARY KEY
(
LEGAL_FPS_LOC_ID,
LOCATION_TYPE,
SOURCE
);

\qecho 'CREATING PRIMARY KEY LEGEO_PK'
ALTER TABLE LEGAL_GEODETIC_LOC ADD CONSTRAINT LEGEO_PK PRIMARY KEY
(
LEGAL_GEODETIC_LOC_ID,
LOCATION_TYPE,
SOURCE
);

\qecho 'CREATING PRIMARY KEY LELA_PK'
ALTER TABLE LEGAL_LOC_AREA ADD CONSTRAINT LELA_PK PRIMARY KEY
(
LEGAL_LOC_ID,
LOCATION_TYPE,
AREA_ID,
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY LELR_PK'
ALTER TABLE LEGAL_LOC_REMARK ADD CONSTRAINT LELR_PK PRIMARY KEY
(
LEGAL_LOC_REMARK_ID,
LOCATION_TYPE,
SOURCE,
REMARK_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY LENE_PK'
ALTER TABLE LEGAL_NE_LOC ADD CONSTRAINT LENE_PK PRIMARY KEY
(
LEGAL_NE_LOC_ID,
LOCATION_TYPE,
SOURCE
);

\qecho 'CREATING PRIMARY KEY LENSEA_PK'
ALTER TABLE LEGAL_NORTH_SEA_LOC ADD CONSTRAINT LENSEA_PK PRIMARY KEY
(
LEGAL_NORTH_SEA_LOC_ID,
LOCATION_TYPE,
SOURCE
);

\qecho 'CREATING PRIMARY KEY LENTS_PK'
ALTER TABLE LEGAL_NTS_LOC ADD CONSTRAINT LENTS_PK PRIMARY KEY
(
LEGAL_NTS_LOC_ID,
LOCATION_TYPE,
SOURCE
);

\qecho 'CREATING PRIMARY KEY LEOFF_PK'
ALTER TABLE LEGAL_OFFSHORE_LOC ADD CONSTRAINT LEOFF_PK PRIMARY KEY
(
LEGAL_OFFSHORE_LOC_ID,
LOCATION_TYPE,
SOURCE
);

\qecho 'CREATING PRIMARY KEY LEOH_PK'
ALTER TABLE LEGAL_OHIO_LOC ADD CONSTRAINT LEOH_PK PRIMARY KEY
(
LEGAL_OHIO_LOC_ID,
LOCATION_TYPE,
SOURCE
);

\qecho 'CREATING PRIMARY KEY LETX_PK'
ALTER TABLE LEGAL_TEXAS_LOC ADD CONSTRAINT LETX_PK PRIMARY KEY
(
LEGAL_TEXAS_LOC_ID,
LOCATION_TYPE,
SOURCE
);

\qecho 'CREATING PRIMARY KEY LIDEI_PK'
ALTER TABLE LITH_DEP_ENV_INT ADD CONSTRAINT LIDEI_PK PRIMARY KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO
);

\qecho 'CREATING PRIMARY KEY LID_PK'
ALTER TABLE LITH_DIAGENESIS ADD CONSTRAINT LID_PK PRIMARY KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
ROCK_TYPE,
ROCK_TYPE_OBS_NO,
DIAGENESIS_TYPE
);

\qecho 'CREATING PRIMARY KEY LIGS_PK'
ALTER TABLE LITH_GRAIN_SIZE ADD CONSTRAINT LIGS_PK PRIMARY KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
ROCK_TYPE,
ROCK_TYPE_OBS_NO,
SCALE_SCHEME,
GRAIN_SIZE
);

\qecho 'CREATING PRIMARY KEY LII_PK'
ALTER TABLE LITH_INTERVAL ADD CONSTRAINT LII_PK PRIMARY KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO
);

\qecho 'CREATING PRIMARY KEY LIL_PK'
ALTER TABLE LITH_LOG ADD CONSTRAINT LIL_PK PRIMARY KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);

\qecho 'CREATING PRIMARY KEY LITHBS_PK'
ALTER TABLE LITH_LOG_BA_SERVICE ADD CONSTRAINT LITHBS_PK PRIMARY KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
PROVIDED_BY,
SERVICE_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY LILC_PK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_PK PRIMARY KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY LILR_PK'
ALTER TABLE LITH_LOG_REMARK ADD CONSTRAINT LILR_PK PRIMARY KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
REMARK_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY LIMS_PK'
ALTER TABLE LITH_MEASURED_SEC ADD CONSTRAINT LIMS_PK PRIMARY KEY
(
MEAS_SECTION_ID,
SOURCE
);

\qecho 'CREATING PRIMARY KEY LIP_PK'
ALTER TABLE LITH_POROSITY ADD CONSTRAINT LIP_PK PRIMARY KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
ROCK_TYPE,
ROCK_TYPE_OBS_NO,
POROSITY_GRADE
);

\qecho 'CREATING PRIMARY KEY LIR_PK'
ALTER TABLE LITH_ROCKPART ADD CONSTRAINT LIR_PK PRIMARY KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
ROCK_TYPE,
ROCK_TYPE_OBS_NO,
ROCKPART_NAME
);

\qecho 'CREATING PRIMARY KEY LIRPC_PK'
ALTER TABLE LITH_ROCKPART_COLOR ADD CONSTRAINT LIRPC_PK PRIMARY KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
ROCK_TYPE,
ROCK_TYPE_OBS_NO,
ROCKPART_NAME,
BASIC_COLOR
);

\qecho 'CREATING PRIMARY KEY LIRGS_PK'
ALTER TABLE LITH_ROCKPART_GRAIN_SIZE ADD CONSTRAINT LIRGS_PK PRIMARY KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
SCALE_SCHEME,
ROCK_TYPE,
ROCK_TYPE_OBS_NO,
ROCKPART_NAME,
GRAIN_SIZE
);

\qecho 'CREATING PRIMARY KEY LIRC_PK'
ALTER TABLE LITH_ROCK_COLOR ADD CONSTRAINT LIRC_PK PRIMARY KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
ROCK_TYPE,
ROCK_TYPE_OBS_NO,
BASIC_COLOR
);

\qecho 'CREATING PRIMARY KEY LIRS_PK'
ALTER TABLE LITH_ROCK_STRUCTURE ADD CONSTRAINT LIRS_PK PRIMARY KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
ROCK_TYPE,
ROCK_TYPE_OBS_NO,
STRUCTURE_TYPE
);

\qecho 'CREATING PRIMARY KEY LIRT_PK'
ALTER TABLE LITH_ROCK_TYPE ADD CONSTRAINT LIRT_PK PRIMARY KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
ROCK_TYPE,
ROCK_TYPE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY LIS_PK'
ALTER TABLE LITH_STRUCTURE ADD CONSTRAINT LIS_PK PRIMARY KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
STRUCTURE_TYPE
);

\qecho 'CREATING PRIMARY KEY NOTI_PK'
ALTER TABLE NOTIFICATION ADD CONSTRAINT NOTI_PK PRIMARY KEY
(
NOTIFICATION_ID
);

\qecho 'CREATING PRIMARY KEY NOTC_PK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_PK PRIMARY KEY
(
NOTIFICATION_ID,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY NOTB_PK'
ALTER TABLE NOTIF_BA ADD CONSTRAINT NOTB_PK PRIMARY KEY
(
NOTIFICATION_ID,
BUSINESS_ASSOCIATE_ID
);

\qecho 'CREATING PRIMARY KEY OB_PK'
ALTER TABLE OBLIGATION ADD CONSTRAINT OB_PK PRIMARY KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY OBCOM_PK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_PK PRIMARY KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY OBAD_PK'
ALTER TABLE OBLIG_ALLOW_DEDUCTION ADD CONSTRAINT OBAD_PK PRIMARY KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO,
ALLOW_DEDUCTION_ID
);

\qecho 'CREATING PRIMARY KEY OBBS_PK'
ALTER TABLE OBLIG_BA_SERVICE ADD CONSTRAINT OBBS_PK PRIMARY KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO,
PROVIDED_BY,
OBLIG_SERVICE_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY OBC_PK'
ALTER TABLE OBLIG_CALC ADD CONSTRAINT OBC_PK PRIMARY KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO,
CALCULATION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY OBD_PK'
ALTER TABLE OBLIG_DEDUCTION ADD CONSTRAINT OBD_PK PRIMARY KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO,
DEDUCTION_ID
);

\qecho 'CREATING PRIMARY KEY OBDC_PK'
ALTER TABLE OBLIG_DEDUCT_CALC ADD CONSTRAINT OBDC_PK PRIMARY KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO,
DEDUCTION_ID,
CALCULATION_ID
);

\qecho 'CREATING PRIMARY KEY OBP_PK'
ALTER TABLE OBLIG_PAYMENT ADD CONSTRAINT OBP_PK PRIMARY KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO,
PAYEE_PAYOR_BA_ID,
PAYEE_PAYOR
);

\qecho 'CREATING PRIMARY KEY OBPI_PK'
ALTER TABLE OBLIG_PAYMENT_INSTR ADD CONSTRAINT OBPI_PK PRIMARY KEY
(
PAYEE_BA_ID,
PAYMENT_INSTRUCTION_ID
);

\qecho 'CREATING PRIMARY KEY OBPR_PK'
ALTER TABLE OBLIG_PAYMENT_RATE ADD CONSTRAINT OBPR_PK PRIMARY KEY
(
JURISDICTION,
PAY_RATE_TYPE,
PAYMENT_RATE_ID
);

\qecho 'CREATING PRIMARY KEY OBPD_PK'
ALTER TABLE OBLIG_PAY_DETAIL ADD CONSTRAINT OBPD_PK PRIMARY KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO,
PAYEE_PAYOR_BA_ID,
PAYEE_PAYOR,
DETAIL_ID
);

\qecho 'CREATING PRIMARY KEY OBR_PK'
ALTER TABLE OBLIG_REMARK ADD CONSTRAINT OBR_PK PRIMARY KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO,
REMARK_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY OBS_PK'
ALTER TABLE OBLIG_SUBSTANCE ADD CONSTRAINT OBS_PK PRIMARY KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO,
SUBSTANCE_ID,
SUBSTANCE_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY OBT_PK'
ALTER TABLE OBLIG_TYPE ADD CONSTRAINT OBT_PK PRIMARY KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO,
LAND_OBLIG_TYPE
);

\qecho 'CREATING PRIMARY KEY OBX_PK'
ALTER TABLE OBLIG_XREF ADD CONSTRAINT OBX_PK PRIMARY KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO,
OBLIGATION_ID_2,
OBLIGATION_SEQ_NO_2,
XREF_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY PAAQ_PK'
ALTER TABLE PALEO_ABUND_QUALIFIER ADD CONSTRAINT PAAQ_PK PRIMARY KEY
(
QUALIFIER_ID
);

\qecho 'CREATING PRIMARY KEY PAAS_PK'
ALTER TABLE PALEO_ABUND_SCHEME ADD CONSTRAINT PAAS_PK PRIMARY KEY
(
SCHEME_ID,
ABUND_QUALIFIER_ID
);

\qecho 'CREATING PRIMARY KEY PACL_PK'
ALTER TABLE PALEO_CLIMATE ADD CONSTRAINT PACL_PK PRIMARY KEY
(
CLIMATE_ID
);

\qecho 'CREATING PRIMARY KEY PACO_PK'
ALTER TABLE PALEO_CONFIDENCE ADD CONSTRAINT PACO_PK PRIMARY KEY
(
CONFIDENCE_ID
);

\qecho 'CREATING PRIMARY KEY PAFI_PK'
ALTER TABLE PALEO_FOSSIL_IND ADD CONSTRAINT PAFI_PK PRIMARY KEY
(
PALEO_SUMMARY_ID,
FOSSIL_DETAIL_ID,
FOSSIL_ID,
INDICATOR_ID
);

\qecho 'CREATING PRIMARY KEY PAFIN_PK'
ALTER TABLE PALEO_FOSSIL_INTERP ADD CONSTRAINT PAFIN_PK PRIMARY KEY
(
PALEO_SUMMARY_ID,
DETAIL_ID,
FOSSIL_DETAIL_ID,
FOSSIL_ID
);

\qecho 'CREATING PRIMARY KEY PAFL_PK'
ALTER TABLE PALEO_FOSSIL_LIST ADD CONSTRAINT PAFL_PK PRIMARY KEY
(
PALEO_SUMMARY_ID,
FOSSIL_DETAIL_ID,
FOSSIL_ID
);

\qecho 'CREATING PRIMARY KEY PAFO_PK'
ALTER TABLE PALEO_FOSSIL_OBS ADD CONSTRAINT PAFO_PK PRIMARY KEY
(
PALEO_SUMMARY_ID,
FOSSIL_DETAIL_ID,
FOSSIL_ID,
OBSERVATION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PAI_PK'
ALTER TABLE PALEO_INTERP ADD CONSTRAINT PAI_PK PRIMARY KEY
(
PALEO_SUMMARY_ID,
DETAIL_ID
);

\qecho 'CREATING PRIMARY KEY PAOQ_PK'
ALTER TABLE PALEO_OBS_QUALIFIER ADD CONSTRAINT PAOQ_PK PRIMARY KEY
(
QUALIFIER_ID
);

\qecho 'CREATING PRIMARY KEY PASU_PK'
ALTER TABLE PALEO_SUMMARY ADD CONSTRAINT PASU_PK PRIMARY KEY
(
PALEO_SUMMARY_ID
);

\qecho 'CREATING PRIMARY KEY PASA_PK'
ALTER TABLE PALEO_SUM_AUTHOR ADD CONSTRAINT PASA_PK PRIMARY KEY
(
PALEO_SUMMARY_ID,
AUTHOR_ID
);

\qecho 'CREATING PRIMARY KEY PASCOM_PK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_PK PRIMARY KEY
(
PALEO_SUMMARY_ID,
PALEO_COMPONENT_ID
);

\qecho 'CREATING PRIMARY KEY PASI_PK'
ALTER TABLE PALEO_SUM_INTERVAL ADD CONSTRAINT PASI_PK PRIMARY KEY
(
PALEO_SUMMARY_ID,
INTERVAL_ID
);

\qecho 'CREATING PRIMARY KEY PASS_PK'
ALTER TABLE PALEO_SUM_SAMPLE ADD CONSTRAINT PASS_PK PRIMARY KEY
(
PALEO_SUMMARY_ID,
LITH_SAMPLE_ID
);

\qecho 'CREATING PRIMARY KEY PASX_PK'
ALTER TABLE PALEO_SUM_XREF ADD CONSTRAINT PASX_PK PRIMARY KEY
(
PALEO_SUMMARY_ID1,
PALEO_SUMMARY_ID2
);

\qecho 'CREATING PRIMARY KEY PDE_PK'
ALTER TABLE PDEN ADD CONSTRAINT PDE_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);

\qecho 'CREATING PRIMARY KEY PDENAF_PK'
ALTER TABLE PDEN_ALLOC_FACTOR ADD CONSTRAINT PDENAF_PK PRIMARY KEY
(
FROM_PDEN_SUBTYPE,
FROM_PDEN_ID,
FROM_PDEN_SOURCE,
TO_PDEN_SUBTYPE,
TO_PDEN_ID,
TO_PDEN_SOURCE,
ALLOCATION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PDENAR_PK'
ALTER TABLE PDEN_AREA ADD CONSTRAINT PDENAR_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
AREA_ID,
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY PDENBA_PK'
ALTER TABLE PDEN_BUSINESS_ASSOC ADD CONSTRAINT PDENBA_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
);

\qecho 'CREATING PRIMARY KEY PDENC_PK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PDENDFC_PK'
ALTER TABLE PDEN_DECLINE_CASE ADD CONSTRAINT PDENDFC_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
PRODUCT_TYPE,
CASE_ID
);

\qecho 'CREATING PRIMARY KEY PDENDCO_PK'
ALTER TABLE PDEN_DECLINE_CONDITION ADD CONSTRAINT PDENDCO_PK PRIMARY KEY
(
PDEN_ID,
PDEN_SUBTYPE,
PDEN_SOURCE,
PRODUCT_TYPE,
CASE_ID,
CONDITION_ID,
PERIOD_TYPE,
PERIOD_ID
);

\qecho 'CREATING PRIMARY KEY PDENDF_PK'
ALTER TABLE PDEN_DECLINE_SEGMENT ADD CONSTRAINT PDENDF_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
CASE_ID,
SEGMENT_ID
);

\qecho 'CREATING PRIMARY KEY PDENFAC_PK'
ALTER TABLE PDEN_FACILITY ADD CONSTRAINT PDENFAC_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
);

\qecho 'CREATING PRIMARY KEY PDENFLD_PK'
ALTER TABLE PDEN_FIELD ADD CONSTRAINT PDENFLD_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
);

\qecho 'CREATING PRIMARY KEY PDENFM_PK'
ALTER TABLE PDEN_FLOW_MEASUREMENT ADD CONSTRAINT PDENFM_PK PRIMARY KEY
(
PDEN_ID,
PDEN_SUBTYPE,
PDEN_SOURCE,
PRODUCT_TYPE,
AMENDMENT_SEQ_NO,
PERIOD_TYPE,
MEASUREMENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PDENIA_PK'
ALTER TABLE PDEN_IN_AREA ADD CONSTRAINT PDENIA_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
AREA_ID,
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY PDENLR_PK'
ALTER TABLE PDEN_LAND_RIGHT ADD CONSTRAINT PDENLR_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
);

\qecho 'CREATING PRIMARY KEY PDENLU_PK'
ALTER TABLE PDEN_LEASE_UNIT ADD CONSTRAINT PDENLU_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
);

\qecho 'CREATING PRIMARY KEY PDENMB_PK'
ALTER TABLE PDEN_MATERIAL_BAL ADD CONSTRAINT PDENMB_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
PRODUCT_TYPE,
CASE_ID
);

\qecho 'CREATING PRIMARY KEY PDENOH_PK'
ALTER TABLE PDEN_OPER_HIST ADD CONSTRAINT PDENOH_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
BUSINESS_ASSOCIATE_ID,
OPERATOR_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PDENO_PK'
ALTER TABLE PDEN_OTHER ADD CONSTRAINT PDENO_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
);

\qecho 'CREATING PRIMARY KEY PDENP_PK'
ALTER TABLE PDEN_POOL ADD CONSTRAINT PDENP_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
);

\qecho 'CREATING PRIMARY KEY PDENPS_PK'
ALTER TABLE PDEN_PROD_STRING ADD CONSTRAINT PDENPS_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
);

\qecho 'CREATING PRIMARY KEY PDENPSX_PK'
ALTER TABLE PDEN_PROD_STRING_XREF ADD CONSTRAINT PDENPSX_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
UWI,
STRING_SOURCE,
STRING_ID,
PDEN_PRS_XREF_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY PDENPSA_PK'
ALTER TABLE PDEN_PR_STR_ALLOWABLE ADD CONSTRAINT PDENPSA_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
UWI,
STRING_SOURCE,
STRING_ID,
PDEN_PRS_XREF_SEQ_NO,
ALLOWABLE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PDENPSF_PK'
ALTER TABLE PDEN_PR_STR_FORM ADD CONSTRAINT PDENPSF_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
);

\qecho 'CREATING PRIMARY KEY PDENR_PK'
ALTER TABLE PDEN_RESENT ADD CONSTRAINT PDENR_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
);

\qecho 'CREATING PRIMARY KEY PDENRC_PK'
ALTER TABLE PDEN_RESENT_CLASS ADD CONSTRAINT PDENRC_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
);

\qecho 'CREATING PRIMARY KEY PDENSH_PK'
ALTER TABLE PDEN_STATUS_HIST ADD CONSTRAINT PDENSH_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
STATUS_ID
);

\qecho 'CREATING PRIMARY KEY PDENVA_PK'
ALTER TABLE PDEN_VOLUME_ANALYSIS ADD CONSTRAINT PDENVA_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
PRODUCT_TYPE,
CASE_ID
);

\qecho 'CREATING PRIMARY KEY PDENVD_PK'
ALTER TABLE PDEN_VOL_DISPOSITION ADD CONSTRAINT PDENVD_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
VOLUME_METHOD,
ACTIVITY_TYPE,
PRODUCT_TYPE,
PERIOD_TYPE,
DISPOSITION_OBS_NO,
AMENDMENT_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY PDENVR_PK'
ALTER TABLE PDEN_VOL_REGIME ADD CONSTRAINT PDENVR_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
VOLUME_REGIME_ID,
PDEN_REGIME_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PDENVS_PK'
ALTER TABLE PDEN_VOL_SUMMARY ADD CONSTRAINT PDENVS_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PERIOD_ID,
PDEN_SOURCE,
VOLUME_METHOD,
ACTIVITY_TYPE,
PERIOD_TYPE,
AMENDMENT_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY PDENVSO_PK'
ALTER TABLE PDEN_VOL_SUMM_OTHER ADD CONSTRAINT PDENVSO_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
VOLUME_METHOD,
ACTIVITY_TYPE,
PERIOD_TYPE,
PDEN_PERIOD_ID,
AMENDMENT_SEQ_NO,
PRODUCT_TYPE
);

\qecho 'CREATING PRIMARY KEY PDENW_PK'
ALTER TABLE PDEN_WELL ADD CONSTRAINT PDENW_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
);

\qecho 'CREATING PRIMARY KEY PDENWRS_PK'
ALTER TABLE PDEN_WELL_REPORT_STREAM ADD CONSTRAINT PDENWRS_PK PRIMARY KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
UWI,
WRS_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PDENX_PK'
ALTER TABLE PDEN_XREF ADD CONSTRAINT PDENX_PK PRIMARY KEY
(
FROM_PDEN_SUBTYPE,
FROM_PDEN_ID,
FROM_PDEN_SOURCE,
TO_PDEN_SUBTYPE,
TO_PDEN_ID,
TO_PDEN_SOURCE,
XREF_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PL_PK'
ALTER TABLE POOL ADD CONSTRAINT PL_PK PRIMARY KEY
(
POOL_ID
);

\qecho 'CREATING PRIMARY KEY PLA_PK'
ALTER TABLE POOL_ALIAS ADD CONSTRAINT PLA_PK PRIMARY KEY
(
POOL_ID,
SOURCE,
POOL_ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY PLAR_PK'
ALTER TABLE POOL_AREA ADD CONSTRAINT PLAR_PK PRIMARY KEY
(
POOL_ID,
AREA_ID,
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY PLC_PK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_PK PRIMARY KEY
(
POOL_ID,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PLI_PK'
ALTER TABLE POOL_INSTRUMENT ADD CONSTRAINT PLI_PK PRIMARY KEY
(
INSTRUMENT_ID,
POOL_ID
);

\qecho 'CREATING PRIMARY KEY PLV_PK'
ALTER TABLE POOL_VERSION ADD CONSTRAINT PLV_PK PRIMARY KEY
(
POOL_ID,
POOL_SOURCE
);

\qecho 'CREATING PRIMARY KEY PLVAR_PK'
ALTER TABLE POOL_VERSION_AREA ADD CONSTRAINT PLVAR_PK PRIMARY KEY
(
POOL_ID,
POOL_SOURCE,
AREA_ID,
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY PAH_PK'
ALTER TABLE PPDM_AUDIT_HISTORY ADD CONSTRAINT PAH_PK PRIMARY KEY
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME,
AUDIT_ROW_GUID,
AUDIT_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY PAHR_PK'
ALTER TABLE PPDM_AUDIT_HISTORY_REM ADD CONSTRAINT PAHR_PK PRIMARY KEY
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME,
AUDIT_ROW_GUID,
AUDIT_SEQ_NO,
REMARK_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY PCCV_PK'
ALTER TABLE PPDM_CHECK_CONS_VALUE ADD CONSTRAINT PCCV_PK PRIMARY KEY
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME,
CHECK_VALUE
);

\qecho 'CREATING PRIMARY KEY PCV_PK'
ALTER TABLE PPDM_CODE_VERSION ADD CONSTRAINT PCV_PK PRIMARY KEY
(
SYSTEM_ID,
TABLE_NAME,
SOURCE,
VERSION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PCVC_PK'
ALTER TABLE PPDM_CODE_VERSION_COLUMN ADD CONSTRAINT PCVC_PK PRIMARY KEY
(
SYSTEM_ID,
TABLE_NAME,
SOURCE,
VERSION_OBS_NO,
COLUMN_NAME
);

\qecho 'CREATING PRIMARY KEY PCVU_PK'
ALTER TABLE PPDM_CODE_VERSION_USE ADD CONSTRAINT PCVU_PK PRIMARY KEY
(
SYSTEM_ID,
TABLE_NAME,
SOURCE,
VERSION_OBS_NO,
USE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PCVX_PK'
ALTER TABLE PPDM_CODE_VERSION_XREF ADD CONSTRAINT PCVX_PK PRIMARY KEY
(
SYSTEM_ID,
TABLE_NAME,
SOURCE,
VERSION_OBS_NO,
SYSTEM_ID2,
TABLE_NAME2,
SOURCE2,
VERSION_OBS_NO2
);

\qecho 'CREATING PRIMARY KEY PC_PK'
ALTER TABLE PPDM_COLUMN ADD CONSTRAINT PC_PK PRIMARY KEY
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);

\qecho 'CREATING PRIMARY KEY PCAL_PK'
ALTER TABLE PPDM_COLUMN_ALIAS ADD CONSTRAINT PCAL_PK PRIMARY KEY
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME,
COLUMN_ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY PCON_PK'
ALTER TABLE PPDM_CONSTRAINT ADD CONSTRAINT PCON_PK PRIMARY KEY
(
SYSTEM_ID,
TABLE_NAME,
CONSTRAINT_NAME
);

\qecho 'CREATING PRIMARY KEY PCC_PK'
ALTER TABLE PPDM_CONS_COLUMN ADD CONSTRAINT PCC_PK PRIMARY KEY
(
SYSTEM_ID,
TABLE_NAME,
CONSTRAINT_NAME,
COLUMN_NAME
);

\qecho 'CREATING PRIMARY KEY PDS_PK'
ALTER TABLE PPDM_DATA_STORE ADD CONSTRAINT PDS_PK PRIMARY KEY
(
UOM_SYSTEM,
NAME
);

\qecho 'CREATING PRIMARY KEY PD_PK'
ALTER TABLE PPDM_DOMAIN ADD CONSTRAINT PD_PK PRIMARY KEY
(
DOMAIN
);

\qecho 'CREATING PRIMARY KEY PE_PK'
ALTER TABLE PPDM_EXCEPTION ADD CONSTRAINT PE_PK PRIMARY KEY
(
PE_ID
);

\qecho 'CREATING PRIMARY KEY PG_PK'
ALTER TABLE PPDM_GROUP ADD CONSTRAINT PG_PK PRIMARY KEY
(
GROUP_ID
);

\qecho 'CREATING PRIMARY KEY PGOB_PK'
ALTER TABLE PPDM_GROUP_OBJECT ADD CONSTRAINT PGOB_PK PRIMARY KEY
(
GROUP_ID,
OBJECT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PGO_PK'
ALTER TABLE PPDM_GROUP_OWNER ADD CONSTRAINT PGO_PK PRIMARY KEY
(
GROUP_ID,
OWNER_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PGR_PK'
ALTER TABLE PPDM_GROUP_REMARK ADD CONSTRAINT PGR_PK PRIMARY KEY
(
GROUP_ID,
REMARK_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PGX_PK'
ALTER TABLE PPDM_GROUP_XREF ADD CONSTRAINT PGX_PK PRIMARY KEY
(
PARENT_GROUP_ID,
CHILD_GROUP_ID,
XREF_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PI_PK'
ALTER TABLE PPDM_INDEX ADD CONSTRAINT PI_PK PRIMARY KEY
(
SYSTEM_ID,
TABLE_NAME,
INDEX_ID
);

\qecho 'CREATING PRIMARY KEY PIC_PK'
ALTER TABLE PPDM_INDEX_COLUMN ADD CONSTRAINT PIC_PK PRIMARY KEY
(
SYSTEM_ID,
TABLE_NAME,
INDEX_ID,
COLUMN_NAME
);

\qecho 'CREATING PRIMARY KEY PDM_PK'
ALTER TABLE PPDM_MAP_DETAIL ADD CONSTRAINT PDM_PK PRIMARY KEY
(
MAP_ID,
MAP_DETAIL_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PMLD_PK'
ALTER TABLE PPDM_MAP_LOAD ADD CONSTRAINT PMLD_PK PRIMARY KEY
(
MAP_ID,
LOAD_PROCESS_ID
);

\qecho 'CREATING PRIMARY KEY PMLDE_PK'
ALTER TABLE PPDM_MAP_LOAD_ERROR ADD CONSTRAINT PMLDE_PK PRIMARY KEY
(
MAP_ID,
LOAD_PROCESS_ID,
ERROR_ID
);

\qecho 'CREATING PRIMARY KEY PMR_PK'
ALTER TABLE PPDM_MAP_RULE ADD CONSTRAINT PMR_PK PRIMARY KEY
(
MAP_ID,
MAP_DETAIL_OBS_NO,
RULE_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY PMS_PK'
ALTER TABLE PPDM_MEASUREMENT_SYSTEM ADD CONSTRAINT PMS_PK PRIMARY KEY
(
UOM_SYSTEM_ID
);

\qecho 'CREATING PRIMARY KEY PM_PK'
ALTER TABLE PPDM_METRIC ADD CONSTRAINT PM_PK PRIMARY KEY
(
METRIC_ID
);

\qecho 'CREATING PRIMARY KEY PMC_PK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_PK PRIMARY KEY
(
METRIC_ID,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PMV_PK'
ALTER TABLE PPDM_METRIC_VALUE ADD CONSTRAINT PMV_PK PRIMARY KEY
(
METRIC_ID,
METRIC_OBS_NO
);

\qecho 'CREATING PRIMARY KEY POS_PK'
ALTER TABLE PPDM_OBJECT_STATUS ADD CONSTRAINT POS_PK PRIMARY KEY
(
STATUS_ID,
STATUS_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PP_PK'
ALTER TABLE PPDM_PROCEDURE ADD CONSTRAINT PP_PK PRIMARY KEY
(
SYSTEM_ID,
PROCEDURE_ID
);

\qecho 'CREATING PRIMARY KEY PPCOL_PK'
ALTER TABLE PPDM_PROPERTY_COLUMN ADD CONSTRAINT PPCOL_PK PRIMARY KEY
(
PROPERTY_SET_ID,
PROPERTY_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PPS_PK'
ALTER TABLE PPDM_PROPERTY_SET ADD CONSTRAINT PPS_PK PRIMARY KEY
(
PROPERTY_SET_ID
);

\qecho 'CREATING PRIMARY KEY PQC_PK'
ALTER TABLE PPDM_QUALITY_CONTROL ADD CONSTRAINT PQC_PK PRIMARY KEY
(
SYSTEM_ID,
TABLE_NAME,
QC_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY PQ_PK'
ALTER TABLE PPDM_QUANTITY ADD CONSTRAINT PQ_PK PRIMARY KEY
(
QUANTITY_TYPE
);

\qecho 'CREATING PRIMARY KEY PQA_PK'
ALTER TABLE PPDM_QUANTITY_ALIAS ADD CONSTRAINT PQA_PK PRIMARY KEY
(
QUANTITY_ALIAS_ID,
QUANTITY_TYPE
);

\qecho 'CREATING PRIMARY KEY PR_PK'
ALTER TABLE PPDM_RULE ADD CONSTRAINT PR_PK PRIMARY KEY
(
RULE_ID
);

\qecho 'CREATING PRIMARY KEY PRA_PK'
ALTER TABLE PPDM_RULE_ALIAS ADD CONSTRAINT PRA_PK PRIMARY KEY
(
RULE_ID,
RULE_ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY PRC_PK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_PK PRIMARY KEY
(
RULE_ID,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PRD_PK'
ALTER TABLE PPDM_RULE_DETAIL ADD CONSTRAINT PRD_PK PRIMARY KEY
(
RULE_ID,
DETAIL_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY PRE_PK'
ALTER TABLE PPDM_RULE_ENFORCEMENT ADD CONSTRAINT PRE_PK PRIMARY KEY
(
RULE_ID,
ENFORCEMENT_ID
);

\qecho 'CREATING PRIMARY KEY PRR_PK'
ALTER TABLE PPDM_RULE_REMARK ADD CONSTRAINT PRR_PK PRIMARY KEY
(
RULE_ID,
REMARK_TYPE,
REMARK_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY PRX_PK'
ALTER TABLE PPDM_RULE_XREF ADD CONSTRAINT PRX_PK PRIMARY KEY
(
DEPENDENCY_ID,
RULE_ID,
RULE_ID2,
XREF_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PSE_PK'
ALTER TABLE PPDM_SCHEMA_ENTITY ADD CONSTRAINT PSE_PK PRIMARY KEY
(
SYSTEM_ID,
SCHEMA_ENTITY_ID
);

\qecho 'CREATING PRIMARY KEY PSEA_PK'
ALTER TABLE PPDM_SCHEMA_ENTITY_ALIAS ADD CONSTRAINT PSEA_PK PRIMARY KEY
(
SYSTEM_ID,
SCHEMA_ENTITY_ID,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY PSG_PK'
ALTER TABLE PPDM_SCHEMA_GROUP ADD CONSTRAINT PSG_PK PRIMARY KEY
(
GROUP_SYSTEM_ID,
GROUP_SCHEMA_ENTITY_ID,
COMP_SCHEMA_ENTITY_ID
);

\qecho 'CREATING PRIMARY KEY PSWA_PK'
ALTER TABLE PPDM_SW_APPLICATION ADD CONSTRAINT PSWA_PK PRIMARY KEY
(
SW_APPLICATION_ID
);

\qecho 'CREATING PRIMARY KEY PSWAA_PK'
ALTER TABLE PPDM_SW_APPLIC_ALIAS ADD CONSTRAINT PSWAA_PK PRIMARY KEY
(
SW_APPLICATION_ID,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY PSAC_PK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_PK PRIMARY KEY
(
SW_APPLICATION_ID,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PSWAB_PK'
ALTER TABLE PPDM_SW_APP_BA ADD CONSTRAINT PSWAB_PK PRIMARY KEY
(
SW_APPLICATION_ID,
BA_ID,
BA_ID_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PSWAF_PK'
ALTER TABLE PPDM_SW_APP_FUNCTION ADD CONSTRAINT PSWAF_PK PRIMARY KEY
(
SW_APPLICATION_ID,
SW_APP_FUNCTION,
FUNCTION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PSWAX_PK'
ALTER TABLE PPDM_SW_APP_XREF ADD CONSTRAINT PSWAX_PK PRIMARY KEY
(
SW_APPLICATION_ID,
SW_APPLICATION_ID2,
XREF_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PSYS_PK'
ALTER TABLE PPDM_SYSTEM ADD CONSTRAINT PSYS_PK PRIMARY KEY
(
SYSTEM_ID
);

\qecho 'CREATING PRIMARY KEY PSA_PK'
ALTER TABLE PPDM_SYSTEM_ALIAS ADD CONSTRAINT PSA_PK PRIMARY KEY
(
SYSTEM_ID,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY PSAP_PK'
ALTER TABLE PPDM_SYSTEM_APPLICATION ADD CONSTRAINT PSAP_PK PRIMARY KEY
(
SYSTEM_ID,
SW_APPLICATION_ID,
APPLICATION_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY PSM_PK'
ALTER TABLE PPDM_SYSTEM_MAP ADD CONSTRAINT PSM_PK PRIMARY KEY
(
MAP_ID
);

\qecho 'CREATING PRIMARY KEY PT_PK'
ALTER TABLE PPDM_TABLE ADD CONSTRAINT PT_PK PRIMARY KEY
(
SYSTEM_ID,
TABLE_NAME
);

\qecho 'CREATING PRIMARY KEY PTA_PK'
ALTER TABLE PPDM_TABLE_ALIAS ADD CONSTRAINT PTA_PK PRIMARY KEY
(
SYSTEM_ID,
TABLE_NAME,
TABLE_ALIAS
);

\qecho 'CREATING PRIMARY KEY PTDH_PK'
ALTER TABLE PPDM_TABLE_HISTORY ADD CONSTRAINT PTDH_PK PRIMARY KEY
(
SYSTEM_ID,
TABLE_NAME,
HISTORY_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY PUC_PK'
ALTER TABLE PPDM_UNIT_CONVERSION ADD CONSTRAINT PUC_PK PRIMARY KEY
(
FROM_UOM_ID,
TO_UOM_ID
);

\qecho 'CREATING PRIMARY KEY PUOM_PK'
ALTER TABLE PPDM_UNIT_OF_MEASURE ADD CONSTRAINT PUOM_PK PRIMARY KEY
(
UOM_ID
);

\qecho 'CREATING PRIMARY KEY PUA_PK'
ALTER TABLE PPDM_UOM_ALIAS ADD CONSTRAINT PUA_PK PRIMARY KEY
(
UOM_ID,
UOM_SYNONYM,
SOURCE
);

\qecho 'CREATING PRIMARY KEY PVMC_PK'
ALTER TABLE PPDM_VOL_MEAS_CONV ADD CONSTRAINT PVMC_PK PRIMARY KEY
(
VOLUME_REGIME_ID,
CONVERSION_QUANTITY,
CONVERSION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PVMR_PK'
ALTER TABLE PPDM_VOL_MEAS_REGIME ADD CONSTRAINT PVMR_PK PRIMARY KEY
(
VOLUME_REGIME_ID
);

\qecho 'CREATING PRIMARY KEY PVMU_PK'
ALTER TABLE PPDM_VOL_MEAS_USE ADD CONSTRAINT PVMU_PK PRIMARY KEY
(
VOLUME_REGIME_ID,
REGIME_USE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PLU_PK'
ALTER TABLE PROD_LEASE_UNIT ADD CONSTRAINT PLU_PK PRIMARY KEY
(
LEASE_UNIT_ID
);

\qecho 'CREATING PRIMARY KEY PLUA_PK'
ALTER TABLE PROD_LEASE_UNIT_ALIAS ADD CONSTRAINT PLUA_PK PRIMARY KEY
(
LEASE_UNIT_ID,
LEASE_UNIT_SOURCE,
PROD_LEASE_UNIT_ALIAS_ID,
ALIAS_SOURCE
);

\qecho 'CREATING PRIMARY KEY PLUAR_PK'
ALTER TABLE PROD_LEASE_UNIT_AREA ADD CONSTRAINT PLUAR_PK PRIMARY KEY
(
LEASE_UNIT_ID,
SOURCE,
AREA_ID,
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY PLUV_PK'
ALTER TABLE PROD_LEASE_UNIT_VERSION ADD CONSTRAINT PLUV_PK PRIMARY KEY
(
LEASE_UNIT_ID,
SOURCE
);

\qecho 'CREATING PRIMARY KEY PLUVAR_PK'
ALTER TABLE PROD_LEASE_UNIT_VER_AREA ADD CONSTRAINT PLUVAR_PK PRIMARY KEY
(
LEASE_UNIT_ID,
SOURCE,
AREA_ID,
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY PS_PK'
ALTER TABLE PROD_STRING ADD CONSTRAINT PS_PK PRIMARY KEY
(
UWI,
SOURCE,
STRING_ID
);

\qecho 'CREATING PRIMARY KEY PSAL_PK'
ALTER TABLE PROD_STRING_ALIAS ADD CONSTRAINT PSAL_PK PRIMARY KEY
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
SOURCE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY PSCMP_PK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_PK PRIMARY KEY
(
UWI,
PR_STR_SOURCE,
STRING_ID,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PSF_PK'
ALTER TABLE PROD_STRING_FORMATION ADD CONSTRAINT PSF_PK PRIMARY KEY
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PSFAL_PK'
ALTER TABLE PROD_STRING_FORM_ALIAS ADD CONSTRAINT PSFAL_PK PRIMARY KEY
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO,
SOURCE,
PROD_STRING_FORM_ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY PSSH_PK'
ALTER TABLE PROD_STR_STAT_HIST ADD CONSTRAINT PSSH_PK PRIMARY KEY
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
STATUS_ID
);

\qecho 'CREATING PRIMARY KEY PROJ_PK'
ALTER TABLE PROJECT ADD CONSTRAINT PROJ_PK PRIMARY KEY
(
PROJECT_ID
);

\qecho 'CREATING PRIMARY KEY PROJA_PK'
ALTER TABLE PROJECT_ALIAS ADD CONSTRAINT PROJA_PK PRIMARY KEY
(
PROJECT_ID,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY PROJB_PK'
ALTER TABLE PROJECT_BA ADD CONSTRAINT PROJB_PK PRIMARY KEY
(
PROJECT_ID,
BUSINESS_ASSOCIATE_ID
);

\qecho 'CREATING PRIMARY KEY PROJBR_PK'
ALTER TABLE PROJECT_BA_ROLE ADD CONSTRAINT PROJBR_PK PRIMARY KEY
(
PROJECT_ID,
BUSINESS_ASSOCIATE_ID,
ROLE,
ROLE_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY PROJCOM_PK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_PK PRIMARY KEY
(
PROJECT_ID,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PROJC_PK'
ALTER TABLE PROJECT_CONDITION ADD CONSTRAINT PROJC_PK PRIMARY KEY
(
PROJECT_ID,
CONDITION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PROJE_PK'
ALTER TABLE PROJECT_EQUIPMENT ADD CONSTRAINT PROJE_PK PRIMARY KEY
(
PROJECT_ID,
EQUIPMENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PROJER_PK'
ALTER TABLE PROJECT_EQUIP_ROLE ADD CONSTRAINT PROJER_PK PRIMARY KEY
(
PROJECT_ID,
EQUIPMENT_OBS_NO,
EQUIPMENT_ROLE,
ROLE_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY PROJP_PK'
ALTER TABLE PROJECT_PLAN ADD CONSTRAINT PROJP_PK PRIMARY KEY
(
PROJECT_PLAN_ID
);

\qecho 'CREATING PRIMARY KEY PROJPS_PK'
ALTER TABLE PROJECT_PLAN_STEP ADD CONSTRAINT PROJPS_PK PRIMARY KEY
(
PROJECT_PLAN_ID,
PLAN_STEP_ID
);

\qecho 'CREATING PRIMARY KEY PROJPSX_PK'
ALTER TABLE PROJECT_PLAN_STEP_XREF ADD CONSTRAINT PROJPSX_PK PRIMARY KEY
(
PROJECT_PLAN_ID,
PLAN_STEP_ID,
PLAN_STEP_ID2,
XREF_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PROJST_PK'
ALTER TABLE PROJECT_STATUS ADD CONSTRAINT PROJST_PK PRIMARY KEY
(
PROJECT_ID,
STATUS_ID
);

\qecho 'CREATING PRIMARY KEY PROJS_PK'
ALTER TABLE PROJECT_STEP ADD CONSTRAINT PROJS_PK PRIMARY KEY
(
PROJECT_ID,
STEP_ID
);

\qecho 'CREATING PRIMARY KEY PROJSB_PK'
ALTER TABLE PROJECT_STEP_BA ADD CONSTRAINT PROJSB_PK PRIMARY KEY
(
PROJECT_ID,
BUSINESS_ASSOCIATE_ID,
ROLE,
ROLE_SEQ_NO,
STEP_ID,
STEP_BA_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PROJSE_PK'
ALTER TABLE PROJECT_STEP_EQUIP ADD CONSTRAINT PROJSE_PK PRIMARY KEY
(
PROJECT_ID,
EQUIPMENT_OBS_NO,
EQUIPMENT_ROLE,
ROLE_SEQ_NO,
STEP_ID
);

\qecho 'CREATING PRIMARY KEY PROJSTI_PK'
ALTER TABLE PROJECT_STEP_TIME ADD CONSTRAINT PROJSTI_PK PRIMARY KEY
(
PROJECT_ID,
STEP_ID,
TIME_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PROJSX_PK'
ALTER TABLE PROJECT_STEP_XREF ADD CONSTRAINT PROJSX_PK PRIMARY KEY
(
PROJECT_ID,
STEP_ID1,
STEP_ID2,
XREF_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PROJSC_PK'
ALTER TABLE PROJ_STEP_CONDITION ADD CONSTRAINT PROJSC_PK PRIMARY KEY
(
PROJECT_ID,
PROJECT_STEP_ID,
CONDITION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PLUSH_PK'
ALTER TABLE PR_LSE_UNIT_STR_HIST ADD CONSTRAINT PLUSH_PK PRIMARY KEY
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
LEASE_UNIT_ID,
STATUS_ID
);

\qecho 'CREATING PRIMARY KEY PSFC_PK'
ALTER TABLE PR_STR_FORM_COMPLETION ADD CONSTRAINT PSFC_PK PRIMARY KEY
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO,
COMPLETION_SOURCE,
COMPLETION_OBS_NO,
FORM_COMPLETION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY PSFSH_PK'
ALTER TABLE PR_STR_FORM_STAT_HIST ADD CONSTRAINT PSFSH_PK PRIMARY KEY
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO,
STATUS_ID
);

\qecho 'CREATING PRIMARY KEY RATEA_PK'
ALTER TABLE RATE_AREA ADD CONSTRAINT RATEA_PK PRIMARY KEY
(
RATE_SCHEDULE_ID,
AREA_ID,
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY RATE_PK'
ALTER TABLE RATE_SCHEDULE ADD CONSTRAINT RATE_PK PRIMARY KEY
(
RATE_SCHEDULE_ID
);

\qecho 'CREATING PRIMARY KEY RATEC_PK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_PK PRIMARY KEY
(
RATE_SCHEDULE_ID,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY RATESX_PK'
ALTER TABLE RATE_SCHEDULE_XREF ADD CONSTRAINT RATESX_PK PRIMARY KEY
(
RATE_SCHEDULE_ID_1,
RATE_SCHEDULE_ID_2
);

\qecho 'CREATING PRIMARY KEY RATESD_PK'
ALTER TABLE RATE_SCHED_DETAIL ADD CONSTRAINT RATESD_PK PRIMARY KEY
(
RATE_SCHEDULE_ID,
RATE_TYPE
);

\qecho 'CREATING PRIMARY KEY RA_ACN_PK'
ALTER TABLE RA_ACCESS_CONDITION ADD CONSTRAINT RA_ACN_PK PRIMARY KEY
(
ACCESS_CONDITION_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_APT_PK'
ALTER TABLE RA_ACCOUNT_PROC_TYPE ADD CONSTRAINT RA_APT_PK PRIMARY KEY
(
ACCOUNT_PROC_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ACTST_PK'
ALTER TABLE RA_ACTIVITY_SET_TYPE ADD CONSTRAINT RA_ACTST_PK PRIMARY KEY
(
ACTIVITY_SET_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_AT_PK'
ALTER TABLE RA_ACTIVITY_TYPE ADD CONSTRAINT RA_AT_PK PRIMARY KEY
(
ACTIVITY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_AM_PK'
ALTER TABLE RA_ADDITIVE_METHOD ADD CONSTRAINT RA_AM_PK PRIMARY KEY
(
ADDITIVE_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ADT_PK'
ALTER TABLE RA_ADDITIVE_TYPE ADD CONSTRAINT RA_ADT_PK PRIMARY KEY
(
ADDITIVE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ADDT_PK'
ALTER TABLE RA_ADDRESS_TYPE ADD CONSTRAINT RA_ADDT_PK PRIMARY KEY
(
ADDRESS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ACT1_PK'
ALTER TABLE RA_AIRCRAFT_TYPE ADD CONSTRAINT RA_ACT1_PK PRIMARY KEY
(
AIRCRAFT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_AGC_PK'
ALTER TABLE RA_AIR_GAS_CODE ADD CONSTRAINT RA_AGC_PK PRIMARY KEY
(
AIR_GAS_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ART_PK'
ALTER TABLE RA_ALIAS_REASON_TYPE ADD CONSTRAINT RA_ART_PK PRIMARY KEY
(
REASON_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ATY_PK'
ALTER TABLE RA_ALIAS_TYPE ADD CONSTRAINT RA_ATY_PK PRIMARY KEY
(
ALIAS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ALT_PK'
ALTER TABLE RA_ALLOCATION_TYPE ADD CONSTRAINT RA_ALT_PK PRIMARY KEY
(
ALLOCATION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_AX_PK'
ALTER TABLE RA_ALLOWABLE_EXPENSE ADD CONSTRAINT RA_AX_PK PRIMARY KEY
(
ALLOWABLE_EXPENSE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_AP_PK'
ALTER TABLE RA_ANALYSIS_PROPERTY ADD CONSTRAINT RA_AP_PK PRIMARY KEY
(
ANALYSIS_PROPERTY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLAT_PK'
ALTER TABLE RA_ANL_ACCURACY_TYPE ADD CONSTRAINT RA_ANLAT_PK PRIMARY KEY
(
ACCURACY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ABRT_PK'
ALTER TABLE RA_ANL_BA_ROLE_TYPE ADD CONSTRAINT RA_ABRT_PK PRIMARY KEY
(
BA_ROLE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLCET_PK'
ALTER TABLE RA_ANL_CALC_EQUIV_TYPE ADD CONSTRAINT RA_ANLCET_PK PRIMARY KEY
(
CALCULATION_EQUIV_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLCP_PK'
ALTER TABLE RA_ANL_CHRO_PROPERTY ADD CONSTRAINT RA_ANLCP_PK PRIMARY KEY
(
CHRO_PROPERTY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLCMPT_PK'
ALTER TABLE RA_ANL_COMP_TYPE ADD CONSTRAINT RA_ANLCMPT_PK PRIMARY KEY
(
ANL_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLCT_PK'
ALTER TABLE RA_ANL_CONFIDENCE_TYPE ADD CONSTRAINT RA_ANLCT_PK PRIMARY KEY
(
CONFIDENCE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLDRV_PK'
ALTER TABLE RA_ANL_DETAIL_REF_VALUE ADD CONSTRAINT RA_ANLDRV_PK PRIMARY KEY
(
REFERENCE_VALUE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLDT_PK'
ALTER TABLE RA_ANL_DETAIL_TYPE ADD CONSTRAINT RA_ANLDT_PK PRIMARY KEY
(
ANL_DETAIL_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLEVC_PK'
ALTER TABLE RA_ANL_ELEMENT_VALUE_CODE ADD CONSTRAINT RA_ANLEVC_PK PRIMARY KEY
(
VALUE_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLEVT_PK'
ALTER TABLE RA_ANL_ELEMENT_VALUE_TYPE ADD CONSTRAINT RA_ANLEVT_PK PRIMARY KEY
(
ANL_VALUE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLER_PK'
ALTER TABLE RA_ANL_EQUIP_ROLE ADD CONSTRAINT RA_ANLER_PK PRIMARY KEY
(
ANL_EQUIP_ROLE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLFT_PK'
ALTER TABLE RA_ANL_FORMULA_TYPE ADD CONSTRAINT RA_ANLFT_PK PRIMARY KEY
(
FORMULA_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLGCV_PK'
ALTER TABLE RA_ANL_GAS_CHRO_VALUE ADD CONSTRAINT RA_ANLGCV_PK PRIMARY KEY
(
ANL_VALUE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLGP_PK'
ALTER TABLE RA_ANL_GAS_PROPERTY ADD CONSTRAINT RA_ANLGP_PK PRIMARY KEY
(
ANALYSIS_PROPERTY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLGPC_PK'
ALTER TABLE RA_ANL_GAS_PROPERTY_CODE ADD CONSTRAINT RA_ANLGPC_PK PRIMARY KEY
(
ANALYSIS_PROPERTY,
PROPERTY_VALUE_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLME_PK'
ALTER TABLE RA_ANL_METHOD_EQUIV_TYPE ADD CONSTRAINT RA_ANLME_PK PRIMARY KEY
(
METHOD_EQUIV_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLMST_PK'
ALTER TABLE RA_ANL_METHOD_SET_TYPE ADD CONSTRAINT RA_ANLMST_PK PRIMARY KEY
(
METHOD_SET_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLMR_PK'
ALTER TABLE RA_ANL_MISSING_REP ADD CONSTRAINT RA_ANLMR_PK PRIMARY KEY
(
MISSING_REPRESENTATION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLNR_PK'
ALTER TABLE RA_ANL_NULL_REP ADD CONSTRAINT RA_ANLNR_PK PRIMARY KEY
(
NULL_REPRESENTATION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLOPC_PK'
ALTER TABLE RA_ANL_OIL_PROPERTY_CODE ADD CONSTRAINT RA_ANLOPC_PK PRIMARY KEY
(
ANALYSIS_PROPERTY,
PROPERTY_VALUE_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLPT_PK'
ALTER TABLE RA_ANL_PARAMETER_TYPE ADD CONSTRAINT RA_ANLPT_PK PRIMARY KEY
(
PARAMETER_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLPBR_PK'
ALTER TABLE RA_ANL_PROBLEM_RESOLUTION ADD CONSTRAINT RA_ANLPBR_PK PRIMARY KEY
(
RESOLUTION_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLPR_PK'
ALTER TABLE RA_ANL_PROBLEM_RESULT ADD CONSTRAINT RA_ANLPR_PK PRIMARY KEY
(
PROBLEM_RESULT,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLPS_PK'
ALTER TABLE RA_ANL_PROBLEM_SEVERITY ADD CONSTRAINT RA_ANLPS_PK PRIMARY KEY
(
PROBLEM_SEVERITY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLPRBT_PK'
ALTER TABLE RA_ANL_PROBLEM_TYPE ADD CONSTRAINT RA_ANLPRBT_PK PRIMARY KEY
(
PROBLEM_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLRV_PK'
ALTER TABLE RA_ANL_REF_VALUE ADD CONSTRAINT RA_ANLRV_PK PRIMARY KEY
(
REFERENCE_VALUE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLRT_PK'
ALTER TABLE RA_ANL_REMARK_TYPE ADD CONSTRAINT RA_ANLRT_PK PRIMARY KEY
(
ANL_REMARK_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLR_PK'
ALTER TABLE RA_ANL_REPEATABILITY ADD CONSTRAINT RA_ANLR_PK PRIMARY KEY
(
REPEATABILITY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLSX_PK'
ALTER TABLE RA_ANL_STEP_XREF ADD CONSTRAINT RA_ANLSX_PK PRIMARY KEY
(
STEP_XREF_REASON,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLTT_PK'
ALTER TABLE RA_ANL_TOLERANCE_TYPE ADD CONSTRAINT RA_ANLTT_PK PRIMARY KEY
(
TOLERANCE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLVM_PK'
ALTER TABLE RA_ANL_VALID_MEASUREMENT ADD CONSTRAINT RA_ANLVM_PK PRIMARY KEY
(
MEASUREMENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLVMV_PK'
ALTER TABLE RA_ANL_VALID_MEAS_VALUE ADD CONSTRAINT RA_ANLVMV_PK PRIMARY KEY
(
MEASUREMENT_TYPE,
VALID_VALUE_TEXT,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLVP_PK'
ALTER TABLE RA_ANL_VALID_PROBLEM ADD CONSTRAINT RA_ANLVP_PK PRIMARY KEY
(
PROBLEM_RESULT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ANLWP_PK'
ALTER TABLE RA_ANL_WATER_PROPERTY ADD CONSTRAINT RA_ANLWP_PK PRIMARY KEY
(
WATER_PROPERTY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_AAT_PK'
ALTER TABLE RA_AOF_ANALYSIS_TYPE ADD CONSTRAINT RA_AAT_PK PRIMARY KEY
(
AOF_ANALYSIS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ACM_PK'
ALTER TABLE RA_AOF_CALC_METHOD ADD CONSTRAINT RA_ACM_PK PRIMARY KEY
(
AOF_CALCULATE_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ALS_PK'
ALTER TABLE RA_API_LOG_SYSTEM ADD CONSTRAINT RA_ALS_PK PRIMARY KEY
(
API_CODE_SYSTEM,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_APPCT_PK'
ALTER TABLE RA_APPLICATION_COMP_TYPE ADD CONSTRAINT RA_APPCT_PK PRIMARY KEY
(
APPLICATION_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_AA_PK'
ALTER TABLE RA_APPLIC_ATTACHMENT ADD CONSTRAINT RA_AA_PK PRIMARY KEY
(
ATTACHMENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ABR_PK'
ALTER TABLE RA_APPLIC_BA_ROLE ADD CONSTRAINT RA_ABR_PK PRIMARY KEY
(
APPLICATION_BA_ROLE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_AD_PK'
ALTER TABLE RA_APPLIC_DECISION ADD CONSTRAINT RA_AD_PK PRIMARY KEY
(
APPLICATION_DECISION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ADE_PK'
ALTER TABLE RA_APPLIC_DESC ADD CONSTRAINT RA_ADE_PK PRIMARY KEY
(
APPLICATION_TYPE,
APPLIC_DESC_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ARMT_PK'
ALTER TABLE RA_APPLIC_REMARK_TYPE ADD CONSTRAINT RA_ARMT_PK PRIMARY KEY
(
REMARK_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_AST_PK'
ALTER TABLE RA_APPLIC_STATUS ADD CONSTRAINT RA_AST_PK PRIMARY KEY
(
APPLICATION_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_APPT_PK'
ALTER TABLE RA_APPLIC_TYPE ADD CONSTRAINT RA_APPT_PK PRIMARY KEY
(
APPLICATION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ACMPT_PK'
ALTER TABLE RA_AREA_COMPONENT_TYPE ADD CONSTRAINT RA_ACMPT_PK PRIMARY KEY
(
AREA_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ACT_PK'
ALTER TABLE RA_AREA_CONTAIN_TYPE ADD CONSTRAINT RA_ACT_PK PRIMARY KEY
(
CONTAIN_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ADC_PK'
ALTER TABLE RA_AREA_DESC_CODE ADD CONSTRAINT RA_ADC_PK PRIMARY KEY
(
AREA_DESC_TYPE,
AREA_DESC_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ADT1_PK'
ALTER TABLE RA_AREA_DESC_TYPE ADD CONSTRAINT RA_ADT1_PK PRIMARY KEY
(
AREA_DESC_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ARTY_PK'
ALTER TABLE RA_AREA_TYPE ADD CONSTRAINT RA_ARTY_PK PRIMARY KEY
(
AREA_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_AXT_PK'
ALTER TABLE RA_AREA_XREF_TYPE ADD CONSTRAINT RA_AXT_PK PRIMARY KEY
(
AREA_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_AUT_PK'
ALTER TABLE RA_AUTHORITY_TYPE ADD CONSTRAINT RA_AUT_PK PRIMARY KEY
(
AUTHORITY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_AUTH_PK'
ALTER TABLE RA_AUTHOR_TYPE ADD CONSTRAINT RA_AUTH_PK PRIMARY KEY
(
AUTHOR_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BAAUCT_PK'
ALTER TABLE RA_BA_AUTHORITY_COMP_TYPE ADD CONSTRAINT RA_BAAUCT_PK PRIMARY KEY
(
BA_AUTHORITY_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BC_PK'
ALTER TABLE RA_BA_CATEGORY ADD CONSTRAINT RA_BC_PK PRIMARY KEY
(
BA_CATEGORY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BACT_PK'
ALTER TABLE RA_BA_COMPONENT_TYPE ADD CONSTRAINT RA_BACT_PK PRIMARY KEY
(
BUSINESS_ASSOCIATE_COMP_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BCLT_PK'
ALTER TABLE RA_BA_CONTACT_LOC_TYPE ADD CONSTRAINT RA_BCLT_PK PRIMARY KEY
(
CONTACT_LOC_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BCOT_PK'
ALTER TABLE RA_BA_CREW_OVERHEAD_TYPE ADD CONSTRAINT RA_BCOT_PK PRIMARY KEY
(
OVERHEAD_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BCT_PK'
ALTER TABLE RA_BA_CREW_TYPE ADD CONSTRAINT RA_BCT_PK PRIMARY KEY
(
CREW_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BADC_PK'
ALTER TABLE RA_BA_DESC_CODE ADD CONSTRAINT RA_BADC_PK PRIMARY KEY
(
BA_DESC_TYPE,
BA_DESC_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BADRVT_PK'
ALTER TABLE RA_BA_DESC_REF_VALUE ADD CONSTRAINT RA_BADRVT_PK PRIMARY KEY
(
REFERENCE_VALUE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BADT_PK'
ALTER TABLE RA_BA_DESC_TYPE ADD CONSTRAINT RA_BADT_PK PRIMARY KEY
(
BA_DESC_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BALDC_PK'
ALTER TABLE RA_BA_LIC_DUE_CONDITION ADD CONSTRAINT RA_BALDC_PK PRIMARY KEY
(
DUE_CONDITION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BVT_PK'
ALTER TABLE RA_BA_LIC_VIOLATION_TYPE ADD CONSTRAINT RA_BVT_PK PRIMARY KEY
(
VIOLATION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BLVRT_PK'
ALTER TABLE RA_BA_LIC_VIOL_RESOL ADD CONSTRAINT RA_BLVRT_PK PRIMARY KEY
(
RESOLVE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BAOCT_PK'
ALTER TABLE RA_BA_ORGANIZATION_COMP_TYPE ADD CONSTRAINT RA_BAOCT_PK PRIMARY KEY
(
BA_ORGANIZATION_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BAOT_PK'
ALTER TABLE RA_BA_ORGANIZATION_TYPE ADD CONSTRAINT RA_BAOT_PK PRIMARY KEY
(
ORGANIZATION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BPT_PK'
ALTER TABLE RA_BA_PERMIT_TYPE ADD CONSTRAINT RA_BPT_PK PRIMARY KEY
(
PERMIT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BPRT_PK'
ALTER TABLE RA_BA_PREF_TYPE ADD CONSTRAINT RA_BPRT_PK PRIMARY KEY
(
PREFERENCE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BST_PK'
ALTER TABLE RA_BA_SERVICE_TYPE ADD CONSTRAINT RA_BST_PK PRIMARY KEY
(
BA_SERVICE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BS_PK'
ALTER TABLE RA_BA_STATUS ADD CONSTRAINT RA_BS_PK PRIMARY KEY
(
BA_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BT_PK'
ALTER TABLE RA_BA_TYPE ADD CONSTRAINT RA_BT_PK PRIMARY KEY
(
BA_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BXT_PK'
ALTER TABLE RA_BA_XREF_TYPE ADD CONSTRAINT RA_BXT_PK PRIMARY KEY
(
BA_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BM_PK'
ALTER TABLE RA_BHP_METHOD ADD CONSTRAINT RA_BM_PK PRIMARY KEY
(
BHP_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BPTT_PK'
ALTER TABLE RA_BH_PRESS_TEST_TYPE ADD CONSTRAINT RA_BPTT_PK PRIMARY KEY
(
BH_PRESSURE_TEST_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BBC_PK'
ALTER TABLE RA_BIT_BEARING_CONDITION ADD CONSTRAINT RA_BBC_PK PRIMARY KEY
(
BEARING_CONDITION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BCSD_PK'
ALTER TABLE RA_BIT_CUT_STRUCT_DULL ADD CONSTRAINT RA_BCSD_PK PRIMARY KEY
(
CUTTING_STRUCTURE_MDC,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BCSI_PK'
ALTER TABLE RA_BIT_CUT_STRUCT_INNER ADD CONSTRAINT RA_BCSI_PK PRIMARY KEY
(
CUTTING_STRUCTURE_T1,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BCSL_PK'
ALTER TABLE RA_BIT_CUT_STRUCT_LOC ADD CONSTRAINT RA_BCSL_PK PRIMARY KEY
(
CUTTING_STRUCTURE_LOC,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BCSO_PK'
ALTER TABLE RA_BIT_CUT_STRUCT_OUTER ADD CONSTRAINT RA_BCSO_PK PRIMARY KEY
(
CUTTING_STRUCTURE_TO,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BRP_PK'
ALTER TABLE RA_BIT_REASON_PULLED ADD CONSTRAINT RA_BRP_PK PRIMARY KEY
(
REASON_PULLED,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BF_PK'
ALTER TABLE RA_BLOWOUT_FLUID ADD CONSTRAINT RA_BF_PK PRIMARY KEY
(
BLOWOUT_FLUID,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_BRT_PK'
ALTER TABLE RA_BUILDUP_RADIUS_TYPE ADD CONSTRAINT RA_BRT_PK PRIMARY KEY
(
BUILDUP_RADIUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CAG_PK'
ALTER TABLE RA_CAT_ADDITIVE_GROUP ADD CONSTRAINT RA_CAG_PK PRIMARY KEY
(
ADDITIVE_GROUP,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CAQT_PK'
ALTER TABLE RA_CAT_ADDITIVE_QUANTITY ADD CONSTRAINT RA_CAQT_PK PRIMARY KEY
(
QUANTITY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CAS_PK'
ALTER TABLE RA_CAT_ADDITIVE_SPEC ADD CONSTRAINT RA_CAS_PK PRIMARY KEY
(
ADDITIVE_SPEC_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CAX_PK'
ALTER TABLE RA_CAT_ADDITIVE_XREF ADD CONSTRAINT RA_CAX_PK PRIMARY KEY
(
ADDITIVE_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CEG_PK'
ALTER TABLE RA_CAT_EQUIP_GROUP ADD CONSTRAINT RA_CEG_PK PRIMARY KEY
(
CAT_EQUIP_GROUP,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CES_PK'
ALTER TABLE RA_CAT_EQUIP_SPEC ADD CONSTRAINT RA_CES_PK PRIMARY KEY
(
SPEC_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CSC_PK'
ALTER TABLE RA_CAT_EQUIP_SPEC_CODE ADD CONSTRAINT RA_CSC_PK PRIMARY KEY
(
SPEC_TYPE,
SPEC_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CET_PK'
ALTER TABLE RA_CAT_EQUIP_TYPE ADD CONSTRAINT RA_CET_PK PRIMARY KEY
(
CAT_EQUIP_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CT_PK'
ALTER TABLE RA_CEMENT_TYPE ADD CONSTRAINT RA_CT_PK PRIMARY KEY
(
CEMENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CST_PK'
ALTER TABLE RA_CHECKSHOT_SRVY_TYPE ADD CONSTRAINT RA_CST_PK PRIMARY KEY
(
CHECKSHOT_SURVEY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CDP_PK'
ALTER TABLE RA_CLASS_DESC_PROPERTY ADD CONSTRAINT RA_CDP_PK PRIMARY KEY
(
DESC_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CLCT_PK'
ALTER TABLE RA_CLASS_LEV_COMP_TYPE ADD CONSTRAINT RA_CLCT_PK PRIMARY KEY
(
CLASS_LEVEL_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CLXT_PK'
ALTER TABLE RA_CLASS_LEV_XREF_TYPE ADD CONSTRAINT RA_CLXT_PK PRIMARY KEY
(
LEVEL_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CSD_PK'
ALTER TABLE RA_CLASS_SYSTEM_DIMENSION ADD CONSTRAINT RA_CSD_PK PRIMARY KEY
(
CLASS_DIMENSION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CSET_PK'
ALTER TABLE RA_CLASS_SYST_XREF_TYPE ADD CONSTRAINT RA_CSET_PK PRIMARY KEY
(
SYSTEM_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CL_PK'
ALTER TABLE RA_CLIMATE ADD CONSTRAINT RA_CL_PK PRIMARY KEY
(
CLIMATE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CRST_PK'
ALTER TABLE RA_COAL_RANK_SCHEME_TYPE ADD CONSTRAINT RA_CRST_PK PRIMARY KEY
(
COAL_RANK_SCHEME_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PCVX_PK'
ALTER TABLE RA_CODE_VERSION_XREF_TYPE ADD CONSTRAINT RA_PCVX_PK PRIMARY KEY
(
CODE_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_COT_PK'
ALTER TABLE RA_COLLAR_TYPE ADD CONSTRAINT RA_COT_PK PRIMARY KEY
(
COLLAR_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_COL_PK'
ALTER TABLE RA_COLOR ADD CONSTRAINT RA_COL_PK PRIMARY KEY
(
COLOR,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_COLE_PK'
ALTER TABLE RA_COLOR_EQUIV ADD CONSTRAINT RA_COLE_PK PRIMARY KEY
(
COLOR_1,
COLOR_2,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CFMT_PK'
ALTER TABLE RA_COLOR_FORMAT ADD CONSTRAINT RA_CFMT_PK PRIMARY KEY
(
COLOR_FORMAT,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_COLP_PK'
ALTER TABLE RA_COLOR_PALETTE ADD CONSTRAINT RA_COLP_PK PRIMARY KEY
(
COLOR_PALETTE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CM_PK'
ALTER TABLE RA_COMPLETION_METHOD ADD CONSTRAINT RA_CM_PK PRIMARY KEY
(
COMPLETION_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CS_PK'
ALTER TABLE RA_COMPLETION_STATUS ADD CONSTRAINT RA_CS_PK PRIMARY KEY
(
STATUS_TYPE,
COMPLETION_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CSTT_PK'
ALTER TABLE RA_COMPLETION_STATUS_TYPE ADD CONSTRAINT RA_CSTT_PK PRIMARY KEY
(
STATUS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CT2_PK'
ALTER TABLE RA_COMPLETION_TYPE ADD CONSTRAINT RA_CT2_PK PRIMARY KEY
(
COMPLETION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_COT2_PK'
ALTER TABLE RA_CONDITION_TYPE ADD CONSTRAINT RA_COT2_PK PRIMARY KEY
(
CONDITION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CONT_PK'
ALTER TABLE RA_CONFIDENCE_TYPE ADD CONSTRAINT RA_CONT_PK PRIMARY KEY
(
CONFIDENCE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CR2_PK'
ALTER TABLE RA_CONFIDENTIAL_REASON ADD CONSTRAINT RA_CR2_PK PRIMARY KEY
(
CONFIDENTIAL_REASON,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CT3_PK'
ALTER TABLE RA_CONFIDENTIAL_TYPE ADD CONSTRAINT RA_CT3_PK PRIMARY KEY
(
CONFIDENTIAL_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CONR_PK'
ALTER TABLE RA_CONFORMITY_RELATION ADD CONSTRAINT RA_CONR_PK PRIMARY KEY
(
CONFORMITY_RELATIONSHIP,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CONSBR_PK'
ALTER TABLE RA_CONSENT_BA_ROLE ADD CONSTRAINT RA_CONSBR_PK PRIMARY KEY
(
CONSENT_BA_ROLE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CONSCT_PK'
ALTER TABLE RA_CONSENT_COMP_TYPE ADD CONSTRAINT RA_CONSCT_PK PRIMARY KEY
(
CONSENT_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CONSC_PK'
ALTER TABLE RA_CONSENT_CONDITION ADD CONSTRAINT RA_CONSC_PK PRIMARY KEY
(
CONSENT_TYPE,
CONSENT_CONDITION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CONSR_PK'
ALTER TABLE RA_CONSENT_REMARK ADD CONSTRAINT RA_CONSR_PK PRIMARY KEY
(
REMARK_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CONSS_PK'
ALTER TABLE RA_CONSENT_STATUS ADD CONSTRAINT RA_CONSS_PK PRIMARY KEY
(
CONSENT_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CONST_PK'
ALTER TABLE RA_CONSENT_TYPE ADD CONSTRAINT RA_CONST_PK PRIMARY KEY
(
CONSENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_COAT_PK'
ALTER TABLE RA_CONSULT_ATTEND_TYPE ADD CONSTRAINT RA_COAT_PK PRIMARY KEY
(
ATTEND_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CCT_PK'
ALTER TABLE RA_CONSULT_COMP_TYPE ADD CONSTRAINT RA_CCT_PK PRIMARY KEY
(
COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CODT_PK'
ALTER TABLE RA_CONSULT_DISC_TYPE ADD CONSTRAINT RA_CODT_PK PRIMARY KEY
(
DISCUSSION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_COIT_PK'
ALTER TABLE RA_CONSULT_ISSUE_TYPE ADD CONSTRAINT RA_COIT_PK PRIMARY KEY
(
CONSULT_ISSUE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_COR_PK'
ALTER TABLE RA_CONSULT_REASON ADD CONSTRAINT RA_COR_PK PRIMARY KEY
(
CONSULT_REASON,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CORE_PK'
ALTER TABLE RA_CONSULT_RESOLUTION ADD CONSTRAINT RA_CORE_PK PRIMARY KEY
(
CONSULT_RESOLUTION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CORL_PK'
ALTER TABLE RA_CONSULT_ROLE ADD CONSTRAINT RA_CORL_PK PRIMARY KEY
(
CONSULT_ROLE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_COTY_PK'
ALTER TABLE RA_CONSULT_TYPE ADD CONSTRAINT RA_COTY_PK PRIMARY KEY
(
CONSULT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_COX_PK'
ALTER TABLE RA_CONSULT_XREF_TYPE ADD CONSTRAINT RA_COX_PK PRIMARY KEY
(
CONSULT_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CR_PK'
ALTER TABLE RA_CONTACT_ROLE ADD CONSTRAINT RA_CR_PK PRIMARY KEY
(
CONTACT_ROLE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CONTY_PK'
ALTER TABLE RA_CONTAMINANT_TYPE ADD CONSTRAINT RA_CONTY_PK PRIMARY KEY
(
CONTAMINANT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_COTCT_PK'
ALTER TABLE RA_CONTEST_COMP_TYPE ADD CONSTRAINT RA_COTCT_PK PRIMARY KEY
(
CONTEST_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CPR_PK'
ALTER TABLE RA_CONTEST_PARTY_ROLE ADD CONSTRAINT RA_CPR_PK PRIMARY KEY
(
PARTY_ROLE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CRES_PK'
ALTER TABLE RA_CONTEST_RESOLUTION ADD CONSTRAINT RA_CRES_PK PRIMARY KEY
(
RESOLUTION_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CTY_PK'
ALTER TABLE RA_CONTEST_TYPE ADD CONSTRAINT RA_CTY_PK PRIMARY KEY
(
CONTEST_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CCT2_PK'
ALTER TABLE RA_CONTRACT_COMP_TYPE ADD CONSTRAINT RA_CCT2_PK PRIMARY KEY
(
CONTRACT_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CBR_PK'
ALTER TABLE RA_CONT_BA_ROLE ADD CONSTRAINT RA_CBR_PK PRIMARY KEY
(
BA_ROLE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CCR_PK'
ALTER TABLE RA_CONT_COMP_REASON ADD CONSTRAINT RA_CCR_PK PRIMARY KEY
(
REASON_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CXC_PK'
ALTER TABLE RA_CONT_EXTEND_COND ADD CONSTRAINT RA_CXC_PK PRIMARY KEY
(
EXTENSION_CONDITION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CXT_PK'
ALTER TABLE RA_CONT_EXTEND_TYPE ADD CONSTRAINT RA_CXT_PK PRIMARY KEY
(
EXTENSION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CIE_PK'
ALTER TABLE RA_CONT_INSUR_ELECT ADD CONSTRAINT RA_CIE_PK PRIMARY KEY
(
INSURANCE_ELECTION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_COP_PK'
ALTER TABLE RA_CONT_OPERATING_PROC ADD CONSTRAINT RA_COP_PK PRIMARY KEY
(
OPERATING_PROCEDURE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CPT_PK'
ALTER TABLE RA_CONT_PROVISION_TYPE ADD CONSTRAINT RA_CPT_PK PRIMARY KEY
(
CONT_PROVISION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CPXT_PK'
ALTER TABLE RA_CONT_PROV_XREF_TYPE ADD CONSTRAINT RA_CPXT_PK PRIMARY KEY
(
PROVISION_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CSTAT_PK'
ALTER TABLE RA_CONT_STATUS ADD CONSTRAINT RA_CSTAT_PK PRIMARY KEY
(
CONTRACT_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CST3_PK'
ALTER TABLE RA_CONT_STATUS_TYPE ADD CONSTRAINT RA_CST3_PK PRIMARY KEY
(
CONTRACT_STATUS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CT8_PK'
ALTER TABLE RA_CONT_TYPE ADD CONSTRAINT RA_CT8_PK PRIMARY KEY
(
CONTRACT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CVR_PK'
ALTER TABLE RA_CONT_VOTE_RESPONSE ADD CONSTRAINT RA_CVR_PK PRIMARY KEY
(
VOTE_RESPONSE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CVT_PK'
ALTER TABLE RA_CONT_VOTE_TYPE ADD CONSTRAINT RA_CVT_PK PRIMARY KEY
(
VOTE_PROCEDURE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CXTY_PK'
ALTER TABLE RA_CONT_XREF_TYPE ADD CONSTRAINT RA_CXTY_PK PRIMARY KEY
(
CONTRACT_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CC_PK'
ALTER TABLE RA_COORD_CAPTURE ADD CONSTRAINT RA_CC_PK PRIMARY KEY
(
CAPTURE_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CC1_PK'
ALTER TABLE RA_COORD_COMPUTE ADD CONSTRAINT RA_CC1_PK PRIMARY KEY
(
COMPUTE_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CQ_PK'
ALTER TABLE RA_COORD_QUALITY ADD CONSTRAINT RA_CQ_PK PRIMARY KEY
(
COORDINATE_QUALITY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CST1_PK'
ALTER TABLE RA_COORD_SYSTEM_TYPE ADD CONSTRAINT RA_CST1_PK PRIMARY KEY
(
COORDINATE_SYSTEM_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CH_PK'
ALTER TABLE RA_CORE_HANDLING ADD CONSTRAINT RA_CH_PK PRIMARY KEY
(
CORE_HANDLING,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CRT_PK'
ALTER TABLE RA_CORE_RECOVERY_TYPE ADD CONSTRAINT RA_CRT_PK PRIMARY KEY
(
CORE_RECOVERY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CST2_PK'
ALTER TABLE RA_CORE_SAMPLE_TYPE ADD CONSTRAINT RA_CST2_PK PRIMARY KEY
(
CORE_SAMPLE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CSM_PK'
ALTER TABLE RA_CORE_SHIFT_METHOD ADD CONSTRAINT RA_CSM_PK PRIMARY KEY
(
CORE_SHIFT_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CS1_PK'
ALTER TABLE RA_CORE_SOLVENT ADD CONSTRAINT RA_CS1_PK PRIMARY KEY
(
CORE_SOLVENT,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CT5_PK'
ALTER TABLE RA_CORE_TYPE ADD CONSTRAINT RA_CT5_PK PRIMARY KEY
(
CORE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CM1_PK'
ALTER TABLE RA_CORRECTION_METHOD ADD CONSTRAINT RA_CM1_PK PRIMARY KEY
(
CORRECTION_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CT1_PK'
ALTER TABLE RA_COUPLING_TYPE ADD CONSTRAINT RA_CT1_PK PRIMARY KEY
(
COUPLING_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CRTY_PK'
ALTER TABLE RA_CREATOR_TYPE ADD CONSTRAINT RA_CRTY_PK PRIMARY KEY
(
CREATOR_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CSTP_PK'
ALTER TABLE RA_CS_TRANSFORM_PARM ADD CONSTRAINT RA_CSTP_PK PRIMARY KEY
(
TRANSFORM_PARM,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CTT_PK'
ALTER TABLE RA_CS_TRANSFORM_TYPE ADD CONSTRAINT RA_CTT_PK PRIMARY KEY
(
TRANSFORM_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CS2_PK'
ALTER TABLE RA_CURVE_SCALE ADD CONSTRAINT RA_CS2_PK PRIMARY KEY
(
CURVE_SCALE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CT6_PK'
ALTER TABLE RA_CURVE_TYPE ADD CONSTRAINT RA_CT6_PK PRIMARY KEY
(
CURVE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CX_PK'
ALTER TABLE RA_CURVE_XREF_TYPE ADD CONSTRAINT RA_CX_PK PRIMARY KEY
(
XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CT7_PK'
ALTER TABLE RA_CUSHION_TYPE ADD CONSTRAINT RA_CT7_PK PRIMARY KEY
(
CUSHION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_CF_PK'
ALTER TABLE RA_CUTTING_FLUID ADD CONSTRAINT RA_CF_PK PRIMARY KEY
(
CUTTING_FLUID,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DCP_PK'
ALTER TABLE RA_DATA_CIRC_PROCESS ADD CONSTRAINT RA_DCP_PK PRIMARY KEY
(
DATA_CIRC_PROCESS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DCS_PK'
ALTER TABLE RA_DATA_CIRC_STATUS ADD CONSTRAINT RA_DCS_PK PRIMARY KEY
(
DATA_CIRC_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DST_PK'
ALTER TABLE RA_DATA_STORE_TYPE ADD CONSTRAINT RA_DST_PK PRIMARY KEY
(
DATA_STORE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DFT_PK'
ALTER TABLE RA_DATE_FORMAT_TYPE ADD CONSTRAINT RA_DFT_PK PRIMARY KEY
(
DATA_STORE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DO_PK'
ALTER TABLE RA_DATUM_ORIGIN ADD CONSTRAINT RA_DO_PK PRIMARY KEY
(
DATUM_ORIGIN,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DCC_PK'
ALTER TABLE RA_DECLINE_COND_CODE ADD CONSTRAINT RA_DCC_PK PRIMARY KEY
(
CONDITION_TYPE,
CONDITION_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DCT1_PK'
ALTER TABLE RA_DECLINE_COND_TYPE ADD CONSTRAINT RA_DCT1_PK PRIMARY KEY
(
CONDITION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DCT_PK'
ALTER TABLE RA_DECLINE_CURVE_TYPE ADD CONSTRAINT RA_DCT_PK PRIMARY KEY
(
DECLINE_CURVE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DT_PK'
ALTER TABLE RA_DECLINE_TYPE ADD CONSTRAINT RA_DT_PK PRIMARY KEY
(
DECLINE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DET_PK'
ALTER TABLE RA_DECRYPT_TYPE ADD CONSTRAINT RA_DET_PK PRIMARY KEY
(
DECRYPTION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DT1_PK'
ALTER TABLE RA_DEDUCT_TYPE ADD CONSTRAINT RA_DT1_PK PRIMARY KEY
(
DEDUCT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DF_PK'
ALTER TABLE RA_DIGITAL_FORMAT ADD CONSTRAINT RA_DF_PK PRIMARY KEY
(
DIGITAL_FORMAT,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DO1_PK'
ALTER TABLE RA_DIGITAL_OUTPUT ADD CONSTRAINT RA_DO1_PK PRIMARY KEY
(
DIGITAL_OUTPUT,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DIR_PK'
ALTER TABLE RA_DIRECTION ADD CONSTRAINT RA_DIR_PK PRIMARY KEY
(
DIRECTION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DSAR_PK'
ALTER TABLE RA_DIR_SRVY_ACC_REASON ADD CONSTRAINT RA_DSAR_PK PRIMARY KEY
(
ACCURACY_PROBLEM_REASON,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DSC_PK'
ALTER TABLE RA_DIR_SRVY_CLASS ADD CONSTRAINT RA_DSC_PK PRIMARY KEY
(
DIR_SURVEY_CLASS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DSC1_PK'
ALTER TABLE RA_DIR_SRVY_COMPUTE ADD CONSTRAINT RA_DSC1_PK PRIMARY KEY
(
COMPUTE_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DSCAT_PK'
ALTER TABLE RA_DIR_SRVY_CORR_ANGLE_TYPE ADD CONSTRAINT RA_DSCAT_PK PRIMARY KEY
(
CORR_ANGLE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DSPT_PK'
ALTER TABLE RA_DIR_SRVY_POINT_TYPE ADD CONSTRAINT RA_DSPT_PK PRIMARY KEY
(
POINT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DSPM_PK'
ALTER TABLE RA_DIR_SRVY_PROCESS_METH ADD CONSTRAINT RA_DSPM_PK PRIMARY KEY
(
PROCESS_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DSRU_PK'
ALTER TABLE RA_DIR_SRVY_RAD_UNCERT ADD CONSTRAINT RA_DSRU_PK PRIMARY KEY
(
RAD_UNCERT_DIST_REASON,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DSR_PK'
ALTER TABLE RA_DIR_SRVY_RECORD ADD CONSTRAINT RA_DSR_PK PRIMARY KEY
(
RECORD_MODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DSRT_PK'
ALTER TABLE RA_DIR_SRVY_REPORT_TYPE ADD CONSTRAINT RA_DSRT_PK PRIMARY KEY
(
REPORT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DST1_PK'
ALTER TABLE RA_DIR_SRVY_TYPE ADD CONSTRAINT RA_DST1_PK PRIMARY KEY
(
SURVEY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DRP_PK'
ALTER TABLE RA_DIST_REF_PT ADD CONSTRAINT RA_DRP_PK PRIMARY KEY
(
DISTANCE_REF_POINT,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DOC_PK'
ALTER TABLE RA_DOCUMENT_TYPE ADD CONSTRAINT RA_DOC_PK PRIMARY KEY
(
DOCUMENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DS_PK'
ALTER TABLE RA_DOC_STATUS ADD CONSTRAINT RA_DS_PK PRIMARY KEY
(
DOCUMENT_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DM_PK'
ALTER TABLE RA_DRILLING_MEDIA ADD CONSTRAINT RA_DM_PK PRIMARY KEY
(
DRILLING_MEDIA,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DAC_PK'
ALTER TABLE RA_DRILL_ASSEMBLY_COMP ADD CONSTRAINT RA_DAC_PK PRIMARY KEY
(
COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DBC_PK'
ALTER TABLE RA_DRILL_BIT_CONDITION ADD CONSTRAINT RA_DBC_PK PRIMARY KEY
(
DRILL_BIT_CONDITION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DBDC_PK'
ALTER TABLE RA_DRILL_BIT_DETAIL_CODE ADD CONSTRAINT RA_DBDC_PK PRIMARY KEY
(
BIT_DETAIL_TYPE,
BIT_DETAIL_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DBD_PK'
ALTER TABLE RA_DRILL_BIT_DETAIL_TYPE ADD CONSTRAINT RA_DBD_PK PRIMARY KEY
(
BIT_DETAIL_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DBJT_PK'
ALTER TABLE RA_DRILL_BIT_JET_TYPE ADD CONSTRAINT RA_DBJT_PK PRIMARY KEY
(
JET_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DBT_PK'
ALTER TABLE RA_DRILL_BIT_TYPE ADD CONSTRAINT RA_DBT_PK PRIMARY KEY
(
DRILL_BIT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DHP_PK'
ALTER TABLE RA_DRILL_HOLE_POSITION ADD CONSTRAINT RA_DHP_PK PRIMARY KEY
(
DRILL_HOLE_POSITION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DRT_PK'
ALTER TABLE RA_DRILL_REPORT_TIME ADD CONSTRAINT RA_DRT_PK PRIMARY KEY
(
REPORT_TIME_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DSTC_PK'
ALTER TABLE RA_DRILL_STAT_CODE ADD CONSTRAINT RA_DSTC_PK PRIMARY KEY
(
STATISTIC_TYPE,
STATISTIC_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DSTAT_PK'
ALTER TABLE RA_DRILL_STAT_TYPE ADD CONSTRAINT RA_DSTAT_PK PRIMARY KEY
(
STATISTIC_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_DTT_PK'
ALTER TABLE RA_DRILL_TOOL_TYPE ADD CONSTRAINT RA_DTT_PK PRIMARY KEY
(
DRILL_TOOL_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ES_PK'
ALTER TABLE RA_ECONOMIC_SCENARIO ADD CONSTRAINT RA_ES_PK PRIMARY KEY
(
ECONOMIC_SCENARIO,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_EST_PK'
ALTER TABLE RA_ECONOMIC_SCHEDULE ADD CONSTRAINT RA_EST_PK PRIMARY KEY
(
ECONOMIC_SCHEDULE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_EZHL_PK'
ALTER TABLE RA_ECOZONE_HIER_LEVEL ADD CONSTRAINT RA_EZHL_PK PRIMARY KEY
(
HIERARCHY_LEVEL,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_EZT_PK'
ALTER TABLE RA_ECOZONE_TYPE ADD CONSTRAINT RA_EZT_PK PRIMARY KEY
(
ECOZONE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_EZX_PK'
ALTER TABLE RA_ECOZONE_XREF ADD CONSTRAINT RA_EZX_PK PRIMARY KEY
(
ECOZONE_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_EP_PK'
ALTER TABLE RA_EMPLOYEE_POSITION ADD CONSTRAINT RA_EP_PK PRIMARY KEY
(
EMPLOYEE_POSITION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ES1_PK'
ALTER TABLE RA_EMPLOYEE_STATUS ADD CONSTRAINT RA_ES1_PK PRIMARY KEY
(
EMPLOYEE_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ET_PK'
ALTER TABLE RA_ENCODING_TYPE ADD CONSTRAINT RA_ET_PK PRIMARY KEY
(
ENCODING_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ERT_PK'
ALTER TABLE RA_ENHANCED_REC_TYPE ADD CONSTRAINT RA_ERT_PK PRIMARY KEY
(
ENHANCED_RECOVERY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_EAT_PK'
ALTER TABLE RA_ENT_ACCESS_TYPE ADD CONSTRAINT RA_EAT_PK PRIMARY KEY
(
ACCESS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ECT_PK'
ALTER TABLE RA_ENT_COMPONENT_TYPE ADD CONSTRAINT RA_ECT_PK PRIMARY KEY
(
ENT_COMP_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_EEA_PK'
ALTER TABLE RA_ENT_EXPIRY_ACTION ADD CONSTRAINT RA_EEA_PK PRIMARY KEY
(
EXPIRY_ACTION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ESGT_PK'
ALTER TABLE RA_ENT_SEC_GROUP_TYPE ADD CONSTRAINT RA_ESGT_PK PRIMARY KEY
(
GROUP_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ESGXT_PK'
ALTER TABLE RA_ENT_SEC_GROUP_XREF ADD CONSTRAINT RA_ESGXT_PK PRIMARY KEY
(
XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ENT_PK'
ALTER TABLE RA_ENT_TYPE ADD CONSTRAINT RA_ENT_PK PRIMARY KEY
(
ENTITLEMENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_E_PK'
ALTER TABLE RA_ENVIRONMENT ADD CONSTRAINT RA_E_PK PRIMARY KEY
(
ENVIRONMENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_EBART_PK'
ALTER TABLE RA_EQUIP_BA_ROLE_TYPE ADD CONSTRAINT RA_EBART_PK PRIMARY KEY
(
ROLE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_EQCT_PK'
ALTER TABLE RA_EQUIP_COMPONENT_TYPE ADD CONSTRAINT RA_EQCT_PK PRIMARY KEY
(
EQUIPMENT_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_EIL_PK'
ALTER TABLE RA_EQUIP_INSTALL_LOC ADD CONSTRAINT RA_EIL_PK PRIMARY KEY
(
INSTALL_LOC_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_EML_PK'
ALTER TABLE RA_EQUIP_MAINT_LOC ADD CONSTRAINT RA_EML_PK PRIMARY KEY
(
MAINT_LOCATION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_EMR_PK'
ALTER TABLE RA_EQUIP_MAINT_REASON ADD CONSTRAINT RA_EMR_PK PRIMARY KEY
(
MAINT_REASON,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_EQMS_PK'
ALTER TABLE RA_EQUIP_MAINT_STATUS ADD CONSTRAINT RA_EQMS_PK PRIMARY KEY
(
MAINTAIN_STATUS_TYPE,
MAINTAIN_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_EQST_PK'
ALTER TABLE RA_EQUIP_MAINT_STAT_TYPE ADD CONSTRAINT RA_EQST_PK PRIMARY KEY
(
MAINTAIN_STATUS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ERR_PK'
ALTER TABLE RA_EQUIP_REMOVE_REASON ADD CONSTRAINT RA_ERR_PK PRIMARY KEY
(
REMOVE_REASON,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ESP_PK'
ALTER TABLE RA_EQUIP_SPEC ADD CONSTRAINT RA_ESP_PK PRIMARY KEY
(
SPEC_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ESRT_PK'
ALTER TABLE RA_EQUIP_SPEC_REF_TYPE ADD CONSTRAINT RA_ESRT_PK PRIMARY KEY
(
REFERENCE_VALUE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ESST_PK'
ALTER TABLE RA_EQUIP_SPEC_SET_TYPE ADD CONSTRAINT RA_ESST_PK PRIMARY KEY
(
SPEC_SET_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ESTAT_PK'
ALTER TABLE RA_EQUIP_STATUS ADD CONSTRAINT RA_ESTAT_PK PRIMARY KEY
(
STATUS_TYPE,
EQUIP_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ESTA_PK'
ALTER TABLE RA_EQUIP_STATUS_TYPE ADD CONSTRAINT RA_ESTA_PK PRIMARY KEY
(
STATUS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ESC_PK'
ALTER TABLE RA_EQUIP_SYSTEM_CONDITION ADD CONSTRAINT RA_ESC_PK PRIMARY KEY
(
SYSTEM_CONDITION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_EUST_PK'
ALTER TABLE RA_EQUIP_USE_STAT_TYPE ADD CONSTRAINT RA_EUST_PK PRIMARY KEY
(
EQUIP_USE_STAT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_EXT_PK'
ALTER TABLE RA_EQUIP_XREF_TYPE ADD CONSTRAINT RA_EXT_PK PRIMARY KEY
(
EQUIP_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ED_PK'
ALTER TABLE RA_EW_DIRECTION ADD CONSTRAINT RA_ED_PK PRIMARY KEY
(
EW_DIRECTION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ESL_PK'
ALTER TABLE RA_EW_START_LINE ADD CONSTRAINT RA_ESL_PK PRIMARY KEY
(
EW_START_LINE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FAC_PK'
ALTER TABLE RA_FACILITY_CLASS ADD CONSTRAINT RA_FAC_PK PRIMARY KEY
(
FACILITY_CLASS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FACT2_PK'
ALTER TABLE RA_FACILITY_COMP_TYPE ADD CONSTRAINT RA_FACT2_PK PRIMARY KEY
(
FACILITY_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FSC_PK'
ALTER TABLE RA_FACILITY_SPEC_CODE ADD CONSTRAINT RA_FSC_PK PRIMARY KEY
(
SPEC_TYPE,
SPEC_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FST1_PK'
ALTER TABLE RA_FACILITY_SPEC_TYPE ADD CONSTRAINT RA_FST1_PK PRIMARY KEY
(
SPEC_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FS_PK'
ALTER TABLE RA_FACILITY_STATUS ADD CONSTRAINT RA_FS_PK PRIMARY KEY
(
STATUS_TYPE,
STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FACT_PK'
ALTER TABLE RA_FACILITY_TYPE ADD CONSTRAINT RA_FACT_PK PRIMARY KEY
(
FACILITY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FXT1_PK'
ALTER TABLE RA_FACILITY_XREF_TYPE ADD CONSTRAINT RA_FXT1_PK PRIMARY KEY
(
FACILITY_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FF_PK'
ALTER TABLE RA_FAC_FUNCTION ADD CONSTRAINT RA_FF_PK PRIMARY KEY
(
FACILITY_FUNCTION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FLC_PK'
ALTER TABLE RA_FAC_LIC_COND ADD CONSTRAINT RA_FLC_PK PRIMARY KEY
(
CONDITION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FLCC_PK'
ALTER TABLE RA_FAC_LIC_COND_CODE ADD CONSTRAINT RA_FLCC_PK PRIMARY KEY
(
CONDITION_TYPE,
CONDITION_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FLDC_PK'
ALTER TABLE RA_FAC_LIC_DUE_CONDITION ADD CONSTRAINT RA_FLDC_PK PRIMARY KEY
(
DUE_CONDITION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FLET_PK'
ALTER TABLE RA_FAC_LIC_EXTEND_TYPE ADD CONSTRAINT RA_FLET_PK PRIMARY KEY
(
LICENSE_EXTENSION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FLVT_PK'
ALTER TABLE RA_FAC_LIC_VIOLATION_TYPE ADD CONSTRAINT RA_FLVT_PK PRIMARY KEY
(
VIOLATION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FLVRT_PK'
ALTER TABLE RA_FAC_LIC_VIOL_RESOL ADD CONSTRAINT RA_FLVRT_PK PRIMARY KEY
(
RESOLVE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FMT_PK'
ALTER TABLE RA_FAC_MAINTAIN_TYPE ADD CONSTRAINT RA_FMT_PK PRIMARY KEY
(
FACILITY_TYPE,
MAINTAIN_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FMS_PK'
ALTER TABLE RA_FAC_MAINT_STATUS ADD CONSTRAINT RA_FMS_PK PRIMARY KEY
(
MAINTAIN_STATUS_TYPE,
MAINTAIN_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FMST_PK'
ALTER TABLE RA_FAC_MAINT_STATUS_TYPE ADD CONSTRAINT RA_FMST_PK PRIMARY KEY
(
MAINTAIN_STATUS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FPC_PK'
ALTER TABLE RA_FAC_PIPE_COVER ADD CONSTRAINT RA_FPC_PK PRIMARY KEY
(
COVER_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FPM_PK'
ALTER TABLE RA_FAC_PIPE_MATERIAL ADD CONSTRAINT RA_FPM_PK PRIMARY KEY
(
PIPELINE_MATERIAL,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FPT_PK'
ALTER TABLE RA_FAC_PIPE_TYPE ADD CONSTRAINT RA_FPT_PK PRIMARY KEY
(
PIPELINE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FSRT_PK'
ALTER TABLE RA_FAC_SPEC_REFERENCE ADD CONSTRAINT RA_FSRT_PK PRIMARY KEY
(
REFERENCE_VALUE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FAST_PK'
ALTER TABLE RA_FAC_STATUS_TYPE ADD CONSTRAINT RA_FAST_PK PRIMARY KEY
(
STATUS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FT1_PK'
ALTER TABLE RA_FAULT_TYPE ADD CONSTRAINT RA_FT1_PK PRIMARY KEY
(
FAULT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FLCT_PK'
ALTER TABLE RA_FIELD_COMPONENT_TYPE ADD CONSTRAINT RA_FLCT_PK PRIMARY KEY
(
FIELD_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FST_PK'
ALTER TABLE RA_FIELD_STATION_TYPE ADD CONSTRAINT RA_FST_PK PRIMARY KEY
(
FIELD_STATION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FT3_PK'
ALTER TABLE RA_FIELD_TYPE ADD CONSTRAINT RA_FT3_PK PRIMARY KEY
(
FIELD_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FCT_PK'
ALTER TABLE RA_FIN_COMPONENT_TYPE ADD CONSTRAINT RA_FCT_PK PRIMARY KEY
(
FIN_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FICT_PK'
ALTER TABLE RA_FIN_COST_TYPE ADD CONSTRAINT RA_FICT_PK PRIMARY KEY
(
COST_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FIS_PK'
ALTER TABLE RA_FIN_STATUS ADD CONSTRAINT RA_FIS_PK PRIMARY KEY
(
FIN_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FT_PK'
ALTER TABLE RA_FIN_TYPE ADD CONSTRAINT RA_FT_PK PRIMARY KEY
(
FIN_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FXT_PK'
ALTER TABLE RA_FIN_XREF_TYPE ADD CONSTRAINT RA_FXT_PK PRIMARY KEY
(
FIN_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FT2_PK'
ALTER TABLE RA_FLUID_TYPE ADD CONSTRAINT RA_FT2_PK PRIMARY KEY
(
FLUID_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_F_PK'
ALTER TABLE RA_FONT ADD CONSTRAINT RA_F_PK PRIMARY KEY
(
FONT,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FE_PK'
ALTER TABLE RA_FONT_EFFECT ADD CONSTRAINT RA_FE_PK PRIMARY KEY
(
FONT_EFFECT,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FO_PK'
ALTER TABLE RA_FOOTAGE_ORIGIN ADD CONSTRAINT RA_FO_PK PRIMARY KEY
(
FOOTAGE_ORIGIN,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FALT_PK'
ALTER TABLE RA_FOS_ALIAS_TYPE ADD CONSTRAINT RA_FALT_PK PRIMARY KEY
(
FOS_ALIAS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FAT_PK'
ALTER TABLE RA_FOS_ASSEMBLAGE_TYPE ADD CONSTRAINT RA_FAT_PK PRIMARY KEY
(
ASSEMBLAGE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FDC_PK'
ALTER TABLE RA_FOS_DESC_CODE ADD CONSTRAINT RA_FDC_PK PRIMARY KEY
(
DESCRIPTION_TYPE,
DESCRIPTION_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FDT_PK'
ALTER TABLE RA_FOS_DESC_TYPE ADD CONSTRAINT RA_FDT_PK PRIMARY KEY
(
DESCRIPTION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FLH_PK'
ALTER TABLE RA_FOS_LIFE_HABIT ADD CONSTRAINT RA_FLH_PK PRIMARY KEY
(
LIFE_HABIT,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FNST_PK'
ALTER TABLE RA_FOS_NAME_SET_TYPE ADD CONSTRAINT RA_FNST_PK PRIMARY KEY
(
FOSSIL_NAME_SET_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FOT_PK'
ALTER TABLE RA_FOS_OBS_TYPE ADD CONSTRAINT RA_FOT_PK PRIMARY KEY
(
FOSSIL_OBS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FTG_PK'
ALTER TABLE RA_FOS_TAXON_GROUP ADD CONSTRAINT RA_FTG_PK PRIMARY KEY
(
TAXON_GROUP,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FTL_PK'
ALTER TABLE RA_FOS_TAXON_LEVEL ADD CONSTRAINT RA_FTL_PK PRIMARY KEY
(
TAXON_LEVEL,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_FX_PK'
ALTER TABLE RA_FOS_XREF ADD CONSTRAINT RA_FX_PK PRIMARY KEY
(
FOSSIL_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_GAVC_PK'
ALTER TABLE RA_GAS_ANL_VALUE_CODE ADD CONSTRAINT RA_GAVC_PK PRIMARY KEY
(
GAS_ANL_VALUE_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_GAVT_PK'
ALTER TABLE RA_GAS_ANL_VALUE_TYPE ADD CONSTRAINT RA_GAVT_PK PRIMARY KEY
(
GAS_ANL_VALUE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_GRT_PK'
ALTER TABLE RA_GRANTED_RIGHT_TYPE ADD CONSTRAINT RA_GRT_PK PRIMARY KEY
(
GRANTED_RIGHT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_HCM_PK'
ALTER TABLE RA_HEAT_CONTENT_METHOD ADD CONSTRAINT RA_HCM_PK PRIMARY KEY
(
HEAT_CONTENT_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_HC_PK'
ALTER TABLE RA_HOLE_CONDITION ADD CONSTRAINT RA_HC_PK PRIMARY KEY
(
HOLE_CONDITION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_HDR_PK'
ALTER TABLE RA_HORIZ_DRILL_REASON ADD CONSTRAINT RA_HDR_PK PRIMARY KEY
(
HORIZ_DRILL_REASON,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_HDT_PK'
ALTER TABLE RA_HORIZ_DRILL_TYPE ADD CONSTRAINT RA_HDT_PK PRIMARY KEY
(
HORIZ_DRILL_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_HCR_PK'
ALTER TABLE RA_HSE_COMP_ROLE ADD CONSTRAINT RA_HCR_PK PRIMARY KEY
(
COMPONENT_ROLE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_HICT_PK'
ALTER TABLE RA_HSE_INCIDENT_COMP_TYPE ADD CONSTRAINT RA_HICT_PK PRIMARY KEY
(
COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_HID_PK'
ALTER TABLE RA_HSE_INCIDENT_DETAIL ADD CONSTRAINT RA_HID_PK PRIMARY KEY
(
DETAIL_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_HRT_PK'
ALTER TABLE RA_HSE_RESPONSE_TYPE ADD CONSTRAINT RA_HRT_PK PRIMARY KEY
(
ACTION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ICM_PK'
ALTER TABLE RA_IMAGE_CALIBRATE_METHOD ADD CONSTRAINT RA_ICM_PK PRIMARY KEY
(
CALIBRATE_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ISET_PK'
ALTER TABLE RA_IMAGE_SECTION_TYPE ADD CONSTRAINT RA_ISET_PK PRIMARY KEY
(
SECTION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_IBR_PK'
ALTER TABLE RA_INCIDENT_BA_ROLE ADD CONSTRAINT RA_IBR_PK PRIMARY KEY
(
BA_ROLE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ICC_PK'
ALTER TABLE RA_INCIDENT_CAUSE_CODE ADD CONSTRAINT RA_ICC_PK PRIMARY KEY
(
CAUSE_TYPE,
CAUSE_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ICT1_PK'
ALTER TABLE RA_INCIDENT_CAUSE_TYPE ADD CONSTRAINT RA_ICT1_PK PRIMARY KEY
(
CAUSE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_IIT_PK'
ALTER TABLE RA_INCIDENT_INTERACT_TYPE ADD CONSTRAINT RA_IIT_PK PRIMARY KEY
(
INTERACTION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_IRR_PK'
ALTER TABLE RA_INCIDENT_RESP_RESULT ADD CONSTRAINT RA_IRR_PK PRIMARY KEY
(
RESPONSE_RESULT,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ISUB_PK'
ALTER TABLE RA_INCIDENT_SUBSTANCE ADD CONSTRAINT RA_ISUB_PK PRIMARY KEY
(
INCIDENT_SUBSTANCE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ISRL_PK'
ALTER TABLE RA_INCIDENT_SUBST_ROLE ADD CONSTRAINT RA_ISRL_PK PRIMARY KEY
(
SUBSTANCE_ROLE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_IP_PK'
ALTER TABLE RA_INFORMATION_PROCESS ADD CONSTRAINT RA_IP_PK PRIMARY KEY
(
INFORMATION_PROCESS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_INT_PK'
ALTER TABLE RA_INPUT_TYPE ADD CONSTRAINT RA_INT_PK PRIMARY KEY
(
INPUT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ICT_PK'
ALTER TABLE RA_INSP_COMP_TYPE ADD CONSTRAINT RA_ICT_PK PRIMARY KEY
(
COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_IS_PK'
ALTER TABLE RA_INSP_STATUS ADD CONSTRAINT RA_IS_PK PRIMARY KEY
(
INSPECTION_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ICT2_PK'
ALTER TABLE RA_INSTRUMENT_COMP_TYPE ADD CONSTRAINT RA_ICT2_PK PRIMARY KEY
(
INSTRUMENT_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_INST_PK'
ALTER TABLE RA_INSTRUMENT_TYPE ADD CONSTRAINT RA_INST_PK PRIMARY KEY
(
LAND_INSTRUMENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_INSDTC_PK'
ALTER TABLE RA_INST_DETAIL_CODE ADD CONSTRAINT RA_INSDTC_PK PRIMARY KEY
(
INSTRUMENT_DETAIL_TYPE,
INSTRUMENT_DETAIL_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_INSDRVT_PK'
ALTER TABLE RA_INST_DETAIL_REF_VALUE ADD CONSTRAINT RA_INSDRVT_PK PRIMARY KEY
(
REFERENCE_VALUE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_INSDT_PK'
ALTER TABLE RA_INST_DETAIL_TYPE ADD CONSTRAINT RA_INSDT_PK PRIMARY KEY
(
INSTRUMENT_DETAIL_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_IOT_PK'
ALTER TABLE RA_INTERP_ORIGIN_TYPE ADD CONSTRAINT RA_IOT_PK PRIMARY KEY
(
ORIGIN_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_IT_PK'
ALTER TABLE RA_INTERP_TYPE ADD CONSTRAINT RA_IT_PK PRIMARY KEY
(
INTERP_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ISC_PK'
ALTER TABLE RA_INT_SET_COMPONENT ADD CONSTRAINT RA_ISC_PK PRIMARY KEY
(
COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ISR_PK'
ALTER TABLE RA_INT_SET_ROLE ADD CONSTRAINT RA_ISR_PK PRIMARY KEY
(
INTEREST_SET_ROLE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ISS_PK'
ALTER TABLE RA_INT_SET_STATUS ADD CONSTRAINT RA_ISS_PK PRIMARY KEY
(
STATUS_TYPE,
STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ISST_PK'
ALTER TABLE RA_INT_SET_STATUS_TYPE ADD CONSTRAINT RA_ISST_PK PRIMARY KEY
(
STATUS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ISTR_PK'
ALTER TABLE RA_INT_SET_TRIGGER ADD CONSTRAINT RA_ISTR_PK PRIMARY KEY
(
TRIGGER_EVENT,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_IST_PK'
ALTER TABLE RA_INT_SET_TYPE ADD CONSTRAINT RA_IST_PK PRIMARY KEY
(
INTEREST_SET_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ISXT_PK'
ALTER TABLE RA_INT_SET_XREF_TYPE ADD CONSTRAINT RA_ISXT_PK PRIMARY KEY
(
INT_SET_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_IMT_PK'
ALTER TABLE RA_INV_MATERIAL_TYPE ADD CONSTRAINT RA_IMT_PK PRIMARY KEY
(
INVENTORY_MATERIAL_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_IC_PK'
ALTER TABLE RA_ITEM_CATEGORY ADD CONSTRAINT RA_IC_PK PRIMARY KEY
(
ITEM_CATEGORY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ISC1_PK'
ALTER TABLE RA_ITEM_SUB_CATEGORY ADD CONSTRAINT RA_ISC1_PK PRIMARY KEY
(
ITEM_CATEGORY,
ITEM_SUB_CATEGORY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LAM_PK'
ALTER TABLE RA_LAND_ACQTN_METHOD ADD CONSTRAINT RA_LAM_PK PRIMARY KEY
(
LAND_ACQTN_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LAT_PK'
ALTER TABLE RA_LAND_AGREE_TYPE ADD CONSTRAINT RA_LAT_PK PRIMARY KEY
(
LAND_AGREE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LBT1_PK'
ALTER TABLE RA_LAND_BIDDER_TYPE ADD CONSTRAINT RA_LBT1_PK PRIMARY KEY
(
LAND_BIDDER_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LBS_PK'
ALTER TABLE RA_LAND_BID_STATUS ADD CONSTRAINT RA_LBS_PK PRIMARY KEY
(
LAND_BID_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LBT_PK'
ALTER TABLE RA_LAND_BID_TYPE ADD CONSTRAINT RA_LBT_PK PRIMARY KEY
(
LAND_BID_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LCA_PK'
ALTER TABLE RA_LAND_CASE_ACTION ADD CONSTRAINT RA_LCA_PK PRIMARY KEY
(
LAND_CASE_ACTION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LCT_PK'
ALTER TABLE RA_LAND_CASE_TYPE ADD CONSTRAINT RA_LCT_PK PRIMARY KEY
(
LAND_CASE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LCBT_PK'
ALTER TABLE RA_LAND_CASH_BID_TYPE ADD CONSTRAINT RA_LCBT_PK PRIMARY KEY
(
CASH_BID_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LCT1_PK'
ALTER TABLE RA_LAND_COMPONENT_TYPE ADD CONSTRAINT RA_LCT1_PK PRIMARY KEY
(
LAND_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LLT_PK'
ALTER TABLE RA_LAND_LESSOR_TYPE ADD CONSTRAINT RA_LLT_PK PRIMARY KEY
(
LAND_LESSOR_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LOS_PK'
ALTER TABLE RA_LAND_OFFRING_STATUS ADD CONSTRAINT RA_LOS_PK PRIMARY KEY
(
LAND_OFFRING_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LOT1_PK'
ALTER TABLE RA_LAND_OFFRING_TYPE ADD CONSTRAINT RA_LOT1_PK PRIMARY KEY
(
LAND_OFFRING_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LPT1_PK'
ALTER TABLE RA_LAND_PROPERTY_TYPE ADD CONSTRAINT RA_LPT1_PK PRIMARY KEY
(
LAND_PROPERTY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LRNT_PK'
ALTER TABLE RA_LAND_REF_NUM_TYPE ADD CONSTRAINT RA_LRNT_PK PRIMARY KEY
(
LAND_REF_NUM_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LRT_PK'
ALTER TABLE RA_LAND_RENTAL_TYPE ADD CONSTRAINT RA_LRT_PK PRIMARY KEY
(
LAND_RENTAL_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LRT2_PK'
ALTER TABLE RA_LAND_REQUEST_TYPE ADD CONSTRAINT RA_LRT2_PK PRIMARY KEY
(
LAND_REQUEST_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LRS_PK'
ALTER TABLE RA_LAND_REQ_STATUS ADD CONSTRAINT RA_LRS_PK PRIMARY KEY
(
LAND_REQ_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LRC_PK'
ALTER TABLE RA_LAND_RIGHT_CATEGORY ADD CONSTRAINT RA_LRC_PK PRIMARY KEY
(
LAND_RIGHT_CATEGORY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LRS1_PK'
ALTER TABLE RA_LAND_RIGHT_STATUS ADD CONSTRAINT RA_LRS1_PK PRIMARY KEY
(
STATUS_TYPE,
LAND_RIGHT_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LRST_PK'
ALTER TABLE RA_LAND_STATUS_TYPE ADD CONSTRAINT RA_LRST_PK PRIMARY KEY
(
STATUS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LTCR_PK'
ALTER TABLE RA_LAND_TITLE_CHG_RSN ADD CONSTRAINT RA_LTCR_PK PRIMARY KEY
(
LAND_TITLE_CHANGE_REASON,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LTT2_PK'
ALTER TABLE RA_LAND_TITLE_TYPE ADD CONSTRAINT RA_LTT2_PK PRIMARY KEY
(
LAND_TITLE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LTT3_PK'
ALTER TABLE RA_LAND_TRACT_TYPE ADD CONSTRAINT RA_LTT3_PK PRIMARY KEY
(
LAND_TRACT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LUT1_PK'
ALTER TABLE RA_LAND_UNIT_TYPE ADD CONSTRAINT RA_LUT1_PK PRIMARY KEY
(
LAND_UNIT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LWRT_PK'
ALTER TABLE RA_LAND_WELL_REL_TYPE ADD CONSTRAINT RA_LWRT_PK PRIMARY KEY
(
WELL_RELATIONSHIP_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LANG_PK'
ALTER TABLE RA_LANGUAGE ADD CONSTRAINT RA_LANG_PK PRIMARY KEY
(
LANGUAGE_ID,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LUS_PK'
ALTER TABLE RA_LEASE_UNIT_STATUS ADD CONSTRAINT RA_LUS_PK PRIMARY KEY
(
LEASE_UNIT_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LUT_PK'
ALTER TABLE RA_LEASE_UNIT_TYPE ADD CONSTRAINT RA_LUT_PK PRIMARY KEY
(
LEASE_UNIT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LST1_PK'
ALTER TABLE RA_LEGAL_SURVEY_TYPE ADD CONSTRAINT RA_LST1_PK PRIMARY KEY
(
LEGAL_SURVEY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LIST_PK'
ALTER TABLE RA_LICENSE_STATUS ADD CONSTRAINT RA_LIST_PK PRIMARY KEY
(
LICENSE_STATUS_TYPE,
LICENSE_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LISTT_PK'
ALTER TABLE RA_LIC_STATUS_TYPE ADD CONSTRAINT RA_LISTT_PK PRIMARY KEY
(
LICENSE_STATUS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LT_PK'
ALTER TABLE RA_LINER_TYPE ADD CONSTRAINT RA_LT_PK PRIMARY KEY
(
LINER_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_L_PK'
ALTER TABLE RA_LITHOLOGY ADD CONSTRAINT RA_L_PK PRIMARY KEY
(
LITHOLOGY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LA_PK'
ALTER TABLE RA_LITH_ABUNDANCE ADD CONSTRAINT RA_LA_PK PRIMARY KEY
(
ABUNDANCE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LBT2_PK'
ALTER TABLE RA_LITH_BOUNDARY_TYPE ADD CONSTRAINT RA_LBT2_PK PRIMARY KEY
(
BOUNDARY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LC_PK'
ALTER TABLE RA_LITH_COLOR ADD CONSTRAINT RA_LC_PK PRIMARY KEY
(
COLOR,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_L2_PK'
ALTER TABLE RA_LITH_CONSOLIDATION ADD CONSTRAINT RA_L2_PK PRIMARY KEY
(
CONSOLIDATION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LCB_PK'
ALTER TABLE RA_LITH_CYCLE_BED ADD CONSTRAINT RA_LCB_PK PRIMARY KEY
(
CYCLE_BED,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LDE_PK'
ALTER TABLE RA_LITH_DEP_ENV ADD CONSTRAINT RA_LDE_PK PRIMARY KEY
(
DEPOSITIONAL_ENVIRONMENT,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LD1_PK'
ALTER TABLE RA_LITH_DIAGENESIS ADD CONSTRAINT RA_LD1_PK PRIMARY KEY
(
DIAGENESIS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LD2_PK'
ALTER TABLE RA_LITH_DISTRIBUTION ADD CONSTRAINT RA_LD2_PK PRIMARY KEY
(
DISTRIBUTION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LI_PK'
ALTER TABLE RA_LITH_INTENSITY ADD CONSTRAINT RA_LI_PK PRIMARY KEY
(
INTENSITY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LLCT_PK'
ALTER TABLE RA_LITH_LOG_COMP_TYPE ADD CONSTRAINT RA_LLCT_PK PRIMARY KEY
(
LITH_LOG_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LLT1_PK'
ALTER TABLE RA_LITH_LOG_TYPE ADD CONSTRAINT RA_LLT1_PK PRIMARY KEY
(
LITH_LOG_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LOS1_PK'
ALTER TABLE RA_LITH_OIL_STAIN ADD CONSTRAINT RA_LOS1_PK PRIMARY KEY
(
OIL_STAIN,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LPC_PK'
ALTER TABLE RA_LITH_PATTERN_CODE ADD CONSTRAINT RA_LPC_PK PRIMARY KEY
(
LITH_PATTERN_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LR1_PK'
ALTER TABLE RA_LITH_ROCKPART ADD CONSTRAINT RA_LR1_PK PRIMARY KEY
(
ROCKPART_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LRM_PK'
ALTER TABLE RA_LITH_ROCK_MATRIX ADD CONSTRAINT RA_LRM_PK PRIMARY KEY
(
ROCK_MATRIX,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LRP_PK'
ALTER TABLE RA_LITH_ROCK_PROFILE ADD CONSTRAINT RA_LRP_PK PRIMARY KEY
(
ROCK_PROFILE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LRT1_PK'
ALTER TABLE RA_LITH_ROCK_TYPE ADD CONSTRAINT RA_LRT1_PK PRIMARY KEY
(
ROCK_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LR_PK'
ALTER TABLE RA_LITH_ROUNDING ADD CONSTRAINT RA_LR_PK PRIMARY KEY
(
ROUNDING,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LSS_PK'
ALTER TABLE RA_LITH_SCALE_SCHEME ADD CONSTRAINT RA_LSS_PK PRIMARY KEY
(
SCALE_SCHEME,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LS_PK'
ALTER TABLE RA_LITH_SORTING ADD CONSTRAINT RA_LS_PK PRIMARY KEY
(
SORTING,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LS1_PK'
ALTER TABLE RA_LITH_STRUCTURE ADD CONSTRAINT RA_LS1_PK PRIMARY KEY
(
STRUCTURE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LDT_PK'
ALTER TABLE RA_LOCATION_DESC_TYPE ADD CONSTRAINT RA_LDT_PK PRIMARY KEY
(
LOCATION_DESC_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LQ_PK'
ALTER TABLE RA_LOCATION_QUALIFIER ADD CONSTRAINT RA_LQ_PK PRIMARY KEY
(
LOCATION_QUALIFIER,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LQ1_PK'
ALTER TABLE RA_LOCATION_QUALITY ADD CONSTRAINT RA_LQ1_PK PRIMARY KEY
(
LOCATION_QUALITY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LT1_PK'
ALTER TABLE RA_LOCATION_TYPE ADD CONSTRAINT RA_LT1_PK PRIMARY KEY
(
LOCATION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LADT_PK'
ALTER TABLE RA_LOG_ARRAY_DIMENSION ADD CONSTRAINT RA_LADT_PK PRIMARY KEY
(
DIMENSION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LCM_PK'
ALTER TABLE RA_LOG_CORRECT_METHOD ADD CONSTRAINT RA_LCM_PK PRIMARY KEY
(
CORRECTION_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LCCS_PK'
ALTER TABLE RA_LOG_CRV_CLASS_SYSTEM ADD CONSTRAINT RA_LCCS_PK PRIMARY KEY
(
SYSTEM_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LDT1_PK'
ALTER TABLE RA_LOG_DEPTH_TYPE ADD CONSTRAINT RA_LDT1_PK PRIMARY KEY
(
DEPTH_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LD3_PK'
ALTER TABLE RA_LOG_DIRECTION ADD CONSTRAINT RA_LD3_PK PRIMARY KEY
(
LOG_DIRECTION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LGVT_PK'
ALTER TABLE RA_LOG_GOOD_VALUE_TYPE ADD CONSTRAINT RA_LGVT_PK PRIMARY KEY
(
GOOD_VALUE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LIX_PK'
ALTER TABLE RA_LOG_INDEX_TYPE ADD CONSTRAINT RA_LIX_PK PRIMARY KEY
(
INDEX_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LM_PK'
ALTER TABLE RA_LOG_MATRIX ADD CONSTRAINT RA_LM_PK PRIMARY KEY
(
LOG_MATRIX_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LPOST_PK'
ALTER TABLE RA_LOG_POSITION_TYPE ADD CONSTRAINT RA_LPOST_PK PRIMARY KEY
(
POSITION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LTT_PK'
ALTER TABLE RA_LOG_TOOL_TYPE ADD CONSTRAINT RA_LTT_PK PRIMARY KEY
(
LOG_TOOL_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LMT_PK'
ALTER TABLE RA_LOST_MATERIAL_TYPE ADD CONSTRAINT RA_LMT_PK PRIMARY KEY
(
LOST_MATERIAL_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LFX_PK'
ALTER TABLE RA_LR_FACILITY_XREF ADD CONSTRAINT RA_LFX_PK PRIMARY KEY
(
XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LFX1_PK'
ALTER TABLE RA_LR_FIELD_XREF ADD CONSTRAINT RA_LFX1_PK PRIMARY KEY
(
XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LST2_PK'
ALTER TABLE RA_LR_SIZE_TYPE ADD CONSTRAINT RA_LST2_PK PRIMARY KEY
(
SIZE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LTR_PK'
ALTER TABLE RA_LR_TERMIN_REQMT ADD CONSTRAINT RA_LTR_PK PRIMARY KEY
(
TERMINATION_REQMT,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LTT1_PK'
ALTER TABLE RA_LR_TERMIN_TYPE ADD CONSTRAINT RA_LTT1_PK PRIMARY KEY
(
TERMINATION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LXT_PK'
ALTER TABLE RA_LR_XREF_TYPE ADD CONSTRAINT RA_LXT_PK PRIMARY KEY
(
LR_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_LOCR_PK'
ALTER TABLE RA_L_OFFR_CANCEL_RSN ADD CONSTRAINT RA_LOCR_PK PRIMARY KEY
(
LAND_OFFR_CANCEL_RSN,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_MAT_PK'
ALTER TABLE RA_MACERAL_AMOUNT_TYPE ADD CONSTRAINT RA_MAT_PK PRIMARY KEY
(
MACERAL_AMOUNT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_MP_PK'
ALTER TABLE RA_MAINT_PROCESS ADD CONSTRAINT RA_MP_PK PRIMARY KEY
(
MAINTAIN_PROCESS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_MTT_PK'
ALTER TABLE RA_MATURATION_TYPE ADD CONSTRAINT RA_MTT_PK PRIMARY KEY
(
MATURATION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_MM_PK'
ALTER TABLE RA_MATURITY_METHOD ADD CONSTRAINT RA_MM_PK PRIMARY KEY
(
MATURITY_METHOD_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_MBCM_PK'
ALTER TABLE RA_MBAL_COMPRESS_TYPE ADD CONSTRAINT RA_MBCM_PK PRIMARY KEY
(
Z_FACTOR_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_MBCT_PK'
ALTER TABLE RA_MBAL_CURVE_TYPE ADD CONSTRAINT RA_MBCT_PK PRIMARY KEY
(
CURVE_FIT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ML_PK'
ALTER TABLE RA_MEASUREMENT_LOC ADD CONSTRAINT RA_ML_PK PRIMARY KEY
(
MEASUREMENT_LOCATION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_MT1_PK'
ALTER TABLE RA_MEASUREMENT_TYPE ADD CONSTRAINT RA_MT1_PK PRIMARY KEY
(
MEASUREMENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_MT_PK'
ALTER TABLE RA_MEASURE_TECHNIQUE ADD CONSTRAINT RA_MT_PK PRIMARY KEY
(
MEASUREMENT_TECHNIQUE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_MT2_PK'
ALTER TABLE RA_MEDIA_TYPE ADD CONSTRAINT RA_MT2_PK PRIMARY KEY
(
MEDIA_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_MTHT_PK'
ALTER TABLE RA_METHOD_TYPE ADD CONSTRAINT RA_MTHT_PK PRIMARY KEY
(
METHOD_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_MDC_PK'
ALTER TABLE RA_MISC_DATA_CODE ADD CONSTRAINT RA_MDC_PK PRIMARY KEY
(
MISC_DATA_TYPE,
MISC_DATA_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_MDT_PK'
ALTER TABLE RA_MISC_DATA_TYPE ADD CONSTRAINT RA_MDT_PK PRIMARY KEY
(
MISC_DATA_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_MIST_PK'
ALTER TABLE RA_MISSING_STRAT_TYPE ADD CONSTRAINT RA_MIST_PK PRIMARY KEY
(
MISSING_STRAT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_MBT_PK'
ALTER TABLE RA_MOBILITY_TYPE ADD CONSTRAINT RA_MBT_PK PRIMARY KEY
(
MOBILITY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_MO_PK'
ALTER TABLE RA_MONTH ADD CONSTRAINT RA_MO_PK PRIMARY KEY
(
MONTH,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_MCR_PK'
ALTER TABLE RA_MUD_COLLECT_REASON ADD CONSTRAINT RA_MCR_PK PRIMARY KEY
(
MUD_COLLECT_REASON,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_MLC_PK'
ALTER TABLE RA_MUD_LOG_COLOR ADD CONSTRAINT RA_MLC_PK PRIMARY KEY
(
MUD_LOG_COLOR,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_MPC_PK'
ALTER TABLE RA_MUD_PROPERTY_CODE ADD CONSTRAINT RA_MPC_PK PRIMARY KEY
(
MUD_PROPERTY,
MUD_PROPERTY_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_MPR_PK'
ALTER TABLE RA_MUD_PROPERTY_REF ADD CONSTRAINT RA_MPR_PK PRIMARY KEY
(
MUD_PROPERTY_REF,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_MPT_PK'
ALTER TABLE RA_MUD_PROPERTY_TYPE ADD CONSTRAINT RA_MPT_PK PRIMARY KEY
(
MUD_PROPERTY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_MST_PK'
ALTER TABLE RA_MUD_SAMPLE_TYPE ADD CONSTRAINT RA_MST_PK PRIMARY KEY
(
MUD_SAMPLE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_M_PK'
ALTER TABLE RA_MUNICIPALITY ADD CONSTRAINT RA_M_PK PRIMARY KEY
(
MUNICIPALITY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_NSXT_PK'
ALTER TABLE RA_NAME_SET_XREF_TYPE ADD CONSTRAINT RA_NSXT_PK PRIMARY KEY
(
XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_NP_PK'
ALTER TABLE RA_NODE_POSITION ADD CONSTRAINT RA_NP_PK PRIMARY KEY
(
NODE_POSITION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_N_PK'
ALTER TABLE RA_NORTH ADD CONSTRAINT RA_N_PK PRIMARY KEY
(
NORTH_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_NCT_PK'
ALTER TABLE RA_NOTIFICATION_COMP_TYPE ADD CONSTRAINT RA_NCT_PK PRIMARY KEY
(
NOTIFICATION_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_NT_PK'
ALTER TABLE RA_NOTIFICATION_TYPE ADD CONSTRAINT RA_NT_PK PRIMARY KEY
(
NOTIFICATION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ND_PK'
ALTER TABLE RA_NS_DIRECTION ADD CONSTRAINT RA_ND_PK PRIMARY KEY
(
NS_DIRECTION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_NSL_PK'
ALTER TABLE RA_NS_START_LINE ADD CONSTRAINT RA_NSL_PK PRIMARY KEY
(
NS_START_LINE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_OCM_PK'
ALTER TABLE RA_OBLIG_CALC_METHOD ADD CONSTRAINT RA_OCM_PK PRIMARY KEY
(
CALCULATION_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_OCP_PK'
ALTER TABLE RA_OBLIG_CALC_POINT ADD CONSTRAINT RA_OCP_PK PRIMARY KEY
(
CALCULATION_POINT,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_OC_PK'
ALTER TABLE RA_OBLIG_CATEGORY ADD CONSTRAINT RA_OC_PK PRIMARY KEY
(
LAND_OBLIG_CATEGORY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_OCT2_PK'
ALTER TABLE RA_OBLIG_COMPONENT_TYPE ADD CONSTRAINT RA_OCT2_PK PRIMARY KEY
(
OBLIGATION_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_OCR_PK'
ALTER TABLE RA_OBLIG_COMP_REASON ADD CONSTRAINT RA_OCR_PK PRIMARY KEY
(
COMPONENT_REASON,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ODC_PK'
ALTER TABLE RA_OBLIG_DEDUCT_CALC ADD CONSTRAINT RA_ODC_PK PRIMARY KEY
(
CALCULATION_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_OPT_PK'
ALTER TABLE RA_OBLIG_PARTY_TYPE ADD CONSTRAINT RA_OPT_PK PRIMARY KEY
(
PARTY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_OPR_PK'
ALTER TABLE RA_OBLIG_PAY_RESP ADD CONSTRAINT RA_OPR_PK PRIMARY KEY
(
PAYMENT_RESPONSIBILITY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ORT_PK'
ALTER TABLE RA_OBLIG_REMARK_TYPE ADD CONSTRAINT RA_ORT_PK PRIMARY KEY
(
REMARK_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_OSP_PK'
ALTER TABLE RA_OBLIG_SUSPEND_PAY ADD CONSTRAINT RA_OSP_PK PRIMARY KEY
(
SUSPEND_PAYMENT_REASON,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_OT1_PK'
ALTER TABLE RA_OBLIG_TRIGGER ADD CONSTRAINT RA_OT1_PK PRIMARY KEY
(
TRIGGER_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_OT_PK'
ALTER TABLE RA_OBLIG_TYPE ADD CONSTRAINT RA_OT_PK PRIMARY KEY
(
LAND_OBLIG_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_OXT_PK'
ALTER TABLE RA_OBLIG_XREF_TYPE ADD CONSTRAINT RA_OXT_PK PRIMARY KEY
(
OBLIG_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_OAC_PK'
ALTER TABLE RA_OFFSHORE_AREA_CODE ADD CONSTRAINT RA_OAC_PK PRIMARY KEY
(
OFFSHORE_AREA_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_OCT_PK'
ALTER TABLE RA_OFFSHORE_COMP_TYPE ADD CONSTRAINT RA_OCT_PK PRIMARY KEY
(
OFFSHORE_COMPLETION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_OVC_PK'
ALTER TABLE RA_OIL_VALUE_CODE ADD CONSTRAINT RA_OVC_PK PRIMARY KEY
(
OIL_VALUE_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_OT4_PK'
ALTER TABLE RA_ONTOGENY_TYPE ADD CONSTRAINT RA_OT4_PK PRIMARY KEY
(
ONTOGENY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_OQ_PK'
ALTER TABLE RA_OPERAND_QUALIFIER ADD CONSTRAINT RA_OQ_PK PRIMARY KEY
(
OPERAND_QUALIFIER,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_O_PK'
ALTER TABLE RA_ORIENTATION ADD CONSTRAINT RA_O_PK PRIMARY KEY
(
ORIENTATION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PAT_PK'
ALTER TABLE RA_PALEO_AMOUNT_TYPE ADD CONSTRAINT RA_PAT_PK PRIMARY KEY
(
PALEO_AMOUNT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PIT_PK'
ALTER TABLE RA_PALEO_IND_TYPE ADD CONSTRAINT RA_PIT_PK PRIMARY KEY
(
INDICATOR_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PIT1_PK'
ALTER TABLE RA_PALEO_INTERP_TYPE ADD CONSTRAINT RA_PIT1_PK PRIMARY KEY
(
INTERP_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PTF_PK'
ALTER TABLE RA_PALEO_TYPE_FOSSIL ADD CONSTRAINT RA_PTF_PK PRIMARY KEY
(
TYPE_FOSSIL_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PSCT_PK'
ALTER TABLE RA_PAL_SUM_COMP_TYPE ADD CONSTRAINT RA_PSCT_PK PRIMARY KEY
(
PALEO_SUMMARY_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PSXT_PK'
ALTER TABLE RA_PAL_SUM_XREF_TYPE ADD CONSTRAINT RA_PSXT_PK PRIMARY KEY
(
PALEO_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PLT_PK'
ALTER TABLE RA_PARCEL_LOT_TYPE ADD CONSTRAINT RA_PLT_PK PRIMARY KEY
(
PARCEL_LOT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PT_PK'
ALTER TABLE RA_PARCEL_TYPE ADD CONSTRAINT RA_PT_PK PRIMARY KEY
(
PARCEL_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PT1_PK'
ALTER TABLE RA_PAYMENT_TYPE ADD CONSTRAINT RA_PT1_PK PRIMARY KEY
(
PAYMENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PT2_PK'
ALTER TABLE RA_PAYZONE_TYPE ADD CONSTRAINT RA_PT2_PK PRIMARY KEY
(
PAYZONE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PDT_PK'
ALTER TABLE RA_PAY_DETAIL_TYPE ADD CONSTRAINT RA_PDT_PK PRIMARY KEY
(
PAY_DETAIL_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PM_PK'
ALTER TABLE RA_PAY_METHOD ADD CONSTRAINT RA_PM_PK PRIMARY KEY
(
PAY_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PRT_PK'
ALTER TABLE RA_PAY_RATE_TYPE ADD CONSTRAINT RA_PRT_PK PRIMARY KEY
(
PAY_RATE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PAR_PK'
ALTER TABLE RA_PDEN_AMEND_REASON ADD CONSTRAINT RA_PAR_PK PRIMARY KEY
(
AMEND_REASON,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PCT2_PK'
ALTER TABLE RA_PDEN_COMPONENT_TYPE ADD CONSTRAINT RA_PCT2_PK PRIMARY KEY
(
PDEN_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PS_PK'
ALTER TABLE RA_PDEN_STATUS ADD CONSTRAINT RA_PS_PK PRIMARY KEY
(
PDEN_STATUS_TYPE,
PDEN_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PST2_PK'
ALTER TABLE RA_PDEN_STATUS_TYPE ADD CONSTRAINT RA_PST2_PK PRIMARY KEY
(
PDEN_STATUS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PXT_PK'
ALTER TABLE RA_PDEN_XREF_TYPE ADD CONSTRAINT RA_PXT_PK PRIMARY KEY
(
PDEN_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PFM_PK'
ALTER TABLE RA_PERFORATION_METHOD ADD CONSTRAINT RA_PFM_PK PRIMARY KEY
(
PERFORATION_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PFT_PK'
ALTER TABLE RA_PERFORATION_TYPE ADD CONSTRAINT RA_PFT_PK PRIMARY KEY
(
PERF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PT3_PK'
ALTER TABLE RA_PERIOD_TYPE ADD CONSTRAINT RA_PT3_PK PRIMARY KEY
(
PERIOD_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PRMT_PK'
ALTER TABLE RA_PERMEABILITY_TYPE ADD CONSTRAINT RA_PRMT_PK PRIMARY KEY
(
PERMEABILITY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PIS_PK'
ALTER TABLE RA_PHYSICAL_ITEM_STATUS ADD CONSTRAINT RA_PIS_PK PRIMARY KEY
(
PHYSICAL_ITEM_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PP_PK'
ALTER TABLE RA_PHYSICAL_PROCESS ADD CONSTRAINT RA_PP_PK PRIMARY KEY
(
PHYSICAL_PROCESS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PIGT_PK'
ALTER TABLE RA_PHYS_ITEM_GROUP_TYPE ADD CONSTRAINT RA_PIGT_PK PRIMARY KEY
(
GROUP_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PL_PK'
ALTER TABLE RA_PICK_LOCATION ADD CONSTRAINT RA_PL_PK PRIMARY KEY
(
PICK_LOCATION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PQ_PK'
ALTER TABLE RA_PICK_QUALIFIER ADD CONSTRAINT RA_PQ_PK PRIMARY KEY
(
PICK_QUALIFIER,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PQR_PK'
ALTER TABLE RA_PICK_QUALIF_REASON ADD CONSTRAINT RA_PQR_PK PRIMARY KEY
(
PICK_QUALIF_REASON,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PQ1_PK'
ALTER TABLE RA_PICK_QUALITY ADD CONSTRAINT RA_PQ1_PK PRIMARY KEY
(
PICK_QUALITY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PVT_PK'
ALTER TABLE RA_PICK_VERSION_TYPE ADD CONSTRAINT RA_PVT_PK PRIMARY KEY
(
PICK_VERSION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PT5_PK'
ALTER TABLE RA_PLATFORM_TYPE ADD CONSTRAINT RA_PT5_PK PRIMARY KEY
(
PLATFORM_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PS1_PK'
ALTER TABLE RA_PLOT_SYMBOL ADD CONSTRAINT RA_PS1_PK PRIMARY KEY
(
PLOT_SYMBOL,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PT6_PK'
ALTER TABLE RA_PLUG_TYPE ADD CONSTRAINT RA_PT6_PK PRIMARY KEY
(
PLUG_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PCT3_PK'
ALTER TABLE RA_POOL_COMPONENT_TYPE ADD CONSTRAINT RA_PCT3_PK PRIMARY KEY
(
POOL_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PS2_PK'
ALTER TABLE RA_POOL_STATUS ADD CONSTRAINT RA_PS2_PK PRIMARY KEY
(
POOL_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PT7_PK'
ALTER TABLE RA_POOL_TYPE ADD CONSTRAINT RA_PT7_PK PRIMARY KEY
(
POOL_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PORT_PK'
ALTER TABLE RA_POROSITY_TYPE ADD CONSTRAINT RA_PORT_PK PRIMARY KEY
(
POROSITY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PAR1_PK'
ALTER TABLE RA_PPDM_AUDIT_REASON ADD CONSTRAINT RA_PAR1_PK PRIMARY KEY
(
AUDIT_REASON,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PAUT_PK'
ALTER TABLE RA_PPDM_AUDIT_TYPE ADD CONSTRAINT RA_PAUT_PK PRIMARY KEY
(
AUDIT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PBRL_PK'
ALTER TABLE RA_PPDM_BOOLEAN_RULE ADD CONSTRAINT RA_PBRL_PK PRIMARY KEY
(
BOOLEAN_RULE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PCM_PK'
ALTER TABLE RA_PPDM_CREATE_METHOD ADD CONSTRAINT RA_PCM_PK PRIMARY KEY
(
CREATE_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PDT1_PK'
ALTER TABLE RA_PPDM_DATA_TYPE ADD CONSTRAINT RA_PDT1_PK PRIMARY KEY
(
DATA_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PDV_PK'
ALTER TABLE RA_PPDM_DEFAULT_VALUE ADD CONSTRAINT RA_PDV_PK PRIMARY KEY
(
DEFAULT_VALUE_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PEM_PK'
ALTER TABLE RA_PPDM_ENFORCE_METHOD ADD CONSTRAINT RA_PEM_PK PRIMARY KEY
(
ENFORCE_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PFR_PK'
ALTER TABLE RA_PPDM_FAIL_RESULT ADD CONSTRAINT RA_PFR_PK PRIMARY KEY
(
RULE_FAIL_RESULT,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PPGT_PK'
ALTER TABLE RA_PPDM_GROUP_TYPE ADD CONSTRAINT RA_PPGT_PK PRIMARY KEY
(
GROUP_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PPGU_PK'
ALTER TABLE RA_PPDM_GROUP_USE ADD CONSTRAINT RA_PPGU_PK PRIMARY KEY
(
GROUP_USE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PGXT_PK'
ALTER TABLE RA_PPDM_GROUP_XREF_TYPE ADD CONSTRAINT RA_PGXT_PK PRIMARY KEY
(
GROUP_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PIC_PK'
ALTER TABLE RA_PPDM_INDEX_CATEGORY ADD CONSTRAINT RA_PIC_PK PRIMARY KEY
(
INDEX_CATEGORY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PMRT_PK'
ALTER TABLE RA_PPDM_MAP_RULE_TYPE ADD CONSTRAINT RA_PMRT_PK PRIMARY KEY
(
MAP_RULE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PMT_PK'
ALTER TABLE RA_PPDM_MAP_TYPE ADD CONSTRAINT RA_PMT_PK PRIMARY KEY
(
MAP_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PMC_PK'
ALTER TABLE RA_PPDM_METRIC_CODE ADD CONSTRAINT RA_PMC_PK PRIMARY KEY
(
METRIC_TYPE,
METRIC_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PMCT_PK'
ALTER TABLE RA_PPDM_METRIC_COMP_TYPE ADD CONSTRAINT RA_PMCT_PK PRIMARY KEY
(
METRIC_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PMRV_PK'
ALTER TABLE RA_PPDM_METRIC_REF_VALUE ADD CONSTRAINT RA_PMRV_PK PRIMARY KEY
(
REFERENCE_VALUE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PMT1_PK'
ALTER TABLE RA_PPDM_METRIC_TYPE ADD CONSTRAINT RA_PMT1_PK PRIMARY KEY
(
METRIC_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_POBS_PK'
ALTER TABLE RA_PPDM_OBJECT_STATUS ADD CONSTRAINT RA_POBS_PK PRIMARY KEY
(
OBJECT_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_POBT_PK'
ALTER TABLE RA_PPDM_OBJECT_TYPE ADD CONSTRAINT RA_POBT_PK PRIMARY KEY
(
OBJECT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_POS_PK'
ALTER TABLE RA_PPDM_OPERATING_SYSTEM ADD CONSTRAINT RA_POS_PK PRIMARY KEY
(
OPERATING_SYSTEM,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_POR_PK'
ALTER TABLE RA_PPDM_OWNER_ROLE ADD CONSTRAINT RA_POR_PK PRIMARY KEY
(
OWNER_ROLE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PPT_PK'
ALTER TABLE RA_PPDM_PROC_TYPE ADD CONSTRAINT RA_PPT_PK PRIMARY KEY
(
PROCEDURE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PQCQ_PK'
ALTER TABLE RA_PPDM_QC_QUALITY ADD CONSTRAINT RA_PQCQ_PK PRIMARY KEY
(
QUALITY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PQCS_PK'
ALTER TABLE RA_PPDM_QC_STATUS ADD CONSTRAINT RA_PQCS_PK PRIMARY KEY
(
QC_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PQCT_PK'
ALTER TABLE RA_PPDM_QC_TYPE ADD CONSTRAINT RA_PQCT_PK PRIMARY KEY
(
QC_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PRDB_PK'
ALTER TABLE RA_PPDM_RDBMS ADD CONSTRAINT RA_PRDB_PK PRIMARY KEY
(
RDBMS_ID,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PRVT_PK'
ALTER TABLE RA_PPDM_REF_VALUE_TYPE ADD CONSTRAINT RA_PRVT_PK PRIMARY KEY
(
REFERENCE_VALUE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PRQ_PK'
ALTER TABLE RA_PPDM_ROW_QUALITY ADD CONSTRAINT RA_PRQ_PK PRIMARY KEY
(
ROW_QUALITY_ID,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PRC_PK'
ALTER TABLE RA_PPDM_RULE_CLASS ADD CONSTRAINT RA_PRC_PK PRIMARY KEY
(
RULE_CLASS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PRCT1_PK'
ALTER TABLE RA_PPDM_RULE_COMP_TYPE ADD CONSTRAINT RA_PRCT1_PK PRIMARY KEY
(
RULE_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PRDT_PK'
ALTER TABLE RA_PPDM_RULE_DETAIL_TYPE ADD CONSTRAINT RA_PRDT_PK PRIMARY KEY
(
RULE_DETAIL_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PRP_PK'
ALTER TABLE RA_PPDM_RULE_PURPOSE ADD CONSTRAINT RA_PRP_PK PRIMARY KEY
(
RULE_PURPOSE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PRS_PK'
ALTER TABLE RA_PPDM_RULE_STATUS ADD CONSTRAINT RA_PRS_PK PRIMARY KEY
(
RULE_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PRUC_PK'
ALTER TABLE RA_PPDM_RULE_USE_COND ADD CONSTRAINT RA_PRUC_PK PRIMARY KEY
(
USE_CONDITION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PRXC_PK'
ALTER TABLE RA_PPDM_RULE_XREF_COND ADD CONSTRAINT RA_PRXC_PK PRIMARY KEY
(
RULE_XREF_CONDITION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PRXT_PK'
ALTER TABLE RA_PPDM_RULE_XREF_TYPE ADD CONSTRAINT RA_PRXT_PK PRIMARY KEY
(
RULE_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PSET_PK'
ALTER TABLE RA_PPDM_SCHEMA_ENTITY ADD CONSTRAINT RA_PSET_PK PRIMARY KEY
(
ELEMENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PSGT_PK'
ALTER TABLE RA_PPDM_SCHEMA_GROUP ADD CONSTRAINT RA_PSGT_PK PRIMARY KEY
(
SCHEMA_GROUP_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PPST_PK'
ALTER TABLE RA_PPDM_SYSTEM_TYPE ADD CONSTRAINT RA_PPST_PK PRIMARY KEY
(
PPDM_SYSTEM_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PTT_PK'
ALTER TABLE RA_PPDM_TABLE_TYPE ADD CONSTRAINT RA_PTT_PK PRIMARY KEY
(
TABLE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PUAT_PK'
ALTER TABLE RA_PPDM_UOM_ALIAS_TYPE ADD CONSTRAINT RA_PUAT_PK PRIMARY KEY
(
UOM_ALIAS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PUU_PK'
ALTER TABLE RA_PPDM_UOM_USAGE ADD CONSTRAINT RA_PUU_PK PRIMARY KEY
(
UOM_USAGE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PQ2_PK'
ALTER TABLE RA_PRESERVE_QUALITY ADD CONSTRAINT RA_PQ2_PK PRIMARY KEY
(
PRESERVATION_QUALITY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_P4_PK'
ALTER TABLE RA_PRESERVE_TYPE ADD CONSTRAINT RA_P4_PK PRIMARY KEY
(
PRESERVATION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PM1_PK'
ALTER TABLE RA_PRODUCTION_METHOD ADD CONSTRAINT RA_PM1_PK PRIMARY KEY
(
PRODUCTION_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PRCT_PK'
ALTER TABLE RA_PRODUCT_COMPONENT_TYPE ADD CONSTRAINT RA_PRCT_PK PRIMARY KEY
(
PRODUCT_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PSC_PK'
ALTER TABLE RA_PROD_STRING_COMP_TYPE ADD CONSTRAINT RA_PSC_PK PRIMARY KEY
(
PROD_STRING_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PSS_PK'
ALTER TABLE RA_PROD_STRING_STATUS ADD CONSTRAINT RA_PSS_PK PRIMARY KEY
(
STATUS_TYPE,
STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PSST_PK'
ALTER TABLE RA_PROD_STRING_STAT_TYPE ADD CONSTRAINT RA_PSST_PK PRIMARY KEY
(
STATUS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PST_PK'
ALTER TABLE RA_PROD_STRING_TYPE ADD CONSTRAINT RA_PST_PK PRIMARY KEY
(
PROD_STRING_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PSFS_PK'
ALTER TABLE RA_PROD_STR_FM_STATUS ADD CONSTRAINT RA_PSFS_PK PRIMARY KEY
(
STATUS_TYPE,
STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PSFST_PK'
ALTER TABLE RA_PROD_STR_FM_STAT_TYPE ADD CONSTRAINT RA_PSFST_PK PRIMARY KEY
(
STATUS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PT10_PK'
ALTER TABLE RA_PROJECTION_TYPE ADD CONSTRAINT RA_PT10_PK PRIMARY KEY
(
PROJECTION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PRAT_PK'
ALTER TABLE RA_PROJECT_ALIAS_TYPE ADD CONSTRAINT RA_PRAT_PK PRIMARY KEY
(
PROJ_ALIAS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PBR_PK'
ALTER TABLE RA_PROJECT_BA_ROLE ADD CONSTRAINT RA_PBR_PK PRIMARY KEY
(
ROLE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PCR_PK'
ALTER TABLE RA_PROJECT_COMP_REASON ADD CONSTRAINT RA_PCR_PK PRIMARY KEY
(
COMPONENT_REASON,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PCT_PK'
ALTER TABLE RA_PROJECT_COMP_TYPE ADD CONSTRAINT RA_PCT_PK PRIMARY KEY
(
COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PCO_PK'
ALTER TABLE RA_PROJECT_CONDITION ADD CONSTRAINT RA_PCO_PK PRIMARY KEY
(
PROJECT_TYPE,
CONDITION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PER_PK'
ALTER TABLE RA_PROJECT_EQUIP_ROLE ADD CONSTRAINT RA_PER_PK PRIMARY KEY
(
EQUIP_ROLE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PSTA_PK'
ALTER TABLE RA_PROJECT_STATUS ADD CONSTRAINT RA_PSTA_PK PRIMARY KEY
(
STATUS_TYPE,
STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PSTT_PK'
ALTER TABLE RA_PROJECT_STATUS_TYPE ADD CONSTRAINT RA_PSTT_PK PRIMARY KEY
(
STATUS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PRT1_PK'
ALTER TABLE RA_PROJECT_TYPE ADD CONSTRAINT RA_PRT1_PK PRIMARY KEY
(
PROJECT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PJST_PK'
ALTER TABLE RA_PROJ_STEP_TYPE ADD CONSTRAINT RA_PJST_PK PRIMARY KEY
(
STEP_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PJSXT_PK'
ALTER TABLE RA_PROJ_STEP_XREF_TYPE ADD CONSTRAINT RA_PJSXT_PK PRIMARY KEY
(
PROJECT_STEP_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PT11_PK'
ALTER TABLE RA_PROPPANT_TYPE ADD CONSTRAINT RA_PT11_PK PRIMARY KEY
(
PROPPANT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_PN_PK'
ALTER TABLE RA_PUBLICATION_NAME ADD CONSTRAINT RA_PN_PK PRIMARY KEY
(
PUBLICATION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_QT_PK'
ALTER TABLE RA_QUALIFIER_TYPE ADD CONSTRAINT RA_QT_PK PRIMARY KEY
(
QUALIFIER_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_Q_PK'
ALTER TABLE RA_QUALITY ADD CONSTRAINT RA_Q_PK PRIMARY KEY
(
QUALITY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RC1_PK'
ALTER TABLE RA_RATE_CONDITION ADD CONSTRAINT RA_RC1_PK PRIMARY KEY
(
RATE_CONDITION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RSC_PK'
ALTER TABLE RA_RATE_SCHEDULE ADD CONSTRAINT RA_RSC_PK PRIMARY KEY
(
RATE_SCHEDULE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RC2_PK'
ALTER TABLE RA_RATE_SCHEDULE_COMP_TYPE ADD CONSTRAINT RA_RC2_PK PRIMARY KEY
(
RATE_SCHEDULE_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RSX_PK'
ALTER TABLE RA_RATE_SCHED_XREF ADD CONSTRAINT RA_RSX_PK PRIMARY KEY
(
RATE_SCHEDULE_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RTY_PK'
ALTER TABLE RA_RATE_TYPE ADD CONSTRAINT RA_RTY_PK PRIMARY KEY
(
RATE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RCT_PK'
ALTER TABLE RA_RATIO_CURVE_TYPE ADD CONSTRAINT RA_RCT_PK PRIMARY KEY
(
RATIO_CURVE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RFT_PK'
ALTER TABLE RA_RATIO_FLUID_TYPE ADD CONSTRAINT RA_RFT_PK PRIMARY KEY
(
RATIO_FLUID_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RP_PK'
ALTER TABLE RA_RECORDER_POSITION ADD CONSTRAINT RA_RP_PK PRIMARY KEY
(
RECORDER_POSITION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RT1_PK'
ALTER TABLE RA_RECORDER_TYPE ADD CONSTRAINT RA_RT1_PK PRIMARY KEY
(
RECORDER_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RT2_PK'
ALTER TABLE RA_REMARK_TYPE ADD CONSTRAINT RA_RT2_PK PRIMARY KEY
(
REMARK_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RUT1_PK'
ALTER TABLE RA_REMARK_USE_TYPE ADD CONSTRAINT RA_RUT1_PK PRIMARY KEY
(
REMARK_USE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RFTY_PK'
ALTER TABLE RA_REPEAT_STRAT_TYPE ADD CONSTRAINT RA_RFTY_PK PRIMARY KEY
(
REPEAT_STRAT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RHC_PK'
ALTER TABLE RA_REPORT_HIER_COMP ADD CONSTRAINT RA_RHC_PK PRIMARY KEY
(
COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RHL_PK'
ALTER TABLE RA_REPORT_HIER_LEVEL ADD CONSTRAINT RA_RHL_PK PRIMARY KEY
(
LEVEL_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RHT_PK'
ALTER TABLE RA_REPORT_HIER_TYPE ADD CONSTRAINT RA_RHT_PK PRIMARY KEY
(
HIERARCHY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RHAT_PK'
ALTER TABLE RA_REP_HIER_ALIAS_TYPE ADD CONSTRAINT RA_RHAT_PK PRIMARY KEY
(
REP_HIER_ALIAS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RCMPT_PK'
ALTER TABLE RA_RESENT_COMP_TYPE ADD CONSTRAINT RA_RCMPT_PK PRIMARY KEY
(
RESENT_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RCO_PK'
ALTER TABLE RA_RESENT_CONFIDENCE ADD CONSTRAINT RA_RCO_PK PRIMARY KEY
(
CONFIDENCE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RGT_PK'
ALTER TABLE RA_RESENT_GROUP_TYPE ADD CONSTRAINT RA_RGT_PK PRIMARY KEY
(
GROUP_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RRC_PK'
ALTER TABLE RA_RESENT_REV_CAT ADD CONSTRAINT RA_RRC_PK PRIMARY KEY
(
CATEGORY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RUT_PK'
ALTER TABLE RA_RESENT_USE_TYPE ADD CONSTRAINT RA_RUT_PK PRIMARY KEY
(
USE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RVM_PK'
ALTER TABLE RA_RESENT_VOL_METHOD ADD CONSTRAINT RA_RVM_PK PRIMARY KEY
(
VOLUME_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RXT_PK'
ALTER TABLE RA_RESENT_XREF_TYPE ADD CONSTRAINT RA_RXT_PK PRIMARY KEY
(
XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RA_PK'
ALTER TABLE RA_REST_ACTIVITY ADD CONSTRAINT RA_RA_PK PRIMARY KEY
(
RESTRICTED_ACTIVITY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RD_PK'
ALTER TABLE RA_REST_DURATION ADD CONSTRAINT RA_RD_PK PRIMARY KEY
(
REST_DURATION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RR_PK'
ALTER TABLE RA_REST_REMARK ADD CONSTRAINT RA_RR_PK PRIMARY KEY
(
RESTRICTION_REMARK_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RT3_PK'
ALTER TABLE RA_REST_TYPE ADD CONSTRAINT RA_RT3_PK PRIMARY KEY
(
RESTRICTION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RP1_PK'
ALTER TABLE RA_RETENTION_PERIOD ADD CONSTRAINT RA_RP1_PK PRIMARY KEY
(
RETENTION_PERIOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RM_PK'
ALTER TABLE RA_REVISION_METHOD ADD CONSTRAINT RA_RM_PK PRIMARY KEY
(
REVISION_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RBOP_PK'
ALTER TABLE RA_RIG_BLOWOUT_PREVENTER ADD CONSTRAINT RA_RBOP_PK PRIMARY KEY
(
BLOWOUT_PREVENTER_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RIGC_PK'
ALTER TABLE RA_RIG_CATEGORY ADD CONSTRAINT RA_RIGC_PK PRIMARY KEY
(
RIG_CATEGORY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RCL_PK'
ALTER TABLE RA_RIG_CLASS ADD CONSTRAINT RA_RCL_PK PRIMARY KEY
(
RIG_CLASS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RC_PK'
ALTER TABLE RA_RIG_CODE ADD CONSTRAINT RA_RC_PK PRIMARY KEY
(
RIG_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RDST_PK'
ALTER TABLE RA_RIG_DESANDER_TYPE ADD CONSTRAINT RA_RDST_PK PRIMARY KEY
(
DESANDER_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RDT_PK'
ALTER TABLE RA_RIG_DESILTER_TYPE ADD CONSTRAINT RA_RDT_PK PRIMARY KEY
(
DESILTER_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RDW_PK'
ALTER TABLE RA_RIG_DRAWWORKS ADD CONSTRAINT RA_RDW_PK PRIMARY KEY
(
DRAWWORKS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RGT1_PK'
ALTER TABLE RA_RIG_GENERATOR_TYPE ADD CONSTRAINT RA_RGT1_PK PRIMARY KEY
(
PLANT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_HBT_PK'
ALTER TABLE RA_RIG_HOOKBLOCK_TYPE ADD CONSTRAINT RA_HBT_PK PRIMARY KEY
(
HOOKBLOCK_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RMT_PK'
ALTER TABLE RA_RIG_MAST ADD CONSTRAINT RA_RMT_PK PRIMARY KEY
(
MAST_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ROCT_PK'
ALTER TABLE RA_RIG_OVERHEAD_CAPACITY ADD CONSTRAINT RA_ROCT_PK PRIMARY KEY
(
CAPACITY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ROT_PK'
ALTER TABLE RA_RIG_OVERHEAD_TYPE ADD CONSTRAINT RA_ROT_PK PRIMARY KEY
(
OVERHEAD_EQUIP_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RPU_PK'
ALTER TABLE RA_RIG_PUMP ADD CONSTRAINT RA_RPU_PK PRIMARY KEY
(
PUMP_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RPF_PK'
ALTER TABLE RA_RIG_PUMP_FUNCTION ADD CONSTRAINT RA_RPF_PK PRIMARY KEY
(
PUMP_FUNCTION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RSST_PK'
ALTER TABLE RA_RIG_SUBSTRUCTURE ADD CONSTRAINT RA_RSST_PK PRIMARY KEY
(
SUBSTRUCTURE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RST_PK'
ALTER TABLE RA_RIG_SWIVEL_TYPE ADD CONSTRAINT RA_RST_PK PRIMARY KEY
(
SWIVEL_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RT4_PK'
ALTER TABLE RA_RIG_TYPE ADD CONSTRAINT RA_RT4_PK PRIMARY KEY
(
RIG_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RMIICT_PK'
ALTER TABLE RA_RMII_CONTACT_TYPE ADD CONSTRAINT RA_RMIICT_PK PRIMARY KEY
(
CONTACT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RMIICOT_PK'
ALTER TABLE RA_RMII_CONTENT_TYPE ADD CONSTRAINT RA_RMIICOT_PK PRIMARY KEY
(
RMII_CONTENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RMIIDC_PK'
ALTER TABLE RA_RMII_DEFICIENCY ADD CONSTRAINT RA_RMIIDC_PK PRIMARY KEY
(
DEFICIENCY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RMIIDT_PK'
ALTER TABLE RA_RMII_DESC_TYPE ADD CONSTRAINT RA_RMIIDT_PK PRIMARY KEY
(
DESCRIPTION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RMGT_PK'
ALTER TABLE RA_RMII_GROUP_TYPE ADD CONSTRAINT RA_RMGT_PK PRIMARY KEY
(
GROUP_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RMC_PK'
ALTER TABLE RA_RMII_METADATA_CODE ADD CONSTRAINT RA_RMC_PK PRIMARY KEY
(
METADATA_TYPE,
METADATA_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RMDT_PK'
ALTER TABLE RA_RMII_METADATA_TYPE ADD CONSTRAINT RA_RMDT_PK PRIMARY KEY
(
METADATA_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RMIIQC_PK'
ALTER TABLE RA_RMII_QUALITY_CODE ADD CONSTRAINT RA_RMIIQC_PK PRIMARY KEY
(
INFORMATION_QUALITY_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RMIIS_PK'
ALTER TABLE RA_RMII_STATUS ADD CONSTRAINT RA_RMIIS_PK PRIMARY KEY
(
STATUS_TYPE,
STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RMIIST_PK'
ALTER TABLE RA_RMII_STATUS_TYPE ADD CONSTRAINT RA_RMIIST_PK PRIMARY KEY
(
STATUS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RTX_PK'
ALTER TABLE RA_RM_THESAURUS_XREF ADD CONSTRAINT RA_RTX_PK PRIMARY KEY
(
THESAURUS_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RCOND_PK'
ALTER TABLE RA_ROAD_CONDITION ADD CONSTRAINT RA_RCOND_PK PRIMARY KEY
(
ROAD_CONDITION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RCT1_PK'
ALTER TABLE RA_ROAD_CONTROL_TYPE ADD CONSTRAINT RA_RCT1_PK PRIMARY KEY
(
CONTROL_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RDS_PK'
ALTER TABLE RA_ROAD_DRIVING_SIDE ADD CONSTRAINT RA_RDS_PK PRIMARY KEY
(
DRIVING_SIDE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RDTF_PK'
ALTER TABLE RA_ROAD_TRAFFIC_FLOW_TYPE ADD CONSTRAINT RA_RDTF_PK PRIMARY KEY
(
TRAFFIC_FLOW_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RCS_PK'
ALTER TABLE RA_ROCK_CLASS_SCHEME ADD CONSTRAINT RA_RCS_PK PRIMARY KEY
(
ROCK_CLASS_SCHEME,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RAM_PK'
ALTER TABLE RA_ROLL_ALONG_METHOD ADD CONSTRAINT RA_RAM_PK PRIMARY KEY
(
ROLL_ALONG_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_RT5_PK'
ALTER TABLE RA_ROYALTY_TYPE ADD CONSTRAINT RA_RT5_PK PRIMARY KEY
(
ROYALTY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ST_PK'
ALTER TABLE RA_SALINITY_TYPE ADD CONSTRAINT RA_ST_PK PRIMARY KEY
(
SALINITY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SCT2_PK'
ALTER TABLE RA_SAMPLE_COLLECTION_TYPE ADD CONSTRAINT RA_SCT2_PK PRIMARY KEY
(
COLLECTION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SCMD_PK'
ALTER TABLE RA_SAMPLE_COLLECT_METHOD ADD CONSTRAINT RA_SCMD_PK PRIMARY KEY
(
COLLECT_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SACT_1_PK'
ALTER TABLE RA_SAMPLE_COMP_TYPE ADD CONSTRAINT RA_SACT_1_PK PRIMARY KEY
(
SAMPLE_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SAPCT_PK'
ALTER TABLE RA_SAMPLE_CONTAMINANT ADD CONSTRAINT RA_SAPCT_PK PRIMARY KEY
(
SAMPLE_CONTAMINANT,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SDC_PK'
ALTER TABLE RA_SAMPLE_DESC_CODE ADD CONSTRAINT RA_SDC_PK PRIMARY KEY
(
DESCRIPTION_TYPE,
DESCRIPTION_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SDT_PK'
ALTER TABLE RA_SAMPLE_DESC_TYPE ADD CONSTRAINT RA_SDT_PK PRIMARY KEY
(
DESCRIPTION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SFT_PK'
ALTER TABLE RA_SAMPLE_FRACTION_TYPE ADD CONSTRAINT RA_SFT_PK PRIMARY KEY
(
SAMPLE_FRACTION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SL_PK'
ALTER TABLE RA_SAMPLE_LOCATION ADD CONSTRAINT RA_SL_PK PRIMARY KEY
(
SAMPLE_LOCATION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SPH_PK'
ALTER TABLE RA_SAMPLE_PHASE ADD CONSTRAINT RA_SPH_PK PRIMARY KEY
(
PHASE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SPC_PK'
ALTER TABLE RA_SAMPLE_PREP_CLASS ADD CONSTRAINT RA_SPC_PK PRIMARY KEY
(
PREPARATION_CLASS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SRVT_PK'
ALTER TABLE RA_SAMPLE_REF_VALUE_TYPE ADD CONSTRAINT RA_SRVT_PK PRIMARY KEY
(
REFERENCE_VALUE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SS_PK'
ALTER TABLE RA_SAMPLE_SHAPE ADD CONSTRAINT RA_SS_PK PRIMARY KEY
(
SAMPLE_SHAPE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ST1_PK'
ALTER TABLE RA_SAMPLE_TYPE ADD CONSTRAINT RA_ST1_PK PRIMARY KEY
(
SAMPLE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ST2_PK'
ALTER TABLE RA_SCALE_TRANSFORM ADD CONSTRAINT RA_ST2_PK PRIMARY KEY
(
SCALE_TRANSFORM,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SL1_PK'
ALTER TABLE RA_SCREEN_LOCATION ADD CONSTRAINT RA_SL1_PK PRIMARY KEY
(
SCREEN_LOCATION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ST3_PK'
ALTER TABLE RA_SECTION_TYPE ADD CONSTRAINT RA_ST3_PK PRIMARY KEY
(
SECTION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SP_PK'
ALTER TABLE RA_SEISMIC_PATH ADD CONSTRAINT RA_SP_PK PRIMARY KEY
(
SEISMIC_PATH,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_S3T_PK'
ALTER TABLE RA_SEIS_3D_TYPE ADD CONSTRAINT RA_S3T_PK PRIMARY KEY
(
SEISMIC_3D_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SACTC_PK'
ALTER TABLE RA_SEIS_ACTIVITY_CLASS ADD CONSTRAINT RA_SACTC_PK PRIMARY KEY
(
SEIS_ACTIVITY_CLASS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SACT1_PK'
ALTER TABLE RA_SEIS_ACTIVITY_TYPE ADD CONSTRAINT RA_SACT1_PK PRIMARY KEY
(
SEIS_ACTIVITY_CLASS,
SEIS_ACTIVITY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SAL_PK'
ALTER TABLE RA_SEIS_AUTHORIZE_LIMIT ADD CONSTRAINT RA_SAL_PK PRIMARY KEY
(
LIMIT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SAR_PK'
ALTER TABLE RA_SEIS_AUTHORIZE_REASON ADD CONSTRAINT RA_SAR_PK PRIMARY KEY
(
REASON_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SAT_PK'
ALTER TABLE RA_SEIS_AUTHORIZE_TYPE ADD CONSTRAINT RA_SAT_PK PRIMARY KEY
(
AUTHORIZE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SBM_PK'
ALTER TABLE RA_SEIS_BIN_METHOD ADD CONSTRAINT RA_SBM_PK PRIMARY KEY
(
BIN_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SBOT_PK'
ALTER TABLE RA_SEIS_BIN_OUTLINE_TYPE ADD CONSTRAINT RA_SBOT_PK PRIMARY KEY
(
BIN_OUTLINE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SCM_PK'
ALTER TABLE RA_SEIS_CABLE_MAKE ADD CONSTRAINT RA_SCM_PK PRIMARY KEY
(
CABLE_MAKE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SCT_PK'
ALTER TABLE RA_SEIS_CHANNEL_TYPE ADD CONSTRAINT RA_SCT_PK PRIMARY KEY
(
CHANNEL_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SD_PK'
ALTER TABLE RA_SEIS_DIMENSION ADD CONSTRAINT RA_SD_PK PRIMARY KEY
(
SEIS_DIMENSION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SET_PK'
ALTER TABLE RA_SEIS_ENERGY_TYPE ADD CONSTRAINT RA_SET_PK PRIMARY KEY
(
SEIS_ENERGY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SFDT2_PK'
ALTER TABLE RA_SEIS_FLOW_DESC_TYPE ADD CONSTRAINT RA_SFDT2_PK PRIMARY KEY
(
FLOW_DESC_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SGT_PK'
ALTER TABLE RA_SEIS_GROUP_TYPE ADD CONSTRAINT RA_SGT_PK PRIMARY KEY
(
SEIS_GROUP_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SICT_PK'
ALTER TABLE RA_SEIS_INSP_COMPONENT_TYPE ADD CONSTRAINT RA_SICT_PK PRIMARY KEY
(
SEIS_INSP_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SLC_PK'
ALTER TABLE RA_SEIS_LIC_COND ADD CONSTRAINT RA_SLC_PK PRIMARY KEY
(
CONDITION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SLCC_PK'
ALTER TABLE RA_SEIS_LIC_COND_CODE ADD CONSTRAINT RA_SLCC_PK PRIMARY KEY
(
CONDITION_TYPE,
CONDITION_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SLDC_PK'
ALTER TABLE RA_SEIS_LIC_DUE_CONDITION ADD CONSTRAINT RA_SLDC_PK PRIMARY KEY
(
DUE_CONDITION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SLVRT_PK'
ALTER TABLE RA_SEIS_LIC_VIOL_RESOL ADD CONSTRAINT RA_SLVRT_PK PRIMARY KEY
(
RESOLVE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SLVT_PK'
ALTER TABLE RA_SEIS_LIC_VIOL_TYPE ADD CONSTRAINT RA_SLVT_PK PRIMARY KEY
(
VIOLATION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SPO_PK'
ALTER TABLE RA_SEIS_PARM_ORIGIN ADD CONSTRAINT RA_SPO_PK PRIMARY KEY
(
PARAMETER_ORIGIN,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SPT_PK'
ALTER TABLE RA_SEIS_PATCH_TYPE ADD CONSTRAINT RA_SPT_PK PRIMARY KEY
(
PATCH_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SPM_PK'
ALTER TABLE RA_SEIS_PICK_METHOD ADD CONSTRAINT RA_SPM_PK PRIMARY KEY
(
PICK_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SPCT_PK'
ALTER TABLE RA_SEIS_PROC_COMP_TYPE ADD CONSTRAINT RA_SPCT_PK PRIMARY KEY
(
PROCESSING_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SPP_PK'
ALTER TABLE RA_SEIS_PROC_PARM ADD CONSTRAINT RA_SPP_PK PRIMARY KEY
(
PARAMETER_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SPST_PK'
ALTER TABLE RA_SEIS_PROC_SET_TYPE ADD CONSTRAINT RA_SPST_PK PRIMARY KEY
(
PROC_SET_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SPS_PK'
ALTER TABLE RA_SEIS_PROC_STATUS ADD CONSTRAINT RA_SPS_PK PRIMARY KEY
(
PROCESS_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SSPSN_PK'
ALTER TABLE RA_SEIS_PROC_STEP_NAME ADD CONSTRAINT RA_SSPSN_PK PRIMARY KEY
(
STEP_NAME,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SPRST_PK'
ALTER TABLE RA_SEIS_PROC_STEP_TYPE ADD CONSTRAINT RA_SPRST_PK PRIMARY KEY
(
STEP_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SRFT_PK'
ALTER TABLE RA_SEIS_RCRD_FMT_TYPE ADD CONSTRAINT RA_SRFT_PK PRIMARY KEY
(
SEIS_RCRD_FMT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SRM_PK'
ALTER TABLE RA_SEIS_RCRD_MAKE ADD CONSTRAINT RA_SRM_PK PRIMARY KEY
(
SEIS_RCRD_MAKE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SRAT_PK'
ALTER TABLE RA_SEIS_RCVR_ARRY_TYPE ADD CONSTRAINT RA_SRAT_PK PRIMARY KEY
(
SEIS_RCVR_ARRAY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SRT_PK'
ALTER TABLE RA_SEIS_RCVR_TYPE ADD CONSTRAINT RA_SRT_PK PRIMARY KEY
(
SEIS_RCVR_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SRT1_PK'
ALTER TABLE RA_SEIS_RECORD_TYPE ADD CONSTRAINT RA_SRT1_PK PRIMARY KEY
(
RECORD_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SRD_PK'
ALTER TABLE RA_SEIS_REF_DATUM ADD CONSTRAINT RA_SRD_PK PRIMARY KEY
(
REFERENCE_DATUM,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SRNT_PK'
ALTER TABLE RA_SEIS_REF_NUM_TYPE ADD CONSTRAINT RA_SRNT_PK PRIMARY KEY
(
REPORTED_REF_NUM_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SST_PK'
ALTER TABLE RA_SEIS_SAMPLE_TYPE ADD CONSTRAINT RA_SST_PK PRIMARY KEY
(
SAMPLE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SSR_PK'
ALTER TABLE RA_SEIS_SEGMENT_REASON ADD CONSTRAINT RA_SSR_PK PRIMARY KEY
(
SEIS_SEGMENT_REASON,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SSCT_PK'
ALTER TABLE RA_SEIS_SET_COMPONENT_TYPE ADD CONSTRAINT RA_SSCT_PK PRIMARY KEY
(
SEIS_SET_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SST1_PK'
ALTER TABLE RA_SEIS_SPECTRUM_TYPE ADD CONSTRAINT RA_SST1_PK PRIMARY KEY
(
SEIS_SPECTRUM_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SSAT_PK'
ALTER TABLE RA_SEIS_SRC_ARRAY_TYPE ADD CONSTRAINT RA_SSAT_PK PRIMARY KEY
(
SEIS_SRC_ARRAY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SSM_PK'
ALTER TABLE RA_SEIS_SRC_MAKE ADD CONSTRAINT RA_SSM_PK PRIMARY KEY
(
SEIS_SRC_MAKE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SST2_PK'
ALTER TABLE RA_SEIS_STATION_TYPE ADD CONSTRAINT RA_SST2_PK PRIMARY KEY
(
SEIS_STATION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SS2_PK'
ALTER TABLE RA_SEIS_STATUS ADD CONSTRAINT RA_SS2_PK PRIMARY KEY
(
SEIS_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SST3_PK'
ALTER TABLE RA_SEIS_STATUS_TYPE ADD CONSTRAINT RA_SST3_PK PRIMARY KEY
(
STATUS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SST5_PK'
ALTER TABLE RA_SEIS_SUMMARY_TYPE ADD CONSTRAINT RA_SST5_PK PRIMARY KEY
(
SUMMARY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SST4_PK'
ALTER TABLE RA_SEIS_SWEEP_TYPE ADD CONSTRAINT RA_SST4_PK PRIMARY KEY
(
SEIS_SWEEP_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_STCT_PK'
ALTER TABLE RA_SEIS_TRANS_COMP_TYPE ADD CONSTRAINT RA_STCT_PK PRIMARY KEY
(
SEIS_TRANS_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SM_PK'
ALTER TABLE RA_SEND_METHOD ADD CONSTRAINT RA_SM_PK PRIMARY KEY
(
SEND_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SQ_PK'
ALTER TABLE RA_SERVICE_QUALITY ADD CONSTRAINT RA_SQ_PK PRIMARY KEY
(
SERVICE_QUALITY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SV_PK'
ALTER TABLE RA_SEVERITY ADD CONSTRAINT RA_SV_PK PRIMARY KEY
(
SEVERITY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SFAT_PK'
ALTER TABLE RA_SF_AIRSTRIP_TYPE ADD CONSTRAINT RA_SFAT_PK PRIMARY KEY
(
AIRSTRIP_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SFBT_PK'
ALTER TABLE RA_SF_BRIDGE_TYPE ADD CONSTRAINT RA_SFBT_PK PRIMARY KEY
(
BRIDGE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SFCT_PK'
ALTER TABLE RA_SF_COMPONENT_TYPE ADD CONSTRAINT RA_SFCT_PK PRIMARY KEY
(
SF_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SFDT1_PK'
ALTER TABLE RA_SF_DESC_TYPE ADD CONSTRAINT RA_SFDT1_PK PRIMARY KEY
(
DESC_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SFDV_PK'
ALTER TABLE RA_SF_DESC_VALUE ADD CONSTRAINT RA_SFDV_PK PRIMARY KEY
(
DESC_TYPE,
VALUE_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SFDT_PK'
ALTER TABLE RA_SF_DOCK_TYPE ADD CONSTRAINT RA_SFDT_PK PRIMARY KEY
(
DOCK_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SFET_PK'
ALTER TABLE RA_SF_ELECTRIC_TYPE ADD CONSTRAINT RA_SFET_PK PRIMARY KEY
(
ELECTRIC_FACILITY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SFLT_PK'
ALTER TABLE RA_SF_LANDING_TYPE ADD CONSTRAINT RA_SFLT_PK PRIMARY KEY
(
LANDING_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SFMT_PK'
ALTER TABLE RA_SF_MAINTAIN_TYPE ADD CONSTRAINT RA_SFMT_PK PRIMARY KEY
(
SF_SUBTYPE,
MAINTAIN_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SFPT_PK'
ALTER TABLE RA_SF_PAD_TYPE ADD CONSTRAINT RA_SFPT_PK PRIMARY KEY
(
PAD_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SFRT_PK'
ALTER TABLE RA_SF_ROAD_TYPE ADD CONSTRAINT RA_SFRT_PK PRIMARY KEY
(
ROAD_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SFS_PK'
ALTER TABLE RA_SF_STATUS ADD CONSTRAINT RA_SFS_PK PRIMARY KEY
(
STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SFST_PK'
ALTER TABLE RA_SF_STATUS_TYPE ADD CONSTRAINT RA_SFST_PK PRIMARY KEY
(
STATUS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SFST1_PK'
ALTER TABLE RA_SF_SURFACE_TYPE ADD CONSTRAINT RA_SFST1_PK PRIMARY KEY
(
SURFACE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SFTT_PK'
ALTER TABLE RA_SF_TOWER_TYPE ADD CONSTRAINT RA_SFTT_PK PRIMARY KEY
(
TOWER_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SVT_PK'
ALTER TABLE RA_SF_VEHICLE_TYPE ADD CONSTRAINT RA_SVT_PK PRIMARY KEY
(
VEHICLE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SFVR_PK'
ALTER TABLE RA_SF_VESSEL_ROLE ADD CONSTRAINT RA_SFVR_PK PRIMARY KEY
(
VESSEL_ROLE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SFVT_PK'
ALTER TABLE RA_SF_VESSEL_TYPE ADD CONSTRAINT RA_SFVT_PK PRIMARY KEY
(
VESSEL_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SFXT_PK'
ALTER TABLE RA_SF_XREF_TYPE ADD CONSTRAINT RA_SFXT_PK PRIMARY KEY
(
XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_ST4_PK'
ALTER TABLE RA_SHOW_TYPE ADD CONSTRAINT RA_ST4_PK PRIMARY KEY
(
SHOW_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SPT1_PK'
ALTER TABLE RA_SHUTIN_PRESS_TYPE ADD CONSTRAINT RA_SPT1_PK PRIMARY KEY
(
SHUTIN_PRESSURE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_S_PK'
ALTER TABLE RA_SOURCE ADD CONSTRAINT RA_S_PK PRIMARY KEY
(
SOURCE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SOR_PK'
ALTER TABLE RA_SOURCE_ORIGIN ADD CONSTRAINT RA_SOR_PK PRIMARY KEY
(
SOURCE,
ORIGIN_OBS_NO,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SUT_PK'
ALTER TABLE RA_SPACING_UNIT_TYPE ADD CONSTRAINT RA_SUT_PK PRIMARY KEY
(
SPACING_UNIT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SPCT2_PK'
ALTER TABLE RA_SPATIAL_DESC_COMP_TYPE ADD CONSTRAINT RA_SPCT2_PK PRIMARY KEY
(
SP_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SDT1_PK'
ALTER TABLE RA_SPATIAL_DESC_TYPE ADD CONSTRAINT RA_SDT1_PK PRIMARY KEY
(
SPATIAL_DESC_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SXT_PK'
ALTER TABLE RA_SPATIAL_XREF_TYPE ADD CONSTRAINT RA_SXT_PK PRIMARY KEY
(
SPATIAL_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SPVT_PK'
ALTER TABLE RA_SP_POINT_VERSION_TYPE ADD CONSTRAINT RA_SPVT_PK PRIMARY KEY
(
VERSION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SZDX_PK'
ALTER TABLE RA_SP_ZONE_DEFIN_XREF ADD CONSTRAINT RA_SZDX_PK PRIMARY KEY
(
XREF_REASON,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SZD_PK'
ALTER TABLE RA_SP_ZONE_DERIV ADD CONSTRAINT RA_SZD_PK PRIMARY KEY
(
ZONE_DERIVATION_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SZT_PK'
ALTER TABLE RA_SP_ZONE_TYPE ADD CONSTRAINT RA_SZT_PK PRIMARY KEY
(
ZONE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SG_PK'
ALTER TABLE RA_STATUS_GROUP ADD CONSTRAINT RA_SG_PK PRIMARY KEY
(
STATUS_GROUP,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SS3_PK'
ALTER TABLE RA_STORE_STATUS ADD CONSTRAINT RA_SS3_PK PRIMARY KEY
(
PHYSICAL_STORE_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SAM_PK'
ALTER TABLE RA_STRAT_ACQTN_METHOD ADD CONSTRAINT RA_SAM_PK PRIMARY KEY
(
ACQTN_METHOD_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SAM1_PK'
ALTER TABLE RA_STRAT_AGE_METHOD ADD CONSTRAINT RA_SAM1_PK PRIMARY KEY
(
STRAT_AGE_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SAT1_PK'
ALTER TABLE RA_STRAT_ALIAS_TYPE ADD CONSTRAINT RA_SAT1_PK PRIMARY KEY
(
STRAT_ALIAS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SCT1_PK'
ALTER TABLE RA_STRAT_COLUMN_TYPE ADD CONSTRAINT RA_SCT1_PK PRIMARY KEY
(
STRAT_COLUMN_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SCXT_PK'
ALTER TABLE RA_STRAT_COL_XREF_TYPE ADD CONSTRAINT RA_SCXT_PK PRIMARY KEY
(
STRAT_COLUMN_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SCC_PK'
ALTER TABLE RA_STRAT_CORR_CRITERIA ADD CONSTRAINT RA_SCC_PK PRIMARY KEY
(
STRAT_CORRELATION_CRITERIA,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SCTY_PK'
ALTER TABLE RA_STRAT_CORR_TYPE ADD CONSTRAINT RA_SCTY_PK PRIMARY KEY
(
STRAT_CORRELATION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SDT2_PK'
ALTER TABLE RA_STRAT_DESC_TYPE ADD CONSTRAINT RA_SDT2_PK PRIMARY KEY
(
DESCRIPTION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SED_PK'
ALTER TABLE RA_STRAT_EQUIV_DIRECT ADD CONSTRAINT RA_SED_PK PRIMARY KEY
(
STRAT_EQUIVALENCE_DIRECTION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SET1_PK'
ALTER TABLE RA_STRAT_EQUIV_TYPE ADD CONSTRAINT RA_SET1_PK PRIMARY KEY
(
STRAT_EQUIVALENCE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SFNL_PK'
ALTER TABLE RA_STRAT_FLD_NODE_LOC ADD CONSTRAINT RA_SFNL_PK PRIMARY KEY
(
NODE_LOC_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SH_PK'
ALTER TABLE RA_STRAT_HIERARCHY ADD CONSTRAINT RA_SH_PK PRIMARY KEY
(
STRAT_HIERARCHY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SIM_PK'
ALTER TABLE RA_STRAT_INTERP_METHOD ADD CONSTRAINT RA_SIM_PK PRIMARY KEY
(
STRAT_INTERPRET_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SNST_PK'
ALTER TABLE RA_STRAT_NAME_SET_TYPE ADD CONSTRAINT RA_SNST_PK PRIMARY KEY
(
STRAT_NAME_SET_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SOT_PK'
ALTER TABLE RA_STRAT_OCCURRENCE_TYPE ADD CONSTRAINT RA_SOT_PK PRIMARY KEY
(
OCCURRENCE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SSTAT_PK'
ALTER TABLE RA_STRAT_STATUS ADD CONSTRAINT RA_SSTAT_PK PRIMARY KEY
(
STRAT_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_STR_PK'
ALTER TABLE RA_STRAT_TOPO_RELATION ADD CONSTRAINT RA_STR_PK PRIMARY KEY
(
TOPO_RELATION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_STYPE_PK'
ALTER TABLE RA_STRAT_TYPE ADD CONSTRAINT RA_STYPE_PK PRIMARY KEY
(
STRAT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_STUCT_PK'
ALTER TABLE RA_STRAT_UNIT_COMP_TYPE ADD CONSTRAINT RA_STUCT_PK PRIMARY KEY
(
STRAT_UNIT_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SUD_PK'
ALTER TABLE RA_STRAT_UNIT_DESC ADD CONSTRAINT RA_SUD_PK PRIMARY KEY
(
STRAT_UNIT_DESC,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SUQ_PK'
ALTER TABLE RA_STRAT_UNIT_QUALIFIER ADD CONSTRAINT RA_SUQ_PK PRIMARY KEY
(
QUALIFIER,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SUNT_PK'
ALTER TABLE RA_STRAT_UNIT_TYPE ADD CONSTRAINT RA_SUNT_PK PRIMARY KEY
(
STRAT_TYPE,
STRAT_UNIT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SC_PK'
ALTER TABLE RA_STREAMER_COMP ADD CONSTRAINT RA_SC_PK PRIMARY KEY
(
COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SP1_PK'
ALTER TABLE RA_STREAMER_POSITION ADD CONSTRAINT RA_SP1_PK PRIMARY KEY
(
STREAMER_POSITION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_STDYT_PK'
ALTER TABLE RA_STUDY_TYPE ADD CONSTRAINT RA_STDYT_PK PRIMARY KEY
(
STUDY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SUBCT_PK'
ALTER TABLE RA_SUBSTANCE_COMP_TYPE ADD CONSTRAINT RA_SUBCT_PK PRIMARY KEY
(
SUBSTANCE_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SUBP_PK'
ALTER TABLE RA_SUBSTANCE_PROPERTY ADD CONSTRAINT RA_SUBP_PK PRIMARY KEY
(
SUBSTANCE_PROPERTY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SUBUR_PK'
ALTER TABLE RA_SUBSTANCE_USE_RULE ADD CONSTRAINT RA_SUBUR_PK PRIMARY KEY
(
SUBSTANCE_USE_RULE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SUBXT_PK'
ALTER TABLE RA_SUBSTANCE_XREF_TYPE ADD CONSTRAINT RA_SUBXT_PK PRIMARY KEY
(
SUBSTANCE_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SWABR_PK'
ALTER TABLE RA_SW_APP_BA_ROLE ADD CONSTRAINT RA_SWABR_PK PRIMARY KEY
(
SW_APP_BA_ROLE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SWAF_PK'
ALTER TABLE RA_SW_APP_FUNCTION ADD CONSTRAINT RA_SWAF_PK PRIMARY KEY
(
SW_APP_FUNCTION,
SW_APP_FUNCTION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SWAFT_PK'
ALTER TABLE RA_SW_APP_FUNCTION_TYPE ADD CONSTRAINT RA_SWAFT_PK PRIMARY KEY
(
SW_APP_FUNCTION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_SWAX_PK'
ALTER TABLE RA_SW_APP_XREF_TYPE ADD CONSTRAINT RA_SWAX_PK PRIMARY KEY
(
SW_APP_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_TCC_PK'
ALTER TABLE RA_TAX_CREDIT_CODE ADD CONSTRAINT RA_TCC_PK PRIMARY KEY
(
TAX_CREDIT_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_TE_PK'
ALTER TABLE RA_TEST_EQUIPMENT ADD CONSTRAINT RA_TE_PK PRIMARY KEY
(
EQUIP_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_TPT_PK'
ALTER TABLE RA_TEST_PERIOD_TYPE ADD CONSTRAINT RA_TPT_PK PRIMARY KEY
(
TEST_PERIOD_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_TRM_PK'
ALTER TABLE RA_TEST_RECOV_METHOD ADD CONSTRAINT RA_TRM_PK PRIMARY KEY
(
RECOVERY_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_TR_PK'
ALTER TABLE RA_TEST_RESULT ADD CONSTRAINT RA_TR_PK PRIMARY KEY
(
TEST_RESULT,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_TST_PK'
ALTER TABLE RA_TEST_SHUTOFF_TYPE ADD CONSTRAINT RA_TST_PK PRIMARY KEY
(
TEST_SHUTOFF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_TS_PK'
ALTER TABLE RA_TEST_SUBTYPE ADD CONSTRAINT RA_TS_PK PRIMARY KEY
(
TEST_TYPE,
TEST_SUBTYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_TZ_PK'
ALTER TABLE RA_TIMEZONE ADD CONSTRAINT RA_TZ_PK PRIMARY KEY
(
TIMEZONE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_TOT_PK'
ALTER TABLE RA_TITLE_OWN_TYPE ADD CONSTRAINT RA_TOT_PK PRIMARY KEY
(
TITLE_OWN_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_TOT1_PK'
ALTER TABLE RA_TOUR_OCCURRENCE_TYPE ADD CONSTRAINT RA_TOT1_PK PRIMARY KEY
(
OCCURRENCE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_THF_PK'
ALTER TABLE RA_TRACE_HEADER_FORMAT ADD CONSTRAINT RA_THF_PK PRIMARY KEY
(
HEADER_FORMAT,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_THW_PK'
ALTER TABLE RA_TRACE_HEADER_WORD ADD CONSTRAINT RA_THW_PK PRIMARY KEY
(
HEADER_WORD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_TCT_PK'
ALTER TABLE RA_TRANS_COMP_TYPE ADD CONSTRAINT RA_TCT_PK PRIMARY KEY
(
TRANS_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_TS1_PK'
ALTER TABLE RA_TRANS_STATUS ADD CONSTRAINT RA_TS1_PK PRIMARY KEY
(
TRANSACTION_STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_TT3_PK'
ALTER TABLE RA_TRANS_TYPE ADD CONSTRAINT RA_TT3_PK PRIMARY KEY
(
TRANS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_TF_PK'
ALTER TABLE RA_TREATMENT_FLUID ADD CONSTRAINT RA_TF_PK PRIMARY KEY
(
TREATMENT_FLUID,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_TT1_PK'
ALTER TABLE RA_TREATMENT_TYPE ADD CONSTRAINT RA_TT1_PK PRIMARY KEY
(
TREATMENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_TG_PK'
ALTER TABLE RA_TUBING_GRADE ADD CONSTRAINT RA_TG_PK PRIMARY KEY
(
TUBING_GRADE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_TT2_PK'
ALTER TABLE RA_TUBING_TYPE ADD CONSTRAINT RA_TT2_PK PRIMARY KEY
(
TUBING_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_TM_PK'
ALTER TABLE RA_TVD_METHOD ADD CONSTRAINT RA_TM_PK PRIMARY KEY
(
TVD_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_VQ1_PK'
ALTER TABLE RA_VALUE_QUALITY ADD CONSTRAINT RA_VQ1_PK PRIMARY KEY
(
VALUE_QUALITY,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_VC_PK'
ALTER TABLE RA_VELOCITY_COMPUTE ADD CONSTRAINT RA_VC_PK PRIMARY KEY
(
COMPUTE_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_VD_PK'
ALTER TABLE RA_VELOCITY_DIMENSION ADD CONSTRAINT RA_VD_PK PRIMARY KEY
(
VELOCITY_DIMENSION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_VT_PK'
ALTER TABLE RA_VELOCITY_TYPE ADD CONSTRAINT RA_VT_PK PRIMARY KEY
(
VELOCITY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_VDT_PK'
ALTER TABLE RA_VERTICAL_DATUM_TYPE ADD CONSTRAINT RA_VDT_PK PRIMARY KEY
(
VERTICAL_DATUM_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_VR_PK'
ALTER TABLE RA_VESSEL_REFERENCE ADD CONSTRAINT RA_VR_PK PRIMARY KEY
(
REFERENCE_POINT,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_VS_PK'
ALTER TABLE RA_VESSEL_SIZE ADD CONSTRAINT RA_VS_PK PRIMARY KEY
(
VESSEL_SIZE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_VF_PK'
ALTER TABLE RA_VOLUME_FRACTION ADD CONSTRAINT RA_VF_PK PRIMARY KEY
(
VOLUME_FRACTION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_VM_PK'
ALTER TABLE RA_VOLUME_METHOD ADD CONSTRAINT RA_VM_PK PRIMARY KEY
(
VOLUME_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_VT1_PK'
ALTER TABLE RA_VSP_TYPE ADD CONSTRAINT RA_VT1_PK PRIMARY KEY
(
VSP_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WAR_PK'
ALTER TABLE RA_WASTE_ADJUST_REASON ADD CONSTRAINT RA_WAR_PK PRIMARY KEY
(
ADJUST_REASON,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WFT_PK'
ALTER TABLE RA_WASTE_FACILITY_TYPE ADD CONSTRAINT RA_WFT_PK PRIMARY KEY
(
WASTE_FACILITY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WH_PK'
ALTER TABLE RA_WASTE_HANDLING ADD CONSTRAINT RA_WH_PK PRIMARY KEY
(
WASTE_HANDLING_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WHZ_PK'
ALTER TABLE RA_WASTE_HAZARD_TYPE ADD CONSTRAINT RA_WHZ_PK PRIMARY KEY
(
WASTE_HAZARD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WM_PK'
ALTER TABLE RA_WASTE_MATERIAL ADD CONSTRAINT RA_WM_PK PRIMARY KEY
(
WASTE_MATERIAL,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WO_PK'
ALTER TABLE RA_WASTE_ORIGIN ADD CONSTRAINT RA_WO_PK PRIMARY KEY
(
WASTE_ORIGIN,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WBZ_PK'
ALTER TABLE RA_WATER_BOTTOM_ZONE ADD CONSTRAINT RA_WBZ_PK PRIMARY KEY
(
WATER_BOTTOM_ZONE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WATC_PK'
ALTER TABLE RA_WATER_CONDITION ADD CONSTRAINT RA_WATC_PK PRIMARY KEY
(
WATER_CONDITION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WD_PK'
ALTER TABLE RA_WATER_DATUM ADD CONSTRAINT RA_WD_PK PRIMARY KEY
(
WATER_DATUM,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_APC_2_PK'
ALTER TABLE RA_WATER_PROPERTY_CODE ADD CONSTRAINT RA_APC_2_PK PRIMARY KEY
(
WATER_PROPERTY,
WATER_PROPERTY_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WCOND_PK'
ALTER TABLE RA_WEATHER_CONDITION ADD CONSTRAINT RA_WCOND_PK PRIMARY KEY
(
WEATHER_CONDITION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WACA_PK'
ALTER TABLE RA_WELL_ACTIVITY_CAUSE ADD CONSTRAINT RA_WACA_PK PRIMARY KEY
(
CAUSE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WACT_PK'
ALTER TABLE RA_WELL_ACTIVITY_COMP_TYPE ADD CONSTRAINT RA_WACT_PK PRIMARY KEY
(
WELL_ACTIVITY_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WATE_PK'
ALTER TABLE RA_WELL_ACT_TYPE_EQUIV ADD CONSTRAINT RA_WATE_PK PRIMARY KEY
(
EQUIV_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WAL_PK'
ALTER TABLE RA_WELL_ALIAS_LOCATION ADD CONSTRAINT RA_WAL_PK PRIMARY KEY
(
LOCATION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WCPT_PK'
ALTER TABLE RA_WELL_CIRC_PRESS_TYPE ADD CONSTRAINT RA_WCPT_PK PRIMARY KEY
(
CIRC_PRESSURE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WC_PK'
ALTER TABLE RA_WELL_CLASS ADD CONSTRAINT RA_WC_PK PRIMARY KEY
(
WELL_CLASS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WCT_PK'
ALTER TABLE RA_WELL_COMPONENT_TYPE ADD CONSTRAINT RA_WCT_PK PRIMARY KEY
(
WELL_COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WDT_PK'
ALTER TABLE RA_WELL_DATUM_TYPE ADD CONSTRAINT RA_WDT_PK PRIMARY KEY
(
WELL_DATUM_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WDT1_PK'
ALTER TABLE RA_WELL_DOWNTIME_TYPE ADD CONSTRAINT RA_WDT1_PK PRIMARY KEY
(
DOWNTIME_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WDOT_PK'
ALTER TABLE RA_WELL_DRILL_OP_TYPE ADD CONSTRAINT RA_WDOT_PK PRIMARY KEY
(
DRILL_OP_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WFUT_PK'
ALTER TABLE RA_WELL_FACILITY_USE_TYPE ADD CONSTRAINT RA_WFUT_PK PRIMARY KEY
(
FACILITY_USE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WLT_PK'
ALTER TABLE RA_WELL_LEVEL_TYPE ADD CONSTRAINT RA_WLT_PK PRIMARY KEY
(
WELL_LEVEL_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WLC_PK'
ALTER TABLE RA_WELL_LIC_COND ADD CONSTRAINT RA_WLC_PK PRIMARY KEY
(
CONDITION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WLCC_PK'
ALTER TABLE RA_WELL_LIC_COND_CODE ADD CONSTRAINT RA_WLCC_PK PRIMARY KEY
(
CONDITION_TYPE,
CONDITION_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WLDC_PK'
ALTER TABLE RA_WELL_LIC_DUE_CONDITION ADD CONSTRAINT RA_WLDC_PK PRIMARY KEY
(
DUE_CONDITION,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WLVRT_PK'
ALTER TABLE RA_WELL_LIC_VIOL_RESOL ADD CONSTRAINT RA_WLVRT_PK PRIMARY KEY
(
RESOLVE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WLVT_PK'
ALTER TABLE RA_WELL_LIC_VIOL_TYPE ADD CONSTRAINT RA_WLVT_PK PRIMARY KEY
(
VIOLATION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WLC1_PK'
ALTER TABLE RA_WELL_LOG_CLASS ADD CONSTRAINT RA_WLC1_PK PRIMARY KEY
(
WELL_LOG_CLASS_ID,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WNPM_PK'
ALTER TABLE RA_WELL_NODE_PICK_METHOD ADD CONSTRAINT RA_WNPM_PK PRIMARY KEY
(
PICK_METHOD,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WPT_PK'
ALTER TABLE RA_WELL_PROFILE_TYPE ADD CONSTRAINT RA_WPT_PK PRIMARY KEY
(
WELL_PROFILE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WQT_PK'
ALTER TABLE RA_WELL_QUALIFIC_TYPE ADD CONSTRAINT RA_WQT_PK PRIMARY KEY
(
WELL_QUALIFIC_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WRVT_PK'
ALTER TABLE RA_WELL_REF_VALUE_TYPE ADD CONSTRAINT RA_WRVT_PK PRIMARY KEY
(
REFERENCE_VALUE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WR_PK'
ALTER TABLE RA_WELL_RELATIONSHIP ADD CONSTRAINT RA_WR_PK PRIMARY KEY
(
WELL_RELATIONSHIP,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WSM_PK'
ALTER TABLE RA_WELL_SERVICE_METRIC ADD CONSTRAINT RA_WSM_PK PRIMARY KEY
(
SERVICE_METRIC,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WSMC_PK'
ALTER TABLE RA_WELL_SERV_METRIC_CODE ADD CONSTRAINT RA_WSMC_PK PRIMARY KEY
(
SERVICE_METRIC,
METRIC_CODE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WSETR_PK'
ALTER TABLE RA_WELL_SET_ROLE ADD CONSTRAINT RA_WSETR_PK PRIMARY KEY
(
WELL_SET_ROLE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WSETT_PK'
ALTER TABLE RA_WELL_SET_TYPE ADD CONSTRAINT RA_WSETT_PK PRIMARY KEY
(
WELL_SET_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WSUT_PK'
ALTER TABLE RA_WELL_SF_USE_TYPE ADD CONSTRAINT RA_WSUT_PK PRIMARY KEY
(
SF_USE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WS_PK'
ALTER TABLE RA_WELL_STATUS ADD CONSTRAINT RA_WS_PK PRIMARY KEY
(
STATUS_TYPE,
STATUS,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WSQ_PK'
ALTER TABLE RA_WELL_STATUS_QUAL ADD CONSTRAINT RA_WSQ_PK PRIMARY KEY
(
STATUS_TYPE,
STATUS_QUALIFIER,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WSQV_PK'
ALTER TABLE RA_WELL_STATUS_QUAL_VALUE ADD CONSTRAINT RA_WSQV_PK PRIMARY KEY
(
STATUS_TYPE,
STATUS,
STATUS_QUALIFIER,
STATUS_QUALIFIER_VALUE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WSPS_PK'
ALTER TABLE RA_WELL_STATUS_SYMBOL ADD CONSTRAINT RA_WSPS_PK PRIMARY KEY
(
PLOT_SYMBOL,
PLOT_SYMBOL_OBS_NO,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WST_PK'
ALTER TABLE RA_WELL_STATUS_TYPE ADD CONSTRAINT RA_WST_PK PRIMARY KEY
(
STATUS_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WSX_PK'
ALTER TABLE RA_WELL_STATUS_XREF ADD CONSTRAINT RA_WSX_PK PRIMARY KEY
(
STATUS_XREF_ID,
STATUS_XREF_OBS_NO,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WTT_PK'
ALTER TABLE RA_WELL_TEST_TYPE ADD CONSTRAINT RA_WTT_PK PRIMARY KEY
(
WELL_TEST_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WXT_PK'
ALTER TABLE RA_WELL_XREF_TYPE ADD CONSTRAINT RA_WXT_PK PRIMARY KEY
(
XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WZIV_PK'
ALTER TABLE RA_WELL_ZONE_INT_VALUE ADD CONSTRAINT RA_WZIV_PK PRIMARY KEY
(
VALUE_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WWIND_PK'
ALTER TABLE RA_WIND_STRENGTH ADD CONSTRAINT RA_WWIND_PK PRIMARY KEY
(
WIND_STRENGTH,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WBT_PK'
ALTER TABLE RA_WORK_BID_TYPE ADD CONSTRAINT RA_WBT_PK PRIMARY KEY
(
WORK_BID_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WOBR_PK'
ALTER TABLE RA_WO_BA_ROLE ADD CONSTRAINT RA_WOBR_PK PRIMARY KEY
(
BA_ROLE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WOCT_PK'
ALTER TABLE RA_WO_COMPONENT_TYPE ADD CONSTRAINT RA_WOCT_PK PRIMARY KEY
(
COMPONENT_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WOC_PK'
ALTER TABLE RA_WO_CONDITION ADD CONSTRAINT RA_WOC_PK PRIMARY KEY
(
WORK_ORDER_TYPE,
CONDITION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WODT_PK'
ALTER TABLE RA_WO_DELIVERY_TYPE ADD CONSTRAINT RA_WODT_PK PRIMARY KEY
(
DELIVERY_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WOIT_PK'
ALTER TABLE RA_WO_INSTRUCTION ADD CONSTRAINT RA_WOIT_PK PRIMARY KEY
(
INSTRUCTION_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WOT_PK'
ALTER TABLE RA_WO_TYPE ADD CONSTRAINT RA_WOT_PK PRIMARY KEY
(
WORK_ORDER_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RA_WOX_PK'
ALTER TABLE RA_WO_XREF_TYPE ADD CONSTRAINT RA_WOX_PK PRIMARY KEY
(
WO_XREF_TYPE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RPH_PK'
ALTER TABLE REPORT_HIER ADD CONSTRAINT RPH_PK PRIMARY KEY
(
REPORT_HIERARCHY_ID
);

\qecho 'CREATING PRIMARY KEY RPHA_PK'
ALTER TABLE REPORT_HIER_ALIAS ADD CONSTRAINT RPHA_PK PRIMARY KEY
(
REPORT_HIERARCHY_ID,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RPHD_PK'
ALTER TABLE REPORT_HIER_DESC ADD CONSTRAINT RPHD_PK PRIMARY KEY
(
HIERARCHY_TYPE_ID,
LEVEL_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY RPHL_PK'
ALTER TABLE REPORT_HIER_LEVEL ADD CONSTRAINT RPHL_PK PRIMARY KEY
(
REPORT_HIERARCHY_ID,
COMPONENT_ID
);

\qecho 'CREATING PRIMARY KEY RPHT_PK'
ALTER TABLE REPORT_HIER_TYPE ADD CONSTRAINT RPHT_PK PRIMARY KEY
(
HIERARCHY_TYPE_ID
);

\qecho 'CREATING PRIMARY KEY RPHU_PK'
ALTER TABLE REPORT_HIER_USE ADD CONSTRAINT RPHU_PK PRIMARY KEY
(
REPORT_HIERARCHY_ID,
COMPONENT_ID,
HIERARCHY_USE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY RSC_PK'
ALTER TABLE RESENT_CLASS ADD CONSTRAINT RSC_PK PRIMARY KEY
(
RESENT_ID,
RESERVE_CLASS_ID
);

\qecho 'CREATING PRIMARY KEY RSCOM_PK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_PK PRIMARY KEY
(
RESENT_ID,
COMPONENT_ID
);

\qecho 'CREATING PRIMARY KEY RSV_PK'
ALTER TABLE RESENT_ECO_RUN ADD CONSTRAINT RSV_PK PRIMARY KEY
(
RESENT_ID,
RESERVE_CLASS_ID,
ECONOMICS_RUN_ID
);

\qecho 'CREATING PRIMARY KEY RSESC_PK'
ALTER TABLE RESENT_ECO_SCHEDULE ADD CONSTRAINT RSESC_PK PRIMARY KEY
(
RESENT_ID,
RESERVE_CLASS_ID,
ECONOMICS_RUN_ID,
SCHEDULE_ID
);

\qecho 'CREATING PRIMARY KEY RSEV_PK'
ALTER TABLE RESENT_ECO_VOLUME ADD CONSTRAINT RSEV_PK PRIMARY KEY
(
RESENT_ID,
RESERVE_CLASS_ID,
ECONOMICS_RUN_ID,
PRODUCT_TYPE,
SUMMARY_OBS_NO
);

\qecho 'CREATING PRIMARY KEY RSP_PK'
ALTER TABLE RESENT_PRODUCT ADD CONSTRAINT RSP_PK PRIMARY KEY
(
RESENT_ID,
RESERVE_CLASS_ID,
PRODUCT_TYPE
);

\qecho 'CREATING PRIMARY KEY RSPP_PK'
ALTER TABLE RESENT_PROD_PROPERTY ADD CONSTRAINT RSPP_PK PRIMARY KEY
(
RESENT_ID,
RESERVE_CLASS_ID,
PROPERTY_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY RSRC_PK'
ALTER TABLE RESENT_REVISION_CAT ADD CONSTRAINT RSRC_PK PRIMARY KEY
(
REVISION_CATEGORY_ID
);

\qecho 'CREATING PRIMARY KEY RSVMR_PK'
ALTER TABLE RESENT_VOL_REGIME ADD CONSTRAINT RSVMR_PK PRIMARY KEY
(
RESENT_ID,
VOLUME_REGIME_ID,
RESENT_REGIME_OBS_NO
);

\qecho 'CREATING PRIMARY KEY RSVR_PK'
ALTER TABLE RESENT_VOL_REVISION ADD CONSTRAINT RSVR_PK PRIMARY KEY
(
RESENT_ID,
RESERVE_CLASS_ID,
REVISION_ID,
REVISION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY RSVS_PK'
ALTER TABLE RESENT_VOL_SUMMARY ADD CONSTRAINT RSVS_PK PRIMARY KEY
(
RESENT_ID,
RESERVE_CLASS_ID,
PRODUCT_TYPE,
SUMMARY_ID,
SUMMARY_OBS_NO
);

\qecho 'CREATING PRIMARY KEY RSX_PK'
ALTER TABLE RESENT_XREF ADD CONSTRAINT RSX_PK PRIMARY KEY
(
RESENT_ID,
RESENT_ID2,
XREF_OBS_NO
);

\qecho 'CREATING PRIMARY KEY RSCL_PK'
ALTER TABLE RESERVE_CLASS ADD CONSTRAINT RSCL_PK PRIMARY KEY
(
RESERVE_CLASS_ID
);

\qecho 'CREATING PRIMARY KEY RSCC_PK'
ALTER TABLE RESERVE_CLASS_CALC ADD CONSTRAINT RSCC_PK PRIMARY KEY
(
RESERVE_CLASS_ID,
FORMULA_ID,
CALCULATION_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY RSCF_PK'
ALTER TABLE RESERVE_CLASS_FORMULA ADD CONSTRAINT RSCF_PK PRIMARY KEY
(
RESERVE_CLASS_ID,
FORMULA_ID
);

\qecho 'CREATING PRIMARY KEY RSE_PK'
ALTER TABLE RESERVE_ENTITY ADD CONSTRAINT RSE_PK PRIMARY KEY
(
RESENT_ID
);

\qecho 'CREATING PRIMARY KEY REST_PK'
ALTER TABLE RESTRICTION ADD CONSTRAINT REST_PK PRIMARY KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION
);

\qecho 'CREATING PRIMARY KEY RESTA_PK'
ALTER TABLE REST_ACTIVITY ADD CONSTRAINT RESTA_PK PRIMARY KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION,
RESTRICTED_ACTIVITY
);

\qecho 'CREATING PRIMARY KEY RESTC_PK'
ALTER TABLE REST_CLASS ADD CONSTRAINT RESTC_PK PRIMARY KEY
(
RESTRICTION_CLASS_ID
);

\qecho 'CREATING PRIMARY KEY RESTCO_PK'
ALTER TABLE REST_CONTACT ADD CONSTRAINT RESTCO_PK PRIMARY KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION,
BUSINESS_ASSOCIATE_ID,
CONTACT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY RESTR_PK'
ALTER TABLE REST_REMARK ADD CONSTRAINT RESTR_PK PRIMARY KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION,
RESTRICTION_REMARK_ID,
RESTRICTION_REMARK_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY RESTT_PK'
ALTER TABLE REST_TEXT ADD CONSTRAINT RESTT_PK PRIMARY KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION,
TEXT_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY RMAC_PK'
ALTER TABLE RM_AUX_CHANNEL ADD CONSTRAINT RMAC_PK PRIMARY KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID,
CHANNEL_ID
);

\qecho 'CREATING PRIMARY KEY RMCI_PK'
ALTER TABLE RM_CIRCULATION ADD CONSTRAINT RMCI_PK PRIMARY KEY
(
CIRC_ID
);

\qecho 'CREATING PRIMARY KEY RMCP_PK'
ALTER TABLE RM_CIRC_PROCESS ADD CONSTRAINT RMCP_PK PRIMARY KEY
(
CIRC_ID,
DATA_CIRC_PROCESS_ID
);

\qecho 'CREATING PRIMARY KEY RMCO_PK'
ALTER TABLE RM_COMPOSITE ADD CONSTRAINT RMCO_PK PRIMARY KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);

\qecho 'CREATING PRIMARY KEY RMCR_PK'
ALTER TABLE RM_COPY_RECORD ADD CONSTRAINT RMCR_PK PRIMARY KEY
(
OLD_PHYSICAL_ITEM_ID,
NEW_PHYSICAL_ITEM_ID,
COPY_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY RMCT_PK'
ALTER TABLE RM_CREATOR ADD CONSTRAINT RMCT_PK PRIMARY KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID,
CREATOR_ID
);

\qecho 'CREATING PRIMARY KEY RMCU_PK'
ALTER TABLE RM_CUSTODY ADD CONSTRAINT RMCU_PK PRIMARY KEY
(
PHYSICAL_ITEM_ID,
CUSTODY_ID
);

\qecho 'CREATING PRIMARY KEY RMDC_PK'
ALTER TABLE RM_DATA_CONTENT ADD CONSTRAINT RMDC_PK PRIMARY KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID,
PHYSICAL_ITEM_ID,
DATA_CONTENT_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY RMDS_PK'
ALTER TABLE RM_DATA_STORE ADD CONSTRAINT RMDS_PK PRIMARY KEY
(
STORE_ID
);

\qecho 'CREATING PRIMARY KEY RMDSH_PK'
ALTER TABLE RM_DATA_STORE_HIER ADD CONSTRAINT RMDSH_PK PRIMARY KEY
(
DATA_STORE_HIER_ID
);

\qecho 'CREATING PRIMARY KEY RMDSHL_PK'
ALTER TABLE RM_DATA_STORE_HIER_LEVEL ADD CONSTRAINT RMDSHL_PK PRIMARY KEY
(
DATA_STORE_HIER_ID,
HIER_LEVEL_ID
);

\qecho 'CREATING PRIMARY KEY RMDSI_PK'
ALTER TABLE RM_DATA_STORE_ITEM ADD CONSTRAINT RMDSI_PK PRIMARY KEY
(
STORE_ID,
STRUCTURE_OBS_NO,
ITEM_OBS_NO
);

\qecho 'CREATING PRIMARY KEY RMDSM_PK'
ALTER TABLE RM_DATA_STORE_MEDIA ADD CONSTRAINT RMDSM_PK PRIMARY KEY
(
STORE_ID,
STRUCTURE_OBS_NO,
MEDIA_OBS_NO
);

\qecho 'CREATING PRIMARY KEY RMDSS_PK'
ALTER TABLE RM_DATA_STORE_STRUCTURE ADD CONSTRAINT RMDSS_PK PRIMARY KEY
(
STORE_ID,
STRUCTURE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY RMDK_PK'
ALTER TABLE RM_DECRYPT_KEY ADD CONSTRAINT RMDK_PK PRIMARY KEY
(
DECRYPT_KEY_ID
);

\qecho 'CREATING PRIMARY KEY RMD_PK'
ALTER TABLE RM_DOCUMENT ADD CONSTRAINT RMD_PK PRIMARY KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);

\qecho 'CREATING PRIMARY KEY RME_PK'
ALTER TABLE RM_ENCODING ADD CONSTRAINT RME_PK PRIMARY KEY
(
PHYSICAL_ITEM_ID,
ENCODING_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY RMEQ_PK'
ALTER TABLE RM_EQUIPMENT ADD CONSTRAINT RMEQ_PK PRIMARY KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);

\qecho 'CREATING PRIMARY KEY RMFC_PK'
ALTER TABLE RM_FILE_CONTENT ADD CONSTRAINT RMFC_PK PRIMARY KEY
(
FILE_ID
);

\qecho 'CREATING PRIMARY KEY RMFO_PK'
ALTER TABLE RM_FOSSIL ADD CONSTRAINT RMFO_PK PRIMARY KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);

\qecho 'CREATING PRIMARY KEY RMIMC_PK'
ALTER TABLE RM_IMAGE_COMP ADD CONSTRAINT RMIMC_PK PRIMARY KEY
(
PHYSICAL_ITEM_ID,
LOG_SECTION_ID_1,
LOG_SECTION_ID_2
);

\qecho 'CREATING PRIMARY KEY RMIML_PK'
ALTER TABLE RM_IMAGE_LOC ADD CONSTRAINT RMIML_PK PRIMARY KEY
(
PHYSICAL_ITEM_ID,
LOG_SECTION_ID,
POSITION_ID
);

\qecho 'CREATING PRIMARY KEY RMIMS_PK'
ALTER TABLE RM_IMAGE_SECT ADD CONSTRAINT RMIMS_PK PRIMARY KEY
(
PHYSICAL_ITEM_ID,
IMAGE_SECTION_ID
);

\qecho 'CREATING PRIMARY KEY RMII_PK'
ALTER TABLE RM_INFORMATION_ITEM ADD CONSTRAINT RMII_PK PRIMARY KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);

\qecho 'CREATING PRIMARY KEY RMICQ_PK'
ALTER TABLE RM_INFO_COORD_QUALITY ADD CONSTRAINT RMICQ_PK PRIMARY KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID,
QUALITY_ID
);

\qecho 'CREATING PRIMARY KEY RMIIDQ_PK'
ALTER TABLE RM_INFO_DATA_QUALITY ADD CONSTRAINT RMIIDQ_PK PRIMARY KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID,
QUALITY_ID
);

\qecho 'CREATING PRIMARY KEY RMIIA_PK'
ALTER TABLE RM_INFO_ITEM_ALIAS ADD CONSTRAINT RMIIA_PK PRIMARY KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY RMBA_PK'
ALTER TABLE RM_INFO_ITEM_BA ADD CONSTRAINT RMBA_PK PRIMARY KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID,
CONTACT_ID
);

\qecho 'CREATING PRIMARY KEY RMIIC_PK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_PK PRIMARY KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID,
CONTENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY RMIID_PK'
ALTER TABLE RM_INFO_ITEM_DESC ADD CONSTRAINT RMIID_PK PRIMARY KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID,
DESCRIPTION_ID
);

\qecho 'CREATING PRIMARY KEY RMIIGP_PK'
ALTER TABLE RM_INFO_ITEM_GROUP ADD CONSTRAINT RMIIGP_PK PRIMARY KEY
(
GROUP_INFO_ITEM_SUBTYPE,
GROUP_INFORMATION_ITEM_ID,
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID,
GROUP_OBS_NO
);

\qecho 'CREATING PRIMARY KEY RMIIM_PK'
ALTER TABLE RM_INFO_ITEM_MAINT ADD CONSTRAINT RMIIM_PK PRIMARY KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID,
MAINTAIN_ID
);

\qecho 'CREATING PRIMARY KEY RMIIO_PK'
ALTER TABLE RM_INFO_ITEM_ORIGIN ADD CONSTRAINT RMIIO_PK PRIMARY KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID,
ORIGIN_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY RMIIST_PK'
ALTER TABLE RM_INFO_ITEM_STATUS ADD CONSTRAINT RMIIST_PK PRIMARY KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID,
STATUS_ID
);

\qecho 'CREATING PRIMARY KEY RMK_PK'
ALTER TABLE RM_KEYWORD ADD CONSTRAINT RMK_PK PRIMARY KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID,
KEYWORD_ID
);

\qecho 'CREATING PRIMARY KEY RMLS_PK'
ALTER TABLE RM_LITH_SAMPLE ADD CONSTRAINT RMLS_PK PRIMARY KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);

\qecho 'CREATING PRIMARY KEY RMM_PK'
ALTER TABLE RM_MAP ADD CONSTRAINT RMM_PK PRIMARY KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);

\qecho 'CREATING PRIMARY KEY RMPI_PK'
ALTER TABLE RM_PHYSICAL_ITEM ADD CONSTRAINT RMPI_PK PRIMARY KEY
(
PHYSICAL_ITEM_ID
);

\qecho 'CREATING PRIMARY KEY RMPIC_PK'
ALTER TABLE RM_PHYS_ITEM_CONDITION ADD CONSTRAINT RMPIC_PK PRIMARY KEY
(
PHYSICAL_ITEM_ID,
CONDITION_ID
);

\qecho 'CREATING PRIMARY KEY RMPIG_PK'
ALTER TABLE RM_PHYS_ITEM_GROUP ADD CONSTRAINT RMPIG_PK PRIMARY KEY
(
GROUP_PHYSICAL_ITEM_ID,
PHYSICAL_ITEM_ID,
GROUP_OBS_NO
);

\qecho 'CREATING PRIMARY KEY RMPIM_PK'
ALTER TABLE RM_PHYS_ITEM_MAINT ADD CONSTRAINT RMPIM_PK PRIMARY KEY
(
PHYSICAL_ITEM_ID,
MAINT_ID
);

\qecho 'CREATING PRIMARY KEY RMPIO_PK'
ALTER TABLE RM_PHYS_ITEM_ORIGIN ADD CONSTRAINT RMPIO_PK PRIMARY KEY
(
PHYSICAL_ITEM_ID,
ORIGIN_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY RMPIS_PK'
ALTER TABLE RM_PHYS_ITEM_STORE ADD CONSTRAINT RMPIS_PK PRIMARY KEY
(
STORE_ID,
PHYSICAL_ITEM_ID,
STORE_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY RMST_PK'
ALTER TABLE RM_SEIS_TRACE ADD CONSTRAINT RMST_PK PRIMARY KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);

\qecho 'CREATING PRIMARY KEY RMSD_PK'
ALTER TABLE RM_SPATIAL_DATASET ADD CONSTRAINT RMSD_PK PRIMARY KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);

\qecho 'CREATING PRIMARY KEY RMT_PK'
ALTER TABLE RM_THESAURUS ADD CONSTRAINT RMT_PK PRIMARY KEY
(
THESAURUS_ID
);

\qecho 'CREATING PRIMARY KEY RMTWG_PK'
ALTER TABLE RM_THESAURUS_GLOSSARY ADD CONSTRAINT RMTWG_PK PRIMARY KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID,
GLOSSARY_ID
);

\qecho 'CREATING PRIMARY KEY RMTW_PK'
ALTER TABLE RM_THESAURUS_WORD ADD CONSTRAINT RMTW_PK PRIMARY KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
);

\qecho 'CREATING PRIMARY KEY RMTWX_PK'
ALTER TABLE RM_THESAURUS_WORD_XREF ADD CONSTRAINT RMTWX_PK PRIMARY KEY
(
THESAURUS_ID1,
THESAURUS_WORD_ID1,
THESAURUS_ID2,
THESAURUS_WORD_ID2,
XREF_OBS_NO
);

\qecho 'CREATING PRIMARY KEY RMTH_PK'
ALTER TABLE RM_TRACE_HEADER ADD CONSTRAINT RMTH_PK PRIMARY KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID,
HEADER_ID
);

\qecho 'CREATING PRIMARY KEY RMWL_PK'
ALTER TABLE RM_WELL_LOG ADD CONSTRAINT RMWL_PK PRIMARY KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);

\qecho 'CREATING PRIMARY KEY R_ACN_PK'
ALTER TABLE R_ACCESS_CONDITION ADD CONSTRAINT R_ACN_PK PRIMARY KEY
(
ACCESS_CONDITION_CODE
);

\qecho 'CREATING PRIMARY KEY R_APT_PK'
ALTER TABLE R_ACCOUNT_PROC_TYPE ADD CONSTRAINT R_APT_PK PRIMARY KEY
(
ACCOUNT_PROC_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ACTST_PK'
ALTER TABLE R_ACTIVITY_SET_TYPE ADD CONSTRAINT R_ACTST_PK PRIMARY KEY
(
ACTIVITY_SET_TYPE
);

\qecho 'CREATING PRIMARY KEY R_AT_PK'
ALTER TABLE R_ACTIVITY_TYPE ADD CONSTRAINT R_AT_PK PRIMARY KEY
(
ACTIVITY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_AM_PK'
ALTER TABLE R_ADDITIVE_METHOD ADD CONSTRAINT R_AM_PK PRIMARY KEY
(
ADDITIVE_METHOD
);

\qecho 'CREATING PRIMARY KEY R_ADT_PK'
ALTER TABLE R_ADDITIVE_TYPE ADD CONSTRAINT R_ADT_PK PRIMARY KEY
(
ADDITIVE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ADDT_PK'
ALTER TABLE R_ADDRESS_TYPE ADD CONSTRAINT R_ADDT_PK PRIMARY KEY
(
ADDRESS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ACT1_PK'
ALTER TABLE R_AIRCRAFT_TYPE ADD CONSTRAINT R_ACT1_PK PRIMARY KEY
(
AIRCRAFT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_AGC_PK'
ALTER TABLE R_AIR_GAS_CODE ADD CONSTRAINT R_AGC_PK PRIMARY KEY
(
AIR_GAS_CODE
);

\qecho 'CREATING PRIMARY KEY R_ART_PK'
ALTER TABLE R_ALIAS_REASON_TYPE ADD CONSTRAINT R_ART_PK PRIMARY KEY
(
REASON_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ATY_PK'
ALTER TABLE R_ALIAS_TYPE ADD CONSTRAINT R_ATY_PK PRIMARY KEY
(
ALIAS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ALT_PK'
ALTER TABLE R_ALLOCATION_TYPE ADD CONSTRAINT R_ALT_PK PRIMARY KEY
(
ALLOCATION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_AX_PK'
ALTER TABLE R_ALLOWABLE_EXPENSE ADD CONSTRAINT R_AX_PK PRIMARY KEY
(
ALLOWABLE_EXPENSE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_AP_PK'
ALTER TABLE R_ANALYSIS_PROPERTY ADD CONSTRAINT R_AP_PK PRIMARY KEY
(
ANALYSIS_PROPERTY
);

\qecho 'CREATING PRIMARY KEY R_ANLAT_PK'
ALTER TABLE R_ANL_ACCURACY_TYPE ADD CONSTRAINT R_ANLAT_PK PRIMARY KEY
(
ACCURACY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ABRT_PK'
ALTER TABLE R_ANL_BA_ROLE_TYPE ADD CONSTRAINT R_ABRT_PK PRIMARY KEY
(
BA_ROLE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ANLCET_PK'
ALTER TABLE R_ANL_CALC_EQUIV_TYPE ADD CONSTRAINT R_ANLCET_PK PRIMARY KEY
(
CALCULATION_EQUIV_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ANLCP_PK'
ALTER TABLE R_ANL_CHRO_PROPERTY ADD CONSTRAINT R_ANLCP_PK PRIMARY KEY
(
CHRO_PROPERTY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ANLCMPT_PK'
ALTER TABLE R_ANL_COMP_TYPE ADD CONSTRAINT R_ANLCMPT_PK PRIMARY KEY
(
ANL_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ANLCT_PK'
ALTER TABLE R_ANL_CONFIDENCE_TYPE ADD CONSTRAINT R_ANLCT_PK PRIMARY KEY
(
CONFIDENCE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ANLDRV_PK'
ALTER TABLE R_ANL_DETAIL_REF_VALUE ADD CONSTRAINT R_ANLDRV_PK PRIMARY KEY
(
REFERENCE_VALUE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ANLDT_PK'
ALTER TABLE R_ANL_DETAIL_TYPE ADD CONSTRAINT R_ANLDT_PK PRIMARY KEY
(
ANL_DETAIL_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ANLEVC_PK'
ALTER TABLE R_ANL_ELEMENT_VALUE_CODE ADD CONSTRAINT R_ANLEVC_PK PRIMARY KEY
(
VALUE_CODE
);

\qecho 'CREATING PRIMARY KEY R_ANLEVT_PK'
ALTER TABLE R_ANL_ELEMENT_VALUE_TYPE ADD CONSTRAINT R_ANLEVT_PK PRIMARY KEY
(
ANL_VALUE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ANLER_PK'
ALTER TABLE R_ANL_EQUIP_ROLE ADD CONSTRAINT R_ANLER_PK PRIMARY KEY
(
ANL_EQUIP_ROLE
);

\qecho 'CREATING PRIMARY KEY R_ANLFT_PK'
ALTER TABLE R_ANL_FORMULA_TYPE ADD CONSTRAINT R_ANLFT_PK PRIMARY KEY
(
FORMULA_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ANLGCV_PK'
ALTER TABLE R_ANL_GAS_CHRO_VALUE ADD CONSTRAINT R_ANLGCV_PK PRIMARY KEY
(
ANL_VALUE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ANLGP_PK'
ALTER TABLE R_ANL_GAS_PROPERTY ADD CONSTRAINT R_ANLGP_PK PRIMARY KEY
(
ANALYSIS_PROPERTY
);

\qecho 'CREATING PRIMARY KEY R_ANLGPC_PK'
ALTER TABLE R_ANL_GAS_PROPERTY_CODE ADD CONSTRAINT R_ANLGPC_PK PRIMARY KEY
(
ANALYSIS_PROPERTY,
PROPERTY_VALUE_CODE
);

\qecho 'CREATING PRIMARY KEY R_ANLME_PK'
ALTER TABLE R_ANL_METHOD_EQUIV_TYPE ADD CONSTRAINT R_ANLME_PK PRIMARY KEY
(
METHOD_EQUIV_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ANLMST_PK'
ALTER TABLE R_ANL_METHOD_SET_TYPE ADD CONSTRAINT R_ANLMST_PK PRIMARY KEY
(
METHOD_SET_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ANLMR_PK'
ALTER TABLE R_ANL_MISSING_REP ADD CONSTRAINT R_ANLMR_PK PRIMARY KEY
(
MISSING_REPRESENTATION
);

\qecho 'CREATING PRIMARY KEY R_ANLNR_PK'
ALTER TABLE R_ANL_NULL_REP ADD CONSTRAINT R_ANLNR_PK PRIMARY KEY
(
NULL_REPRESENTATION
);

\qecho 'CREATING PRIMARY KEY R_ANLOPC_PK'
ALTER TABLE R_ANL_OIL_PROPERTY_CODE ADD CONSTRAINT R_ANLOPC_PK PRIMARY KEY
(
ANALYSIS_PROPERTY,
PROPERTY_VALUE_CODE
);

\qecho 'CREATING PRIMARY KEY R_ANLPT_PK'
ALTER TABLE R_ANL_PARAMETER_TYPE ADD CONSTRAINT R_ANLPT_PK PRIMARY KEY
(
PARAMETER_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ANLPBR_PK'
ALTER TABLE R_ANL_PROBLEM_RESOLUTION ADD CONSTRAINT R_ANLPBR_PK PRIMARY KEY
(
RESOLUTION_METHOD
);

\qecho 'CREATING PRIMARY KEY R_ANLPR_PK'
ALTER TABLE R_ANL_PROBLEM_RESULT ADD CONSTRAINT R_ANLPR_PK PRIMARY KEY
(
PROBLEM_RESULT
);

\qecho 'CREATING PRIMARY KEY R_ANLPS_PK'
ALTER TABLE R_ANL_PROBLEM_SEVERITY ADD CONSTRAINT R_ANLPS_PK PRIMARY KEY
(
PROBLEM_SEVERITY
);

\qecho 'CREATING PRIMARY KEY R_ANLPRBT_PK'
ALTER TABLE R_ANL_PROBLEM_TYPE ADD CONSTRAINT R_ANLPRBT_PK PRIMARY KEY
(
PROBLEM_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ANLRV_PK'
ALTER TABLE R_ANL_REF_VALUE ADD CONSTRAINT R_ANLRV_PK PRIMARY KEY
(
REFERENCE_VALUE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ANLRT_PK'
ALTER TABLE R_ANL_REMARK_TYPE ADD CONSTRAINT R_ANLRT_PK PRIMARY KEY
(
ANL_REMARK_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ANLR_PK'
ALTER TABLE R_ANL_REPEATABILITY ADD CONSTRAINT R_ANLR_PK PRIMARY KEY
(
REPEATABILITY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ANLSX_PK'
ALTER TABLE R_ANL_STEP_XREF ADD CONSTRAINT R_ANLSX_PK PRIMARY KEY
(
STEP_XREF_REASON
);

\qecho 'CREATING PRIMARY KEY R_ANLTT_PK'
ALTER TABLE R_ANL_TOLERANCE_TYPE ADD CONSTRAINT R_ANLTT_PK PRIMARY KEY
(
TOLERANCE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ANLVM_PK'
ALTER TABLE R_ANL_VALID_MEASUREMENT ADD CONSTRAINT R_ANLVM_PK PRIMARY KEY
(
MEASUREMENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ANLVMV_PK'
ALTER TABLE R_ANL_VALID_MEAS_VALUE ADD CONSTRAINT R_ANLVMV_PK PRIMARY KEY
(
MEASUREMENT_TYPE,
VALID_VALUE_TEXT
);

\qecho 'CREATING PRIMARY KEY R_ANLVP_PK'
ALTER TABLE R_ANL_VALID_PROBLEM ADD CONSTRAINT R_ANLVP_PK PRIMARY KEY
(
PROBLEM_RESULT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ANLWP_PK'
ALTER TABLE R_ANL_WATER_PROPERTY ADD CONSTRAINT R_ANLWP_PK PRIMARY KEY
(
WATER_PROPERTY
);

\qecho 'CREATING PRIMARY KEY R_AAT_PK'
ALTER TABLE R_AOF_ANALYSIS_TYPE ADD CONSTRAINT R_AAT_PK PRIMARY KEY
(
AOF_ANALYSIS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ACM_PK'
ALTER TABLE R_AOF_CALC_METHOD ADD CONSTRAINT R_ACM_PK PRIMARY KEY
(
AOF_CALCULATE_METHOD
);

\qecho 'CREATING PRIMARY KEY R_ALS_PK'
ALTER TABLE R_API_LOG_SYSTEM ADD CONSTRAINT R_ALS_PK PRIMARY KEY
(
API_CODE_SYSTEM
);

\qecho 'CREATING PRIMARY KEY R_APPCT_PK'
ALTER TABLE R_APPLICATION_COMP_TYPE ADD CONSTRAINT R_APPCT_PK PRIMARY KEY
(
APPLICATION_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_AA_PK'
ALTER TABLE R_APPLIC_ATTACHMENT ADD CONSTRAINT R_AA_PK PRIMARY KEY
(
ATTACHMENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ABR_PK'
ALTER TABLE R_APPLIC_BA_ROLE ADD CONSTRAINT R_ABR_PK PRIMARY KEY
(
APPLICATION_BA_ROLE
);

\qecho 'CREATING PRIMARY KEY R_AD_PK'
ALTER TABLE R_APPLIC_DECISION ADD CONSTRAINT R_AD_PK PRIMARY KEY
(
APPLICATION_DECISION
);

\qecho 'CREATING PRIMARY KEY R_ADE_PK'
ALTER TABLE R_APPLIC_DESC ADD CONSTRAINT R_ADE_PK PRIMARY KEY
(
APPLICATION_TYPE,
APPLIC_DESC_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ARMT_PK'
ALTER TABLE R_APPLIC_REMARK_TYPE ADD CONSTRAINT R_ARMT_PK PRIMARY KEY
(
REMARK_TYPE
);

\qecho 'CREATING PRIMARY KEY R_AST_PK'
ALTER TABLE R_APPLIC_STATUS ADD CONSTRAINT R_AST_PK PRIMARY KEY
(
APPLICATION_STATUS
);

\qecho 'CREATING PRIMARY KEY R_APPT_PK'
ALTER TABLE R_APPLIC_TYPE ADD CONSTRAINT R_APPT_PK PRIMARY KEY
(
APPLICATION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ACMPT_PK'
ALTER TABLE R_AREA_COMPONENT_TYPE ADD CONSTRAINT R_ACMPT_PK PRIMARY KEY
(
AREA_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ACT_PK'
ALTER TABLE R_AREA_CONTAIN_TYPE ADD CONSTRAINT R_ACT_PK PRIMARY KEY
(
CONTAIN_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ADC_PK'
ALTER TABLE R_AREA_DESC_CODE ADD CONSTRAINT R_ADC_PK PRIMARY KEY
(
AREA_DESC_TYPE,
AREA_DESC_CODE
);

\qecho 'CREATING PRIMARY KEY R_ADT1_PK'
ALTER TABLE R_AREA_DESC_TYPE ADD CONSTRAINT R_ADT1_PK PRIMARY KEY
(
AREA_DESC_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ARTY_PK'
ALTER TABLE R_AREA_TYPE ADD CONSTRAINT R_ARTY_PK PRIMARY KEY
(
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY R_AXT_PK'
ALTER TABLE R_AREA_XREF_TYPE ADD CONSTRAINT R_AXT_PK PRIMARY KEY
(
AREA_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_AUT_PK'
ALTER TABLE R_AUTHORITY_TYPE ADD CONSTRAINT R_AUT_PK PRIMARY KEY
(
AUTHORITY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_AUTH_PK'
ALTER TABLE R_AUTHOR_TYPE ADD CONSTRAINT R_AUTH_PK PRIMARY KEY
(
AUTHOR_TYPE
);

\qecho 'CREATING PRIMARY KEY R_BAAUCT_PK'
ALTER TABLE R_BA_AUTHORITY_COMP_TYPE ADD CONSTRAINT R_BAAUCT_PK PRIMARY KEY
(
BA_AUTHORITY_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_BC_PK'
ALTER TABLE R_BA_CATEGORY ADD CONSTRAINT R_BC_PK PRIMARY KEY
(
BA_CATEGORY
);

\qecho 'CREATING PRIMARY KEY R_BACT_PK'
ALTER TABLE R_BA_COMPONENT_TYPE ADD CONSTRAINT R_BACT_PK PRIMARY KEY
(
BUSINESS_ASSOCIATE_COMP_TYPE
);

\qecho 'CREATING PRIMARY KEY R_BCLT_PK'
ALTER TABLE R_BA_CONTACT_LOC_TYPE ADD CONSTRAINT R_BCLT_PK PRIMARY KEY
(
CONTACT_LOC_TYPE
);

\qecho 'CREATING PRIMARY KEY R_BCOT_PK'
ALTER TABLE R_BA_CREW_OVERHEAD_TYPE ADD CONSTRAINT R_BCOT_PK PRIMARY KEY
(
OVERHEAD_TYPE
);

\qecho 'CREATING PRIMARY KEY R_BCT_PK'
ALTER TABLE R_BA_CREW_TYPE ADD CONSTRAINT R_BCT_PK PRIMARY KEY
(
CREW_TYPE
);

\qecho 'CREATING PRIMARY KEY R_BADC_PK'
ALTER TABLE R_BA_DESC_CODE ADD CONSTRAINT R_BADC_PK PRIMARY KEY
(
BA_DESC_TYPE,
BA_DESC_CODE
);

\qecho 'CREATING PRIMARY KEY R_BADRVT_PK'
ALTER TABLE R_BA_DESC_REF_VALUE ADD CONSTRAINT R_BADRVT_PK PRIMARY KEY
(
REFERENCE_VALUE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_BADT_PK'
ALTER TABLE R_BA_DESC_TYPE ADD CONSTRAINT R_BADT_PK PRIMARY KEY
(
BA_DESC_TYPE
);

\qecho 'CREATING PRIMARY KEY R_BALDC_PK'
ALTER TABLE R_BA_LIC_DUE_CONDITION ADD CONSTRAINT R_BALDC_PK PRIMARY KEY
(
DUE_CONDITION
);

\qecho 'CREATING PRIMARY KEY R_BVT_PK'
ALTER TABLE R_BA_LIC_VIOLATION_TYPE ADD CONSTRAINT R_BVT_PK PRIMARY KEY
(
VIOLATION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_BLVRT_PK'
ALTER TABLE R_BA_LIC_VIOL_RESOL ADD CONSTRAINT R_BLVRT_PK PRIMARY KEY
(
RESOLVE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_BAOCT_PK'
ALTER TABLE R_BA_ORGANIZATION_COMP_TYPE ADD CONSTRAINT R_BAOCT_PK PRIMARY KEY
(
BA_ORGANIZATION_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_BAOT_PK'
ALTER TABLE R_BA_ORGANIZATION_TYPE ADD CONSTRAINT R_BAOT_PK PRIMARY KEY
(
ORGANIZATION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_BPT_PK'
ALTER TABLE R_BA_PERMIT_TYPE ADD CONSTRAINT R_BPT_PK PRIMARY KEY
(
PERMIT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_BPRT_PK'
ALTER TABLE R_BA_PREF_TYPE ADD CONSTRAINT R_BPRT_PK PRIMARY KEY
(
PREFERENCE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_BST_PK'
ALTER TABLE R_BA_SERVICE_TYPE ADD CONSTRAINT R_BST_PK PRIMARY KEY
(
BA_SERVICE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_BS_PK'
ALTER TABLE R_BA_STATUS ADD CONSTRAINT R_BS_PK PRIMARY KEY
(
BA_STATUS
);

\qecho 'CREATING PRIMARY KEY R_BT_PK'
ALTER TABLE R_BA_TYPE ADD CONSTRAINT R_BT_PK PRIMARY KEY
(
BA_TYPE
);

\qecho 'CREATING PRIMARY KEY R_BXT_PK'
ALTER TABLE R_BA_XREF_TYPE ADD CONSTRAINT R_BXT_PK PRIMARY KEY
(
BA_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_BM_PK'
ALTER TABLE R_BHP_METHOD ADD CONSTRAINT R_BM_PK PRIMARY KEY
(
BHP_METHOD
);

\qecho 'CREATING PRIMARY KEY R_BPTT_PK'
ALTER TABLE R_BH_PRESS_TEST_TYPE ADD CONSTRAINT R_BPTT_PK PRIMARY KEY
(
BH_PRESSURE_TEST_TYPE
);

\qecho 'CREATING PRIMARY KEY R_BBC_PK'
ALTER TABLE R_BIT_BEARING_CONDITION ADD CONSTRAINT R_BBC_PK PRIMARY KEY
(
BEARING_CONDITION
);

\qecho 'CREATING PRIMARY KEY R_BCSD_PK'
ALTER TABLE R_BIT_CUT_STRUCT_DULL ADD CONSTRAINT R_BCSD_PK PRIMARY KEY
(
CUTTING_STRUCTURE_MDC
);

\qecho 'CREATING PRIMARY KEY R_BCSI_PK'
ALTER TABLE R_BIT_CUT_STRUCT_INNER ADD CONSTRAINT R_BCSI_PK PRIMARY KEY
(
CUTTING_STRUCTURE_T1
);

\qecho 'CREATING PRIMARY KEY R_BCSL_PK'
ALTER TABLE R_BIT_CUT_STRUCT_LOC ADD CONSTRAINT R_BCSL_PK PRIMARY KEY
(
CUTTING_STRUCTURE_LOC
);

\qecho 'CREATING PRIMARY KEY R_BCSO_PK'
ALTER TABLE R_BIT_CUT_STRUCT_OUTER ADD CONSTRAINT R_BCSO_PK PRIMARY KEY
(
CUTTING_STRUCTURE_TO
);

\qecho 'CREATING PRIMARY KEY R_BRP_PK'
ALTER TABLE R_BIT_REASON_PULLED ADD CONSTRAINT R_BRP_PK PRIMARY KEY
(
REASON_PULLED
);

\qecho 'CREATING PRIMARY KEY R_BF_PK'
ALTER TABLE R_BLOWOUT_FLUID ADD CONSTRAINT R_BF_PK PRIMARY KEY
(
BLOWOUT_FLUID
);

\qecho 'CREATING PRIMARY KEY R_BRT_PK'
ALTER TABLE R_BUILDUP_RADIUS_TYPE ADD CONSTRAINT R_BRT_PK PRIMARY KEY
(
BUILDUP_RADIUS
);

\qecho 'CREATING PRIMARY KEY R_CAG_PK'
ALTER TABLE R_CAT_ADDITIVE_GROUP ADD CONSTRAINT R_CAG_PK PRIMARY KEY
(
ADDITIVE_GROUP
);

\qecho 'CREATING PRIMARY KEY R_CAQT_PK'
ALTER TABLE R_CAT_ADDITIVE_QUANTITY ADD CONSTRAINT R_CAQT_PK PRIMARY KEY
(
QUANTITY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CAS_PK'
ALTER TABLE R_CAT_ADDITIVE_SPEC ADD CONSTRAINT R_CAS_PK PRIMARY KEY
(
ADDITIVE_SPEC_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CAX_PK'
ALTER TABLE R_CAT_ADDITIVE_XREF ADD CONSTRAINT R_CAX_PK PRIMARY KEY
(
ADDITIVE_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CEG_PK'
ALTER TABLE R_CAT_EQUIP_GROUP ADD CONSTRAINT R_CEG_PK PRIMARY KEY
(
CAT_EQUIP_GROUP
);

\qecho 'CREATING PRIMARY KEY R_CES_PK'
ALTER TABLE R_CAT_EQUIP_SPEC ADD CONSTRAINT R_CES_PK PRIMARY KEY
(
SPEC_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CSC_PK'
ALTER TABLE R_CAT_EQUIP_SPEC_CODE ADD CONSTRAINT R_CSC_PK PRIMARY KEY
(
SPEC_TYPE,
SPEC_CODE
);

\qecho 'CREATING PRIMARY KEY R_CET_PK'
ALTER TABLE R_CAT_EQUIP_TYPE ADD CONSTRAINT R_CET_PK PRIMARY KEY
(
CAT_EQUIP_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CT_PK'
ALTER TABLE R_CEMENT_TYPE ADD CONSTRAINT R_CT_PK PRIMARY KEY
(
CEMENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CST_PK'
ALTER TABLE R_CHECKSHOT_SRVY_TYPE ADD CONSTRAINT R_CST_PK PRIMARY KEY
(
CHECKSHOT_SURVEY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CDP_PK'
ALTER TABLE R_CLASS_DESC_PROPERTY ADD CONSTRAINT R_CDP_PK PRIMARY KEY
(
DESC_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CLCT_PK'
ALTER TABLE R_CLASS_LEV_COMP_TYPE ADD CONSTRAINT R_CLCT_PK PRIMARY KEY
(
CLASS_LEVEL_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CLXT_PK'
ALTER TABLE R_CLASS_LEV_XREF_TYPE ADD CONSTRAINT R_CLXT_PK PRIMARY KEY
(
LEVEL_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CSD_PK'
ALTER TABLE R_CLASS_SYSTEM_DIMENSION ADD CONSTRAINT R_CSD_PK PRIMARY KEY
(
CLASS_DIMENSION
);

\qecho 'CREATING PRIMARY KEY R_CSET_PK'
ALTER TABLE R_CLASS_SYST_XREF_TYPE ADD CONSTRAINT R_CSET_PK PRIMARY KEY
(
SYSTEM_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CL_PK'
ALTER TABLE R_CLIMATE ADD CONSTRAINT R_CL_PK PRIMARY KEY
(
CLIMATE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CRST_PK'
ALTER TABLE R_COAL_RANK_SCHEME_TYPE ADD CONSTRAINT R_CRST_PK PRIMARY KEY
(
COAL_RANK_SCHEME_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PCVX_PK'
ALTER TABLE R_CODE_VERSION_XREF_TYPE ADD CONSTRAINT R_PCVX_PK PRIMARY KEY
(
CODE_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_COT_PK'
ALTER TABLE R_COLLAR_TYPE ADD CONSTRAINT R_COT_PK PRIMARY KEY
(
COLLAR_TYPE
);

\qecho 'CREATING PRIMARY KEY R_COL_PK'
ALTER TABLE R_COLOR ADD CONSTRAINT R_COL_PK PRIMARY KEY
(
COLOR
);

\qecho 'CREATING PRIMARY KEY R_COLE_PK'
ALTER TABLE R_COLOR_EQUIV ADD CONSTRAINT R_COLE_PK PRIMARY KEY
(
COLOR_1,
COLOR_2
);

\qecho 'CREATING PRIMARY KEY R_CFMT_PK'
ALTER TABLE R_COLOR_FORMAT ADD CONSTRAINT R_CFMT_PK PRIMARY KEY
(
COLOR_FORMAT
);

\qecho 'CREATING PRIMARY KEY R_COLP_PK'
ALTER TABLE R_COLOR_PALETTE ADD CONSTRAINT R_COLP_PK PRIMARY KEY
(
COLOR_PALETTE
);

\qecho 'CREATING PRIMARY KEY R_CM_PK'
ALTER TABLE R_COMPLETION_METHOD ADD CONSTRAINT R_CM_PK PRIMARY KEY
(
COMPLETION_METHOD
);

\qecho 'CREATING PRIMARY KEY R_CS_PK'
ALTER TABLE R_COMPLETION_STATUS ADD CONSTRAINT R_CS_PK PRIMARY KEY
(
STATUS_TYPE,
COMPLETION_STATUS
);

\qecho 'CREATING PRIMARY KEY R_CSTT_PK'
ALTER TABLE R_COMPLETION_STATUS_TYPE ADD CONSTRAINT R_CSTT_PK PRIMARY KEY
(
STATUS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CT2_PK'
ALTER TABLE R_COMPLETION_TYPE ADD CONSTRAINT R_CT2_PK PRIMARY KEY
(
COMPLETION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_COT2_PK'
ALTER TABLE R_CONDITION_TYPE ADD CONSTRAINT R_COT2_PK PRIMARY KEY
(
CONDITION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CONT_PK'
ALTER TABLE R_CONFIDENCE_TYPE ADD CONSTRAINT R_CONT_PK PRIMARY KEY
(
CONFIDENCE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CR2_PK'
ALTER TABLE R_CONFIDENTIAL_REASON ADD CONSTRAINT R_CR2_PK PRIMARY KEY
(
CONFIDENTIAL_REASON
);

\qecho 'CREATING PRIMARY KEY R_CT3_PK'
ALTER TABLE R_CONFIDENTIAL_TYPE ADD CONSTRAINT R_CT3_PK PRIMARY KEY
(
CONFIDENTIAL_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CONR_PK'
ALTER TABLE R_CONFORMITY_RELATION ADD CONSTRAINT R_CONR_PK PRIMARY KEY
(
CONFORMITY_RELATIONSHIP
);

\qecho 'CREATING PRIMARY KEY R_CONSBR_PK'
ALTER TABLE R_CONSENT_BA_ROLE ADD CONSTRAINT R_CONSBR_PK PRIMARY KEY
(
CONSENT_BA_ROLE
);

\qecho 'CREATING PRIMARY KEY R_CONSCT_PK'
ALTER TABLE R_CONSENT_COMP_TYPE ADD CONSTRAINT R_CONSCT_PK PRIMARY KEY
(
CONSENT_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CONSC_PK'
ALTER TABLE R_CONSENT_CONDITION ADD CONSTRAINT R_CONSC_PK PRIMARY KEY
(
CONSENT_TYPE,
CONSENT_CONDITION
);

\qecho 'CREATING PRIMARY KEY R_CONSR_PK'
ALTER TABLE R_CONSENT_REMARK ADD CONSTRAINT R_CONSR_PK PRIMARY KEY
(
REMARK_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CONSS_PK'
ALTER TABLE R_CONSENT_STATUS ADD CONSTRAINT R_CONSS_PK PRIMARY KEY
(
CONSENT_STATUS
);

\qecho 'CREATING PRIMARY KEY R_CONST_PK'
ALTER TABLE R_CONSENT_TYPE ADD CONSTRAINT R_CONST_PK PRIMARY KEY
(
CONSENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_COAT_PK'
ALTER TABLE R_CONSULT_ATTEND_TYPE ADD CONSTRAINT R_COAT_PK PRIMARY KEY
(
ATTEND_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CCT_PK'
ALTER TABLE R_CONSULT_COMP_TYPE ADD CONSTRAINT R_CCT_PK PRIMARY KEY
(
COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CODT_PK'
ALTER TABLE R_CONSULT_DISC_TYPE ADD CONSTRAINT R_CODT_PK PRIMARY KEY
(
DISCUSSION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_COIT_PK'
ALTER TABLE R_CONSULT_ISSUE_TYPE ADD CONSTRAINT R_COIT_PK PRIMARY KEY
(
CONSULT_ISSUE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_COR_PK'
ALTER TABLE R_CONSULT_REASON ADD CONSTRAINT R_COR_PK PRIMARY KEY
(
CONSULT_REASON
);

\qecho 'CREATING PRIMARY KEY R_CORE_PK'
ALTER TABLE R_CONSULT_RESOLUTION ADD CONSTRAINT R_CORE_PK PRIMARY KEY
(
CONSULT_RESOLUTION
);

\qecho 'CREATING PRIMARY KEY R_CORL_PK'
ALTER TABLE R_CONSULT_ROLE ADD CONSTRAINT R_CORL_PK PRIMARY KEY
(
CONSULT_ROLE
);

\qecho 'CREATING PRIMARY KEY R_COTY_PK'
ALTER TABLE R_CONSULT_TYPE ADD CONSTRAINT R_COTY_PK PRIMARY KEY
(
CONSULT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_COX_PK'
ALTER TABLE R_CONSULT_XREF_TYPE ADD CONSTRAINT R_COX_PK PRIMARY KEY
(
CONSULT_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CR_PK'
ALTER TABLE R_CONTACT_ROLE ADD CONSTRAINT R_CR_PK PRIMARY KEY
(
CONTACT_ROLE
);

\qecho 'CREATING PRIMARY KEY R_CONTY_PK'
ALTER TABLE R_CONTAMINANT_TYPE ADD CONSTRAINT R_CONTY_PK PRIMARY KEY
(
CONTAMINANT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_COTCT_PK'
ALTER TABLE R_CONTEST_COMP_TYPE ADD CONSTRAINT R_COTCT_PK PRIMARY KEY
(
CONTEST_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CPR_PK'
ALTER TABLE R_CONTEST_PARTY_ROLE ADD CONSTRAINT R_CPR_PK PRIMARY KEY
(
PARTY_ROLE
);

\qecho 'CREATING PRIMARY KEY R_CRES_PK'
ALTER TABLE R_CONTEST_RESOLUTION ADD CONSTRAINT R_CRES_PK PRIMARY KEY
(
RESOLUTION_METHOD
);

\qecho 'CREATING PRIMARY KEY R_CTY_PK'
ALTER TABLE R_CONTEST_TYPE ADD CONSTRAINT R_CTY_PK PRIMARY KEY
(
CONTEST_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CCT2_PK'
ALTER TABLE R_CONTRACT_COMP_TYPE ADD CONSTRAINT R_CCT2_PK PRIMARY KEY
(
CONTRACT_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CBR_PK'
ALTER TABLE R_CONT_BA_ROLE ADD CONSTRAINT R_CBR_PK PRIMARY KEY
(
BA_ROLE
);

\qecho 'CREATING PRIMARY KEY R_CCR_PK'
ALTER TABLE R_CONT_COMP_REASON ADD CONSTRAINT R_CCR_PK PRIMARY KEY
(
REASON_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CXC_PK'
ALTER TABLE R_CONT_EXTEND_COND ADD CONSTRAINT R_CXC_PK PRIMARY KEY
(
EXTENSION_CONDITION
);

\qecho 'CREATING PRIMARY KEY R_CXT_PK'
ALTER TABLE R_CONT_EXTEND_TYPE ADD CONSTRAINT R_CXT_PK PRIMARY KEY
(
EXTENSION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CIE_PK'
ALTER TABLE R_CONT_INSUR_ELECT ADD CONSTRAINT R_CIE_PK PRIMARY KEY
(
INSURANCE_ELECTION
);

\qecho 'CREATING PRIMARY KEY R_COP_PK'
ALTER TABLE R_CONT_OPERATING_PROC ADD CONSTRAINT R_COP_PK PRIMARY KEY
(
OPERATING_PROCEDURE
);

\qecho 'CREATING PRIMARY KEY R_CPT_PK'
ALTER TABLE R_CONT_PROVISION_TYPE ADD CONSTRAINT R_CPT_PK PRIMARY KEY
(
CONT_PROVISION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CPXT_PK'
ALTER TABLE R_CONT_PROV_XREF_TYPE ADD CONSTRAINT R_CPXT_PK PRIMARY KEY
(
PROVISION_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CSTAT_PK'
ALTER TABLE R_CONT_STATUS ADD CONSTRAINT R_CSTAT_PK PRIMARY KEY
(
CONTRACT_STATUS
);

\qecho 'CREATING PRIMARY KEY R_CST3_PK'
ALTER TABLE R_CONT_STATUS_TYPE ADD CONSTRAINT R_CST3_PK PRIMARY KEY
(
CONTRACT_STATUS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CT8_PK'
ALTER TABLE R_CONT_TYPE ADD CONSTRAINT R_CT8_PK PRIMARY KEY
(
CONTRACT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CVR_PK'
ALTER TABLE R_CONT_VOTE_RESPONSE ADD CONSTRAINT R_CVR_PK PRIMARY KEY
(
VOTE_RESPONSE
);

\qecho 'CREATING PRIMARY KEY R_CVT_PK'
ALTER TABLE R_CONT_VOTE_TYPE ADD CONSTRAINT R_CVT_PK PRIMARY KEY
(
VOTE_PROCEDURE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CXTY_PK'
ALTER TABLE R_CONT_XREF_TYPE ADD CONSTRAINT R_CXTY_PK PRIMARY KEY
(
CONTRACT_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CC_PK'
ALTER TABLE R_COORD_CAPTURE ADD CONSTRAINT R_CC_PK PRIMARY KEY
(
CAPTURE_METHOD
);

\qecho 'CREATING PRIMARY KEY R_CC1_PK'
ALTER TABLE R_COORD_COMPUTE ADD CONSTRAINT R_CC1_PK PRIMARY KEY
(
COMPUTE_METHOD
);

\qecho 'CREATING PRIMARY KEY R_CQ_PK'
ALTER TABLE R_COORD_QUALITY ADD CONSTRAINT R_CQ_PK PRIMARY KEY
(
COORDINATE_QUALITY
);

\qecho 'CREATING PRIMARY KEY R_CST1_PK'
ALTER TABLE R_COORD_SYSTEM_TYPE ADD CONSTRAINT R_CST1_PK PRIMARY KEY
(
COORDINATE_SYSTEM_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CH_PK'
ALTER TABLE R_CORE_HANDLING ADD CONSTRAINT R_CH_PK PRIMARY KEY
(
CORE_HANDLING
);

\qecho 'CREATING PRIMARY KEY R_CRT_PK'
ALTER TABLE R_CORE_RECOVERY_TYPE ADD CONSTRAINT R_CRT_PK PRIMARY KEY
(
CORE_RECOVERY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CST2_PK'
ALTER TABLE R_CORE_SAMPLE_TYPE ADD CONSTRAINT R_CST2_PK PRIMARY KEY
(
CORE_SAMPLE
);

\qecho 'CREATING PRIMARY KEY R_CSM_PK'
ALTER TABLE R_CORE_SHIFT_METHOD ADD CONSTRAINT R_CSM_PK PRIMARY KEY
(
CORE_SHIFT_METHOD
);

\qecho 'CREATING PRIMARY KEY R_CS1_PK'
ALTER TABLE R_CORE_SOLVENT ADD CONSTRAINT R_CS1_PK PRIMARY KEY
(
CORE_SOLVENT
);

\qecho 'CREATING PRIMARY KEY R_CT5_PK'
ALTER TABLE R_CORE_TYPE ADD CONSTRAINT R_CT5_PK PRIMARY KEY
(
CORE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CM1_PK'
ALTER TABLE R_CORRECTION_METHOD ADD CONSTRAINT R_CM1_PK PRIMARY KEY
(
CORRECTION_METHOD
);

\qecho 'CREATING PRIMARY KEY R_CT1_PK'
ALTER TABLE R_COUPLING_TYPE ADD CONSTRAINT R_CT1_PK PRIMARY KEY
(
COUPLING_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CRTY_PK'
ALTER TABLE R_CREATOR_TYPE ADD CONSTRAINT R_CRTY_PK PRIMARY KEY
(
CREATOR_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CSTP_PK'
ALTER TABLE R_CS_TRANSFORM_PARM ADD CONSTRAINT R_CSTP_PK PRIMARY KEY
(
TRANSFORM_PARM
);

\qecho 'CREATING PRIMARY KEY R_CTT_PK'
ALTER TABLE R_CS_TRANSFORM_TYPE ADD CONSTRAINT R_CTT_PK PRIMARY KEY
(
TRANSFORM_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CS2_PK'
ALTER TABLE R_CURVE_SCALE ADD CONSTRAINT R_CS2_PK PRIMARY KEY
(
CURVE_SCALE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CT6_PK'
ALTER TABLE R_CURVE_TYPE ADD CONSTRAINT R_CT6_PK PRIMARY KEY
(
CURVE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CX_PK'
ALTER TABLE R_CURVE_XREF_TYPE ADD CONSTRAINT R_CX_PK PRIMARY KEY
(
XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CT7_PK'
ALTER TABLE R_CUSHION_TYPE ADD CONSTRAINT R_CT7_PK PRIMARY KEY
(
CUSHION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_CF_PK'
ALTER TABLE R_CUTTING_FLUID ADD CONSTRAINT R_CF_PK PRIMARY KEY
(
CUTTING_FLUID
);

\qecho 'CREATING PRIMARY KEY R_DCP_PK'
ALTER TABLE R_DATA_CIRC_PROCESS ADD CONSTRAINT R_DCP_PK PRIMARY KEY
(
DATA_CIRC_PROCESS
);

\qecho 'CREATING PRIMARY KEY R_DCS_PK'
ALTER TABLE R_DATA_CIRC_STATUS ADD CONSTRAINT R_DCS_PK PRIMARY KEY
(
DATA_CIRC_STATUS
);

\qecho 'CREATING PRIMARY KEY R_DST_PK'
ALTER TABLE R_DATA_STORE_TYPE ADD CONSTRAINT R_DST_PK PRIMARY KEY
(
DATA_STORE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_DFT_PK'
ALTER TABLE R_DATE_FORMAT_TYPE ADD CONSTRAINT R_DFT_PK PRIMARY KEY
(
DATA_STORE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_DO_PK'
ALTER TABLE R_DATUM_ORIGIN ADD CONSTRAINT R_DO_PK PRIMARY KEY
(
DATUM_ORIGIN
);

\qecho 'CREATING PRIMARY KEY R_DCC_PK'
ALTER TABLE R_DECLINE_COND_CODE ADD CONSTRAINT R_DCC_PK PRIMARY KEY
(
CONDITION_TYPE,
CONDITION_CODE
);

\qecho 'CREATING PRIMARY KEY R_DCT1_PK'
ALTER TABLE R_DECLINE_COND_TYPE ADD CONSTRAINT R_DCT1_PK PRIMARY KEY
(
CONDITION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_DCT_PK'
ALTER TABLE R_DECLINE_CURVE_TYPE ADD CONSTRAINT R_DCT_PK PRIMARY KEY
(
DECLINE_CURVE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_DT_PK'
ALTER TABLE R_DECLINE_TYPE ADD CONSTRAINT R_DT_PK PRIMARY KEY
(
DECLINE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_DET_PK'
ALTER TABLE R_DECRYPT_TYPE ADD CONSTRAINT R_DET_PK PRIMARY KEY
(
DECRYPTION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_DT1_PK'
ALTER TABLE R_DEDUCT_TYPE ADD CONSTRAINT R_DT1_PK PRIMARY KEY
(
DEDUCT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_DF_PK'
ALTER TABLE R_DIGITAL_FORMAT ADD CONSTRAINT R_DF_PK PRIMARY KEY
(
DIGITAL_FORMAT
);

\qecho 'CREATING PRIMARY KEY R_DO1_PK'
ALTER TABLE R_DIGITAL_OUTPUT ADD CONSTRAINT R_DO1_PK PRIMARY KEY
(
DIGITAL_OUTPUT
);

\qecho 'CREATING PRIMARY KEY R_DIR_PK'
ALTER TABLE R_DIRECTION ADD CONSTRAINT R_DIR_PK PRIMARY KEY
(
DIRECTION
);

\qecho 'CREATING PRIMARY KEY R_DSAR_PK'
ALTER TABLE R_DIR_SRVY_ACC_REASON ADD CONSTRAINT R_DSAR_PK PRIMARY KEY
(
ACCURACY_PROBLEM_REASON
);

\qecho 'CREATING PRIMARY KEY R_DSC_PK'
ALTER TABLE R_DIR_SRVY_CLASS ADD CONSTRAINT R_DSC_PK PRIMARY KEY
(
DIR_SURVEY_CLASS
);

\qecho 'CREATING PRIMARY KEY R_DSC1_PK'
ALTER TABLE R_DIR_SRVY_COMPUTE ADD CONSTRAINT R_DSC1_PK PRIMARY KEY
(
COMPUTE_METHOD
);

\qecho 'CREATING PRIMARY KEY R_DSCAT_PK'
ALTER TABLE R_DIR_SRVY_CORR_ANGLE_TYPE ADD CONSTRAINT R_DSCAT_PK PRIMARY KEY
(
CORR_ANGLE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_DSPT_PK'
ALTER TABLE R_DIR_SRVY_POINT_TYPE ADD CONSTRAINT R_DSPT_PK PRIMARY KEY
(
POINT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_DSPM_PK'
ALTER TABLE R_DIR_SRVY_PROCESS_METH ADD CONSTRAINT R_DSPM_PK PRIMARY KEY
(
PROCESS_METHOD
);

\qecho 'CREATING PRIMARY KEY R_DSRU_PK'
ALTER TABLE R_DIR_SRVY_RAD_UNCERT ADD CONSTRAINT R_DSRU_PK PRIMARY KEY
(
RAD_UNCERT_DIST_REASON
);

\qecho 'CREATING PRIMARY KEY R_DSR_PK'
ALTER TABLE R_DIR_SRVY_RECORD ADD CONSTRAINT R_DSR_PK PRIMARY KEY
(
RECORD_MODE
);

\qecho 'CREATING PRIMARY KEY R_DSRT_PK'
ALTER TABLE R_DIR_SRVY_REPORT_TYPE ADD CONSTRAINT R_DSRT_PK PRIMARY KEY
(
REPORT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_DST1_PK'
ALTER TABLE R_DIR_SRVY_TYPE ADD CONSTRAINT R_DST1_PK PRIMARY KEY
(
SURVEY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_DRP_PK'
ALTER TABLE R_DIST_REF_PT ADD CONSTRAINT R_DRP_PK PRIMARY KEY
(
DISTANCE_REF_POINT
);

\qecho 'CREATING PRIMARY KEY R_DOC_PK'
ALTER TABLE R_DOCUMENT_TYPE ADD CONSTRAINT R_DOC_PK PRIMARY KEY
(
DOCUMENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_DS_PK'
ALTER TABLE R_DOC_STATUS ADD CONSTRAINT R_DS_PK PRIMARY KEY
(
DOCUMENT_STATUS
);

\qecho 'CREATING PRIMARY KEY R_DM_PK'
ALTER TABLE R_DRILLING_MEDIA ADD CONSTRAINT R_DM_PK PRIMARY KEY
(
DRILLING_MEDIA
);

\qecho 'CREATING PRIMARY KEY R_DAC_PK'
ALTER TABLE R_DRILL_ASSEMBLY_COMP ADD CONSTRAINT R_DAC_PK PRIMARY KEY
(
COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_DBC_PK'
ALTER TABLE R_DRILL_BIT_CONDITION ADD CONSTRAINT R_DBC_PK PRIMARY KEY
(
DRILL_BIT_CONDITION
);

\qecho 'CREATING PRIMARY KEY R_DBDC_PK'
ALTER TABLE R_DRILL_BIT_DETAIL_CODE ADD CONSTRAINT R_DBDC_PK PRIMARY KEY
(
BIT_DETAIL_TYPE,
BIT_DETAIL_CODE
);

\qecho 'CREATING PRIMARY KEY R_DBD_PK'
ALTER TABLE R_DRILL_BIT_DETAIL_TYPE ADD CONSTRAINT R_DBD_PK PRIMARY KEY
(
BIT_DETAIL_TYPE
);

\qecho 'CREATING PRIMARY KEY R_DBJT_PK'
ALTER TABLE R_DRILL_BIT_JET_TYPE ADD CONSTRAINT R_DBJT_PK PRIMARY KEY
(
JET_TYPE
);

\qecho 'CREATING PRIMARY KEY R_DBT_PK'
ALTER TABLE R_DRILL_BIT_TYPE ADD CONSTRAINT R_DBT_PK PRIMARY KEY
(
DRILL_BIT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_DHP_PK'
ALTER TABLE R_DRILL_HOLE_POSITION ADD CONSTRAINT R_DHP_PK PRIMARY KEY
(
DRILL_HOLE_POSITION
);

\qecho 'CREATING PRIMARY KEY R_DRT_PK'
ALTER TABLE R_DRILL_REPORT_TIME ADD CONSTRAINT R_DRT_PK PRIMARY KEY
(
REPORT_TIME_TYPE
);

\qecho 'CREATING PRIMARY KEY R_DSTC_PK'
ALTER TABLE R_DRILL_STAT_CODE ADD CONSTRAINT R_DSTC_PK PRIMARY KEY
(
STATISTIC_TYPE,
STATISTIC_CODE
);

\qecho 'CREATING PRIMARY KEY R_DSTAT_PK'
ALTER TABLE R_DRILL_STAT_TYPE ADD CONSTRAINT R_DSTAT_PK PRIMARY KEY
(
STATISTIC_TYPE
);

\qecho 'CREATING PRIMARY KEY R_DTT_PK'
ALTER TABLE R_DRILL_TOOL_TYPE ADD CONSTRAINT R_DTT_PK PRIMARY KEY
(
DRILL_TOOL_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ES_PK'
ALTER TABLE R_ECONOMIC_SCENARIO ADD CONSTRAINT R_ES_PK PRIMARY KEY
(
ECONOMIC_SCENARIO
);

\qecho 'CREATING PRIMARY KEY R_EST_PK'
ALTER TABLE R_ECONOMIC_SCHEDULE ADD CONSTRAINT R_EST_PK PRIMARY KEY
(
ECONOMIC_SCHEDULE
);

\qecho 'CREATING PRIMARY KEY R_EZHL_PK'
ALTER TABLE R_ECOZONE_HIER_LEVEL ADD CONSTRAINT R_EZHL_PK PRIMARY KEY
(
HIERARCHY_LEVEL
);

\qecho 'CREATING PRIMARY KEY R_EZT_PK'
ALTER TABLE R_ECOZONE_TYPE ADD CONSTRAINT R_EZT_PK PRIMARY KEY
(
ECOZONE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_EZX_PK'
ALTER TABLE R_ECOZONE_XREF ADD CONSTRAINT R_EZX_PK PRIMARY KEY
(
ECOZONE_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_EP_PK'
ALTER TABLE R_EMPLOYEE_POSITION ADD CONSTRAINT R_EP_PK PRIMARY KEY
(
EMPLOYEE_POSITION
);

\qecho 'CREATING PRIMARY KEY R_ES1_PK'
ALTER TABLE R_EMPLOYEE_STATUS ADD CONSTRAINT R_ES1_PK PRIMARY KEY
(
EMPLOYEE_STATUS
);

\qecho 'CREATING PRIMARY KEY R_ET_PK'
ALTER TABLE R_ENCODING_TYPE ADD CONSTRAINT R_ET_PK PRIMARY KEY
(
ENCODING_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ERT_PK'
ALTER TABLE R_ENHANCED_REC_TYPE ADD CONSTRAINT R_ERT_PK PRIMARY KEY
(
ENHANCED_RECOVERY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_EAT_PK'
ALTER TABLE R_ENT_ACCESS_TYPE ADD CONSTRAINT R_EAT_PK PRIMARY KEY
(
ACCESS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ECT_PK'
ALTER TABLE R_ENT_COMPONENT_TYPE ADD CONSTRAINT R_ECT_PK PRIMARY KEY
(
ENT_COMP_TYPE
);

\qecho 'CREATING PRIMARY KEY R_EEA_PK'
ALTER TABLE R_ENT_EXPIRY_ACTION ADD CONSTRAINT R_EEA_PK PRIMARY KEY
(
EXPIRY_ACTION
);

\qecho 'CREATING PRIMARY KEY R_ESGT_PK'
ALTER TABLE R_ENT_SEC_GROUP_TYPE ADD CONSTRAINT R_ESGT_PK PRIMARY KEY
(
GROUP_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ESGXT_PK'
ALTER TABLE R_ENT_SEC_GROUP_XREF ADD CONSTRAINT R_ESGXT_PK PRIMARY KEY
(
XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ENT_PK'
ALTER TABLE R_ENT_TYPE ADD CONSTRAINT R_ENT_PK PRIMARY KEY
(
ENTITLEMENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_E_PK'
ALTER TABLE R_ENVIRONMENT ADD CONSTRAINT R_E_PK PRIMARY KEY
(
ENVIRONMENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_EBART_PK'
ALTER TABLE R_EQUIP_BA_ROLE_TYPE ADD CONSTRAINT R_EBART_PK PRIMARY KEY
(
ROLE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_EQCT_PK'
ALTER TABLE R_EQUIP_COMPONENT_TYPE ADD CONSTRAINT R_EQCT_PK PRIMARY KEY
(
EQUIPMENT_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_EIL_PK'
ALTER TABLE R_EQUIP_INSTALL_LOC ADD CONSTRAINT R_EIL_PK PRIMARY KEY
(
INSTALL_LOC_TYPE
);

\qecho 'CREATING PRIMARY KEY R_EML_PK'
ALTER TABLE R_EQUIP_MAINT_LOC ADD CONSTRAINT R_EML_PK PRIMARY KEY
(
MAINT_LOCATION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_EMR_PK'
ALTER TABLE R_EQUIP_MAINT_REASON ADD CONSTRAINT R_EMR_PK PRIMARY KEY
(
MAINT_REASON
);

\qecho 'CREATING PRIMARY KEY R_EQMS_PK'
ALTER TABLE R_EQUIP_MAINT_STATUS ADD CONSTRAINT R_EQMS_PK PRIMARY KEY
(
MAINTAIN_STATUS_TYPE,
MAINTAIN_STATUS
);

\qecho 'CREATING PRIMARY KEY R_EQST_PK'
ALTER TABLE R_EQUIP_MAINT_STAT_TYPE ADD CONSTRAINT R_EQST_PK PRIMARY KEY
(
MAINTAIN_STATUS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ERR_PK'
ALTER TABLE R_EQUIP_REMOVE_REASON ADD CONSTRAINT R_ERR_PK PRIMARY KEY
(
REMOVE_REASON
);

\qecho 'CREATING PRIMARY KEY R_ESP_PK'
ALTER TABLE R_EQUIP_SPEC ADD CONSTRAINT R_ESP_PK PRIMARY KEY
(
SPEC_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ESRT_PK'
ALTER TABLE R_EQUIP_SPEC_REF_TYPE ADD CONSTRAINT R_ESRT_PK PRIMARY KEY
(
REFERENCE_VALUE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ESST_PK'
ALTER TABLE R_EQUIP_SPEC_SET_TYPE ADD CONSTRAINT R_ESST_PK PRIMARY KEY
(
SPEC_SET_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ESTAT_PK'
ALTER TABLE R_EQUIP_STATUS ADD CONSTRAINT R_ESTAT_PK PRIMARY KEY
(
STATUS_TYPE,
EQUIP_STATUS
);

\qecho 'CREATING PRIMARY KEY R_ESTA_PK'
ALTER TABLE R_EQUIP_STATUS_TYPE ADD CONSTRAINT R_ESTA_PK PRIMARY KEY
(
STATUS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ESC_PK'
ALTER TABLE R_EQUIP_SYSTEM_CONDITION ADD CONSTRAINT R_ESC_PK PRIMARY KEY
(
SYSTEM_CONDITION
);

\qecho 'CREATING PRIMARY KEY R_EUST_PK'
ALTER TABLE R_EQUIP_USE_STAT_TYPE ADD CONSTRAINT R_EUST_PK PRIMARY KEY
(
EQUIP_USE_STAT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_EXT_PK'
ALTER TABLE R_EQUIP_XREF_TYPE ADD CONSTRAINT R_EXT_PK PRIMARY KEY
(
EQUIP_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ED_PK'
ALTER TABLE R_EW_DIRECTION ADD CONSTRAINT R_ED_PK PRIMARY KEY
(
EW_DIRECTION
);

\qecho 'CREATING PRIMARY KEY R_ESL_PK'
ALTER TABLE R_EW_START_LINE ADD CONSTRAINT R_ESL_PK PRIMARY KEY
(
EW_START_LINE
);

\qecho 'CREATING PRIMARY KEY R_FAC_PK'
ALTER TABLE R_FACILITY_CLASS ADD CONSTRAINT R_FAC_PK PRIMARY KEY
(
FACILITY_CLASS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FACT2_PK'
ALTER TABLE R_FACILITY_COMP_TYPE ADD CONSTRAINT R_FACT2_PK PRIMARY KEY
(
FACILITY_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FSC_PK'
ALTER TABLE R_FACILITY_SPEC_CODE ADD CONSTRAINT R_FSC_PK PRIMARY KEY
(
SPEC_TYPE,
SPEC_CODE
);

\qecho 'CREATING PRIMARY KEY R_FST1_PK'
ALTER TABLE R_FACILITY_SPEC_TYPE ADD CONSTRAINT R_FST1_PK PRIMARY KEY
(
SPEC_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FS_PK'
ALTER TABLE R_FACILITY_STATUS ADD CONSTRAINT R_FS_PK PRIMARY KEY
(
STATUS_TYPE,
STATUS
);

\qecho 'CREATING PRIMARY KEY R_FACT_PK'
ALTER TABLE R_FACILITY_TYPE ADD CONSTRAINT R_FACT_PK PRIMARY KEY
(
FACILITY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FXT1_PK'
ALTER TABLE R_FACILITY_XREF_TYPE ADD CONSTRAINT R_FXT1_PK PRIMARY KEY
(
FACILITY_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FF_PK'
ALTER TABLE R_FAC_FUNCTION ADD CONSTRAINT R_FF_PK PRIMARY KEY
(
FACILITY_FUNCTION
);

\qecho 'CREATING PRIMARY KEY R_FLC_PK'
ALTER TABLE R_FAC_LIC_COND ADD CONSTRAINT R_FLC_PK PRIMARY KEY
(
CONDITION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FLCC_PK'
ALTER TABLE R_FAC_LIC_COND_CODE ADD CONSTRAINT R_FLCC_PK PRIMARY KEY
(
CONDITION_TYPE,
CONDITION_CODE
);

\qecho 'CREATING PRIMARY KEY R_FLDC_PK'
ALTER TABLE R_FAC_LIC_DUE_CONDITION ADD CONSTRAINT R_FLDC_PK PRIMARY KEY
(
DUE_CONDITION
);

\qecho 'CREATING PRIMARY KEY R_FLET_PK'
ALTER TABLE R_FAC_LIC_EXTEND_TYPE ADD CONSTRAINT R_FLET_PK PRIMARY KEY
(
LICENSE_EXTENSION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FLVT_PK'
ALTER TABLE R_FAC_LIC_VIOLATION_TYPE ADD CONSTRAINT R_FLVT_PK PRIMARY KEY
(
VIOLATION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FLVRT_PK'
ALTER TABLE R_FAC_LIC_VIOL_RESOL ADD CONSTRAINT R_FLVRT_PK PRIMARY KEY
(
RESOLVE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FMT_PK'
ALTER TABLE R_FAC_MAINTAIN_TYPE ADD CONSTRAINT R_FMT_PK PRIMARY KEY
(
FACILITY_TYPE,
MAINTAIN_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FMS_PK'
ALTER TABLE R_FAC_MAINT_STATUS ADD CONSTRAINT R_FMS_PK PRIMARY KEY
(
MAINTAIN_STATUS_TYPE,
MAINTAIN_STATUS
);

\qecho 'CREATING PRIMARY KEY R_FMST_PK'
ALTER TABLE R_FAC_MAINT_STATUS_TYPE ADD CONSTRAINT R_FMST_PK PRIMARY KEY
(
MAINTAIN_STATUS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FPC_PK'
ALTER TABLE R_FAC_PIPE_COVER ADD CONSTRAINT R_FPC_PK PRIMARY KEY
(
COVER_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FPM_PK'
ALTER TABLE R_FAC_PIPE_MATERIAL ADD CONSTRAINT R_FPM_PK PRIMARY KEY
(
PIPELINE_MATERIAL
);

\qecho 'CREATING PRIMARY KEY R_FPT_PK'
ALTER TABLE R_FAC_PIPE_TYPE ADD CONSTRAINT R_FPT_PK PRIMARY KEY
(
PIPELINE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FSRT_PK'
ALTER TABLE R_FAC_SPEC_REFERENCE ADD CONSTRAINT R_FSRT_PK PRIMARY KEY
(
REFERENCE_VALUE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FAST_PK'
ALTER TABLE R_FAC_STATUS_TYPE ADD CONSTRAINT R_FAST_PK PRIMARY KEY
(
STATUS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FT1_PK'
ALTER TABLE R_FAULT_TYPE ADD CONSTRAINT R_FT1_PK PRIMARY KEY
(
FAULT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FLCT_PK'
ALTER TABLE R_FIELD_COMPONENT_TYPE ADD CONSTRAINT R_FLCT_PK PRIMARY KEY
(
FIELD_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FST_PK'
ALTER TABLE R_FIELD_STATION_TYPE ADD CONSTRAINT R_FST_PK PRIMARY KEY
(
FIELD_STATION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FT3_PK'
ALTER TABLE R_FIELD_TYPE ADD CONSTRAINT R_FT3_PK PRIMARY KEY
(
FIELD_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FCT_PK'
ALTER TABLE R_FIN_COMPONENT_TYPE ADD CONSTRAINT R_FCT_PK PRIMARY KEY
(
FIN_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FICT_PK'
ALTER TABLE R_FIN_COST_TYPE ADD CONSTRAINT R_FICT_PK PRIMARY KEY
(
COST_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FIS_PK'
ALTER TABLE R_FIN_STATUS ADD CONSTRAINT R_FIS_PK PRIMARY KEY
(
FIN_STATUS
);

\qecho 'CREATING PRIMARY KEY R_FT_PK'
ALTER TABLE R_FIN_TYPE ADD CONSTRAINT R_FT_PK PRIMARY KEY
(
FIN_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FXT_PK'
ALTER TABLE R_FIN_XREF_TYPE ADD CONSTRAINT R_FXT_PK PRIMARY KEY
(
FIN_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FT2_PK'
ALTER TABLE R_FLUID_TYPE ADD CONSTRAINT R_FT2_PK PRIMARY KEY
(
FLUID_TYPE
);

\qecho 'CREATING PRIMARY KEY R_F_PK'
ALTER TABLE R_FONT ADD CONSTRAINT R_F_PK PRIMARY KEY
(
FONT
);

\qecho 'CREATING PRIMARY KEY R_FE_PK'
ALTER TABLE R_FONT_EFFECT ADD CONSTRAINT R_FE_PK PRIMARY KEY
(
FONT_EFFECT
);

\qecho 'CREATING PRIMARY KEY R_FO_PK'
ALTER TABLE R_FOOTAGE_ORIGIN ADD CONSTRAINT R_FO_PK PRIMARY KEY
(
FOOTAGE_ORIGIN
);

\qecho 'CREATING PRIMARY KEY R_FALT_PK'
ALTER TABLE R_FOS_ALIAS_TYPE ADD CONSTRAINT R_FALT_PK PRIMARY KEY
(
FOS_ALIAS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FAT_PK'
ALTER TABLE R_FOS_ASSEMBLAGE_TYPE ADD CONSTRAINT R_FAT_PK PRIMARY KEY
(
ASSEMBLAGE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FDC_PK'
ALTER TABLE R_FOS_DESC_CODE ADD CONSTRAINT R_FDC_PK PRIMARY KEY
(
DESCRIPTION_TYPE,
DESCRIPTION_CODE
);

\qecho 'CREATING PRIMARY KEY R_FDT_PK'
ALTER TABLE R_FOS_DESC_TYPE ADD CONSTRAINT R_FDT_PK PRIMARY KEY
(
DESCRIPTION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FLH_PK'
ALTER TABLE R_FOS_LIFE_HABIT ADD CONSTRAINT R_FLH_PK PRIMARY KEY
(
LIFE_HABIT
);

\qecho 'CREATING PRIMARY KEY R_FNST_PK'
ALTER TABLE R_FOS_NAME_SET_TYPE ADD CONSTRAINT R_FNST_PK PRIMARY KEY
(
FOSSIL_NAME_SET_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FOT_PK'
ALTER TABLE R_FOS_OBS_TYPE ADD CONSTRAINT R_FOT_PK PRIMARY KEY
(
FOSSIL_OBS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_FTG_PK'
ALTER TABLE R_FOS_TAXON_GROUP ADD CONSTRAINT R_FTG_PK PRIMARY KEY
(
TAXON_GROUP
);

\qecho 'CREATING PRIMARY KEY R_FTL_PK'
ALTER TABLE R_FOS_TAXON_LEVEL ADD CONSTRAINT R_FTL_PK PRIMARY KEY
(
TAXON_LEVEL
);

\qecho 'CREATING PRIMARY KEY R_FX_PK'
ALTER TABLE R_FOS_XREF ADD CONSTRAINT R_FX_PK PRIMARY KEY
(
FOSSIL_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_GAVC_PK'
ALTER TABLE R_GAS_ANL_VALUE_CODE ADD CONSTRAINT R_GAVC_PK PRIMARY KEY
(
GAS_ANL_VALUE_CODE
);

\qecho 'CREATING PRIMARY KEY R_GAVT_PK'
ALTER TABLE R_GAS_ANL_VALUE_TYPE ADD CONSTRAINT R_GAVT_PK PRIMARY KEY
(
GAS_ANL_VALUE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_GRT_PK'
ALTER TABLE R_GRANTED_RIGHT_TYPE ADD CONSTRAINT R_GRT_PK PRIMARY KEY
(
GRANTED_RIGHT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_HCM_PK'
ALTER TABLE R_HEAT_CONTENT_METHOD ADD CONSTRAINT R_HCM_PK PRIMARY KEY
(
HEAT_CONTENT_METHOD
);

\qecho 'CREATING PRIMARY KEY R_HC_PK'
ALTER TABLE R_HOLE_CONDITION ADD CONSTRAINT R_HC_PK PRIMARY KEY
(
HOLE_CONDITION
);

\qecho 'CREATING PRIMARY KEY R_HDR_PK'
ALTER TABLE R_HORIZ_DRILL_REASON ADD CONSTRAINT R_HDR_PK PRIMARY KEY
(
HORIZ_DRILL_REASON
);

\qecho 'CREATING PRIMARY KEY R_HDT_PK'
ALTER TABLE R_HORIZ_DRILL_TYPE ADD CONSTRAINT R_HDT_PK PRIMARY KEY
(
HORIZ_DRILL_TYPE
);

\qecho 'CREATING PRIMARY KEY R_HCR_PK'
ALTER TABLE R_HSE_COMP_ROLE ADD CONSTRAINT R_HCR_PK PRIMARY KEY
(
COMPONENT_ROLE
);

\qecho 'CREATING PRIMARY KEY R_HICT_PK'
ALTER TABLE R_HSE_INCIDENT_COMP_TYPE ADD CONSTRAINT R_HICT_PK PRIMARY KEY
(
COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_HID_PK'
ALTER TABLE R_HSE_INCIDENT_DETAIL ADD CONSTRAINT R_HID_PK PRIMARY KEY
(
DETAIL_TYPE
);

\qecho 'CREATING PRIMARY KEY R_HRT_PK'
ALTER TABLE R_HSE_RESPONSE_TYPE ADD CONSTRAINT R_HRT_PK PRIMARY KEY
(
ACTION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ICM_PK'
ALTER TABLE R_IMAGE_CALIBRATE_METHOD ADD CONSTRAINT R_ICM_PK PRIMARY KEY
(
CALIBRATE_METHOD
);

\qecho 'CREATING PRIMARY KEY R_ISET_PK'
ALTER TABLE R_IMAGE_SECTION_TYPE ADD CONSTRAINT R_ISET_PK PRIMARY KEY
(
SECTION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_IBR_PK'
ALTER TABLE R_INCIDENT_BA_ROLE ADD CONSTRAINT R_IBR_PK PRIMARY KEY
(
BA_ROLE
);

\qecho 'CREATING PRIMARY KEY R_ICC_PK'
ALTER TABLE R_INCIDENT_CAUSE_CODE ADD CONSTRAINT R_ICC_PK PRIMARY KEY
(
CAUSE_TYPE,
CAUSE_CODE
);

\qecho 'CREATING PRIMARY KEY R_ICT1_PK'
ALTER TABLE R_INCIDENT_CAUSE_TYPE ADD CONSTRAINT R_ICT1_PK PRIMARY KEY
(
CAUSE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_IIT_PK'
ALTER TABLE R_INCIDENT_INTERACT_TYPE ADD CONSTRAINT R_IIT_PK PRIMARY KEY
(
INTERACTION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_IRR_PK'
ALTER TABLE R_INCIDENT_RESP_RESULT ADD CONSTRAINT R_IRR_PK PRIMARY KEY
(
RESPONSE_RESULT
);

\qecho 'CREATING PRIMARY KEY R_ISUB_PK'
ALTER TABLE R_INCIDENT_SUBSTANCE ADD CONSTRAINT R_ISUB_PK PRIMARY KEY
(
INCIDENT_SUBSTANCE
);

\qecho 'CREATING PRIMARY KEY R_ISRL_PK'
ALTER TABLE R_INCIDENT_SUBST_ROLE ADD CONSTRAINT R_ISRL_PK PRIMARY KEY
(
SUBSTANCE_ROLE
);

\qecho 'CREATING PRIMARY KEY R_IP_PK'
ALTER TABLE R_INFORMATION_PROCESS ADD CONSTRAINT R_IP_PK PRIMARY KEY
(
INFORMATION_PROCESS
);

\qecho 'CREATING PRIMARY KEY R_INT_PK'
ALTER TABLE R_INPUT_TYPE ADD CONSTRAINT R_INT_PK PRIMARY KEY
(
INPUT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ICT_PK'
ALTER TABLE R_INSP_COMP_TYPE ADD CONSTRAINT R_ICT_PK PRIMARY KEY
(
COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_IS_PK'
ALTER TABLE R_INSP_STATUS ADD CONSTRAINT R_IS_PK PRIMARY KEY
(
INSPECTION_STATUS
);

\qecho 'CREATING PRIMARY KEY R_ICT2_PK'
ALTER TABLE R_INSTRUMENT_COMP_TYPE ADD CONSTRAINT R_ICT2_PK PRIMARY KEY
(
INSTRUMENT_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_INST_PK'
ALTER TABLE R_INSTRUMENT_TYPE ADD CONSTRAINT R_INST_PK PRIMARY KEY
(
LAND_INSTRUMENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_INSDTC_PK'
ALTER TABLE R_INST_DETAIL_CODE ADD CONSTRAINT R_INSDTC_PK PRIMARY KEY
(
INSTRUMENT_DETAIL_TYPE,
INSTRUMENT_DETAIL_CODE
);

\qecho 'CREATING PRIMARY KEY R_INSDRVT_PK'
ALTER TABLE R_INST_DETAIL_REF_VALUE ADD CONSTRAINT R_INSDRVT_PK PRIMARY KEY
(
REFERENCE_VALUE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_INSDT_PK'
ALTER TABLE R_INST_DETAIL_TYPE ADD CONSTRAINT R_INSDT_PK PRIMARY KEY
(
INSTRUMENT_DETAIL_TYPE
);

\qecho 'CREATING PRIMARY KEY R_IOT_PK'
ALTER TABLE R_INTERP_ORIGIN_TYPE ADD CONSTRAINT R_IOT_PK PRIMARY KEY
(
ORIGIN_TYPE
);

\qecho 'CREATING PRIMARY KEY R_IT_PK'
ALTER TABLE R_INTERP_TYPE ADD CONSTRAINT R_IT_PK PRIMARY KEY
(
INTERP_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ISC_PK'
ALTER TABLE R_INT_SET_COMPONENT ADD CONSTRAINT R_ISC_PK PRIMARY KEY
(
COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ISR_PK'
ALTER TABLE R_INT_SET_ROLE ADD CONSTRAINT R_ISR_PK PRIMARY KEY
(
INTEREST_SET_ROLE
);

\qecho 'CREATING PRIMARY KEY R_ISS_PK'
ALTER TABLE R_INT_SET_STATUS ADD CONSTRAINT R_ISS_PK PRIMARY KEY
(
STATUS_TYPE,
STATUS
);

\qecho 'CREATING PRIMARY KEY R_ISST_PK'
ALTER TABLE R_INT_SET_STATUS_TYPE ADD CONSTRAINT R_ISST_PK PRIMARY KEY
(
STATUS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ISTR_PK'
ALTER TABLE R_INT_SET_TRIGGER ADD CONSTRAINT R_ISTR_PK PRIMARY KEY
(
TRIGGER_EVENT
);

\qecho 'CREATING PRIMARY KEY R_IST_PK'
ALTER TABLE R_INT_SET_TYPE ADD CONSTRAINT R_IST_PK PRIMARY KEY
(
INTEREST_SET_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ISXT_PK'
ALTER TABLE R_INT_SET_XREF_TYPE ADD CONSTRAINT R_ISXT_PK PRIMARY KEY
(
INT_SET_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_IMT_PK'
ALTER TABLE R_INV_MATERIAL_TYPE ADD CONSTRAINT R_IMT_PK PRIMARY KEY
(
INVENTORY_MATERIAL_TYPE
);

\qecho 'CREATING PRIMARY KEY R_IC_PK'
ALTER TABLE R_ITEM_CATEGORY ADD CONSTRAINT R_IC_PK PRIMARY KEY
(
ITEM_CATEGORY
);

\qecho 'CREATING PRIMARY KEY R_ISC1_PK'
ALTER TABLE R_ITEM_SUB_CATEGORY ADD CONSTRAINT R_ISC1_PK PRIMARY KEY
(
ITEM_CATEGORY,
ITEM_SUB_CATEGORY
);

\qecho 'CREATING PRIMARY KEY R_LAM_PK'
ALTER TABLE R_LAND_ACQTN_METHOD ADD CONSTRAINT R_LAM_PK PRIMARY KEY
(
LAND_ACQTN_METHOD
);

\qecho 'CREATING PRIMARY KEY R_LAT_PK'
ALTER TABLE R_LAND_AGREE_TYPE ADD CONSTRAINT R_LAT_PK PRIMARY KEY
(
LAND_AGREE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LBT1_PK'
ALTER TABLE R_LAND_BIDDER_TYPE ADD CONSTRAINT R_LBT1_PK PRIMARY KEY
(
LAND_BIDDER_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LBS_PK'
ALTER TABLE R_LAND_BID_STATUS ADD CONSTRAINT R_LBS_PK PRIMARY KEY
(
LAND_BID_STATUS
);

\qecho 'CREATING PRIMARY KEY R_LBT_PK'
ALTER TABLE R_LAND_BID_TYPE ADD CONSTRAINT R_LBT_PK PRIMARY KEY
(
LAND_BID_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LCA_PK'
ALTER TABLE R_LAND_CASE_ACTION ADD CONSTRAINT R_LCA_PK PRIMARY KEY
(
LAND_CASE_ACTION
);

\qecho 'CREATING PRIMARY KEY R_LCT_PK'
ALTER TABLE R_LAND_CASE_TYPE ADD CONSTRAINT R_LCT_PK PRIMARY KEY
(
LAND_CASE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LCBT_PK'
ALTER TABLE R_LAND_CASH_BID_TYPE ADD CONSTRAINT R_LCBT_PK PRIMARY KEY
(
CASH_BID_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LCT1_PK'
ALTER TABLE R_LAND_COMPONENT_TYPE ADD CONSTRAINT R_LCT1_PK PRIMARY KEY
(
LAND_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LLT_PK'
ALTER TABLE R_LAND_LESSOR_TYPE ADD CONSTRAINT R_LLT_PK PRIMARY KEY
(
LAND_LESSOR_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LOS_PK'
ALTER TABLE R_LAND_OFFRING_STATUS ADD CONSTRAINT R_LOS_PK PRIMARY KEY
(
LAND_OFFRING_STATUS
);

\qecho 'CREATING PRIMARY KEY R_LOT1_PK'
ALTER TABLE R_LAND_OFFRING_TYPE ADD CONSTRAINT R_LOT1_PK PRIMARY KEY
(
LAND_OFFRING_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LPT1_PK'
ALTER TABLE R_LAND_PROPERTY_TYPE ADD CONSTRAINT R_LPT1_PK PRIMARY KEY
(
LAND_PROPERTY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LRNT_PK'
ALTER TABLE R_LAND_REF_NUM_TYPE ADD CONSTRAINT R_LRNT_PK PRIMARY KEY
(
LAND_REF_NUM_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LRT_PK'
ALTER TABLE R_LAND_RENTAL_TYPE ADD CONSTRAINT R_LRT_PK PRIMARY KEY
(
LAND_RENTAL_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LRT2_PK'
ALTER TABLE R_LAND_REQUEST_TYPE ADD CONSTRAINT R_LRT2_PK PRIMARY KEY
(
LAND_REQUEST_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LRS_PK'
ALTER TABLE R_LAND_REQ_STATUS ADD CONSTRAINT R_LRS_PK PRIMARY KEY
(
LAND_REQ_STATUS
);

\qecho 'CREATING PRIMARY KEY R_LRC_PK'
ALTER TABLE R_LAND_RIGHT_CATEGORY ADD CONSTRAINT R_LRC_PK PRIMARY KEY
(
LAND_RIGHT_CATEGORY
);

\qecho 'CREATING PRIMARY KEY R_LRS1_PK'
ALTER TABLE R_LAND_RIGHT_STATUS ADD CONSTRAINT R_LRS1_PK PRIMARY KEY
(
STATUS_TYPE,
LAND_RIGHT_STATUS
);

\qecho 'CREATING PRIMARY KEY R_LRST_PK'
ALTER TABLE R_LAND_STATUS_TYPE ADD CONSTRAINT R_LRST_PK PRIMARY KEY
(
STATUS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LTCR_PK'
ALTER TABLE R_LAND_TITLE_CHG_RSN ADD CONSTRAINT R_LTCR_PK PRIMARY KEY
(
LAND_TITLE_CHANGE_REASON
);

\qecho 'CREATING PRIMARY KEY R_LTT2_PK'
ALTER TABLE R_LAND_TITLE_TYPE ADD CONSTRAINT R_LTT2_PK PRIMARY KEY
(
LAND_TITLE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LTT3_PK'
ALTER TABLE R_LAND_TRACT_TYPE ADD CONSTRAINT R_LTT3_PK PRIMARY KEY
(
LAND_TRACT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LUT1_PK'
ALTER TABLE R_LAND_UNIT_TYPE ADD CONSTRAINT R_LUT1_PK PRIMARY KEY
(
LAND_UNIT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LWRT_PK'
ALTER TABLE R_LAND_WELL_REL_TYPE ADD CONSTRAINT R_LWRT_PK PRIMARY KEY
(
WELL_RELATIONSHIP_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LANG_PK'
ALTER TABLE R_LANGUAGE ADD CONSTRAINT R_LANG_PK PRIMARY KEY
(
LANGUAGE_ID
);

\qecho 'CREATING PRIMARY KEY R_LUS_PK'
ALTER TABLE R_LEASE_UNIT_STATUS ADD CONSTRAINT R_LUS_PK PRIMARY KEY
(
LEASE_UNIT_STATUS
);

\qecho 'CREATING PRIMARY KEY R_LUT_PK'
ALTER TABLE R_LEASE_UNIT_TYPE ADD CONSTRAINT R_LUT_PK PRIMARY KEY
(
LEASE_UNIT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LST1_PK'
ALTER TABLE R_LEGAL_SURVEY_TYPE ADD CONSTRAINT R_LST1_PK PRIMARY KEY
(
LEGAL_SURVEY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LIST_PK'
ALTER TABLE R_LICENSE_STATUS ADD CONSTRAINT R_LIST_PK PRIMARY KEY
(
LICENSE_STATUS_TYPE,
LICENSE_STATUS
);

\qecho 'CREATING PRIMARY KEY R_LISTT_PK'
ALTER TABLE R_LIC_STATUS_TYPE ADD CONSTRAINT R_LISTT_PK PRIMARY KEY
(
LICENSE_STATUS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LT_PK'
ALTER TABLE R_LINER_TYPE ADD CONSTRAINT R_LT_PK PRIMARY KEY
(
LINER_TYPE
);

\qecho 'CREATING PRIMARY KEY R_L_PK'
ALTER TABLE R_LITHOLOGY ADD CONSTRAINT R_L_PK PRIMARY KEY
(
LITHOLOGY
);

\qecho 'CREATING PRIMARY KEY R_LA_PK'
ALTER TABLE R_LITH_ABUNDANCE ADD CONSTRAINT R_LA_PK PRIMARY KEY
(
ABUNDANCE
);

\qecho 'CREATING PRIMARY KEY R_LBT2_PK'
ALTER TABLE R_LITH_BOUNDARY_TYPE ADD CONSTRAINT R_LBT2_PK PRIMARY KEY
(
BOUNDARY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LC_PK'
ALTER TABLE R_LITH_COLOR ADD CONSTRAINT R_LC_PK PRIMARY KEY
(
COLOR
);

\qecho 'CREATING PRIMARY KEY R_L2_PK'
ALTER TABLE R_LITH_CONSOLIDATION ADD CONSTRAINT R_L2_PK PRIMARY KEY
(
CONSOLIDATION
);

\qecho 'CREATING PRIMARY KEY R_LCB_PK'
ALTER TABLE R_LITH_CYCLE_BED ADD CONSTRAINT R_LCB_PK PRIMARY KEY
(
CYCLE_BED
);

\qecho 'CREATING PRIMARY KEY R_LDE_PK'
ALTER TABLE R_LITH_DEP_ENV ADD CONSTRAINT R_LDE_PK PRIMARY KEY
(
DEPOSITIONAL_ENVIRONMENT
);

\qecho 'CREATING PRIMARY KEY R_LD1_PK'
ALTER TABLE R_LITH_DIAGENESIS ADD CONSTRAINT R_LD1_PK PRIMARY KEY
(
DIAGENESIS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LD2_PK'
ALTER TABLE R_LITH_DISTRIBUTION ADD CONSTRAINT R_LD2_PK PRIMARY KEY
(
DISTRIBUTION
);

\qecho 'CREATING PRIMARY KEY R_LI_PK'
ALTER TABLE R_LITH_INTENSITY ADD CONSTRAINT R_LI_PK PRIMARY KEY
(
INTENSITY
);

\qecho 'CREATING PRIMARY KEY R_LLCT_PK'
ALTER TABLE R_LITH_LOG_COMP_TYPE ADD CONSTRAINT R_LLCT_PK PRIMARY KEY
(
LITH_LOG_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LLT1_PK'
ALTER TABLE R_LITH_LOG_TYPE ADD CONSTRAINT R_LLT1_PK PRIMARY KEY
(
LITH_LOG_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LOS1_PK'
ALTER TABLE R_LITH_OIL_STAIN ADD CONSTRAINT R_LOS1_PK PRIMARY KEY
(
OIL_STAIN
);

\qecho 'CREATING PRIMARY KEY R_LPC_PK'
ALTER TABLE R_LITH_PATTERN_CODE ADD CONSTRAINT R_LPC_PK PRIMARY KEY
(
LITH_PATTERN_CODE
);

\qecho 'CREATING PRIMARY KEY R_LR1_PK'
ALTER TABLE R_LITH_ROCKPART ADD CONSTRAINT R_LR1_PK PRIMARY KEY
(
ROCKPART_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LRM_PK'
ALTER TABLE R_LITH_ROCK_MATRIX ADD CONSTRAINT R_LRM_PK PRIMARY KEY
(
ROCK_MATRIX
);

\qecho 'CREATING PRIMARY KEY R_LRP_PK'
ALTER TABLE R_LITH_ROCK_PROFILE ADD CONSTRAINT R_LRP_PK PRIMARY KEY
(
ROCK_PROFILE
);

\qecho 'CREATING PRIMARY KEY R_LRT1_PK'
ALTER TABLE R_LITH_ROCK_TYPE ADD CONSTRAINT R_LRT1_PK PRIMARY KEY
(
ROCK_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LR_PK'
ALTER TABLE R_LITH_ROUNDING ADD CONSTRAINT R_LR_PK PRIMARY KEY
(
ROUNDING
);

\qecho 'CREATING PRIMARY KEY R_LSS_PK'
ALTER TABLE R_LITH_SCALE_SCHEME ADD CONSTRAINT R_LSS_PK PRIMARY KEY
(
SCALE_SCHEME
);

\qecho 'CREATING PRIMARY KEY R_LS_PK'
ALTER TABLE R_LITH_SORTING ADD CONSTRAINT R_LS_PK PRIMARY KEY
(
SORTING
);

\qecho 'CREATING PRIMARY KEY R_LS1_PK'
ALTER TABLE R_LITH_STRUCTURE ADD CONSTRAINT R_LS1_PK PRIMARY KEY
(
STRUCTURE
);

\qecho 'CREATING PRIMARY KEY R_LDT_PK'
ALTER TABLE R_LOCATION_DESC_TYPE ADD CONSTRAINT R_LDT_PK PRIMARY KEY
(
LOCATION_DESC_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LQ_PK'
ALTER TABLE R_LOCATION_QUALIFIER ADD CONSTRAINT R_LQ_PK PRIMARY KEY
(
LOCATION_QUALIFIER
);

\qecho 'CREATING PRIMARY KEY R_LQ1_PK'
ALTER TABLE R_LOCATION_QUALITY ADD CONSTRAINT R_LQ1_PK PRIMARY KEY
(
LOCATION_QUALITY
);

\qecho 'CREATING PRIMARY KEY R_LT1_PK'
ALTER TABLE R_LOCATION_TYPE ADD CONSTRAINT R_LT1_PK PRIMARY KEY
(
LOCATION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LADT_PK'
ALTER TABLE R_LOG_ARRAY_DIMENSION ADD CONSTRAINT R_LADT_PK PRIMARY KEY
(
DIMENSION
);

\qecho 'CREATING PRIMARY KEY R_LCM_PK'
ALTER TABLE R_LOG_CORRECT_METHOD ADD CONSTRAINT R_LCM_PK PRIMARY KEY
(
CORRECTION_METHOD
);

\qecho 'CREATING PRIMARY KEY R_LCCS_PK'
ALTER TABLE R_LOG_CRV_CLASS_SYSTEM ADD CONSTRAINT R_LCCS_PK PRIMARY KEY
(
SYSTEM_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LDT1_PK'
ALTER TABLE R_LOG_DEPTH_TYPE ADD CONSTRAINT R_LDT1_PK PRIMARY KEY
(
DEPTH_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LD3_PK'
ALTER TABLE R_LOG_DIRECTION ADD CONSTRAINT R_LD3_PK PRIMARY KEY
(
LOG_DIRECTION
);

\qecho 'CREATING PRIMARY KEY R_LGVT_PK'
ALTER TABLE R_LOG_GOOD_VALUE_TYPE ADD CONSTRAINT R_LGVT_PK PRIMARY KEY
(
GOOD_VALUE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LIX_PK'
ALTER TABLE R_LOG_INDEX_TYPE ADD CONSTRAINT R_LIX_PK PRIMARY KEY
(
INDEX_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LM_PK'
ALTER TABLE R_LOG_MATRIX ADD CONSTRAINT R_LM_PK PRIMARY KEY
(
LOG_MATRIX_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LPOST_PK'
ALTER TABLE R_LOG_POSITION_TYPE ADD CONSTRAINT R_LPOST_PK PRIMARY KEY
(
POSITION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LTT_PK'
ALTER TABLE R_LOG_TOOL_TYPE ADD CONSTRAINT R_LTT_PK PRIMARY KEY
(
LOG_TOOL_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LMT_PK'
ALTER TABLE R_LOST_MATERIAL_TYPE ADD CONSTRAINT R_LMT_PK PRIMARY KEY
(
LOST_MATERIAL_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LFX_PK'
ALTER TABLE R_LR_FACILITY_XREF ADD CONSTRAINT R_LFX_PK PRIMARY KEY
(
XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LFX1_PK'
ALTER TABLE R_LR_FIELD_XREF ADD CONSTRAINT R_LFX1_PK PRIMARY KEY
(
XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LST2_PK'
ALTER TABLE R_LR_SIZE_TYPE ADD CONSTRAINT R_LST2_PK PRIMARY KEY
(
SIZE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LTR_PK'
ALTER TABLE R_LR_TERMIN_REQMT ADD CONSTRAINT R_LTR_PK PRIMARY KEY
(
TERMINATION_REQMT
);

\qecho 'CREATING PRIMARY KEY R_LTT1_PK'
ALTER TABLE R_LR_TERMIN_TYPE ADD CONSTRAINT R_LTT1_PK PRIMARY KEY
(
TERMINATION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LXT_PK'
ALTER TABLE R_LR_XREF_TYPE ADD CONSTRAINT R_LXT_PK PRIMARY KEY
(
LR_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_LOCR_PK'
ALTER TABLE R_L_OFFR_CANCEL_RSN ADD CONSTRAINT R_LOCR_PK PRIMARY KEY
(
LAND_OFFR_CANCEL_RSN
);

\qecho 'CREATING PRIMARY KEY R_MAT_PK'
ALTER TABLE R_MACERAL_AMOUNT_TYPE ADD CONSTRAINT R_MAT_PK PRIMARY KEY
(
MACERAL_AMOUNT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_MP_PK'
ALTER TABLE R_MAINT_PROCESS ADD CONSTRAINT R_MP_PK PRIMARY KEY
(
MAINTAIN_PROCESS
);

\qecho 'CREATING PRIMARY KEY R_MTT_PK'
ALTER TABLE R_MATURATION_TYPE ADD CONSTRAINT R_MTT_PK PRIMARY KEY
(
MATURATION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_MM_PK'
ALTER TABLE R_MATURITY_METHOD ADD CONSTRAINT R_MM_PK PRIMARY KEY
(
MATURITY_METHOD_TYPE
);

\qecho 'CREATING PRIMARY KEY R_MBCM_PK'
ALTER TABLE R_MBAL_COMPRESS_TYPE ADD CONSTRAINT R_MBCM_PK PRIMARY KEY
(
Z_FACTOR_METHOD
);

\qecho 'CREATING PRIMARY KEY R_MBCT_PK'
ALTER TABLE R_MBAL_CURVE_TYPE ADD CONSTRAINT R_MBCT_PK PRIMARY KEY
(
CURVE_FIT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ML_PK'
ALTER TABLE R_MEASUREMENT_LOC ADD CONSTRAINT R_ML_PK PRIMARY KEY
(
MEASUREMENT_LOCATION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_MT1_PK'
ALTER TABLE R_MEASUREMENT_TYPE ADD CONSTRAINT R_MT1_PK PRIMARY KEY
(
MEASUREMENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_MT_PK'
ALTER TABLE R_MEASURE_TECHNIQUE ADD CONSTRAINT R_MT_PK PRIMARY KEY
(
MEASUREMENT_TECHNIQUE
);

\qecho 'CREATING PRIMARY KEY R_MT2_PK'
ALTER TABLE R_MEDIA_TYPE ADD CONSTRAINT R_MT2_PK PRIMARY KEY
(
MEDIA_TYPE
);

\qecho 'CREATING PRIMARY KEY R_MTHT_PK'
ALTER TABLE R_METHOD_TYPE ADD CONSTRAINT R_MTHT_PK PRIMARY KEY
(
METHOD_TYPE
);

\qecho 'CREATING PRIMARY KEY R_MDC_PK'
ALTER TABLE R_MISC_DATA_CODE ADD CONSTRAINT R_MDC_PK PRIMARY KEY
(
MISC_DATA_TYPE,
MISC_DATA_CODE
);

\qecho 'CREATING PRIMARY KEY R_MDT_PK'
ALTER TABLE R_MISC_DATA_TYPE ADD CONSTRAINT R_MDT_PK PRIMARY KEY
(
MISC_DATA_TYPE
);

\qecho 'CREATING PRIMARY KEY R_MIST_PK'
ALTER TABLE R_MISSING_STRAT_TYPE ADD CONSTRAINT R_MIST_PK PRIMARY KEY
(
MISSING_STRAT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_MBT_PK'
ALTER TABLE R_MOBILITY_TYPE ADD CONSTRAINT R_MBT_PK PRIMARY KEY
(
MOBILITY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_MO_PK'
ALTER TABLE R_MONTH ADD CONSTRAINT R_MO_PK PRIMARY KEY
(
MONTH
);

\qecho 'CREATING PRIMARY KEY R_MCR_PK'
ALTER TABLE R_MUD_COLLECT_REASON ADD CONSTRAINT R_MCR_PK PRIMARY KEY
(
MUD_COLLECT_REASON
);

\qecho 'CREATING PRIMARY KEY R_MLC_PK'
ALTER TABLE R_MUD_LOG_COLOR ADD CONSTRAINT R_MLC_PK PRIMARY KEY
(
MUD_LOG_COLOR
);

\qecho 'CREATING PRIMARY KEY R_MPC_PK'
ALTER TABLE R_MUD_PROPERTY_CODE ADD CONSTRAINT R_MPC_PK PRIMARY KEY
(
MUD_PROPERTY,
MUD_PROPERTY_CODE
);

\qecho 'CREATING PRIMARY KEY R_MPR_PK'
ALTER TABLE R_MUD_PROPERTY_REF ADD CONSTRAINT R_MPR_PK PRIMARY KEY
(
MUD_PROPERTY_REF
);

\qecho 'CREATING PRIMARY KEY R_MPT_PK'
ALTER TABLE R_MUD_PROPERTY_TYPE ADD CONSTRAINT R_MPT_PK PRIMARY KEY
(
MUD_PROPERTY
);

\qecho 'CREATING PRIMARY KEY R_MST_PK'
ALTER TABLE R_MUD_SAMPLE_TYPE ADD CONSTRAINT R_MST_PK PRIMARY KEY
(
MUD_SAMPLE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_M_PK'
ALTER TABLE R_MUNICIPALITY ADD CONSTRAINT R_M_PK PRIMARY KEY
(
MUNICIPALITY
);

\qecho 'CREATING PRIMARY KEY R_NSXT_PK'
ALTER TABLE R_NAME_SET_XREF_TYPE ADD CONSTRAINT R_NSXT_PK PRIMARY KEY
(
XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_NP_PK'
ALTER TABLE R_NODE_POSITION ADD CONSTRAINT R_NP_PK PRIMARY KEY
(
NODE_POSITION
);

\qecho 'CREATING PRIMARY KEY R_N_PK'
ALTER TABLE R_NORTH ADD CONSTRAINT R_N_PK PRIMARY KEY
(
NORTH_TYPE
);

\qecho 'CREATING PRIMARY KEY R_NCT_PK'
ALTER TABLE R_NOTIFICATION_COMP_TYPE ADD CONSTRAINT R_NCT_PK PRIMARY KEY
(
NOTIFICATION_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_NT_PK'
ALTER TABLE R_NOTIFICATION_TYPE ADD CONSTRAINT R_NT_PK PRIMARY KEY
(
NOTIFICATION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ND_PK'
ALTER TABLE R_NS_DIRECTION ADD CONSTRAINT R_ND_PK PRIMARY KEY
(
NS_DIRECTION
);

\qecho 'CREATING PRIMARY KEY R_NSL_PK'
ALTER TABLE R_NS_START_LINE ADD CONSTRAINT R_NSL_PK PRIMARY KEY
(
NS_START_LINE
);

\qecho 'CREATING PRIMARY KEY R_OCM_PK'
ALTER TABLE R_OBLIG_CALC_METHOD ADD CONSTRAINT R_OCM_PK PRIMARY KEY
(
CALCULATION_METHOD
);

\qecho 'CREATING PRIMARY KEY R_OCP_PK'
ALTER TABLE R_OBLIG_CALC_POINT ADD CONSTRAINT R_OCP_PK PRIMARY KEY
(
CALCULATION_POINT
);

\qecho 'CREATING PRIMARY KEY R_OC_PK'
ALTER TABLE R_OBLIG_CATEGORY ADD CONSTRAINT R_OC_PK PRIMARY KEY
(
LAND_OBLIG_CATEGORY
);

\qecho 'CREATING PRIMARY KEY R_OCT2_PK'
ALTER TABLE R_OBLIG_COMPONENT_TYPE ADD CONSTRAINT R_OCT2_PK PRIMARY KEY
(
OBLIGATION_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_OCR_PK'
ALTER TABLE R_OBLIG_COMP_REASON ADD CONSTRAINT R_OCR_PK PRIMARY KEY
(
COMPONENT_REASON
);

\qecho 'CREATING PRIMARY KEY R_ODC_PK'
ALTER TABLE R_OBLIG_DEDUCT_CALC ADD CONSTRAINT R_ODC_PK PRIMARY KEY
(
CALCULATION_METHOD
);

\qecho 'CREATING PRIMARY KEY R_OPT_PK'
ALTER TABLE R_OBLIG_PARTY_TYPE ADD CONSTRAINT R_OPT_PK PRIMARY KEY
(
PARTY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_OPR_PK'
ALTER TABLE R_OBLIG_PAY_RESP ADD CONSTRAINT R_OPR_PK PRIMARY KEY
(
PAYMENT_RESPONSIBILITY
);

\qecho 'CREATING PRIMARY KEY R_ORT_PK'
ALTER TABLE R_OBLIG_REMARK_TYPE ADD CONSTRAINT R_ORT_PK PRIMARY KEY
(
REMARK_TYPE
);

\qecho 'CREATING PRIMARY KEY R_OSP_PK'
ALTER TABLE R_OBLIG_SUSPEND_PAY ADD CONSTRAINT R_OSP_PK PRIMARY KEY
(
SUSPEND_PAYMENT_REASON
);

\qecho 'CREATING PRIMARY KEY R_OT1_PK'
ALTER TABLE R_OBLIG_TRIGGER ADD CONSTRAINT R_OT1_PK PRIMARY KEY
(
TRIGGER_METHOD
);

\qecho 'CREATING PRIMARY KEY R_OT_PK'
ALTER TABLE R_OBLIG_TYPE ADD CONSTRAINT R_OT_PK PRIMARY KEY
(
LAND_OBLIG_TYPE
);

\qecho 'CREATING PRIMARY KEY R_OXT_PK'
ALTER TABLE R_OBLIG_XREF_TYPE ADD CONSTRAINT R_OXT_PK PRIMARY KEY
(
OBLIG_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_OAC_PK'
ALTER TABLE R_OFFSHORE_AREA_CODE ADD CONSTRAINT R_OAC_PK PRIMARY KEY
(
OFFSHORE_AREA_CODE
);

\qecho 'CREATING PRIMARY KEY R_OCT_PK'
ALTER TABLE R_OFFSHORE_COMP_TYPE ADD CONSTRAINT R_OCT_PK PRIMARY KEY
(
OFFSHORE_COMPLETION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_OVC_PK'
ALTER TABLE R_OIL_VALUE_CODE ADD CONSTRAINT R_OVC_PK PRIMARY KEY
(
OIL_VALUE_CODE
);

\qecho 'CREATING PRIMARY KEY R_OT4_PK'
ALTER TABLE R_ONTOGENY_TYPE ADD CONSTRAINT R_OT4_PK PRIMARY KEY
(
ONTOGENY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_OQ_PK'
ALTER TABLE R_OPERAND_QUALIFIER ADD CONSTRAINT R_OQ_PK PRIMARY KEY
(
OPERAND_QUALIFIER
);

\qecho 'CREATING PRIMARY KEY R_O_PK'
ALTER TABLE R_ORIENTATION ADD CONSTRAINT R_O_PK PRIMARY KEY
(
ORIENTATION
);

\qecho 'CREATING PRIMARY KEY R_PAT_PK'
ALTER TABLE R_PALEO_AMOUNT_TYPE ADD CONSTRAINT R_PAT_PK PRIMARY KEY
(
PALEO_AMOUNT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PIT_PK'
ALTER TABLE R_PALEO_IND_TYPE ADD CONSTRAINT R_PIT_PK PRIMARY KEY
(
INDICATOR_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PIT1_PK'
ALTER TABLE R_PALEO_INTERP_TYPE ADD CONSTRAINT R_PIT1_PK PRIMARY KEY
(
INTERP_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PTF_PK'
ALTER TABLE R_PALEO_TYPE_FOSSIL ADD CONSTRAINT R_PTF_PK PRIMARY KEY
(
TYPE_FOSSIL_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PSCT_PK'
ALTER TABLE R_PAL_SUM_COMP_TYPE ADD CONSTRAINT R_PSCT_PK PRIMARY KEY
(
PALEO_SUMMARY_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PSXT_PK'
ALTER TABLE R_PAL_SUM_XREF_TYPE ADD CONSTRAINT R_PSXT_PK PRIMARY KEY
(
PALEO_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PLT_PK'
ALTER TABLE R_PARCEL_LOT_TYPE ADD CONSTRAINT R_PLT_PK PRIMARY KEY
(
PARCEL_LOT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PT_PK'
ALTER TABLE R_PARCEL_TYPE ADD CONSTRAINT R_PT_PK PRIMARY KEY
(
PARCEL_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PT1_PK'
ALTER TABLE R_PAYMENT_TYPE ADD CONSTRAINT R_PT1_PK PRIMARY KEY
(
PAYMENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PT2_PK'
ALTER TABLE R_PAYZONE_TYPE ADD CONSTRAINT R_PT2_PK PRIMARY KEY
(
PAYZONE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PDT_PK'
ALTER TABLE R_PAY_DETAIL_TYPE ADD CONSTRAINT R_PDT_PK PRIMARY KEY
(
PAY_DETAIL_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PM_PK'
ALTER TABLE R_PAY_METHOD ADD CONSTRAINT R_PM_PK PRIMARY KEY
(
PAY_METHOD
);

\qecho 'CREATING PRIMARY KEY R_PRT_PK'
ALTER TABLE R_PAY_RATE_TYPE ADD CONSTRAINT R_PRT_PK PRIMARY KEY
(
PAY_RATE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PAR_PK'
ALTER TABLE R_PDEN_AMEND_REASON ADD CONSTRAINT R_PAR_PK PRIMARY KEY
(
AMEND_REASON
);

\qecho 'CREATING PRIMARY KEY R_PCT2_PK'
ALTER TABLE R_PDEN_COMPONENT_TYPE ADD CONSTRAINT R_PCT2_PK PRIMARY KEY
(
PDEN_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PS_PK'
ALTER TABLE R_PDEN_STATUS ADD CONSTRAINT R_PS_PK PRIMARY KEY
(
PDEN_STATUS_TYPE,
PDEN_STATUS
);

\qecho 'CREATING PRIMARY KEY R_PST2_PK'
ALTER TABLE R_PDEN_STATUS_TYPE ADD CONSTRAINT R_PST2_PK PRIMARY KEY
(
PDEN_STATUS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PXT_PK'
ALTER TABLE R_PDEN_XREF_TYPE ADD CONSTRAINT R_PXT_PK PRIMARY KEY
(
PDEN_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PFM_PK'
ALTER TABLE R_PERFORATION_METHOD ADD CONSTRAINT R_PFM_PK PRIMARY KEY
(
PERFORATION_METHOD
);

\qecho 'CREATING PRIMARY KEY R_PFT_PK'
ALTER TABLE R_PERFORATION_TYPE ADD CONSTRAINT R_PFT_PK PRIMARY KEY
(
PERF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PT3_PK'
ALTER TABLE R_PERIOD_TYPE ADD CONSTRAINT R_PT3_PK PRIMARY KEY
(
PERIOD_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PRMT_PK'
ALTER TABLE R_PERMEABILITY_TYPE ADD CONSTRAINT R_PRMT_PK PRIMARY KEY
(
PERMEABILITY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PIS_PK'
ALTER TABLE R_PHYSICAL_ITEM_STATUS ADD CONSTRAINT R_PIS_PK PRIMARY KEY
(
PHYSICAL_ITEM_STATUS
);

\qecho 'CREATING PRIMARY KEY R_PP_PK'
ALTER TABLE R_PHYSICAL_PROCESS ADD CONSTRAINT R_PP_PK PRIMARY KEY
(
PHYSICAL_PROCESS
);

\qecho 'CREATING PRIMARY KEY R_PIGT_PK'
ALTER TABLE R_PHYS_ITEM_GROUP_TYPE ADD CONSTRAINT R_PIGT_PK PRIMARY KEY
(
GROUP_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PL_PK'
ALTER TABLE R_PICK_LOCATION ADD CONSTRAINT R_PL_PK PRIMARY KEY
(
PICK_LOCATION
);

\qecho 'CREATING PRIMARY KEY R_PQ_PK'
ALTER TABLE R_PICK_QUALIFIER ADD CONSTRAINT R_PQ_PK PRIMARY KEY
(
PICK_QUALIFIER
);

\qecho 'CREATING PRIMARY KEY R_PQR_PK'
ALTER TABLE R_PICK_QUALIF_REASON ADD CONSTRAINT R_PQR_PK PRIMARY KEY
(
PICK_QUALIF_REASON
);

\qecho 'CREATING PRIMARY KEY R_PQ1_PK'
ALTER TABLE R_PICK_QUALITY ADD CONSTRAINT R_PQ1_PK PRIMARY KEY
(
PICK_QUALITY
);

\qecho 'CREATING PRIMARY KEY R_PVT_PK'
ALTER TABLE R_PICK_VERSION_TYPE ADD CONSTRAINT R_PVT_PK PRIMARY KEY
(
PICK_VERSION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PT5_PK'
ALTER TABLE R_PLATFORM_TYPE ADD CONSTRAINT R_PT5_PK PRIMARY KEY
(
PLATFORM_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PS1_PK'
ALTER TABLE R_PLOT_SYMBOL ADD CONSTRAINT R_PS1_PK PRIMARY KEY
(
PLOT_SYMBOL
);

\qecho 'CREATING PRIMARY KEY R_PT6_PK'
ALTER TABLE R_PLUG_TYPE ADD CONSTRAINT R_PT6_PK PRIMARY KEY
(
PLUG_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PCT3_PK'
ALTER TABLE R_POOL_COMPONENT_TYPE ADD CONSTRAINT R_PCT3_PK PRIMARY KEY
(
POOL_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PS2_PK'
ALTER TABLE R_POOL_STATUS ADD CONSTRAINT R_PS2_PK PRIMARY KEY
(
POOL_STATUS
);

\qecho 'CREATING PRIMARY KEY R_PT7_PK'
ALTER TABLE R_POOL_TYPE ADD CONSTRAINT R_PT7_PK PRIMARY KEY
(
POOL_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PORT_PK'
ALTER TABLE R_POROSITY_TYPE ADD CONSTRAINT R_PORT_PK PRIMARY KEY
(
POROSITY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PAR1_PK'
ALTER TABLE R_PPDM_AUDIT_REASON ADD CONSTRAINT R_PAR1_PK PRIMARY KEY
(
AUDIT_REASON
);

\qecho 'CREATING PRIMARY KEY R_PAUT_PK'
ALTER TABLE R_PPDM_AUDIT_TYPE ADD CONSTRAINT R_PAUT_PK PRIMARY KEY
(
AUDIT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PBRL_PK'
ALTER TABLE R_PPDM_BOOLEAN_RULE ADD CONSTRAINT R_PBRL_PK PRIMARY KEY
(
BOOLEAN_RULE
);

\qecho 'CREATING PRIMARY KEY R_PCM_PK'
ALTER TABLE R_PPDM_CREATE_METHOD ADD CONSTRAINT R_PCM_PK PRIMARY KEY
(
CREATE_METHOD
);

\qecho 'CREATING PRIMARY KEY R_PDT1_PK'
ALTER TABLE R_PPDM_DATA_TYPE ADD CONSTRAINT R_PDT1_PK PRIMARY KEY
(
DATA_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PDV_PK'
ALTER TABLE R_PPDM_DEFAULT_VALUE ADD CONSTRAINT R_PDV_PK PRIMARY KEY
(
DEFAULT_VALUE_METHOD
);

\qecho 'CREATING PRIMARY KEY R_PEM_PK'
ALTER TABLE R_PPDM_ENFORCE_METHOD ADD CONSTRAINT R_PEM_PK PRIMARY KEY
(
ENFORCE_METHOD
);

\qecho 'CREATING PRIMARY KEY R_PFR_PK'
ALTER TABLE R_PPDM_FAIL_RESULT ADD CONSTRAINT R_PFR_PK PRIMARY KEY
(
RULE_FAIL_RESULT
);

\qecho 'CREATING PRIMARY KEY R_PPGT_PK'
ALTER TABLE R_PPDM_GROUP_TYPE ADD CONSTRAINT R_PPGT_PK PRIMARY KEY
(
GROUP_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PPGU_PK'
ALTER TABLE R_PPDM_GROUP_USE ADD CONSTRAINT R_PPGU_PK PRIMARY KEY
(
GROUP_USE
);

\qecho 'CREATING PRIMARY KEY R_PGXT_PK'
ALTER TABLE R_PPDM_GROUP_XREF_TYPE ADD CONSTRAINT R_PGXT_PK PRIMARY KEY
(
GROUP_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PIC_PK'
ALTER TABLE R_PPDM_INDEX_CATEGORY ADD CONSTRAINT R_PIC_PK PRIMARY KEY
(
INDEX_CATEGORY
);

\qecho 'CREATING PRIMARY KEY R_PMRT_PK'
ALTER TABLE R_PPDM_MAP_RULE_TYPE ADD CONSTRAINT R_PMRT_PK PRIMARY KEY
(
MAP_RULE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PMT_PK'
ALTER TABLE R_PPDM_MAP_TYPE ADD CONSTRAINT R_PMT_PK PRIMARY KEY
(
MAP_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PMC_PK'
ALTER TABLE R_PPDM_METRIC_CODE ADD CONSTRAINT R_PMC_PK PRIMARY KEY
(
METRIC_TYPE,
METRIC_CODE
);

\qecho 'CREATING PRIMARY KEY R_PMCT_PK'
ALTER TABLE R_PPDM_METRIC_COMP_TYPE ADD CONSTRAINT R_PMCT_PK PRIMARY KEY
(
METRIC_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PMRV_PK'
ALTER TABLE R_PPDM_METRIC_REF_VALUE ADD CONSTRAINT R_PMRV_PK PRIMARY KEY
(
REFERENCE_VALUE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PMT1_PK'
ALTER TABLE R_PPDM_METRIC_TYPE ADD CONSTRAINT R_PMT1_PK PRIMARY KEY
(
METRIC_TYPE
);

\qecho 'CREATING PRIMARY KEY R_POBS_PK'
ALTER TABLE R_PPDM_OBJECT_STATUS ADD CONSTRAINT R_POBS_PK PRIMARY KEY
(
OBJECT_STATUS
);

\qecho 'CREATING PRIMARY KEY R_POBT_PK'
ALTER TABLE R_PPDM_OBJECT_TYPE ADD CONSTRAINT R_POBT_PK PRIMARY KEY
(
OBJECT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_POS_PK'
ALTER TABLE R_PPDM_OPERATING_SYSTEM ADD CONSTRAINT R_POS_PK PRIMARY KEY
(
OPERATING_SYSTEM
);

\qecho 'CREATING PRIMARY KEY R_POR_PK'
ALTER TABLE R_PPDM_OWNER_ROLE ADD CONSTRAINT R_POR_PK PRIMARY KEY
(
OWNER_ROLE
);

\qecho 'CREATING PRIMARY KEY R_PPT_PK'
ALTER TABLE R_PPDM_PROC_TYPE ADD CONSTRAINT R_PPT_PK PRIMARY KEY
(
PROCEDURE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PQCQ_PK'
ALTER TABLE R_PPDM_QC_QUALITY ADD CONSTRAINT R_PQCQ_PK PRIMARY KEY
(
QUALITY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PQCS_PK'
ALTER TABLE R_PPDM_QC_STATUS ADD CONSTRAINT R_PQCS_PK PRIMARY KEY
(
QC_STATUS
);

\qecho 'CREATING PRIMARY KEY R_PQCT_PK'
ALTER TABLE R_PPDM_QC_TYPE ADD CONSTRAINT R_PQCT_PK PRIMARY KEY
(
QC_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PRDB_PK'
ALTER TABLE R_PPDM_RDBMS ADD CONSTRAINT R_PRDB_PK PRIMARY KEY
(
RDBMS_ID
);

\qecho 'CREATING PRIMARY KEY R_PRVT_PK'
ALTER TABLE R_PPDM_REF_VALUE_TYPE ADD CONSTRAINT R_PRVT_PK PRIMARY KEY
(
REFERENCE_VALUE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PRQ_PK'
ALTER TABLE R_PPDM_ROW_QUALITY ADD CONSTRAINT R_PRQ_PK PRIMARY KEY
(
ROW_QUALITY_ID
);

\qecho 'CREATING PRIMARY KEY R_PRC_PK'
ALTER TABLE R_PPDM_RULE_CLASS ADD CONSTRAINT R_PRC_PK PRIMARY KEY
(
RULE_CLASS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PRCT1_PK'
ALTER TABLE R_PPDM_RULE_COMP_TYPE ADD CONSTRAINT R_PRCT1_PK PRIMARY KEY
(
RULE_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PRDT_PK'
ALTER TABLE R_PPDM_RULE_DETAIL_TYPE ADD CONSTRAINT R_PRDT_PK PRIMARY KEY
(
RULE_DETAIL_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PRP_PK'
ALTER TABLE R_PPDM_RULE_PURPOSE ADD CONSTRAINT R_PRP_PK PRIMARY KEY
(
RULE_PURPOSE
);

\qecho 'CREATING PRIMARY KEY R_PRS_PK'
ALTER TABLE R_PPDM_RULE_STATUS ADD CONSTRAINT R_PRS_PK PRIMARY KEY
(
RULE_STATUS
);

\qecho 'CREATING PRIMARY KEY R_PRUC_PK'
ALTER TABLE R_PPDM_RULE_USE_COND ADD CONSTRAINT R_PRUC_PK PRIMARY KEY
(
USE_CONDITION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PRXC_PK'
ALTER TABLE R_PPDM_RULE_XREF_COND ADD CONSTRAINT R_PRXC_PK PRIMARY KEY
(
RULE_XREF_CONDITION
);

\qecho 'CREATING PRIMARY KEY R_PRXT_PK'
ALTER TABLE R_PPDM_RULE_XREF_TYPE ADD CONSTRAINT R_PRXT_PK PRIMARY KEY
(
RULE_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PSET_PK'
ALTER TABLE R_PPDM_SCHEMA_ENTITY ADD CONSTRAINT R_PSET_PK PRIMARY KEY
(
ELEMENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PSGT_PK'
ALTER TABLE R_PPDM_SCHEMA_GROUP ADD CONSTRAINT R_PSGT_PK PRIMARY KEY
(
SCHEMA_GROUP_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PPST_PK'
ALTER TABLE R_PPDM_SYSTEM_TYPE ADD CONSTRAINT R_PPST_PK PRIMARY KEY
(
PPDM_SYSTEM_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PTT_PK'
ALTER TABLE R_PPDM_TABLE_TYPE ADD CONSTRAINT R_PTT_PK PRIMARY KEY
(
TABLE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PUAT_PK'
ALTER TABLE R_PPDM_UOM_ALIAS_TYPE ADD CONSTRAINT R_PUAT_PK PRIMARY KEY
(
UOM_ALIAS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PUU_PK'
ALTER TABLE R_PPDM_UOM_USAGE ADD CONSTRAINT R_PUU_PK PRIMARY KEY
(
UOM_USAGE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PQ2_PK'
ALTER TABLE R_PRESERVE_QUALITY ADD CONSTRAINT R_PQ2_PK PRIMARY KEY
(
PRESERVATION_QUALITY
);

\qecho 'CREATING PRIMARY KEY R_P4_PK'
ALTER TABLE R_PRESERVE_TYPE ADD CONSTRAINT R_P4_PK PRIMARY KEY
(
PRESERVATION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PM1_PK'
ALTER TABLE R_PRODUCTION_METHOD ADD CONSTRAINT R_PM1_PK PRIMARY KEY
(
PRODUCTION_METHOD
);

\qecho 'CREATING PRIMARY KEY R_PRCT_PK'
ALTER TABLE R_PRODUCT_COMPONENT_TYPE ADD CONSTRAINT R_PRCT_PK PRIMARY KEY
(
PRODUCT_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PSC_PK'
ALTER TABLE R_PROD_STRING_COMP_TYPE ADD CONSTRAINT R_PSC_PK PRIMARY KEY
(
PROD_STRING_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PSS_PK'
ALTER TABLE R_PROD_STRING_STATUS ADD CONSTRAINT R_PSS_PK PRIMARY KEY
(
STATUS_TYPE,
STATUS
);

\qecho 'CREATING PRIMARY KEY R_PSST_PK'
ALTER TABLE R_PROD_STRING_STAT_TYPE ADD CONSTRAINT R_PSST_PK PRIMARY KEY
(
STATUS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PST_PK'
ALTER TABLE R_PROD_STRING_TYPE ADD CONSTRAINT R_PST_PK PRIMARY KEY
(
PROD_STRING_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PSFS_PK'
ALTER TABLE R_PROD_STR_FM_STATUS ADD CONSTRAINT R_PSFS_PK PRIMARY KEY
(
STATUS_TYPE,
STATUS
);

\qecho 'CREATING PRIMARY KEY R_PSFST_PK'
ALTER TABLE R_PROD_STR_FM_STAT_TYPE ADD CONSTRAINT R_PSFST_PK PRIMARY KEY
(
STATUS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PT10_PK'
ALTER TABLE R_PROJECTION_TYPE ADD CONSTRAINT R_PT10_PK PRIMARY KEY
(
PROJECTION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PRAT_PK'
ALTER TABLE R_PROJECT_ALIAS_TYPE ADD CONSTRAINT R_PRAT_PK PRIMARY KEY
(
PROJ_ALIAS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PBR_PK'
ALTER TABLE R_PROJECT_BA_ROLE ADD CONSTRAINT R_PBR_PK PRIMARY KEY
(
ROLE
);

\qecho 'CREATING PRIMARY KEY R_PCR_PK'
ALTER TABLE R_PROJECT_COMP_REASON ADD CONSTRAINT R_PCR_PK PRIMARY KEY
(
COMPONENT_REASON
);

\qecho 'CREATING PRIMARY KEY R_PCT_PK'
ALTER TABLE R_PROJECT_COMP_TYPE ADD CONSTRAINT R_PCT_PK PRIMARY KEY
(
COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PCO_PK'
ALTER TABLE R_PROJECT_CONDITION ADD CONSTRAINT R_PCO_PK PRIMARY KEY
(
PROJECT_TYPE,
CONDITION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PER_PK'
ALTER TABLE R_PROJECT_EQUIP_ROLE ADD CONSTRAINT R_PER_PK PRIMARY KEY
(
EQUIP_ROLE
);

\qecho 'CREATING PRIMARY KEY R_PSTA_PK'
ALTER TABLE R_PROJECT_STATUS ADD CONSTRAINT R_PSTA_PK PRIMARY KEY
(
STATUS_TYPE,
STATUS
);

\qecho 'CREATING PRIMARY KEY R_PSTT_PK'
ALTER TABLE R_PROJECT_STATUS_TYPE ADD CONSTRAINT R_PSTT_PK PRIMARY KEY
(
STATUS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PRT1_PK'
ALTER TABLE R_PROJECT_TYPE ADD CONSTRAINT R_PRT1_PK PRIMARY KEY
(
PROJECT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PJST_PK'
ALTER TABLE R_PROJ_STEP_TYPE ADD CONSTRAINT R_PJST_PK PRIMARY KEY
(
STEP_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PJSXT_PK'
ALTER TABLE R_PROJ_STEP_XREF_TYPE ADD CONSTRAINT R_PJSXT_PK PRIMARY KEY
(
PROJECT_STEP_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PT11_PK'
ALTER TABLE R_PROPPANT_TYPE ADD CONSTRAINT R_PT11_PK PRIMARY KEY
(
PROPPANT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_PN_PK'
ALTER TABLE R_PUBLICATION_NAME ADD CONSTRAINT R_PN_PK PRIMARY KEY
(
PUBLICATION
);

\qecho 'CREATING PRIMARY KEY R_QT_PK'
ALTER TABLE R_QUALIFIER_TYPE ADD CONSTRAINT R_QT_PK PRIMARY KEY
(
QUALIFIER_TYPE
);

\qecho 'CREATING PRIMARY KEY R_Q_PK'
ALTER TABLE R_QUALITY ADD CONSTRAINT R_Q_PK PRIMARY KEY
(
QUALITY
);

\qecho 'CREATING PRIMARY KEY R_RC1_PK'
ALTER TABLE R_RATE_CONDITION ADD CONSTRAINT R_RC1_PK PRIMARY KEY
(
RATE_CONDITION
);

\qecho 'CREATING PRIMARY KEY R_RSC_PK'
ALTER TABLE R_RATE_SCHEDULE ADD CONSTRAINT R_RSC_PK PRIMARY KEY
(
RATE_SCHEDULE
);

\qecho 'CREATING PRIMARY KEY R_RC2_PK'
ALTER TABLE R_RATE_SCHEDULE_COMP_TYPE ADD CONSTRAINT R_RC2_PK PRIMARY KEY
(
RATE_SCHEDULE_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RSX_PK'
ALTER TABLE R_RATE_SCHED_XREF ADD CONSTRAINT R_RSX_PK PRIMARY KEY
(
RATE_SCHEDULE_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RTY_PK'
ALTER TABLE R_RATE_TYPE ADD CONSTRAINT R_RTY_PK PRIMARY KEY
(
RATE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RCT_PK'
ALTER TABLE R_RATIO_CURVE_TYPE ADD CONSTRAINT R_RCT_PK PRIMARY KEY
(
RATIO_CURVE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RFT_PK'
ALTER TABLE R_RATIO_FLUID_TYPE ADD CONSTRAINT R_RFT_PK PRIMARY KEY
(
RATIO_FLUID_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RP_PK'
ALTER TABLE R_RECORDER_POSITION ADD CONSTRAINT R_RP_PK PRIMARY KEY
(
RECORDER_POSITION
);

\qecho 'CREATING PRIMARY KEY R_RT1_PK'
ALTER TABLE R_RECORDER_TYPE ADD CONSTRAINT R_RT1_PK PRIMARY KEY
(
RECORDER_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RT2_PK'
ALTER TABLE R_REMARK_TYPE ADD CONSTRAINT R_RT2_PK PRIMARY KEY
(
REMARK_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RUT1_PK'
ALTER TABLE R_REMARK_USE_TYPE ADD CONSTRAINT R_RUT1_PK PRIMARY KEY
(
REMARK_USE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RFTY_PK'
ALTER TABLE R_REPEAT_STRAT_TYPE ADD CONSTRAINT R_RFTY_PK PRIMARY KEY
(
REPEAT_STRAT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RHC_PK'
ALTER TABLE R_REPORT_HIER_COMP ADD CONSTRAINT R_RHC_PK PRIMARY KEY
(
COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RHL_PK'
ALTER TABLE R_REPORT_HIER_LEVEL ADD CONSTRAINT R_RHL_PK PRIMARY KEY
(
LEVEL_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RHT_PK'
ALTER TABLE R_REPORT_HIER_TYPE ADD CONSTRAINT R_RHT_PK PRIMARY KEY
(
HIERARCHY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RHAT_PK'
ALTER TABLE R_REP_HIER_ALIAS_TYPE ADD CONSTRAINT R_RHAT_PK PRIMARY KEY
(
REP_HIER_ALIAS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RCMPT_PK'
ALTER TABLE R_RESENT_COMP_TYPE ADD CONSTRAINT R_RCMPT_PK PRIMARY KEY
(
RESENT_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RCO_PK'
ALTER TABLE R_RESENT_CONFIDENCE ADD CONSTRAINT R_RCO_PK PRIMARY KEY
(
CONFIDENCE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RGT_PK'
ALTER TABLE R_RESENT_GROUP_TYPE ADD CONSTRAINT R_RGT_PK PRIMARY KEY
(
GROUP_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RRC_PK'
ALTER TABLE R_RESENT_REV_CAT ADD CONSTRAINT R_RRC_PK PRIMARY KEY
(
CATEGORY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RUT_PK'
ALTER TABLE R_RESENT_USE_TYPE ADD CONSTRAINT R_RUT_PK PRIMARY KEY
(
USE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RVM_PK'
ALTER TABLE R_RESENT_VOL_METHOD ADD CONSTRAINT R_RVM_PK PRIMARY KEY
(
VOLUME_METHOD
);

\qecho 'CREATING PRIMARY KEY R_RXT_PK'
ALTER TABLE R_RESENT_XREF_TYPE ADD CONSTRAINT R_RXT_PK PRIMARY KEY
(
XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RA_PK'
ALTER TABLE R_REST_ACTIVITY ADD CONSTRAINT R_RA_PK PRIMARY KEY
(
RESTRICTED_ACTIVITY
);

\qecho 'CREATING PRIMARY KEY R_RD_PK'
ALTER TABLE R_REST_DURATION ADD CONSTRAINT R_RD_PK PRIMARY KEY
(
REST_DURATION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RR_PK'
ALTER TABLE R_REST_REMARK ADD CONSTRAINT R_RR_PK PRIMARY KEY
(
RESTRICTION_REMARK_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RT3_PK'
ALTER TABLE R_REST_TYPE ADD CONSTRAINT R_RT3_PK PRIMARY KEY
(
RESTRICTION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RP1_PK'
ALTER TABLE R_RETENTION_PERIOD ADD CONSTRAINT R_RP1_PK PRIMARY KEY
(
RETENTION_PERIOD
);

\qecho 'CREATING PRIMARY KEY R_RM_PK'
ALTER TABLE R_REVISION_METHOD ADD CONSTRAINT R_RM_PK PRIMARY KEY
(
REVISION_METHOD
);

\qecho 'CREATING PRIMARY KEY R_RBOP_PK'
ALTER TABLE R_RIG_BLOWOUT_PREVENTER ADD CONSTRAINT R_RBOP_PK PRIMARY KEY
(
BLOWOUT_PREVENTER_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RIGC_PK'
ALTER TABLE R_RIG_CATEGORY ADD CONSTRAINT R_RIGC_PK PRIMARY KEY
(
RIG_CATEGORY
);

\qecho 'CREATING PRIMARY KEY R_RCL_PK'
ALTER TABLE R_RIG_CLASS ADD CONSTRAINT R_RCL_PK PRIMARY KEY
(
RIG_CLASS
);

\qecho 'CREATING PRIMARY KEY R_RC_PK'
ALTER TABLE R_RIG_CODE ADD CONSTRAINT R_RC_PK PRIMARY KEY
(
RIG_CODE
);

\qecho 'CREATING PRIMARY KEY R_RDST_PK'
ALTER TABLE R_RIG_DESANDER_TYPE ADD CONSTRAINT R_RDST_PK PRIMARY KEY
(
DESANDER_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RDT_PK'
ALTER TABLE R_RIG_DESILTER_TYPE ADD CONSTRAINT R_RDT_PK PRIMARY KEY
(
DESILTER_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RDW_PK'
ALTER TABLE R_RIG_DRAWWORKS ADD CONSTRAINT R_RDW_PK PRIMARY KEY
(
DRAWWORKS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RGT1_PK'
ALTER TABLE R_RIG_GENERATOR_TYPE ADD CONSTRAINT R_RGT1_PK PRIMARY KEY
(
PLANT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_HBT_PK'
ALTER TABLE R_RIG_HOOKBLOCK_TYPE ADD CONSTRAINT R_HBT_PK PRIMARY KEY
(
HOOKBLOCK_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RMT_PK'
ALTER TABLE R_RIG_MAST ADD CONSTRAINT R_RMT_PK PRIMARY KEY
(
MAST_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ROCT_PK'
ALTER TABLE R_RIG_OVERHEAD_CAPACITY ADD CONSTRAINT R_ROCT_PK PRIMARY KEY
(
CAPACITY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ROT_PK'
ALTER TABLE R_RIG_OVERHEAD_TYPE ADD CONSTRAINT R_ROT_PK PRIMARY KEY
(
OVERHEAD_EQUIP_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RPU_PK'
ALTER TABLE R_RIG_PUMP ADD CONSTRAINT R_RPU_PK PRIMARY KEY
(
PUMP_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RPF_PK'
ALTER TABLE R_RIG_PUMP_FUNCTION ADD CONSTRAINT R_RPF_PK PRIMARY KEY
(
PUMP_FUNCTION
);

\qecho 'CREATING PRIMARY KEY R_RSST_PK'
ALTER TABLE R_RIG_SUBSTRUCTURE ADD CONSTRAINT R_RSST_PK PRIMARY KEY
(
SUBSTRUCTURE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RST_PK'
ALTER TABLE R_RIG_SWIVEL_TYPE ADD CONSTRAINT R_RST_PK PRIMARY KEY
(
SWIVEL_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RT4_PK'
ALTER TABLE R_RIG_TYPE ADD CONSTRAINT R_RT4_PK PRIMARY KEY
(
RIG_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RMIICT_PK'
ALTER TABLE R_RMII_CONTACT_TYPE ADD CONSTRAINT R_RMIICT_PK PRIMARY KEY
(
CONTACT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RMIICOT_PK'
ALTER TABLE R_RMII_CONTENT_TYPE ADD CONSTRAINT R_RMIICOT_PK PRIMARY KEY
(
RMII_CONTENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RMIIDC_PK'
ALTER TABLE R_RMII_DEFICIENCY ADD CONSTRAINT R_RMIIDC_PK PRIMARY KEY
(
DEFICIENCY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RMIIDT_PK'
ALTER TABLE R_RMII_DESC_TYPE ADD CONSTRAINT R_RMIIDT_PK PRIMARY KEY
(
DESCRIPTION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RMGT_PK'
ALTER TABLE R_RMII_GROUP_TYPE ADD CONSTRAINT R_RMGT_PK PRIMARY KEY
(
GROUP_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RMC_PK'
ALTER TABLE R_RMII_METADATA_CODE ADD CONSTRAINT R_RMC_PK PRIMARY KEY
(
METADATA_TYPE,
METADATA_CODE
);

\qecho 'CREATING PRIMARY KEY R_RMDT_PK'
ALTER TABLE R_RMII_METADATA_TYPE ADD CONSTRAINT R_RMDT_PK PRIMARY KEY
(
METADATA_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RMIIQC_PK'
ALTER TABLE R_RMII_QUALITY_CODE ADD CONSTRAINT R_RMIIQC_PK PRIMARY KEY
(
INFORMATION_QUALITY_CODE
);

\qecho 'CREATING PRIMARY KEY R_RMIIS_PK'
ALTER TABLE R_RMII_STATUS ADD CONSTRAINT R_RMIIS_PK PRIMARY KEY
(
STATUS_TYPE,
STATUS
);

\qecho 'CREATING PRIMARY KEY R_RMIIST_PK'
ALTER TABLE R_RMII_STATUS_TYPE ADD CONSTRAINT R_RMIIST_PK PRIMARY KEY
(
STATUS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RTX_PK'
ALTER TABLE R_RM_THESAURUS_XREF ADD CONSTRAINT R_RTX_PK PRIMARY KEY
(
THESAURUS_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RCOND_PK'
ALTER TABLE R_ROAD_CONDITION ADD CONSTRAINT R_RCOND_PK PRIMARY KEY
(
ROAD_CONDITION
);

\qecho 'CREATING PRIMARY KEY R_RCT1_PK'
ALTER TABLE R_ROAD_CONTROL_TYPE ADD CONSTRAINT R_RCT1_PK PRIMARY KEY
(
CONTROL_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RDS_PK'
ALTER TABLE R_ROAD_DRIVING_SIDE ADD CONSTRAINT R_RDS_PK PRIMARY KEY
(
DRIVING_SIDE
);

\qecho 'CREATING PRIMARY KEY R_RDTF_PK'
ALTER TABLE R_ROAD_TRAFFIC_FLOW_TYPE ADD CONSTRAINT R_RDTF_PK PRIMARY KEY
(
TRAFFIC_FLOW_TYPE
);

\qecho 'CREATING PRIMARY KEY R_RCS_PK'
ALTER TABLE R_ROCK_CLASS_SCHEME ADD CONSTRAINT R_RCS_PK PRIMARY KEY
(
ROCK_CLASS_SCHEME
);

\qecho 'CREATING PRIMARY KEY R_RAM_PK'
ALTER TABLE R_ROLL_ALONG_METHOD ADD CONSTRAINT R_RAM_PK PRIMARY KEY
(
ROLL_ALONG_METHOD
);

\qecho 'CREATING PRIMARY KEY R_RT5_PK'
ALTER TABLE R_ROYALTY_TYPE ADD CONSTRAINT R_RT5_PK PRIMARY KEY
(
ROYALTY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ST_PK'
ALTER TABLE R_SALINITY_TYPE ADD CONSTRAINT R_ST_PK PRIMARY KEY
(
SALINITY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SCT2_PK'
ALTER TABLE R_SAMPLE_COLLECTION_TYPE ADD CONSTRAINT R_SCT2_PK PRIMARY KEY
(
COLLECTION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SCMD_PK'
ALTER TABLE R_SAMPLE_COLLECT_METHOD ADD CONSTRAINT R_SCMD_PK PRIMARY KEY
(
COLLECT_METHOD
);

\qecho 'CREATING PRIMARY KEY R_SACT_1_PK'
ALTER TABLE R_SAMPLE_COMP_TYPE ADD CONSTRAINT R_SACT_1_PK PRIMARY KEY
(
SAMPLE_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SAPCT_PK'
ALTER TABLE R_SAMPLE_CONTAMINANT ADD CONSTRAINT R_SAPCT_PK PRIMARY KEY
(
SAMPLE_CONTAMINANT
);

\qecho 'CREATING PRIMARY KEY R_SDC_PK'
ALTER TABLE R_SAMPLE_DESC_CODE ADD CONSTRAINT R_SDC_PK PRIMARY KEY
(
DESCRIPTION_TYPE,
DESCRIPTION_CODE
);

\qecho 'CREATING PRIMARY KEY R_SDT_PK'
ALTER TABLE R_SAMPLE_DESC_TYPE ADD CONSTRAINT R_SDT_PK PRIMARY KEY
(
DESCRIPTION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SFT_PK'
ALTER TABLE R_SAMPLE_FRACTION_TYPE ADD CONSTRAINT R_SFT_PK PRIMARY KEY
(
SAMPLE_FRACTION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SL_PK'
ALTER TABLE R_SAMPLE_LOCATION ADD CONSTRAINT R_SL_PK PRIMARY KEY
(
SAMPLE_LOCATION
);

\qecho 'CREATING PRIMARY KEY R_SPH_PK'
ALTER TABLE R_SAMPLE_PHASE ADD CONSTRAINT R_SPH_PK PRIMARY KEY
(
PHASE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SPC_PK'
ALTER TABLE R_SAMPLE_PREP_CLASS ADD CONSTRAINT R_SPC_PK PRIMARY KEY
(
PREPARATION_CLASS
);

\qecho 'CREATING PRIMARY KEY R_SRVT_PK'
ALTER TABLE R_SAMPLE_REF_VALUE_TYPE ADD CONSTRAINT R_SRVT_PK PRIMARY KEY
(
REFERENCE_VALUE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SS_PK'
ALTER TABLE R_SAMPLE_SHAPE ADD CONSTRAINT R_SS_PK PRIMARY KEY
(
SAMPLE_SHAPE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ST1_PK'
ALTER TABLE R_SAMPLE_TYPE ADD CONSTRAINT R_ST1_PK PRIMARY KEY
(
SAMPLE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ST2_PK'
ALTER TABLE R_SCALE_TRANSFORM ADD CONSTRAINT R_ST2_PK PRIMARY KEY
(
SCALE_TRANSFORM
);

\qecho 'CREATING PRIMARY KEY R_SL1_PK'
ALTER TABLE R_SCREEN_LOCATION ADD CONSTRAINT R_SL1_PK PRIMARY KEY
(
SCREEN_LOCATION
);

\qecho 'CREATING PRIMARY KEY R_ST3_PK'
ALTER TABLE R_SECTION_TYPE ADD CONSTRAINT R_ST3_PK PRIMARY KEY
(
SECTION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SP_PK'
ALTER TABLE R_SEISMIC_PATH ADD CONSTRAINT R_SP_PK PRIMARY KEY
(
SEISMIC_PATH
);

\qecho 'CREATING PRIMARY KEY R_S3T_PK'
ALTER TABLE R_SEIS_3D_TYPE ADD CONSTRAINT R_S3T_PK PRIMARY KEY
(
SEISMIC_3D_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SACTC_PK'
ALTER TABLE R_SEIS_ACTIVITY_CLASS ADD CONSTRAINT R_SACTC_PK PRIMARY KEY
(
SEIS_ACTIVITY_CLASS
);

\qecho 'CREATING PRIMARY KEY R_SACT1_PK'
ALTER TABLE R_SEIS_ACTIVITY_TYPE ADD CONSTRAINT R_SACT1_PK PRIMARY KEY
(
SEIS_ACTIVITY_CLASS,
SEIS_ACTIVITY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SAL_PK'
ALTER TABLE R_SEIS_AUTHORIZE_LIMIT ADD CONSTRAINT R_SAL_PK PRIMARY KEY
(
LIMIT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SAR_PK'
ALTER TABLE R_SEIS_AUTHORIZE_REASON ADD CONSTRAINT R_SAR_PK PRIMARY KEY
(
REASON_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SAT_PK'
ALTER TABLE R_SEIS_AUTHORIZE_TYPE ADD CONSTRAINT R_SAT_PK PRIMARY KEY
(
AUTHORIZE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SBM_PK'
ALTER TABLE R_SEIS_BIN_METHOD ADD CONSTRAINT R_SBM_PK PRIMARY KEY
(
BIN_METHOD
);

\qecho 'CREATING PRIMARY KEY R_SBOT_PK'
ALTER TABLE R_SEIS_BIN_OUTLINE_TYPE ADD CONSTRAINT R_SBOT_PK PRIMARY KEY
(
BIN_OUTLINE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SCM_PK'
ALTER TABLE R_SEIS_CABLE_MAKE ADD CONSTRAINT R_SCM_PK PRIMARY KEY
(
CABLE_MAKE
);

\qecho 'CREATING PRIMARY KEY R_SCT_PK'
ALTER TABLE R_SEIS_CHANNEL_TYPE ADD CONSTRAINT R_SCT_PK PRIMARY KEY
(
CHANNEL_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SD_PK'
ALTER TABLE R_SEIS_DIMENSION ADD CONSTRAINT R_SD_PK PRIMARY KEY
(
SEIS_DIMENSION
);

\qecho 'CREATING PRIMARY KEY R_SET_PK'
ALTER TABLE R_SEIS_ENERGY_TYPE ADD CONSTRAINT R_SET_PK PRIMARY KEY
(
SEIS_ENERGY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SFDT2_PK'
ALTER TABLE R_SEIS_FLOW_DESC_TYPE ADD CONSTRAINT R_SFDT2_PK PRIMARY KEY
(
FLOW_DESC_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SGT_PK'
ALTER TABLE R_SEIS_GROUP_TYPE ADD CONSTRAINT R_SGT_PK PRIMARY KEY
(
SEIS_GROUP_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SICT_PK'
ALTER TABLE R_SEIS_INSP_COMPONENT_TYPE ADD CONSTRAINT R_SICT_PK PRIMARY KEY
(
SEIS_INSP_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SLC_PK'
ALTER TABLE R_SEIS_LIC_COND ADD CONSTRAINT R_SLC_PK PRIMARY KEY
(
CONDITION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SLCC_PK'
ALTER TABLE R_SEIS_LIC_COND_CODE ADD CONSTRAINT R_SLCC_PK PRIMARY KEY
(
CONDITION_TYPE,
CONDITION_CODE
);

\qecho 'CREATING PRIMARY KEY R_SLDC_PK'
ALTER TABLE R_SEIS_LIC_DUE_CONDITION ADD CONSTRAINT R_SLDC_PK PRIMARY KEY
(
DUE_CONDITION
);

\qecho 'CREATING PRIMARY KEY R_SLVRT_PK'
ALTER TABLE R_SEIS_LIC_VIOL_RESOL ADD CONSTRAINT R_SLVRT_PK PRIMARY KEY
(
RESOLVE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SLVT_PK'
ALTER TABLE R_SEIS_LIC_VIOL_TYPE ADD CONSTRAINT R_SLVT_PK PRIMARY KEY
(
VIOLATION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SPO_PK'
ALTER TABLE R_SEIS_PARM_ORIGIN ADD CONSTRAINT R_SPO_PK PRIMARY KEY
(
PARAMETER_ORIGIN
);

\qecho 'CREATING PRIMARY KEY R_SPT_PK'
ALTER TABLE R_SEIS_PATCH_TYPE ADD CONSTRAINT R_SPT_PK PRIMARY KEY
(
PATCH_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SPM_PK'
ALTER TABLE R_SEIS_PICK_METHOD ADD CONSTRAINT R_SPM_PK PRIMARY KEY
(
PICK_METHOD
);

\qecho 'CREATING PRIMARY KEY R_SPCT_PK'
ALTER TABLE R_SEIS_PROC_COMP_TYPE ADD CONSTRAINT R_SPCT_PK PRIMARY KEY
(
PROCESSING_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SPP_PK'
ALTER TABLE R_SEIS_PROC_PARM ADD CONSTRAINT R_SPP_PK PRIMARY KEY
(
PARAMETER_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SPST_PK'
ALTER TABLE R_SEIS_PROC_SET_TYPE ADD CONSTRAINT R_SPST_PK PRIMARY KEY
(
PROC_SET_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SPS_PK'
ALTER TABLE R_SEIS_PROC_STATUS ADD CONSTRAINT R_SPS_PK PRIMARY KEY
(
PROCESS_STATUS
);

\qecho 'CREATING PRIMARY KEY R_SSPSN_PK'
ALTER TABLE R_SEIS_PROC_STEP_NAME ADD CONSTRAINT R_SSPSN_PK PRIMARY KEY
(
STEP_NAME
);

\qecho 'CREATING PRIMARY KEY R_SPRST_PK'
ALTER TABLE R_SEIS_PROC_STEP_TYPE ADD CONSTRAINT R_SPRST_PK PRIMARY KEY
(
STEP_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SRFT_PK'
ALTER TABLE R_SEIS_RCRD_FMT_TYPE ADD CONSTRAINT R_SRFT_PK PRIMARY KEY
(
SEIS_RCRD_FMT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SRM_PK'
ALTER TABLE R_SEIS_RCRD_MAKE ADD CONSTRAINT R_SRM_PK PRIMARY KEY
(
SEIS_RCRD_MAKE
);

\qecho 'CREATING PRIMARY KEY R_SRAT_PK'
ALTER TABLE R_SEIS_RCVR_ARRY_TYPE ADD CONSTRAINT R_SRAT_PK PRIMARY KEY
(
SEIS_RCVR_ARRAY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SRT_PK'
ALTER TABLE R_SEIS_RCVR_TYPE ADD CONSTRAINT R_SRT_PK PRIMARY KEY
(
SEIS_RCVR_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SRT1_PK'
ALTER TABLE R_SEIS_RECORD_TYPE ADD CONSTRAINT R_SRT1_PK PRIMARY KEY
(
RECORD_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SRD_PK'
ALTER TABLE R_SEIS_REF_DATUM ADD CONSTRAINT R_SRD_PK PRIMARY KEY
(
REFERENCE_DATUM
);

\qecho 'CREATING PRIMARY KEY R_SRNT_PK'
ALTER TABLE R_SEIS_REF_NUM_TYPE ADD CONSTRAINT R_SRNT_PK PRIMARY KEY
(
REPORTED_REF_NUM_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SST_PK'
ALTER TABLE R_SEIS_SAMPLE_TYPE ADD CONSTRAINT R_SST_PK PRIMARY KEY
(
SAMPLE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SSR_PK'
ALTER TABLE R_SEIS_SEGMENT_REASON ADD CONSTRAINT R_SSR_PK PRIMARY KEY
(
SEIS_SEGMENT_REASON
);

\qecho 'CREATING PRIMARY KEY R_SSCT_PK'
ALTER TABLE R_SEIS_SET_COMPONENT_TYPE ADD CONSTRAINT R_SSCT_PK PRIMARY KEY
(
SEIS_SET_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SST1_PK'
ALTER TABLE R_SEIS_SPECTRUM_TYPE ADD CONSTRAINT R_SST1_PK PRIMARY KEY
(
SEIS_SPECTRUM_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SSAT_PK'
ALTER TABLE R_SEIS_SRC_ARRAY_TYPE ADD CONSTRAINT R_SSAT_PK PRIMARY KEY
(
SEIS_SRC_ARRAY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SSM_PK'
ALTER TABLE R_SEIS_SRC_MAKE ADD CONSTRAINT R_SSM_PK PRIMARY KEY
(
SEIS_SRC_MAKE
);

\qecho 'CREATING PRIMARY KEY R_SST2_PK'
ALTER TABLE R_SEIS_STATION_TYPE ADD CONSTRAINT R_SST2_PK PRIMARY KEY
(
SEIS_STATION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SS2_PK'
ALTER TABLE R_SEIS_STATUS ADD CONSTRAINT R_SS2_PK PRIMARY KEY
(
SEIS_STATUS
);

\qecho 'CREATING PRIMARY KEY R_SST3_PK'
ALTER TABLE R_SEIS_STATUS_TYPE ADD CONSTRAINT R_SST3_PK PRIMARY KEY
(
STATUS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SST5_PK'
ALTER TABLE R_SEIS_SUMMARY_TYPE ADD CONSTRAINT R_SST5_PK PRIMARY KEY
(
SUMMARY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SST4_PK'
ALTER TABLE R_SEIS_SWEEP_TYPE ADD CONSTRAINT R_SST4_PK PRIMARY KEY
(
SEIS_SWEEP_TYPE
);

\qecho 'CREATING PRIMARY KEY R_STCT_PK'
ALTER TABLE R_SEIS_TRANS_COMP_TYPE ADD CONSTRAINT R_STCT_PK PRIMARY KEY
(
SEIS_TRANS_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SM_PK'
ALTER TABLE R_SEND_METHOD ADD CONSTRAINT R_SM_PK PRIMARY KEY
(
SEND_METHOD
);

\qecho 'CREATING PRIMARY KEY R_SQ_PK'
ALTER TABLE R_SERVICE_QUALITY ADD CONSTRAINT R_SQ_PK PRIMARY KEY
(
SERVICE_QUALITY
);

\qecho 'CREATING PRIMARY KEY R_SV_PK'
ALTER TABLE R_SEVERITY ADD CONSTRAINT R_SV_PK PRIMARY KEY
(
SEVERITY
);

\qecho 'CREATING PRIMARY KEY R_SFAT_PK'
ALTER TABLE R_SF_AIRSTRIP_TYPE ADD CONSTRAINT R_SFAT_PK PRIMARY KEY
(
AIRSTRIP_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SFBT_PK'
ALTER TABLE R_SF_BRIDGE_TYPE ADD CONSTRAINT R_SFBT_PK PRIMARY KEY
(
BRIDGE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SFCT_PK'
ALTER TABLE R_SF_COMPONENT_TYPE ADD CONSTRAINT R_SFCT_PK PRIMARY KEY
(
SF_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SFDT1_PK'
ALTER TABLE R_SF_DESC_TYPE ADD CONSTRAINT R_SFDT1_PK PRIMARY KEY
(
DESC_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SFDV_PK'
ALTER TABLE R_SF_DESC_VALUE ADD CONSTRAINT R_SFDV_PK PRIMARY KEY
(
DESC_TYPE,
VALUE_CODE
);

\qecho 'CREATING PRIMARY KEY R_SFDT_PK'
ALTER TABLE R_SF_DOCK_TYPE ADD CONSTRAINT R_SFDT_PK PRIMARY KEY
(
DOCK_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SFET_PK'
ALTER TABLE R_SF_ELECTRIC_TYPE ADD CONSTRAINT R_SFET_PK PRIMARY KEY
(
ELECTRIC_FACILITY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SFLT_PK'
ALTER TABLE R_SF_LANDING_TYPE ADD CONSTRAINT R_SFLT_PK PRIMARY KEY
(
LANDING_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SFMT_PK'
ALTER TABLE R_SF_MAINTAIN_TYPE ADD CONSTRAINT R_SFMT_PK PRIMARY KEY
(
SF_SUBTYPE,
MAINTAIN_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SFPT_PK'
ALTER TABLE R_SF_PAD_TYPE ADD CONSTRAINT R_SFPT_PK PRIMARY KEY
(
PAD_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SFRT_PK'
ALTER TABLE R_SF_ROAD_TYPE ADD CONSTRAINT R_SFRT_PK PRIMARY KEY
(
ROAD_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SFS_PK'
ALTER TABLE R_SF_STATUS ADD CONSTRAINT R_SFS_PK PRIMARY KEY
(
STATUS
);

\qecho 'CREATING PRIMARY KEY R_SFST_PK'
ALTER TABLE R_SF_STATUS_TYPE ADD CONSTRAINT R_SFST_PK PRIMARY KEY
(
STATUS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SFST1_PK'
ALTER TABLE R_SF_SURFACE_TYPE ADD CONSTRAINT R_SFST1_PK PRIMARY KEY
(
SURFACE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SFTT_PK'
ALTER TABLE R_SF_TOWER_TYPE ADD CONSTRAINT R_SFTT_PK PRIMARY KEY
(
TOWER_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SVT_PK'
ALTER TABLE R_SF_VEHICLE_TYPE ADD CONSTRAINT R_SVT_PK PRIMARY KEY
(
VEHICLE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SFVR_PK'
ALTER TABLE R_SF_VESSEL_ROLE ADD CONSTRAINT R_SFVR_PK PRIMARY KEY
(
VESSEL_ROLE
);

\qecho 'CREATING PRIMARY KEY R_SFVT_PK'
ALTER TABLE R_SF_VESSEL_TYPE ADD CONSTRAINT R_SFVT_PK PRIMARY KEY
(
VESSEL_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SFXT_PK'
ALTER TABLE R_SF_XREF_TYPE ADD CONSTRAINT R_SFXT_PK PRIMARY KEY
(
XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_ST4_PK'
ALTER TABLE R_SHOW_TYPE ADD CONSTRAINT R_ST4_PK PRIMARY KEY
(
SHOW_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SPT1_PK'
ALTER TABLE R_SHUTIN_PRESS_TYPE ADD CONSTRAINT R_SPT1_PK PRIMARY KEY
(
SHUTIN_PRESSURE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_S_PK'
ALTER TABLE R_SOURCE ADD CONSTRAINT R_S_PK PRIMARY KEY
(
SOURCE
);

\qecho 'CREATING PRIMARY KEY R_SOR_PK'
ALTER TABLE R_SOURCE_ORIGIN ADD CONSTRAINT R_SOR_PK PRIMARY KEY
(
SOURCE,
ORIGIN_OBS_NO
);

\qecho 'CREATING PRIMARY KEY R_SUT_PK'
ALTER TABLE R_SPACING_UNIT_TYPE ADD CONSTRAINT R_SUT_PK PRIMARY KEY
(
SPACING_UNIT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SPCT2_PK'
ALTER TABLE R_SPATIAL_DESC_COMP_TYPE ADD CONSTRAINT R_SPCT2_PK PRIMARY KEY
(
SP_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SDT1_PK'
ALTER TABLE R_SPATIAL_DESC_TYPE ADD CONSTRAINT R_SDT1_PK PRIMARY KEY
(
SPATIAL_DESC_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SXT_PK'
ALTER TABLE R_SPATIAL_XREF_TYPE ADD CONSTRAINT R_SXT_PK PRIMARY KEY
(
SPATIAL_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SPVT_PK'
ALTER TABLE R_SP_POINT_VERSION_TYPE ADD CONSTRAINT R_SPVT_PK PRIMARY KEY
(
VERSION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SZDX_PK'
ALTER TABLE R_SP_ZONE_DEFIN_XREF ADD CONSTRAINT R_SZDX_PK PRIMARY KEY
(
XREF_REASON
);

\qecho 'CREATING PRIMARY KEY R_SZD_PK'
ALTER TABLE R_SP_ZONE_DERIV ADD CONSTRAINT R_SZD_PK PRIMARY KEY
(
ZONE_DERIVATION_METHOD
);

\qecho 'CREATING PRIMARY KEY R_SZT_PK'
ALTER TABLE R_SP_ZONE_TYPE ADD CONSTRAINT R_SZT_PK PRIMARY KEY
(
ZONE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SG_PK'
ALTER TABLE R_STATUS_GROUP ADD CONSTRAINT R_SG_PK PRIMARY KEY
(
STATUS_GROUP
);

\qecho 'CREATING PRIMARY KEY R_SS3_PK'
ALTER TABLE R_STORE_STATUS ADD CONSTRAINT R_SS3_PK PRIMARY KEY
(
PHYSICAL_STORE_STATUS
);

\qecho 'CREATING PRIMARY KEY R_SAM_PK'
ALTER TABLE R_STRAT_ACQTN_METHOD ADD CONSTRAINT R_SAM_PK PRIMARY KEY
(
ACQTN_METHOD_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SAM1_PK'
ALTER TABLE R_STRAT_AGE_METHOD ADD CONSTRAINT R_SAM1_PK PRIMARY KEY
(
STRAT_AGE_METHOD
);

\qecho 'CREATING PRIMARY KEY R_SAT1_PK'
ALTER TABLE R_STRAT_ALIAS_TYPE ADD CONSTRAINT R_SAT1_PK PRIMARY KEY
(
STRAT_ALIAS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SCT1_PK'
ALTER TABLE R_STRAT_COLUMN_TYPE ADD CONSTRAINT R_SCT1_PK PRIMARY KEY
(
STRAT_COLUMN_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SCXT_PK'
ALTER TABLE R_STRAT_COL_XREF_TYPE ADD CONSTRAINT R_SCXT_PK PRIMARY KEY
(
STRAT_COLUMN_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SCC_PK'
ALTER TABLE R_STRAT_CORR_CRITERIA ADD CONSTRAINT R_SCC_PK PRIMARY KEY
(
STRAT_CORRELATION_CRITERIA
);

\qecho 'CREATING PRIMARY KEY R_SCTY_PK'
ALTER TABLE R_STRAT_CORR_TYPE ADD CONSTRAINT R_SCTY_PK PRIMARY KEY
(
STRAT_CORRELATION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SDT2_PK'
ALTER TABLE R_STRAT_DESC_TYPE ADD CONSTRAINT R_SDT2_PK PRIMARY KEY
(
DESCRIPTION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SED_PK'
ALTER TABLE R_STRAT_EQUIV_DIRECT ADD CONSTRAINT R_SED_PK PRIMARY KEY
(
STRAT_EQUIVALENCE_DIRECTION
);

\qecho 'CREATING PRIMARY KEY R_SET1_PK'
ALTER TABLE R_STRAT_EQUIV_TYPE ADD CONSTRAINT R_SET1_PK PRIMARY KEY
(
STRAT_EQUIVALENCE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SFNL_PK'
ALTER TABLE R_STRAT_FLD_NODE_LOC ADD CONSTRAINT R_SFNL_PK PRIMARY KEY
(
NODE_LOC_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SH_PK'
ALTER TABLE R_STRAT_HIERARCHY ADD CONSTRAINT R_SH_PK PRIMARY KEY
(
STRAT_HIERARCHY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SIM_PK'
ALTER TABLE R_STRAT_INTERP_METHOD ADD CONSTRAINT R_SIM_PK PRIMARY KEY
(
STRAT_INTERPRET_METHOD
);

\qecho 'CREATING PRIMARY KEY R_SNST_PK'
ALTER TABLE R_STRAT_NAME_SET_TYPE ADD CONSTRAINT R_SNST_PK PRIMARY KEY
(
STRAT_NAME_SET_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SOT_PK'
ALTER TABLE R_STRAT_OCCURRENCE_TYPE ADD CONSTRAINT R_SOT_PK PRIMARY KEY
(
OCCURRENCE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SSTAT_PK'
ALTER TABLE R_STRAT_STATUS ADD CONSTRAINT R_SSTAT_PK PRIMARY KEY
(
STRAT_STATUS
);

\qecho 'CREATING PRIMARY KEY R_STR_PK'
ALTER TABLE R_STRAT_TOPO_RELATION ADD CONSTRAINT R_STR_PK PRIMARY KEY
(
TOPO_RELATION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_STYPE_PK'
ALTER TABLE R_STRAT_TYPE ADD CONSTRAINT R_STYPE_PK PRIMARY KEY
(
STRAT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_STUCT_PK'
ALTER TABLE R_STRAT_UNIT_COMP_TYPE ADD CONSTRAINT R_STUCT_PK PRIMARY KEY
(
STRAT_UNIT_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SUD_PK'
ALTER TABLE R_STRAT_UNIT_DESC ADD CONSTRAINT R_SUD_PK PRIMARY KEY
(
STRAT_UNIT_DESC
);

\qecho 'CREATING PRIMARY KEY R_SUQ_PK'
ALTER TABLE R_STRAT_UNIT_QUALIFIER ADD CONSTRAINT R_SUQ_PK PRIMARY KEY
(
QUALIFIER
);

\qecho 'CREATING PRIMARY KEY R_SUNT_PK'
ALTER TABLE R_STRAT_UNIT_TYPE ADD CONSTRAINT R_SUNT_PK PRIMARY KEY
(
STRAT_TYPE,
STRAT_UNIT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SC_PK'
ALTER TABLE R_STREAMER_COMP ADD CONSTRAINT R_SC_PK PRIMARY KEY
(
COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SP1_PK'
ALTER TABLE R_STREAMER_POSITION ADD CONSTRAINT R_SP1_PK PRIMARY KEY
(
STREAMER_POSITION
);

\qecho 'CREATING PRIMARY KEY R_STDYT_PK'
ALTER TABLE R_STUDY_TYPE ADD CONSTRAINT R_STDYT_PK PRIMARY KEY
(
STUDY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SUBCT_PK'
ALTER TABLE R_SUBSTANCE_COMP_TYPE ADD CONSTRAINT R_SUBCT_PK PRIMARY KEY
(
SUBSTANCE_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SUBP_PK'
ALTER TABLE R_SUBSTANCE_PROPERTY ADD CONSTRAINT R_SUBP_PK PRIMARY KEY
(
SUBSTANCE_PROPERTY
);

\qecho 'CREATING PRIMARY KEY R_SUBUR_PK'
ALTER TABLE R_SUBSTANCE_USE_RULE ADD CONSTRAINT R_SUBUR_PK PRIMARY KEY
(
SUBSTANCE_USE_RULE
);

\qecho 'CREATING PRIMARY KEY R_SUBXT_PK'
ALTER TABLE R_SUBSTANCE_XREF_TYPE ADD CONSTRAINT R_SUBXT_PK PRIMARY KEY
(
SUBSTANCE_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SWABR_PK'
ALTER TABLE R_SW_APP_BA_ROLE ADD CONSTRAINT R_SWABR_PK PRIMARY KEY
(
SW_APP_BA_ROLE
);

\qecho 'CREATING PRIMARY KEY R_SWAF_PK'
ALTER TABLE R_SW_APP_FUNCTION ADD CONSTRAINT R_SWAF_PK PRIMARY KEY
(
SW_APP_FUNCTION,
SW_APP_FUNCTION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SWAFT_PK'
ALTER TABLE R_SW_APP_FUNCTION_TYPE ADD CONSTRAINT R_SWAFT_PK PRIMARY KEY
(
SW_APP_FUNCTION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_SWAX_PK'
ALTER TABLE R_SW_APP_XREF_TYPE ADD CONSTRAINT R_SWAX_PK PRIMARY KEY
(
SW_APP_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_TCC_PK'
ALTER TABLE R_TAX_CREDIT_CODE ADD CONSTRAINT R_TCC_PK PRIMARY KEY
(
TAX_CREDIT_CODE
);

\qecho 'CREATING PRIMARY KEY R_TE_PK'
ALTER TABLE R_TEST_EQUIPMENT ADD CONSTRAINT R_TE_PK PRIMARY KEY
(
EQUIP_TYPE
);

\qecho 'CREATING PRIMARY KEY R_TPT_PK'
ALTER TABLE R_TEST_PERIOD_TYPE ADD CONSTRAINT R_TPT_PK PRIMARY KEY
(
TEST_PERIOD_TYPE
);

\qecho 'CREATING PRIMARY KEY R_TRM_PK'
ALTER TABLE R_TEST_RECOV_METHOD ADD CONSTRAINT R_TRM_PK PRIMARY KEY
(
RECOVERY_METHOD
);

\qecho 'CREATING PRIMARY KEY R_TR_PK'
ALTER TABLE R_TEST_RESULT ADD CONSTRAINT R_TR_PK PRIMARY KEY
(
TEST_RESULT
);

\qecho 'CREATING PRIMARY KEY R_TST_PK'
ALTER TABLE R_TEST_SHUTOFF_TYPE ADD CONSTRAINT R_TST_PK PRIMARY KEY
(
TEST_SHUTOFF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_TS_PK'
ALTER TABLE R_TEST_SUBTYPE ADD CONSTRAINT R_TS_PK PRIMARY KEY
(
TEST_TYPE,
TEST_SUBTYPE
);

\qecho 'CREATING PRIMARY KEY R_TZ_PK'
ALTER TABLE R_TIMEZONE ADD CONSTRAINT R_TZ_PK PRIMARY KEY
(
TIMEZONE
);

\qecho 'CREATING PRIMARY KEY R_TOT_PK'
ALTER TABLE R_TITLE_OWN_TYPE ADD CONSTRAINT R_TOT_PK PRIMARY KEY
(
TITLE_OWN_TYPE
);

\qecho 'CREATING PRIMARY KEY R_TOT1_PK'
ALTER TABLE R_TOUR_OCCURRENCE_TYPE ADD CONSTRAINT R_TOT1_PK PRIMARY KEY
(
OCCURRENCE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_THF_PK'
ALTER TABLE R_TRACE_HEADER_FORMAT ADD CONSTRAINT R_THF_PK PRIMARY KEY
(
HEADER_FORMAT
);

\qecho 'CREATING PRIMARY KEY R_THW_PK'
ALTER TABLE R_TRACE_HEADER_WORD ADD CONSTRAINT R_THW_PK PRIMARY KEY
(
HEADER_WORD
);

\qecho 'CREATING PRIMARY KEY R_TCT_PK'
ALTER TABLE R_TRANS_COMP_TYPE ADD CONSTRAINT R_TCT_PK PRIMARY KEY
(
TRANS_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_TS1_PK'
ALTER TABLE R_TRANS_STATUS ADD CONSTRAINT R_TS1_PK PRIMARY KEY
(
TRANSACTION_STATUS
);

\qecho 'CREATING PRIMARY KEY R_TT3_PK'
ALTER TABLE R_TRANS_TYPE ADD CONSTRAINT R_TT3_PK PRIMARY KEY
(
TRANS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_TF_PK'
ALTER TABLE R_TREATMENT_FLUID ADD CONSTRAINT R_TF_PK PRIMARY KEY
(
TREATMENT_FLUID
);

\qecho 'CREATING PRIMARY KEY R_TT1_PK'
ALTER TABLE R_TREATMENT_TYPE ADD CONSTRAINT R_TT1_PK PRIMARY KEY
(
TREATMENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_TG_PK'
ALTER TABLE R_TUBING_GRADE ADD CONSTRAINT R_TG_PK PRIMARY KEY
(
TUBING_GRADE
);

\qecho 'CREATING PRIMARY KEY R_TT2_PK'
ALTER TABLE R_TUBING_TYPE ADD CONSTRAINT R_TT2_PK PRIMARY KEY
(
TUBING_TYPE
);

\qecho 'CREATING PRIMARY KEY R_TM_PK'
ALTER TABLE R_TVD_METHOD ADD CONSTRAINT R_TM_PK PRIMARY KEY
(
TVD_METHOD
);

\qecho 'CREATING PRIMARY KEY R_VQ1_PK'
ALTER TABLE R_VALUE_QUALITY ADD CONSTRAINT R_VQ1_PK PRIMARY KEY
(
VALUE_QUALITY
);

\qecho 'CREATING PRIMARY KEY R_VC_PK'
ALTER TABLE R_VELOCITY_COMPUTE ADD CONSTRAINT R_VC_PK PRIMARY KEY
(
COMPUTE_METHOD
);

\qecho 'CREATING PRIMARY KEY R_VD_PK'
ALTER TABLE R_VELOCITY_DIMENSION ADD CONSTRAINT R_VD_PK PRIMARY KEY
(
VELOCITY_DIMENSION
);

\qecho 'CREATING PRIMARY KEY R_VT_PK'
ALTER TABLE R_VELOCITY_TYPE ADD CONSTRAINT R_VT_PK PRIMARY KEY
(
VELOCITY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_VDT_PK'
ALTER TABLE R_VERTICAL_DATUM_TYPE ADD CONSTRAINT R_VDT_PK PRIMARY KEY
(
VERTICAL_DATUM_TYPE
);

\qecho 'CREATING PRIMARY KEY R_VR_PK'
ALTER TABLE R_VESSEL_REFERENCE ADD CONSTRAINT R_VR_PK PRIMARY KEY
(
REFERENCE_POINT
);

\qecho 'CREATING PRIMARY KEY R_VS_PK'
ALTER TABLE R_VESSEL_SIZE ADD CONSTRAINT R_VS_PK PRIMARY KEY
(
VESSEL_SIZE
);

\qecho 'CREATING PRIMARY KEY R_VF_PK'
ALTER TABLE R_VOLUME_FRACTION ADD CONSTRAINT R_VF_PK PRIMARY KEY
(
VOLUME_FRACTION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_VM_PK'
ALTER TABLE R_VOLUME_METHOD ADD CONSTRAINT R_VM_PK PRIMARY KEY
(
VOLUME_METHOD
);

\qecho 'CREATING PRIMARY KEY R_VT1_PK'
ALTER TABLE R_VSP_TYPE ADD CONSTRAINT R_VT1_PK PRIMARY KEY
(
VSP_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WAR_PK'
ALTER TABLE R_WASTE_ADJUST_REASON ADD CONSTRAINT R_WAR_PK PRIMARY KEY
(
ADJUST_REASON
);

\qecho 'CREATING PRIMARY KEY R_WFT_PK'
ALTER TABLE R_WASTE_FACILITY_TYPE ADD CONSTRAINT R_WFT_PK PRIMARY KEY
(
WASTE_FACILITY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WH_PK'
ALTER TABLE R_WASTE_HANDLING ADD CONSTRAINT R_WH_PK PRIMARY KEY
(
WASTE_HANDLING_METHOD
);

\qecho 'CREATING PRIMARY KEY R_WHZ_PK'
ALTER TABLE R_WASTE_HAZARD_TYPE ADD CONSTRAINT R_WHZ_PK PRIMARY KEY
(
WASTE_HAZARD
);

\qecho 'CREATING PRIMARY KEY R_WM_PK'
ALTER TABLE R_WASTE_MATERIAL ADD CONSTRAINT R_WM_PK PRIMARY KEY
(
WASTE_MATERIAL
);

\qecho 'CREATING PRIMARY KEY R_WO_PK'
ALTER TABLE R_WASTE_ORIGIN ADD CONSTRAINT R_WO_PK PRIMARY KEY
(
WASTE_ORIGIN
);

\qecho 'CREATING PRIMARY KEY R_WBZ_PK'
ALTER TABLE R_WATER_BOTTOM_ZONE ADD CONSTRAINT R_WBZ_PK PRIMARY KEY
(
WATER_BOTTOM_ZONE
);

\qecho 'CREATING PRIMARY KEY R_WATC_PK'
ALTER TABLE R_WATER_CONDITION ADD CONSTRAINT R_WATC_PK PRIMARY KEY
(
WATER_CONDITION
);

\qecho 'CREATING PRIMARY KEY R_WD_PK'
ALTER TABLE R_WATER_DATUM ADD CONSTRAINT R_WD_PK PRIMARY KEY
(
WATER_DATUM
);

\qecho 'CREATING PRIMARY KEY R_APC_2_PK'
ALTER TABLE R_WATER_PROPERTY_CODE ADD CONSTRAINT R_APC_2_PK PRIMARY KEY
(
WATER_PROPERTY,
WATER_PROPERTY_CODE
);

\qecho 'CREATING PRIMARY KEY R_WCOND_PK'
ALTER TABLE R_WEATHER_CONDITION ADD CONSTRAINT R_WCOND_PK PRIMARY KEY
(
WEATHER_CONDITION
);

\qecho 'CREATING PRIMARY KEY R_WACA_PK'
ALTER TABLE R_WELL_ACTIVITY_CAUSE ADD CONSTRAINT R_WACA_PK PRIMARY KEY
(
CAUSE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WACT_PK'
ALTER TABLE R_WELL_ACTIVITY_COMP_TYPE ADD CONSTRAINT R_WACT_PK PRIMARY KEY
(
WELL_ACTIVITY_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WATE_PK'
ALTER TABLE R_WELL_ACT_TYPE_EQUIV ADD CONSTRAINT R_WATE_PK PRIMARY KEY
(
EQUIV_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WAL_PK'
ALTER TABLE R_WELL_ALIAS_LOCATION ADD CONSTRAINT R_WAL_PK PRIMARY KEY
(
LOCATION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WCPT_PK'
ALTER TABLE R_WELL_CIRC_PRESS_TYPE ADD CONSTRAINT R_WCPT_PK PRIMARY KEY
(
CIRC_PRESSURE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WC_PK'
ALTER TABLE R_WELL_CLASS ADD CONSTRAINT R_WC_PK PRIMARY KEY
(
WELL_CLASS
);

\qecho 'CREATING PRIMARY KEY R_WCT_PK'
ALTER TABLE R_WELL_COMPONENT_TYPE ADD CONSTRAINT R_WCT_PK PRIMARY KEY
(
WELL_COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WDT_PK'
ALTER TABLE R_WELL_DATUM_TYPE ADD CONSTRAINT R_WDT_PK PRIMARY KEY
(
WELL_DATUM_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WDT1_PK'
ALTER TABLE R_WELL_DOWNTIME_TYPE ADD CONSTRAINT R_WDT1_PK PRIMARY KEY
(
DOWNTIME_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WDOT_PK'
ALTER TABLE R_WELL_DRILL_OP_TYPE ADD CONSTRAINT R_WDOT_PK PRIMARY KEY
(
DRILL_OP_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WFUT_PK'
ALTER TABLE R_WELL_FACILITY_USE_TYPE ADD CONSTRAINT R_WFUT_PK PRIMARY KEY
(
FACILITY_USE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WLT_PK'
ALTER TABLE R_WELL_LEVEL_TYPE ADD CONSTRAINT R_WLT_PK PRIMARY KEY
(
WELL_LEVEL_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WLC_PK'
ALTER TABLE R_WELL_LIC_COND ADD CONSTRAINT R_WLC_PK PRIMARY KEY
(
CONDITION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WLCC_PK'
ALTER TABLE R_WELL_LIC_COND_CODE ADD CONSTRAINT R_WLCC_PK PRIMARY KEY
(
CONDITION_TYPE,
CONDITION_CODE
);

\qecho 'CREATING PRIMARY KEY R_WLDC_PK'
ALTER TABLE R_WELL_LIC_DUE_CONDITION ADD CONSTRAINT R_WLDC_PK PRIMARY KEY
(
DUE_CONDITION
);

\qecho 'CREATING PRIMARY KEY R_WLVRT_PK'
ALTER TABLE R_WELL_LIC_VIOL_RESOL ADD CONSTRAINT R_WLVRT_PK PRIMARY KEY
(
RESOLVE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WLVT_PK'
ALTER TABLE R_WELL_LIC_VIOL_TYPE ADD CONSTRAINT R_WLVT_PK PRIMARY KEY
(
VIOLATION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WLC1_PK'
ALTER TABLE R_WELL_LOG_CLASS ADD CONSTRAINT R_WLC1_PK PRIMARY KEY
(
WELL_LOG_CLASS_ID
);

\qecho 'CREATING PRIMARY KEY R_WNPM_PK'
ALTER TABLE R_WELL_NODE_PICK_METHOD ADD CONSTRAINT R_WNPM_PK PRIMARY KEY
(
PICK_METHOD
);

\qecho 'CREATING PRIMARY KEY R_WPT_PK'
ALTER TABLE R_WELL_PROFILE_TYPE ADD CONSTRAINT R_WPT_PK PRIMARY KEY
(
WELL_PROFILE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WQT_PK'
ALTER TABLE R_WELL_QUALIFIC_TYPE ADD CONSTRAINT R_WQT_PK PRIMARY KEY
(
WELL_QUALIFIC_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WRVT_PK'
ALTER TABLE R_WELL_REF_VALUE_TYPE ADD CONSTRAINT R_WRVT_PK PRIMARY KEY
(
REFERENCE_VALUE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WR_PK'
ALTER TABLE R_WELL_RELATIONSHIP ADD CONSTRAINT R_WR_PK PRIMARY KEY
(
WELL_RELATIONSHIP
);

\qecho 'CREATING PRIMARY KEY R_WSM_PK'
ALTER TABLE R_WELL_SERVICE_METRIC ADD CONSTRAINT R_WSM_PK PRIMARY KEY
(
SERVICE_METRIC
);

\qecho 'CREATING PRIMARY KEY R_WSMC_PK'
ALTER TABLE R_WELL_SERV_METRIC_CODE ADD CONSTRAINT R_WSMC_PK PRIMARY KEY
(
SERVICE_METRIC,
METRIC_CODE
);

\qecho 'CREATING PRIMARY KEY R_WSETR_PK'
ALTER TABLE R_WELL_SET_ROLE ADD CONSTRAINT R_WSETR_PK PRIMARY KEY
(
WELL_SET_ROLE
);

\qecho 'CREATING PRIMARY KEY R_WSETT_PK'
ALTER TABLE R_WELL_SET_TYPE ADD CONSTRAINT R_WSETT_PK PRIMARY KEY
(
WELL_SET_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WSUT_PK'
ALTER TABLE R_WELL_SF_USE_TYPE ADD CONSTRAINT R_WSUT_PK PRIMARY KEY
(
SF_USE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WS_PK'
ALTER TABLE R_WELL_STATUS ADD CONSTRAINT R_WS_PK PRIMARY KEY
(
STATUS_TYPE,
STATUS
);

\qecho 'CREATING PRIMARY KEY R_WSQ_PK'
ALTER TABLE R_WELL_STATUS_QUAL ADD CONSTRAINT R_WSQ_PK PRIMARY KEY
(
STATUS_TYPE,
STATUS_QUALIFIER
);

\qecho 'CREATING PRIMARY KEY R_WSQV_PK'
ALTER TABLE R_WELL_STATUS_QUAL_VALUE ADD CONSTRAINT R_WSQV_PK PRIMARY KEY
(
STATUS_TYPE,
STATUS,
STATUS_QUALIFIER,
STATUS_QUALIFIER_VALUE
);

\qecho 'CREATING PRIMARY KEY R_WSPS_PK'
ALTER TABLE R_WELL_STATUS_SYMBOL ADD CONSTRAINT R_WSPS_PK PRIMARY KEY
(
PLOT_SYMBOL,
PLOT_SYMBOL_OBS_NO
);

\qecho 'CREATING PRIMARY KEY R_WST_PK'
ALTER TABLE R_WELL_STATUS_TYPE ADD CONSTRAINT R_WST_PK PRIMARY KEY
(
STATUS_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WSX_PK'
ALTER TABLE R_WELL_STATUS_XREF ADD CONSTRAINT R_WSX_PK PRIMARY KEY
(
STATUS_XREF_ID,
STATUS_XREF_OBS_NO
);

\qecho 'CREATING PRIMARY KEY R_WTT_PK'
ALTER TABLE R_WELL_TEST_TYPE ADD CONSTRAINT R_WTT_PK PRIMARY KEY
(
WELL_TEST_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WXT_PK'
ALTER TABLE R_WELL_XREF_TYPE ADD CONSTRAINT R_WXT_PK PRIMARY KEY
(
XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WZIV_PK'
ALTER TABLE R_WELL_ZONE_INT_VALUE ADD CONSTRAINT R_WZIV_PK PRIMARY KEY
(
VALUE_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WWIND_PK'
ALTER TABLE R_WIND_STRENGTH ADD CONSTRAINT R_WWIND_PK PRIMARY KEY
(
WIND_STRENGTH
);

\qecho 'CREATING PRIMARY KEY R_WBT_PK'
ALTER TABLE R_WORK_BID_TYPE ADD CONSTRAINT R_WBT_PK PRIMARY KEY
(
WORK_BID_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WOBR_PK'
ALTER TABLE R_WO_BA_ROLE ADD CONSTRAINT R_WOBR_PK PRIMARY KEY
(
BA_ROLE
);

\qecho 'CREATING PRIMARY KEY R_WOCT_PK'
ALTER TABLE R_WO_COMPONENT_TYPE ADD CONSTRAINT R_WOCT_PK PRIMARY KEY
(
COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WOC_PK'
ALTER TABLE R_WO_CONDITION ADD CONSTRAINT R_WOC_PK PRIMARY KEY
(
WORK_ORDER_TYPE,
CONDITION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WODT_PK'
ALTER TABLE R_WO_DELIVERY_TYPE ADD CONSTRAINT R_WODT_PK PRIMARY KEY
(
DELIVERY_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WOIT_PK'
ALTER TABLE R_WO_INSTRUCTION ADD CONSTRAINT R_WOIT_PK PRIMARY KEY
(
INSTRUCTION_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WOT_PK'
ALTER TABLE R_WO_TYPE ADD CONSTRAINT R_WOT_PK PRIMARY KEY
(
WORK_ORDER_TYPE
);

\qecho 'CREATING PRIMARY KEY R_WOX_PK'
ALTER TABLE R_WO_XREF_TYPE ADD CONSTRAINT R_WOX_PK PRIMARY KEY
(
WO_XREF_TYPE
);

\qecho 'CREATING PRIMARY KEY SM_PK'
ALTER TABLE SAMPLE ADD CONSTRAINT SM_PK PRIMARY KEY
(
SAMPLE_ID
);

\qecho 'CREATING PRIMARY KEY SMA_PK'
ALTER TABLE SAMPLE_ALIAS ADD CONSTRAINT SMA_PK PRIMARY KEY
(
SAMPLE_ID,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY SMCPT_PK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_PK PRIMARY KEY
(
SAMPLE_ID,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY SMDO_PK'
ALTER TABLE SAMPLE_DESC_OTHER ADD CONSTRAINT SMDO_PK PRIMARY KEY
(
SAMPLE_ID,
DESCRIPTION_ID
);

\qecho 'CREATING PRIMARY KEY SMLD_PK'
ALTER TABLE SAMPLE_LITH_DESC ADD CONSTRAINT SMLD_PK PRIMARY KEY
(
SAMPLE_ID,
DESCRIPTION_ID
);

\qecho 'CREATING PRIMARY KEY SMC_PK'
ALTER TABLE SAMPLE_ORIGIN ADD CONSTRAINT SMC_PK PRIMARY KEY
(
SAMPLE_ID,
COLLECTION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY SS3_PK'
ALTER TABLE SEIS_3D ADD CONSTRAINT SS3_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_3D_ID
);

\qecho 'CREATING PRIMARY KEY SSAD_PK'
ALTER TABLE SEIS_ACQTN_DESIGN ADD CONSTRAINT SSAD_PK PRIMARY KEY
(
ACQTN_DESIGN_ID
);

\qecho 'CREATING PRIMARY KEY SSASP_PK'
ALTER TABLE SEIS_ACQTN_SPECTRUM ADD CONSTRAINT SSASP_PK PRIMARY KEY
(
ACQTN_DESIGN_ID,
SEIS_SPECTRUM_TYPE
);

\qecho 'CREATING PRIMARY KEY SAS_PK'
ALTER TABLE SEIS_ACQTN_SURVEY ADD CONSTRAINT SAS_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_ACQTN_SURVEY_ID
);

\qecho 'CREATING PRIMARY KEY SSACT_PK'
ALTER TABLE SEIS_ACTIVITY ADD CONSTRAINT SSACT_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
ACTIVITY_OBS_NO
);

\qecho 'CREATING PRIMARY KEY SSAL_PK'
ALTER TABLE SEIS_ALIAS ADD CONSTRAINT SSAL_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY SSBS_PK'
ALTER TABLE SEIS_BA_SERVICE ADD CONSTRAINT SSBS_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
PROVIDED_BY,
SERVICE_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY SSBG_PK'
ALTER TABLE SEIS_BIN_GRID ADD CONSTRAINT SSBG_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
BIN_GRID_ID,
SOURCE
);

\qecho 'CREATING PRIMARY KEY SSBO_PK'
ALTER TABLE SEIS_BIN_ORIGIN ADD CONSTRAINT SSBO_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
BIN_GRID_ID,
BIN_GRID_SOURCE,
BIN_ORIGIN_ID
);

\qecho 'CREATING PRIMARY KEY SSBOL_PK'
ALTER TABLE SEIS_BIN_OUTLINE ADD CONSTRAINT SSBOL_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
BIN_GRID_ID,
BIN_GRID_SOURCE,
OUTLINE_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY SSBP_PK'
ALTER TABLE SEIS_BIN_POINT ADD CONSTRAINT SSBP_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
BIN_GRID_ID,
BIN_GRID_SOURCE,
BIN_POINT_ID
);

\qecho 'CREATING PRIMARY KEY SSBPT_PK'
ALTER TABLE SEIS_BIN_POINT_TRACE ADD CONSTRAINT SSBPT_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
BIN_GRID_ID,
BIN_GRID_SOURCE,
BIN_POINT_ID,
TRACE_ID
);

\qecho 'CREATING PRIMARY KEY SSBPV_PK'
ALTER TABLE SEIS_BIN_POINT_VERSION ADD CONSTRAINT SSBPV_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
BIN_GRID_ID,
BIN_GRID_SOURCE,
BIN_POINT_ID,
BIN_POINT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY SSCH_PK'
ALTER TABLE SEIS_CHANNEL ADD CONSTRAINT SSCH_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
RECORD_ID,
CHANNEL_ID
);

\qecho 'CREATING PRIMARY KEY SSGC_PK'
ALTER TABLE SEIS_GROUP_COMP ADD CONSTRAINT SSGC_PK PRIMARY KEY
(
SEIS_GROUP_SET_SUBTYPE,
SEIS_GROUP_ID,
INPUT_SEIS_SET_SUBTYPE,
INPUT_SEIS_SET_ID,
COMPONENT_ID
);

\qecho 'CREATING PRIMARY KEY SSI_PK'
ALTER TABLE SEIS_INSPECTION ADD CONSTRAINT SSI_PK PRIMARY KEY
(
INSPECTION_ID
);

\qecho 'CREATING PRIMARY KEY SSIC_PK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_PK PRIMARY KEY
(
INSPECTION_ID,
INSPECTION_COMPONENT_ID
);

\qecho 'CREATING PRIMARY KEY SSICOM_PK'
ALTER TABLE SEIS_INTERP_COMP ADD CONSTRAINT SSICOM_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
INTERP_SET_ID,
COMPONENT_ID
);

\qecho 'CREATING PRIMARY KEY SSIL_PK'
ALTER TABLE SEIS_INTERP_LOAD ADD CONSTRAINT SSIL_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
INTERP_SET_ID,
PROCESS_STEP_ID
);

\qecho 'CREATING PRIMARY KEY SSILP_PK'
ALTER TABLE SEIS_INTERP_LOAD_PARM ADD CONSTRAINT SSILP_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
INTERP_SET_ID,
PROCESS_STEP_ID,
PARAMETER_ID
);

\qecho 'CREATING PRIMARY KEY SSIS_PK'
ALTER TABLE SEIS_INTERP_SET ADD CONSTRAINT SSIS_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
INTERP_SET_ID
);

\qecho 'CREATING PRIMARY KEY SSISU_PK'
ALTER TABLE SEIS_INTERP_SURFACE ADD CONSTRAINT SSISU_PK PRIMARY KEY
(
SURFACE_ID
);

\qecho 'CREATING PRIMARY KEY SLIC_PK'
ALTER TABLE SEIS_LICENSE ADD CONSTRAINT SLIC_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID
);

\qecho 'CREATING PRIMARY KEY SLICAL_PK'
ALTER TABLE SEIS_LICENSE_ALIAS ADD CONSTRAINT SLICAL_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID,
SOURCE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY SLICA_PK'
ALTER TABLE SEIS_LICENSE_AREA ADD CONSTRAINT SLICA_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID,
AREA_ID,
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY SLICC_PK'
ALTER TABLE SEIS_LICENSE_COND ADD CONSTRAINT SLICC_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID,
CONDITION_ID
);

\qecho 'CREATING PRIMARY KEY SLICR_PK'
ALTER TABLE SEIS_LICENSE_REMARK ADD CONSTRAINT SLICR_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID,
REMARK_ID,
REMARK_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY SLICS_PK'
ALTER TABLE SEIS_LICENSE_STATUS ADD CONSTRAINT SLICS_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID,
STATUS_ID
);

\qecho 'CREATING PRIMARY KEY SLICT_PK'
ALTER TABLE SEIS_LICENSE_TYPE ADD CONSTRAINT SLICT_PK PRIMARY KEY
(
GRANTED_BY_BA_ID,
SEIS_LICENSE_TYPE_ID
);

\qecho 'CREATING PRIMARY KEY SLICV_PK'
ALTER TABLE SEIS_LICENSE_VIOLATION ADD CONSTRAINT SLICV_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID,
VIOLATION_ID
);

\qecho 'CREATING PRIMARY KEY SSL_PK'
ALTER TABLE SEIS_LINE ADD CONSTRAINT SSL_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_LINE_ID
);

\qecho 'CREATING PRIMARY KEY SSPA_PK'
ALTER TABLE SEIS_PATCH ADD CONSTRAINT SSPA_PK PRIMARY KEY
(
PATCH_ID
);

\qecho 'CREATING PRIMARY KEY SSPD_PK'
ALTER TABLE SEIS_PATCH_DESC ADD CONSTRAINT SSPD_PK PRIMARY KEY
(
PATCH_ID,
PATCH_DESC_ID
);

\qecho 'CREATING PRIMARY KEY SSPK_PK'
ALTER TABLE SEIS_PICK ADD CONSTRAINT SSPK_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
INTERP_SET_ID,
SURFACE_ID,
SEIS_PICK_ID
);

\qecho 'CREATING PRIMARY KEY SSPT_PK'
ALTER TABLE SEIS_POINT ADD CONSTRAINT SSPT_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_POINT_ID
);

\qecho 'CREATING PRIMARY KEY SSPF_PK'
ALTER TABLE SEIS_POINT_FLOW ADD CONSTRAINT SSPF_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_POINT_ID,
FLOW_ID
);

\qecho 'CREATING PRIMARY KEY SSPFD_PK'
ALTER TABLE SEIS_POINT_FLOW_DESC ADD CONSTRAINT SSPFD_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_POINT_ID,
FLOW_ID
);

\qecho 'CREATING PRIMARY KEY SSPSU_PK'
ALTER TABLE SEIS_POINT_SUMMARY ADD CONSTRAINT SSPSU_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_SUMMARY_OBS_NO
);

\qecho 'CREATING PRIMARY KEY SSPV_PK'
ALTER TABLE SEIS_POINT_VERSION ADD CONSTRAINT SSPV_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_LINE_ID,
SEIS_POINT_ID,
SEIS_POINT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY SSPC_PK'
ALTER TABLE SEIS_PROC_COMPONENT ADD CONSTRAINT SSPC_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_PROC_SET_ID,
COMPONENT_ID
);

\qecho 'CREATING PRIMARY KEY SSPP_PK'
ALTER TABLE SEIS_PROC_PARM ADD CONSTRAINT SSPP_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_PROC_SET_ID,
PROCESS_STEP_ID,
PARAMETER_ID
);

\qecho 'CREATING PRIMARY KEY SSPPL_PK'
ALTER TABLE SEIS_PROC_PLAN ADD CONSTRAINT SSPPL_PK PRIMARY KEY
(
SEIS_PROC_PLAN_ID
);

\qecho 'CREATING PRIMARY KEY SSPPP_PK'
ALTER TABLE SEIS_PROC_PLAN_PARM ADD CONSTRAINT SSPPP_PK PRIMARY KEY
(
SEIS_PROC_PLAN_ID,
PROC_PLAN_STEP_ID,
PARAMETER_ID
);

\qecho 'CREATING PRIMARY KEY SSPPS_PK'
ALTER TABLE SEIS_PROC_PLAN_STEP ADD CONSTRAINT SSPPS_PK PRIMARY KEY
(
SEIS_PROC_PLAN_ID,
PROC_PLAN_STEP_ID
);

\qecho 'CREATING PRIMARY KEY SSPRS_PK'
ALTER TABLE SEIS_PROC_SET ADD CONSTRAINT SSPRS_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_PROC_SET_ID
);

\qecho 'CREATING PRIMARY KEY SSPS_PK'
ALTER TABLE SEIS_PROC_STEP ADD CONSTRAINT SSPS_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_PROC_SET_ID,
PROCESS_STEP_ID
);

\qecho 'CREATING PRIMARY KEY SSPSC_PK'
ALTER TABLE SEIS_PROC_STEP_COMPONENT ADD CONSTRAINT SSPSC_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_PROC_SET_ID,
COMPONENT_ID,
PROCESS_STEP_ID
);

\qecho 'CREATING PRIMARY KEY SSR_PK'
ALTER TABLE SEIS_RECORD ADD CONSTRAINT SSR_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
RECORD_ID
);

\qecho 'CREATING PRIMARY KEY SSRM_PK'
ALTER TABLE SEIS_RECVR_MAKE ADD CONSTRAINT SSRM_PK PRIMARY KEY
(
SEIS_RCVR_MAKE
);

\qecho 'CREATING PRIMARY KEY SSRS_PK'
ALTER TABLE SEIS_RECVR_SETUP ADD CONSTRAINT SSRS_PK PRIMARY KEY
(
ACQTN_DESIGN_ID,
RCVR_SETUP_ID
);

\qecho 'CREATING PRIMARY KEY SSEG_PK'
ALTER TABLE SEIS_SEGMENT ADD CONSTRAINT SSEG_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEGMENT_ID
);

\qecho 'CREATING PRIMARY KEY SS_PK'
ALTER TABLE SEIS_SET ADD CONSTRAINT SS_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);

\qecho 'CREATING PRIMARY KEY SSA_PK'
ALTER TABLE SEIS_SET_AREA ADD CONSTRAINT SSA_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
AREA_ID,
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY SSAU_PK'
ALTER TABLE SEIS_SET_AUTHORIZE ADD CONSTRAINT SSAU_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
AUTHORIZE_ID
);

\qecho 'CREATING PRIMARY KEY SSCMP_PK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY SSJ_PK'
ALTER TABLE SEIS_SET_JURISDICTION ADD CONSTRAINT SSJ_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
JURISDICTION
);

\qecho 'CREATING PRIMARY KEY SSP_PK'
ALTER TABLE SEIS_SET_PLAN ADD CONSTRAINT SSP_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);

\qecho 'CREATING PRIMARY KEY SSST_PK'
ALTER TABLE SEIS_SET_STATUS ADD CONSTRAINT SSST_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
STATUS_ID
);

\qecho 'CREATING PRIMARY KEY SSS_PK'
ALTER TABLE SEIS_SP_SURVEY ADD CONSTRAINT SSS_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_POINT_ID,
SEIS_SP_SURVEY_OBS_NO
);

\qecho 'CREATING PRIMARY KEY SST_PK'
ALTER TABLE SEIS_STREAMER ADD CONSTRAINT SST_PK PRIMARY KEY
(
STREAMER_ID
);

\qecho 'CREATING PRIMARY KEY SSB_PK'
ALTER TABLE SEIS_STREAMER_BUILD ADD CONSTRAINT SSB_PK PRIMARY KEY
(
STREAMER_ID,
STREAMER_COMPONENT_ID
);

\qecho 'CREATING PRIMARY KEY SSC_PK'
ALTER TABLE SEIS_STREAMER_COMP ADD CONSTRAINT SSC_PK PRIMARY KEY
(
STREAMER_ID,
COMPONENT_TYPE
);

\qecho 'CREATING PRIMARY KEY SSTR_PK'
ALTER TABLE SEIS_TRANSACTION ADD CONSTRAINT SSTR_PK PRIMARY KEY
(
SEIS_TRANSACTION_ID,
TRANSACTION_TYPE
);

\qecho 'CREATING PRIMARY KEY SSTC_PK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_PK PRIMARY KEY
(
SEIS_TRANSACTION_ID,
TRANSACTION_TYPE,
TRANSACTION_COMPONENT_ID
);

\qecho 'CREATING PRIMARY KEY SSVL_PK'
ALTER TABLE SEIS_VELOCITY ADD CONSTRAINT SSVL_PK PRIMARY KEY
(
VELOCITY_VOLUME_ID,
VOLUME_POINT
);

\qecho 'CREATING PRIMARY KEY SSVI_PK'
ALTER TABLE SEIS_VELOCITY_INTERVAL ADD CONSTRAINT SSVI_PK PRIMARY KEY
(
INTERVAL_ID
);

\qecho 'CREATING PRIMARY KEY SSVV_PK'
ALTER TABLE SEIS_VELOCITY_VOLUME ADD CONSTRAINT SSVV_PK PRIMARY KEY
(
VELOCITY_VOLUME_ID
);

\qecho 'CREATING PRIMARY KEY SSV_PK'
ALTER TABLE SEIS_VESSEL ADD CONSTRAINT SSV_PK PRIMARY KEY
(
SF_SUBTYPE,
VESSEL_ID,
VESSEL_CONFIG_OBS_NO
);

\qecho 'CREATING PRIMARY KEY SSW_PK'
ALTER TABLE SEIS_WELL ADD CONSTRAINT SSW_PK PRIMARY KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);

\qecho 'CREATING PRIMARY KEY SFAC_PK'
ALTER TABLE SF_AIRCRAFT ADD CONSTRAINT SFAC_PK PRIMARY KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);

\qecho 'CREATING PRIMARY KEY SFAS_PK'
ALTER TABLE SF_AIRSTRIP ADD CONSTRAINT SFAS_PK PRIMARY KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);

\qecho 'CREATING PRIMARY KEY SFAL_PK'
ALTER TABLE SF_ALIAS ADD CONSTRAINT SFAL_PK PRIMARY KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY SFA_PK'
ALTER TABLE SF_AREA ADD CONSTRAINT SFA_PK PRIMARY KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID,
AREA_ID,
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY SFBC_PK'
ALTER TABLE SF_BA_CREW ADD CONSTRAINT SFBC_PK PRIMARY KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID,
CREW_COMPANY_BA_ID,
CREW_ID,
SF_BA_CREW_OBS_NO
);

\qecho 'CREATING PRIMARY KEY SFBS_PK'
ALTER TABLE SF_BA_SERVICE ADD CONSTRAINT SFBS_PK PRIMARY KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID,
BUSINESS_ASSOCIATE_ID,
SERVICE_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY SFB_PK'
ALTER TABLE SF_BRIDGE ADD CONSTRAINT SFB_PK PRIMARY KEY
(
SF_SUBTYPE,
BRIDGE_ID
);

\qecho 'CREATING PRIMARY KEY SFCOM_PK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_PK PRIMARY KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID,
USE_ID,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY SFDE_PK'
ALTER TABLE SF_DESCRIPTION ADD CONSTRAINT SFDE_PK PRIMARY KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID,
DESCRIPTION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY SFDDI_PK'
ALTER TABLE SF_DISPOSAL ADD CONSTRAINT SFDDI_PK PRIMARY KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);

\qecho 'CREATING PRIMARY KEY SFD_PK'
ALTER TABLE SF_DOCK ADD CONSTRAINT SFD_PK PRIMARY KEY
(
SF_SUBTYPE,
DOCK_ID
);

\qecho 'CREATING PRIMARY KEY SFE_PK'
ALTER TABLE SF_ELECTRIC ADD CONSTRAINT SFE_PK PRIMARY KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);

\qecho 'CREATING PRIMARY KEY SFEQ_PK'
ALTER TABLE SF_EQUIPMENT ADD CONSTRAINT SFEQ_PK PRIMARY KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID,
COMPONENT_ID
);

\qecho 'CREATING PRIMARY KEY SFH_PK'
ALTER TABLE SF_HABITAT ADD CONSTRAINT SFH_PK PRIMARY KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);

\qecho 'CREATING PRIMARY KEY SFL_PK'
ALTER TABLE SF_LANDING ADD CONSTRAINT SFL_PK PRIMARY KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);

\qecho 'CREATING PRIMARY KEY SFM_PK'
ALTER TABLE SF_MAINTAIN ADD CONSTRAINT SFM_PK PRIMARY KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID,
MAINTAIN_ID
);

\qecho 'CREATING PRIMARY KEY SFMO_PK'
ALTER TABLE SF_MONUMENT ADD CONSTRAINT SFMO_PK PRIMARY KEY
(
SF_SUBTYPE,
MONUMENT_ID
);

\qecho 'CREATING PRIMARY KEY SFO_PK'
ALTER TABLE SF_OTHER ADD CONSTRAINT SFO_PK PRIMARY KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);

\qecho 'CREATING PRIMARY KEY SFP_PK'
ALTER TABLE SF_PAD ADD CONSTRAINT SFP_PK PRIMARY KEY
(
SF_SUBTYPE,
PAD_ID
);

\qecho 'CREATING PRIMARY KEY SFPL_PK'
ALTER TABLE SF_PLATFORM ADD CONSTRAINT SFPL_PK PRIMARY KEY
(
SF_SUBTYPE,
PLATFORM_ID
);

\qecho 'CREATING PRIMARY KEY SFPT_PK'
ALTER TABLE SF_PORT ADD CONSTRAINT SFPT_PK PRIMARY KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);

\qecho 'CREATING PRIMARY KEY SFRR_PK'
ALTER TABLE SF_RAILWAY ADD CONSTRAINT SFRR_PK PRIMARY KEY
(
SF_SUBTYPE,
RAILWAY_ID
);

\qecho 'CREATING PRIMARY KEY SFREST_PK'
ALTER TABLE SF_RESTRICTION ADD CONSTRAINT SFREST_PK PRIMARY KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID,
RESTRICTION_ID,
RESTRICTION_VERSION
);

\qecho 'CREATING PRIMARY KEY SFRESTR_PK'
ALTER TABLE SF_REST_REMARK ADD CONSTRAINT SFRESTR_PK PRIMARY KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID,
RESTRICTION_ID,
RESTRICTION_VERSION,
RESTRICTION_REMARK_ID
);

\qecho 'CREATING PRIMARY KEY SFRIG_PK'
ALTER TABLE SF_RIG ADD CONSTRAINT SFRIG_PK PRIMARY KEY
(
SF_SUBTYPE,
RIG_ID
);

\qecho 'CREATING PRIMARY KEY SFRB_PK'
ALTER TABLE SF_RIG_BOP ADD CONSTRAINT SFRB_PK PRIMARY KEY
(
SF_SUBTYPE,
RIG_ID,
BOP_ID
);

\qecho 'CREATING PRIMARY KEY SFRG_PK'
ALTER TABLE SF_RIG_GENERATOR ADD CONSTRAINT SFRG_PK PRIMARY KEY
(
SF_SUBTYPE,
RIG_ID,
GENERATOR_ID
);

\qecho 'CREATING PRIMARY KEY SFROE_PK'
ALTER TABLE SF_RIG_OVERHEAD_EQUIP ADD CONSTRAINT SFROE_PK PRIMARY KEY
(
SF_SUBTYPE,
RIG_ID,
EQUIP_ID
);

\qecho 'CREATING PRIMARY KEY SFRP_PK'
ALTER TABLE SF_RIG_PUMP ADD CONSTRAINT SFRP_PK PRIMARY KEY
(
SF_SUBTYPE,
RIG_ID,
PUMP_ID
);

\qecho 'CREATING PRIMARY KEY SFRS_PK'
ALTER TABLE SF_RIG_SHAKER ADD CONSTRAINT SFRS_PK PRIMARY KEY
(
SF_SUBTYPE,
RIG_ID,
SHAKER_ID
);

\qecho 'CREATING PRIMARY KEY SFR_PK'
ALTER TABLE SF_ROAD ADD CONSTRAINT SFR_PK PRIMARY KEY
(
SF_SUBTYPE,
ROAD_ID
);

\qecho 'CREATING PRIMARY KEY SFST_PK'
ALTER TABLE SF_STATUS ADD CONSTRAINT SFST_PK PRIMARY KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID,
STATUS_ID
);

\qecho 'CREATING PRIMARY KEY SF_PK'
ALTER TABLE SF_SUPPORT_FACILITY ADD CONSTRAINT SF_PK PRIMARY KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);

\qecho 'CREATING PRIMARY KEY SFT_PK'
ALTER TABLE SF_TOWER ADD CONSTRAINT SFT_PK PRIMARY KEY
(
SF_SUBTYPE,
TOWER_ID
);

\qecho 'CREATING PRIMARY KEY SFVH_PK'
ALTER TABLE SF_VEHICLE ADD CONSTRAINT SFVH_PK PRIMARY KEY
(
SF_SUBTYPE,
VEHICLE_ID
);

\qecho 'CREATING PRIMARY KEY SFV_PK'
ALTER TABLE SF_VESSEL ADD CONSTRAINT SFV_PK PRIMARY KEY
(
SF_SUBTYPE,
VESSEL_ID
);

\qecho 'CREATING PRIMARY KEY SFW_PK'
ALTER TABLE SF_WASTE ADD CONSTRAINT SFW_PK PRIMARY KEY
(
SF_SUBTYPE,
WASTE_FACILITY_ID
);

\qecho 'CREATING PRIMARY KEY SFWD_PK'
ALTER TABLE SF_WASTE_DISPOSAL ADD CONSTRAINT SFWD_PK PRIMARY KEY
(
SF_SUBTYPE,
WASTE_FACILITY_ID,
WASTE_ID
);

\qecho 'CREATING PRIMARY KEY SFX_PK'
ALTER TABLE SF_XREF ADD CONSTRAINT SFX_PK PRIMARY KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID,
SF_SUBTYPE2,
SUPPORT_FACILITY_ID2
);

\qecho 'CREATING PRIMARY KEY SRCD_PK'
ALTER TABLE SOURCE_DOCUMENT ADD CONSTRAINT SRCD_PK PRIMARY KEY
(
SOURCE_DOCUMENT_ID
);

\qecho 'CREATING PRIMARY KEY SRCDA_PK'
ALTER TABLE SOURCE_DOC_AUTHOR ADD CONSTRAINT SRCDA_PK PRIMARY KEY
(
SOURCE_DOCUMENT_ID,
AUTHOR_ID
);

\qecho 'CREATING PRIMARY KEY SRCDB_PK'
ALTER TABLE SOURCE_DOC_BIBLIO ADD CONSTRAINT SRCDB_PK PRIMARY KEY
(
SOURCE_DOCUMENT_ID,
BIBLIO_OBS_NO
);

\qecho 'CREATING PRIMARY KEY SU_PK'
ALTER TABLE SPACING_UNIT ADD CONSTRAINT SU_PK PRIMARY KEY
(
SPACING_UNIT_ID
);

\qecho 'CREATING PRIMARY KEY SUI_PK'
ALTER TABLE SPACING_UNIT_INST ADD CONSTRAINT SUI_PK PRIMARY KEY
(
SPACING_UNIT_ID,
INSTRUMENT_ID
);

\qecho 'CREATING PRIMARY KEY SPD_PK'
ALTER TABLE SPATIAL_DESCRIPTION ADD CONSTRAINT SPD_PK PRIMARY KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);

\qecho 'CREATING PRIMARY KEY SPB_PK'
ALTER TABLE SP_BOUNDARY ADD CONSTRAINT SPB_PK PRIMARY KEY
(
POLYGON_ID,
POINT_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY SPBV_PK'
ALTER TABLE SP_BOUNDARY_VERSION ADD CONSTRAINT SPBV_PK PRIMARY KEY
(
POLYGON_ID,
POINT_SEQ_NO,
SOURCE,
VERSION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY SPCOM_PK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_PK PRIMARY KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO,
COMPONENT_ID
);

\qecho 'CREATING PRIMARY KEY SPDT_PK'
ALTER TABLE SP_DESC_TEXT ADD CONSTRAINT SPDT_PK PRIMARY KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO,
TEXT_ID,
DESCRIPTION_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY SPDX_PK'
ALTER TABLE SP_DESC_XREF ADD CONSTRAINT SPDX_PK PRIMARY KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO,
SPATIAL_DESCRIPTION_ID_2,
SPATIAL_OBS_NO_2
);

\qecho 'CREATING PRIMARY KEY SPLN_PK'
ALTER TABLE SP_LINE ADD CONSTRAINT SPLN_PK PRIMARY KEY
(
LINE_ID
);

\qecho 'CREATING PRIMARY KEY SPLP_PK'
ALTER TABLE SP_LINE_POINT ADD CONSTRAINT SPLP_PK PRIMARY KEY
(
LINE_ID,
POINT_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY SPLPV_PK'
ALTER TABLE SP_LINE_POINT_VERSION ADD CONSTRAINT SPLPV_PK PRIMARY KEY
(
LINE_ID,
POINT_SEQ_NO,
SOURCE,
VERSION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY SPMZ_PK'
ALTER TABLE SP_MINERAL_ZONE ADD CONSTRAINT SPMZ_PK PRIMARY KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO,
MINERAL_ZONE_ID
);

\qecho 'CREATING PRIMARY KEY SPP_PK'
ALTER TABLE SP_PARCEL ADD CONSTRAINT SPP_PK PRIMARY KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO,
PARCEL_ID
);

\qecho 'CREATING PRIMARY KEY SPA_PK'
ALTER TABLE SP_PARCEL_AREA ADD CONSTRAINT SPA_PK PRIMARY KEY
(
PARCEL_ID,
AREA_ID,
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY SPCA_PK'
ALTER TABLE SP_PARCEL_CARTER ADD CONSTRAINT SPCA_PK PRIMARY KEY
(
PARCEL_CARTER_ID
);

\qecho 'CREATING PRIMARY KEY SPCO_PK'
ALTER TABLE SP_PARCEL_CONGRESS ADD CONSTRAINT SPCO_PK PRIMARY KEY
(
PARCEL_CONGRESS_ID
);

\qecho 'CREATING PRIMARY KEY SPDLS_PK'
ALTER TABLE SP_PARCEL_DLS ADD CONSTRAINT SPDLS_PK PRIMARY KEY
(
PARCEL_DLS_ID
);

\qecho 'CREATING PRIMARY KEY SPDR_PK'
ALTER TABLE SP_PARCEL_DLS_ROAD ADD CONSTRAINT SPDR_PK PRIMARY KEY
(
PARCEL_DLS_ID,
DLS_ROAD_ALLOWANCE_ID
);

\qecho 'CREATING PRIMARY KEY SPFPS_PK'
ALTER TABLE SP_PARCEL_FPS ADD CONSTRAINT SPFPS_PK PRIMARY KEY
(
PARCEL_FPS_ID
);

\qecho 'CREATING PRIMARY KEY SPLY_PK'
ALTER TABLE SP_PARCEL_LIBYA ADD CONSTRAINT SPLY_PK PRIMARY KEY
(
PARCEL_LYBIA_ID
);

\qecho 'CREATING PRIMARY KEY SPL_PK'
ALTER TABLE SP_PARCEL_LOT ADD CONSTRAINT SPL_PK PRIMARY KEY
(
PARCEL_LOT_ID,
PARCEL_LOT_TYPE,
PARCEL_LOT_NUM
);

\qecho 'CREATING PRIMARY KEY SPMB_PK'
ALTER TABLE SP_PARCEL_M_B ADD CONSTRAINT SPMB_PK PRIMARY KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO,
M_B_ID
);

\qecho 'CREATING PRIMARY KEY SPNL_PK'
ALTER TABLE SP_PARCEL_NE_LOC ADD CONSTRAINT SPNL_PK PRIMARY KEY
(
PARCEL_NE_LOC_ID
);

\qecho 'CREATING PRIMARY KEY SPNS_PK'
ALTER TABLE SP_PARCEL_NORTH_SEA ADD CONSTRAINT SPNS_PK PRIMARY KEY
(
PARCEL_NORTH_SEA_ID
);

\qecho 'CREATING PRIMARY KEY SPNTS_PK'
ALTER TABLE SP_PARCEL_NTS ADD CONSTRAINT SPNTS_PK PRIMARY KEY
(
PARCEL_NTS_ID
);

\qecho 'CREATING PRIMARY KEY SPOFF_PK'
ALTER TABLE SP_PARCEL_OFFSHORE ADD CONSTRAINT SPOFF_PK PRIMARY KEY
(
PARCEL_OFFSHORE_ID
);

\qecho 'CREATING PRIMARY KEY SPOH_PK'
ALTER TABLE SP_PARCEL_OHIO ADD CONSTRAINT SPOH_PK PRIMARY KEY
(
PARCEL_OHIO_ID
);

\qecho 'CREATING PRIMARY KEY SPPBL_PK'
ALTER TABLE SP_PARCEL_PBL ADD CONSTRAINT SPPBL_PK PRIMARY KEY
(
PARCEL_PBL_ID
);

\qecho 'CREATING PRIMARY KEY SPR_PK'
ALTER TABLE SP_PARCEL_REMARK ADD CONSTRAINT SPR_PK PRIMARY KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO,
PARCEL_ID,
REMARK_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY SPTX_PK'
ALTER TABLE SP_PARCEL_TEXAS ADD CONSTRAINT SPTX_PK PRIMARY KEY
(
PARCEL_TEXAS_ID
);

\qecho 'CREATING PRIMARY KEY SPPT_PK'
ALTER TABLE SP_POINT ADD CONSTRAINT SPPT_PK PRIMARY KEY
(
POINT_ID
);

\qecho 'CREATING PRIMARY KEY SPPV_PK'
ALTER TABLE SP_POINT_VERSION ADD CONSTRAINT SPPV_PK PRIMARY KEY
(
POINT_ID,
SOURCE,
VERSION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY SPPOL_PK'
ALTER TABLE SP_POLYGON ADD CONSTRAINT SPPOL_PK PRIMARY KEY
(
POLYGON_ID
);

\qecho 'CREATING PRIMARY KEY SPZD_PK'
ALTER TABLE SP_ZONE_DEFINITION ADD CONSTRAINT SPZD_PK PRIMARY KEY
(
ZONE_DEFINITION_ID
);

\qecho 'CREATING PRIMARY KEY SZDX_PK'
ALTER TABLE SP_ZONE_DEFIN_XREF ADD CONSTRAINT SZDX_PK PRIMARY KEY
(
ZONE_DEFINITION_ID_1,
ZONE_DEFINITION_ID_2
);

\qecho 'CREATING PRIMARY KEY SPZS_PK'
ALTER TABLE SP_ZONE_SUBSTANCE ADD CONSTRAINT SPZS_PK PRIMARY KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO,
MINERAL_ZONE_ID,
SUBSTANCE_ID
);

\qecho 'CREATING PRIMARY KEY STAM_PK'
ALTER TABLE STRAT_ACQTN_METHOD ADD CONSTRAINT STAM_PK PRIMARY KEY
(
STRAT_ACQTN_METHOD_ID
);

\qecho 'CREATING PRIMARY KEY STAL_PK'
ALTER TABLE STRAT_ALIAS ADD CONSTRAINT STAL_PK PRIMARY KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
ALIAS_STRAT_NAME_SET_ID,
ALIAS_STRAT_UNIT_ID,
SOURCE
);

\qecho 'CREATING PRIMARY KEY STCOL_PK'
ALTER TABLE STRAT_COLUMN ADD CONSTRAINT STCOL_PK PRIMARY KEY
(
STRAT_COLUMN_ID,
SOURCE
);

\qecho 'CREATING PRIMARY KEY STCA_PK'
ALTER TABLE STRAT_COLUMN_ACQTN ADD CONSTRAINT STCA_PK PRIMARY KEY
(
STRAT_COLUMN_ID,
STRAT_COLUMN_SOURCE,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID,
STRAT_COLUMN_ACQTN_ID
);

\qecho 'CREATING PRIMARY KEY STCU_PK'
ALTER TABLE STRAT_COLUMN_UNIT ADD CONSTRAINT STCU_PK PRIMARY KEY
(
STRAT_COLUMN_ID,
STRAT_COLUMN_SOURCE,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);

\qecho 'CREATING PRIMARY KEY STCX_PK'
ALTER TABLE STRAT_COLUMN_XREF ADD CONSTRAINT STCX_PK PRIMARY KEY
(
STRAT_COLUMN_ID_1,
STRAT_COLUMN_SOURCE_1,
STRAT_COLUMN_ID_2,
STRAT_COLUMN_SOURCE_2
);

\qecho 'CREATING PRIMARY KEY STCUA_PK'
ALTER TABLE STRAT_COL_UNIT_AGE ADD CONSTRAINT STCUA_PK PRIMARY KEY
(
STRAT_COLUMN_ID,
STRAT_COLUMN_SOURCE,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID,
AGE_SOURCE,
AGE_ID
);

\qecho 'CREATING PRIMARY KEY STE_PK'
ALTER TABLE STRAT_EQUIVALENCE ADD CONSTRAINT STE_PK PRIMARY KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
EQUIV_STRAT_NAME_SET_ID,
EQUIV_STRAT_UNIT_ID,
EQUIV_ID,
SOURCE
);

\qecho 'CREATING PRIMARY KEY STFA_PK'
ALTER TABLE STRAT_FIELD_ACQTN ADD CONSTRAINT STFA_PK PRIMARY KEY
(
STRAT_FIELD_ACQTN_ID,
FIELD_STATION_ID,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);

\qecho 'CREATING PRIMARY KEY STFN_PK'
ALTER TABLE STRAT_FIELD_NODE ADD CONSTRAINT STFN_PK PRIMARY KEY
(
FIELD_STATION_ID,
NODE_ID,
SOURCE
);

\qecho 'CREATING PRIMARY KEY STFS_PK'
ALTER TABLE STRAT_FIELD_SECTION ADD CONSTRAINT STFS_PK PRIMARY KEY
(
FIELD_STATION_ID,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);

\qecho 'CREATING PRIMARY KEY STFST_PK'
ALTER TABLE STRAT_FIELD_STATION ADD CONSTRAINT STFST_PK PRIMARY KEY
(
FIELD_STATION_ID
);

\qecho 'CREATING PRIMARY KEY STFIA_PK'
ALTER TABLE STRAT_FLD_INTERP_AGE ADD CONSTRAINT STFIA_PK PRIMARY KEY
(
FIELD_STATION_ID,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID,
AGE_SOURCE,
AGE_ID
);

\qecho 'CREATING PRIMARY KEY STH_PK'
ALTER TABLE STRAT_HIERARCHY ADD CONSTRAINT STH_PK PRIMARY KEY
(
PARENT_STRAT_NAME_SET_ID,
PARENT_STRAT_UNIT_ID,
CHILD_STRAT_NAME_SET_ID,
CHILD_STRAT_UNIT_ID,
HIERARCHY_ID,
SOURCE
);

\qecho 'CREATING PRIMARY KEY STHD_PK'
ALTER TABLE STRAT_HIERARCHY_DESC ADD CONSTRAINT STHD_PK PRIMARY KEY
(
HIERARCHY_DESC_ID,
HIERARCHY_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY STIC_PK'
ALTER TABLE STRAT_INTERP_CORR ADD CONSTRAINT STIC_PK PRIMARY KEY
(
CORRELATION_ID
);

\qecho 'CREATING PRIMARY KEY STNS_PK'
ALTER TABLE STRAT_NAME_SET ADD CONSTRAINT STNS_PK PRIMARY KEY
(
STRAT_NAME_SET_ID
);

\qecho 'CREATING PRIMARY KEY STNSX_PK'
ALTER TABLE STRAT_NAME_SET_XREF ADD CONSTRAINT STNSX_PK PRIMARY KEY
(
STRAT_NAME_SET_ID_1,
STRAT_NAME_SET_ID_2,
XREF_OBS_NO
);

\qecho 'CREATING PRIMARY KEY STNV_PK'
ALTER TABLE STRAT_NODE_VERSION ADD CONSTRAINT STNV_PK PRIMARY KEY
(
FIELD_STATION_ID,
NODE_ID,
SOURCE,
NODE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY STTR_PK'
ALTER TABLE STRAT_TOPO_RELATION ADD CONSTRAINT STTR_PK PRIMARY KEY
(
STRAT_NAME_SET_ID_1,
STRAT_UNIT_ID_1,
STRAT_NAME_SET_ID_2,
STRAT_UNIT_ID_2,
SOURCE,
TOPO_RELATION_ID
);

\qecho 'CREATING PRIMARY KEY STU_PK'
ALTER TABLE STRAT_UNIT ADD CONSTRAINT STU_PK PRIMARY KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);

\qecho 'CREATING PRIMARY KEY STUA_PK'
ALTER TABLE STRAT_UNIT_AGE ADD CONSTRAINT STUA_PK PRIMARY KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
AGE_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY STUC_PK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_PK PRIMARY KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY STUD_PK'
ALTER TABLE STRAT_UNIT_DESCRIPTION ADD CONSTRAINT STUD_PK PRIMARY KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
DESCRIPTION_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY STWC_PK'
ALTER TABLE STRAT_WELL_ACQTN ADD CONSTRAINT STWC_PK PRIMARY KEY
(
STRAT_WELL_ACQTN_ID,
UWI,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);

\qecho 'CREATING PRIMARY KEY STWIA_PK'
ALTER TABLE STRAT_WELL_INTERP_AGE ADD CONSTRAINT STWIA_PK PRIMARY KEY
(
UWI,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID,
AGE_SOURCE,
AGE_ID
);

\qecho 'CREATING PRIMARY KEY STWS_PK'
ALTER TABLE STRAT_WELL_SECTION ADD CONSTRAINT STWS_PK PRIMARY KEY
(
UWI,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);

\qecho 'CREATING PRIMARY KEY SUB_PK'
ALTER TABLE SUBSTANCE ADD CONSTRAINT SUB_PK PRIMARY KEY
(
SUBSTANCE_ID
);

\qecho 'CREATING PRIMARY KEY SUBA_PK'
ALTER TABLE SUBSTANCE_ALIAS ADD CONSTRAINT SUBA_PK PRIMARY KEY
(
SUBSTANCE_ID,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY SUBBA_PK'
ALTER TABLE SUBSTANCE_BA ADD CONSTRAINT SUBBA_PK PRIMARY KEY
(
SUBSTANCE_ID,
ANL_SOURCE,
BA_OBS_NO
);

\qecho 'CREATING PRIMARY KEY SUBB_PK'
ALTER TABLE SUBSTANCE_BEHAVIOR ADD CONSTRAINT SUBB_PK PRIMARY KEY
(
SUBSTANCE_ID
);

\qecho 'CREATING PRIMARY KEY SUBC_PK'
ALTER TABLE SUBSTANCE_COMPOSITION ADD CONSTRAINT SUBC_PK PRIMARY KEY
(
SUBSTANCE_ID,
SUB_SUBSTANCE_ID,
COMPOSITION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY SUBPD_PK'
ALTER TABLE SUBSTANCE_PROPERTY_DETAIL ADD CONSTRAINT SUBPD_PK PRIMARY KEY
(
SUBSTANCE_ID,
PROPERTY_OBS_NO
);

\qecho 'CREATING PRIMARY KEY SUBU_PK'
ALTER TABLE SUBSTANCE_USE ADD CONSTRAINT SUBU_PK PRIMARY KEY
(
SUBSTANCE_ID,
SUBSTANCE_USE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY SUBX_PK'
ALTER TABLE SUBSTANCE_XREF ADD CONSTRAINT SUBX_PK PRIMARY KEY
(
SUBSTANCE_ID1,
SUBSTANCE_ID2,
SUBSTANCE_XREF_OBS_NO
);

\qecho 'CREATING PRIMARY KEY W_PK'
ALTER TABLE WELL ADD CONSTRAINT W_PK PRIMARY KEY
(
UWI
);

\qecho 'CREATING PRIMARY KEY WAC_PK'
ALTER TABLE WELL_ACTIVITY ADD CONSTRAINT WAC_PK PRIMARY KEY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WACA_PK'
ALTER TABLE WELL_ACTIVITY_CAUSE ADD CONSTRAINT WACA_PK PRIMARY KEY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO,
CAUSE_TYPE
);

\qecho 'CREATING PRIMARY KEY WACOMP_PK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_PK PRIMARY KEY
(
UWI,
ACTIVITY_SOURCE,
ACTIVITY_OBS_NO,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WADU_PK'
ALTER TABLE WELL_ACTIVITY_DURATION ADD CONSTRAINT WADU_PK PRIMARY KEY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO,
DURATION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WAS_PK'
ALTER TABLE WELL_ACTIVITY_SET ADD CONSTRAINT WAS_PK PRIMARY KEY
(
ACTIVITY_SET_ID
);

\qecho 'CREATING PRIMARY KEY WAT_PK'
ALTER TABLE WELL_ACTIVITY_TYPE ADD CONSTRAINT WAT_PK PRIMARY KEY
(
ACTIVITY_SET_ID,
ACTIVITY_TYPE_ID
);

\qecho 'CREATING PRIMARY KEY WATA_PK'
ALTER TABLE WELL_ACTIVITY_TYPE_ALIAS ADD CONSTRAINT WATA_PK PRIMARY KEY
(
ACTIVITY_SET_ID,
ACTIVITY_TYPE_ID,
ALIAS_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WATE_PK'
ALTER TABLE WELL_ACTIVITY_TYPE_EQUIV ADD CONSTRAINT WATE_PK PRIMARY KEY
(
ACTIVITY_SET_ID,
ACTIVITY_TYPE_ID,
ACTIVITY_SET_ID2,
ACTIVITY_TYPE_ID2,
EQUIV_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WAD_PK'
ALTER TABLE WELL_AIR_DRILL ADD CONSTRAINT WAD_PK PRIMARY KEY
(
UWI,
SOURCE,
AIR_DRILL_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WADI_PK'
ALTER TABLE WELL_AIR_DRILL_INTERVAL ADD CONSTRAINT WADI_PK PRIMARY KEY
(
UWI,
AIR_DRILL_SOURCE,
AIR_DRILL_OBS_NO,
DEPTH_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WADP_PK'
ALTER TABLE WELL_AIR_DRILL_PERIOD ADD CONSTRAINT WADP_PK PRIMARY KEY
(
UWI,
INTERVAL_SOURCE,
AIR_DRILL_OBS_NO,
DEPTH_OBS_NO,
PERIOD_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WA_PK'
ALTER TABLE WELL_ALIAS ADD CONSTRAINT WA_PK PRIMARY KEY
(
UWI,
SOURCE,
WELL_ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY WAR_PK'
ALTER TABLE WELL_AREA ADD CONSTRAINT WAR_PK PRIMARY KEY
(
UWI,
SOURCE,
AREA_ID,
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY WBS_PK'
ALTER TABLE WELL_BA_SERVICE ADD CONSTRAINT WBS_PK PRIMARY KEY
(
UWI,
PROVIDED_BY,
SERVICE_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY WCE_PK'
ALTER TABLE WELL_CEMENT ADD CONSTRAINT WCE_PK PRIMARY KEY
(
UWI,
WELL_TUBE_SOURCE,
TUBING_TYPE,
TUBING_OBS_NO,
CEMENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WCO_PK'
ALTER TABLE WELL_COMPLETION ADD CONSTRAINT WCO_PK PRIMARY KEY
(
UWI,
SOURCE,
COMPLETION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WC_PK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_PK PRIMARY KEY
(
UWI,
COMPONENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WCR_PK'
ALTER TABLE WELL_CORE ADD CONSTRAINT WCR_PK PRIMARY KEY
(
UWI,
SOURCE,
CORE_ID
);

\qecho 'CREATING PRIMARY KEY WCRA_PK'
ALTER TABLE WELL_CORE_ANALYSIS ADD CONSTRAINT WCRA_PK PRIMARY KEY
(
UWI,
SOURCE,
CORE_ID,
ANALYSIS_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WCRAM_PK'
ALTER TABLE WELL_CORE_ANAL_METHOD ADD CONSTRAINT WCRAM_PK PRIMARY KEY
(
UWI,
SOURCE,
CORE_ID,
ANALYSIS_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WCRAR_PK'
ALTER TABLE WELL_CORE_ANAL_REMARK ADD CONSTRAINT WCRAR_PK PRIMARY KEY
(
UWI,
SOURCE,
CORE_ID,
ANALYSIS_OBS_NO,
REMARK_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WCRD_PK'
ALTER TABLE WELL_CORE_DESCRIPTION ADD CONSTRAINT WCRD_PK PRIMARY KEY
(
UWI,
SOURCE,
CORE_ID,
DESCRIPTION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WCRM_PK'
ALTER TABLE WELL_CORE_REMARK ADD CONSTRAINT WCRM_PK PRIMARY KEY
(
UWI,
SOURCE,
CORE_ID,
REMARK_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WCRSA_PK'
ALTER TABLE WELL_CORE_SAMPLE_ANAL ADD CONSTRAINT WCRSA_PK PRIMARY KEY
(
UWI,
SOURCE,
CORE_ID,
ANALYSIS_OBS_NO,
SAMPLE_NUM,
SAMPLE_ANALYSIS_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WCRSD_PK'
ALTER TABLE WELL_CORE_SAMPLE_DESC ADD CONSTRAINT WCRSD_PK PRIMARY KEY
(
UWI,
SOURCE,
CORE_ID,
ANALYSIS_OBS_NO,
SAMPLE_NUM,
SAMPLE_ANALYSIS_OBS_NO,
SAMPLE_DESC_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WCRSR_PK'
ALTER TABLE WELL_CORE_SAMPLE_RMK ADD CONSTRAINT WCRSR_PK PRIMARY KEY
(
UWI,
SOURCE,
CORE_ID,
ANALYSIS_OBS_NO,
SAMPLE_NUM,
SAMPLE_ANALYSIS_OBS_NO,
REMARK_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WCRS_PK'
ALTER TABLE WELL_CORE_SHIFT ADD CONSTRAINT WCRS_PK PRIMARY KEY
(
UWI,
SOURCE,
CORE_ID,
SHIFT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WCRSU_PK'
ALTER TABLE WELL_CORE_STRAT_UNIT ADD CONSTRAINT WCRSU_PK PRIMARY KEY
(
UWI,
SOURCE,
CORE_ID,
DESCRIPTION_OBS_NO,
STRAT_NAME_SET_ID,
CORE_STRAT_UNIT_ID
);

\qecho 'CREATING PRIMARY KEY WDS_PK'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_PK PRIMARY KEY
(
UWI,
SURVEY_ID,
SOURCE
);

\qecho 'CREATING PRIMARY KEY WDSC_PK'
ALTER TABLE WELL_DIR_SRVY_COMPOSITE ADD CONSTRAINT WDSC_PK PRIMARY KEY
(
COMPOSITE_UWI,
COMPOSITE_SURVEY_ID,
COMPOSITE_SOURCE,
COMPOSITE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WDSS_PK'
ALTER TABLE WELL_DIR_SRVY_STATION ADD CONSTRAINT WDSS_PK PRIMARY KEY
(
UWI,
SURVEY_ID,
SOURCE,
DEPTH_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WDSSV_PK'
ALTER TABLE WELL_DIR_SRVY_ST_VERSION ADD CONSTRAINT WDSSV_PK PRIMARY KEY
(
UWI,
SURVEY_ID,
SOURCE,
VERSION_OBS_NO,
DEPTH_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WDSV_PK'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_PK PRIMARY KEY
(
UWI,
SURVEY_ID,
SOURCE,
VERSION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WDAI_PK'
ALTER TABLE WELL_DRILL_ADD_INV ADD CONSTRAINT WDAI_PK PRIMARY KEY
(
UWI,
DRILL_PERIOD_OBS_NO,
ADDITIVE_ID
);

\qecho 'CREATING PRIMARY KEY WDA_PK'
ALTER TABLE WELL_DRILL_ASSEMBLY ADD CONSTRAINT WDA_PK PRIMARY KEY
(
UWI,
ASSEMBLY_ID
);

\qecho 'CREATING PRIMARY KEY WDAC_PK'
ALTER TABLE WELL_DRILL_ASSEMBLY_COMP ADD CONSTRAINT WDAC_PK PRIMARY KEY
(
UWI,
ASSEMBLY_ID,
COMPONENT_ID
);

\qecho 'CREATING PRIMARY KEY WDAP_PK'
ALTER TABLE WELL_DRILL_ASSEMBLY_PER ADD CONSTRAINT WDAP_PK PRIMARY KEY
(
UWI,
PERIOD_OBS_NO,
ASSEMBLY_ID
);

\qecho 'CREATING PRIMARY KEY WDBC_PK'
ALTER TABLE WELL_DRILL_BIT_CONDITION ADD CONSTRAINT WDBC_PK PRIMARY KEY
(
UWI,
BIT_SOURCE,
BIT_INTERVAL_OBS_NO,
CONDITION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WDBI_PK'
ALTER TABLE WELL_DRILL_BIT_INTERVAL ADD CONSTRAINT WDBI_PK PRIMARY KEY
(
UWI,
SOURCE,
BIT_INTERVAL_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WDBJ_PK'
ALTER TABLE WELL_DRILL_BIT_JET ADD CONSTRAINT WDBJ_PK PRIMARY KEY
(
UWI,
BIT_SOURCE,
BIT_INTERVAL_OBS_NO,
JET_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WDBP_PK'
ALTER TABLE WELL_DRILL_BIT_PERIOD ADD CONSTRAINT WDBP_PK PRIMARY KEY
(
UWI,
PERIOD_OBS_NO,
BIT_SOURCE,
BIT_INTERVAL_OBS_NO,
DRILL_BIT_PERIOD_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WDCK_PK'
ALTER TABLE WELL_DRILL_CHECK ADD CONSTRAINT WDCK_PK PRIMARY KEY
(
UWI,
PERIOD_OBS_NO,
DRILL_CHECK_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WDCKS_PK'
ALTER TABLE WELL_DRILL_CHECK_SET ADD CONSTRAINT WDCKS_PK PRIMARY KEY
(
CHECK_SET_ID
);

\qecho 'CREATING PRIMARY KEY WDCKT_PK'
ALTER TABLE WELL_DRILL_CHECK_TYPE ADD CONSTRAINT WDCKT_PK PRIMARY KEY
(
CHECK_SET_ID,
CHECK_TYPE
);

\qecho 'CREATING PRIMARY KEY WDE_PK'
ALTER TABLE WELL_DRILL_EQUIPMENT ADD CONSTRAINT WDE_PK PRIMARY KEY
(
UWI,
EQUIPMENT_ID,
EQUIPMENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WDID_PK'
ALTER TABLE WELL_DRILL_INT_DETAIL ADD CONSTRAINT WDID_PK PRIMARY KEY
(
UWI,
BIT_SOURCE,
BIT_INTERVAL_OBS_NO,
BIT_DETAIL_TYPE,
DETAIL_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WDMA_PK'
ALTER TABLE WELL_DRILL_MUD_ADDITIVE ADD CONSTRAINT WDMA_PK PRIMARY KEY
(
UWI,
DRILL_PERIOD_OBS_NO,
ADDITIVE_ID,
ADDITIVE_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY WDMI_PK'
ALTER TABLE WELL_DRILL_MUD_INTRVL ADD CONSTRAINT WDMI_PK PRIMARY KEY
(
UWI,
SOURCE,
MEDIA_TYPE,
DEPTH_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WDMW_PK'
ALTER TABLE WELL_DRILL_MUD_WEIGHT ADD CONSTRAINT WDMW_PK PRIMARY KEY
(
UWI,
SOURCE,
DEPTH_OBS_NO,
MEDIA_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WDP_PK'
ALTER TABLE WELL_DRILL_PERIOD ADD CONSTRAINT WDP_PK PRIMARY KEY
(
UWI,
PERIOD_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WDPC_PK'
ALTER TABLE WELL_DRILL_PERIOD_CREW ADD CONSTRAINT WDPC_PK PRIMARY KEY
(
UWI,
PERIOD_OBS_NO,
CREW_COMPANY_BA_ID,
DETAIL_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WDPE_PK'
ALTER TABLE WELL_DRILL_PERIOD_EQUIP ADD CONSTRAINT WDPE_PK PRIMARY KEY
(
UWI,
PERIOD_OBS_NO,
EQUIPMENT_ID
);

\qecho 'CREATING PRIMARY KEY WDPIN_PK'
ALTER TABLE WELL_DRILL_PERIOD_INV ADD CONSTRAINT WDPIN_PK PRIMARY KEY
(
UWI,
PERIOD_OBS_NO,
INVENTORY_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY WDPS_PK'
ALTER TABLE WELL_DRILL_PERIOD_SERV ADD CONSTRAINT WDPS_PK PRIMARY KEY
(
UWI,
PERIOD_OBS_NO,
PROVIDED_BY,
SERVICE_SEQ_NO,
SEGMENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WDPV_PK'
ALTER TABLE WELL_DRILL_PERIOD_VESSEL ADD CONSTRAINT WDPV_PK PRIMARY KEY
(
UWI,
PERIOD_OBS_NO,
SF_SUBTYPE,
VESSEL_ID
);

\qecho 'CREATING PRIMARY KEY WDPI_PK'
ALTER TABLE WELL_DRILL_PIPE_INV ADD CONSTRAINT WDPI_PK PRIMARY KEY
(
UWI,
PERIOD_OBS_NO,
INVENTORY_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WDRK_PK'
ALTER TABLE WELL_DRILL_REMARK ADD CONSTRAINT WDRK_PK PRIMARY KEY
(
UWI,
REMARK_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY WDR_PK'
ALTER TABLE WELL_DRILL_REPORT ADD CONSTRAINT WDR_PK PRIMARY KEY
(
UWI,
REPORT_ID
);

\qecho 'CREATING PRIMARY KEY WDSH_PK'
ALTER TABLE WELL_DRILL_SHAKER ADD CONSTRAINT WDSH_PK PRIMARY KEY
(
UWI,
PERIOD_OBS_NO,
SHAKER_ID,
SCREEN_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WDSTAT_PK'
ALTER TABLE WELL_DRILL_STATISTIC ADD CONSTRAINT WDSTAT_PK PRIMARY KEY
(
UWI,
PERIOD_OBS_NO,
STATISTIC_TYPE,
STATISTIC_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WDW_PK'
ALTER TABLE WELL_DRILL_WEATHER ADD CONSTRAINT WDW_PK PRIMARY KEY
(
UWI,
PERIOD_OBS_NO,
WEATHER_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WEQ_PK'
ALTER TABLE WELL_EQUIPMENT ADD CONSTRAINT WEQ_PK PRIMARY KEY
(
UWI,
SOURCE,
EQUIPMENT_ID,
EQUIP_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WFAC_PK'
ALTER TABLE WELL_FACILITY ADD CONSTRAINT WFAC_PK PRIMARY KEY
(
UWI,
FACILITY_ID,
FACILITY_TYPE,
ACTIVE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WHD_PK'
ALTER TABLE WELL_HORIZ_DRILL ADD CONSTRAINT WHD_PK PRIMARY KEY
(
UWI,
SOURCE
);

\qecho 'CREATING PRIMARY KEY WHDK_PK'
ALTER TABLE WELL_HORIZ_DRILL_KOP ADD CONSTRAINT WHDK_PK PRIMARY KEY
(
UWI,
SOURCE,
KICKOFF_POINT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WHDP_PK'
ALTER TABLE WELL_HORIZ_DRILL_POE ADD CONSTRAINT WHDP_PK PRIMARY KEY
(
UWI,
SOURCE,
POINT_OF_ENTRY_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WHDS_PK'
ALTER TABLE WELL_HORIZ_DRILL_SPOKE ADD CONSTRAINT WHDS_PK PRIMARY KEY
(
UWI,
SOURCE,
KICKOFF_POINT_OBS_NO,
SPOKE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WLIC_PK'
ALTER TABLE WELL_LICENSE ADD CONSTRAINT WLIC_PK PRIMARY KEY
(
UWI,
SOURCE,
LICENSE_ID
);

\qecho 'CREATING PRIMARY KEY WLICAL_PK'
ALTER TABLE WELL_LICENSE_ALIAS ADD CONSTRAINT WLICAL_PK PRIMARY KEY
(
UWI,
WELL_LIC_SOURCE,
LICENSE_ID,
ALIAS_SOURCE,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY WLICA_PK'
ALTER TABLE WELL_LICENSE_AREA ADD CONSTRAINT WLICA_PK PRIMARY KEY
(
UWI,
LICENSE_ID,
WELL_LIC_SOURCE,
AREA_ID,
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY WLICC_PK'
ALTER TABLE WELL_LICENSE_COND ADD CONSTRAINT WLICC_PK PRIMARY KEY
(
UWI,
LICENSE_ID,
WELL_LIC_SOURCE,
CONDITION_ID
);

\qecho 'CREATING PRIMARY KEY WLICR_PK'
ALTER TABLE WELL_LICENSE_REMARK ADD CONSTRAINT WLICR_PK PRIMARY KEY
(
UWI,
WELL_LIC_SOURCE,
LICENSE_ID,
REMARK_ID,
REMARK_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY WLICS_PK'
ALTER TABLE WELL_LICENSE_STATUS ADD CONSTRAINT WLICS_PK PRIMARY KEY
(
UWI,
LICENSE_ID,
LICENSE_SOURCE,
STATUS_ID
);

\qecho 'CREATING PRIMARY KEY WLV_PK'
ALTER TABLE WELL_LICENSE_VIOLATION ADD CONSTRAINT WLV_PK PRIMARY KEY
(
UWI,
WELL_LIC_SOURCE,
LICENSE_ID,
VIOLATION_ID
);

\qecho 'CREATING PRIMARY KEY WL_PK'
ALTER TABLE WELL_LOG ADD CONSTRAINT WL_PK PRIMARY KEY
(
UWI,
WELL_LOG_ID,
SOURCE
);

\qecho 'CREATING PRIMARY KEY WLAC_PK'
ALTER TABLE WELL_LOG_AXIS_COORD ADD CONSTRAINT WLAC_PK PRIMARY KEY
(
UWI,
CURVE_ID,
AXIS_ID,
COORDINATE_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY WLCLS_PK'
ALTER TABLE WELL_LOG_CLASS ADD CONSTRAINT WLCLS_PK PRIMARY KEY
(
UWI,
WELL_LOG_ID,
WELL_LOG_CLASS_ID,
WELL_LOG_SOURCE
);

\qecho 'CREATING PRIMARY KEY WLCCC_PK'
ALTER TABLE WELL_LOG_CLS_CRV_CLS ADD CONSTRAINT WLCCC_PK PRIMARY KEY
(
WELL_LOG_CLASS_ID,
CURVE_CLASS_ID
);

\qecho 'CREATING PRIMARY KEY WLCCX_PK'
ALTER TABLE WELL_LOG_CRV_CLS_XREF ADD CONSTRAINT WLCCX_PK PRIMARY KEY
(
PARENT_CURVE_CLASS_ID,
CHILD_CURVE_CLASS_ID
);

\qecho 'CREATING PRIMARY KEY WLC_PK'
ALTER TABLE WELL_LOG_CURVE ADD CONSTRAINT WLC_PK PRIMARY KEY
(
UWI,
CURVE_ID
);

\qecho 'CREATING PRIMARY KEY WLCA_PK'
ALTER TABLE WELL_LOG_CURVE_AXIS ADD CONSTRAINT WLCA_PK PRIMARY KEY
(
UWI,
CURVE_ID,
AXIS_ID
);

\qecho 'CREATING PRIMARY KEY WLCC_PK'
ALTER TABLE WELL_LOG_CURVE_CLASS ADD CONSTRAINT WLCC_PK PRIMARY KEY
(
CURVE_CLASS_ID
);

\qecho 'CREATING PRIMARY KEY WLCF_PK'
ALTER TABLE WELL_LOG_CURVE_FRAME ADD CONSTRAINT WLCF_PK PRIMARY KEY
(
UWI,
WELL_LOG_ID,
WELL_LOG_SOURCE,
FRAME_ID
);

\qecho 'CREATING PRIMARY KEY WLCP_PK'
ALTER TABLE WELL_LOG_CURVE_PROC ADD CONSTRAINT WLCP_PK PRIMARY KEY
(
UWI,
CURVE_ID,
PROCESS_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WLCR_PK'
ALTER TABLE WELL_LOG_CURVE_REMARK ADD CONSTRAINT WLCR_PK PRIMARY KEY
(
UWI,
CURVE_ID,
REMARK_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WLCS_PK'
ALTER TABLE WELL_LOG_CURVE_SCALE ADD CONSTRAINT WLCS_PK PRIMARY KEY
(
UWI,
CURVE_ID,
DIGITAL_CURVE_ID,
CURVE_SCALE_ID
);

\qecho 'CREATING PRIMARY KEY WLCSP_PK'
ALTER TABLE WELL_LOG_CURVE_SPLICE ADD CONSTRAINT WLCSP_PK PRIMARY KEY
(
UWI,
CURVE_ID,
SPLICE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WLCV_PK'
ALTER TABLE WELL_LOG_CURVE_VALUE ADD CONSTRAINT WLCV_PK PRIMARY KEY
(
UWI,
CURVE_ID,
SAMPLE_ID
);

\qecho 'CREATING PRIMARY KEY WLDC_PK'
ALTER TABLE WELL_LOG_DGTZ_CURVE ADD CONSTRAINT WLDC_PK PRIMARY KEY
(
UWI,
CURVE_ID,
DIGITAL_CURVE_ID
);

\qecho 'CREATING PRIMARY KEY WLD_PK'
ALTER TABLE WELL_LOG_DICTIONARY ADD CONSTRAINT WLD_PK PRIMARY KEY
(
DICTIONARY_ID
);

\qecho 'CREATING PRIMARY KEY WLDA_PK'
ALTER TABLE WELL_LOG_DICT_ALIAS ADD CONSTRAINT WLDA_PK PRIMARY KEY
(
DICTIONARY_ID,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY WLDB_PK'
ALTER TABLE WELL_LOG_DICT_BA ADD CONSTRAINT WLDB_PK PRIMARY KEY
(
DICTIONARY_ID,
USE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WLDCC_PK'
ALTER TABLE WELL_LOG_DICT_CRV_CLS ADD CONSTRAINT WLDCC_PK PRIMARY KEY
(
CURVE_CLASS_ID,
DICTIONARY_ID,
DICT_CURVE_ID
);

\qecho 'CREATING PRIMARY KEY WLDCV_PK'
ALTER TABLE WELL_LOG_DICT_CURVE ADD CONSTRAINT WLDCV_PK PRIMARY KEY
(
DICTIONARY_ID,
DICT_CURVE_ID
);

\qecho 'CREATING PRIMARY KEY WLDP_PK'
ALTER TABLE WELL_LOG_DICT_PARM ADD CONSTRAINT WLDP_PK PRIMARY KEY
(
DICTIONARY_ID,
PARAMETER_ID
);

\qecho 'CREATING PRIMARY KEY WLDPC_PK'
ALTER TABLE WELL_LOG_DICT_PARM_CLS ADD CONSTRAINT WLDPC_PK PRIMARY KEY
(
DICTIONARY_ID,
PARAMETER_ID,
PARAMETER_CLASS_ID
);

\qecho 'CREATING PRIMARY KEY WLDPV_PK'
ALTER TABLE WELL_LOG_DICT_PARM_VAL ADD CONSTRAINT WLDPV_PK PRIMARY KEY
(
DICTIONARY_ID,
PARAMETER_ID,
VALUE_ID
);

\qecho 'CREATING PRIMARY KEY WLDPR_PK'
ALTER TABLE WELL_LOG_DICT_PROC ADD CONSTRAINT WLDPR_PK PRIMARY KEY
(
DICTIONARY_ID,
PROCESS_ID
);

\qecho 'CREATING PRIMARY KEY WLJ_PK'
ALTER TABLE WELL_LOG_JOB ADD CONSTRAINT WLJ_PK PRIMARY KEY
(
UWI,
SOURCE,
JOB_ID
);

\qecho 'CREATING PRIMARY KEY WLP_PK'
ALTER TABLE WELL_LOG_PARM ADD CONSTRAINT WLP_PK PRIMARY KEY
(
UWI,
WELL_LOG_ID,
WELL_LOG_SOURCE,
PARAMETER_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY WLPA_PK'
ALTER TABLE WELL_LOG_PARM_ARRAY ADD CONSTRAINT WLPA_PK PRIMARY KEY
(
UWI,
WELL_LOG_ID,
WELL_LOG_SOURCE,
PARAMETER_SEQ_NO,
ELEMENT_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY WLPC_PK'
ALTER TABLE WELL_LOG_PARM_CLASS ADD CONSTRAINT WLPC_PK PRIMARY KEY
(
PARAMETER_CLASS_ID
);

\qecho 'CREATING PRIMARY KEY WLPS_PK'
ALTER TABLE WELL_LOG_PASS ADD CONSTRAINT WLPS_PK PRIMARY KEY
(
UWI,
SOURCE,
JOB_ID,
TRIP_OBS_NO,
LOG_TOOL_PASS_NO
);

\qecho 'CREATING PRIMARY KEY WLR_PK'
ALTER TABLE WELL_LOG_REMARK ADD CONSTRAINT WLR_PK PRIMARY KEY
(
UWI,
WELL_LOG_ID,
WELL_LOG_SOURCE,
REMARK_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WLT_PK'
ALTER TABLE WELL_LOG_TRIP ADD CONSTRAINT WLT_PK PRIMARY KEY
(
UWI,
SOURCE,
JOB_ID,
TRIP_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WLTR_PK'
ALTER TABLE WELL_LOG_TRIP_REMARK ADD CONSTRAINT WLTR_PK PRIMARY KEY
(
UWI,
JOB_SOURCE,
JOB_ID,
TRIP_OBS_NO,
REMARK_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WMD_PK'
ALTER TABLE WELL_MISC_DATA ADD CONSTRAINT WMD_PK PRIMARY KEY
(
UWI,
SOURCE,
MISC_DATA_TYPE,
MISC_DATA_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WMP_PK'
ALTER TABLE WELL_MUD_PROPERTY ADD CONSTRAINT WMP_PK PRIMARY KEY
(
SAMPLE_ANALYSIS_ID,
SAMPLE_ANALYSIS_SOURCE,
PROPERTY_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WMR_PK'
ALTER TABLE WELL_MUD_RESISTIVITY ADD CONSTRAINT WMR_PK PRIMARY KEY
(
UWI,
SOURCE,
SAMPLE_ID,
RESISTIVITY_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WMS_PK'
ALTER TABLE WELL_MUD_SAMPLE ADD CONSTRAINT WMS_PK PRIMARY KEY
(
ANL_ID,
ANL_SOURCE,
STEP_SEQ_NO,
MUD_ANL_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WN_PK'
ALTER TABLE WELL_NODE ADD CONSTRAINT WN_PK PRIMARY KEY
(
NODE_ID
);

\qecho 'CREATING PRIMARY KEY WNA_PK'
ALTER TABLE WELL_NODE_AREA ADD CONSTRAINT WNA_PK PRIMARY KEY
(
NODE_ID,
SOURCE,
AREA_ID,
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY WNMB_PK'
ALTER TABLE WELL_NODE_M_B ADD CONSTRAINT WNMB_PK PRIMARY KEY
(
NODE_ID,
SOURCE
);

\qecho 'CREATING PRIMARY KEY WNSU_PK'
ALTER TABLE WELL_NODE_STRAT_UNIT ADD CONSTRAINT WNSU_PK PRIMARY KEY
(
UWI,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);

\qecho 'CREATING PRIMARY KEY WNV_PK'
ALTER TABLE WELL_NODE_VERSION ADD CONSTRAINT WNV_PK PRIMARY KEY
(
NODE_ID,
SOURCE,
NODE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WP_PK'
ALTER TABLE WELL_PAYZONE ADD CONSTRAINT WP_PK PRIMARY KEY
(
UWI,
SOURCE,
ZONE_ID,
ZONE_SOURCE,
PAYZONE_TYPE,
FLUID_TYPE
);

\qecho 'CREATING PRIMARY KEY WPRF_PK'
ALTER TABLE WELL_PERFORATION ADD CONSTRAINT WPRF_PK PRIMARY KEY
(
UWI,
SOURCE,
PERFORATION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WPRFR_PK'
ALTER TABLE WELL_PERF_REMARK ADD CONSTRAINT WPRFR_PK PRIMARY KEY
(
UWI,
PERFORATION_SOURCE,
PERFORATION_OBS_NO,
REMARK_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WPT_PK'
ALTER TABLE WELL_PERMIT_TYPE ADD CONSTRAINT WPT_PK PRIMARY KEY
(
GRANTED_BY_BA_ID,
PERMIT_TYPE
);

\qecho 'CREATING PRIMARY KEY WPL_PK'
ALTER TABLE WELL_PLUGBACK ADD CONSTRAINT WPL_PK PRIMARY KEY
(
UWI,
SOURCE,
PLUGBACK_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WPI_PK'
ALTER TABLE WELL_POROUS_INTERVAL ADD CONSTRAINT WPI_PK PRIMARY KEY
(
UWI,
SOURCE,
POROUS_INTERVAL_ID
);

\qecho 'CREATING PRIMARY KEY WPSR_PK'
ALTER TABLE WELL_PRESSURE ADD CONSTRAINT WPSR_PK PRIMARY KEY
(
UWI,
SOURCE,
PRESSURE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WPA_PK'
ALTER TABLE WELL_PRESSURE_AOF ADD CONSTRAINT WPA_PK PRIMARY KEY
(
UWI,
SOURCE,
PRESSURE_OBS_NO,
AOF_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WPA4_PK'
ALTER TABLE WELL_PRESSURE_AOF_4PT ADD CONSTRAINT WPA4_PK PRIMARY KEY
(
UWI,
SOURCE,
PRESSURE_OBS_NO,
AOF_OBS_NO,
POINT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WPB_PK'
ALTER TABLE WELL_PRESSURE_BH ADD CONSTRAINT WPB_PK PRIMARY KEY
(
UWI,
SOURCE,
PRESSURE_OBS_NO,
BHP_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WR_PK'
ALTER TABLE WELL_REMARK ADD CONSTRAINT WR_PK PRIMARY KEY
(
UWI,
SOURCE,
REMARK_TYPE,
REMARK_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY WSET_PK'
ALTER TABLE WELL_SET ADD CONSTRAINT WSET_PK PRIMARY KEY
(
WELL_SET_ID
);

\qecho 'CREATING PRIMARY KEY WSW_PK'
ALTER TABLE WELL_SET_WELL ADD CONSTRAINT WSW_PK PRIMARY KEY
(
WELL_SET_ID,
UWI,
WELL_SET_WELL_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WS_PK'
ALTER TABLE WELL_SHOW ADD CONSTRAINT WS_PK PRIMARY KEY
(
UWI,
SOURCE,
SHOW_TYPE,
SHOW_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WSR_PK'
ALTER TABLE WELL_SHOW_REMARK ADD CONSTRAINT WSR_PK PRIMARY KEY
(
UWI,
SHOW_SOURCE,
SHOW_TYPE,
SHOW_OBS_NO,
REMARK_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WSA_PK'
ALTER TABLE WELL_SIEVE_ANALYSIS ADD CONSTRAINT WSA_PK PRIMARY KEY
(
UWI,
SOURCE,
ANALYSIS_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WSS_PK'
ALTER TABLE WELL_SIEVE_SCREEN ADD CONSTRAINT WSS_PK PRIMARY KEY
(
UWI,
ANL_SOURCE,
ANALYSIS_OBS_NO,
SCREEN_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WST_PK'
ALTER TABLE WELL_STATUS ADD CONSTRAINT WST_PK PRIMARY KEY
(
UWI,
SOURCE,
STATUS_ID
);

\qecho 'CREATING PRIMARY KEY WSF_PK'
ALTER TABLE WELL_SUPPORT_FACILITY ADD CONSTRAINT WSF_PK PRIMARY KEY
(
UWI,
SF_SUBTYPE,
SUPPORT_FACILITY_ID,
SF_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WT_PK'
ALTER TABLE WELL_TEST ADD CONSTRAINT WT_PK PRIMARY KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
);

\qecho 'CREATING PRIMARY KEY WTA_PK'
ALTER TABLE WELL_TEST_ANALYSIS ADD CONSTRAINT WTA_PK PRIMARY KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
PERIOD_TYPE,
PERIOD_OBS_NO,
ANALYSIS_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WTCA_PK'
ALTER TABLE WELL_TEST_COMPUT_ANAL ADD CONSTRAINT WTCA_PK PRIMARY KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
REPORT_NO
);

\qecho 'CREATING PRIMARY KEY WTC_PK'
ALTER TABLE WELL_TEST_CONTAMINANT ADD CONSTRAINT WTC_PK PRIMARY KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
RECOVERY_OBS_NO,
CONTAMINANT_SEQ_NO
);

\qecho 'CREATING PRIMARY KEY WTCU_PK'
ALTER TABLE WELL_TEST_CUSHION ADD CONSTRAINT WTCU_PK PRIMARY KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
CUSHION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WTE_PK'
ALTER TABLE WELL_TEST_EQUIPMENT ADD CONSTRAINT WTE_PK PRIMARY KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
EQUIPMENT_TYPE,
EQUIP_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WTF_PK'
ALTER TABLE WELL_TEST_FLOW ADD CONSTRAINT WTF_PK PRIMARY KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
PERIOD_TYPE,
PERIOD_OBS_NO,
FLUID_TYPE
);

\qecho 'CREATING PRIMARY KEY WTFM_PK'
ALTER TABLE WELL_TEST_FLOW_MEAS ADD CONSTRAINT WTFM_PK PRIMARY KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
MEASUREMENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WTM_PK'
ALTER TABLE WELL_TEST_MUD ADD CONSTRAINT WTM_PK PRIMARY KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
MUD_TYPE
);

\qecho 'CREATING PRIMARY KEY WTP_PK'
ALTER TABLE WELL_TEST_PERIOD ADD CONSTRAINT WTP_PK PRIMARY KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
PERIOD_TYPE,
PERIOD_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WTPSR_PK'
ALTER TABLE WELL_TEST_PRESSURE ADD CONSTRAINT WTPSR_PK PRIMARY KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
PERIOD_TYPE,
PERIOD_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WTPM_PK'
ALTER TABLE WELL_TEST_PRESS_MEAS ADD CONSTRAINT WTPM_PK PRIMARY KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
MEASUREMENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WTR_PK'
ALTER TABLE WELL_TEST_RECORDER ADD CONSTRAINT WTR_PK PRIMARY KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
RECORDER_ID
);

\qecho 'CREATING PRIMARY KEY WTRCV_PK'
ALTER TABLE WELL_TEST_RECOVERY ADD CONSTRAINT WTRCV_PK PRIMARY KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
RECOVERY_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WTRM_PK'
ALTER TABLE WELL_TEST_REMARK ADD CONSTRAINT WTRM_PK PRIMARY KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
REMARK_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WTS_PK'
ALTER TABLE WELL_TEST_SHUTOFF ADD CONSTRAINT WTS_PK PRIMARY KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
SHUTOFF_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WTSU_PK'
ALTER TABLE WELL_TEST_STRAT_UNIT ADD CONSTRAINT WTSU_PK PRIMARY KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
STRAT_UNIT_ID,
STRAT_NAME_SET_ID
);

\qecho 'CREATING PRIMARY KEY WTRT_PK'
ALTER TABLE WELL_TREATMENT ADD CONSTRAINT WTRT_PK PRIMARY KEY
(
UWI,
SOURCE,
TREATMENT_TYPE,
TREATMENT_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WTUB_PK'
ALTER TABLE WELL_TUBULAR ADD CONSTRAINT WTUB_PK PRIMARY KEY
(
UWI,
SOURCE,
TUBING_TYPE,
TUBING_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WV_PK'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_PK PRIMARY KEY
(
UWI,
SOURCE
);

\qecho 'CREATING PRIMARY KEY WVAR_PK'
ALTER TABLE WELL_VERSION_AREA ADD CONSTRAINT WVAR_PK PRIMARY KEY
(
UWI,
WELL_VERSION_SOURCE,
AREA_ID,
AREA_TYPE
);

\qecho 'CREATING PRIMARY KEY WX_PK'
ALTER TABLE WELL_XREF ADD CONSTRAINT WX_PK PRIMARY KEY
(
UWI,
XREF_ID
);

\qecho 'CREATING PRIMARY KEY WZI_PK'
ALTER TABLE WELL_ZONE_INTERVAL ADD CONSTRAINT WZI_PK PRIMARY KEY
(
UWI,
SOURCE,
INTERVAL_ID,
ZONE_ID,
ZONE_SOURCE
);

\qecho 'CREATING PRIMARY KEY WZIV_PK'
ALTER TABLE WELL_ZONE_INTRVL_VALUE ADD CONSTRAINT WZIV_PK PRIMARY KEY
(
UWI,
INTERVAL_SOURCE,
INTERVAL_ID,
ZONE_ID,
ZONE_SOURCE,
ZONE_VALUE_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WO_PK'
ALTER TABLE WORK_ORDER ADD CONSTRAINT WO_PK PRIMARY KEY
(
WORK_ORDER_ID
);

\qecho 'CREATING PRIMARY KEY WOAL_PK'
ALTER TABLE WORK_ORDER_ALIAS ADD CONSTRAINT WOAL_PK PRIMARY KEY
(
WORK_ORDER_ID,
ALIAS_ID
);

\qecho 'CREATING PRIMARY KEY WOBA_PK'
ALTER TABLE WORK_ORDER_BA ADD CONSTRAINT WOBA_PK PRIMARY KEY
(
WORK_ORDER_ID,
BUSINESS_ASSOCIATE_ID,
BA_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WOCOM_PK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_PK PRIMARY KEY
(
WORK_ORDER_ID,
COMPONENT_ID
);

\qecho 'CREATING PRIMARY KEY WOC_PK'
ALTER TABLE WORK_ORDER_CONDITION ADD CONSTRAINT WOC_PK PRIMARY KEY
(
WORK_ORDER_ID,
CONDITION_OBS_NO
);

\qecho 'CREATING PRIMARY KEY WOD_PK'
ALTER TABLE WORK_ORDER_DELIVERY ADD CONSTRAINT WOD_PK PRIMARY KEY
(
WORK_ORDER_ID,
DELIVERY_ID
);

\qecho 'CREATING PRIMARY KEY WODC_PK'
ALTER TABLE WORK_ORDER_DELIVERY_COMP ADD CONSTRAINT WODC_PK PRIMARY KEY
(
WORK_ORDER_ID,
DELIVERY_ID,
COMPONENT_ID
);

\qecho 'CREATING PRIMARY KEY WOI_PK'
ALTER TABLE WORK_ORDER_INSTRUCTION ADD CONSTRAINT WOI_PK PRIMARY KEY
(
WORK_ORDER_ID,
INSTRUCTION_ID
);

\qecho 'CREATING PRIMARY KEY WOIC_PK'
ALTER TABLE WORK_ORDER_INST_COMP ADD CONSTRAINT WOIC_PK PRIMARY KEY
(
WORK_ORDER_ID,
INSTRUCTION_ID,
COMPONENT_ID
);

\qecho 'CREATING PRIMARY KEY WOX_PK'
ALTER TABLE WORK_ORDER_XREF ADD CONSTRAINT WOX_PK PRIMARY KEY
(
WORK_ORDER_ID,
WORK_ORDER_XREF_ID
);

\qecho 'CREATING PRIMARY KEY Z_PK'
ALTER TABLE ZONE ADD CONSTRAINT Z_PK PRIMARY KEY
(
ZONE_ID,
SOURCE
);

\qecho 'CREATING PRIMARY KEY Z_PROD_PK'
ALTER TABLE Z_PRODUCT ADD CONSTRAINT Z_PROD_PK PRIMARY KEY
(
PRODUCT_TYPE
);

\qecho 'CREATING PRIMARY KEY Z_PRODC_PK'
ALTER TABLE Z_PRODUCT_COMPOSITION ADD CONSTRAINT Z_PRODC_PK PRIMARY KEY
(
CONVERSION_ID
);

\qecho 'CREATING PRIMARY KEY Z_R_OBT_PK'
ALTER TABLE Z_R_OIL_BASE_TYPE ADD CONSTRAINT Z_R_OBT_PK PRIMARY KEY
(
OIL_BASE_TYPE
);

\qecho 'CREATING PRIMARY KEY Z_R_OTP_PK'
ALTER TABLE Z_R_OIL_TYPE ADD CONSTRAINT Z_R_OTP_PK PRIMARY KEY
(
OIL_TYPE
);

\qecho 'CREATING PRIMARY KEY Z_R_SWT_PK'
ALTER TABLE Z_R_SAMPLE_WATER_TYPE ADD CONSTRAINT Z_R_SWT_PK PRIMARY KEY
(
SAMPLE_WATER_TYPE
);

\qecho 'CREATING PRIMARY KEY Z_R_WT_PK'
ALTER TABLE Z_R_WATER_TYPE ADD CONSTRAINT Z_R_WT_PK PRIMARY KEY
(
WATER_TYPE
);

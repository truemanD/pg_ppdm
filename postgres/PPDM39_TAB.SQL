\qecho 'CREATING TABLE ANL_ACCURACY'
CREATE TABLE anl_accuracy
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
ACCURACY_OBS_NO INT,
ACCURACY_DESC VARCHAR(240),
ACCURACY_TYPE VARCHAR(40),
ACTIVE_IND VARCHAR(1),
CALCULATED_IND VARCHAR(1),
CALCULATE_METHOD_ID VARCHAR(40),
CONFIDENCE_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MEASURED_VALUE_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
RAW_VALUE_IND VARCHAR(1),
REFERENCED_COLUMN_NAME VARCHAR(30),
REFERENCED_PPDM_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
REPEATABILITY_TYPE VARCHAR(40),
REPORTED_IND VARCHAR(1),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_ANALYSIS_BATCH'
CREATE TABLE anl_analysis_batch
(
BATCH_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BATCH_DESC VARCHAR(240),
BATCH_NAME VARCHAR(255),
BATCH_REF_NUM VARCHAR(30),
CREATE_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SAMPLE_COUNT BIGINT,
SOURCE VARCHAR(40),
STANDARD_SAMPLE_COUNT BIGINT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_ANALYSIS_REPORT'
CREATE TABLE anl_analysis_report
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ANALYSIS_DATE TIMESTAMP(0),
ANALYSIS_PURPOSE VARCHAR(1024),
ANALYSIS_QUALITY VARCHAR(40),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
BASE_STRAT_UNIT_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
RECEIVED_DATE TIMESTAMP(0),
REMARK VARCHAR(2000),
REPORTED_DATE TIMESTAMP(0),
REPORTED_TVD DECIMAL(10,5),
REPORTED_TVD_OUOM VARCHAR(40),
SAMPLE_DATE TIMESTAMP(0),
SAMPLE_LOCATION VARCHAR(40),
START_DATE TIMESTAMP(0),
STRAT_NAME_SET_ID VARCHAR(40),
STUDY_TYPE VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
TOP_STRAT_UNIT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_ANALYSIS_STEP'
CREATE TABLE anl_analysis_step
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
STEP_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
ANALYSIS_PHASE VARCHAR(40),
ANL_DATE TIMESTAMP(0),
COMPLETE_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FINAL_VOLUME DECIMAL(14,4),
FINAL_VOLUME_OUOM VARCHAR(40),
FINAL_VOLUME_PERCENT DECIMAL(15,12),
FINAL_WEIGHT DECIMAL(10,5),
FINAL_WEIGHT_OUOM VARCHAR(40),
METHOD_ID VARCHAR(40),
METHOD_SET_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROBLEM_IND VARCHAR(1),
RECEIVED_DATE TIMESTAMP(0),
RECOVERED_PERCENT DECIMAL(15,12),
REMARK VARCHAR(2000),
REPORTED_DATE TIMESTAMP(0),
RESULTS_RECEIVED_DATE TIMESTAMP(0),
RESULTS_RECEIVED_IND VARCHAR(1),
SAMPLE_FRACTION_TYPE VARCHAR(40),
SAMPLE_QUALITY VARCHAR(40),
SAMPLE_QUALITY_DESC VARCHAR(1024),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
STEP_COMPLETED_IND VARCHAR(1),
STEP_DESC VARCHAR(240),
STEP_QUALITY_DESC VARCHAR(240),
STEP_QUALITY_TYPE VARCHAR(40),
STEP_REQUESTED_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_BA'
CREATE TABLE anl_ba
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
BA_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ANALYSIS_BA_ID VARCHAR(40),
BA_ROLE_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PROBLEM_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_CALC_ALIAS'
CREATE TABLE anl_calc_alias
(
CALCULATE_METHOD_ID VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
ANL_METHOD_ID VARCHAR(40),
ANL_METHOD_SET_ID VARCHAR(40),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_CALC_EQUIV'
CREATE TABLE anl_calc_equiv
(
CALCULATE_METHOD_ID1 VARCHAR(40) NOT NULL,
CALCULATE_METHOD_ID2 VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CALCULATION_EQUIV_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_CALC_FORMULA'
CREATE TABLE anl_calc_formula
(
CALCULATE_METHOD_ID VARCHAR(40) NOT NULL,
FORMULA_PART_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ASSIGNED_VARIABLE VARCHAR(20),
COLUMN_NAME VARCHAR(30),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SUBSTANCE_ID VARCHAR(40),
SYSTEM_ID VARCHAR(40),
TABLE_NAME VARCHAR(30),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_CALC_METHOD'
CREATE TABLE anl_calc_method
(
CALCULATE_METHOD_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CALCULATE_FORMULA VARCHAR(1024),
CALC_SET_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FORMULA_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PREFERRED_NAME VARCHAR(30),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_CALC_SET'
CREATE TABLE anl_calc_set
(
CALC_SET_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
METHOD_ID VARCHAR(40),
METHOD_SET_ID VARCHAR(40),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_NAME VARCHAR(255),
REMARK VARCHAR(2000),
SOFTWARE_APPLICATION_ID VARCHAR(40),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_COAL_RANK'
CREATE TABLE anl_coal_rank
(
COAL_RANK_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
COAL_RANK_SCHEME_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_COAL_RANK_SCHEME'
CREATE TABLE anl_coal_rank_scheme
(
COAL_RANK_SCHEME_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
COAL_RANK_SCHEME_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
SCHEME_NAME VARCHAR(30),
SCHEME_OWNER_BA_ID VARCHAR(40),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_COMPONENT'
CREATE TABLE anl_component
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
COMPONENT_TYPE VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
CORE_ID VARCHAR(40),
CORE_TYPE VARCHAR(40),
DESCRIPTION_OBS_NO INT,
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_FORM_OBS_NO INT,
RATE_SCHEDULE_ID VARCHAR(40),
RECOVERY_OBS_NO INT,
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
REPORTED_IND VARCHAR(1),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
RUN_NUM VARCHAR(4),
SAMPLE_DATE TIMESTAMP(0),
SAMPLE_ID VARCHAR(40),
SAMPLE_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STEP_SEQ_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
STRING_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
TEST_NUM VARCHAR(4),
TEST_SOURCE VARCHAR(40),
TEST_TYPE VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_ID VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_CORE_DESC_ID VARCHAR(40),
WELL_TEST_ID VARCHAR(40),
WELL_TEST_RECOVERY_ID VARCHAR(40),
WELL_TEST_SOURCE VARCHAR(40),
WELL_TEST_TYPE VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_DETAIL'
CREATE TABLE anl_detail
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
DETAIL_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ANL_DETAIL_TYPE VARCHAR(40),
AVERAGE_RATIO_VALUE DOUBLE PRECISION,
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM VARCHAR(40),
AVERAGE_VALUE_UOM VARCHAR(40),
CALCULATED_IND VARCHAR(1),
CALCULATE_METHOD_ID VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_DATE TIMESTAMP(0),
MAX_RATIO_VALUE DOUBLE PRECISION,
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MEASUREMENT_TYPE VARCHAR(40),
MIN_DATE TIMESTAMP(0),
MIN_RATIO_VALUE DOUBLE PRECISION,
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROBLEM_IND VARCHAR(1),
REFERENCE_VALUE DOUBLE PRECISION,
REFERENCE_VALUE_OUOM VARCHAR(40),
REFERENCE_VALUE_TYPE VARCHAR(40),
REFERENCE_VALUE_UOM VARCHAR(40),
REMARK VARCHAR(2000),
REPORTED_IND VARCHAR(1),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
SUBSTANCE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_ELEMENTAL'
CREATE TABLE anl_elemental
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
ELEMENTAL_ANL_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ASH_ELEMENT DECIMAL(10,5),
ASH_ELEMENT_OUOM VARCHAR(40),
C_ELEMENT DECIMAL(10,5),
C_ELEMENT_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FE_ELEMENT DECIMAL(10,5),
FE_ELEMENT_OUOM VARCHAR(40),
H_ELEMENT DECIMAL(10,5),
H_ELEMENT_OUOM VARCHAR(40),
MEASUREMENT_TYPE VARCHAR(40),
NI_ELEMENT DECIMAL(10,5),
NI_ELEMENT_OUOM VARCHAR(40),
N_ELEMENT DECIMAL(10,5),
N_ELEMENT_OUOM VARCHAR(40),
O_ELEMENT DECIMAL(10,5),
O_ELEMENT_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROBLEM_IND VARCHAR(1),
REMARK VARCHAR(2000),
REPORTED_H_C_RATIO DECIMAL(10,5),
REPORTED_H_C_RATIO_OUOM VARCHAR(40),
REPORTED_NI_C_RATIO DECIMAL(10,5),
REPORTED_NI_C_RATIO_OUOM VARCHAR(40),
REPORTED_N_C_RATIO DECIMAL(10,5),
REPORTED_N_C_RATIO_OUOM VARCHAR(40),
REPORTED_O_C_RATIO DECIMAL(10,5),
REPORTED_O_C_RATIO_OUOM VARCHAR(40),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
S_ELEMENT DECIMAL(10,5),
S_ELEMENT_OUOM VARCHAR(40),
V_ELEMENT DECIMAL(10,5),
V_ELEMENT_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_ELEMENTAL_DETAIL'
CREATE TABLE anl_elemental_detail
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
DETAIL_ANL_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ANALYSIS_VALUE DECIMAL(10,5),
ANALYSIS_VALUE_OUOM VARCHAR(40),
ANALYSIS_VALUE_TYPE VARCHAR(40),
ANALYSIS_VALUE_UOM VARCHAR(40),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM VARCHAR(40),
AVERAGE_VALUE_UOM VARCHAR(40),
CALCULATED_IND VARCHAR(1),
CALCULATE_METHOD_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MEASUREMENT_TYPE VARCHAR(40),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
REPORTED_IND VARCHAR(1),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
SUBSTANCE_ID VARCHAR(40),
VALID_VALUE_IND VARCHAR(1),
VALID_VALUE_REMARK VARCHAR(2000),
VALUE_CODE VARCHAR(40),
VALUE_DESC VARCHAR(240),
VALUE_QUALITY VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_EQUIP'
CREATE TABLE anl_equip
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
EQUIP_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CALLIBRATION_RECORD VARCHAR(2000),
CATALOGUE_EQUIP_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIP_ID VARCHAR(40),
EQUIP_ROLE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
LAB_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROBLEM_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_FLUOR'
CREATE TABLE anl_fluor
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
FLUOR_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
COLOR_REMARK VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FLUOR_PERCENT DECIMAL(15,12),
FLUOR_REMARK VARCHAR(2000),
FROM_COLOR VARCHAR(40),
FROM_COLOR_FREQUENCY DECIMAL(10,5),
FROM_COLOR_FREQUENCY_UOM VARCHAR(40),
FROM_COLOR_INTENSITY DECIMAL(10,5),
FROM_COLOR_INTENSITY_UOM VARCHAR(40),
FROM_MOBILITY_TYPE VARCHAR(40),
HYDROCARBON_SHOW_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PROBLEM_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
TO_COLOR VARCHAR(40),
TO_COLOR_FREQUENCY DECIMAL(10,5),
TO_COLOR_FREQUENCY_UOM VARCHAR(40),
TO_COLOR_INTENSITY DECIMAL(10,5),
TO_COLOR_INTENSITY_UOM VARCHAR(40),
TO_MOBILITY_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_GAS_ANALYSIS'
CREATE TABLE anl_gas_analysis
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
GAS_ANL_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FLUID_TYPE VARCHAR(40),
GAS_GRAVITY DECIMAL(10,5),
GAS_GRAVITY_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PROBLEM_IND VARCHAR(1),
PSEUDO_CRITICAL_PRESS DECIMAL(8,2),
PSEUDO_CRITICAL_PRESS_OUOM VARCHAR(40),
PSEUDO_CRITICAL_TEMP DECIMAL(10,5),
PSEUDO_CRITICAL_TEMP_OUOM VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_GAS_CHRO'
CREATE TABLE anl_gas_chro
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
ANL_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ANL_VALUE DOUBLE PRECISION,
ANL_VALUE_CODE VARCHAR(40),
ANL_VALUE_OUOM VARCHAR(40),
ANL_VALUE_REMARK VARCHAR(2000),
ANL_VALUE_TYPE VARCHAR(40),
ANL_VALUE_UOM VARCHAR(40),
CALCULATED_IND VARCHAR(1),
CALCULATE_METHOD_ID VARCHAR(40),
DAUGHTER_ION_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
ERROR_BAR_VALUE DECIMAL(10,5),
ERROR_BAR_VALUE_OUOM VARCHAR(40),
ERROR_BAR_VALUE_UOM VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
GAS_ANL_VALUE_TYPE VARCHAR(40),
MEASUREMENT_TYPE VARCHAR(40),
PARENT_ION_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PROBLEM_IND VARCHAR(1),
QUALIFIER_ION_ID VARCHAR(40),
QUANTIF_ADDITIVE_AMT DECIMAL(10,5),
QUANTIF_ADDITIVE_AMT_OUOM VARCHAR(40),
QUANTIF_ADDITIVE_AMT_UOM VARCHAR(40),
QUANTIF_ADDITIVE_DESC VARCHAR(240),
QUANTIF_ADDITIVE_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
REPORTED_IND VARCHAR(1),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
SUBSTANCE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_GAS_COMPOSITION'
CREATE TABLE anl_gas_composition
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
GAS_ANL_COMPOSITION_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CALCULATED_IND VARCHAR(1),
CALCULATE_METHOD_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NOT_PRESENT_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
PROBLEM_IND VARCHAR(1),
REMARK VARCHAR(2000),
REPORTED_IND VARCHAR(1),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
SUBSTANCE_AMOUNT DECIMAL(10,5),
SUBSTANCE_AMOUNT_OUOM VARCHAR(40),
SUBSTANCE_AMOUNT_UOM VARCHAR(40),
SUBSTANCE_ID VARCHAR(40),
SUBSTANCE_PERCENT DECIMAL(15,12),
TRACE_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_GAS_DETAIL'
CREATE TABLE anl_gas_detail
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
GAS_ANL_DETAIL_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ANALYSIS_PROPERTY VARCHAR(40),
ANALYSIS_VALUE DOUBLE PRECISION,
ANALYSIS_VALUE_CODE VARCHAR(40),
ANALYSIS_VALUE_OUOM VARCHAR(40),
ANALYSIS_VALUE_UOM VARCHAR(40),
ANL_VALUE_REMARK VARCHAR(2000),
CALCULATE_METHOD_ID VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MEASUREMENT_TYPE VARCHAR(40),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
SUBSTANCE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_GAS_HEAT'
CREATE TABLE anl_gas_heat
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
HEAT_CONTENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CALCULATED_IND VARCHAR(1),
CALCULATE_METHOD_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HEAT_CONTENT_METHOD VARCHAR(40),
HEAT_CONTENT_PRESS DECIMAL(8,2),
HEAT_CONTENT_PRESS_OUOM VARCHAR(40),
HEAT_CONTENT_TEMP DECIMAL(10,5),
HEAT_CONTENT_TEMP_OUOM VARCHAR(40),
HEAT_CONTENT_VALUE DOUBLE PRECISION,
HEAT_CONTENT_VALUE_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROBLEM_IND VARCHAR(1),
REMARK VARCHAR(2000),
REPORTED_IND VARCHAR(1),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_GAS_PRESS'
CREATE TABLE anl_gas_press
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
GAS_ANL_PRESS_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CALCULATE_METHOD_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GAUGE_PRESS DECIMAL(8,2),
GAUGE_PRESS_OUOM VARCHAR(40),
GAUGE_TEMP DECIMAL(10,5),
GAUGE_TEMP_OUOM VARCHAR(40),
MEASUREMENT_LOCATION VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROBLEM_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_ISOTOPE'
CREATE TABLE anl_isotope
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
ISOTOPE_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CALCULATE_METHOD_ID VARCHAR(40),
DELTA_NOTATION_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
ISOTOPE_VALUE DECIMAL(10,5),
ISOTOPE_VALUE_OUOM VARCHAR(40),
ISOTOPE_VALUE_UOM VARCHAR(40),
MEASUREMENT_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PROBLEM_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STANDARD_ID VARCHAR(40),
STEP_SEQ_NO INT,
SUBSTANCE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_ISOTOPE_STD'
CREATE TABLE anl_isotope_std
(
STANDARD_ID VARCHAR(40) NOT NULL,
SUBSTANCE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STANDARD_NAME VARCHAR(255),
STANDARD_VALUE DECIMAL(10,5),
STANDARD_VALUE_ERROR DECIMAL(10,5),
STANDARD_VALUE_OUOM VARCHAR(40),
STANDARD_VALUE_UOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_LIQUID_CHRO'
CREATE TABLE anl_liquid_chro
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
CHRO_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
AGED_OIL_USED DECIMAL(10,5),
AGED_OIL_USED_UOM VARCHAR(40),
AGED_WEIGHT_OF_OIL DECIMAL(10,5),
AGED_WEIGHT_OF_OIL_UOM VARCHAR(40),
AROMATIC_HC_VALUE DECIMAL(10,5),
AROMATIC_HC_VALUE_UOM VARCHAR(40),
ASPHALTENE_FREE_VALUE DECIMAL(10,5),
ASPHALTENE_FREE_VALUE_UOM VARCHAR(40),
ASPHALTENE_VALUE DECIMAL(10,5),
ASPHALTENE_VALUE_UOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EOM_USED DECIMAL(10,5),
EOM_USED_UOM VARCHAR(40),
EOM_VALUE DECIMAL(10,5),
EOM_VALUE_UOM VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
LOSS_ON_COLUMN DECIMAL(10,5),
LOSS_ON_COLUMN_UOM VARCHAR(40),
MEASUREMENT_TYPE VARCHAR(40),
NAPHTHENE_VALUE DECIMAL(10,5),
NAPHTHENE_VALUE_UOM VARCHAR(40),
NSO_VALUE DECIMAL(10,5),
NSO_VALUE_UOM VARCHAR(40),
N_ALKANE_FRACTION DECIMAL(10,5),
N_ALKANE_FRACTION_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PROBLEM_IND VARCHAR(1),
REFRACTION_FACTOR DECIMAL(10,5),
REMARK VARCHAR(2000),
REPORTED_HC_FRACTION DECIMAL(10,5),
REPORTED_HC_FRACTION_UOM VARCHAR(40),
REPORTED_HC_IN_TOC DECIMAL(10,5),
REPORTED_HC_IN_TOC_UOM VARCHAR(40),
SATURATED_HC_VALUE DECIMAL(10,5),
SATURATED_HC_VALUE_UOM VARCHAR(40),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
TOTAL_SOLUBLE_EXTRACT DECIMAL(10,5),
TOTAL_SOLUBLE_EXTRACT_UOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_LIQUID_CHRO_DETAIL'
CREATE TABLE anl_liquid_chro_detail
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
DETAIL_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ANL_VALUE DECIMAL(10,5),
ANL_VALUE_OUOM VARCHAR(40),
ANL_VALUE_REMARK VARCHAR(2000),
ANL_VALUE_UOM VARCHAR(40),
CALCULATED_IND VARCHAR(1),
CALCULATE_METHOD_ID VARCHAR(40),
CHRO_PROPERTY_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
ERROR_BAR_VALUE DECIMAL(10,5),
ERROR_BAR_VALUE_OUOM VARCHAR(40),
ERROR_BAR_VALUE_UOM VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
MEASURED_IND VARCHAR(1),
MEASUREMENT_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PROBLEM_IND VARCHAR(1),
QUANTIF_ADDITIVE_AMT DECIMAL(10,5),
QUANTIF_ADDITIVE_AMT_OUOM VARCHAR(40),
QUANTIF_ADDITIVE_AMT_UOM VARCHAR(40),
QUANTIF_ADDITIVE_DESC VARCHAR(240),
QUANTIF_ADDITIVE_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
REPORTED_IND VARCHAR(1),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
SUBSTANCE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_MACERAL'
CREATE TABLE anl_maceral
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
MACERAL_ANL_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LITHOLOGY_DESC VARCHAR(240),
MACERAL_AMOUNT_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PROBLEM_IND VARCHAR(1),
REMARK VARCHAR(2000),
SAMPLE_TOT_MACERAL_VAL DOUBLE PRECISION,
SAMPLE_TOT_MACERAL_VAL_OUOM VARCHAR(40),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
SUBSTANCE_ID VARCHAR(40),
TOTAL_MACERAL_VAL DOUBLE PRECISION,
TOTAL_MACERAL_VAL_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_MACERAL_MATURITY'
CREATE TABLE anl_maceral_maturity
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
MEASUREMENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
COAL_RANK_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FLUOR_COLOR VARCHAR(40),
FLUOR_INTENSITY_DESC VARCHAR(240),
FLUOR_INTENSITY_VALUE DOUBLE PRECISION,
FLUOR_INTENSITY_VALUE_OUOM VARCHAR(40),
MEAN_MAX_REFLECTANCE DOUBLE PRECISION,
MEAN_RANDOM_REFLECTANCE DOUBLE PRECISION,
MEASUREMENTS_COUNT BIGINT,
POPULATION_NAME VARCHAR(255),
POPULATION_NUM VARCHAR(30),
POPULATION_OBS_NO INT,
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PROBLEM_IND VARCHAR(1),
REFLECT_MAX_MEAS_VALUE DOUBLE PRECISION,
REFLECT_MAX_MEAS_VALUE_OUOM VARCHAR(40),
REFLECT_MAX_MEAS_VALUE_UOM VARCHAR(40),
REFLECT_MEAS_VALUE DOUBLE PRECISION,
REFLECT_MEAS_VALUE_OUOM VARCHAR(40),
REFLECT_MEAS_VALUE_UOM VARCHAR(40),
REFLECT_MIN_MEAS_VALUE DOUBLE PRECISION,
REFLECT_MIN_MEAS_VALUE_OUOM VARCHAR(40),
REFLECT_MIN_MEAS_VALUE_UOM VARCHAR(40),
REFLECT_STD_DEV_VALUE DOUBLE PRECISION,
REFL_RANDOM_MEAS_VALUE DOUBLE PRECISION,
REFL_RANDOM_MEAS_VALUE_OUOM VARCHAR(40),
REFL_RANDOM_MEAS_VALUE_UOM VARCHAR(40),
REMARK VARCHAR(2000),
REWORKED_PERCENT DECIMAL(15,12),
SAMPLE_TOT_MACERAL_VAL DOUBLE PRECISION,
SAMPLE_TOT_MACERAL_VAL_OUOM VARCHAR(40),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
SUBSTANCE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_METHOD'
CREATE TABLE anl_method
(
METHOD_SET_ID VARCHAR(40) NOT NULL,
METHOD_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
METHOD_DESC VARCHAR(240),
METHOD_SEQ_NO INT,
METHOD_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREPARATION_CLASS VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_METHOD_ALIAS'
CREATE TABLE anl_method_alias
(
METHOD_SET_ID VARCHAR(40) NOT NULL,
METHOD_ID VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CATALOGUE_EQUIP_ID VARCHAR(40),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_METHOD_EQUIV'
CREATE TABLE anl_method_equiv
(
METHOD_SET_ID1 VARCHAR(40) NOT NULL,
METHOD_ID1 VARCHAR(40) NOT NULL,
METHOD_SET_ID2 VARCHAR(40) NOT NULL,
METHOD_ID2 VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
METHOD_EQUIV_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_METHOD_PARM'
CREATE TABLE anl_method_parm
(
METHOD_SET_ID VARCHAR(40) NOT NULL,
METHOD_ID VARCHAR(40) NOT NULL,
PARAMETER_TYPE VARCHAR(40) NOT NULL,
METHOD_PARM_OBS_NO INT,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
ANL_VALUE_REMARK VARCHAR(2000),
AVERAGE_VALUE DECIMAL(10,5),
AVERAGE_VALUE_OUOM VARCHAR(40),
AVERAGE_VALUE_UOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DECIMAL(10,5),
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MEASUREMENT_TYPE VARCHAR(40),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DECIMAL(10,5),
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_VALUE DECIMAL(10,5),
REFERENCE_VALUE_OUOM VARCHAR(40),
REFERENCE_VALUE_TYPE VARCHAR(40),
REFERENCE_VALUE_UOM VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
SUBSTANCE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_METHOD_SET'
CREATE TABLE anl_method_set
(
METHOD_SET_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
METHOD_SET_NAME VARCHAR(255),
METHOD_SET_TYPE VARCHAR(40),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_OIL_ANALYSIS'
CREATE TABLE anl_oil_analysis
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
OIL_ANALYSIS_OBS_NO INT,
ABSOLUTE_GRAVITY DECIMAL(10,5),
ABSOLUTE_GRAVITY_OUOM VARCHAR(40),
ACTIVE_IND VARCHAR(1),
ASPHALTENE_CONTENT DECIMAL(10,5),
ASPHALTENE_CONTENT_OUOM VARCHAR(40),
ASPH_CONTENT_PREFERRED_IND VARCHAR(1),
ASPH_CONTENT_PROBLEM_IND VARCHAR(1),
ASPH_CONTENT_STEP_SEQ_NO INT,
CHARACTERIZE_FACTOR VARCHAR(20),
CHARACTERIZE_FACTOR_OUOM VARCHAR(40),
CLOUD_POINT_PREFERRED_IND VARCHAR(1),
CLOUD_POINT_PROBLEM_IND VARCHAR(1),
CLOUD_POINT_STEP_SEQ_NO INT,
CLOUD_POINT_TEMP DECIMAL(10,5),
CLOUD_POINT_TEMP_OUOM VARCHAR(40),
DEW_POINT_PREFERRED_IND VARCHAR(1),
DEW_POINT_PROBLEM_IND VARCHAR(1),
DEW_POINT_STEP_SEQ_NO INT,
DEW_POINT_TEMP DECIMAL(10,5),
DEW_POINT_TEMP_OUOM VARCHAR(40),
DISTILLATION_BASE_TYPE VARCHAR(40),
DISTILLATION_PREFERRED_IND VARCHAR(1),
DISTILLATION_PROBLEM_IND VARCHAR(1),
DISTILLATION_STEP_SEQ_NO INT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FLASH_POINT_PREFERRED_IND VARCHAR(1),
FLASH_POINT_PROBLEM_IND VARCHAR(1),
FLASH_POINT_STEP_SEQ_NO INT,
FLASH_POINT_TEMP DECIMAL(10,5),
FLASH_POINT_TEMP_OUOM VARCHAR(40),
GOR DECIMAL(10,5),
GOR_OUOM VARCHAR(40),
MEASURED_PRESSURE DECIMAL(10,5),
MEASURED_PRESSURE_OUOM VARCHAR(40),
MEASURED_VOLUME DECIMAL(10,5),
MEASURED_VOLUME_OUOM VARCHAR(40),
METHOD_TYPE VARCHAR(40),
OIL_ANALYSIS_TEMP DECIMAL(10,5),
OIL_ANALYSIS_TEMP_OUOM VARCHAR(40),
OIL_COLOR VARCHAR(40),
OIL_COLOR_PREFERRED_IND VARCHAR(1),
OIL_COLOR_PROBLEM_IND VARCHAR(1),
OIL_COLOR_STEP_SEQ_NO INT,
OIL_DENSITY DECIMAL(10,5),
OIL_DENSITY_OUOM VARCHAR(40),
OIL_DENSITY_PREFERRED_IND VARCHAR(1),
OIL_DENSITY_PROBLEM_IND VARCHAR(1),
OIL_DENSITY_STEP_SEQ_NO INT,
OIL_GRAVITY DECIMAL(10,5),
OIL_GRAVITY_OUOM VARCHAR(40),
OIL_GRAVITY_PREFERRED_IND VARCHAR(1),
OIL_GRAVITY_STEP_SEQ_NO INT,
OIL_GRAVITY_TEMP DECIMAL(10,5),
OIL_GRAVITY_TEMP_OUOM VARCHAR(40),
OIL_GRAVITY_TEMP_PREFER_IND VARCHAR(1),
OIL_GRAVITY_TEMP_PROB_IND VARCHAR(1),
OIL_GRAVITY_TEMP_STEP_SEQ INT,
OIL_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
RELATIVE_DENSITY DECIMAL(10,5),
RELATIVE_DENSITY_OUOM VARCHAR(40),
RELATIVE_STD_DENSITY DECIMAL(10,5),
RELATIVE_STD_DENSITY_OUOM VARCHAR(40),
REMARK VARCHAR(2000),
RESERVOIR_PRESS DECIMAL(8,2),
RESERVOIR_PRESS_OUOM VARCHAR(40),
RESERVOIR_TEMP DECIMAL(10,5),
RESERVOIR_TEMP_OUOM VARCHAR(40),
SEDIMENT_CONTENT DECIMAL(10,5),
SEDIMENT_CONTENT_OUOM VARCHAR(40),
SEDIMENT_PREFERRED_IND VARCHAR(1),
SEDIMENT_PROBLEM_IND VARCHAR(1),
SEDIMENT_STEP_SEQ_NO INT,
SHRINKAGE_FACTOR DECIMAL(10,5),
SHRINK_FACTOR_PREFERRED_IND VARCHAR(1),
SHRINK_FACTOR_PROBLEM_IND VARCHAR(1),
SHRINK_FACTOR_STEP_SEQ_NO INT,
SOURCE VARCHAR(40),
SULPHUR_CONTENT DECIMAL(10,5),
VAPOUR_PRESS DECIMAL(8,2),
VAPOUR_PRESS_OUOM VARCHAR(40),
VAPOUR_PRESS_TEMP DECIMAL(10,5),
VAPOUR_PRESS_TEMP_OUOM VARCHAR(40),
WATER_CONTENT DECIMAL(10,5),
WATER_CONTENT_OUOM VARCHAR(40),
WAX_CONTENT DECIMAL(10,5),
WAX_CONTENT_OUOM VARCHAR(40),
WAX_CONTENT_PREFERRED_IND VARCHAR(1),
WAX_CONTENT_PROBLEM_IND VARCHAR(1),
WAX_CONTENT_STEP_SEQ_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_OIL_DETAIL'
CREATE TABLE anl_oil_detail
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
DETAIL_ANL_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ANALYSIS_PROPERTY VARCHAR(40),
ANALYSIS_VALUE DOUBLE PRECISION,
ANALYSIS_VALUE_CODE VARCHAR(40),
ANALYSIS_VALUE_OUOM VARCHAR(40),
ANALYSIS_VALUE_UOM VARCHAR(40),
ANL_VALUE_REMARK VARCHAR(2000),
CALCULATED_IND VARCHAR(1),
CALCULATE_METHOD_ID VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MEASUREMENT_TYPE VARCHAR(40),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PROBLEM_IND VARCHAR(1),
REMARK VARCHAR(2000),
REPORTED_IND VARCHAR(1),
SAMPLE_ID VARCHAR(40),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
SUBSTANCE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_OIL_DISTILL'
CREATE TABLE anl_oil_distill
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
DSTL_SUMMARY_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ATMOSP_DSTL_PRESS DECIMAL(8,2),
ATMOSP_DSTL_PRESS_OUOM VARCHAR(40),
ATMOSP_DSTL_TEMP DECIMAL(10,5),
ATMOSP_DSTL_TEMP_OUOM VARCHAR(40),
CALCULATED_IND VARCHAR(1),
CALCULATE_METHOD_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FINAL_BOIL_PT_TEMP DECIMAL(10,5),
FINAL_BOIL_PT_TEMP_OUOM VARCHAR(40),
MEASUREMENT_TEMP DECIMAL(10,5),
MEASUREMENT_TEMP_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PROBLEM_IND VARCHAR(1),
REMARK VARCHAR(2000),
REPORTED_IND VARCHAR(1),
SOURCE VARCHAR(40),
START_BOIL_PT_TEMP DECIMAL(10,5),
START_BOIL_PT_TEMP_OUOM VARCHAR(40),
STEP_SEQ_NO INT,
SUBSTANCE_ID VARCHAR(40),
VOLUME_FRACTION_TYPE VARCHAR(40),
VOL_FRACTION_TEMP DECIMAL(10,5),
VOL_FRACTION_TEMP_OUOM VARCHAR(40),
VOL_FRACTION_VALUE DECIMAL(10,5),
VOL_FRACTION_VALUE_OUOM VARCHAR(40),
WEIGHT_CUT DECIMAL(10,5),
WEIGHT_CUT_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_OIL_FRACTION'
CREATE TABLE anl_oil_fraction
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
DISTILL_FRACTION_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CALCULATED_IND VARCHAR(1),
CALCULATE_METHOD_ID VARCHAR(40),
DISTILL_TEMP DECIMAL(10,5),
DISTILL_TEMP_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PROBLEM_IND VARCHAR(1),
REMARK VARCHAR(2000),
REPORTED_IND VARCHAR(1),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
SUBSTANCE_ID VARCHAR(40),
VOL_FRACTION_DISTILLED DECIMAL(10,5),
VOL_FRACTION_DISTILLED_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_OIL_VISCOSITY'
CREATE TABLE anl_oil_viscosity
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
VISCOSITY_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OIL_TEMPERATURE DECIMAL(10,5),
OIL_TEMPERATURE_OUOM VARCHAR(40),
OIL_TYPE VARCHAR(40),
OIL_VISCOSITY DECIMAL(8,3),
OIL_VISCOSITY_OUOM VARCHAR(40),
OIL_VISCOSITY_UOM VARCHAR(40),
POUR_POINT_TEMPERATURE DECIMAL(10,5),
POUR_POINT_TEMPERATURE_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
VISCOSITY_PRESS DECIMAL(8,2),
VISCOSITY_PRESS_OUOM VARCHAR(40),
VISCOSITY_TEMP DECIMAL(10,5),
VISCOSITY_TEMP_OUOM VARCHAR(40),
VISCOSITY_VALUE DECIMAL(8,3),
VISCOSITY_VALUE_OUOM VARCHAR(40),
VISCOSITY_VALUE_UOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_PALEO'
CREATE TABLE anl_paleo
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
PALYNOLOGY_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
AMOUNT_TYPE VARCHAR(40),
CALCULATED_IND VARCHAR(1),
CALCULATE_METHOD_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PROBLEM_IND VARCHAR(1),
REMARK VARCHAR(2000),
REPORTED_IND VARCHAR(1),
SAMPLE_TOTAL_VALUE DOUBLE PRECISION,
SAMPLE_TOTAL_VALUE_UOM VARCHAR(40),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
SUBSTANCE_ID VARCHAR(40),
TOTAL_VALUE DOUBLE PRECISION,
TOTAL_VALUE_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_PALEO_MATURITY'
CREATE TABLE anl_paleo_maturity
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
MATURATION_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FLUOR_COLOR VARCHAR(40),
FLUOR_INTENSITY_DESC VARCHAR(240),
FLUOR_INTENSITY_VALUE DOUBLE PRECISION,
FLUOR_INTENSITY_VALUE_OUOM VARCHAR(40),
FLUOR_INTENSITY_VALUE_UOM VARCHAR(40),
MATURITY_METHOD_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PROBLEM_IND VARCHAR(1),
REMARK VARCHAR(2000),
SCI_COLOR VARCHAR(40),
SCI_MAX DOUBLE PRECISION,
SCI_MAX_OUOM VARCHAR(40),
SCI_MAX_UOM VARCHAR(40),
SCI_MIN DOUBLE PRECISION,
SCI_MIN_OUOM VARCHAR(40),
SCI_MIN_UOM VARCHAR(40),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
SUBSTANCE_ID VARCHAR(40),
TAI_COLOR VARCHAR(40),
TAI_MAX DOUBLE PRECISION,
TAI_MAX_OUOM VARCHAR(40),
TAI_MAX_UOM VARCHAR(40),
TAI_MIN DOUBLE PRECISION,
TAI_MIN_OUOM VARCHAR(40),
TAI_MIN_UOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_PARM'
CREATE TABLE anl_parm
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
PARM_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ANL_VALUE_REMARK VARCHAR(2000),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM VARCHAR(40),
AVERAGE_VALUE_UOM VARCHAR(40),
CAT_EQUIP_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIP_ID VARCHAR(40),
EQUIP_OBS_NO INT,
EXPIRY_DATE TIMESTAMP(0),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
METHOD_ID VARCHAR(40),
METHOD_PARM_OBS_NO INT,
METHOD_SET_ID VARCHAR(40),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PARAMETER_BA_ID VARCHAR(40),
PARAMETER_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_VALUE DOUBLE PRECISION,
REFERENCE_VALUE_OUOM VARCHAR(40),
REFERENCE_VALUE_TYPE VARCHAR(40),
REFERENCE_VALUE_UOM VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
SUBSTANCE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_PROBLEM'
CREATE TABLE anl_problem
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
PROBLEM_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_SET_ID VARCHAR(40),
ANL_PROBLEM_IND VARCHAR(1),
BA_PROBLEM_IND VARCHAR(1),
CONFIDENCE_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIP_PROBLEM_IND VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
METHOD_ID VARCHAR(40),
METHOD_PROBLEM_IND VARCHAR(1),
PERCENT_OF_SAMPLE DECIMAL(15,12),
PPDM_GUID VARCHAR(38),
PROBLEM_DESC VARCHAR(240),
PROBLEM_RESULT VARCHAR(40),
PROBLEM_RESULT_DESC VARCHAR(1024),
PROBLEM_SEVERITY VARCHAR(40),
PROBLEM_SEVERITY_DESC VARCHAR(1024),
PROBLEM_TYPE VARCHAR(40),
REFERENCED_COLUMN_NAME VARCHAR(30),
REFERENCED_PPDM_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESOLUTION_METHOD VARCHAR(40),
RESOLUTION_METHOD_DESC VARCHAR(1024),
RESOLUTION_STEP_SEQ_NO INT,
RESOLVED_BY_BA_ID VARCHAR(40),
SAMPLE_PROBLEM_IND VARCHAR(1),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
VALID_PROBLEM_OBS_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_PYROLYSIS'
CREATE TABLE anl_pyrolysis
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
PYROLYSIS_ANL_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CALCULATED_IND VARCHAR(1),
CALCULATE_METHOD_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_TEMPERATURE DECIMAL(10,5),
MAX_TEMPERATURE_OUOM VARCHAR(40),
MAX_TEMPERATURE_UOM VARCHAR(40),
PEAK_TEMPERATURE DECIMAL(10,5),
PEAK_TEMPERATURE_OUOM VARCHAR(40),
PEAK_TEMPERATURE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PROBLEM_IND VARCHAR(1),
REMARK VARCHAR(2000),
REPORTED_IND VARCHAR(1),
REP_BITUMEN_INDEX DECIMAL(10,5),
REP_BITUMEN_INDEX_OUOM VARCHAR(40),
REP_BITUMEN_INDEX_UOM VARCHAR(40),
REP_HYDROGEN_INDEX DECIMAL(10,5),
REP_HYDROGEN_INDEX_OUOM VARCHAR(40),
REP_HYDROGEN_INDEX_UOM VARCHAR(40),
REP_OXYGEN_INDEX DECIMAL(10,5),
REP_OXYGEN_INDEX_OUOM VARCHAR(40),
REP_OXYGEN_INDEX_UOM VARCHAR(40),
REP_PRODUCTION_INDEX DECIMAL(10,5),
REP_PYROLISABLE_CARBON DECIMAL(10,5),
REP_PYROLISABLE_CARBON_OUOM VARCHAR(40),
REP_PYROLISABLE_CARBON_UOM VARCHAR(40),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
S_0 DECIMAL(10,5),
S_0_OUOM VARCHAR(40),
S_1 DECIMAL(10,5),
S_1_OUOM VARCHAR(40),
S_2 DECIMAL(10,5),
S_2_OUOM VARCHAR(40),
S_3 DECIMAL(10,5),
S_3_OUOM VARCHAR(40),
S_4 DECIMAL(10,5),
S_4_OUOM VARCHAR(40),
S_5 DECIMAL(10,5),
S_5_OUOM VARCHAR(40),
TOTAL_ORGANIC_CARBON DECIMAL(10,5),
TOTAL_ORGANIC_CARBON_OUOM VARCHAR(40),
TOTAL_ORGANIC_CARBON_UOM VARCHAR(40),
VALID_ANL_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_QGF_TSF'
CREATE TABLE anl_qgf_tsf
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
MEASUREMENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EMISSION_INTENSITY DECIMAL(10,5),
EMISSION_INTENSITY_UOM VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PROBLEM_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
WAVELENGTH_EMISSION DECIMAL(10,5),
WAVELENGTH_EMISSION_UOM VARCHAR(40),
WAVELENTH_EXCITATION DECIMAL(10,5),
WAVELENTH_EXCITATION_UOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_REMARK'
CREATE TABLE anl_remark
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REFERENCED_COLUMN_NAME VARCHAR(30),
REFERENCED_PPDM_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
REMARK_BA_ID VARCHAR(40),
REMARK_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_REPORT_ALIAS'
CREATE TABLE anl_report_alias
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_SAMPLE'
CREATE TABLE anl_sample
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
SAMPLE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BATCH_ID VARCHAR(40),
CREATED_BY_STEP_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SAMPLE_DESCRIPTION VARCHAR(1024),
SOURCE VARCHAR(40),
STANDARD_SAMPLE_IND VARCHAR(1),
STEP_SEQ_NO INT,
USED_BY_STEP_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_STEP_XREF'
CREATE TABLE anl_step_xref
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
STEP_SEQ_NO1 INT,
STEP_SEQ_NO2 INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STEP_XREF_REASON VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_TABLE_RESULT'
CREATE TABLE anl_table_result
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
PPDM_SYSTEM_ID VARCHAR(40) NOT NULL,
PPDM_TABLE_NAME VARCHAR(30) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_VALID_BA'
CREATE TABLE anl_valid_ba
(
METHOD_SET_ID VARCHAR(40) NOT NULL,
METHOD_ID VARCHAR(40) NOT NULL,
VALID_BA_ID VARCHAR(40) NOT NULL,
VALID_BA_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BA_ROLE_TYPE VARCHAR(40),
CONFIDENCE_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_VALID_EQUIP'
CREATE TABLE anl_valid_equip
(
METHOD_SET_ID VARCHAR(40) NOT NULL,
METHOD_ID VARCHAR(40) NOT NULL,
EQUIP_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CATALOGUE_EQUIP_ID VARCHAR(40),
CONFIDENCE_TYPE VARCHAR(40),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIP_ID VARCHAR(40),
EQUIP_ROLE VARCHAR(40),
EQUIP_SETTING VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_VALID_MEASURE'
CREATE TABLE anl_valid_measure
(
METHOD_SET_ID VARCHAR(40) NOT NULL,
METHOD_ID VARCHAR(40) NOT NULL,
MEASUREMENT_TYPE VARCHAR(40) NOT NULL,
VALID_VALUE_OBS_NO INT,
ACCURACY_TYPE VARCHAR(40),
ACTIVE_IND VARCHAR(1),
AVERAGE_RATIO_VALUE DOUBLE PRECISION,
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM VARCHAR(40),
AVERAGE_VALUE_UOM VARCHAR(40),
CALCULATE_METHOD_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAXIMUM_RATIO_VALUE DOUBLE PRECISION,
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MINIMUM_RATIO_VALUE DOUBLE PRECISION,
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
MISSING_REPRESENTATION VARCHAR(40),
NULL_REPRESENTATION VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_VALUE DOUBLE PRECISION,
REFERENCE_VALUE_OUOM VARCHAR(40),
REFERENCE_VALUE_UOM VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SUBSTANCE_ID VARCHAR(40),
VALID_DESC VARCHAR(240),
VALID_VALUE_TEXT VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_VALID_PROBLEM'
CREATE TABLE anl_valid_problem
(
METHOD_SET_ID VARCHAR(40) NOT NULL,
METHOD_ID VARCHAR(40) NOT NULL,
PROBLEM_OBS_NO INT,
ACCURACY_TYPE VARCHAR(40),
ACTIVE_IND VARCHAR(1),
CONFIDENCE_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PROBLEM_DESC VARCHAR(240),
PROBLEM_RESULT VARCHAR(40),
PROBLEM_SEVERITY VARCHAR(2000),
PROBLEM_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
RESOLUTION_METHOD VARCHAR(2000),
SOURCE VARCHAR(40),
SUBSTANCE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_VALID_TABLE_RESULT'
CREATE TABLE anl_valid_table_result
(
METHOD_SET_ID VARCHAR(40) NOT NULL,
METHOD_ID VARCHAR(40) NOT NULL,
PPDM_SYSTEM_ID VARCHAR(40) NOT NULL,
PPDM_TABLE_NAME VARCHAR(30) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MANDATORY_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_VALID_TOLERANCE'
CREATE TABLE anl_valid_tolerance
(
METHOD_SET_ID VARCHAR(40) NOT NULL,
METHOD_ID VARCHAR(40) NOT NULL,
EQUIP_OBS_NO INT,
TOLERANCE_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_TOLERANCE DOUBLE PRECISION,
MAX_TOLERANCE_OUOM VARCHAR(40),
MAX_TOLERANCE_REP DOUBLE PRECISION,
MAX_TOLERANCE_UOM VARCHAR(40),
MIN_TOLERANCE DOUBLE PRECISION,
MIN_TOLERANCE_OUOM VARCHAR(40),
MIN_TOLERANCE_REP VARCHAR(20),
MIN_TOLERANCE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SUBSTANCE_ID VARCHAR(40),
TOLERANCE_DESC VARCHAR(1024),
TOLERANCE_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_WATER_ANALYSIS'
CREATE TABLE anl_water_analysis
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
WATER_ANALYSIS_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BARIUM DECIMAL(10,5),
BARIUM_OUOM VARCHAR(40),
BICARBONATE DECIMAL(10,5),
BICARBONATE_OUOM VARCHAR(40),
BORON DECIMAL(10,5),
BORON_OUOM VARCHAR(40),
BROMINE DECIMAL(10,5),
BROMINE_OUOM VARCHAR(40),
CALCIUM DECIMAL(10,5),
CALCIUM_OUOM VARCHAR(40),
CARBONATE DECIMAL(10,5),
CARBONATE_OUOM VARCHAR(40),
CHLORINE DECIMAL(10,5),
CHLORINE_OUOM VARCHAR(40),
CONDUCTIVITY DECIMAL(10,5),
CONDUCTIVITY_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HYDROGEN_SULPHIDE DECIMAL(10,5),
HYDROGEN_SULPHIDE_OUOM VARCHAR(40),
HYDROXIDE DECIMAL(10,5),
HYDROXIDE_OUOM VARCHAR(40),
IODINE DECIMAL(10,5),
IODINE_OUOM VARCHAR(40),
ION_OUOM VARCHAR(40),
ION_UOM VARCHAR(40),
IRON DECIMAL(10,5),
IRON_OUOM VARCHAR(40),
MAGNESIUM DECIMAL(10,5),
MAGNESIUM_OUOM VARCHAR(40),
ORGANICS_DESC VARCHAR(1024),
PH_OBSERVED DECIMAL(10,5),
PH_TEMP DECIMAL(10,5),
PH_TEMP_OUOM VARCHAR(40),
POTASSIUM DECIMAL(10,5),
POTASSIUM_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PROBLEM_IND VARCHAR(1),
RECOVERY_DESC VARCHAR(1024),
REFRACTIVE_INDEX DECIMAL(10,5),
REFRACTIVE_INDEX_TEMP DECIMAL(10,5),
REFRACTIVE_INDEX_TEMP_OUOM VARCHAR(40),
REMARK VARCHAR(2000),
RESERVOIR_TEMPERATURE DECIMAL(10,5),
RESERVOIR_TEMPERATURE_OUOM VARCHAR(40),
RW_TEMPERATURE DECIMAL(10,5),
RW_TEMPERATURE_OUOM VARCHAR(40),
SAMPLE_WATER_TYPE VARCHAR(40),
SODIUM DECIMAL(10,5),
SODIUM_OUOM VARCHAR(40),
SODIUM_POTASSIUM DECIMAL(10,5),
SODIUM_POTASSIUM_OUOM VARCHAR(40),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
STRONTIUM DECIMAL(10,5),
STRONTIUM_OUOM VARCHAR(40),
SULPHATE DECIMAL(10,5),
SULPHATE_OUOM VARCHAR(40),
WATER_DENSITY DECIMAL(10,5),
WATER_DENSITY_OUOM VARCHAR(40),
WATER_PH DECIMAL(10,5),
WATER_RESISTIVITY DECIMAL(10,5),
WATER_RESISTIVITY_OUOM VARCHAR(40),
WATER_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_WATER_DETAIL'
CREATE TABLE anl_water_detail
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
DETAIL_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ANALYSIS_PRESS DECIMAL(8,2),
ANALYSIS_PRESS_OUOM VARCHAR(40),
ANALYSIS_PRESS_UOM VARCHAR(40),
ANALYSIS_TEMP DECIMAL(10,5),
ANALYSIS_TEMP_OUOM VARCHAR(40),
ANALYSIS_TEMP_UOM VARCHAR(40),
ANALYSIS_VALUE DOUBLE PRECISION,
ANALYSIS_VALUE_OUOM VARCHAR(40),
ANALYSIS_VALUE_TYPE VARCHAR(40),
ANALYSIS_VALUE_UOM VARCHAR(40),
ANL_VALUE_REMARK VARCHAR(2000),
CALCULATED_VALUE_IND VARCHAR(1),
CALCULATE_METHOD_ID VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MEASURED_VALUE_IND VARCHAR(1),
MEASUREMENT_TYPE VARCHAR(40),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PROBLEM_IND VARCHAR(1),
REMARK VARCHAR(2000),
REPORTED_VALUE_IND VARCHAR(1),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
SUBSTANCE_ID VARCHAR(40),
WATER_PROPERTY VARCHAR(40),
WATER_PROPERTY_CODE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ANL_WATER_SALINITY'
CREATE TABLE anl_water_salinity
(
ANALYSIS_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
WATER_SALINITY_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CALCULATED_IND VARCHAR(1),
CALCULATE_METHOD_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
IGNITION_IND VARCHAR(1),
MEASURED_IND VARCHAR(1),
MEASURED_TEMP DECIMAL(10,5),
MEASURED_TEMP_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PROBLEM_IND VARCHAR(1),
REMARK VARCHAR(2000),
REPORTED_IND VARCHAR(1),
SALINITY DOUBLE PRECISION,
SALINITY_OUOM VARCHAR(40),
SALINITY_TYPE VARCHAR(40),
SALINITY_UOM VARCHAR(40),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE APPLICATION'
CREATE TABLE application
(
APPLICATION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
APPLICATION_TYPE VARCHAR(40),
CONTRACT_ID VARCHAR(40),
CURRENT_STATUS VARCHAR(40),
DECISION VARCHAR(40),
DECISION_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTENSION_ID VARCHAR(40),
FEES_DESC VARCHAR(240),
FEES_PAID_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
PREVIOUS_APPLICATION_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
RECEIVED_DATE TIMESTAMP(0),
REFERENCE_NUM VARCHAR(40),
REMARK VARCHAR(2000),
RESUBMISSION_IND VARCHAR(1),
SECTION_OF_ACT VARCHAR(240),
SECTION_OF_ACT_DATE TIMESTAMP(0),
SOURCE VARCHAR(40),
SUBMISSION_COMPLETE_IND VARCHAR(1),
SUBMISSION_DESC VARCHAR(240),
SUBMITTED_BY VARCHAR(255),
SUBMITTED_DATE TIMESTAMP(0),
SUBMITTED_TO VARCHAR(255),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE APPLICATION_COMPONENT'
CREATE TABLE application_component
(
APPLICATION_ID VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_COMPONENT_TYPE VARCHAR(40),
APP_APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_SOURCE VARCHAR(40),
PR_STR_UWI VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
STRING_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_ACTIVITY_UWI VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE APPLIC_ALIAS'
CREATE TABLE applic_alias
(
APPLICATION_ID VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE APPLIC_AREA'
CREATE TABLE applic_area
(
APPLICATION_ID VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE APPLIC_ATTACH'
CREATE TABLE applic_attach
(
APPLICATION_ID VARCHAR(40) NOT NULL,
ATTACHMENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ATTACHMENT_DESCRIPTION VARCHAR(240),
ATTACHMENT_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PHYSICAL_ITEM_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
RECEIVED_DATE TIMESTAMP(0),
RECEIVED_IND VARCHAR(1),
REMARK VARCHAR(2000),
SENT_BY VARCHAR(40),
SENT_DATE TIMESTAMP(0),
SENT_IND VARCHAR(1),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE APPLIC_BA'
CREATE TABLE applic_ba
(
APPLICATION_ID VARCHAR(40) NOT NULL,
APPLICATION_BA_ID VARCHAR(40) NOT NULL,
APPLICATION_BA_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
APPLICATION_BA_ROLE VARCHAR(40),
CONTACT_BA_ID VARCHAR(40),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE APPLIC_DESC'
CREATE TABLE applic_desc
(
APPLICATION_ID VARCHAR(40) NOT NULL,
DESCRIPTION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
APPLICATION_TYPE VARCHAR(40),
APPLIC_DESC_TYPE VARCHAR(40),
CONTACT_BA_ID VARCHAR(40),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
CURRENCY_UOM VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
DESCRIPTION VARCHAR(240),
DESC_DATE TIMESTAMP(0),
DESC_VALUE DECIMAL(10,5),
DESC_VALUE_OUOM VARCHAR(40),
DESC_VALUE_UOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_COST DECIMAL(12,2),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MIN_COST DECIMAL(12,2),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE APPLIC_REMARK'
CREATE TABLE applic_remark
(
APPLICATION_ID VARCHAR(40) NOT NULL,
REMARK_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MADE_BY_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE AREA'
CREATE TABLE area
(
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_MAX_LATITUDE DECIMAL(14,9),
AREA_MAX_LONGITUDE DECIMAL(14,9),
AREA_MIN_LATITUDE DECIMAL(14,9),
AREA_MIN_LONGITUDE DECIMAL(14,9),
COORD_ACQUISITION_ID VARCHAR(40),
COORD_SYSTEM_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOCAL_COORD_SYSTEM_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_NAME VARCHAR(255),
REMARK VARCHAR(240),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE AREA_ALIAS'
CREATE TABLE area_alias
(
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
AREA_ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE AREA_CLASS'
CREATE TABLE area_class
(
AREA_ID_PARENT VARCHAR(40) NOT NULL,
AREA_TYPE_PARENT VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
AREA_HIERARCHY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE AREA_COMPONENT'
CREATE TABLE area_component
(
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_COMPONENT_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_SOURCE VARCHAR(40),
PR_STR_UWI VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
STRING_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_ACTIVITY_UWI VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE AREA_CONTAIN'
CREATE TABLE area_contain
(
CONTAINING_AREA_ID VARCHAR(40) NOT NULL,
CONTAINING_AREA_TYPE VARCHAR(40) NOT NULL,
CONTAINED_AREA_ID VARCHAR(40) NOT NULL,
CONTAINED_AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONTAIN_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE AREA_DESCRIPTION'
CREATE TABLE area_description
(
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
DESCRIPTION_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
AREA_DESCRIPTION_DATE TIMESTAMP(0),
AREA_DESC_CODE VARCHAR(40),
AREA_DESC_TYPE VARCHAR(40),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM VARCHAR(40),
AVERAGE_VALUE_UOM VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE AREA_HIERARCHY'
CREATE TABLE area_hierarchy
(
AREA_HIERARCHY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_HIERARCHY_NAME VARCHAR(30),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE AREA_HIER_DETAIL'
CREATE TABLE area_hier_detail
(
AREA_HIERARCHY_ID VARCHAR(40) NOT NULL,
AREA_HIER_LEVEL_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
AREA_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE AREA_XREF'
CREATE TABLE area_xref
(
AREA_ID1 VARCHAR(40) NOT NULL,
AREA_TYPE1 VARCHAR(40) NOT NULL,
AREA_ID2 VARCHAR(40) NOT NULL,
AREA_TYPE2 VARCHAR(40) NOT NULL,
AREA_XREF_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
AREA_XREF_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_ADDRESS'
CREATE TABLE ba_address
(
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ADDRESS_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ADDRESSEE_TEXT VARCHAR(240),
ADDRESS_TYPE VARCHAR(40),
CITY_AREA_ID VARCHAR(40),
CITY_AREA_TYPE VARCHAR(40),
COUNTRY_AREA_ID VARCHAR(40),
COUNTRY_AREA_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIRST_ADDRESS_LINE VARCHAR(1024),
OFFICE_TYPE VARCHAR(40),
POSTAL_ZIP_CODE VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PROVINCE_STATE_AREA_ID VARCHAR(40),
PROVINCE_STATE_AREA_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
SECOND_ADDRESS_LINE VARCHAR(1024),
SERVICE_PERIOD VARCHAR(240),
SERVICE_QUALITY VARCHAR(40),
THIRD_ADDRESS_LINE VARCHAR(1024),
WITHHOLDING_TAX_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_ALIAS'
CREATE TABLE ba_alias
(
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
BA_ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PASSWORD VARCHAR(20),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_AUTHORITY'
CREATE TABLE ba_authority
(
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
AUTHORITY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AUTHORITY_LIMIT DECIMAL(12,2),
AUTHORITY_TYPE VARCHAR(40),
AUTHORIZED_BY VARCHAR(40),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REPRESENTED_BA_ID VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_AUTHORITY_COMP'
CREATE TABLE ba_authority_comp
(
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
AUTHORITY_ID VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_TYPE VARCHAR(40),
BA_AUTHORITY_COMPONENT_TYPE VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROD_STRING_ID VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_FORM_OBS_NO INT,
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_COMPONENT'
CREATE TABLE ba_component
(
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_COMPONENT_TYPE VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_SOURCE VARCHAR(40),
PR_STR_UWI VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
STRING_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_ACTIVITY_UWI VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_CONSORTIUM_SERVICE'
CREATE TABLE ba_consortium_service
(
CONSORTIUM_BA_ID VARCHAR(40) NOT NULL,
PROVIDED_BY VARCHAR(40) NOT NULL,
SERVICE_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
CONTACT_BA_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PROVISION_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REMARK VARCHAR(2000),
REPRESENTED_BA_ID VARCHAR(40),
SERVICE_QUALITY VARCHAR(40),
SERVICE_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_CONTACT_INFO'
CREATE TABLE ba_contact_info
(
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
LOCATION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ADDRESS_OBS_NO INT,
ADDRESS_SOURCE VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
CONTACT_LOC_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOCATION_NAME VARCHAR(255),
ORDER_LEVEL BIGINT,
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_CREW'
CREATE TABLE ba_crew
(
CREW_COMPANY_BA_ID VARCHAR(40) NOT NULL,
CREW_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
COST_PER_UNIT DECIMAL(12,2),
COST_PER_UNIT_CURRENCY_UOM_UOM VARCHAR(40),
COST_PER_UNIT_UOM VARCHAR(40),
CREW_ABBREVIATION VARCHAR(12),
CREW_LONG_NAME VARCHAR(255),
CREW_SHORT_NAME VARCHAR(30),
CREW_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_CREW_MEMBER'
CREATE TABLE ba_crew_member
(
CREW_COMPANY_BA_ID VARCHAR(40) NOT NULL,
CREW_ID VARCHAR(40) NOT NULL,
MEMBER_OBS_NO INT,
CREW_MEMBER_BA_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CREW_POSITION VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_DESCRIPTION'
CREATE TABLE ba_description
(
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
DESCRIPTION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM VARCHAR(40),
AVERAGE_VALUE_UOM VARCHAR(40),
BA_DESC_CODE VARCHAR(40),
BA_DESC_TYPE VARCHAR(40),
COST DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
CURRENCY_UOM VARCHAR(40),
DESCRIPTION VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_VALUE DOUBLE PRECISION,
REFERENCE_VALUE_OUOM VARCHAR(40),
REFERENCE_VALUE_TYPE VARCHAR(40),
REFERENCE_VALUE_UOM VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_EMPLOYEE'
CREATE TABLE ba_employee
(
EMPLOYER_BA_ID VARCHAR(40) NOT NULL,
EMPLOYEE_BA_ID VARCHAR(40) NOT NULL,
EMPLOYEE_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_POSITION VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STATUS VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_LICENSE'
CREATE TABLE ba_license
(
LICENSEE_BA_ID VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
APPLICATION_ID VARCHAR(40),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTENDED_DATE TIMESTAMP(0),
FEES_PAID_IND VARCHAR(1),
GRANTED_BY_BA_ID VARCHAR(40),
GRANTED_BY_CONTACT_ID VARCHAR(40),
GRANTED_DATE TIMESTAMP(0),
GRANTED_TO_BA_ID VARCHAR(40),
GRANTED_TO_CONTACT_ID VARCHAR(40),
LICENSE_NUM VARCHAR(40),
LICENSE_TERM DECIMAL(10,5),
LICENSE_TERM_UOM VARCHAR(40),
LICENSE_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
RATE_SCHEDULE_ID VARCHAR(40),
REL_LICENSEE_BA_ID VARCHAR(40),
REL_LICENSE_ID VARCHAR(40),
REMARK VARCHAR(2000),
SECONDARY_TERM DECIMAL(10,5),
SECONDARY_TERM_UOM VARCHAR(40),
SOURCE VARCHAR(40),
VIOLATION_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_LICENSE_ALIAS'
CREATE TABLE ba_license_alias
(
LICENSEE_BA_ID VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_LICENSE_AREA'
CREATE TABLE ba_license_area
(
LICENSEE_BA_ID VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_LICENSE_COND'
CREATE TABLE ba_license_cond
(
LICENSEE_BA_ID VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
CONDITION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONDITION_CODE VARCHAR(40),
CONDITION_DESC VARCHAR(240),
CONDITION_TYPE VARCHAR(40),
CONDITION_VALUE DOUBLE PRECISION,
CONDITION_VALUE_OUOM VARCHAR(40),
CONDITION_VALUE_UOM VARCHAR(40),
CONTACT_BA_ID VARCHAR(40),
CURRENCY_CONVERSION DECIMAL(10,5),
DATE_FORMAT_DESC TIMESTAMP(0),
DESCRIPTION VARCHAR(240),
DUE_CONDITION VARCHAR(40),
DUE_DATE TIMESTAMP(0),
DUE_FREQUENCY VARCHAR(40),
DUE_TERM DECIMAL(10,5),
DUE_TERM_UOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXEMPT_IND VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
FULFILLED_BY_BA_ID VARCHAR(40),
FULFILLED_DATE TIMESTAMP(0),
FULFILLED_IND VARCHAR(1),
GRANTED_BY_BA_ID VARCHAR(40),
LICENSE_TYPE VARCHAR(40),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RESTRICTION_ID VARCHAR(40),
RESTRICTION_VERSION INT,
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_LICENSE_COND_CODE'
CREATE TABLE ba_license_cond_code
(
GRANTED_BY_BA_ID VARCHAR(40) NOT NULL,
LICENSE_TYPE VARCHAR(40) NOT NULL,
CONDITION_TYPE VARCHAR(40) NOT NULL,
CONDITION_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_LICENSE_COND_TYPE'
CREATE TABLE ba_license_cond_type
(
GRANTED_BY_BA_ID VARCHAR(40) NOT NULL,
LICENSE_TYPE VARCHAR(40) NOT NULL,
CONDITION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_LICENSE_REMARK'
CREATE TABLE ba_license_remark
(
LICENSEE_BA_ID VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
REMARK_ID VARCHAR(40) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
AUTHOR VARCHAR(255),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_DATE TIMESTAMP(0),
REMARK_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_LICENSE_STATUS'
CREATE TABLE ba_license_status
(
LICENSEE_BA_ID VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
STATUS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LICENSE_STATUS VARCHAR(40),
LICENSE_STATUS_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_LICENSE_TYPE'
CREATE TABLE ba_license_type
(
GRANTED_BY_BA_ID VARCHAR(40) NOT NULL,
LICENSE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
RATE_SCHEDULE_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_LICENSE_VIOLATION'
CREATE TABLE ba_license_violation
(
LICENSEE_BA_ID VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
VIOLATION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONDITION_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RESOLVE_DATE TIMESTAMP(0),
RESOLVE_DESC VARCHAR(1024),
RESOLVE_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
VIOLATION_DATE TIMESTAMP(0),
VIOLATION_DESC VARCHAR(1024),
VIOLATION_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_ORGANIZATION'
CREATE TABLE ba_organization
(
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
ORGANIZATION_ID VARCHAR(40) NOT NULL,
ORGANIZATION_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
ADDRESS_OBS_NO INT,
ADDRESS_SOURCE VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
CREATED_DATE TIMESTAMP(0),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
ORGANIZATION_NAME VARCHAR(255),
ORGANIZATION_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMOVED_DATE TIMESTAMP(0),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_ORGANIZATION_COMP'
CREATE TABLE ba_organization_comp
(
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
ORGANIZATION_ID VARCHAR(40) NOT NULL,
ORGANIZATION_SEQ_NO INT,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_COMPONENT_TYPE VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
DESCRIPTION VARCHAR(240),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
ORGANIZATION_ID2 VARCHAR(40),
ORGANIZATION_SEQ_NO2 INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROD_STRING_ID VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_FORM_OBS_NO INT,
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_PERMIT'
CREATE TABLE ba_permit
(
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
JURISDICTION VARCHAR(40) NOT NULL,
PERMIT_TYPE VARCHAR(40) NOT NULL,
PERMIT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERMIT_NUM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_PREFERENCE'
CREATE TABLE ba_preference
(
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
PREFERENCE_TYPE VARCHAR(40) NOT NULL,
PREFERENCE_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
WL_CURVE_CLASS_ID VARCHAR(40),
WL_PARAMETER_CLASS_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_PREFERENCE_LEVEL'
CREATE TABLE ba_preference_level
(
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
PREFERENCE_TYPE VARCHAR(40) NOT NULL,
PREFERENCE_OBS_NO INT,
LEVEL_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CURRENCY_UOM VARCHAR(40),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PREFERENCE_LEVEL DECIMAL(10,5),
PREFERENCE_RULE VARCHAR(240),
PREFERRED_BA_ID VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
WL_DICTIONARY_ID VARCHAR(40),
WL_DICT_CURVE_ID VARCHAR(40),
WL_PARAMETER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_SERVICE'
CREATE TABLE ba_service
(
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
BA_SERVICE_TYPE VARCHAR(40) NOT NULL,
BA_SERVICE_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SERVICE_QUALITY VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_SERVICE_ADDRESS'
CREATE TABLE ba_service_address
(
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
ADDRESS_OBS_NO INT,
BA_SERVICE_TYPE VARCHAR(40) NOT NULL,
BA_SERVICE_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
ADDRESS_SOURCE VARCHAR(40),
ALIAS_SOURCE VARCHAR(40),
BA_ALIAS_ID VARCHAR(40),
BA_SERVICE_SOURCE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SERVICE_QUALITY VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BA_XREF'
CREATE TABLE ba_xref
(
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
NEW_BA_ID VARCHAR(40) NOT NULL,
BA_XREF_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
BA_XREF_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE BUSINESS_ASSOCIATE'
CREATE TABLE business_associate
(
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BA_ABBREVIATION VARCHAR(12),
BA_CATEGORY VARCHAR(40),
BA_CODE VARCHAR(40),
BA_LONG_NAME VARCHAR(255),
BA_SHORT_NAME VARCHAR(30),
BA_TYPE VARCHAR(40),
CREDIT_CHECK_DATE TIMESTAMP(0),
CREDIT_CHECK_IND VARCHAR(1),
CREDIT_CHECK_SOURCE VARCHAR(40),
CREDIT_RATING VARCHAR(40),
CREDIT_RATING_SOURCE VARCHAR(40),
CURRENT_STATUS VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIRST_NAME VARCHAR(255),
LAST_NAME VARCHAR(255),
MIDDLE_INITIAL VARCHAR(30),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SERVICE_PERIOD VARCHAR(240),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CAT_ADDITIVE'
CREATE TABLE cat_additive
(
CATALOGUE_ADDITIVE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ADDITIVE_GROUP VARCHAR(40),
ADDITIVE_NAME VARCHAR(255),
ADDITIVE_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MANUFACTURER VARCHAR(40),
PPDM_GUID VARCHAR(38),
PURCHASE_QUANTITY DOUBLE PRECISION,
PURCHASE_QUANTITY_TYPE VARCHAR(40),
PURCHASE_QUANTITY_UOM VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SUPPLIER VARCHAR(30),
UPC_CODE VARCHAR(20),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CAT_ADDITIVE_ALIAS'
CREATE TABLE cat_additive_alias
(
CATALOGUE_ADDITIVE_ID VARCHAR(40) NOT NULL,
CAT_ADDITIVE_ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CAT_ADDITIVE_ALLOWANCE'
CREATE TABLE cat_additive_allowance
(
ALLOWANCE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ADDITIVE_GROUP_ID VARCHAR(40),
ALLOWED_IND VARCHAR(1),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
DISALLOWED_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
SUBSTANCE_ID VARCHAR(40),
USE_CONDITION VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CAT_ADDITIVE_GROUP'
CREATE TABLE cat_additive_group
(
ADDITIVE_GROUP_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
SUBSTANCE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CAT_ADDITIVE_GROUP_PART'
CREATE TABLE cat_additive_group_part
(
ADDITIVE_GROUP_ID VARCHAR(40) NOT NULL,
ADDITIVE_TYPE_ID VARCHAR(40) NOT NULL,
ADDITIVE_PART_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
SUBSTANCE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CAT_ADDITIVE_SPEC'
CREATE TABLE cat_additive_spec
(
CATALOGUE_ADDITIVE_ID VARCHAR(40) NOT NULL,
SPEC_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ADDITIVE_COMPONENT_ID VARCHAR(40),
ADDITIVE_SPEC_TYPE VARCHAR(40),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM VARCHAR(40),
AVERAGE_VALUE_UOM VARCHAR(40),
COST DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
CURRENCY_UOM VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SPEC_CODE VARCHAR(40),
SPEC_DESC VARCHAR(1024),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CAT_ADDITIVE_TYPE'
CREATE TABLE cat_additive_type
(
ADDITIVE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
ADDITIVE_GROUP VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CAT_ADDITIVE_XREF'
CREATE TABLE cat_additive_xref
(
CATALOGUE_ADDITIVE_ID VARCHAR(40) NOT NULL,
CATALOGUE_ADDITIVE_ID2 VARCHAR(40) NOT NULL,
XREF_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ADDITIVE_XREF_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CAT_EQUIPMENT'
CREATE TABLE cat_equipment
(
CATALOGUE_EQUIP_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CAT_EQUIP_GROUP VARCHAR(40),
CAT_EQUIP_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_NAME VARCHAR(255),
EXPIRY_DATE TIMESTAMP(0),
INSTALL_LOC_TYPE VARCHAR(40),
MANUFACTURER_BA_ID VARCHAR(40),
MODEL_NUM VARCHAR(30),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CAT_EQUIP_ALIAS'
CREATE TABLE cat_equip_alias
(
CATALOGUE_EQUIP_ID VARCHAR(40) NOT NULL,
CAT_EQUIP_ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CAT_EQUIP_SPEC'
CREATE TABLE cat_equip_spec
(
CATALOGUE_EQUIP_ID VARCHAR(40) NOT NULL,
SPEC_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM VARCHAR(40),
AVERAGE_VALUE_UOM VARCHAR(40),
COST DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
CURRENCY_UOM VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_VALUE DOUBLE PRECISION,
REFERENCE_VALUE_OUOM VARCHAR(40),
REFERENCE_VALUE_TYPE VARCHAR(40),
REFERENCE_VALUE_UOM VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SPEC_CODE VARCHAR(40),
SPEC_DESC VARCHAR(1024),
SPEC_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CLASS_LEVEL'
CREATE TABLE class_level
(
CLASSIFICATION_SYSTEM_ID VARCHAR(40) NOT NULL,
CLASS_LEVEL_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LEVEL_DEFINITION VARCHAR(2000),
LEVEL_NAME VARCHAR(255),
LEVEL_REF_NUM VARCHAR(30),
LEVEL_SEQ_NO INT,
LEVEL_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RETENTION_PERIOD VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CLASS_LEVEL_ALIAS'
CREATE TABLE class_level_alias
(
CLASSIFICATION_SYSTEM_ID VARCHAR(40) NOT NULL,
CLASS_LEVEL_ID VARCHAR(40) NOT NULL,
CLASS_LEVEL_ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
ALIAS_VERSION VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
COLUMN_NAME VARCHAR(30),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REFERENCED_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SCHEMA_ENTITY_ID VARCHAR(40),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
SYSTEM_ID VARCHAR(40),
TABLE_NAME VARCHAR(30),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CLASS_LEVEL_COMPONENT'
CREATE TABLE class_level_component
(
CLASSIFICATION_SYSTEM_ID VARCHAR(40) NOT NULL,
CLASS_LEVEL_ID VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASS_LEVEL_COMPONENT_TYPE VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PRODUCT_TYPE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_SOURCE VARCHAR(40),
PR_STR_UWI VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
STRING_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_ACTIVITY_UWI VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CLASS_LEVEL_DESC'
CREATE TABLE class_level_desc
(
CLASSIFICATION_SYSTEM_ID VARCHAR(40) NOT NULL,
CLASS_LEVEL_ID VARCHAR(40) NOT NULL,
DESC_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM VARCHAR(40),
AVERAGE_VALUE_UOM VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
DESCRIPTION VARCHAR(1024),
DESC_CODE VARCHAR(40),
DESC_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CLASS_LEVEL_TYPE'
CREATE TABLE class_level_type
(
CLASSIFICATION_SYSTEM_ID VARCHAR(40) NOT NULL,
LEVEL_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LEVEL_ORDER_SEQ_NO INT,
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
SELECTION_CRITERIA VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CLASS_LEVEL_XREF'
CREATE TABLE class_level_xref
(
CLASSIFICATION_SYSTEM_ID VARCHAR(40) NOT NULL,
CLASS_LEVEL_ID VARCHAR(40) NOT NULL,
CLASSIFICATION_SYSTEM_ID2 VARCHAR(40) NOT NULL,
CLASS_LEVEL_ID2 VARCHAR(40) NOT NULL,
XREF_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LEVEL_XREF_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CLASS_SYSTEM'
CREATE TABLE class_system
(
CLASSIFICATION_SYSTEM_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CLASS_DIMENSION VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
SYSTEM_DEFINITION VARCHAR(2000),
SYSTEM_NAME VARCHAR(255),
SYSTEM_OWNER VARCHAR(40),
SYSTEM_REF_NUM VARCHAR(30),
SYSTEM_VERSION VARCHAR(20),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CLASS_SYSTEM_ALIAS'
CREATE TABLE class_system_alias
(
CLASSIFICATION_SYSTEM_ID VARCHAR(40) NOT NULL,
CLASS_SYSTEM_ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
ALIAS_VERSION VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CLASS_SYSTEM_XREF'
CREATE TABLE class_system_xref
(
CLASSIFICATION_SYSTEM_ID VARCHAR(40) NOT NULL,
CLASSIFICATION_SYSTEM_ID2 VARCHAR(40) NOT NULL,
EQUIV_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
SYSTEM_XREF_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONSENT'
CREATE TABLE consent
(
CONSENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONSENT_DESC VARCHAR(240),
CONSENT_METHOD_DESC VARCHAR(240),
CONSENT_TYPE VARCHAR(40),
CURRENT_STATUS VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
RECEIVE_DATE TIMESTAMP(0),
REMARK VARCHAR(2000),
REQUEST_DATE TIMESTAMP(0),
SOURCE VARCHAR(40),
STATUS_REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONSENT_BA'
CREATE TABLE consent_ba
(
CONSENT_ID VARCHAR(40) NOT NULL,
CONSENT_BA_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FULL_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROLE VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONSENT_COMPONENT'
CREATE TABLE consent_component
(
CONSENT_ID VARCHAR(40) NOT NULL,
COMPONENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_LICENSEE_BA_ID VARCHAR(40),
BA_LICENSE_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_COMPONENT_TYPE VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_LICENSE_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROD_STRING_ID VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PROJECT_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
RESTRICTION_ID VARCHAR(40),
RESTRICTION_VERSION INT,
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_LICENSE_ID VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_LICENSE_ID VARCHAR(40),
WELL_LICENSE_SOURCE VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONSENT_COND'
CREATE TABLE consent_cond
(
CONSENT_ID VARCHAR(40) NOT NULL,
CONDITION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
COMPONENT_ID VARCHAR(40),
CONSENT_CONDITION VARCHAR(40),
CONSENT_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONSENT_REMARK'
CREATE TABLE consent_remark
(
CONSENT_ID VARCHAR(40) NOT NULL,
REMARK_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MADE_ABOUT_BA_ID VARCHAR(40),
MADE_BY_BA_ID VARCHAR(40),
MADE_FOR_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONSULT'
CREATE TABLE consult
(
CONSULT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
COMPLETE_DATE TIMESTAMP(0),
CONSULT_REASON VARCHAR(40),
CONSULT_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERIOD_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONSULT_BA'
CREATE TABLE consult_ba
(
CONSULT_ID VARCHAR(40) NOT NULL,
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONSULT_ROLE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REPRESENTED_BA_ID VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONSULT_COMPONENT'
CREATE TABLE consult_component
(
CONSULT_ID VARCHAR(40) NOT NULL,
COMPONENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_LICENSEE_BA_ID VARCHAR(40),
BA_LICENSE_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
COMPONENT_TYPE VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_LICENSE_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
HSE_INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_JURISDICTION VARCHAR(40),
LAND_SALE_NUMBER VARCHAR(30),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
PLATFORM_ID VARCHAR(40),
PLATFORM_SOURCE VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROD_STRING_ID VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PROVISION_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
RESTRICTION_ID VARCHAR(40),
RESTRICTION_VERSION INT,
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_LICENSE_ID VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_LICENSE_ID VARCHAR(40),
WELL_LICENSE_SOURCE VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONSULT_DISC'
CREATE TABLE consult_disc
(
CONSULT_ID VARCHAR(40) NOT NULL,
DISCUSSION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
COMPLETE_DATE TIMESTAMP(0),
DISCUSSION_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONSULT_DISC_BA'
CREATE TABLE consult_disc_ba
(
CONSULT_ID VARCHAR(40) NOT NULL,
DISCUSSION_ID VARCHAR(40) NOT NULL,
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ATTEND_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONSULT_DISC_ISSUE'
CREATE TABLE consult_disc_issue
(
CONSULT_ID VARCHAR(40) NOT NULL,
DISCUSSION_ID VARCHAR(40) NOT NULL,
DETAIL_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONSULT_ISSUE'
CREATE TABLE consult_issue
(
CONSULT_ID VARCHAR(40) NOT NULL,
DETAIL_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DETAIL_DESC VARCHAR(240),
DISCUSSION_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
ISSUE_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_TYPE VARCHAR(40),
RESOLUTION VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONSULT_XREF'
CREATE TABLE consult_xref
(
CONSULT_ID VARCHAR(40) NOT NULL,
CONSULT_ID2 VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONSULT_XREF_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONTEST'
CREATE TABLE contest
(
CONTEST_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LR_CONTEST_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REASON VARCHAR(2000),
REMARK VARCHAR(2000),
RESOLUTION_DATE TIMESTAMP(0),
RESOLUTION_METHOD VARCHAR(40),
RESOLUTION_REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONTEST_COMPONENT'
CREATE TABLE contest_component
(
CONTEST_ID VARCHAR(40) NOT NULL,
COMPONENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_COMPONENT_TYPE VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROD_STRING_ID VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PROJECT_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONTEST_PARTY'
CREATE TABLE contest_party
(
CONTEST_ID VARCHAR(40) NOT NULL,
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
BA_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PARTY_ROLE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONTEST_REMARK'
CREATE TABLE contest_remark
(
CONTEST_ID VARCHAR(40) NOT NULL,
REMARK_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MADE_BY VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_DATE TIMESTAMP(0),
REMARK_SEQ_NO INT,
REMARK_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONTRACT'
CREATE TABLE contract
(
CONTRACT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AMI_AOE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
ASSIGNMENT_PROC_IND VARCHAR(1),
CASING_POINT_ELECTION VARCHAR(40),
CLOSING_DATE TIMESTAMP(0),
CONFIDENTIAL_IND VARCHAR(1),
CONTRACT_NAME VARCHAR(255),
CONTRACT_NUM VARCHAR(30),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTENSION_CONDITION VARCHAR(40),
GOVERNING_CONTRACT_IND VARCHAR(1),
LIABILITY_PERIOD DECIMAL(10,5),
LIABILITY_PERIOD_OUOM VARCHAR(40),
LIABILITY_RELEASE_DATE TIMESTAMP(0),
NAT_CURRENCY_CONVERSION DECIMAL(10,5),
NAT_CURRENCY_UOM VARCHAR(40),
OPERATING_PROC_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
PRIMARY_TERM DECIMAL(10,5),
PRIMARY_TERM_OUOM VARCHAR(40),
REMARK VARCHAR(2000),
ROFR_IND VARCHAR(1),
SECONDARY_TERM DECIMAL(10,5),
SECONDARY_TERM_OUOM VARCHAR(40),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
SURRENDER_NOTICE_TERM DECIMAL(10,5),
SURRENDER_NOTICE_TERM_OUOM VARCHAR(40),
TERMINATION_DATE TIMESTAMP(0),
VOTING_PROC_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONTRACT_COMPONENT'
CREATE TABLE contract_component
(
CONTRACT_ID VARCHAR(40) NOT NULL,
COMPONENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BA_SERVICE_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_COMPONENT_TYPE VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_OFFERING_BID_ID VARCHAR(40),
LAND_REQUEST_ID VARCHAR(40),
LAND_RIGHT_ACQTN_ID VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LAND_SALE_OFFERING_ID VARCHAR(40),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROD_STRING_ID VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PROVISION_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REASON_TYPE VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_PROC_PLAN_ID VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SEIS_TRANSACTION_ID VARCHAR(40),
SEIS_TRANSACTION_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SUPPORT_FACILITY_SUBTYPE VARCHAR(30),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONT_ACCOUNT_PROC'
CREATE TABLE cont_account_proc
(
CONTRACT_ID VARCHAR(40) NOT NULL,
ACCOUNT_PROC_TYPE VARCHAR(40) NOT NULL,
ACCOUNT_PROC_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ADVANCE_PERCENT DECIMAL(15,12),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INVENTORY_PERIOD DECIMAL(10,5),
INVENTORY_PERIOD_UOM VARCHAR(40),
MATERIAL_SALE_LIMIT DECIMAL(12,2),
PPDM_GUID VARCHAR(38),
QUORUM_COUNT BIGINT,
QUORUM_PERCENT DECIMAL(15,12),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONT_ALIAS'
CREATE TABLE cont_alias
(
CONTRACT_ID VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONT_ALLOW_EXPENSE'
CREATE TABLE cont_allow_expense
(
CONTRACT_ID VARCHAR(40) NOT NULL,
ALLOW_EXPENSE_TYPE VARCHAR(40) NOT NULL,
ALLOW_EXPENSE_OBS_NO INT,
ACCOUNT_PROC_OBS_NO INT,
ACCOUNT_PROC_TYPE VARCHAR(40),
ACTIVE_IND VARCHAR(1),
ALLOW_PERCENT DECIMAL(15,12),
ALLOW_PERCENT_QUALIFIER VARCHAR(40),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPENSE_FREQUENCY DECIMAL(10,5),
EXPENSE_FREQUENCY_UOM VARCHAR(40),
EXPENSE_RATE DECIMAL(12,2),
EXPENSE_RATE_QUALIFIER VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
INELIGIBLE_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONT_AREA'
CREATE TABLE cont_area
(
CONTRACT_ID VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONT_BA'
CREATE TABLE cont_ba
(
CONTRACT_ID VARCHAR(40) NOT NULL,
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
ROLE_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BA_ROLE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONT_BA_SERVICE'
CREATE TABLE cont_ba_service
(
CONTRACT_ID VARCHAR(40) NOT NULL,
PROVIDED_BY VARCHAR(40) NOT NULL,
SERVICE_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
BA_SERVICE_TYPE VARCHAR(40),
CONTACT_BA_ID VARCHAR(40),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
ORIGINAL_PARTY_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROVISION_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REMARK VARCHAR(2000),
REPRESENTED_BA_ID VARCHAR(40),
SERVICE_QUALITY VARCHAR(40),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONT_EXEMPTION'
CREATE TABLE cont_exemption
(
CONTRACT_ID VARCHAR(40) NOT NULL,
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
EXEMPTION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXEMPTION_DESC VARCHAR(240),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PROVISION_ID VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONT_EXTENSION'
CREATE TABLE cont_extension
(
CONTRACT_ID VARCHAR(40) NOT NULL,
EXTENSION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTENSION_TYPE VARCHAR(40),
ISSUED_BY VARCHAR(255),
ISSUED_DATE TIMESTAMP(0),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONT_JURISDICTION'
CREATE TABLE cont_jurisdiction
(
CONTRACT_ID VARCHAR(40) NOT NULL,
JURISDICTION VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONT_KEY_WORD'
CREATE TABLE cont_key_word
(
CONTRACT_ID VARCHAR(40) NOT NULL,
PROVISION_ID VARCHAR(40) NOT NULL,
KEY_WORD_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
KEY_WORD VARCHAR(1024),
PAGE_REFERENCE VARCHAR(20),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONT_MKTG_ELECT_SUBST'
CREATE TABLE cont_mktg_elect_subst
(
CONTRACT_ID VARCHAR(40) NOT NULL,
OPERATING_PROCEDURE_ID VARCHAR(40) NOT NULL,
SUBSTANCE_ID VARCHAR(40) NOT NULL,
SUBSTANCE_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BOTH_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
ELECTION_COST DECIMAL(12,2),
ELECTION_COST_QUALIFIER VARCHAR(40),
ELECTION_PERCENT DECIMAL(15,12),
ELECTION_PERCENT_QUALIFIER VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SUBSTANCE_OUOM VARCHAR(40),
SUBSTANCE_UOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONT_OPER_PROC'
CREATE TABLE cont_oper_proc
(
CONTRACT_ID VARCHAR(40) NOT NULL,
OPERATING_PROCEDURE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ADJUST_13_MONTH_DESC VARCHAR(240),
ADJUST_13_MONTH_IND VARCHAR(1),
CASING_POINT_ELECTION VARCHAR(40),
CLAIM_AMOUNT_LIMIT DECIMAL(12,2),
CLAIM_AMOUNT_LIMIT_OUOM VARCHAR(40),
DEV_PENALTY_COST DECIMAL(12,2),
DEV_PENALTY_COST_OUOM VARCHAR(40),
DEV_PENALTY_PERCENT DECIMAL(15,12),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIP_PENALTY_COST DECIMAL(12,2),
EQUIP_PENALTY_COST_OUOM VARCHAR(40),
EQUIP_PENALTY_PERCENT DECIMAL(15,12),
EXPIRY_DATE TIMESTAMP(0),
EXPL_PENALTY_COST DECIMAL(12,2),
EXPL_PENALTY_COST_OUOM VARCHAR(40),
EXPL_PENALTY_PERCENT DECIMAL(15,12),
INFLATION_ADJUSTMENT_IND VARCHAR(1),
INSURANCE_ELECTION VARCHAR(40),
MKTG_FEE_ELECT_COST DECIMAL(12,2),
MKTG_FEE_ELECT_COST_OUOM VARCHAR(40),
MKTG_FEE_ELECT_PERCENT DECIMAL(15,12),
NAT_CURRENCY_CONVERSION DECIMAL(10,5),
NAT_CURRENCY_UOM VARCHAR(40),
OPERATING_PROCEDURE_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
RECOG_ON_ASSIGNMENT_IND VARCHAR(1),
REMARK VARCHAR(2000),
ROFR_IND VARCHAR(1),
ROFR_REPLY_TERM DECIMAL(10,5),
ROFR_REPLY_TERM_UOM VARCHAR(40),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STATUTE_LIMIT_PERIOD DECIMAL(10,5),
STATUTE_LIMIT_PERIOD_UOM VARCHAR(40),
SURRENDER_NOTICE DECIMAL(10,5),
SURRENDER_NOTICE_UOM VARCHAR(40),
TITLE_PRESERVE_DESC VARCHAR(240),
UNAUTHORIZED_AMOUNT DECIMAL(12,2),
UNAUTHORIZED_AMOUNT_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONT_PROVISION'
CREATE TABLE cont_provision
(
CONTRACT_ID VARCHAR(40) NOT NULL,
PROVISION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CLAUSE_HEADING VARCHAR(30),
CLAUSE_NUMBER VARCHAR(30),
CONT_PROVISION_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MODIFIED_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
PROVISION_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONT_PROVISION_TEXT'
CREATE TABLE cont_provision_text
(
CONTRACT_ID VARCHAR(40) NOT NULL,
PROVISION_ID VARCHAR(40) NOT NULL,
PROVISION_TEXT_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PROVISION_TEXT VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONT_PROVISION_XREF'
CREATE TABLE cont_provision_xref
(
CONTRACT_ID VARCHAR(40) NOT NULL,
PROVISION_ID VARCHAR(40) NOT NULL,
CONTRACT_ID_2 VARCHAR(40) NOT NULL,
PROVISION_ID_2 VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PROVISION_XREF_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONT_REMARK'
CREATE TABLE cont_remark
(
CONTRACT_ID VARCHAR(40) NOT NULL,
REMARK_ID VARCHAR(40) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
AUTHOR VARCHAR(255),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_DATE TIMESTAMP(0),
REMARK_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONT_STATUS'
CREATE TABLE cont_status
(
CONTRACT_ID VARCHAR(40) NOT NULL,
STATUS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONTRACT_STATUS VARCHAR(40),
CONTRACT_STATUS_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONT_TYPE'
CREATE TABLE cont_type
(
CONTRACT_ID VARCHAR(40) NOT NULL,
CONTRACT_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONT_VOTING_PROC'
CREATE TABLE cont_voting_proc
(
CONTRACT_ID VARCHAR(40) NOT NULL,
VOTING_PROCEDURE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DEFEAT_COUNT BIGINT,
DEFEAT_PERCENT DECIMAL(15,12),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTEREST_PERCENT DECIMAL(15,12),
NO_VOTE_RESPONSE VARCHAR(40),
PPDM_GUID VARCHAR(38),
QUORUM_COUNT BIGINT,
REMARK VARCHAR(2000),
RESPONSE_PERIOD DECIMAL(10,5),
RESPONSE_PERIOD_UOM VARCHAR(40),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
VOTE_PROCEDURE_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CONT_XREF'
CREATE TABLE cont_xref
(
CONTRACT_ID VARCHAR(40) NOT NULL,
CONTRACT_ID_2 VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONTRACT_XREF_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
ORDER_OF_SUPERCEDENCE INT,
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CS_ALIAS'
CREATE TABLE cs_alias
(
COORD_SYSTEM_ID VARCHAR(40) NOT NULL,
COORD_SYSTEM_ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CS_COORDINATE_SYSTEM'
CREATE TABLE cs_coordinate_system
(
COORD_SYSTEM_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
COORDINATE_SYSTEM_TYPE VARCHAR(40),
COORD_SYSTEM_ABBREVIATION VARCHAR(12),
COORD_SYSTEM_AREA VARCHAR(60),
COORD_SYSTEM_LONG_NAME VARCHAR(255),
COORD_SYSTEM_SHORT_NAME VARCHAR(30),
COORD_SYSTEM_UOM VARCHAR(40),
DATUM_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GEODETIC_DATUM VARCHAR(40),
N_VALUE DOUBLE PRECISION,
N_VALUE_OUOM VARCHAR(40),
OWNER_BA_ID VARCHAR(40),
PARENT_COORD_SYSTEM_ID VARCHAR(40),
PERSPECTIVE_HEIGHT DECIMAL(10,5),
PPDM_GUID VARCHAR(38),
PRIME_MERIDIAN VARCHAR(40),
PRINCIPAL_MERIDIAN VARCHAR(40),
PROJECTION_TYPE VARCHAR(40),
REFERENCE_ELEV DECIMAL(10,5),
REFERENCE_ELEV_OUOM VARCHAR(40),
REMARK VARCHAR(2000),
ROTATION_IND VARCHAR(1),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
VERTICAL_DATUM_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CS_COORD_ACQUISITION'
CREATE TABLE cs_coord_acquisition
(
ACQUISITION_ID VARCHAR(40) NOT NULL,
ACQUIRED_BY_BA_ID VARCHAR(40),
ACTIVE_IND VARCHAR(1),
CAPTURE_METHOD VARCHAR(40),
COMPUTE_METHOD VARCHAR(40),
COORDINATE_QUALITY VARCHAR(40),
DATA_CREATE_DATE TIMESTAMP(0),
DIGITIZED_SCALE BIGINT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HORIZONTAL_ACCURACY BIGINT,
HORIZONTAL_ACCURACY_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_SCALE BIGINT,
SURVEY_ACCURACY BIGINT,
TRANSFORM_ID VARCHAR(40),
VERTICAL_ACCURACY DECIMAL(7,2),
VERTICAL_ACCURACY_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CS_COORD_TRANSFORM'
CREATE TABLE cs_coord_transform
(
TRANSFORM_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_COORD_SYSTEM_ID VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
TARGET_COORD_SYSTEM_ID VARCHAR(40),
TRANSFORM_NAME VARCHAR(255),
TRANSFORM_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CS_COORD_TRANS_PARM'
CREATE TABLE cs_coord_trans_parm
(
TRANSFORM_TYPE VARCHAR(40) NOT NULL,
PARAMETER_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DIGITAL_OUTPUT VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
TRANSFORM_PARM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CS_COORD_TRANS_VALUE'
CREATE TABLE cs_coord_trans_value
(
TRANSFORM_ID VARCHAR(40) NOT NULL,
TRANSFORM_TYPE VARCHAR(40) NOT NULL,
PARAMETER_ID VARCHAR(40) NOT NULL,
VALUE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
TEXT_VALUE VARCHAR(240),
TRANS_VALUE DECIMAL(15,5),
TRANS_VALUE_UOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CS_ELLIPSOID'
CREATE TABLE cs_ellipsoid
(
ELLIPSOID_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AXIS_OUOM VARCHAR(40),
ECCENTRICITY DECIMAL(18,17),
EFFECTIVE_DATE TIMESTAMP(0),
ELLIPSOID_NAME VARCHAR(255),
EXPIRY_DATE TIMESTAMP(0),
INVERSE_FLATTENING DECIMAL(15,11),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SEMI_MAJOR_AXIS DECIMAL(22,9),
SEMI_MAJOR_AXIS_ACCURACY SMALLINT,
SEMI_MINOR_AXIS DECIMAL(22,9),
SEMI_MINOR_AXIS_ACCURACY SMALLINT,
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CS_GEODETIC_DATUM'
CREATE TABLE cs_geodetic_datum
(
GEODETIC_DATUM VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DATUM_ORIGIN VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
ELLIPSOID_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
GEODETIC_DATUM_AREA_ID VARCHAR(40),
GEODETIC_DATUM_AREA_TYPE VARCHAR(40),
GEODETIC_DATUM_NAME VARCHAR(255),
ORIGIN_ANGULAR_OUOM VARCHAR(40),
ORIGIN_LATITUDE DECIMAL(14,9),
ORIGIN_LONGITUDE DECIMAL(14,9),
ORIGIN_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CS_PRIME_MERIDIAN'
CREATE TABLE cs_prime_meridian
(
PRIME_MERIDIAN_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GREENWICH_LONGITUDE DECIMAL(14,9),
LONGITUDE_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PRIME_MERIDIAN_ABBREVIATION VARCHAR(40),
PRIME_MERIDIAN_NAME VARCHAR(255),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE CS_PRINCIPAL_MERIDIAN'
CREATE TABLE cs_principal_meridian
(
PRINCIPAL_MERIDIAN VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONGITUDE DECIMAL(14,9),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ECOZONE'
CREATE TABLE ecozone
(
ECOZONE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
DEPTH_OUOM VARCHAR(40),
ECOZONE_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PREFERRED_NAME VARCHAR(255),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ECOZONE_ALIAS'
CREATE TABLE ecozone_alias
(
ECOZONE_ID VARCHAR(40) NOT NULL,
ECOZONE_ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ECOZONE_HIERARCHY'
CREATE TABLE ecozone_hierarchy
(
ECOZONE_SET_ID VARCHAR(40) NOT NULL,
PARENT_ECOZONE_ID VARCHAR(40) NOT NULL,
CHILD_ECOZONE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HIERARCHY_LEVEL VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ECOZONE_SET'
CREATE TABLE ecozone_set
(
ECOZONE_SET_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ECOZONE_SET_PART'
CREATE TABLE ecozone_set_part
(
ECOZONE_SET_ID VARCHAR(40) NOT NULL,
ECOZONE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ECOZONE_XREF'
CREATE TABLE ecozone_xref
(
ECOZONE_ID1 VARCHAR(40) NOT NULL,
ECOZONE_ID2 VARCHAR(40) NOT NULL,
ECOZONE_XREF_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ECOZONE_XREF_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ENTITLEMENT'
CREATE TABLE entitlement
(
ENTITLEMENT_ID VARCHAR(40) NOT NULL,
ACCESS_CONDITION VARCHAR(1024),
ACCESS_COND_CODE VARCHAR(40),
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
ENTITLEMENT_NAME VARCHAR(255),
ENTITLEMENT_TYPE VARCHAR(40),
EXPIRY_ACTION VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PRIMARY_TERM DECIMAL(10,5),
PRIMARY_TERM_OUOM VARCHAR(40),
REMARK VARCHAR(2000),
SECURITY_DESC VARCHAR(1024),
SOURCE VARCHAR(40),
USE_CONDITION VARCHAR(1024),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ENT_COMPONENT'
CREATE TABLE ent_component
(
ENTITLEMENT_ID VARCHAR(40) NOT NULL,
COMPONENT_ID VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACCESS_COND_CODE VARCHAR(40),
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
DESCRIPTION VARCHAR(2000),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENT_COMP_TYPE VARCHAR(40),
ENT_RULE VARCHAR(2000),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_ACTION VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
ORGANIZATION_ID VARCHAR(40),
ORGANIZATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROD_STRING_ID VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PROJECT_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
REPORT_HIERARCHY_ID VARCHAR(40),
REPORT_HIER_COMPONENT_ID VARCHAR(40),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SEIS_TRANSACTION_ID VARCHAR(40),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
TRANSACTION_TYPE VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_LOG_CURVE_ID VARCHAR(40),
WELL_LOG_ID VARCHAR(40),
WELL_LOG_SOURCE VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ENT_GROUP'
CREATE TABLE ent_group
(
ENTITLEMENT_ID VARCHAR(40) NOT NULL,
SECURITY_GROUP_ID VARCHAR(40) NOT NULL,
GROUP_OBS_NO INT,
ACCESS_CONDITION VARCHAR(1024),
ACCESS_TYPE VARCHAR(40),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RESTRICTION_DESC VARCHAR(240),
SECURITY_DESC VARCHAR(1024),
SOURCE VARCHAR(40),
USE_DESC VARCHAR(1024),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ENT_SECURITY_BA'
CREATE TABLE ent_security_ba
(
SECURITY_GROUP_ID VARCHAR(40) NOT NULL,
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
BA_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ENT_SECURITY_GROUP'
CREATE TABLE ent_security_group
(
SECURITY_GROUP_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROUP_DESC VARCHAR(1024),
GROUP_LONG_NAME VARCHAR(255),
GROUP_SHORT_NAME VARCHAR(30),
GROUP_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ENT_SECURITY_GROUP_XREF'
CREATE TABLE ent_security_group_xref
(
SECURITY_GROUP_ID1 VARCHAR(40) NOT NULL,
SECURITY_GROUP_ID2 VARCHAR(40) NOT NULL,
XREF_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
XREF_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE EQUIPMENT'
CREATE TABLE equipment
(
EQUIPMENT_ID VARCHAR(40) NOT NULL,
ACQUIRE_DATE_NEW TIMESTAMP(0),
ACTIVE_IND VARCHAR(1),
CATALOGUE_EQUIP_ID VARCHAR(40),
COMMISSION_DATE TIMESTAMP(0),
CURRENT_OWNER_BA_ID VARCHAR(40),
DECOMMISSION_DATE TIMESTAMP(0),
DESCRIPTION VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_GROUP VARCHAR(40),
EQUIPMENT_NAME VARCHAR(255),
EQUIPMENT_TYPE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
MANUFACTURER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PURCHASE_DATE TIMESTAMP(0),
REFERENCE_NUM VARCHAR(30),
REMARK VARCHAR(2000),
SERIAL_NUM VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE EQUIPMENT_ALIAS'
CREATE TABLE equipment_alias
(
EQUIPMENT_ID VARCHAR(40) NOT NULL,
EQUIP_ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_FULL_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE EQUIPMENT_BA'
CREATE TABLE equipment_ba
(
EQUIP_ID VARCHAR(40) NOT NULL,
BA_OBS_NO INT,
ACQUIRE_DATE TIMESTAMP(0),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIP_BA_ID VARCHAR(40),
EQUIP_LEASE_IND VARCHAR(1),
EQUIP_OWNED_IND VARCHAR(1),
EQUIP_RENT_IND VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
FINANCE_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_NAME VARCHAR(255),
PURCHASE_DATE TIMESTAMP(0),
RELEASE_DATE TIMESTAMP(0),
REMARK VARCHAR(2000),
ROLE_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE EQUIPMENT_COMPONENT'
CREATE TABLE equipment_component
(
EQUIPMENT_ID VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_COMPONENT_TYPE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_SOURCE VARCHAR(40),
PR_STR_UWI VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
STRING_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_ACTIVITY_UWI VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE EQUIPMENT_MAINTAIN'
CREATE TABLE equipment_maintain
(
EQUIPMENT_ID VARCHAR(40) NOT NULL,
EQUIP_MAINT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ACTUAL_END_DATE TIMESTAMP(0),
ACTUAL_START_DATE TIMESTAMP(0),
CATALOGUE_EQUIP_ID VARCHAR(40),
COMPLETED_BY_BA_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FAILURE_IND VARCHAR(1),
LOCATION_BA_ADDRESS_OBS_NO INT,
LOCATION_BA_ID VARCHAR(40),
LOCATION_BA_SOURCE VARCHAR(40),
MAINT_LOCATION_TYPE VARCHAR(40),
MAINT_REASON VARCHAR(40),
MAINT_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROJECT_ID VARCHAR(40),
REMARK VARCHAR(2000),
SCHEDULED_DATE TIMESTAMP(0),
SCHEDULED_IND VARCHAR(1),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
SYSTEM_CONDITION VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE EQUIPMENT_MAINT_STATUS'
CREATE TABLE equipment_maint_status
(
EQUIPMENT_ID VARCHAR(40) NOT NULL,
EQUIP_MAINT_ID VARCHAR(40) NOT NULL,
STATUS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAINTAIN_STATUS VARCHAR(40),
MAINTAIN_STATUS_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE EQUIPMENT_MAINT_TYPE'
CREATE TABLE equipment_maint_type
(
CATALOGUE_EQUIP_ID VARCHAR(40) NOT NULL,
MAINT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE EQUIPMENT_SPEC'
CREATE TABLE equipment_spec
(
EQUIPMENT_ID VARCHAR(40) NOT NULL,
SPEC_SET_ID VARCHAR(40) NOT NULL,
SPEC_TYPE VARCHAR(40) NOT NULL,
SPEC_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM VARCHAR(40),
AVERAGE_VALUE_UOM VARCHAR(40),
COST DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
CURRENCY_UOM VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIP_MAINT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
RATIO_NAME VARCHAR(30),
RATIO_VALUE_AVERAGE DOUBLE PRECISION,
RATIO_VALUE_MAXIMUM DOUBLE PRECISION,
RATIO_VALUE_MINIMUM DOUBLE PRECISION,
REFERENCE_VALUE DOUBLE PRECISION,
REFERENCE_VALUE_OUOM VARCHAR(40),
REFERENCE_VALUE_TYPE VARCHAR(40),
REFERENCE_VALUE_UOM VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SPEC_CODE VARCHAR(40),
SPEC_DESC VARCHAR(1024),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE EQUIPMENT_SPEC_SET'
CREATE TABLE equipment_spec_set
(
SPEC_SET_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_TYPE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_NAME VARCHAR(255),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SPEC_SET_DESC VARCHAR(240),
SPEC_SET_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE EQUIPMENT_SPEC_SET_SPEC'
CREATE TABLE equipment_spec_set_spec
(
SPEC_SET_ID VARCHAR(40) NOT NULL,
SPEC_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PREFERRED_NAME VARCHAR(255),
REFERENCE_VALUE_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE EQUIPMENT_STATUS'
CREATE TABLE equipment_status
(
EQUIPMENT_ID VARCHAR(40) NOT NULL,
EQUIP_STATUS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
EQUIP_STATUS VARCHAR(40),
EQUIP_STATUS_TYPE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
PERCENT_CAPABILITY DECIMAL(15,12),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
START_TIME TIMESTAMP(0),
TIMEZONE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE EQUIPMENT_USE_STAT'
CREATE TABLE equipment_use_stat
(
EQUIPMENT_ID VARCHAR(40) NOT NULL,
SPEC_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM VARCHAR(40),
AVERAGE_VALUE_UOM VARCHAR(40),
COST DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
CURRENCY_UOM VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
EQUIP_USE_STAT_TYPE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PERCENT_CAPACITY DECIMAL(15,12),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
START_TIME TIMESTAMP(0),
TIMEZONE VARCHAR(40),
USE_CODE VARCHAR(40),
USE_DESC VARCHAR(1024),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE EQUIPMENT_XREF'
CREATE TABLE equipment_xref
(
EQUIPMENT_ID VARCHAR(40) NOT NULL,
EQUIPMENT_PART_ID VARCHAR(40) NOT NULL,
EQUIPMENT_XREF_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
COMMISSION_DATE TIMESTAMP(0),
DECOMMISSION_DATE TIMESTAMP(0),
DESCRIPTION VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIP_XREF_TYPE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
INTERCHANGABLE_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FACILITY'
CREATE TABLE facility
(
FACILITY_ID VARCHAR(40) NOT NULL,
FACILITY_TYPE VARCHAR(40) NOT NULL,
ABANDONED_DATE TIMESTAMP(0),
ACTIVE_DATE TIMESTAMP(0),
ACTIVE_IND VARCHAR(1),
CATALOGUE_EQUIP_ID VARCHAR(40),
CONSTRUCTED_DATE TIMESTAMP(0),
COORD_ACQUISITION_ID VARCHAR(40),
COORD_SYSTEM_ID VARCHAR(40),
CURRENT_OPERATOR VARCHAR(40),
DEPTH DECIMAL(15,5),
DEPTH_OUOM VARCHAR(40),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
ELEVATION DECIMAL(10,5),
ELEVATION_OUOM VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_DIAMETER DECIMAL(10,5),
FACILITY_DIAMETER_OUOM VARCHAR(40),
FACILITY_FUNCTION VARCHAR(40),
FACILITY_LONG_NAME VARCHAR(255),
FACILITY_NO BIGINT,
FACILITY_SHORT_NAME VARCHAR(30),
H2S_IND VARCHAR(1),
INACTIVE_DATE TIMESTAMP(0),
LAST_INJECTION_DATE TIMESTAMP(0),
LAST_PRODUCTION_DATE TIMESTAMP(0),
LAST_REPORTED_DATE TIMESTAMP(0),
LATITUDE DECIMAL(14,9),
LOCAL_COORD_SYSTEM_ID VARCHAR(40),
LONGITUDE DECIMAL(14,9),
MANUFACTURED_BY VARCHAR(40),
ON_INJECTION_DATE TIMESTAMP(0),
ON_PRODUCTION_DATE TIMESTAMP(0),
PIPELINE_MATERIAL VARCHAR(40),
PIPELINE_TYPE VARCHAR(40),
PIPE_COVER_TYPE VARCHAR(40),
PLOT_NAME VARCHAR(30),
PLOT_SYMBOL VARCHAR(40),
PPDM_GUID VARCHAR(38),
PRIMARY_FIELD_ID VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
UNIT_OPERATED_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FACILITY_ALIAS'
CREATE TABLE facility_alias
(
FACILITY_ID VARCHAR(40) NOT NULL,
FACILITY_TYPE VARCHAR(40) NOT NULL,
FACILITY_ALIAS_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FACILITY_AREA'
CREATE TABLE facility_area
(
FACILITY_TYPE VARCHAR(40) NOT NULL,
FACILITY_ID VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FACILITY_BA_SERVICE'
CREATE TABLE facility_ba_service
(
FACILITY_ID VARCHAR(40) NOT NULL,
FACILITY_TYPE VARCHAR(40) NOT NULL,
PROVIDED_BY VARCHAR(40) NOT NULL,
SERVICE_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
BA_SERVICE_TYPE VARCHAR(40),
CONTACT_BA_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PROVISION_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REMARK VARCHAR(2000),
REPRESENTED_BA_ID VARCHAR(40),
SERVICE_QUALITY VARCHAR(40),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FACILITY_CLASS'
CREATE TABLE facility_class
(
FACILITY_ID VARCHAR(40) NOT NULL,
FACILITY_TYPE VARCHAR(40) NOT NULL,
FACILITY_CLASS_TYPE VARCHAR(40) NOT NULL,
FACILITY_CLASS_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FACILITY_COMPONENT'
CREATE TABLE facility_component
(
FACILITY_ID VARCHAR(40) NOT NULL,
FACILITY_TYPE VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_COMPONENT_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_SOURCE VARCHAR(40),
PR_STR_UWI VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
STRING_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_ACTIVITY_UWI VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FACILITY_DESCRIPTION'
CREATE TABLE facility_description
(
FACILITY_ID VARCHAR(40) NOT NULL,
FACILITY_TYPE VARCHAR(40) NOT NULL,
SPEC_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM VARCHAR(40),
AVERAGE_VALUE_UOM VARCHAR(40),
COST DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
CURRENCY_UOM VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_VALUE DOUBLE PRECISION,
REFERENCE_VALUE_OUOM VARCHAR(40),
REFERENCE_VALUE_TYPE VARCHAR(40),
REFERENCE_VALUE_UOM VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SPEC_CODE VARCHAR(40),
SPEC_DESC VARCHAR(1024),
SPEC_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FACILITY_EQUIPMENT'
CREATE TABLE facility_equipment
(
FACILITY_ID VARCHAR(40) NOT NULL,
FACILITY_TYPE VARCHAR(40) NOT NULL,
EQUIPMENT_ID VARCHAR(40) NOT NULL,
INSTALL_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INSTALL_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMOVE_DATE TIMESTAMP(0),
REMOVE_REASON VARCHAR(40),
SOURCE VARCHAR(40),
USE_DESCRIPTION VARCHAR(1024),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FACILITY_FIELD'
CREATE TABLE facility_field
(
FACILITY_ID VARCHAR(40) NOT NULL,
FACILITY_TYPE VARCHAR(40) NOT NULL,
FIELD_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FACILITY_LICENSE'
CREATE TABLE facility_license
(
FACILITY_ID VARCHAR(40) NOT NULL,
FACILITY_TYPE VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ADJUST_13_MONTH_DESC VARCHAR(240),
ADJUST_13_MONTH_IND VARCHAR(1),
APPLICATION_ID VARCHAR(40),
APPROVED_FACILITY_CLASS VARCHAR(40),
ASSIGNED_FIELD_ID VARCHAR(40),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_LICENSE_TYPE VARCHAR(40),
FEES_PAID_IND VARCHAR(1),
GRANTED_BY_BA_ID VARCHAR(40),
GRANTED_BY_CONTACT_ID VARCHAR(40),
GRANTED_DATE TIMESTAMP(0),
GRANTED_TO_BA_ID VARCHAR(40),
GRANTED_TO_CONTACT_ID VARCHAR(40),
LICENSE_EXTENSION_COND VARCHAR(40),
LICENSE_LATITUDE DECIMAL(14,9),
LICENSE_LOCATION VARCHAR(40),
LICENSE_LONGITUDE DECIMAL(14,9),
LICENSE_NUM VARCHAR(30),
LICENSE_TERM DECIMAL(10,5),
LICENSE_TERM_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
RATE_SCHEDULE_ID VARCHAR(40),
REL_LICENSE_ID VARCHAR(40),
REMARK VARCHAR(2000),
RENEWAL_CONDITION VARCHAR(40),
SECONDARY_TERM DECIMAL(10,5),
SECONDARY_TERM_UOM VARCHAR(40),
SOURCE VARCHAR(40),
VIOLATION_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FACILITY_LIC_ALIAS'
CREATE TABLE facility_lic_alias
(
FACILITY_ID VARCHAR(40) NOT NULL,
FACILITY_TYPE VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FACILITY_LIC_AREA'
CREATE TABLE facility_lic_area
(
FACILITY_ID VARCHAR(40) NOT NULL,
FACILITY_TYPE VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FACILITY_LIC_COND'
CREATE TABLE facility_lic_cond
(
FACILITY_ID VARCHAR(40) NOT NULL,
FACILITY_TYPE VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
CONDITION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONDITION_CODE VARCHAR(40),
CONDITION_TYPE VARCHAR(40),
CONDITION_VALUE DECIMAL(12,2),
CONDITION_VALUE_UOM VARCHAR(40),
CONTACT_BA_ID VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
DESCRIPTION VARCHAR(240),
DUE_CONDITION VARCHAR(40),
DUE_DATE TIMESTAMP(0),
DUE_FREQUENCY VARCHAR(40),
DUE_TERM DECIMAL(10,5),
DUE_TERM_UOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXEMPT_IND VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
FULFILLED_BY_BA_ID VARCHAR(40),
FULFILLED_DATE TIMESTAMP(0),
FULFILLED_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
PRODUCT_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
RESTRICTION_ID VARCHAR(40),
RESTRICTION_VERSION INT,
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FACILITY_LIC_REMARK'
CREATE TABLE facility_lic_remark
(
FACILITY_ID VARCHAR(40) NOT NULL,
FACILITY_TYPE VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
REMARK_ID VARCHAR(40) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
AUTHOR VARCHAR(255),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_DATE TIMESTAMP(0),
REMARK_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FACILITY_LIC_STATUS'
CREATE TABLE facility_lic_status
(
FACILITY_ID VARCHAR(40) NOT NULL,
FACILITY_TYPE VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
STATUS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LICENSE_STATUS VARCHAR(40),
LICENSE_STATUS_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FACILITY_LIC_TYPE'
CREATE TABLE facility_lic_type
(
GRANTED_BY_BA_ID VARCHAR(40) NOT NULL,
FACILITY_LICENSE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
RATE_SCHEDULE_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FACILITY_LIC_VIOLATION'
CREATE TABLE facility_lic_violation
(
LICENSE_ID VARCHAR(40) NOT NULL,
FACILITY_TYPE VARCHAR(40) NOT NULL,
FACILITY_ID VARCHAR(40) NOT NULL,
VIOLATION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONDITION_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RESOLVE_DATE TIMESTAMP(0),
RESOLVE_DESC VARCHAR(1024),
RESOLVE_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
VIOLATION_DATE TIMESTAMP(0),
VIOLATION_DESC VARCHAR(1024),
VIOLATION_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FACILITY_MAINTAIN'
CREATE TABLE facility_maintain
(
FACILITY_ID VARCHAR(40) NOT NULL,
FACILITY_TYPE VARCHAR(40) NOT NULL,
MAINTAIN_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ACTUAL_END_DATE TIMESTAMP(0),
ACTUAL_START_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAINTAIN_BA_ID VARCHAR(40),
MAINTAIN_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SCHEDULE_END_DATE TIMESTAMP(0),
SCHEDULE_START_DATE TIMESTAMP(0),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FACILITY_MAINT_STATUS'
CREATE TABLE facility_maint_status
(
FACILITY_ID VARCHAR(40) NOT NULL,
FACILITY_TYPE VARCHAR(40) NOT NULL,
MAINTAIN_ID VARCHAR(40) NOT NULL,
STATUS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAINTAIN_STATUS VARCHAR(40),
MAINTAIN_STATUS_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FACILITY_RATE'
CREATE TABLE facility_rate
(
FACILITY_ID VARCHAR(40) NOT NULL,
FACILITY_TYPE VARCHAR(40) NOT NULL,
RATE_SCHEDULE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FACILITY_RESTRICTION'
CREATE TABLE facility_restriction
(
FACILITY_ID VARCHAR(40) NOT NULL,
FACILITY_TYPE VARCHAR(40) NOT NULL,
RESTRICTION_ID VARCHAR(40) NOT NULL,
RESTRICTION_VERSION INT,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FACILITY_STATUS'
CREATE TABLE facility_status
(
FACILITY_ID VARCHAR(40) NOT NULL,
FACILITY_TYPE VARCHAR(40) NOT NULL,
STATUS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERCENT_CAPABILITY DECIMAL(15,12),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
START_TIME TIMESTAMP(0),
STATUS VARCHAR(40),
STATUS_TYPE VARCHAR(40),
TIMEZONE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FACILITY_SUBSTANCE'
CREATE TABLE facility_substance
(
FACILITY_ID VARCHAR(40) NOT NULL,
FACILITY_TYPE VARCHAR(40) NOT NULL,
SUBSTANCE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AVERAGE_CAPACITY DECIMAL(14,4),
CAPACITY_OUOM VARCHAR(40),
CAPACITY_UOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_CAPACITY DECIMAL(14,4),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SUBSTANCE_EXCLUDED_IND VARCHAR(1),
SUBSTANCE_INCLUDED_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FACILITY_VERSION'
CREATE TABLE facility_version
(
FACILITY_ID VARCHAR(40) NOT NULL,
FACILITY_TYPE VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVE_DATE TIMESTAMP(0),
ACTIVE_IND VARCHAR(1),
CONSTRUCTED_DATE TIMESTAMP(0),
CURRENT_OPERATOR VARCHAR(40),
CURRENT_STATUS_DATE TIMESTAMP(0),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_LONG_NAME VARCHAR(255),
FACILITY_SHORT_NAME VARCHAR(30),
FACILITY_STATUS_ID VARCHAR(40),
INACTIVE_DATE TIMESTAMP(0),
LAST_INJECTION_DATE TIMESTAMP(0),
LAST_PRODUCTION_DATE TIMESTAMP(0),
LAST_REPORTED_DATE TIMESTAMP(0),
LATITUDE DECIMAL(14,9),
LONGITUDE DECIMAL(14,9),
ON_INJECTION_DATE TIMESTAMP(0),
ON_PRODUCTION_DATE TIMESTAMP(0),
PLOT_NAME VARCHAR(255),
PLOT_SYMBOL VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
STATUS_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FACILITY_XREF'
CREATE TABLE facility_xref
(
FACILITY_ID VARCHAR(40) NOT NULL,
FACILITY_TYPE VARCHAR(40) NOT NULL,
FACILITY_ID_2 VARCHAR(40) NOT NULL,
FACILITY_TYPE_2 VARCHAR(40) NOT NULL,
XREF_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_XREF_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FIELD'
CREATE TABLE field
(
FIELD_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
DISCOVERY_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_ABBREVIATION VARCHAR(12),
FIELD_AREA_OBS_NO INT,
FIELD_NAME VARCHAR(255),
FIELD_TYPE VARCHAR(40),
GROUP_FIELD_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FIELD_ALIAS'
CREATE TABLE field_alias
(
FIELD_ID VARCHAR(40) NOT NULL,
FIELD_ALIAS_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FIELD_AREA'
CREATE TABLE field_area
(
FIELD_ID VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
AREA_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FIELD_COMPONENT'
CREATE TABLE field_component
(
FIELD_ID VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_COMPONENT_TYPE VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_SOURCE VARCHAR(40),
PR_STR_UWI VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
STRING_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_ACTIVITY_UWI VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FIELD_INSTRUMENT'
CREATE TABLE field_instrument
(
FIELD_ID VARCHAR(40) NOT NULL,
INSTRUMENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FIELD_VERSION'
CREATE TABLE field_version
(
FIELD_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
DISCOVERY_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_ABBREVIATION VARCHAR(12),
FIELD_AREA_OBS_NO INT,
FIELD_NAME VARCHAR(255),
FIELD_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FINANCE'
CREATE TABLE finance
(
FINANCE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ACTUAL_COST DECIMAL(12,2),
AUTHORIZED_BY_BA_ID VARCHAR(40),
BUDGET_COST DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FINANCE_TYPE VARCHAR(40),
FIN_STATUS VARCHAR(40),
ISSUE_DATE TIMESTAMP(0),
LIMIT_AMOUNT DECIMAL(12,2),
PPDM_GUID VARCHAR(38),
REFERENCE_NUMBER VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
TAX_CREDIT_CODE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FIN_COMPONENT'
CREATE TABLE fin_component
(
FINANCE_ID VARCHAR(40) NOT NULL,
FINANCE_COMPONENT_ID VARCHAR(40) NOT NULL,
ACQUISITION_COST_ID VARCHAR(40),
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_LICENSEE_BA_ID VARCHAR(40),
BA_LICENSE_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EQUIP_BA_OBS_NO INT,
EQUIP_MAINT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_LICENSE_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID2 VARCHAR(40),
FIN_COMPONENT_TABLE VARCHAR(30),
FIN_COMPONENT_TYPE VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_BID_SET_ID VARCHAR(40),
LAND_SALE_JURISDICTION VARCHAR(40),
LAND_SALE_NUMBER VARCHAR(30),
LAND_SALE_OFFERING_BID VARCHAR(40),
LAND_SALE_OFFERING_ID VARCHAR(40),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROD_STRING_ID VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_FORM_OBS_NO INT,
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
RESTRICTION_ID VARCHAR(40),
RESTRICTION_VERSION INT,
REVISION_ID VARCHAR(40),
REVISION_OBS_NO INT,
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_LICENSE_ID VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SEIS_TRANSACTION_ID VARCHAR(40),
SEIS_TRANSACTION_TYPE VARCHAR(40),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_DRILL_PERIOD_OBS_NO INT,
WELL_LICENSE_ID VARCHAR(40),
WELL_LICENSE_SOURCE VARCHAR(40),
WELL_SERVICE_PROVIDED_BY VARCHAR(40),
WELL_SERVICE_SEG_OBS_NO INT,
WELL_SERVICE_SEQ_NO INT,
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FIN_COST_SUMMARY'
CREATE TABLE fin_cost_summary
(
COST_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AMI_IND VARCHAR(1),
CONFIDENTIAL_IND VARCHAR(1),
COST_AMOUNT DECIMAL(12,2),
COST_PER_SIZE DECIMAL(12,2),
COST_PER_SIZE_OUOM VARCHAR(40),
COST_TYPE VARCHAR(40),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FINANCE_COMPONENT_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
PAID_DATE TIMESTAMP(0),
PARENT_COST_ID VARCHAR(40),
PERCENT_OF_PARENT DECIMAL(15,12),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REPORT_COST_IND VARCHAR(1),
SOURCE VARCHAR(40),
SUBMIT_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FIN_XREF'
CREATE TABLE fin_xref
(
FINANCE_ID1 VARCHAR(40) NOT NULL,
FINANCE_ID2 VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DISTRIBUTION_PERCENT DECIMAL(15,12),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIN_XREF_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FOSSIL'
CREATE TABLE fossil
(
FOSSIL_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CLIMATE_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LIFE_HABIT VARCHAR(40),
LOWER_ECOZONE_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
TAXON_GROUP VARCHAR(40),
TAXON_LEAF_ID VARCHAR(40),
UPPER_ECOZONE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FOSSIL_AGE'
CREATE TABLE fossil_age
(
FOSSIL_ID VARCHAR(40) NOT NULL,
AGE_INTERP_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AGE_CONFIDENCE_ID VARCHAR(40),
AVERAGE_AGE DECIMAL(15,5),
AVERAGE_AGE_ERROR_MINUS DECIMAL(15,5),
AVERAGE_AGE_ERROR_PLUS DECIMAL(15,5),
AVERAGE_REL_STRAT_NAME_SET VARCHAR(40),
AVERAGE_REL_STRAT_UNIT_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOWER_MAX_AGE DECIMAL(15,5),
LOWER_MAX_AGE_ERROR_MINUS DECIMAL(15,5),
LOWER_MAX_AGE_ERROR_PLUS DECIMAL(15,5),
LOWER_MIN_AGE DECIMAL(15,5),
LOWER_MIN_AGE_ERROR_MINUS DECIMAL(15,5),
LOWER_MIN_AGE_ERROR_PLUS DECIMAL(15,5),
LOWER_REL_STRAT_NAME_SET VARCHAR(40),
LOWER_REL_STRAT_UNIT_ID VARCHAR(40),
MAX_AGE DECIMAL(15,5),
MAX_AGE_ERROR_MINUS DECIMAL(15,5),
MAX_AGE_ERROR_PLUS DECIMAL(15,5),
MIN_AGE DECIMAL(15,5),
MIN_AGE_ERROR_MINUS DECIMAL(15,5),
MIN_AGE_ERROR_PLUS DECIMAL(15,5),
POST_QUALIFIER VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PRE_QUALIFIER VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
UPPER_MAX_AGE DECIMAL(15,5),
UPPER_MAX_AGE_ERROR_MINUS DECIMAL(15,5),
UPPER_MAX_AGE_ERROR_PLUS DECIMAL(15,5),
UPPER_MIN_AGE DECIMAL(15,5),
UPPER_MIN_AGE_ERROR_MINUS DECIMAL(15,5),
UPPER_MIN_AGE_ERROR_PLUS DECIMAL(15,5),
UPPER_REL_STRAT_NAME_SET VARCHAR(40),
UPPER_REL_STRAT_UNIT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FOSSIL_ASSEMBLAGE'
CREATE TABLE fossil_assemblage
(
STRAT_NAME_SET_ID VARCHAR(40) NOT NULL,
STRAT_UNIT_ID VARCHAR(40) NOT NULL,
TAXON_LEAF_ID VARCHAR(40) NOT NULL,
INTERP_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ASSEMBLAGE_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OLDEST_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
PRIMARY_MARKER_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FOSSIL_DESC'
CREATE TABLE fossil_desc
(
FOSSIL_ID VARCHAR(40) NOT NULL,
FOSSIL_DESC_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DATE_FORMAT_DESC TIMESTAMP(0),
DESCRIPTION VARCHAR(2000),
DESCRIPTION_CODE VARCHAR(40),
DESCRIPTION_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_UOM VARCHAR(40),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
VALUE_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FOSSIL_DOCUMENT'
CREATE TABLE fossil_document
(
FOSSIL_ID VARCHAR(40) NOT NULL,
SOURCE_DOCUMENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FOSSIL_EQUIVALENCE'
CREATE TABLE fossil_equivalence
(
FOSSIL_ID VARCHAR(40) NOT NULL,
EQUIV_FOSSIL_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FOSSIL_NAME_SET'
CREATE TABLE fossil_name_set
(
FOSSIL_NAME_SET_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
CERTIFIED_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FOSSIL_NAME_SET_TYPE VARCHAR(40),
NAME_SET_NAME VARCHAR(255),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FOSSIL_NAME_SET_FOSSIL'
CREATE TABLE fossil_name_set_fossil
(
FOSSIL_NAME_SET_ID VARCHAR(40) NOT NULL,
FOSSIL_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FOSSIL_TAXON_ALIAS'
CREATE TABLE fossil_taxon_alias
(
TAXON_LEAF_ID VARCHAR(40) NOT NULL,
FOSSIL_ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_FOSSIL_ID VARCHAR(40),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FOSSIL_TAXON_HIER'
CREATE TABLE fossil_taxon_hier
(
PARENT_TAXON_LEAF_ID VARCHAR(40) NOT NULL,
CHILD_TAXON_LEAF_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
TAXON_NAME VARCHAR(255),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FOSSIL_TAXON_LEAF'
CREATE TABLE fossil_taxon_leaf
(
TAXON_LEAF_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
TAXON_LEVEL VARCHAR(40),
TAXON_NAME VARCHAR(255),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE FOSSIL_XREF'
CREATE TABLE fossil_xref
(
FOSSIL_ID1 VARCHAR(40) NOT NULL,
FOSSIL_ID2 VARCHAR(40) NOT NULL,
FOSSIL_XREF_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FOSSIL_XREF_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE HSE_INCIDENT'
CREATE TABLE hse_incident
(
INCIDENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INCIDENT_CLASS_ID VARCHAR(40),
INCIDENT_DATE TIMESTAMP(0),
INCIDENT_DURATION DECIMAL(10,5),
INCIDENT_DURATION_OUOM VARCHAR(40),
INCIDENT_DURATION_UOM VARCHAR(40),
LOST_TIME_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
RECORDED_TIME TIMESTAMP(0),
RECORDED_TIMEZONE VARCHAR(40),
REMARK VARCHAR(2000),
REPORTED_BY_BA_ID VARCHAR(40),
REPORTED_BY_NAME VARCHAR(255),
REPORTED_IND VARCHAR(1),
SOURCE VARCHAR(40),
WORK_RELATED_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE HSE_INCIDENT_BA'
CREATE TABLE hse_incident_ba
(
INCIDENT_ID VARCHAR(40) NOT NULL,
PARTY_OBS_NO INT,
PARTY_ROLE_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
COMPANY_BA_ID VARCHAR(40),
DETAIL_OBS_NO INT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INVOLVED_BA_ROLE VARCHAR(40),
INVOLVED_BA_STATUS VARCHAR(40),
INVOLVED_PARTY_BA_ID VARCHAR(40),
PERIOD_OBS_NO INT,
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
UWI VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE HSE_INCIDENT_CAUSE'
CREATE TABLE hse_incident_cause
(
INCIDENT_ID VARCHAR(40) NOT NULL,
CAUSE_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CAUSE_CODE VARCHAR(40),
CAUSE_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE HSE_INCIDENT_CLASS'
CREATE TABLE hse_incident_class
(
INCIDENT_CLASS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FULL_NAME VARCHAR(255),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_NUM VARCHAR(255),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE HSE_INCIDENT_CLASS_ALIAS'
CREATE TABLE hse_incident_class_alias
(
INCIDENT_CLASS_ID VARCHAR(40) NOT NULL,
ALIAS_OBS_NO INT,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE HSE_INCIDENT_COMPONENT'
CREATE TABLE hse_incident_component
(
INCIDENT_ID VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ADDRESS_OBS_NO INT,
ADDRESS_SOURCE VARCHAR(40),
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
COMPONENT_ROLE VARCHAR(40),
COMPONENT_TYPE VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
CREW_COMPANY_BA_ID VARCHAR(40),
CREW_ID VARCHAR(40),
CREW_MEMBER_BA_ID VARCHAR(40),
CREW_MEMBER_OBS_NO INT,
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ACTIVITY_TYPE VARCHAR(40),
PDEN_AMENDMENT_SEQ_NO INT,
PDEN_ID VARCHAR(40),
PDEN_PERIOD_ID VARCHAR(40),
PDEN_PERIOD_TYPE VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PDEN_VOLUME_DATE TIMESTAMP(0),
PDEN_VOLUME_DATE_DESC VARCHAR(8),
PDEN_VOLUME_METHOD VARCHAR(40),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROD_STRING_ID VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PROJECT_PLAN_ID VARCHAR(40),
PR_STR_FORM_OBS_NO INT,
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
RESTRICTION_ID VARCHAR(40),
RESTRICTION_VERSION INT,
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
TOTAL_INCIDENT_COUNT BIGINT,
TOTAL_INCIDENT_PERIOD DECIMAL(10,5),
TOTAL_INCIDENT_PERIOD_UOM VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_DRILL_PERIOD_OBS_NO INT,
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE HSE_INCIDENT_DETAIL'
CREATE TABLE hse_incident_detail
(
INCIDENT_ID VARCHAR(40) NOT NULL,
DETAIL_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
DETAIL_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INCIDENT_DATE TIMESTAMP(0),
INCIDENT_DURATION DECIMAL(10,5),
INCIDENT_DURATION_OUOM VARCHAR(40),
INCIDENT_DURATION_UOM VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_SEVERITY_ID VARCHAR(40),
INCIDENT_TYPE_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE HSE_INCIDENT_EQUIP'
CREATE TABLE hse_incident_equip
(
INCIDENT_ID VARCHAR(40) NOT NULL,
EQUIP_OBS_NO INT,
EQUIP_ROLE_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CREW_ROLE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_GROUP VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EQUIPMENT_TYPE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
PERIOD_OBS_NO INT,
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
UWI VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE HSE_INCIDENT_EQUIV'
CREATE TABLE hse_incident_equiv
(
INCIDENT_SET_ID VARCHAR(40) NOT NULL,
INCIDENT_TYPE_ID VARCHAR(40) NOT NULL,
INCIDENT_SET_ID2 VARCHAR(40) NOT NULL,
INCIDENT_TYPE_ID2 VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE HSE_INCIDENT_INTERACTION'
CREATE TABLE hse_incident_interaction
(
INCIDENT_ID VARCHAR(40) NOT NULL,
INTERACTION_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CAUSE_OBS_NO INT,
DESCRIPTION VARCHAR(1024),
DETAIL_OBS_NO INT,
EFFECTIVE_DATE TIMESTAMP(0),
EQUIP_OBS_NO INT,
EQUIP_ROLE_OBS_NO INT,
EXPIRY_DATE TIMESTAMP(0),
INCIDENT_SUBSTANCE VARCHAR(40),
INTERACTION_TYPE VARCHAR(40),
PARTY_OBS_NO INT,
PARTY_ROLE_OBS_NO INT,
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RESPONSE_OBS_NO INT,
SOURCE VARCHAR(40),
SUBSTANCE_SEQ_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE HSE_INCIDENT_REMARK'
CREATE TABLE hse_incident_remark
(
INCIDENT_ID VARCHAR(40) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_BY_BA_ID VARCHAR(40),
REMARK_DATE TIMESTAMP(0),
REMARK_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE HSE_INCIDENT_RESPONSE'
CREATE TABLE hse_incident_response
(
INCIDENT_ID VARCHAR(40) NOT NULL,
RESPONSE_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PROJECT_ID VARCHAR(40),
REMARK VARCHAR(2000),
RESPONSE_RESULT VARCHAR(40),
RESPONSE_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE HSE_INCIDENT_SET'
CREATE TABLE hse_incident_set
(
INCIDENT_SET_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FULL_NAME VARCHAR(255),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_NUM VARCHAR(255),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE HSE_INCIDENT_SEVERITY'
CREATE TABLE hse_incident_severity
(
INCIDENT_SET_ID VARCHAR(40) NOT NULL,
INCIDENT_TYPE_ID VARCHAR(40) NOT NULL,
INCIDENT_SEVERITY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(2000),
DETERMINATION_METHOD VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REPORT_IND VARCHAR(1),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE HSE_INCIDENT_SEV_ALIAS'
CREATE TABLE hse_incident_sev_alias
(
INCIDENT_SET_ID VARCHAR(40) NOT NULL,
INCIDENT_TYPE_ID VARCHAR(40) NOT NULL,
INCIDENT_SEVERITY_ID VARCHAR(40) NOT NULL,
SEVERITY_ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE HSE_INCIDENT_SUBSTANCE'
CREATE TABLE hse_incident_substance
(
INCIDENT_ID VARCHAR(40) NOT NULL,
INCIDENT_SUBSTANCE VARCHAR(40) NOT NULL,
SUBSTANCE_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SUBSTANCE_ROLE VARCHAR(40),
VOLUME DECIMAL(14,4),
VOLUME_OUOM VARCHAR(40),
VOLUME_UOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE HSE_INCIDENT_TYPE'
CREATE TABLE hse_incident_type
(
INCIDENT_SET_ID VARCHAR(40) NOT NULL,
INCIDENT_TYPE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(2000),
DETERMINATION_METHOD VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PROJECT_PLAN_ID VARCHAR(40),
REMARK VARCHAR(2000),
REPORT_IND VARCHAR(1),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE HSE_INCIDENT_TYPE_ALIAS'
CREATE TABLE hse_incident_type_alias
(
INCIDENT_SET_ID VARCHAR(40) NOT NULL,
INCIDENT_TYPE_ID VARCHAR(40) NOT NULL,
INCIDENT_ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE HSE_INCIDENT_WEATHER'
CREATE TABLE hse_incident_weather
(
INCIDENT_ID VARCHAR(40) NOT NULL,
WEATHER_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HEAVE DECIMAL(10,5),
PITCH DECIMAL(10,5),
PPDM_GUID VARCHAR(38),
RECORDED_TIME TIMESTAMP(0),
RECORDED_TIMEZONE VARCHAR(40),
REMARK VARCHAR(2000),
ROAD_CONDITION VARCHAR(40),
ROLL DECIMAL(10,5),
SOURCE VARCHAR(40),
SWELL_HEIGHT DECIMAL(10,5),
TEMPERATURE DECIMAL(10,5),
TEMPERATURE_OUOM VARCHAR(40),
WATER_CONDITION VARCHAR(40),
WAVE_HEIGHT DECIMAL(10,5),
WEATHER_CONDITION VARCHAR(40),
WIND_DIRECTION VARCHAR(40),
WIND_STRENGTH VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE INSTRUMENT'
CREATE TABLE instrument
(
INSTRUMENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ADD_FOR_SERVICE_BA_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
BOOK_NAME VARCHAR(30),
BOOK_NUMBER VARCHAR(40),
CAVEATOR_BA_ID VARCHAR(40),
COMPLETION_REPORT_IND VARCHAR(1),
DESCRIPTION VARCHAR(240),
DISCHARGE_DATE TIMESTAMP(0),
DISCHARGE_IND VARCHAR(1),
DISCHARGE_NUM VARCHAR(30),
DOCUMENT_NUM VARCHAR(30),
DRILLING_INTENT_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INSTRUMENT_TYPE VARCHAR(40),
JURISDICTION VARCHAR(40),
JURISDICTION_ADD_OBS_NO INT,
JURISDICTION_ADD_SOURCE VARCHAR(40),
LINE_NUMBER VARCHAR(40),
PAGE_NUMBER VARCHAR(40),
PLUG_AND_ABANDON_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
PRODUCTION_LEASE_IND VARCHAR(1),
RECEIVED_DATE TIMESTAMP(0),
RECORDED_DATE TIMESTAMP(0),
REGISTERED_BY_BA_ID VARCHAR(40),
REGISTRATION_DATE TIMESTAMP(0),
REGISTRATION_NUM VARCHAR(30),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
VALID_LEASE_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE INSTRUMENT_AREA'
CREATE TABLE instrument_area
(
INSTRUMENT_ID VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE INSTRUMENT_COMPONENT'
CREATE TABLE instrument_component
(
INSTRUMENT_ID VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_COMPONENT_TYPE VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_SOURCE VARCHAR(40),
PR_STR_UWI VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
STRING_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_ACTIVITY_UWI VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE INSTRUMENT_DETAIL'
CREATE TABLE instrument_detail
(
INSTRUMENT_ID VARCHAR(40) NOT NULL,
DETAIL_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM VARCHAR(40),
AVERAGE_VALUE_UOM VARCHAR(40),
COST_VALUE DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
CURRENCY_UOM VARCHAR(40),
DETAIL_DESCRIPTION VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INSTRUMENT_DETAIL_CODE VARCHAR(40),
INSTRUMENT_DETAIL_TYPE VARCHAR(40),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_VALUE DOUBLE PRECISION,
REFERENCE_VALUE_OUOM VARCHAR(40),
REFERENCE_VALUE_TYPE VARCHAR(40),
REFERENCE_VALUE_UOM VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE INSTRUMENT_XREF'
CREATE TABLE instrument_xref
(
INSTRUMENT_ID VARCHAR(40) NOT NULL,
PARENT_INSTRUMENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AMMENDMENT_DESC VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
XREF_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE INTEREST_SET'
CREATE TABLE interest_set
(
INTEREST_SET_ID VARCHAR(40) NOT NULL,
INTEREST_SET_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTEREST_SET_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE INT_SET_COMPONENT'
CREATE TABLE int_set_component
(
INTEREST_SET_ID VARCHAR(40) NOT NULL,
INTEREST_SET_SEQ_NO INT,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
COMPONENT_TYPE VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
JURISDICTION VARCHAR(40),
LAND_OFFERING_BID VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LAND_SALE_OFFERING_ID VARCHAR(40),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ACTIVITY_TYPE VARCHAR(40),
PDEN_AMENDMENT_SEQ_NO INT,
PDEN_DISPOSITION_OBS_NO INT,
PDEN_ID VARCHAR(40),
PDEN_PERIOD_ID VARCHAR(40),
PDEN_PERIOD_TYPE VARCHAR(40),
PDEN_PRODUCT_TYPE VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PDEN_VOLUME_DATE TIMESTAMP(0),
PDEN_VOLUME_DATE_DESC VARCHAR(8),
PDEN_VOLUME_METHOD VARCHAR(40),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROD_STRING_ID VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PROVISION_ID VARCHAR(40),
PR_STR_FORM_OBS_NO INT,
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
TRIGGER_DESC VARCHAR(240),
TRIGGER_EVENT VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_LOG_CURVE_ID VARCHAR(40),
WELL_LOG_ID VARCHAR(40),
WELL_LOG_SOURCE VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE INT_SET_PARTNER'
CREATE TABLE int_set_partner
(
INTEREST_SET_ID VARCHAR(40) NOT NULL,
INTEREST_SET_SEQ_NO INT,
PARTNER_BA_ID VARCHAR(40) NOT NULL,
PARTNER_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ADDRESS_OBS_NO INT,
ADDRESS_SOURCE VARCHAR(40),
BREACH_DESC VARCHAR(240),
BREACH_IND VARCHAR(1),
CHANGE_REASON VARCHAR(240),
CONFIDENTIAL_IND VARCHAR(1),
CONTRACT_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
ESCROW_DESC VARCHAR(240),
ESCROW_IND VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
GROSS_FRACT_INTEREST VARCHAR(100),
GROSS_PERCENT_INTEREST DECIMAL(15,12),
INACTIVE_DATE TIMESTAMP(0),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ROLE VARCHAR(40),
NET_FRACT_INTEREST VARCHAR(100),
NET_PERCENT_INTEREST DECIMAL(15,12),
PENALTY_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
PROVISION_ID VARCHAR(40),
REMARK VARCHAR(2000),
RIGHT_TO_EARN_DESC VARCHAR(240),
RIGHT_TO_EARN_IND VARCHAR(1),
SOURCE VARCHAR(40),
TITLE_OWN_TYPE VARCHAR(40),
UNIT_OPERATED_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE INT_SET_PARTNER_CONT'
CREATE TABLE int_set_partner_cont
(
INTEREST_SET_ID VARCHAR(40) NOT NULL,
INTEREST_SET_SEQ_NO INT,
PARTNER_BA_ID VARCHAR(40) NOT NULL,
PARTNER_OBS_NO INT,
CONTACT_BA_ID VARCHAR(40) NOT NULL,
CONTACT_OBS_NO INT,
CONTACT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ADDRESS_OBS_NO INT,
ADDRESS_SOURCE VARCHAR(40),
CONTACT_ORG_BA_ID VARCHAR(40),
CONTACT_ORG_BA_SEQ_NO INT,
CONTACT_ORG_ORGANIZATION_ID VARCHAR(40),
CONTACT_ROLE VARCHAR(40),
CONTRACT_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INACTIVE_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PROVISION_ID VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE INT_SET_STATUS'
CREATE TABLE int_set_status
(
INTEREST_SET_ID VARCHAR(40) NOT NULL,
INTEREST_SET_SEQ_NO INT,
STATUS_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EFFECTIVE_TERM VARCHAR(240),
EFFECTIVE_TERM_OUOM VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REASON VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STATUS VARCHAR(40),
STATUS_TYPE VARCHAR(40),
UNDETERMINED_TERM_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE INT_SET_XREF'
CREATE TABLE int_set_xref
(
INTEREST_SET_ID VARCHAR(40) NOT NULL,
INTEREST_SET_SEQ_NO INT,
INTEREST_SET_ID_2 VARCHAR(40) NOT NULL,
INTEREST_SET_SEQ_NO_2 INT,
INT_SET_XREF_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CONTRACT_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INT_SET_XREF_TYPE VARCHAR(40),
PARTNER_BA_ID VARCHAR(40),
PARTNER_BA_ID_2 VARCHAR(40),
PARTNER_OBS_NO INT,
PARTNER_OBS_NO_2 INT,
PPDM_GUID VARCHAR(38),
PROVISION_ID VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_AGREEMENT'
CREATE TABLE land_agreement
(
LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
LAND_RIGHT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LAND_AGREE_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROFR_IND VARCHAR(1),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_AGREE_PART'
CREATE TABLE land_agree_part
(
LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
LAND_RIGHT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DEC_OF_TRUST_IND VARCHAR(1),
DEC_OF_TRUST_REMARK VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LAND_AGREE_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROFR_IND VARCHAR(1),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_ALIAS'
CREATE TABLE land_alias
(
LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
LAND_RIGHT_ID VARCHAR(40) NOT NULL,
LR_ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_NUMBER VARCHAR(30),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LAND_REF_NUM_TYPE VARCHAR(40),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REFERENCE_NUM VARCHAR(30),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_AREA'
CREATE TABLE land_area
(
LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
LAND_RIGHT_ID VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROSS_SIZE DECIMAL(20,10),
GROSS_SIZE_OUOM VARCHAR(40),
NET_SIZE DECIMAL(20,10),
NET_SIZE_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_BA_SERVICE'
CREATE TABLE land_ba_service
(
LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
LAND_RIGHT_ID VARCHAR(40) NOT NULL,
PROVIDED_BY VARCHAR(40) NOT NULL,
SERVICE_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
BA_SERVICE_TYPE VARCHAR(40),
CONTACT_BA_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
ORGANIZATION_ID VARCHAR(40),
ORGANIZATION_SEQ_NO INT,
PPDM_GUID VARCHAR(38),
PROVIDED_FOR_BA_ID VARCHAR(40),
PROVISION_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REMARK VARCHAR(2000),
REPRESENTED_BA_ID VARCHAR(40),
SERVICE_QUALITY VARCHAR(40),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_OCCUPANT'
CREATE TABLE land_occupant
(
LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
LAND_RIGHT_ID VARCHAR(40) NOT NULL,
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
OCCUPANCY_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_REMARK'
CREATE TABLE land_remark
(
LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
LAND_RIGHT_ID VARCHAR(40) NOT NULL,
REMARK_ID VARCHAR(40) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
RECOMMEND_IMPL_IND VARCHAR(1),
REMARK VARCHAR(2000),
REMARK_BA_ID VARCHAR(40),
REMARK_DATE TIMESTAMP(0),
REMARK_TYPE VARCHAR(40),
REMARK_USER VARCHAR(255),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_RIGHT'
CREATE TABLE land_right
(
LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
LAND_RIGHT_ID VARCHAR(40) NOT NULL,
ACQTN_DATE TIMESTAMP(0),
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
CALCULATED_INTEREST DECIMAL(15,12),
CASE_SERIAL_NUM VARCHAR(30),
CONFIDENTIAL_IND VARCHAR(1),
COST_CENTER_NUM VARCHAR(30),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIRST_PLATFORM_APPROVE_DATE TIMESTAMP(0),
FIRST_PLATFORM_INSTALL_DATE TIMESTAMP(0),
FIRST_PRODUCTION_DATE TIMESTAMP(0),
FRACTIONAL_INTEREST VARCHAR(100),
GRANTED_RIGHT_TYPE VARCHAR(40),
GROSS_SIZE DECIMAL(20,10),
GROSS_SIZE_OUOM VARCHAR(40),
HIGH_WATER_DEPTH DECIMAL(15,5),
HIGH_WATER_DEPTH_OUOM VARCHAR(40),
INACTIVATION_DATE TIMESTAMP(0),
INCENT_CERT_NO BIGINT,
ISSUE_DATE TIMESTAMP(0),
JURISDICTION VARCHAR(40),
LAND_ACQTN_METHOD VARCHAR(40),
LAND_CASE_ACTION VARCHAR(40),
LAND_CASE_TYPE VARCHAR(40),
LAND_PROPERTY_TYPE VARCHAR(40),
LAND_RIGHT_CATEGORY VARCHAR(40),
LAND_SALE_NUMBER VARCHAR(30),
LAND_SALE_OFFERING_ID VARCHAR(40),
LAST_ACTION_DATE TIMESTAMP(0),
LESSOR_NAME VARCHAR(255),
LESSOR_NUM VARCHAR(30),
LESSOR_TYPE VARCHAR(40),
LOW_WATER_DEPTH DECIMAL(15,5),
LOW_WATER_DEPTH_OUOM VARCHAR(40),
MUNICIPALITY VARCHAR(40),
OCCUPANT_NAME VARCHAR(255),
OFFSHORE_DISTANCE DECIMAL(10,3),
OFFSHORE_DISTANCE_OUOM VARCHAR(40),
OIL_SAND_DEPOSIT VARCHAR(40),
OVERLAP_IND VARCHAR(1),
PLATFORM_COUNT BIGINT,
PPDM_GUID VARCHAR(38),
PRIMARY_TERM DECIMAL(10,5),
PRIMARY_TERM_OUOM VARCHAR(40),
PRODUCING_IND VARCHAR(1),
PROPRIETARY_NUM VARCHAR(30),
QUALIFICATION_DATE TIMESTAMP(0),
RECLAMATION_CERT_NUM VARCHAR(40),
RECLAMATION_END_DATE TIMESTAMP(0),
RECLAMATION_START_DATE TIMESTAMP(0),
RELINQUISHABLE_IND VARCHAR(1),
REMARK VARCHAR(2000),
RENTAL_ALLOCATION_IND VARCHAR(1),
REPORT_ACREAGE_IND VARCHAR(1),
SCHEME_APPROVAL_NUM VARCHAR(30),
SCHEME_EXPIRY_DATE TIMESTAMP(0),
SECONDARY_TERM DECIMAL(10,5),
SECONDARY_TERM_OUOM VARCHAR(40),
SOURCE VARCHAR(40),
SUBSURFACE_IND VARCHAR(1),
SURFACE_IND VARCHAR(1),
TERMIN_NOTICE_PERIOD DECIMAL(10,5),
TERMIN_NOTICE_PERIOD_OUOM VARCHAR(40),
TERM_EXIRY_DATE TIMESTAMP(0),
UNIT_OPERATED_IND VARCHAR(1),
WELL_QUALIFIC_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_RIGHT_APPLIC'
CREATE TABLE land_right_applic
(
LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
LAND_RIGHT_ID VARCHAR(40) NOT NULL,
APPLICATION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_RIGHT_BA_LIC'
CREATE TABLE land_right_ba_lic
(
LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
LAND_RIGHT_ID VARCHAR(40) NOT NULL,
LICENSEE_BA_ID VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_RIGHT_COMPONENT'
CREATE TABLE land_right_component
(
LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
LAND_RIGHT_ID VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_COMPONENT_TYPE VARCHAR(40),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROD_STRING_ID VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PROJECT_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_RIGHT_FACILITY'
CREATE TABLE land_right_facility
(
LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
LAND_RIGHT_ID VARCHAR(40) NOT NULL,
FACILITY_ID VARCHAR(40) NOT NULL,
FACILITY_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
UNIT_OPERATED_IND VARCHAR(1),
XREF_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_RIGHT_FIELD'
CREATE TABLE land_right_field
(
LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
LAND_RIGHT_ID VARCHAR(40) NOT NULL,
FIELD_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
UNIT_OPERATED_IND VARCHAR(1),
XREF_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_RIGHT_INSTRUMENT'
CREATE TABLE land_right_instrument
(
LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
LAND_RIGHT_ID VARCHAR(40) NOT NULL,
INSTRUMENT_ID VARCHAR(40) NOT NULL,
LR_INST_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
DISCHARGE_DATE TIMESTAMP(0),
DISCHARGE_IND VARCHAR(1),
DISCHARGE_INSTRUMENT_ID VARCHAR(40),
DISCHARGE_NUM VARCHAR(30),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_RIGHT_POOL'
CREATE TABLE land_right_pool
(
LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
LAND_RIGHT_ID VARCHAR(40) NOT NULL,
POOL_ID VARCHAR(40) NOT NULL,
OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
UNIT_OPERATED_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_RIGHT_REST'
CREATE TABLE land_right_rest
(
LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
LAND_RIGHT_ID VARCHAR(40) NOT NULL,
RESTRICTION_ID VARCHAR(40) NOT NULL,
RESTRICTION_VERSION INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_RIGHT_REST_REM'
CREATE TABLE land_right_rest_rem
(
LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
LAND_RIGHT_ID VARCHAR(40) NOT NULL,
RESTRICTION_ID VARCHAR(40) NOT NULL,
RESTRICTION_VERSION INT,
REMARK_ID VARCHAR(40) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_TYPE VARCHAR(40),
RESTRICTION_REMARK_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_RIGHT_WELL'
CREATE TABLE land_right_well
(
UWI VARCHAR(40) NOT NULL,
LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
LAND_RIGHT_ID VARCHAR(40) NOT NULL,
LR_WELL_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
COMPLETION_OBS_NO INT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GAS_PERCENT_PSU DECIMAL(15,12),
KEY_WELL_IND VARCHAR(1),
OIL_PERCENT_PSU DECIMAL(15,12),
PPDM_GUID VARCHAR(38),
PR_STR_FORM_OBS_NO INT,
PR_STR_SOURCE VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SPACING_COMPLETE_IND VARCHAR(1),
SPACING_UNIT_ID VARCHAR(40),
STRING_ID VARCHAR(40),
WELL_IN_TRACT_IND VARCHAR(1),
WELL_RELATIONSHIP_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_RIGHT_WELL_SUBST'
CREATE TABLE land_right_well_subst
(
UWI VARCHAR(40) NOT NULL,
LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
LAND_RIGHT_ID VARCHAR(40) NOT NULL,
LR_WELL_SEQ_NO INT,
SUBSTANCE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERCENT_PSU DECIMAL(15,12),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_SALE'
CREATE TABLE land_sale
(
JURISDICTION VARCHAR(40) NOT NULL,
LAND_SALE_NUMBER VARCHAR(30) NOT NULL,
ACTIVE_IND VARCHAR(1),
CLOSE_DATE TIMESTAMP(0),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LAND_SALE_NAME VARCHAR(255),
OPEN_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PUBLISH_DATE TIMESTAMP(0),
REMARK VARCHAR(2000),
SALE_DATE TIMESTAMP(0),
SOLD_SIZE DECIMAL(20,10),
SOLD_SIZE_OUOM VARCHAR(40),
SOURCE VARCHAR(40),
TOTAL_BONUS DECIMAL(12,2),
TOTAL_BONUS_OUOM VARCHAR(40),
TOTAL_SIZE DECIMAL(20,10),
TOTAL_SIZE_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_SALE_BA_SERVICE'
CREATE TABLE land_sale_ba_service
(
JURISDICTION VARCHAR(40) NOT NULL,
LAND_SALE_NUMBER VARCHAR(30) NOT NULL,
LAND_SALE_OFFERING_ID VARCHAR(40) NOT NULL,
PROVIDED_BY VARCHAR(40) NOT NULL,
SERVICE_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
BA_SERVICE_TYPE VARCHAR(40),
CONTACT_BA_ID VARCHAR(40),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
ORGANIZATION_ID VARCHAR(40),
ORGANIZATION_SEQ_NO INT,
PPDM_GUID VARCHAR(38),
PROVIDED_FOR_BA_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REMARK VARCHAR(2000),
REPRESENTED_BA_ID VARCHAR(40),
SERVICE_QUALITY VARCHAR(40),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_SALE_BID'
CREATE TABLE land_sale_bid
(
JURISDICTION VARCHAR(40) NOT NULL,
LAND_SALE_NUMBER VARCHAR(30) NOT NULL,
LAND_SALE_OFFERING_ID VARCHAR(40) NOT NULL,
LAND_OFFERING_BID_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ADDRESS_FOR_SERVICE VARCHAR(40),
ADDRESS_OBS_NO INT,
ADDRESS_SOURCE VARCHAR(40),
BIDDER VARCHAR(40),
BIDDER_TYPE VARCHAR(40),
BID_STATUS VARCHAR(40),
BID_STATUS_DATE TIMESTAMP(0),
BID_SUBMIT_DATE TIMESTAMP(0),
BID_TYPE VARCHAR(40),
CASH_BID_TYPE VARCHAR(40),
CONFIDENTIAL_IND VARCHAR(1),
CONTINGENCY_DESC VARCHAR(240),
CONTINGENCY_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PAYMENT_INSTRUCTION_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PRIORITY_ORDER INT,
REMARK VARCHAR(2000),
RESPONSE VARCHAR(240),
RESPONSE_DATE TIMESTAMP(0),
SOURCE VARCHAR(40),
SUCCESSFUL_IND VARCHAR(1),
WORK_BID_IND VARCHAR(1),
WORK_BID_REMARK VARCHAR(240),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_SALE_BID_SET'
CREATE TABLE land_sale_bid_set
(
LAND_SALE_BID_SET_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BID_STATUS VARCHAR(40),
CONFIDENTIAL_IND VARCHAR(1),
CONTINGENCY_DESC VARCHAR(240),
CONTINGENCY_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SET_STATUS_DATE TIMESTAMP(0),
SOURCE VARCHAR(40),
SUCCESSFUL_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_SALE_BID_SET_BID'
CREATE TABLE land_sale_bid_set_bid
(
LAND_SALE_BID_SET_ID VARCHAR(40) NOT NULL,
JURISDICTION VARCHAR(40) NOT NULL,
LAND_SALE_NUMBER VARCHAR(30) NOT NULL,
LAND_SALE_OFFERING_ID VARCHAR(40) NOT NULL,
LAND_OFFERING_BID_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONFIDENTIAL_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_SALE_FEE'
CREATE TABLE land_sale_fee
(
JURISDICTION VARCHAR(40) NOT NULL,
LAND_SALE_NUMBER VARCHAR(30) NOT NULL,
RATE_SCHEDULE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_SALE_OFFERING'
CREATE TABLE land_sale_offering
(
JURISDICTION VARCHAR(40) NOT NULL,
LAND_SALE_NUMBER VARCHAR(30) NOT NULL,
LAND_SALE_OFFERING_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CANCEL_REASON VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROSS_SIZE DECIMAL(20,10),
GROSS_SIZE_OUOM VARCHAR(40),
INACTIVATION_DATE TIMESTAMP(0),
LAND_OFFERING_STATUS VARCHAR(40),
LAND_OFFERING_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STATUS_DATE TIMESTAMP(0),
TERM_DURATION DECIMAL(10,5),
TERM_DURATION_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_SALE_OFFERING_AREA'
CREATE TABLE land_sale_offering_area
(
JURISDICTION VARCHAR(40) NOT NULL,
LAND_SALE_NUMBER VARCHAR(30) NOT NULL,
LAND_SALE_OFFERING_ID VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROSS_SIZE DECIMAL(20,10),
GROSS_SIZE_OUOM VARCHAR(40),
NET_SIZE DECIMAL(20,10),
NET_SIZE_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_SALE_REQUEST'
CREATE TABLE land_sale_request
(
LAND_REQUEST_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ADVANCE_BOOKING_IND VARCHAR(1),
AMI_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
BID_IND VARCHAR(1),
BROKER_BA_ID VARCHAR(40),
CONTACT_BA_ID VARCHAR(40),
CRITICAL_DATE TIMESTAMP(0),
DRILLING_PRIORITY_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GRANTED_RIGHT_TYPE VARCHAR(40),
GROSS_SIZE DECIMAL(20,10),
GROSS_SIZE_OUOM VARCHAR(40),
INVESTIGATOR VARCHAR(255),
JURISDICTION VARCHAR(40),
LAND_REQ_STATUS VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LAND_SALE_OFFERING_ID VARCHAR(40),
LESSOR_REFUSED_DATE TIMESTAMP(0),
ORIGINATOR_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREVIOUS_REQUEST_ID VARCHAR(40),
PURPOSE VARCHAR(240),
REFERENCE_NUM VARCHAR(40),
REMARK VARCHAR(2000),
REQUESTED_SALE_DATE TIMESTAMP(0),
REQUESTED_SALE_NAME VARCHAR(255),
REQUESTER VARCHAR(255),
REQUEST_CANCEL_DATE TIMESTAMP(0),
REQUEST_DESCRIPTION VARCHAR(240),
REQUEST_RECEIVED_DATE TIMESTAMP(0),
REQUEST_SIZE DECIMAL(20,10),
REQUEST_SIZE_OUOM VARCHAR(40),
REQUEST_TYPE VARCHAR(40),
RESPONSE_DATE TIMESTAMP(0),
RESPONSE_DESC VARCHAR(240),
SOURCE VARCHAR(40),
SUBMITTED_DATE TIMESTAMP(0),
TERM_DURATION DECIMAL(10,5),
TERM_DURATION_OUOM VARCHAR(40),
UWI VARCHAR(40),
WELL_LICENSE_ID VARCHAR(40),
WELL_SOURCE VARCHAR(40),
WITHDRAWN_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_SALE_RESTRICTION'
CREATE TABLE land_sale_restriction
(
RESTRICTION_ID VARCHAR(40) NOT NULL,
RESTRICTION_VERSION INT,
JURISDICTION VARCHAR(40) NOT NULL,
LAND_SALE_NUMBER VARCHAR(30) NOT NULL,
LAND_SALE_OFFERING_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_SALE_REST_REMARK'
CREATE TABLE land_sale_rest_remark
(
RESTRICTION_ID VARCHAR(40) NOT NULL,
RESTRICTION_VERSION INT,
JURISDICTION VARCHAR(40) NOT NULL,
LAND_SALE_NUMBER VARCHAR(30) NOT NULL,
LAND_SALE_OFFERING_ID VARCHAR(40) NOT NULL,
RESTRICTION_REMARK_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RESTRICTION_REMARK_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_SALE_WORK_BID'
CREATE TABLE land_sale_work_bid
(
JURISDICTION VARCHAR(40) NOT NULL,
LAND_SALE_NUMBER VARCHAR(30) NOT NULL,
LAND_SALE_OFFERING_ID VARCHAR(40) NOT NULL,
LAND_OFFERING_BID_ID VARCHAR(40) NOT NULL,
WORK_BID_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CRITICAL_DATE TIMESTAMP(0),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
WORK_BID_COUNT BIGINT,
WORK_BID_COUNT_UOM VARCHAR(40),
WORK_BID_TYPE VARCHAR(40),
WORK_BID_VALUE DECIMAL(12,2),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_SIZE'
CREATE TABLE land_size
(
LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
LAND_RIGHT_ID VARCHAR(40) NOT NULL,
SIZE_TYPE VARCHAR(40) NOT NULL,
SIZE_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROSS_SIZE DECIMAL(20,10),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
NET_SIZE DECIMAL(20,10),
PARTNER_OBS_NO INT,
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SIZE_OUOM VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_STATUS'
CREATE TABLE land_status
(
LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
LAND_RIGHT_ID VARCHAR(40) NOT NULL,
STATUS_TYPE VARCHAR(40) NOT NULL,
LAND_RIGHT_STATUS VARCHAR(40) NOT NULL,
STATUS_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EFFECTIVE_TERM VARCHAR(240),
EFFECTIVE_TERM_OUOM VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REASON VARCHAR(240),
REMARK VARCHAR(2000),
SECTION_OF_ACT VARCHAR(240),
SECTION_OF_ACT_DATE TIMESTAMP(0),
SOURCE VARCHAR(40),
UNDETERMINED_TERM_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_TERMINATION'
CREATE TABLE land_termination
(
LR_TERMINATION_ID VARCHAR(40) NOT NULL,
LR_TERMINATION_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FULFILLED_DATE TIMESTAMP(0),
FULFILLED_USER VARCHAR(255),
JURISDICTION VARCHAR(40),
LAND_REQUEST_ID VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LAND_SALE_OFFERING_ID VARCHAR(40),
MINERAL_ZONE_ID VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
TERMINATION_REQMT VARCHAR(40),
TERMINATION_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_TITLE'
CREATE TABLE land_title
(
LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
LAND_RIGHT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CERTIFIED_DESC VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REGISTRATION_DATE TIMESTAMP(0),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
TITLE_CHANGE_REASON VARCHAR(40),
TITLE_HOLDER VARCHAR(255),
TITLE_NUMBER VARCHAR(30),
TITLE_REFERENCE_NUM VARCHAR(30),
TITLE_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_TRACT_FACTOR'
CREATE TABLE land_tract_factor
(
LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
LAND_RIGHT_ID VARCHAR(40) NOT NULL,
TRACT_FACTOR_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SUBSTANCE_ID VARCHAR(40),
TRACT_FACTOR DECIMAL(15,12),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_UNIT'
CREATE TABLE land_unit
(
LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
LAND_RIGHT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LAND_UNIT_NAME VARCHAR(255),
LAND_UNIT_NUMBER VARCHAR(40),
LAND_UNIT_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_UNIT_TRACT'
CREATE TABLE land_unit_tract
(
LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
LAND_RIGHT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LAND_TRACT_TYPE VARCHAR(40),
LAND_UNIT_TRACT_NAME VARCHAR(255),
LAND_UNIT_TRACT_NUMBER VARCHAR(40),
PERCENT_CROWN DECIMAL(15,12),
PERCENT_FREEHOLD DECIMAL(15,12),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LAND_XREF'
CREATE TABLE land_xref
(
PARENT_LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
CHILD_LAND_RIGHT_SUBTYPE VARCHAR(30) NOT NULL,
PARENT_LAND_RIGHT_ID VARCHAR(40) NOT NULL,
CHILD_LAND_RIGHT_ID VARCHAR(40) NOT NULL,
LR_XREF_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LAND_XREF_TYPE VARCHAR(40),
PERCENT_ALLOCATION DECIMAL(15,12),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LEGAL_CARTER_LOC'
CREATE TABLE legal_carter_loc
(
LEGAL_CARTER_LOC_ID VARCHAR(40) NOT NULL,
LOCATION_TYPE VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
CARTER_RANGE DECIMAL(5,1),
CARTER_SECTION DECIMAL(5,1),
CARTER_TOWNSHIP VARCHAR(3),
COORD_SYSTEM_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EW_DIRECTION VARCHAR(40),
EW_FOOTAGE DECIMAL(7,2),
EW_FOOTAGE_OUOM VARCHAR(40),
EW_START_LINE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FOOTAGE_ORIGIN VARCHAR(40),
MAP_QUAD_MIN DECIMAL(10,5),
MAP_QUAD_NAME VARCHAR(255),
NS_DIRECTION VARCHAR(40),
NS_FOOTAGE DECIMAL(7,2),
NS_FOOTAGE_OUOM VARCHAR(40),
NS_START_LINE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SCALED_FOOTAGE_IND VARCHAR(1),
SPOT_CODE VARCHAR(40),
UWI VARCHAR(40),
WELL_NODE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LEGAL_CONGRESS_LOC'
CREATE TABLE legal_congress_loc
(
LEGAL_CONGRESS_LOC_ID VARCHAR(40) NOT NULL,
LOCATION_TYPE VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
CONGRESS_LOT_NUM VARCHAR(30),
CONGRESS_RANGE DECIMAL(5,1),
CONGRESS_SECTION DECIMAL(5,1),
CONGRESS_SECTION_SUFFIX VARCHAR(1),
CONGRESS_TOWNSHIP DECIMAL(6,1),
CONGRESS_TWP_NAME VARCHAR(255),
COORD_SYSTEM_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EW_DIRECTION VARCHAR(40),
EW_FOOTAGE DECIMAL(7,2),
EW_FOOTAGE_OUOM VARCHAR(40),
EW_START_LINE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FOOTAGE_ORIGIN VARCHAR(40),
NS_DIRECTION VARCHAR(40),
NS_FOOTAGE DECIMAL(7,2),
NS_FOOTAGE_OUOM VARCHAR(40),
NS_START_LINE VARCHAR(40),
PPDM_GUID VARCHAR(38),
PRINCIPAL_MERIDIAN VARCHAR(40),
REMARK VARCHAR(2000),
SCALED_FOOTAGE_IND VARCHAR(1),
SECTION_TYPE VARCHAR(40),
SPOT_CODE VARCHAR(40),
UWI VARCHAR(40),
WELL_NODE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LEGAL_DLS_LOC'
CREATE TABLE legal_dls_loc
(
LEGAL_DLS_LOC_ID VARCHAR(40) NOT NULL,
LOCATION_TYPE VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
COORD_SYSTEM_ID VARCHAR(40),
DLS_EVENT_SEQUENCE VARCHAR(4),
DLS_LEGAL_SUBDIVISION DOUBLE PRECISION,
DLS_LOC_EXCEPTION VARCHAR(2),
DLS_MERIDIAN DOUBLE PRECISION,
DLS_MERIDIAN_DIRECTION VARCHAR(1),
DLS_RANGE DOUBLE PRECISION,
DLS_RANGE_MODIFIER VARCHAR(1),
DLS_SECTION DOUBLE PRECISION,
DLS_TOWNSHIP DOUBLE PRECISION,
DLS_TOWNSHIP_MODIFIER VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
UWI VARCHAR(40),
WELL_NODE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LEGAL_FPS_LOC'
CREATE TABLE legal_fps_loc
(
LEGAL_FPS_LOC_ID VARCHAR(40) NOT NULL,
LOCATION_TYPE VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
COORD_SYSTEM_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FPS_EVENT_SEQUENCE VARCHAR(4),
FPS_LOC_EXCEPTION VARCHAR(2),
GRID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_LATITUDE DECIMAL(14,9),
REFERENCE_LONGITUDE DECIMAL(14,9),
REMARK VARCHAR(2000),
SECTION SMALLINT,
UNIT VARCHAR(255),
UWI VARCHAR(40),
WELL_NODE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LEGAL_GEODETIC_LOC'
CREATE TABLE legal_geodetic_loc
(
LEGAL_GEODETIC_LOC_ID VARCHAR(40) NOT NULL,
LOCATION_TYPE VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
COORD_SYSTEM_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GEODETIC_EVENT_SEQUENCE VARCHAR(4),
GEODETIC_LOC_EXCEPTION VARCHAR(2),
LATITUDE DECIMAL(10,5),
LONGITUDE DECIMAL(10,5),
NODE_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
UWI VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LEGAL_LOC_AREA'
CREATE TABLE legal_loc_area
(
LEGAL_LOC_ID VARCHAR(40) NOT NULL,
LOCATION_TYPE VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LEGAL_LOC_REMARK'
CREATE TABLE legal_loc_remark
(
LEGAL_LOC_REMARK_ID VARCHAR(40) NOT NULL,
LOCATION_TYPE VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LAND_PARCEL_TYPE VARCHAR(40),
LEGAL_CARTER_LOC_ID VARCHAR(40),
LEGAL_CONGRESS_LOC_ID VARCHAR(40),
LEGAL_DLS_LOC_ID VARCHAR(40),
LEGAL_FPS_LOC_ID VARCHAR(40),
LEGAL_GEODETIC_LOC_ID VARCHAR(40),
LEGAL_NE_LOC_ID VARCHAR(40),
LEGAL_NORTH_SEA_LOC_ID VARCHAR(40),
LEGAL_NTS_LOC_ID VARCHAR(40),
LEGAL_OFFSHORE_LOC_ID VARCHAR(40),
LEGAL_OHIO_LOC_ID VARCHAR(40),
LEGAL_TEXAS_LOC_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_TYPE VARCHAR(40),
WELL_NODE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LEGAL_NE_LOC'
CREATE TABLE legal_ne_loc
(
LEGAL_NE_LOC_ID VARCHAR(40) NOT NULL,
LOCATION_TYPE VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
COORD_SYSTEM_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EW_FOOTAGE DECIMAL(7,2),
EW_FOOTAGE_OUOM VARCHAR(40),
EW_START_LINE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FOOTAGE_ORIGIN VARCHAR(40),
NE_DISTRICT VARCHAR(16),
NE_LOT_CODE VARCHAR(40),
NE_MAP_QUAD_MIN DECIMAL(10,5),
NE_MAP_QUAD_NAME VARCHAR(255),
NE_MAP_QUAD_SECTION VARCHAR(2),
NE_TOWNSHIP_NAME VARCHAR(255),
NS_FOOTAGE DECIMAL(7,2),
NS_FOOTAGE_OUOM VARCHAR(40),
NS_START_LINE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_LATITUDE DECIMAL(10,5),
REFERENCE_LONGITUDE DECIMAL(10,5),
REMARK VARCHAR(2000),
SCALED_FOOTAGE_IND VARCHAR(1),
UWI VARCHAR(40),
WELL_NODE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LEGAL_NORTH_SEA_LOC'
CREATE TABLE legal_north_sea_loc
(
LEGAL_NORTH_SEA_LOC_ID VARCHAR(40) NOT NULL,
LOCATION_TYPE VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BLOCK_NO BIGINT,
BLOCK_SUFFIX VARCHAR(2),
COORD_SYSTEM_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LAND_WELL_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
PRINCIPAL_MERIDIAN VARCHAR(40),
QUADRANT DOUBLE PRECISION,
QUADRANT_PREFIX VARCHAR(2),
REMARK VARCHAR(2000),
UWI VARCHAR(40),
WELL_NODE_ID VARCHAR(40),
WELL_NO_PREFIX VARCHAR(4),
WELL_NO_SUFFIX VARCHAR(6),
WELL_SEQ_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LEGAL_NTS_LOC'
CREATE TABLE legal_nts_loc
(
LEGAL_NTS_LOC_ID VARCHAR(40) NOT NULL,
LOCATION_TYPE VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BLOCK VARCHAR(1),
COORD_SYSTEM_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EVENT_SEQUENCE VARCHAR(4),
EXPIRY_DATE TIMESTAMP(0),
LETTER_QUADRANGLE VARCHAR(1),
NTS_LOC_EXCEPTION VARCHAR(2),
PPDM_GUID VARCHAR(38),
PRIMARY_QUADRANGLE DOUBLE PRECISION,
QUARTER_UNIT VARCHAR(1),
REMARK VARCHAR(2000),
SIXTEENTH DOUBLE PRECISION,
UNIT SMALLINT,
UWI VARCHAR(40),
WELL_NODE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LEGAL_OFFSHORE_LOC'
CREATE TABLE legal_offshore_loc
(
LEGAL_OFFSHORE_LOC_ID VARCHAR(40) NOT NULL,
LOCATION_TYPE VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
BLOCK_ADDITION VARCHAR(1),
BLOCK_MODIFIER VARCHAR(1),
COORD_SYSTEM_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EW_FOOTAGE DECIMAL(7,2),
EW_FOOTAGE_OUOM VARCHAR(40),
EW_START_LINE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FOOTAGE_ORIGIN VARCHAR(40),
GOVERNING_AGENCY_BA_ID VARCHAR(40),
GRID_BLOCK_EW VARCHAR(40),
GRID_BLOCK_NS VARCHAR(40),
GRID_BLOCK_RANGE DOUBLE PRECISION,
GRID_BLOCK_TIER DOUBLE PRECISION,
NS_FOOTAGE DECIMAL(7,2),
NS_FOOTAGE_OUOM VARCHAR(40),
NS_START_LINE VARCHAR(40),
OCS_NUM VARCHAR(8),
OFFSHORE_AREA_CODE VARCHAR(40),
OFFSHORE_BLOCK VARCHAR(6),
PPDM_GUID VARCHAR(38),
PROJECTED_EW_DIRECTION VARCHAR(40),
PROJECTED_MERIDIAN VARCHAR(40),
PROJECTED_NS_DIRECTION VARCHAR(40),
PROJECTED_RANGE DECIMAL(5,1),
PROJECTED_SECTION DECIMAL(5,1),
PROJECTED_TOWNSHIP DECIMAL(6,1),
REMARK VARCHAR(2000),
SCALED_FOOTAGE_IND VARCHAR(1),
UTM_QUADRANT VARCHAR(7),
UWI VARCHAR(40),
WATER_BOTTOM_ZONE VARCHAR(40),
WELL_NODE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LEGAL_OHIO_LOC'
CREATE TABLE legal_ohio_loc
(
LEGAL_OHIO_LOC_ID VARCHAR(40) NOT NULL,
LOCATION_TYPE VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
COORD_SYSTEM_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EW_FOOTAGE DECIMAL(7,2),
EW_FOOTAGE_OUOM VARCHAR(40),
EW_START_LINE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FOOTAGE_ORIGIN VARCHAR(40),
MAP_QUAD_MIN DECIMAL(10,5),
MAP_QUAD_NAME VARCHAR(255),
NS_FOOTAGE DECIMAL(7,2),
NS_FOOTAGE_OUOM VARCHAR(40),
NS_START_LINE VARCHAR(40),
OHIO_ALLOTMENT VARCHAR(60),
OHIO_DIVISION VARCHAR(60),
OHIO_FRACTION VARCHAR(60),
OHIO_LAND_SUBDIVISION_NAME VARCHAR(60),
OHIO_OTHER_SUBDIVISION VARCHAR(60),
OHIO_QUARTER_TOWNSHIP VARCHAR(2),
OHIO_RANGE DECIMAL(5,1),
OHIO_RANGE_DIR VARCHAR(40),
OHIO_TOWNSHIP DECIMAL(6,1),
OHIO_TOWNSHIP_DIR VARCHAR(40),
OHIO_TOWNSHIP_NAME VARCHAR(255),
OHIO_TRACT VARCHAR(60),
OHIO_TWP_LOT_CODE VARCHAR(60),
OHIO_TWP_SECTION_CODE VARCHAR(40),
PPDM_GUID VARCHAR(38),
PRINCIPAL_MERIDIAN VARCHAR(40),
REMARK VARCHAR(2000),
SCALED_FOOTAGE_IND VARCHAR(1),
SPOT_CODE VARCHAR(40),
UWI VARCHAR(40),
WELL_NODE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LEGAL_TEXAS_LOC'
CREATE TABLE legal_texas_loc
(
LEGAL_TEXAS_LOC_ID VARCHAR(40) NOT NULL,
LOCATION_TYPE VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ABSTRACT_NUM VARCHAR(20),
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
BLOCK_FRACTION VARCHAR(3),
COORD_SYSTEM_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EW_DIRECTION VARCHAR(40),
EW_FOOTAGE DECIMAL(7,2),
EW_FOOTAGE_OUOM VARCHAR(40),
EW_START_LINE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FOOTAGE_ORIGIN VARCHAR(40),
LABOR VARCHAR(4),
LEAGUE VARCHAR(4),
NS_DIRECTION VARCHAR(40),
NS_FOOTAGE DECIMAL(7,2),
NS_FOOTAGE_OUOM VARCHAR(40),
NS_START_LINE VARCHAR(40),
PORCION_NUM VARCHAR(30),
PORCION_SURVEY_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SCALED_FOOTAGE_IND VARCHAR(1),
SECTION_FRACTION VARCHAR(3),
SPOT_CODE VARCHAR(40),
TEXAS_BLOCK VARCHAR(4),
TEXAS_LOT VARCHAR(4),
TEXAS_SECTION VARCHAR(4),
TEXAS_SHARE VARCHAR(30),
TEXAS_SUBDIVISION VARCHAR(4),
TEXAS_SURVEY VARCHAR(60),
TEXAS_TOWNSHIP DECIMAL(4,1),
UWI VARCHAR(40),
WELL_NODE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LITH_DEP_ENV_INT'
CREATE TABLE lith_dep_env_int
(
LITHOLOGY_LOG_ID VARCHAR(40) NOT NULL,
LITH_LOG_SOURCE VARCHAR(40) NOT NULL,
DEPTH_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
DEPOSITIONAL_ENVIRONMENT VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LITH_DIAGENESIS'
CREATE TABLE lith_diagenesis
(
LITHOLOGY_LOG_ID VARCHAR(40) NOT NULL,
LITH_LOG_SOURCE VARCHAR(40) NOT NULL,
DEPTH_OBS_NO INT,
ROCK_TYPE VARCHAR(40) NOT NULL,
ROCK_TYPE_OBS_NO INT,
DIAGENESIS_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DIAGENESIS_PERCENT DECIMAL(15,12),
DIAGENESIS_REL_ABUNDANCE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LITH_GRAIN_SIZE'
CREATE TABLE lith_grain_size
(
LITHOLOGY_LOG_ID VARCHAR(40) NOT NULL,
LITH_LOG_SOURCE VARCHAR(40) NOT NULL,
DEPTH_OBS_NO INT,
ROCK_TYPE VARCHAR(40) NOT NULL,
ROCK_TYPE_OBS_NO INT,
SCALE_SCHEME VARCHAR(40) NOT NULL,
GRAIN_SIZE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DISTRIBUTION_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SIZE_TYPE_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LITH_INTERVAL'
CREATE TABLE lith_interval
(
LITHOLOGY_LOG_ID VARCHAR(40) NOT NULL,
LITH_LOG_SOURCE VARCHAR(40) NOT NULL,
DEPTH_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
CYCLE_BED VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NO_DATA_DESC VARCHAR(40),
PARENT_DEPTH_OBS_NO INT,
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
SAMPLE_ID VARCHAR(40),
SAMPLE_QUALITY VARCHAR(40),
STRUCTURE_TYPE VARCHAR(40),
THIN_BED_IND VARCHAR(1),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LITH_LOG'
CREATE TABLE lith_log
(
LITHOLOGY_LOG_ID VARCHAR(40) NOT NULL,
LITH_LOG_SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GEOLOGIST VARCHAR(255),
LITH_LOG_CLASS VARCHAR(40),
LITH_LOG_TYPE VARCHAR(40),
LOGGED_DATE TIMESTAMP(0),
MEAS_SECTION_ID VARCHAR(40),
MEAS_SECTION_SOURCE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
UWI VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LITH_LOG_BA_SERVICE'
CREATE TABLE lith_log_ba_service
(
LITHOLOGY_LOG_ID VARCHAR(40) NOT NULL,
LITH_LOG_SOURCE VARCHAR(40) NOT NULL,
PROVIDED_BY VARCHAR(40) NOT NULL,
SERVICE_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
BA_SERVICE_TYPE VARCHAR(40),
CONTACT_BA_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
CONTRACT_PROVISION_ID VARCHAR(40),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
RATE_SCHEDULE_ID VARCHAR(40),
REMARK VARCHAR(2000),
REPRESENTED_BA_ID VARCHAR(40),
SERVICE_QUALITY VARCHAR(40),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LITH_LOG_COMPONENT'
CREATE TABLE lith_log_component
(
LITHOLOGY_LOG_ID VARCHAR(40) NOT NULL,
LITH_LOG_SOURCE VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITH_LOG_COMPONENT_TYPE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_SOURCE VARCHAR(40),
PR_STR_UWI VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
STRING_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_ACTIVITY_UWI VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LITH_LOG_REMARK'
CREATE TABLE lith_log_remark
(
LITHOLOGY_LOG_ID VARCHAR(40) NOT NULL,
LITH_LOG_SOURCE VARCHAR(40) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_BA_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LITH_MEASURED_SEC'
CREATE TABLE lith_measured_sec
(
MEAS_SECTION_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AUTHOR VARCHAR(255),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOCATION_DESC VARCHAR(1024),
LOCATION_QUALIFIER VARCHAR(40),
NODE_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PUBLICATION_REFERENCE_TEXT VARCHAR(20),
REFERENCE_DATE TIMESTAMP(0),
REMARK VARCHAR(2000),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LITH_POROSITY'
CREATE TABLE lith_porosity
(
LITHOLOGY_LOG_ID VARCHAR(40) NOT NULL,
LITH_LOG_SOURCE VARCHAR(40) NOT NULL,
DEPTH_OBS_NO INT,
ROCK_TYPE VARCHAR(40) NOT NULL,
ROCK_TYPE_OBS_NO INT,
POROSITY_GRADE DECIMAL(10,5),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MATRIX_CLASS VARCHAR(40),
PERCENT_OF_SAMPLE DECIMAL(15,12),
POROSITY_SCALE VARCHAR(40),
POROSITY_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SAMPLE_REL_ABUNDANCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LITH_ROCKPART'
CREATE TABLE lith_rockpart
(
LITHOLOGY_LOG_ID VARCHAR(40) NOT NULL,
LITH_LOG_SOURCE VARCHAR(40) NOT NULL,
DEPTH_OBS_NO INT,
ROCK_TYPE VARCHAR(40) NOT NULL,
ROCK_TYPE_OBS_NO INT,
ROCKPART_NAME VARCHAR(30) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LITH_PATTERN_CODE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROCKPART_PERCENT DECIMAL(15,12),
ROCKPART_REL_ABUNDANCE VARCHAR(40),
ROCKPART_TEXTURE VARCHAR(40),
ROCKPART_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LITH_ROCKPART_COLOR'
CREATE TABLE lith_rockpart_color
(
LITHOLOGY_LOG_ID VARCHAR(40) NOT NULL,
LITH_LOG_SOURCE VARCHAR(40) NOT NULL,
DEPTH_OBS_NO INT,
ROCK_TYPE VARCHAR(40) NOT NULL,
ROCK_TYPE_OBS_NO INT,
ROCKPART_NAME VARCHAR(30) NOT NULL,
BASIC_COLOR VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
COLOR_ADJECTIVE VARCHAR(40),
COLOR_DISTRIBUTION VARCHAR(40),
DOMINANT_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTENSITY VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
WEATHERED_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LITH_ROCKPART_GRAIN_SIZE'
CREATE TABLE lith_rockpart_grain_size
(
LITHOLOGY_LOG_ID VARCHAR(40) NOT NULL,
LITH_LOG_SOURCE VARCHAR(40) NOT NULL,
DEPTH_OBS_NO INT,
SCALE_SCHEME VARCHAR(40) NOT NULL,
ROCK_TYPE VARCHAR(40) NOT NULL,
ROCK_TYPE_OBS_NO INT,
ROCKPART_NAME VARCHAR(30) NOT NULL,
GRAIN_SIZE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DISTRIBUTION_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SIZE_TYPE_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LITH_ROCK_COLOR'
CREATE TABLE lith_rock_color
(
LITHOLOGY_LOG_ID VARCHAR(40) NOT NULL,
LITH_LOG_SOURCE VARCHAR(40) NOT NULL,
DEPTH_OBS_NO INT,
ROCK_TYPE VARCHAR(40) NOT NULL,
ROCK_TYPE_OBS_NO INT,
BASIC_COLOR VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
COLOR_ADJECTIVE VARCHAR(40),
COLOR_DISTRIBUTION VARCHAR(40),
DOMINANT_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTENSITY VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
WEATHERED_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LITH_ROCK_STRUCTURE'
CREATE TABLE lith_rock_structure
(
LITHOLOGY_LOG_ID VARCHAR(40) NOT NULL,
LITH_LOG_SOURCE VARCHAR(40) NOT NULL,
DEPTH_OBS_NO INT,
ROCK_TYPE VARCHAR(40) NOT NULL,
ROCK_TYPE_OBS_NO INT,
STRUCTURE_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BOUNDARY_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
STRUCTURE_REL_ABUND VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LITH_ROCK_TYPE'
CREATE TABLE lith_rock_type
(
LITHOLOGY_LOG_ID VARCHAR(40) NOT NULL,
LITH_LOG_SOURCE VARCHAR(40) NOT NULL,
DEPTH_OBS_NO INT,
ROCK_TYPE VARCHAR(40) NOT NULL,
ROCK_TYPE_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CLASS VARCHAR(40),
CLASS_MODIFIER VARCHAR(40),
CONSOLIDATION VARCHAR(40),
CUT_COLOR VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FLUORESCENCE_COLOR VARCHAR(40),
FLUORESCENCE_DISTRIBUTION VARCHAR(40),
FLUORESCENCE_RATE VARCHAR(40),
FRAMEWORK_PERCENT DECIMAL(15,12),
MATRIX_PERCENT DECIMAL(15,12),
OIL_STAIN VARCHAR(40),
PERMEABILITY_QUALITY VARCHAR(40),
POROSITY_GRADE_PERCENT DECIMAL(15,12),
PPDM_GUID VARCHAR(38),
PRIM_POROSITY_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
RESIDUE_COLOR VARCHAR(40),
RESIDUE_PERCENT DECIMAL(15,12),
ROCK_CLASS_SCHEME VARCHAR(40),
ROCK_MATRIX VARCHAR(40),
ROCK_PROFILE VARCHAR(40),
ROCK_REL_ABUNDANCE VARCHAR(40),
ROCK_TYPE_PERCENT DECIMAL(15,12),
ROUNDING VARCHAR(40),
SEC_POROSITY_TYPE VARCHAR(40),
SOLID_HCARBON_PERCENT DECIMAL(15,12),
SOLID_HCARBON_TYPE VARCHAR(40),
SORTING VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE LITH_STRUCTURE'
CREATE TABLE lith_structure
(
LITHOLOGY_LOG_ID VARCHAR(40) NOT NULL,
LITH_LOG_SOURCE VARCHAR(40) NOT NULL,
DEPTH_OBS_NO INT,
STRUCTURE_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BOUNDARY_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
STRUCTURE_REL_ABUND VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE NOTIFICATION'
CREATE TABLE notification
(
NOTIFICATION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CONTRACT_IND VARCHAR(1),
CRITICAL_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_IND VARCHAR(1),
LAND_RIGHT_SUBTYPE VARCHAR(30),
NOTIFICATION_TYPE VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_IND VARCHAR(1),
OBLIGATION_SEQ_NO INT,
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SERVED_IND VARCHAR(1),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE NOTIFICATION_COMPONENT'
CREATE TABLE notification_component
(
NOTIFICATION_ID VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_COMPONENT_TYPE VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_SOURCE VARCHAR(40),
PR_STR_UWI VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
STRING_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_ACTIVITY_UWI VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE NOTIF_BA'
CREATE TABLE notif_ba
(
NOTIFICATION_ID VARCHAR(40) NOT NULL,
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
RECEIVED_DATE TIMESTAMP(0),
RECEIVED_IND VARCHAR(1),
REMARK VARCHAR(2000),
RESPONSE VARCHAR(240),
SERVED_DATE TIMESTAMP(0),
SERVED_IND VARCHAR(1),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE OBLIGATION'
CREATE TABLE obligation
(
OBLIGATION_ID VARCHAR(40) NOT NULL,
OBLIGATION_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
CALCULATION_METHOD VARCHAR(40),
CONVERTIBLE_IND VARCHAR(1),
CRITICAL_DATE TIMESTAMP(0),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FULFILLED_DATE TIMESTAMP(0),
FULFILLED_IND VARCHAR(1),
GROSS_OBLIGATION_COST DECIMAL(12,2),
INSTRUMENT_ID VARCHAR(40),
LIABILITY_RELEASE_DATE TIMESTAMP(0),
NET_OBLIGATION_COST DECIMAL(12,2),
NOTICE_PERIOD_LENGTH DECIMAL(10,5),
NOTICE_PERIOD_OUOM VARCHAR(40),
OBLIGATION_CATEGORY VARCHAR(40),
OBLIGATION_DURATION DECIMAL(10,5),
OBLIGATION_DURATION_OUOM VARCHAR(40),
OBLIGATION_FREQUENCY VARCHAR(20),
OBLIGATION_TYPE VARCHAR(40),
PAYMENT_IND VARCHAR(1),
PAYMENT_RESPONSIBILITY VARCHAR(40),
PERCENTAGE DECIMAL(15,12),
POTENTIAL_OBLIGATION_DESC VARCHAR(240),
POTENTIAL_OBLIGATION_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
PREPAID_IND VARCHAR(1),
REMARK VARCHAR(2000),
RESP_PARTY_BA_ID VARCHAR(40),
REVIEW_FREQUENCY VARCHAR(20),
ROYALTY_OWNER_BA_ID VARCHAR(40),
ROYALTY_PAYOR_BA_ID VARCHAR(40),
ROYALTY_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
SUBSTANCE_ID VARCHAR(40),
TRIGGER_METHOD VARCHAR(40),
WORK_OBLIGATION_DESC VARCHAR(1024),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE OBLIGATION_COMPONENT'
CREATE TABLE obligation_component
(
OBLIGATION_ID VARCHAR(40) NOT NULL,
OBLIGATION_SEQ_NO INT,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_LICENSEE_BA_ID VARCHAR(40),
BA_LICENSE_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BA_SERVICE_BA_ID VARCHAR(40),
BA_SERVICE_PROVIDER VARCHAR(40),
BA_SERVICE_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CALCULATION_METHOD VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
COMPONENT_REASON VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_EXTENSION_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
CONTRACT_PROVISION_ID VARCHAR(40),
CONT_SERVICE_BA_ID VARCHAR(40),
CONT_SERVICE_SEQ_NO INT,
CRITICAL_DATE TIMESTAMP(0),
DESCRIPTION VARCHAR(240),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_LICENSE_ID VARCHAR(40),
FACILITY_SERVICE_BA_ID VARCHAR(40),
FACILITY_SERVICE_SEQ_NO INT,
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
FULFILLED_DATE TIMESTAMP(0),
FULFILLED_IND VARCHAR(1),
FULFILLED_REMARK VARCHAR(2000),
HSE_INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
LAND_COST_ID VARCHAR(40),
LAND_OFFERING_BID_ID VARCHAR(40),
LAND_REQUEST_ID VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_BID_SET_ID VARCHAR(40),
LAND_SALE_JURISDICTION VARCHAR(40),
LAND_SALE_NUMBER VARCHAR(30),
LAND_SALE_OFFERING_ID VARCHAR(40),
LAND_SERVICE_PROVIDED_BY VARCHAR(40),
LAND_SERVICE_SEQ_NO INT,
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
LR_TERMINATION_ID VARCHAR(40),
LR_TERMINATION_SEQ_NO INT,
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_COMPONENT_TYPE VARCHAR(40),
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROD_STRING_ID VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PROJECT_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_LICENSE_ID VARCHAR(40),
SEIS_POINT_FLOW_ID VARCHAR(40),
SEIS_POINT_ID VARCHAR(16),
SEIS_SERVICE_BA_ID VARCHAR(40),
SEIS_SERVICE_SEQ_NO INT,
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SEIS_TRANSACTION_ID VARCHAR(40),
SEIS_TRANSACTION_TYPE VARCHAR(40),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_LICENSE_ID VARCHAR(40),
WELL_LICENSE_SOURCE VARCHAR(40),
WELL_SERVICE_BA_ID VARCHAR(40),
WELL_SERVICE_SEQ_NO INT,
WELL_SET_ID VARCHAR(40),
WORK_ORDER_DELIVERY_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE OBLIG_ALLOW_DEDUCTION'
CREATE TABLE oblig_allow_deduction
(
OBLIGATION_ID VARCHAR(40) NOT NULL,
OBLIGATION_SEQ_NO INT,
ALLOW_DEDUCTION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ALLOW_DEDUCTION_TYPE VARCHAR(40),
ALLOW_DEDUCT_REMARK VARCHAR(2000),
CONTRACT_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE OBLIG_BA_SERVICE'
CREATE TABLE oblig_ba_service
(
OBLIGATION_ID VARCHAR(40) NOT NULL,
OBLIGATION_SEQ_NO INT,
PROVIDED_BY VARCHAR(40) NOT NULL,
OBLIG_SERVICE_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
CONTACT_BA_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PROVIDED_FOR VARCHAR(40),
PROVISION_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REMARK VARCHAR(2000),
SERVICE_QUALITY VARCHAR(40),
SERVICE_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE OBLIG_CALC'
CREATE TABLE oblig_calc
(
OBLIGATION_ID VARCHAR(40) NOT NULL,
OBLIGATION_SEQ_NO INT,
CALCULATION_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CALCULATION_FORMULA VARCHAR(2000),
CALCULATION_METHOD VARCHAR(40),
CALCULATION_POINT VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SUBSTANCE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE OBLIG_DEDUCTION'
CREATE TABLE oblig_deduction
(
OBLIGATION_ID VARCHAR(40) NOT NULL,
OBLIGATION_SEQ_NO INT,
DEDUCTION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ALLOW_DEDUCTION_ID VARCHAR(40),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
DEDUCTION_AMOUNT DECIMAL(12,2),
DEDUCTION_PERCENT DECIMAL(15,12),
DEDUCT_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_DEDUCTION_ALLOWED DECIMAL(12,2),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROYALTY_AMOUNT DECIMAL(12,2),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE OBLIG_DEDUCT_CALC'
CREATE TABLE oblig_deduct_calc
(
OBLIGATION_ID VARCHAR(40) NOT NULL,
OBLIGATION_SEQ_NO INT,
DEDUCTION_ID VARCHAR(40) NOT NULL,
CALCULATION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CALCULATION_FORMULA VARCHAR(2000),
CALCULATION_METHOD VARCHAR(40),
CALCULATION_POINT VARCHAR(40),
CONTRACT_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SUBSTANCE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE OBLIG_PAYMENT'
CREATE TABLE oblig_payment
(
OBLIGATION_ID VARCHAR(40) NOT NULL,
OBLIGATION_SEQ_NO INT,
PAYEE_PAYOR_BA_ID VARCHAR(40) NOT NULL,
PAYEE_PAYOR VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CHEQUE_REMARK VARCHAR(2000),
CONTRACT_ID VARCHAR(40),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
CURRENCY_UOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROSS_COST DECIMAL(12,2),
INVOICE_AMOUNT DECIMAL(12,2),
INVOICE_NUM VARCHAR(30),
LAND_RENTAL_TYPE VARCHAR(40),
NET_COST DECIMAL(12,2),
PAYMENT_DUE_DATE TIMESTAMP(0),
PAYMENT_IND VARCHAR(1),
PAYMENT_INSTRUCTION_ID VARCHAR(40),
PAYMENT_TYPE VARCHAR(40),
PAY_METHOD VARCHAR(40),
PERCENT_OF_GROSS DECIMAL(15,12),
PPDM_GUID VARCHAR(38),
PROVISION_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
RATE_TYPE VARCHAR(40),
RECEIPT_IND VARCHAR(1),
RELATED_OBLIGATION_ID VARCHAR(40),
RELATED_OBLIGATION_SEQ_NO INT,
RELATED_OBLIG_BA_ID VARCHAR(40),
RELATED_OBLIG_PAYEE_PAYOR VARCHAR(40),
REMARK VARCHAR(2000),
ROYALTY_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
STOP_PAYMENT_IND VARCHAR(1),
SUBSTANCE_ID VARCHAR(40),
SUBSTANCE_SEQ_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE OBLIG_PAYMENT_INSTR'
CREATE TABLE oblig_payment_instr
(
PAYEE_BA_ID VARCHAR(40) NOT NULL,
PAYMENT_INSTRUCTION_ID VARCHAR(40) NOT NULL,
ABA_NUMBER VARCHAR(30),
ACTIVE_IND VARCHAR(1),
BANK_ADDRESS_OBS_NO INT,
BANK_ADDRESS_SOURCE VARCHAR(40),
BANK_BA_ID VARCHAR(40),
BANK_FEE DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
DEPOSITORY_NUM VARCHAR(30),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INVALID_DATE TIMESTAMP(0),
PAY_METHOD VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SUSPEND_PAYMENT_IND VARCHAR(1),
SUSPEND_PAYMENT_REASON VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE OBLIG_PAYMENT_RATE'
CREATE TABLE oblig_payment_rate
(
JURISDICTION VARCHAR(40) NOT NULL,
PAY_RATE_TYPE VARCHAR(40) NOT NULL,
PAYMENT_RATE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONTRACT_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PAYMENT_RATE DECIMAL(12,2),
PAYMENT_RATE_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
RATE_PERCENT DECIMAL(15,12),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE OBLIG_PAY_DETAIL'
CREATE TABLE oblig_pay_detail
(
OBLIGATION_ID VARCHAR(40) NOT NULL,
OBLIGATION_SEQ_NO INT,
PAYEE_PAYOR_BA_ID VARCHAR(40) NOT NULL,
PAYEE_PAYOR VARCHAR(40) NOT NULL,
DETAIL_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CHEQUE_NUMBER VARCHAR(20),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
DEDUCTION_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PAYMENT_AMOUNT DECIMAL(12,2),
PAYMENT_DATE TIMESTAMP(0),
PAY_DETAIL_TYPE VARCHAR(40),
PERCENT_OF_PAYMENT DECIMAL(15,12),
PPDM_GUID VARCHAR(38),
RATE DECIMAL(12,2),
RATE_OUOM VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE OBLIG_REMARK'
CREATE TABLE oblig_remark
(
OBLIGATION_ID VARCHAR(40) NOT NULL,
OBLIGATION_SEQ_NO INT,
REMARK_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MADE_BY_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE OBLIG_SUBSTANCE'
CREATE TABLE oblig_substance
(
OBLIGATION_ID VARCHAR(40) NOT NULL,
OBLIGATION_SEQ_NO INT,
SUBSTANCE_ID VARCHAR(40) NOT NULL,
SUBSTANCE_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
CONTRACT_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXCLUDED_IND VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
INCLUDED_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE OBLIG_TYPE'
CREATE TABLE oblig_type
(
OBLIGATION_ID VARCHAR(40) NOT NULL,
OBLIGATION_SEQ_NO INT,
LAND_OBLIG_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LAND_OBLIG_CATEGORY VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE OBLIG_XREF'
CREATE TABLE oblig_xref
(
OBLIGATION_ID VARCHAR(40) NOT NULL,
OBLIGATION_SEQ_NO INT,
OBLIGATION_ID_2 VARCHAR(40) NOT NULL,
OBLIGATION_SEQ_NO_2 INT,
XREF_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OBLIG_XREF_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PALEO_ABUND_QUALIFIER'
CREATE TABLE paleo_abund_qualifier
(
QUALIFIER_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
QUALIFIER_CODE VARCHAR(20),
QUALIFIER_NAME VARCHAR(255),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PALEO_ABUND_SCHEME'
CREATE TABLE paleo_abund_scheme
(
SCHEME_ID VARCHAR(40) NOT NULL,
ABUND_QUALIFIER_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_COUNT BIGINT,
MIN_COUNT BIGINT,
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SCHEME_OWNER_BA_ID VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PALEO_CLIMATE'
CREATE TABLE paleo_climate
(
CLIMATE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CLIMATE_NAME VARCHAR(255),
CLIMATE_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PALEO_CONFIDENCE'
CREATE TABLE paleo_confidence
(
CONFIDENCE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONFIDENCE_CODE VARCHAR(20),
CONFIDENCE_NAME VARCHAR(30),
CONFIDENCE_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PALEO_FOSSIL_IND'
CREATE TABLE paleo_fossil_ind
(
PALEO_SUMMARY_ID VARCHAR(40) NOT NULL,
FOSSIL_DETAIL_ID VARCHAR(40) NOT NULL,
FOSSIL_ID VARCHAR(40) NOT NULL,
INDICATOR_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INDICATOR_DESC VARCHAR(240),
INDICATOR_IND VARCHAR(1),
INDICATOR_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PALEO_FOSSIL_INTERP'
CREATE TABLE paleo_fossil_interp
(
PALEO_SUMMARY_ID VARCHAR(40) NOT NULL,
DETAIL_ID VARCHAR(40) NOT NULL,
FOSSIL_DETAIL_ID VARCHAR(40) NOT NULL,
FOSSIL_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PALEO_FOSSIL_LIST'
CREATE TABLE paleo_fossil_list
(
PALEO_SUMMARY_ID VARCHAR(40) NOT NULL,
FOSSIL_DETAIL_ID VARCHAR(40) NOT NULL,
FOSSIL_ID VARCHAR(40) NOT NULL,
ABUNDANCE_COUNT DECIMAL(10,5),
ABUNDANCE_QUALIFIER_ID VARCHAR(40),
ACTIVE_IND VARCHAR(1),
ANALYSIS_ID VARCHAR(40),
ANL_SOURCE VARCHAR(40),
CONFIDENCE_ID VARCHAR(40),
DEPTH DECIMAL(15,5),
DEPTH_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FOSSIL_COLOR VARCHAR(40),
LITH_SAMPLE_ID VARCHAR(40),
MATURATION_OBS_NO INT,
ONTOGENY_TYPE VARCHAR(40),
PALEO_ANALYST_BA_ID VARCHAR(40),
PHYSICAL_ITEM_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PRESERVATION_QUALITY VARCHAR(40),
PRESERVATION_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
SLIDE_LOC_X VARCHAR(40),
SLIDE_LOC_Y VARCHAR(40),
SLIDE_NUM VARCHAR(30),
SOURCE VARCHAR(40),
TAI_COLOR VARCHAR(40),
TYPE_FOSSIL_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PALEO_FOSSIL_OBS'
CREATE TABLE paleo_fossil_obs
(
PALEO_SUMMARY_ID VARCHAR(40) NOT NULL,
FOSSIL_DETAIL_ID VARCHAR(40) NOT NULL,
FOSSIL_ID VARCHAR(40) NOT NULL,
OBSERVATION_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FOSSIL_OBS_TYPE VARCHAR(40),
OBSERVATION VARCHAR(2000),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PALEO_INTERP'
CREATE TABLE paleo_interp
(
PALEO_SUMMARY_ID VARCHAR(40) NOT NULL,
DETAIL_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ANALYSIS_ID VARCHAR(40),
ANL_SOURCE VARCHAR(40),
BASE_MD DECIMAL(15,5),
BASE_MD_OUOM VARCHAR(40),
CLIMATE_ID VARCHAR(40),
DESCRIPTION VARCHAR(2000),
ECOZONE_CONFIDENCE_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
ECOZONE_QUALIFIER_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FROM_REL_STRAT_NAME_SET_ID VARCHAR(40),
FROM_REL_STRAT_UNIT_ID VARCHAR(40),
FROM_STRAT_NAME_SET_ID VARCHAR(40),
FROM_STRAT_UNIT_ID VARCHAR(40),
INTERP_TYPE VARCHAR(40),
LITHOLOGY_TYPE VARCHAR(40),
LITH_STRUCTURE_ID VARCHAR(40),
MATURATION_OBS_NO INT,
PALEO_CONFIDENCE_ID VARCHAR(40),
PALEO_QUALIFIER_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
TAI_COLOR VARCHAR(40),
TOP_MD DECIMAL(15,5),
TOP_MD_OUOM VARCHAR(40),
TO_REL_STRAT_NAME_SET_ID VARCHAR(40),
TO_REL_STRAT_UNIT_ID VARCHAR(40),
TO_STRAT_NAME_SET_ID VARCHAR(40),
TO_STRAT_UNIT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PALEO_OBS_QUALIFIER'
CREATE TABLE paleo_obs_qualifier
(
QUALIFIER_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
QUALIFIER_CODE VARCHAR(20),
QUALIFIER_LONG_NAME VARCHAR(255),
QUALIFIER_OWNER VARCHAR(40),
QUALIFIER_SHORT_NAME VARCHAR(30),
QUALIFIER_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PALEO_SUMMARY'
CREATE TABLE paleo_summary
(
PALEO_SUMMARY_ID VARCHAR(40) NOT NULL,
ACCESS_CONDITION VARCHAR(40),
ACTIVE_IND VARCHAR(1),
ANALYSIS_END_DATE TIMESTAMP(0),
ANALYSIS_START_DATE TIMESTAMP(0),
CONFIDENTIAL_IND VARCHAR(1),
CONFIDENTIAL_REASON VARCHAR(40),
CONFIDENTIAL_RELEASE_DATE TIMESTAMP(0),
CONFIDENTIAL_TERM VARCHAR(240),
CONFIDENTIAL_TYPE VARCHAR(40),
DIVERSITY_COUNT BIGINT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PRESERVATION_QUALITY VARCHAR(40),
REFERENCE_NUM VARCHAR(60),
REMARK VARCHAR(2000),
REPORT_DATE TIMESTAMP(0),
REPORT_TITLE VARCHAR(240),
SOURCE VARCHAR(40),
TOTAL_SAMPLE_INTERVAL DECIMAL(15,5),
TOTAL_SAMPLE_INTERVAL_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PALEO_SUM_AUTHOR'
CREATE TABLE paleo_sum_author
(
PALEO_SUMMARY_ID VARCHAR(40) NOT NULL,
AUTHOR_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AUTHOR_BA_ID VARCHAR(40),
AUTHOR_DESC VARCHAR(240),
AUTHOR_SEQ_NO INT,
AUTHOR_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PALEO_SUM_COMP'
CREATE TABLE paleo_sum_comp
(
PALEO_SUMMARY_ID VARCHAR(40) NOT NULL,
PALEO_COMPONENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
ECOZONE_SET_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
MEAS_SECTION_ID VARCHAR(40),
MEAS_SECTION_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_COMPONENT_TYPE VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROD_STRING_ID VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PROJECT_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PALEO_SUM_INTERVAL'
CREATE TABLE paleo_sum_interval
(
PALEO_SUMMARY_ID VARCHAR(40) NOT NULL,
INTERVAL_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTERVAL_DESC VARCHAR(240),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PALEO_SUM_SAMPLE'
CREATE TABLE paleo_sum_sample
(
PALEO_SUMMARY_ID VARCHAR(40) NOT NULL,
LITH_SAMPLE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DIVERSITY_COUNT BIGINT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIRST_SAMPLE_IND VARCHAR(1),
LAST_SAMPLE_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PALEO_SUM_XREF'
CREATE TABLE paleo_sum_xref
(
PALEO_SUMMARY_ID1 VARCHAR(40) NOT NULL,
PALEO_SUMMARY_ID2 VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PALEO_XREF_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN'
CREATE TABLE pden
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
CURRENT_OPERATOR VARCHAR(40),
CURRENT_PROD_STR_NAME VARCHAR(255),
CURRENT_STATUS_DATE TIMESTAMP(0),
CURRENT_WELL_STR_NUMBER VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
ENHANCED_RECOVERY_TYPE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FIELD_ID VARCHAR(40),
LAST_INJECTION_DATE TIMESTAMP(0),
LAST_PRODUCTION_DATE TIMESTAMP(0),
LAST_REPORTED_DATE TIMESTAMP(0),
LOCATION_DESC VARCHAR(1024),
LOCATION_DESC_TYPE VARCHAR(40),
ON_INJECTION_DATE TIMESTAMP(0),
ON_PRODUCTION_DATE TIMESTAMP(0),
PDEN_LONG_NAME VARCHAR(255),
PDEN_SHORT_NAME VARCHAR(30),
PDEN_STATUS VARCHAR(40),
PDEN_STATUS_TYPE VARCHAR(40),
PLOT_NAME VARCHAR(255),
PLOT_SYMBOL VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PRIMARY_PRODUCT VARCHAR(40),
PRODUCTION_METHOD VARCHAR(40),
PROPRIETARY_IND VARCHAR(1),
REMARK VARCHAR(2000),
STATE_OR_FEDERAL_WATERS VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
STRING_SERIAL_NUMBER VARCHAR(20),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_ALLOC_FACTOR'
CREATE TABLE pden_alloc_factor
(
FROM_PDEN_SUBTYPE VARCHAR(30) NOT NULL,
FROM_PDEN_ID VARCHAR(40) NOT NULL,
FROM_PDEN_SOURCE VARCHAR(40) NOT NULL,
TO_PDEN_SUBTYPE VARCHAR(30) NOT NULL,
TO_PDEN_ID VARCHAR(40) NOT NULL,
TO_PDEN_SOURCE VARCHAR(40) NOT NULL,
ALLOCATION_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_TYPE VARCHAR(40),
ALLOCATION_FACTOR DECIMAL(10,5),
ALLOCATION_TYPE VARCHAR(40),
BUSINESS_RULE VARCHAR(240),
CALCULATED_FROM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERIOD_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
PRODUCT_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
VOLUME_METHOD VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_AREA'
CREATE TABLE pden_area
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NO_OF_GAS_WELLS DECIMAL(14,9),
NO_OF_INJECTION_WELLS DECIMAL(14,9),
NO_OF_OIL_WELLS DECIMAL(14,9),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_BUSINESS_ASSOC'
CREATE TABLE pden_business_assoc
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NO_OF_GAS_WELLS DECIMAL(14,9),
NO_OF_INJECTION_WELLS DECIMAL(14,9),
NO_OF_OIL_WELLS DECIMAL(14,9),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_COMPONENT'
CREATE TABLE pden_component
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_COMPONENT_TYPE VARCHAR(40),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_FORM_OBS_NO INT,
PR_STR_SOURCE VARCHAR(40),
PR_STR_UWI VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
STRING_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_ACTIVITY_UWI VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_DECLINE_CASE'
CREATE TABLE pden_decline_case
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
PRODUCT_TYPE VARCHAR(40) NOT NULL,
CASE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CASE_NAME VARCHAR(255),
DECLINE_CURVE_TYPE VARCHAR(40),
DECLINE_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FINAL_DECLINE DECIMAL(10,6),
FINAL_RATE DECIMAL(15,5),
INITIAL_DECLINE DECIMAL(10,6),
INITIAL_RATE DECIMAL(15,5),
PPDM_GUID VARCHAR(38),
PROJECT_ID VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
VOLUME DECIMAL(14,4),
VOLUME_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_DECLINE_CONDITION'
CREATE TABLE pden_decline_condition
(
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
PRODUCT_TYPE VARCHAR(40) NOT NULL,
CASE_ID VARCHAR(40) NOT NULL,
CONDITION_ID VARCHAR(40) NOT NULL,
PERIOD_TYPE VARCHAR(40) NOT NULL,
PERIOD_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONDITION_CODE VARCHAR(40),
CONDITION_DESC VARCHAR(240),
CONDITION_TYPE VARCHAR(40),
CONDITION_VALUE DECIMAL(15,5),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
VOLUME_DATE TIMESTAMP(0),
VOLUME_DATE_DESC VARCHAR(8),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_DECLINE_SEGMENT'
CREATE TABLE pden_decline_segment
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
CASE_ID VARCHAR(40) NOT NULL,
SEGMENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DECLINE_CURVE_TYPE VARCHAR(40),
DECLINE_TYPE VARCHAR(40),
DURATION DECIMAL(10,5),
DURATION_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FINAL_DECLINE DECIMAL(10,6),
FINAL_RATE DECIMAL(15,5),
INITIAL_DECLINE DECIMAL(10,6),
INITIAL_RATE DECIMAL(15,5),
MINIMUM_DECLINE DECIMAL(10,6),
N_FACTOR DECIMAL(10,5),
PPDM_GUID VARCHAR(38),
PRODUCT_TYPE VARCHAR(40),
RATE_OUOM VARCHAR(40),
RATIO_CURVE_TYPE VARCHAR(40),
RATIO_FINAL_RATE DECIMAL(15,5),
RATIO_FLUID_TYPE VARCHAR(40),
RATIO_INITIAL_RATE DECIMAL(15,5),
RATIO_RATE_OUOM VARCHAR(40),
RATIO_VOLUME DECIMAL(14,4),
RATIO_VOLUME_OUOM VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
VOLUME DECIMAL(14,4),
VOLUME_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_FACILITY'
CREATE TABLE pden_facility
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
NO_OF_GAS_WELLS DECIMAL(14,9),
NO_OF_INJECTION_WELLS DECIMAL(14,9),
NO_OF_OIL_WELLS DECIMAL(14,9),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_FIELD'
CREATE TABLE pden_field
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_ID VARCHAR(40),
NO_OF_GAS_WELLS DECIMAL(14,9),
NO_OF_INJECTION_WELLS DECIMAL(14,9),
NO_OF_OIL_WELLS DECIMAL(14,9),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_FLOW_MEASUREMENT'
CREATE TABLE pden_flow_measurement
(
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
PRODUCT_TYPE VARCHAR(40) NOT NULL,
AMENDMENT_SEQ_NO INT,
PERIOD_TYPE VARCHAR(40) NOT NULL,
MEASUREMENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
AMEND_REASON VARCHAR(40),
CASING_PRESSURE DECIMAL(8,2),
CASING_PRESSURE_OUOM VARCHAR(40),
CHOKE_POSITION DECIMAL(10,5),
CHOKE_SIZE DECIMAL(10,5),
CHOKE_SIZE_OUOM VARCHAR(40),
DIFFERENTIAL_PRESSURE DECIMAL(8,2),
DIFF_PRESSURE_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FLOW_RATE DECIMAL(15,5),
FLOW_RATE_OUOM VARCHAR(40),
MEASUREMENT_DATE TIMESTAMP(0),
MEASUREMENT_DATE_DESC VARCHAR(8),
MEASUREMENT_TIME DECIMAL(10,5),
MEASUREMENT_TIMEZONE VARCHAR(40),
MEASUREMENT_TYPE VARCHAR(40),
MEAS_TEMPERATURE DECIMAL(10,5),
MEAS_TEMPERATURE_OUOM VARCHAR(40),
POSTED_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PRODUCTION_VOLUME DECIMAL(14,4),
PRODUCTION_VOLUME_OUOM VARCHAR(40),
PRODUCTION_VOLUME_UOM VARCHAR(40),
PROD_TIME_ELAPSED DECIMAL(10,5),
PROD_TIME_ELAPSED_OUOM VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STATIC_PRESSURE DECIMAL(8,2),
STATIC_PRESSURE_OUOM VARCHAR(40),
TUBING_PRESSURE DECIMAL(8,2),
TUBING_PRESSURE_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_IN_AREA'
CREATE TABLE pden_in_area
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_LAND_RIGHT'
CREATE TABLE pden_land_right
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
NO_OF_GAS_WELLS DECIMAL(14,9),
NO_OF_INJECTION_WELLS DECIMAL(14,9),
NO_OF_OIL_WELLS DECIMAL(14,9),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_LEASE_UNIT'
CREATE TABLE pden_lease_unit
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
LEASE_UNIT_ID VARCHAR(40),
NO_OF_GAS_WELLS DECIMAL(14,9),
NO_OF_INJECTION_WELLS DECIMAL(14,9),
NO_OF_OIL_WELLS DECIMAL(14,9),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_MATERIAL_BAL'
CREATE TABLE pden_material_bal
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
PRODUCT_TYPE VARCHAR(40) NOT NULL,
CASE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CASE_NAME VARCHAR(255),
CLOSE_MONTH VARCHAR(40),
CLOSE_YEAR SMALLINT,
CO2_PERCENT DECIMAL(15,12),
CRITICAL_PRESS DECIMAL(10,5),
CRITICAL_PRESS_OUOM VARCHAR(40),
CRITICAL_TEMP DECIMAL(10,5),
CRITICAL_TEMP_OUOM VARCHAR(40),
CUM_VOLUME DECIMAL(18,4),
CUM_VOLUME_DATE TIMESTAMP(0),
CUM_VOLUME_DATE_DESC VARCHAR(8),
CUM_VOLUME_OUOM VARCHAR(40),
CUM_VOLUME_UOM VARCHAR(40),
CURVE_FIT_ERROR DECIMAL(10,5),
CURVE_FIT_TYPE VARCHAR(40),
CURVE_INTERCEPT DECIMAL(10,5),
CURVE_NAME VARCHAR(255),
CURVE_SLOPE DECIMAL(10,5),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FINAL_CUM_VOLUME DECIMAL(18,4),
FINAL_CUM_VOLUME_OUOM VARCHAR(40),
FINAL_CUM_VOLUME_UOM VARCHAR(40),
FINAL_PRESS DECIMAL(8,2),
FINAL_PRESS_OUOM VARCHAR(40),
GAS_ABANDON_PRESS DECIMAL(8,2),
GAS_ABANDON_PRESS_OUOM VARCHAR(40),
GAS_ABANDON_RECOVER DECIMAL(10,5),
H2S_PERCENT DECIMAL(15,12),
INITIAL_CUM_VOLUME DECIMAL(18,4),
INITIAL_CUM_VOLUME_OUOM VARCHAR(40),
INITIAL_CUM_VOLUME_UOM VARCHAR(40),
INITIAL_PRESS DECIMAL(8,2),
INITIAL_PRESS_OUOM VARCHAR(40),
INITIAL_TEMP DECIMAL(10,5),
INITIAL_TEMP_OUOM VARCHAR(40),
MEASURED_PRESS_IND VARCHAR(1),
N2_PERCENT DECIMAL(15,12),
ORIG_GAS_IN_PLACE DECIMAL(18,4),
POOL_DATUM_DEPTH DECIMAL(15,5),
POOL_DATUM_DEPTH_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROJECT_ID VARCHAR(40),
RECOV_GAS_IN_PLACE DECIMAL(18,4),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SPECIFIC_GRAVITY DECIMAL(10,5),
START_DATE TIMESTAMP(0),
SURFACE_LOSS_PERCENT DECIMAL(15,12),
VOLUME DECIMAL(18,4),
VOLUME_OUOM VARCHAR(40),
VOLUME_UOM VARCHAR(40),
ZERO_PRESS_IND VARCHAR(1),
Z_FACTOR_METHOD VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_OPER_HIST'
CREATE TABLE pden_oper_hist
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
OPERATOR_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_OTHER'
CREATE TABLE pden_other
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NO_OF_GAS_WELLS DECIMAL(14,9),
NO_OF_INJECTION_WELLS DECIMAL(14,9),
NO_OF_OIL_WELLS DECIMAL(14,9),
OTHER_LONG_NAME VARCHAR(255),
OTHER_SHORT_NAME VARCHAR(30),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_POOL'
CREATE TABLE pden_pool
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
NO_OF_GAS_WELLS DECIMAL(14,9),
NO_OF_INJECTION_WELLS DECIMAL(14,9),
NO_OF_OIL_WELLS DECIMAL(14,9),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_PROD_STRING'
CREATE TABLE pden_prod_string
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
LEASE_UNIT_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
STRING_ID VARCHAR(40),
STRING_SOURCE VARCHAR(40),
UWI VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_PROD_STRING_XREF'
CREATE TABLE pden_prod_string_xref
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
UWI VARCHAR(40) NOT NULL,
STRING_SOURCE VARCHAR(40) NOT NULL,
STRING_ID VARCHAR(40) NOT NULL,
PDEN_PRS_XREF_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_PR_STR_ALLOWABLE'
CREATE TABLE pden_pr_str_allowable
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
UWI VARCHAR(40) NOT NULL,
STRING_SOURCE VARCHAR(40) NOT NULL,
STRING_ID VARCHAR(40) NOT NULL,
PDEN_PRS_XREF_SEQ_NO INT,
ALLOWABLE_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ALLOWABLE DECIMAL(14,4),
ALLOWABLE_DATE TIMESTAMP(0),
ALLOWABLE_DATE_DESC VARCHAR(8),
ALLOWABLE_OUOM VARCHAR(40),
ALLOWABLE_UOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERIOD_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
PRODUCT_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_PR_STR_FORM'
CREATE TABLE pden_pr_str_form
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PR_STR_FORM_OBS_NO INT,
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
STRING_ID VARCHAR(40),
STRING_SOURCE VARCHAR(40),
UWI VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_RESENT'
CREATE TABLE pden_resent
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
NO_OF_GAS_WELLS DECIMAL(14,9),
NO_OF_INJECTION_WELLS DECIMAL(14,9),
NO_OF_OIL_WELLS DECIMAL(14,9),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
SHORT_NAME VARCHAR(30),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_RESENT_CLASS'
CREATE TABLE pden_resent_class
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
NO_OF_GAS_WELLS DECIMAL(14,9),
NO_OF_INJECTION_WELLS DECIMAL(14,9),
NO_OF_OIL_WELLS DECIMAL(14,9),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SHORT_NAME VARCHAR(30),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_STATUS_HIST'
CREATE TABLE pden_status_hist
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
STATUS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERCENT_CAPABILITY DECIMAL(15,12),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
START_TIME TIMESTAMP(0),
STATUS VARCHAR(40),
STATUS_DATE TIMESTAMP(0),
STATUS_TYPE VARCHAR(40),
TIMEZONE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_VOLUME_ANALYSIS'
CREATE TABLE pden_volume_analysis
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
PRODUCT_TYPE VARCHAR(40) NOT NULL,
CASE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_SIZE DECIMAL(20,10),
AREA_SIZE_OUOM VARCHAR(40),
CASE_NAME VARCHAR(255),
DATE_FORMAT_DESC TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GAS_ABANDON_COMPRESS DECIMAL(10,5),
GAS_ABANDON_PRESS DECIMAL(8,2),
GAS_ABANDON_PRESS_OUOM VARCHAR(40),
GAS_INIT_COMPRESS DECIMAL(10,5),
GAS_INIT_PRESSURE DECIMAL(8,2),
GAS_IN_PLACE DECIMAL(18,4),
GAS_IN_PLACE_OUOM VARCHAR(40),
GAS_ORIGINAL_IN_PLACE DECIMAL(18,4),
GAS_ORIGINAL_IN_PLACE_OUOM VARCHAR(40),
GAS_RATIO_BGI DECIMAL(10,5),
GAS_RECOVERY DECIMAL(15,12),
GROSS_NET_PAY_RATIO DECIMAL(10,5),
GROSS_PAY DECIMAL(10,3),
GROSS_PAY_OUOM VARCHAR(40),
INIT_RES_TEMP DECIMAL(10,5),
INIT_RES_TEMP_OUOM VARCHAR(40),
NET_PAY DECIMAL(10,3),
NET_PAY_OUOM VARCHAR(40),
OIL_IN_PLACE DECIMAL(18,4),
OIL_IN_PLACE_OUOM VARCHAR(40),
OIL_ORIGINAL_IN_PLACE DECIMAL(18,4),
OIL_ORIGINAL_IN_PLACE_OUOM VARCHAR(40),
OIL_RECOVERY_PRIMARY DECIMAL(15,12),
OIL_RECOVERY_SECONDARY DECIMAL(15,12),
OIL_RECOVERY_TOTAL DECIMAL(15,12),
OIL_RESIDUAL_SAT DECIMAL(10,5),
OIL_SHRINKAGE DECIMAL(10,5),
ORIGINAL_GOR DECIMAL(10,5),
ORIGINAL_GOR_OUOM VARCHAR(40),
ORIG_SOL_GAS_IN_PLACE DECIMAL(18,4),
ORIG_SOL_GAS_IN_PLACE_OUOM VARCHAR(40),
PERMEABILITY DECIMAL(10,5),
PERMEABILITY_OUOM VARCHAR(40),
POROSITY DECIMAL(10,5),
PPDM_GUID VARCHAR(38),
PROJECT_ID VARCHAR(40),
RECOV_GOR DECIMAL(10,5),
RECOV_SOL_GAS_IN_PLACE DECIMAL(18,4),
RECOV_SOL_GAS_IN_PLACE_OUOM VARCHAR(40),
REMARK VARCHAR(2000),
SOL_GAS_RECOVERY DECIMAL(15,12),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
VOLUME DECIMAL(18,4),
VOLUME_OUOM VARCHAR(40),
VOLUME_UOM VARCHAR(40),
WATER_SATURATION DECIMAL(10,5),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_VOL_DISPOSITION'
CREATE TABLE pden_vol_disposition
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
VOLUME_METHOD VARCHAR(40) NOT NULL,
ACTIVITY_TYPE VARCHAR(40) NOT NULL,
PRODUCT_TYPE VARCHAR(40) NOT NULL,
PERIOD_TYPE VARCHAR(40) NOT NULL,
DISPOSITION_OBS_NO INT,
AMENDMENT_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
AMEND_REASON VARCHAR(40),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
POSTED_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
RECEIVING_PDEN_ID VARCHAR(40),
RECEIVING_PDEN_SUBTYPE VARCHAR(30),
REMARK VARCHAR(2000),
REPORT_IND VARCHAR(1),
SOURCE VARCHAR(40),
VOLUME DECIMAL(14,4),
VOLUME_END_DATE TIMESTAMP(0),
VOLUME_END_DATE_DESC VARCHAR(8),
VOLUME_OUOM VARCHAR(40),
VOLUME_PERIOD DECIMAL(10,5),
VOLUME_PERIOD_OUOM VARCHAR(40),
VOLUME_QUALITY DECIMAL(7,2),
VOLUME_QUALITY_OUOM VARCHAR(40),
VOLUME_START_DATE TIMESTAMP(0),
VOLUME_UOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_VOL_REGIME'
CREATE TABLE pden_vol_regime
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
VOLUME_REGIME_ID VARCHAR(40) NOT NULL,
PDEN_REGIME_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_VOL_SUMMARY'
CREATE TABLE pden_vol_summary
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PERIOD_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
VOLUME_METHOD VARCHAR(40) NOT NULL,
ACTIVITY_TYPE VARCHAR(40) NOT NULL,
PERIOD_TYPE VARCHAR(40) NOT NULL,
AMENDMENT_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
AMEND_REASON VARCHAR(40),
BOE_CUM_VOLUME DECIMAL(14,4),
BOE_VOLUME DECIMAL(14,4),
BOE_VOLUME_OUOM VARCHAR(40),
BOE_YTD_VOLUME DECIMAL(14,4),
CO2_CUM_VOLUME DECIMAL(14,4),
CO2_VOLUME DECIMAL(14,4),
CO2_VOLUME_OUOM VARCHAR(40),
CO2_YTD_VOLUME DECIMAL(14,4),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GAS_CUM_VOLUME DECIMAL(14,4),
GAS_ENERGY DECIMAL(14,4),
GAS_ENERGY_OUOM VARCHAR(40),
GAS_QUALITY DECIMAL(7,2),
GAS_QUALITY_OUOM VARCHAR(40),
GAS_VOLUME DECIMAL(14,4),
GAS_VOLUME_OUOM VARCHAR(40),
GAS_YTD_VOLUME DECIMAL(14,4),
INJECTION_CYCLE DOUBLE PRECISION,
INJECTION_PRESSURE DECIMAL(8,2),
INJECTION_PRESSURE_OUOM VARCHAR(40),
INVENTORY_CLOSE_BALANCE DECIMAL(10,5),
INVENTORY_OPEN_BALANCE DECIMAL(10,5),
INVENTORY_PRODUCT VARCHAR(40),
INVENT_CLOSE_BAL_OUOM VARCHAR(40),
INVENT_OPEN_BAL_OUOM VARCHAR(40),
NGL_CUM_VOLUME DECIMAL(14,4),
NGL_VOLUME DECIMAL(14,4),
NGL_VOLUME_OUOM VARCHAR(40),
NGL_YTD_VOLUME DECIMAL(14,4),
NITROGEN_CUM_VOLUME DECIMAL(14,4),
NITROGEN_VOLUME DECIMAL(14,4),
NITROGEN_VOLUME_OUOM VARCHAR(40),
NITROGEN_YTD_VOLUME DECIMAL(14,4),
NO_OF_GAS_WELLS DECIMAL(14,9),
NO_OF_INJECTION_WELLS DECIMAL(14,9),
NO_OF_OIL_WELLS DECIMAL(14,9),
OIL_CUM_VOLUME DECIMAL(14,4),
OIL_QUALITY DECIMAL(7,2),
OIL_QUALITY_OUOM VARCHAR(40),
OIL_VOLUME DECIMAL(14,4),
OIL_VOLUME_OUOM VARCHAR(40),
OIL_YTD_VOLUME DECIMAL(14,4),
PERIOD_ON_INJECTION DECIMAL(15,5),
PERIOD_ON_INJECTION_OUOM VARCHAR(40),
PERIOD_ON_PRODUCTION DECIMAL(15,5),
PERIOD_ON_PRODUCTION_OUOM VARCHAR(40),
POSTED_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PRIMARY_ALLOWABLE DECIMAL(14,4),
PRIMARY_ALLOWABLE_OUOM VARCHAR(40),
PRIMARY_PRODUCT VARCHAR(40),
PROJECT_ID VARCHAR(40),
REMARK VARCHAR(2000),
REPORT_IND VARCHAR(1),
SOURCE VARCHAR(40),
SULPHUR_CUM_VOLUME DECIMAL(14,4),
SULPHUR_VOLUME DECIMAL(14,4),
SULPHUR_VOLUME_OUOM VARCHAR(40),
SULPHUR_YTD_VOLUME DECIMAL(14,4),
VOLUME_DATE TIMESTAMP(0),
VOLUME_DATE_DESC VARCHAR(8),
VOLUME_PERIOD DECIMAL(10,5),
VOLUME_PERIOD_OUOM VARCHAR(40),
WATER_CUM_VOLUME DECIMAL(14,4),
WATER_VOLUME DECIMAL(14,4),
WATER_VOLUME_OUOM VARCHAR(40),
WATER_YTD_VOLUME DECIMAL(14,4),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_VOL_SUMM_OTHER'
CREATE TABLE pden_vol_summ_other
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
VOLUME_METHOD VARCHAR(40) NOT NULL,
ACTIVITY_TYPE VARCHAR(40) NOT NULL,
PERIOD_TYPE VARCHAR(40) NOT NULL,
PDEN_PERIOD_ID VARCHAR(40) NOT NULL,
AMENDMENT_SEQ_NO INT,
PRODUCT_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CUM_VOLUME DECIMAL(14,4),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GAS_ENERGY DECIMAL(14,4),
GAS_ENERGY_OUOM VARCHAR(40),
MASS DECIMAL(14,4),
MASS_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REPORT_IND VARCHAR(1),
SOURCE VARCHAR(40),
VOLUME DECIMAL(14,4),
VOLUME_DATE TIMESTAMP(0),
VOLUME_DATE_DESC VARCHAR(8),
VOLUME_OUOM VARCHAR(40),
VOLUME_QUALITY DECIMAL(7,2),
VOLUME_QUALITY_OUOM VARCHAR(40),
VOLUME_UOM VARCHAR(40),
YTD_VOLUME DECIMAL(14,4),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_WELL'
CREATE TABLE pden_well
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PRIMARY_UWI VARCHAR(40),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_WELL_REPORT_STREAM'
CREATE TABLE pden_well_report_stream
(
PDEN_SUBTYPE VARCHAR(30) NOT NULL,
PDEN_ID VARCHAR(40) NOT NULL,
PDEN_SOURCE VARCHAR(40) NOT NULL,
UWI VARCHAR(40) NOT NULL,
WRS_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SUBSTANCE_ID VARCHAR(40),
SUBSTANCE_PERCENT DECIMAL(15,12),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PDEN_XREF'
CREATE TABLE pden_xref
(
FROM_PDEN_SUBTYPE VARCHAR(30) NOT NULL,
FROM_PDEN_ID VARCHAR(40) NOT NULL,
FROM_PDEN_SOURCE VARCHAR(40) NOT NULL,
TO_PDEN_SUBTYPE VARCHAR(30) NOT NULL,
TO_PDEN_ID VARCHAR(40) NOT NULL,
TO_PDEN_SOURCE VARCHAR(40) NOT NULL,
XREF_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PDEN_XREF_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE POOL'
CREATE TABLE pool
(
POOL_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CURRENT_STATUS_DATE TIMESTAMP(0),
DISCOVERY_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_ID VARCHAR(40),
POOL_CODE VARCHAR(20),
POOL_NAME VARCHAR(255),
POOL_NAME_ABBREVIATION VARCHAR(12),
POOL_STATUS VARCHAR(40),
POOL_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE POOL_ALIAS'
CREATE TABLE pool_alias
(
POOL_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
POOL_ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE POOL_AREA'
CREATE TABLE pool_area
(
POOL_ID VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE POOL_COMPONENT'
CREATE TABLE pool_component
(
POOL_ID VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_COMPONENT_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_FORM_OBS_NO INT,
PR_STR_SOURCE VARCHAR(40),
PR_STR_UWI VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
STRING_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_ACTIVITY_UWI VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE POOL_INSTRUMENT'
CREATE TABLE pool_instrument
(
INSTRUMENT_ID VARCHAR(40) NOT NULL,
POOL_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE POOL_VERSION'
CREATE TABLE pool_version
(
POOL_ID VARCHAR(40) NOT NULL,
POOL_SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CURRENT_STATUS_DATE TIMESTAMP(0),
DISCOVERY_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_ID VARCHAR(40),
POOL_CODE VARCHAR(20),
POOL_NAME VARCHAR(255),
POOL_NAME_ABBREVIATION VARCHAR(12),
POOL_STATUS VARCHAR(40),
POOL_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE POOL_VERSION_AREA'
CREATE TABLE pool_version_area
(
POOL_ID VARCHAR(40) NOT NULL,
POOL_SOURCE VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_AUDIT_HISTORY'
CREATE TABLE ppdm_audit_history
(
SYSTEM_ID VARCHAR(40) NOT NULL,
TABLE_NAME VARCHAR(30) NOT NULL,
COLUMN_NAME VARCHAR(30) NOT NULL,
AUDIT_ROW_GUID VARCHAR(38) NOT NULL,
AUDIT_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
AUDIT_AUTHORIZED_BY_BA_ID VARCHAR(40),
AUDIT_CREATED_BY_BA_ID VARCHAR(40),
AUDIT_DATETIME TIMESTAMP(0),
AUDIT_DESC VARCHAR(1024),
AUDIT_REASON VARCHAR(40),
AUDIT_SOURCE VARCHAR(40),
AUDIT_TYPE VARCHAR(40),
AUDIT_VERIFIED_BY_BA_ID VARCHAR(40),
DATA_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NEW_DATE_VALUE TIMESTAMP(0),
NEW_NUMERIC_VALUE DOUBLE PRECISION,
NEW_NUMERIC_VALUE_OUOM VARCHAR(40),
NEW_NUMERIC_VALUE_UOM VARCHAR(40),
NEW_TEXT_VALUE VARCHAR(2000),
NULL_DESCRIPTION VARCHAR(1024),
ORIGINAL_DATE_VALUE TIMESTAMP(0),
ORIGINAL_NUMERIC_VALUE DOUBLE PRECISION,
ORIGINAL_NUMERIC_VALUE_OUOM VARCHAR(40),
ORIGINAL_NUMERIC_VALUE_UOM VARCHAR(40),
ORIGINAL_TEXT_VALUE VARCHAR(2000),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RETENTION_PERIOD VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_AUDIT_HISTORY_REM'
CREATE TABLE ppdm_audit_history_rem
(
SYSTEM_ID VARCHAR(40) NOT NULL,
TABLE_NAME VARCHAR(30) NOT NULL,
COLUMN_NAME VARCHAR(30) NOT NULL,
AUDIT_ROW_GUID VARCHAR(38) NOT NULL,
AUDIT_SEQ_NO INT,
REMARK_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
AUDIT_DATETIME TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_ABOUT_BA_ID VARCHAR(40),
REMARK_BY_BA_ID VARCHAR(40),
REMARK_FOR_BA_ID VARCHAR(40),
REMARK_TYPE VARCHAR(40),
REMARK_USE_TYPE VARCHAR(40),
RETENTION_PERIOD VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_CHECK_CONS_VALUE'
CREATE TABLE ppdm_check_cons_value
(
SYSTEM_ID VARCHAR(40) NOT NULL,
TABLE_NAME VARCHAR(30) NOT NULL,
COLUMN_NAME VARCHAR(30) NOT NULL,
CHECK_VALUE VARCHAR(30) NOT NULL,
ACTIVE_IND VARCHAR(1),
CHECK_CONS_NAME VARCHAR(30),
CONSTRAINT_NAME VARCHAR(30),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTENSION_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
VALUE_LONG_NAME VARCHAR(255),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_CODE_VERSION'
CREATE TABLE ppdm_code_version
(
SYSTEM_ID VARCHAR(40) NOT NULL,
TABLE_NAME VARCHAR(30) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
VERSION_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
DEFINITION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REFERENCE_TABLE_GUID VARCHAR(38),
REFERENCE_TABLE_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE_DOCUMENT_ID VARCHAR(40),
USE_RULE_DESC VARCHAR(240),
VERSION_OWNER_BA_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_CODE_VERSION_COLUMN'
CREATE TABLE ppdm_code_version_column
(
SYSTEM_ID VARCHAR(40) NOT NULL,
TABLE_NAME VARCHAR(30) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
VERSION_OBS_NO INT,
COLUMN_NAME VARCHAR(30) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
DEFINITION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE VARCHAR(40),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PRIMARY_KEY VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_CODE_VERSION_USE'
CREATE TABLE ppdm_code_version_use
(
SYSTEM_ID VARCHAR(40) NOT NULL,
TABLE_NAME VARCHAR(30) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
VERSION_OBS_NO INT,
USE_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROUP_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PROCEDURE_ID VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE_DOCUMENT_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
USE_OWNER_BA_ID VARCHAR(40),
USE_RULE_DESC VARCHAR(240),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_CODE_VERSION_XREF'
CREATE TABLE ppdm_code_version_xref
(
SYSTEM_ID VARCHAR(40) NOT NULL,
TABLE_NAME VARCHAR(30) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
VERSION_OBS_NO INT,
SYSTEM_ID2 VARCHAR(40) NOT NULL,
TABLE_NAME2 VARCHAR(30) NOT NULL,
SOURCE2 VARCHAR(40) NOT NULL,
VERSION_OBS_NO2 INT,
ACTIVE_IND VARCHAR(1),
CODE_XREF_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIVALENCE_DESC VARCHAR(1024),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE_DOCUMENT_ID VARCHAR(40),
USER_RULE_DESC VARCHAR(240),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_COLUMN'
CREATE TABLE ppdm_column
(
SYSTEM_ID VARCHAR(40) NOT NULL,
TABLE_NAME VARCHAR(30) NOT NULL,
COLUMN_NAME VARCHAR(30) NOT NULL,
ACTIVE_IND VARCHAR(1),
COLUMN_COMMENT VARCHAR(2000),
COLUMN_KEY_METHOD VARCHAR(40),
COLUMN_PRECISION DOUBLE PRECISION,
COLUMN_SCALE DOUBLE PRECISION,
COLUMN_SEQUENCE INT,
COLUMN_SIZE DOUBLE PRECISION,
CONTROL_COLUMN_IND VARCHAR(1),
CONTROL_COLUMN_NAME VARCHAR(30),
DATA_TYPE VARCHAR(40),
DEFAULT_IND_VALUE VARCHAR(1),
DEFAULT_UOM_ID VARCHAR(40),
DEFAULT_VALUE_METHOD VARCHAR(40),
DISTINCT_VALUE_COUNT DOUBLE PRECISION,
DISTINCT_VALUE_COUNT_DATE TIMESTAMP(0),
DOMAIN VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTENSION_IND VARCHAR(1),
LAST_SYSTEM_KEY VARCHAR(240),
NULLABLE_IND VARCHAR(1),
OUOM_COLUMN_NAME VARCHAR(30),
PPDM_GUID VARCHAR(38),
PRIMARY_KEY_SEQUENCE INT,
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SURROGATE_IND VARCHAR(1),
UOM_COLUMN_NAME VARCHAR(30),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_COLUMN_ALIAS'
CREATE TABLE ppdm_column_alias
(
SYSTEM_ID VARCHAR(40) NOT NULL,
TABLE_NAME VARCHAR(30) NOT NULL,
COLUMN_NAME VARCHAR(30) NOT NULL,
COLUMN_ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_CONSTRAINT'
CREATE TABLE ppdm_constraint
(
SYSTEM_ID VARCHAR(40) NOT NULL,
TABLE_NAME VARCHAR(30) NOT NULL,
CONSTRAINT_NAME VARCHAR(30) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONSTRAINT_FULL_NAME VARCHAR(30),
CONSTRAINT_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTENSION_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
REFERENCED_CONSTRAINT_NAME VARCHAR(30),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_CONS_COLUMN'
CREATE TABLE ppdm_cons_column
(
SYSTEM_ID VARCHAR(40) NOT NULL,
TABLE_NAME VARCHAR(30) NOT NULL,
CONSTRAINT_NAME VARCHAR(30) NOT NULL,
COLUMN_NAME VARCHAR(30) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONDITION VARCHAR(2000),
CONSTRAINT_SEQ_NO INT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTENSION_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
REFERENCED_COLUMN_NAME VARCHAR(30),
REFERENCED_CONSTRAINT_NAME VARCHAR(30),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_DATA_STORE'
CREATE TABLE ppdm_data_store
(
UOM_SYSTEM VARCHAR(40) NOT NULL,
NAME VARCHAR(255) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_DOMAIN'
CREATE TABLE ppdm_domain
(
DOMAIN VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DATA_TYPE VARCHAR(40),
DOMAIN_NAME VARCHAR(255),
DOMAIN_QUANTITY_TYPE VARCHAR(40),
DOMAIN_SCALE DOUBLE PRECISION,
DOMAIN_WIDTH DOUBLE PRECISION,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_EXCEPTION'
CREATE TABLE ppdm_exception
(
PE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONSTRAINT_FULL_NAME VARCHAR(30),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OWNER VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_ID VARCHAR(240),
SOURCE VARCHAR(40),
SYSTEM_ID VARCHAR(40),
TABLE_NAME VARCHAR(30),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_GROUP'
CREATE TABLE ppdm_group
(
GROUP_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DEFAULT_UNIT_SYSTEM_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROUP_NAME VARCHAR(255),
GROUP_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REPORT_HEADING1 VARCHAR(240),
REPORT_HEADING2 VARCHAR(240),
SCREEN_HEADING1 VARCHAR(240),
SCREEN_HEADING2 VARCHAR(240),
SOURCE VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_GROUP_OBJECT'
CREATE TABLE ppdm_group_object
(
GROUP_ID VARCHAR(40) NOT NULL,
OBJECT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CODE_VERSION_OBS_NO INT,
CODE_VERSION_SOURCE VARCHAR(40),
COLUMN_ALIAS_ID VARCHAR(40),
COLUMN_NAME VARCHAR(30),
CONSTRAINT_NAME VARCHAR(30),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROUP_USE VARCHAR(40),
INDEX_ID VARCHAR(40),
OBJECT_TYPE VARCHAR(40),
OUTPUT_FONT VARCHAR(40),
OUTPUT_FONT_BACKGR_COLOR VARCHAR(40),
OUTPUT_FONT_COLOR VARCHAR(40),
OUTPUT_FONT_EFFECT VARCHAR(40),
OUTPUT_FONT_SIZE DECIMAL(12,2),
OUTPUT_FONT_SIZE_UOM VARCHAR(40),
OUTPUT_HEADING VARCHAR(240),
OUTPUT_LENGTH BIGINT,
OUTPUT_LENGTH_UOM VARCHAR(40),
OUTPUT_PRECISION DOUBLE PRECISION,
PPDM_GUID VARCHAR(38),
PREFERRED_UOM VARCHAR(40),
PROCEDURE_ID VARCHAR(40),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
RULE_ID VARCHAR(40),
SOURCE VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
SYSTEM_ID VARCHAR(40),
TABLE_ALIAS VARCHAR(30),
TABLE_NAME VARCHAR(30),
USE_RULE_DESCRIPTION VARCHAR(1024),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_GROUP_OWNER'
CREATE TABLE ppdm_group_owner
(
GROUP_ID VARCHAR(40) NOT NULL,
OWNER_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
DEFAULT_UNIT_SYSTEM_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
ORGANIZATION_ID VARCHAR(40),
ORGANIZATION_SEQ_NO INT,
OWNER_BA_ID VARCHAR(40),
OWNER_ROLE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_GROUP_REMARK'
CREATE TABLE ppdm_group_remark
(
GROUP_ID VARCHAR(40) NOT NULL,
REMARK_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROUP_REMARK VARCHAR(2000),
MADE_BY_BA_ID VARCHAR(40),
ORGANIZATION_ID VARCHAR(40),
ORGANIZATION_SEQ_NO INT,
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_GROUP_XREF'
CREATE TABLE ppdm_group_xref
(
PARENT_GROUP_ID VARCHAR(40) NOT NULL,
CHILD_GROUP_ID VARCHAR(40) NOT NULL,
XREF_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROUP_XREF_TYPE VARCHAR(40),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_INDEX'
CREATE TABLE ppdm_index
(
SYSTEM_ID VARCHAR(40) NOT NULL,
TABLE_NAME VARCHAR(30) NOT NULL,
INDEX_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTENSION_IND VARCHAR(1),
INDEX_CATEGORY VARCHAR(40),
INDEX_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
UNIQUE_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_INDEX_COLUMN'
CREATE TABLE ppdm_index_column
(
SYSTEM_ID VARCHAR(40) NOT NULL,
TABLE_NAME VARCHAR(30) NOT NULL,
INDEX_ID VARCHAR(40) NOT NULL,
COLUMN_NAME VARCHAR(30) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTENSION_IND VARCHAR(1),
INDEX_SEQ_NO INT,
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_MAP_DETAIL'
CREATE TABLE ppdm_map_detail
(
MAP_ID VARCHAR(40) NOT NULL,
MAP_DETAIL_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
COLUMN_NAME1 VARCHAR(30),
COLUMN_NAME2 VARCHAR(30),
CREATE_METHOD VARCHAR(40),
DEFAULT_VALUE VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAP_DESC VARCHAR(240),
MAP_OWNER_BA_ID VARCHAR(40),
MAP_TYPE VARCHAR(40),
MAP_VERSION_NUM VARCHAR(12),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
RING_SEQ_NO INT,
SCHEMA_ENTITY_ID1 VARCHAR(40),
SCHEMA_ENTITY_ID2 VARCHAR(40),
SOURCE VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
SYSTEM_ID1 VARCHAR(40),
SYSTEM_ID2 VARCHAR(40),
TABLE_NAME1 VARCHAR(30),
TABLE_NAME2 VARCHAR(30),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_MAP_LOAD'
CREATE TABLE ppdm_map_load
(
MAP_ID VARCHAR(40) NOT NULL,
LOAD_PROCESS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DELETE_ALLOWED_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INSERT_ALLOWED_IND VARCHAR(1),
PPDM_GROUP_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROCEDURE_ID VARCHAR(40),
PROCEDURE_NAME VARCHAR(255),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_SYSTEM_ID VARCHAR(40),
START_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
TARGET_SYSTEM_ID VARCHAR(40),
UPDATE_ALLOWED_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_MAP_LOAD_ERROR'
CREATE TABLE ppdm_map_load_error
(
MAP_ID VARCHAR(40) NOT NULL,
LOAD_PROCESS_ID VARCHAR(40) NOT NULL,
ERROR_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DELETE_ERROR_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
ERROR_CAUSE_DESC VARCHAR(1024),
ERROR_CAUSE_TYPE VARCHAR(40),
ERROR_CODE VARCHAR(30),
ERROR_DATE TIMESTAMP(0),
ERROR_MESSAGE VARCHAR(2000),
EXPIRY_DATE TIMESTAMP(0),
INSERT_ERROR_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
REF_MAP_DETAIL_OBS_NO INT,
REMARK VARCHAR(2000),
RESOLUTION_DESC VARCHAR(1024),
RESOLUTION_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
UPDATE_ERROR_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_MAP_RULE'
CREATE TABLE ppdm_map_rule
(
MAP_ID VARCHAR(40) NOT NULL,
MAP_DETAIL_OBS_NO INT,
RULE_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
CREATE_METHOD VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
DEP_COLUMN_NAME VARCHAR(30),
DEP_SCHEMA_ENTITY_ID VARCHAR(40),
DEP_SYSTEM_ID VARCHAR(40),
DEP_TABLE_NAME VARCHAR(30),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAP_RULE_TYPE VARCHAR(40),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PROCEDURE_ID VARCHAR(40),
PROCEDURE_SYSTEM_ID VARCHAR(40),
REMARK VARCHAR(2000),
RING_SEQ_NO INT,
RULE_DESC VARCHAR(240),
RULE_OWNER_BA_ID VARCHAR(40),
RULE_VERSION_NUM VARCHAR(12),
SOURCE VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_MEASUREMENT_SYSTEM'
CREATE TABLE ppdm_measurement_system
(
UOM_SYSTEM_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
UNIT_SYSTEM_NAME VARCHAR(255),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_METRIC'
CREATE TABLE ppdm_metric
(
METRIC_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
METRIC_NAME VARCHAR(255),
METRIC_PROCEDURE VARCHAR(2000),
METRIC_TYPE VARCHAR(40),
ORGANIZATION_ID VARCHAR(40),
ORGANIZATION_SEQ_NO INT,
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROCEDURE_ID VARCHAR(40),
PROCEDURE_SYSTEM_ID VARCHAR(40),
PROJECTED_FINAL_COUNT BIGINT,
PURPOSE_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_METRIC_COMPONENT'
CREATE TABLE ppdm_metric_component
(
METRIC_ID VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_LICENSEE_BA_ID VARCHAR(40),
BA_LICENSE_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_LICENSE_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
METRIC_COMPONENT_TYPE VARCHAR(40),
METRIC_OBS_NO INT,
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_COLUMN_NAME VARCHAR(30),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_SOURCE VARCHAR(40),
PR_STR_UWI VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
RESTRICTION_ID VARCHAR(40),
RESTRICTION_VERSION INT,
SAMPLE_ANAL_SOURCE VARCHAR(40),
SCHEMA_ENTITY_ID VARCHAR(40),
SEIS_LICENSE_ID VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
STRING_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_ACTIVITY_UWI VARCHAR(40),
WELL_LICENSE_ID VARCHAR(40),
WELL_LICENSE_SOURCE VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_METRIC_VALUE'
CREATE TABLE ppdm_metric_value
(
METRIC_ID VARCHAR(40) NOT NULL,
METRIC_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM VARCHAR(40),
AVERAGE_VALUE_UOM VARCHAR(40),
COST DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
CURRENCY_UOM VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
METRIC_CODE VARCHAR(40),
METRIC_DESC VARCHAR(1024),
METRIC_IND VARCHAR(1),
METRIC_TYPE VARCHAR(40),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_VALUE DOUBLE PRECISION,
REFERENCE_VALUE_OUOM VARCHAR(40),
REFERENCE_VALUE_TYPE VARCHAR(40),
REFERENCE_VALUE_UOM VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_OBJECT_STATUS'
CREATE TABLE ppdm_object_status
(
STATUS_ID VARCHAR(40) NOT NULL,
STATUS_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CODE_VERSION_OBS_NO INT,
CODE_VERSION_SOURCE VARCHAR(40),
COLUMN_NAME VARCHAR(30),
CONSTRAINT_NAME VARCHAR(30),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INDEX_ID VARCHAR(40),
OBJECT_NAME VARCHAR(255),
OBJECT_STATUS VARCHAR(40),
OBJECT_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROCEDURE_ID VARCHAR(40),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
RULE_ID VARCHAR(40),
SOURCE VARCHAR(40),
SYSTEM_ID VARCHAR(40),
TABLE_NAME VARCHAR(30),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_PROCEDURE'
CREATE TABLE ppdm_procedure
(
SYSTEM_ID VARCHAR(40) NOT NULL,
PROCEDURE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PROCEDURE_DESC VARCHAR(240),
PROCEDURE_NAME VARCHAR(255),
PROCEDURE_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
TABLE_NAME VARCHAR(30),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_PROPERTY_COLUMN'
CREATE TABLE ppdm_property_column
(
PROPERTY_SET_ID VARCHAR(40) NOT NULL,
PROPERTY_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
COLUMN_PRECISION DECIMAL(10,5),
COLUMN_SCALE DECIMAL(10,5),
COLUMN_SIZE DECIMAL(10,5),
DATA_TYPE VARCHAR(40),
DOMAIN VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PREFERRED_CURRENCY_UOM VARCHAR(40),
PREFERRED_UOM VARCHAR(40),
QUANTITY_TYPE VARCHAR(40),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
USE_COLUMN_NAME VARCHAR(30),
USE_INDICATOR_IND VARCHAR(1),
USE_SYSTEM_ID VARCHAR(40),
USE_TABLE_NAME VARCHAR(30),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_PROPERTY_SET'
CREATE TABLE ppdm_property_set
(
PROPERTY_SET_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_NAME VARCHAR(255),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
USE_SYSTEM_ID VARCHAR(40),
USE_TABLE_NAME VARCHAR(30),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_QUALITY_CONTROL'
CREATE TABLE ppdm_quality_control
(
SYSTEM_ID VARCHAR(40) NOT NULL,
TABLE_NAME VARCHAR(30) NOT NULL,
QC_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
CHECKED_BY_BA_ID VARCHAR(40),
COLUMN_NAME VARCHAR(30),
CURRENT_DATE_VALUE TIMESTAMP(0),
CURRENT_NUMERIC_VALUE DOUBLE PRECISION,
CURRENT_NUMERIC_VALUE_OUOM VARCHAR(40),
CURRENT_NUMERIC_VALUE_UOM VARCHAR(40),
CURRENT_ROW_GUID VARCHAR(38),
CURRENT_TEXT_VALUE VARCHAR(2000),
DATA_TYPE VARCHAR(40),
DONE_BY_BA_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NULL_DESCRIPTION VARCHAR(1024),
PPDM_GUID VARCHAR(38),
QC_DATETIME TIMESTAMP(0),
QC_DESC VARCHAR(1024),
QC_STATUS VARCHAR(40),
QC_TYPE VARCHAR(40),
QUALITY_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
RETENTION_PERIOD VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_QUANTITY'
CREATE TABLE ppdm_quantity
(
QUANTITY_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_QUANTITY_ALIAS'
CREATE TABLE ppdm_quantity_alias
(
QUANTITY_ALIAS_ID VARCHAR(40) NOT NULL,
QUANTITY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_RULE'
CREATE TABLE ppdm_rule
(
RULE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CURRENT_STATUS VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RULE_CLASS VARCHAR(40),
RULE_DESC VARCHAR(1024),
RULE_PURPOSE VARCHAR(40),
RULE_QUERY VARCHAR(2000),
SOURCE VARCHAR(40),
USE_CONDITION_DESC VARCHAR(1024),
USE_CONDITION_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_RULE_ALIAS'
CREATE TABLE ppdm_rule_alias
(
RULE_ID VARCHAR(40) NOT NULL,
RULE_ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_RULE_COMPONENT'
CREATE TABLE ppdm_rule_component
(
RULE_ID VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_LICENSEE_BA_ID VARCHAR(40),
BA_LICENSE_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_LICENSE_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_COLUMN_NAME VARCHAR(30),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_SOURCE VARCHAR(40),
PR_STR_UWI VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
RESTRICTION_ID VARCHAR(40),
RESTRICTION_VERSION INT,
RULE_COMPONENT_TYPE VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SCHEMA_ENTITY_ID VARCHAR(40),
SEIS_LICENSE_ID VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
STRING_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
SYSTEM_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_ACTIVITY_UWI VARCHAR(40),
WELL_LICENSE_ID VARCHAR(40),
WELL_LICENSE_SOURCE VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_RULE_DETAIL'
CREATE TABLE ppdm_rule_detail
(
RULE_ID VARCHAR(40) NOT NULL,
DETAIL_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM VARCHAR(40),
AVERAGE_VALUE_UOM VARCHAR(40),
BOOLEAN_RULE VARCHAR(40),
BUSINESS_RULE VARCHAR(2000),
DATE_FORMAT_DESC TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCED_COLUMN_NAME VARCHAR(30),
REFERENCE_COLUMN_NAME2 VARCHAR(30),
REFERENCE_SYSTEM_ID VARCHAR(40),
REFERENCE_TABLE_NAME VARCHAR(30),
REFERENCE_TABLE_NAME2 VARCHAR(30),
REFERENCE_VALUE DOUBLE PRECISION,
REFERENCE_VALUE_OUOM VARCHAR(40),
REFERENCE_VALUE_TYPE VARCHAR(40),
REFERENCE_VALUE_UOM VARCHAR(40),
REMARK VARCHAR(2000),
RULE_DESC VARCHAR(1024),
RULE_DETAIL_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_RULE_ENFORCEMENT'
CREATE TABLE ppdm_rule_enforcement
(
RULE_ID VARCHAR(40) NOT NULL,
ENFORCEMENT_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
ENFORCE_METHOD VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROCEDURE_ID VARCHAR(40),
REMARK VARCHAR(2000),
RULE_FAIL_RESULT VARCHAR(40),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_RULE_REMARK'
CREATE TABLE ppdm_rule_remark
(
RULE_ID VARCHAR(40) NOT NULL,
REMARK_TYPE VARCHAR(40) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_BY_BA_ID VARCHAR(40),
REMARK_DATE TIMESTAMP(0),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_RULE_XREF'
CREATE TABLE ppdm_rule_xref
(
DEPENDENCY_ID VARCHAR(40) NOT NULL,
RULE_ID VARCHAR(40) NOT NULL,
RULE_ID2 VARCHAR(40) NOT NULL,
XREF_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RULE_XREF_CONDITION VARCHAR(40),
RULE_XREF_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_SCHEMA_ENTITY'
CREATE TABLE ppdm_schema_entity
(
SYSTEM_ID VARCHAR(40) NOT NULL,
SCHEMA_ENTITY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DATA_TYPE VARCHAR(40),
DEFAULT_UOM_ID VARCHAR(40),
DELIMITER VARCHAR(20),
DOMAIN VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
ELEMENT_TYPE VARCHAR(40),
ENTITY_COMMENT VARCHAR(2000),
ENTITY_PRECISION BIGINT,
ENTITY_SCALE BIGINT,
ENTITY_SEQ_NO INT,
ENTITY_SIZE BIGINT,
EXPIRY_DATE TIMESTAMP(0),
EXTENSION_IND VARCHAR(1),
LAST_SYSTEM_KEY VARCHAR(240),
NULLABLE_IND VARCHAR(1),
POSITION_END BIGINT,
POSITION_START BIGINT,
PPDM_GUID VARCHAR(38),
PREFERRED_NAME VARCHAR(255),
REFERENCE_NUM VARCHAR(30),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SURROGATE_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_SCHEMA_ENTITY_ALIAS'
CREATE TABLE ppdm_schema_entity_alias
(
SYSTEM_ID VARCHAR(40) NOT NULL,
SCHEMA_ENTITY_ID VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_SCHEMA_GROUP'
CREATE TABLE ppdm_schema_group
(
GROUP_SYSTEM_ID VARCHAR(40) NOT NULL,
GROUP_SCHEMA_ENTITY_ID VARCHAR(40) NOT NULL,
COMP_SCHEMA_ENTITY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
ENTITY_SEQ_NO INT,
EXPIRY_DATE TIMESTAMP(0),
EXTENSION_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SCHEMA_GROUP_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
SURROGATE_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_SW_APPLICATION'
CREATE TABLE ppdm_sw_application
(
SW_APPLICATION_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
APPLICATION_VERSION VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FUNCTION_DESCRIPTION VARCHAR(240),
LONG_NAME VARCHAR(255),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_UOM_SYSTEM_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_SW_APPLIC_ALIAS'
CREATE TABLE ppdm_sw_applic_alias
(
SW_APPLICATION_ID VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
USED_BY_SW_APP_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_SW_APPLIC_COMP'
CREATE TABLE ppdm_sw_applic_comp
(
SW_APPLICATION_ID VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
ANL_SOURCE VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
COMPONENT_TYPE VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
CORE_ID VARCHAR(40),
CORE_TYPE VARCHAR(40),
DESCRIPTION_OBS_NO INT,
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_FORM_OBS_NO INT,
RATE_SCHEDULE_ID VARCHAR(40),
RECOVERY_OBS_NO INT,
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
REPORTED_IND VARCHAR(1),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
RUN_NUM VARCHAR(4),
SAMPLE_DATE TIMESTAMP(0),
SAMPLE_ID VARCHAR(40),
SAMPLE_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STEP_SEQ_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
STRING_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
TEST_NUM VARCHAR(4),
TEST_SOURCE VARCHAR(40),
TEST_TYPE VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_ID VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_CORE_DESC_ID VARCHAR(40),
WELL_TEST_ID VARCHAR(40),
WELL_TEST_RECOVERY_ID VARCHAR(40),
WELL_TEST_SOURCE VARCHAR(40),
WELL_TEST_TYPE VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_SW_APP_BA'
CREATE TABLE ppdm_sw_app_ba
(
SW_APPLICATION_ID VARCHAR(40) NOT NULL,
BA_ID VARCHAR(40) NOT NULL,
BA_ID_OBS_NO INT,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
SW_APP_BA_ROLE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_SW_APP_FUNCTION'
CREATE TABLE ppdm_sw_app_function
(
SW_APPLICATION_ID VARCHAR(40) NOT NULL,
SW_APP_FUNCTION VARCHAR(40) NOT NULL,
FUNCTION_OBS_NO INT,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
SW_APP_FUNCTION_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_SW_APP_XREF'
CREATE TABLE ppdm_sw_app_xref
(
SW_APPLICATION_ID VARCHAR(40) NOT NULL,
SW_APPLICATION_ID2 VARCHAR(40) NOT NULL,
XREF_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SW_APP_XREF_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_SYSTEM'
CREATE TABLE ppdm_system
(
SYSTEM_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BUSINESS_OWNER_BA_ID VARCHAR(40),
CONNECT_STRING VARCHAR(240),
CREATOR_BA_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OPERATING_SYSTEM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_TYPE VARCHAR(40),
RDBMS_ID VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SYSTEM_LONG_NAME VARCHAR(255),
TECHNICAL_OWNER_BA_ID VARCHAR(40),
VERSION_NUM VARCHAR(30),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_SYSTEM_ALIAS'
CREATE TABLE ppdm_system_alias
(
SYSTEM_ID VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_SYSTEM_APPLICATION'
CREATE TABLE ppdm_system_application
(
SYSTEM_ID VARCHAR(40) NOT NULL,
SW_APPLICATION_ID VARCHAR(40) NOT NULL,
APPLICATION_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
APPLICATION_FUNCTION_DESC VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_SYSTEM_MAP'
CREATE TABLE ppdm_system_map
(
MAP_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAP_OWNER_BA_ID VARCHAR(40),
MAP_VERSION_NUM VARCHAR(12),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
SYSTEM_ID1 VARCHAR(40),
SYSTEM_ID2 VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_TABLE'
CREATE TABLE ppdm_table
(
SYSTEM_ID VARCHAR(40) NOT NULL,
TABLE_NAME VARCHAR(30) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTENSION_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
PRIMARY_KEY_NAME VARCHAR(255),
REMARK VARCHAR(2000),
ROW_COUNT DOUBLE PRECISION,
ROW_COUNT_DATE TIMESTAMP(0),
SOURCE VARCHAR(40),
TABLE_COMMENT VARCHAR(2000),
TABLE_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_TABLE_ALIAS'
CREATE TABLE ppdm_table_alias
(
SYSTEM_ID VARCHAR(40) NOT NULL,
TABLE_NAME VARCHAR(30) NOT NULL,
TABLE_ALIAS VARCHAR(30) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_TABLE_HISTORY'
CREATE TABLE ppdm_table_history
(
SYSTEM_ID VARCHAR(40) NOT NULL,
TABLE_NAME VARCHAR(30) NOT NULL,
HISTORY_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
AUDIT_REASON VARCHAR(40),
AUTHORIZED_BY_BA_ID VARCHAR(40),
DELETE_RECORD BYTEA,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RETENTION_PERIOD VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_UNIT_CONVERSION'
CREATE TABLE ppdm_unit_conversion
(
FROM_UOM_ID VARCHAR(40) NOT NULL,
TO_UOM_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXACT_CONVERSION_IND VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
FACTOR_DENOMINATOR DOUBLE PRECISION,
FACTOR_NUMERATOR DOUBLE PRECISION,
POST_OFFSET DOUBLE PRECISION,
PPDM_GUID VARCHAR(38),
PRE_OFFSET DOUBLE PRECISION,
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
UNIT_EXPRESSION DOUBLE PRECISION,
UNIT_QUANTITY_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_UNIT_OF_MEASURE'
CREATE TABLE ppdm_unit_of_measure
(
UOM_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BASE_UNIT_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
UOM_NAME VARCHAR(255),
UOM_QUANTITY_TYPE VARCHAR(40),
UOM_SYSTEM_ID VARCHAR(40),
UOM_USAGE_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_UOM_ALIAS'
CREATE TABLE ppdm_uom_alias
(
UOM_ID VARCHAR(40) NOT NULL,
UOM_SYNONYM VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_VOL_MEAS_CONV'
CREATE TABLE ppdm_vol_meas_conv
(
VOLUME_REGIME_ID VARCHAR(40) NOT NULL,
CONVERSION_QUANTITY VARCHAR(40) NOT NULL,
CONVERSION_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CONVERSION_FACTOR DECIMAL(10,5),
CONVERSION_FORMULA VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FROM_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRRED_IND VARCHAR(1),
PRESSURE DECIMAL(10,5),
PRESSURE_UOM VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
TEMPERATURE DECIMAL(10,5),
TEMPERATURE_UOM VARCHAR(40),
TO_UOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_VOL_MEAS_REGIME'
CREATE TABLE ppdm_vol_meas_regime
(
VOLUME_REGIME_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REGIME_NAME VARCHAR(255),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PPDM_VOL_MEAS_USE'
CREATE TABLE ppdm_vol_meas_use
(
VOLUME_REGIME_ID VARCHAR(40) NOT NULL,
REGIME_USE_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
JURISDICTION VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROD_LEASE_UNIT'
CREATE TABLE prod_lease_unit
(
LEASE_UNIT_ID VARCHAR(40) NOT NULL,
ACREAGE DECIMAL(12,2),
ACREAGE_OUOM VARCHAR(40),
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
CURRENT_OPERATOR VARCHAR(40),
CURRENT_STATUS_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_ID VARCHAR(40),
GOVERNMENT_LEASE_UNIT_ID VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LEASE_UNIT_LONG_NAME VARCHAR(255),
LEASE_UNIT_SHORT_NAME VARCHAR(30),
LEASE_UNIT_STATUS VARCHAR(40),
LEASE_UNIT_TYPE VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROD_LEASE_UNIT_ALIAS'
CREATE TABLE prod_lease_unit_alias
(
LEASE_UNIT_ID VARCHAR(40) NOT NULL,
LEASE_UNIT_SOURCE VARCHAR(40) NOT NULL,
PROD_LEASE_UNIT_ALIAS_ID VARCHAR(40) NOT NULL,
ALIAS_SOURCE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROD_LEASE_UNIT_AREA'
CREATE TABLE prod_lease_unit_area
(
LEASE_UNIT_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROD_LEASE_UNIT_VERSION'
CREATE TABLE prod_lease_unit_version
(
LEASE_UNIT_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACREAGE DECIMAL(12,2),
ACREAGE_OUOM VARCHAR(40),
ACTIVE_IND VARCHAR(1),
CURRENT_OPERATOR VARCHAR(40),
CURRENT_STATUS_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_ID VARCHAR(40),
GOVERNMENT_LEASE_UNIT_ID VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LEASE_UNIT_LONG_NAME VARCHAR(255),
LEASE_UNIT_SHORT_NAME VARCHAR(30),
LEASE_UNIT_STATUS VARCHAR(40),
LEASE_UNIT_TYPE VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROD_LEASE_UNIT_VER_AREA'
CREATE TABLE prod_lease_unit_ver_area
(
LEASE_UNIT_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROD_STRING'
CREATE TABLE prod_string
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
STRING_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
COMMINGLED_IND VARCHAR(1),
CURRENT_STATUS VARCHAR(40),
CURRENT_STATUS_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
GOVERNMENT_STRING_ID VARCHAR(40),
LEASE_UNIT_ID VARCHAR(40),
ON_INJECTION_DATE TIMESTAMP(0),
ON_PRODUCTION_DATE TIMESTAMP(0),
PLOT_SYMBOL VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROD_STRING_TVD DECIMAL(10,5),
PROD_STRING_TVD_OUOM VARCHAR(40),
PROD_STRING_TYPE VARCHAR(40),
PROFILE_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
STATUS_TYPE VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
TAX_CREDIT_CODE VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
TOTAL_DEPTH DECIMAL(15,5),
TOTAL_DEPTH_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROD_STRING_ALIAS'
CREATE TABLE prod_string_alias
(
UWI VARCHAR(40) NOT NULL,
PROD_STRING_SOURCE VARCHAR(40) NOT NULL,
STRING_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
LOCATION_TYPE VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROD_STRING_COMPONENT'
CREATE TABLE prod_string_component
(
UWI VARCHAR(40) NOT NULL,
PR_STR_SOURCE VARCHAR(40) NOT NULL,
STRING_ID VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROD_STRING_COMPONENT_TYPE VARCHAR(40),
PROJECT_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_ACTIVITY_UWI VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROD_STRING_FORMATION'
CREATE TABLE prod_string_formation
(
UWI VARCHAR(40) NOT NULL,
PROD_STRING_SOURCE VARCHAR(40) NOT NULL,
STRING_ID VARCHAR(40) NOT NULL,
PR_STR_FORM_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ALLOCATION_FACTOR DECIMAL(10,5),
ALLOCATION_TYPE VARCHAR(40),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
COMPLETION_OBS_NO INT,
CURRENT_STATUS VARCHAR(40),
CURRENT_STATUS_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STATUS_TYPE VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROD_STRING_FORM_ALIAS'
CREATE TABLE prod_string_form_alias
(
UWI VARCHAR(40) NOT NULL,
PROD_STRING_SOURCE VARCHAR(40) NOT NULL,
STRING_ID VARCHAR(40) NOT NULL,
PR_STR_FORM_OBS_NO INT,
SOURCE VARCHAR(40) NOT NULL,
PROD_STRING_FORM_ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
LOCATION_TYPE VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROD_STR_STAT_HIST'
CREATE TABLE prod_str_stat_hist
(
UWI VARCHAR(40) NOT NULL,
PROD_STRING_SOURCE VARCHAR(40) NOT NULL,
STRING_ID VARCHAR(40) NOT NULL,
STATUS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERCENT_CAPABILITY DECIMAL(15,12),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
START_TIME TIMESTAMP(0),
STATUS VARCHAR(40),
STATUS_DATE TIMESTAMP(0),
STATUS_TYPE VARCHAR(40),
TIMEZONE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROJECT'
CREATE TABLE project
(
PROJECT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
COMPLETE_DATE TIMESTAMP(0),
CONFIDENTIAL_IND VARCHAR(1),
CONFIDENTIAL_RELEASE_DATE TIMESTAMP(0),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_STATION_IND VARCHAR(1),
LAND_RIGHT_IND VARCHAR(1),
PDEN_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
PROJECT_NAME VARCHAR(255),
PROJECT_NUM VARCHAR(30),
PROJECT_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
SEIS_SET_IND VARCHAR(1),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
STRAT_COLUMN_IND VARCHAR(1),
STRAT_INTERPRETATION_IND VARCHAR(1),
WELL_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROJECT_ALIAS'
CREATE TABLE project_alias
(
PROJECT_ID VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROJECT_BA'
CREATE TABLE project_ba
(
PROJECT_ID VARCHAR(40) NOT NULL,
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROJECT_BA_ROLE'
CREATE TABLE project_ba_role
(
PROJECT_ID VARCHAR(40) NOT NULL,
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
ROLE VARCHAR(40) NOT NULL,
ROLE_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROJECT_COMPONENT'
CREATE TABLE project_component
(
PROJECT_ID VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_LICENSEE_BA_ID VARCHAR(40),
BA_LICENSE_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
COMPONENT_REASON VARCHAR(40),
COMPONENT_TYPE VARCHAR(40),
CONDITION_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
DESCRIPTION VARCHAR(2000),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_LICENSE_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_SOURCE VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FIELD_STRAT_INTERP_ID VARCHAR(40),
FIELD_STRAT_UNIT_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
HSE_INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INPUT_IND VARCHAR(1),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
LITH_SAMPLE_ID VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
OTHER_PROJECT_ID VARCHAR(40),
OUTPUT_IND VARCHAR(1),
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROD_STRING_ID VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PROJECT_PLAN_ID VARCHAR(40),
PROJECT_STEP_ID VARCHAR(40),
PROVISION_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
RESERVE_PRODUCT_TYPE VARCHAR(40),
RESERVE_REVISION_ID VARCHAR(40),
RESERVE_REVISION_OBS_NO INT,
RESERVE_SUMMARY_ID VARCHAR(40),
RESERVE_SUMMARY_OBS_NO INT,
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_LICENSE_ID VARCHAR(40),
SEIS_PROC_PLAN_ID VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_COLUMN_ID VARCHAR(40),
STRAT_COLUMN_SOURCE VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_INT_INTERP_ID VARCHAR(40),
WELL_INT_SOURCE VARCHAR(40),
WELL_INT_STRAT_UNIT_ID VARCHAR(40),
WELL_INT_UWI VARCHAR(40),
WELL_LICENSE_ID VARCHAR(40),
WELL_LICENSE_SOURCE VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROJECT_CONDITION'
CREATE TABLE project_condition
(
PROJECT_ID VARCHAR(40) NOT NULL,
CONDITION_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CONDITION_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PROJECT_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROJECT_EQUIPMENT'
CREATE TABLE project_equipment
(
PROJECT_ID VARCHAR(40) NOT NULL,
EQUIPMENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CATALOGUE_EQUIP_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
OPERATED_BY_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROJECT_EQUIP_ROLE'
CREATE TABLE project_equip_role
(
PROJECT_ID VARCHAR(40) NOT NULL,
EQUIPMENT_OBS_NO INT,
EQUIPMENT_ROLE VARCHAR(40) NOT NULL,
ROLE_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OPERATED_BY_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROJECT_PLAN'
CREATE TABLE project_plan
(
PROJECT_PLAN_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PLAN_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROJECT_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROJECT_PLAN_STEP'
CREATE TABLE project_plan_step
(
PROJECT_PLAN_ID VARCHAR(40) NOT NULL,
PLAN_STEP_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STEP_NAME VARCHAR(255),
STEP_RULE VARCHAR(240),
STEP_SEQ_NO INT,
STEP_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROJECT_PLAN_STEP_XREF'
CREATE TABLE project_plan_step_xref
(
PROJECT_PLAN_ID VARCHAR(40) NOT NULL,
PLAN_STEP_ID VARCHAR(40) NOT NULL,
PLAN_STEP_ID2 VARCHAR(40) NOT NULL,
XREF_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STEP_RULE VARCHAR(240),
STEP_XREF_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROJECT_STATUS'
CREATE TABLE project_status
(
PROJECT_ID VARCHAR(40) NOT NULL,
STATUS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DEFINED_BY_BA_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STATUS VARCHAR(40),
STATUS_TYPE VARCHAR(40),
STEP_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROJECT_STEP'
CREATE TABLE project_step
(
PROJECT_ID VARCHAR(40) NOT NULL,
STEP_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ACTUAL_END_DATE TIMESTAMP(0),
ACTUAL_START_DATE TIMESTAMP(0),
ACTUAL_TIME_ELAPSED DECIMAL(10,5),
ACTUAL_TIME_ELAPSED_OUOM VARCHAR(40),
ACTUAL_TIME_ELAPSED_UOM VARCHAR(40),
CRITICAL_DATE TIMESTAMP(0),
DESCRIPTION VARCHAR(2000),
DUE_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
ESTIMATED_TIME_ELAPSED DECIMAL(10,5),
ESTIMATED_TIME_ELAPSED_OUOM VARCHAR(40),
ESTIMATED_TIME_ELAPSED_UOM VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
PLAN_END_DATE TIMESTAMP(0),
PLAN_START_DATE TIMESTAMP(0),
PLAN_STEP_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROJECT_PLAN_ID VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STEP_NAME VARCHAR(255),
STEP_SEQ_NO INT,
STEP_TYPE VARCHAR(40),
WHERE_COMPLETED VARCHAR(240),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROJECT_STEP_BA'
CREATE TABLE project_step_ba
(
PROJECT_ID VARCHAR(40) NOT NULL,
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
ROLE VARCHAR(40) NOT NULL,
ROLE_SEQ_NO INT,
STEP_ID VARCHAR(40) NOT NULL,
STEP_BA_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTUAL_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PLAN_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROJECT_STEP_EQUIP'
CREATE TABLE project_step_equip
(
PROJECT_ID VARCHAR(40) NOT NULL,
EQUIPMENT_OBS_NO INT,
EQUIPMENT_ROLE VARCHAR(40) NOT NULL,
ROLE_SEQ_NO INT,
STEP_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OPERATED_BY_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROJECT_STEP_TIME'
CREATE TABLE project_step_time
(
PROJECT_ID VARCHAR(40) NOT NULL,
STEP_ID VARCHAR(40) NOT NULL,
TIME_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
END_TIMEZONE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
PLAN_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
START_TIME TIMESTAMP(0),
START_TIMEZONE VARCHAR(40),
TOTAL_TIME_ELAPSED DECIMAL(10,5),
TOTAL_TIME_ELAPSED_OUOM VARCHAR(40),
TOTAL_TIME_ELAPSED_UOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROJECT_STEP_XREF'
CREATE TABLE project_step_xref
(
PROJECT_ID VARCHAR(40) NOT NULL,
STEP_ID1 VARCHAR(40) NOT NULL,
STEP_ID2 VARCHAR(40) NOT NULL,
XREF_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
STEP_XREF_TYPE VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PROJ_STEP_CONDITION'
CREATE TABLE proj_step_condition
(
PROJECT_ID VARCHAR(40) NOT NULL,
PROJECT_STEP_ID VARCHAR(40) NOT NULL,
CONDITION_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PROJECT_CONDITION_ID VARCHAR(40),
PROJECT_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
REQUIRED_STEP_ID VARCHAR(40),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PR_LSE_UNIT_STR_HIST'
CREATE TABLE pr_lse_unit_str_hist
(
UWI VARCHAR(40) NOT NULL,
PROD_STRING_SOURCE VARCHAR(40) NOT NULL,
STRING_ID VARCHAR(40) NOT NULL,
LEASE_UNIT_ID VARCHAR(40) NOT NULL,
STATUS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PR_STR_FORM_COMPLETION'
CREATE TABLE pr_str_form_completion
(
UWI VARCHAR(40) NOT NULL,
PROD_STRING_SOURCE VARCHAR(40) NOT NULL,
STRING_ID VARCHAR(40) NOT NULL,
PR_STR_FORM_OBS_NO INT,
COMPLETION_SOURCE VARCHAR(40) NOT NULL,
COMPLETION_OBS_NO INT,
FORM_COMPLETION_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
COMPLETION_STATUS VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STATUS_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE PR_STR_FORM_STAT_HIST'
CREATE TABLE pr_str_form_stat_hist
(
UWI VARCHAR(40) NOT NULL,
PROD_STRING_SOURCE VARCHAR(40) NOT NULL,
STRING_ID VARCHAR(40) NOT NULL,
PR_STR_FORM_OBS_NO INT,
STATUS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERCENT_CAPABILITY DECIMAL(15,12),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
START_TIME TIMESTAMP(0),
STATUS VARCHAR(40),
STATUS_DATE TIMESTAMP(0),
STATUS_TYPE VARCHAR(40),
TIMEZONE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RATE_AREA'
CREATE TABLE rate_area
(
RATE_SCHEDULE_ID VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RATE_SCHEDULE'
CREATE TABLE rate_schedule
(
RATE_SCHEDULE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
CHANGE_NOTICE VARCHAR(20),
CONTRACT_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OWNER_BA_ADD_OBS_NO INT,
OWNER_BA_ADD_SOURCE VARCHAR(40),
OWNER_BA_ID VARCHAR(40),
PAY_METHOD VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_CURRENCY_UOM VARCHAR(40),
PROVISION_ID VARCHAR(40),
RATE_SCHEDULE_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
REVIEW_FREQUENCY VARCHAR(20),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RATE_SCHEDULE_COMPONENT'
CREATE TABLE rate_schedule_component
(
RATE_SCHEDULE_ID VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_SOURCE VARCHAR(40),
PR_STR_UWI VARCHAR(40),
RATE_SCHEDULE_COMPONENT_TYPE VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
STRING_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_ACTIVITY_UWI VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RATE_SCHEDULE_XREF'
CREATE TABLE rate_schedule_xref
(
RATE_SCHEDULE_ID_1 VARCHAR(40) NOT NULL,
RATE_SCHEDULE_ID_2 VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
RATE_SCHEDULE_XREF_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RATE_SCHED_DETAIL'
CREATE TABLE rate_sched_detail
(
RATE_SCHEDULE_ID VARCHAR(40) NOT NULL,
RATE_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NAT_CURRENCY_CONVERSION DECIMAL(10,5),
NAT_CURRENCY_UOM VARCHAR(40),
PERIOD_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
RATE_CONDITION VARCHAR(40),
RATE_COST DECIMAL(12,2),
RATE_COST_UOM VARCHAR(40),
RATE_FORMULA VARCHAR(240),
RATE_PERCENT DECIMAL(15,12),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
TAXABLE_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ACCESS_CONDITION'
CREATE TABLE ra_access_condition
(
ACCESS_CONDITION_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ACCOUNT_PROC_TYPE'
CREATE TABLE ra_account_proc_type
(
ACCOUNT_PROC_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ACTIVITY_SET_TYPE'
CREATE TABLE ra_activity_set_type
(
ACTIVITY_SET_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ACTIVITY_TYPE'
CREATE TABLE ra_activity_type
(
ACTIVITY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ADDITIVE_METHOD'
CREATE TABLE ra_additive_method
(
ADDITIVE_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ADDITIVE_TYPE'
CREATE TABLE ra_additive_type
(
ADDITIVE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ADDRESS_TYPE'
CREATE TABLE ra_address_type
(
ADDRESS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_AIRCRAFT_TYPE'
CREATE TABLE ra_aircraft_type
(
AIRCRAFT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_AIR_GAS_CODE'
CREATE TABLE ra_air_gas_code
(
AIR_GAS_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ALIAS_REASON_TYPE'
CREATE TABLE ra_alias_reason_type
(
REASON_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ALIAS_TYPE'
CREATE TABLE ra_alias_type
(
ALIAS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ALLOCATION_TYPE'
CREATE TABLE ra_allocation_type
(
ALLOCATION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ALLOWABLE_EXPENSE'
CREATE TABLE ra_allowable_expense
(
ALLOWABLE_EXPENSE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANALYSIS_PROPERTY'
CREATE TABLE ra_analysis_property
(
ANALYSIS_PROPERTY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_ACCURACY_TYPE'
CREATE TABLE ra_anl_accuracy_type
(
ACCURACY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_BA_ROLE_TYPE'
CREATE TABLE ra_anl_ba_role_type
(
BA_ROLE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_CALC_EQUIV_TYPE'
CREATE TABLE ra_anl_calc_equiv_type
(
CALCULATION_EQUIV_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_CHRO_PROPERTY'
CREATE TABLE ra_anl_chro_property
(
CHRO_PROPERTY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_COMP_TYPE'
CREATE TABLE ra_anl_comp_type
(
ANL_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_CONFIDENCE_TYPE'
CREATE TABLE ra_anl_confidence_type
(
CONFIDENCE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_DETAIL_REF_VALUE'
CREATE TABLE ra_anl_detail_ref_value
(
REFERENCE_VALUE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_DETAIL_TYPE'
CREATE TABLE ra_anl_detail_type
(
ANL_DETAIL_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_ELEMENT_VALUE_CODE'
CREATE TABLE ra_anl_element_value_code
(
VALUE_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_ELEMENT_VALUE_TYPE'
CREATE TABLE ra_anl_element_value_type
(
ANL_VALUE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_EQUIP_ROLE'
CREATE TABLE ra_anl_equip_role
(
ANL_EQUIP_ROLE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_FORMULA_TYPE'
CREATE TABLE ra_anl_formula_type
(
FORMULA_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_GAS_CHRO_VALUE'
CREATE TABLE ra_anl_gas_chro_value
(
ANL_VALUE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_GAS_PROPERTY'
CREATE TABLE ra_anl_gas_property
(
ANALYSIS_PROPERTY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_GAS_PROPERTY_CODE'
CREATE TABLE ra_anl_gas_property_code
(
ANALYSIS_PROPERTY VARCHAR(40) NOT NULL,
PROPERTY_VALUE_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_METHOD_EQUIV_TYPE'
CREATE TABLE ra_anl_method_equiv_type
(
METHOD_EQUIV_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_METHOD_SET_TYPE'
CREATE TABLE ra_anl_method_set_type
(
METHOD_SET_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_MISSING_REP'
CREATE TABLE ra_anl_missing_rep
(
MISSING_REPRESENTATION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_NULL_REP'
CREATE TABLE ra_anl_null_rep
(
NULL_REPRESENTATION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_OIL_PROPERTY_CODE'
CREATE TABLE ra_anl_oil_property_code
(
ANALYSIS_PROPERTY VARCHAR(40) NOT NULL,
PROPERTY_VALUE_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_PARAMETER_TYPE'
CREATE TABLE ra_anl_parameter_type
(
PARAMETER_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_PROBLEM_RESOLUTION'
CREATE TABLE ra_anl_problem_resolution
(
RESOLUTION_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_PROBLEM_RESULT'
CREATE TABLE ra_anl_problem_result
(
PROBLEM_RESULT VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_PROBLEM_SEVERITY'
CREATE TABLE ra_anl_problem_severity
(
PROBLEM_SEVERITY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_PROBLEM_TYPE'
CREATE TABLE ra_anl_problem_type
(
PROBLEM_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_REF_VALUE'
CREATE TABLE ra_anl_ref_value
(
REFERENCE_VALUE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_REMARK_TYPE'
CREATE TABLE ra_anl_remark_type
(
ANL_REMARK_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_REPEATABILITY'
CREATE TABLE ra_anl_repeatability
(
REPEATABILITY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_STEP_XREF'
CREATE TABLE ra_anl_step_xref
(
STEP_XREF_REASON VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_TOLERANCE_TYPE'
CREATE TABLE ra_anl_tolerance_type
(
TOLERANCE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_VALID_MEASUREMENT'
CREATE TABLE ra_anl_valid_measurement
(
MEASUREMENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_VALID_MEAS_VALUE'
CREATE TABLE ra_anl_valid_meas_value
(
MEASUREMENT_TYPE VARCHAR(40) NOT NULL,
VALID_VALUE_TEXT VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_VALID_PROBLEM'
CREATE TABLE ra_anl_valid_problem
(
PROBLEM_RESULT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ANL_WATER_PROPERTY'
CREATE TABLE ra_anl_water_property
(
WATER_PROPERTY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_AOF_ANALYSIS_TYPE'
CREATE TABLE ra_aof_analysis_type
(
AOF_ANALYSIS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_AOF_CALC_METHOD'
CREATE TABLE ra_aof_calc_method
(
AOF_CALCULATE_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_API_LOG_SYSTEM'
CREATE TABLE ra_api_log_system
(
API_CODE_SYSTEM VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_APPLICATION_COMP_TYPE'
CREATE TABLE ra_application_comp_type
(
APPLICATION_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_APPLIC_ATTACHMENT'
CREATE TABLE ra_applic_attachment
(
ATTACHMENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_APPLIC_BA_ROLE'
CREATE TABLE ra_applic_ba_role
(
APPLICATION_BA_ROLE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_APPLIC_DECISION'
CREATE TABLE ra_applic_decision
(
APPLICATION_DECISION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_APPLIC_DESC'
CREATE TABLE ra_applic_desc
(
APPLICATION_TYPE VARCHAR(40) NOT NULL,
APPLIC_DESC_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_APPLIC_REMARK_TYPE'
CREATE TABLE ra_applic_remark_type
(
REMARK_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_APPLIC_STATUS'
CREATE TABLE ra_applic_status
(
APPLICATION_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_APPLIC_TYPE'
CREATE TABLE ra_applic_type
(
APPLICATION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_AREA_COMPONENT_TYPE'
CREATE TABLE ra_area_component_type
(
AREA_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_AREA_CONTAIN_TYPE'
CREATE TABLE ra_area_contain_type
(
CONTAIN_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_AREA_DESC_CODE'
CREATE TABLE ra_area_desc_code
(
AREA_DESC_TYPE VARCHAR(40) NOT NULL,
AREA_DESC_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_AREA_DESC_TYPE'
CREATE TABLE ra_area_desc_type
(
AREA_DESC_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_AREA_TYPE'
CREATE TABLE ra_area_type
(
AREA_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_AREA_XREF_TYPE'
CREATE TABLE ra_area_xref_type
(
AREA_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_AUTHORITY_TYPE'
CREATE TABLE ra_authority_type
(
AUTHORITY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_AUTHOR_TYPE'
CREATE TABLE ra_author_type
(
AUTHOR_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BA_AUTHORITY_COMP_TYPE'
CREATE TABLE ra_ba_authority_comp_type
(
BA_AUTHORITY_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BA_CATEGORY'
CREATE TABLE ra_ba_category
(
BA_CATEGORY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BA_COMPONENT_TYPE'
CREATE TABLE ra_ba_component_type
(
BUSINESS_ASSOCIATE_COMP_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BA_CONTACT_LOC_TYPE'
CREATE TABLE ra_ba_contact_loc_type
(
CONTACT_LOC_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BA_CREW_OVERHEAD_TYPE'
CREATE TABLE ra_ba_crew_overhead_type
(
OVERHEAD_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BA_CREW_TYPE'
CREATE TABLE ra_ba_crew_type
(
CREW_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BA_DESC_CODE'
CREATE TABLE ra_ba_desc_code
(
BA_DESC_TYPE VARCHAR(40) NOT NULL,
BA_DESC_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BA_DESC_REF_VALUE'
CREATE TABLE ra_ba_desc_ref_value
(
REFERENCE_VALUE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BA_DESC_TYPE'
CREATE TABLE ra_ba_desc_type
(
BA_DESC_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BA_LIC_DUE_CONDITION'
CREATE TABLE ra_ba_lic_due_condition
(
DUE_CONDITION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BA_LIC_VIOLATION_TYPE'
CREATE TABLE ra_ba_lic_violation_type
(
VIOLATION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BA_LIC_VIOL_RESOL'
CREATE TABLE ra_ba_lic_viol_resol
(
RESOLVE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BA_ORGANIZATION_COMP_TYPE'
CREATE TABLE ra_ba_organization_comp_type
(
BA_ORGANIZATION_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BA_ORGANIZATION_TYPE'
CREATE TABLE ra_ba_organization_type
(
ORGANIZATION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BA_PERMIT_TYPE'
CREATE TABLE ra_ba_permit_type
(
PERMIT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BA_PREF_TYPE'
CREATE TABLE ra_ba_pref_type
(
PREFERENCE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BA_SERVICE_TYPE'
CREATE TABLE ra_ba_service_type
(
BA_SERVICE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BA_STATUS'
CREATE TABLE ra_ba_status
(
BA_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BA_TYPE'
CREATE TABLE ra_ba_type
(
BA_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BA_XREF_TYPE'
CREATE TABLE ra_ba_xref_type
(
BA_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BHP_METHOD'
CREATE TABLE ra_bhp_method
(
BHP_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BH_PRESS_TEST_TYPE'
CREATE TABLE ra_bh_press_test_type
(
BH_PRESSURE_TEST_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BIT_BEARING_CONDITION'
CREATE TABLE ra_bit_bearing_condition
(
BEARING_CONDITION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BIT_CUT_STRUCT_DULL'
CREATE TABLE ra_bit_cut_struct_dull
(
CUTTING_STRUCTURE_MDC VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BIT_CUT_STRUCT_INNER'
CREATE TABLE ra_bit_cut_struct_inner
(
CUTTING_STRUCTURE_T1 VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BIT_CUT_STRUCT_LOC'
CREATE TABLE ra_bit_cut_struct_loc
(
CUTTING_STRUCTURE_LOC VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BIT_CUT_STRUCT_OUTER'
CREATE TABLE ra_bit_cut_struct_outer
(
CUTTING_STRUCTURE_TO VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BIT_REASON_PULLED'
CREATE TABLE ra_bit_reason_pulled
(
REASON_PULLED VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BLOWOUT_FLUID'
CREATE TABLE ra_blowout_fluid
(
BLOWOUT_FLUID VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_BUILDUP_RADIUS_TYPE'
CREATE TABLE ra_buildup_radius_type
(
BUILDUP_RADIUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CAT_ADDITIVE_GROUP'
CREATE TABLE ra_cat_additive_group
(
ADDITIVE_GROUP VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CAT_ADDITIVE_QUANTITY'
CREATE TABLE ra_cat_additive_quantity
(
QUANTITY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CAT_ADDITIVE_SPEC'
CREATE TABLE ra_cat_additive_spec
(
ADDITIVE_SPEC_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CAT_ADDITIVE_XREF'
CREATE TABLE ra_cat_additive_xref
(
ADDITIVE_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CAT_EQUIP_GROUP'
CREATE TABLE ra_cat_equip_group
(
CAT_EQUIP_GROUP VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CAT_EQUIP_SPEC'
CREATE TABLE ra_cat_equip_spec
(
SPEC_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CAT_EQUIP_SPEC_CODE'
CREATE TABLE ra_cat_equip_spec_code
(
SPEC_TYPE VARCHAR(40) NOT NULL,
SPEC_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CAT_EQUIP_TYPE'
CREATE TABLE ra_cat_equip_type
(
CAT_EQUIP_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CEMENT_TYPE'
CREATE TABLE ra_cement_type
(
CEMENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CHECKSHOT_SRVY_TYPE'
CREATE TABLE ra_checkshot_srvy_type
(
CHECKSHOT_SURVEY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CLASS_DESC_PROPERTY'
CREATE TABLE ra_class_desc_property
(
DESC_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CLASS_LEV_COMP_TYPE'
CREATE TABLE ra_class_lev_comp_type
(
CLASS_LEVEL_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CLASS_LEV_XREF_TYPE'
CREATE TABLE ra_class_lev_xref_type
(
LEVEL_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CLASS_SYSTEM_DIMENSION'
CREATE TABLE ra_class_system_dimension
(
CLASS_DIMENSION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CLASS_SYST_XREF_TYPE'
CREATE TABLE ra_class_syst_xref_type
(
SYSTEM_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CLIMATE'
CREATE TABLE ra_climate
(
CLIMATE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_COAL_RANK_SCHEME_TYPE'
CREATE TABLE ra_coal_rank_scheme_type
(
COAL_RANK_SCHEME_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CODE_VERSION_XREF_TYPE'
CREATE TABLE ra_code_version_xref_type
(
CODE_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_COLLAR_TYPE'
CREATE TABLE ra_collar_type
(
COLLAR_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_COLOR'
CREATE TABLE ra_color
(
COLOR VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_COLOR_EQUIV'
CREATE TABLE ra_color_equiv
(
COLOR_1 VARCHAR(40) NOT NULL,
COLOR_2 VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_COLOR_FORMAT'
CREATE TABLE ra_color_format
(
COLOR_FORMAT VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_COLOR_PALETTE'
CREATE TABLE ra_color_palette
(
COLOR_PALETTE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_COMPLETION_METHOD'
CREATE TABLE ra_completion_method
(
COMPLETION_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_COMPLETION_STATUS'
CREATE TABLE ra_completion_status
(
STATUS_TYPE VARCHAR(40) NOT NULL,
COMPLETION_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_COMPLETION_STATUS_TYPE'
CREATE TABLE ra_completion_status_type
(
STATUS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_COMPLETION_TYPE'
CREATE TABLE ra_completion_type
(
COMPLETION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONDITION_TYPE'
CREATE TABLE ra_condition_type
(
CONDITION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONFIDENCE_TYPE'
CREATE TABLE ra_confidence_type
(
CONFIDENCE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONFIDENTIAL_REASON'
CREATE TABLE ra_confidential_reason
(
CONFIDENTIAL_REASON VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONFIDENTIAL_TYPE'
CREATE TABLE ra_confidential_type
(
CONFIDENTIAL_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONFORMITY_RELATION'
CREATE TABLE ra_conformity_relation
(
CONFORMITY_RELATIONSHIP VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONSENT_BA_ROLE'
CREATE TABLE ra_consent_ba_role
(
CONSENT_BA_ROLE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONSENT_COMP_TYPE'
CREATE TABLE ra_consent_comp_type
(
CONSENT_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONSENT_CONDITION'
CREATE TABLE ra_consent_condition
(
CONSENT_TYPE VARCHAR(40) NOT NULL,
CONSENT_CONDITION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONSENT_REMARK'
CREATE TABLE ra_consent_remark
(
REMARK_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONSENT_STATUS'
CREATE TABLE ra_consent_status
(
CONSENT_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONSENT_TYPE'
CREATE TABLE ra_consent_type
(
CONSENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONSULT_ATTEND_TYPE'
CREATE TABLE ra_consult_attend_type
(
ATTEND_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONSULT_COMP_TYPE'
CREATE TABLE ra_consult_comp_type
(
COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONSULT_DISC_TYPE'
CREATE TABLE ra_consult_disc_type
(
DISCUSSION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONSULT_ISSUE_TYPE'
CREATE TABLE ra_consult_issue_type
(
CONSULT_ISSUE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONSULT_REASON'
CREATE TABLE ra_consult_reason
(
CONSULT_REASON VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONSULT_RESOLUTION'
CREATE TABLE ra_consult_resolution
(
CONSULT_RESOLUTION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONSULT_ROLE'
CREATE TABLE ra_consult_role
(
CONSULT_ROLE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONSULT_TYPE'
CREATE TABLE ra_consult_type
(
CONSULT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONSULT_XREF_TYPE'
CREATE TABLE ra_consult_xref_type
(
CONSULT_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONTACT_ROLE'
CREATE TABLE ra_contact_role
(
CONTACT_ROLE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONTAMINANT_TYPE'
CREATE TABLE ra_contaminant_type
(
CONTAMINANT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONTEST_COMP_TYPE'
CREATE TABLE ra_contest_comp_type
(
CONTEST_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONTEST_PARTY_ROLE'
CREATE TABLE ra_contest_party_role
(
PARTY_ROLE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONTEST_RESOLUTION'
CREATE TABLE ra_contest_resolution
(
RESOLUTION_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONTEST_TYPE'
CREATE TABLE ra_contest_type
(
CONTEST_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONTRACT_COMP_TYPE'
CREATE TABLE ra_contract_comp_type
(
CONTRACT_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONT_BA_ROLE'
CREATE TABLE ra_cont_ba_role
(
BA_ROLE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONT_COMP_REASON'
CREATE TABLE ra_cont_comp_reason
(
REASON_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONT_EXTEND_COND'
CREATE TABLE ra_cont_extend_cond
(
EXTENSION_CONDITION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONT_EXTEND_TYPE'
CREATE TABLE ra_cont_extend_type
(
EXTENSION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONT_INSUR_ELECT'
CREATE TABLE ra_cont_insur_elect
(
INSURANCE_ELECTION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONT_OPERATING_PROC'
CREATE TABLE ra_cont_operating_proc
(
OPERATING_PROCEDURE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONT_PROVISION_TYPE'
CREATE TABLE ra_cont_provision_type
(
CONT_PROVISION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONT_PROV_XREF_TYPE'
CREATE TABLE ra_cont_prov_xref_type
(
PROVISION_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONT_STATUS'
CREATE TABLE ra_cont_status
(
CONTRACT_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONT_STATUS_TYPE'
CREATE TABLE ra_cont_status_type
(
CONTRACT_STATUS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONT_TYPE'
CREATE TABLE ra_cont_type
(
CONTRACT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONT_VOTE_RESPONSE'
CREATE TABLE ra_cont_vote_response
(
VOTE_RESPONSE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONT_VOTE_TYPE'
CREATE TABLE ra_cont_vote_type
(
VOTE_PROCEDURE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CONT_XREF_TYPE'
CREATE TABLE ra_cont_xref_type
(
CONTRACT_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_COORD_CAPTURE'
CREATE TABLE ra_coord_capture
(
CAPTURE_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_COORD_COMPUTE'
CREATE TABLE ra_coord_compute
(
COMPUTE_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_COORD_QUALITY'
CREATE TABLE ra_coord_quality
(
COORDINATE_QUALITY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_COORD_SYSTEM_TYPE'
CREATE TABLE ra_coord_system_type
(
COORDINATE_SYSTEM_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CORE_HANDLING'
CREATE TABLE ra_core_handling
(
CORE_HANDLING VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CORE_RECOVERY_TYPE'
CREATE TABLE ra_core_recovery_type
(
CORE_RECOVERY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CORE_SAMPLE_TYPE'
CREATE TABLE ra_core_sample_type
(
CORE_SAMPLE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CORE_SHIFT_METHOD'
CREATE TABLE ra_core_shift_method
(
CORE_SHIFT_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CORE_SOLVENT'
CREATE TABLE ra_core_solvent
(
CORE_SOLVENT VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CORE_TYPE'
CREATE TABLE ra_core_type
(
CORE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CORRECTION_METHOD'
CREATE TABLE ra_correction_method
(
CORRECTION_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_COUPLING_TYPE'
CREATE TABLE ra_coupling_type
(
COUPLING_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CREATOR_TYPE'
CREATE TABLE ra_creator_type
(
CREATOR_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CS_TRANSFORM_PARM'
CREATE TABLE ra_cs_transform_parm
(
TRANSFORM_PARM VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CS_TRANSFORM_TYPE'
CREATE TABLE ra_cs_transform_type
(
TRANSFORM_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CURVE_SCALE'
CREATE TABLE ra_curve_scale
(
CURVE_SCALE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CURVE_TYPE'
CREATE TABLE ra_curve_type
(
CURVE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CURVE_XREF_TYPE'
CREATE TABLE ra_curve_xref_type
(
XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CUSHION_TYPE'
CREATE TABLE ra_cushion_type
(
CUSHION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_CUTTING_FLUID'
CREATE TABLE ra_cutting_fluid
(
CUTTING_FLUID VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DATA_CIRC_PROCESS'
CREATE TABLE ra_data_circ_process
(
DATA_CIRC_PROCESS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DATA_CIRC_STATUS'
CREATE TABLE ra_data_circ_status
(
DATA_CIRC_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DATA_STORE_TYPE'
CREATE TABLE ra_data_store_type
(
DATA_STORE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DATE_FORMAT_TYPE'
CREATE TABLE ra_date_format_type
(
DATA_STORE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DATUM_ORIGIN'
CREATE TABLE ra_datum_origin
(
DATUM_ORIGIN VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DECLINE_COND_CODE'
CREATE TABLE ra_decline_cond_code
(
CONDITION_TYPE VARCHAR(40) NOT NULL,
CONDITION_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DECLINE_COND_TYPE'
CREATE TABLE ra_decline_cond_type
(
CONDITION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DECLINE_CURVE_TYPE'
CREATE TABLE ra_decline_curve_type
(
DECLINE_CURVE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DECLINE_TYPE'
CREATE TABLE ra_decline_type
(
DECLINE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DECRYPT_TYPE'
CREATE TABLE ra_decrypt_type
(
DECRYPTION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DEDUCT_TYPE'
CREATE TABLE ra_deduct_type
(
DEDUCT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DIGITAL_FORMAT'
CREATE TABLE ra_digital_format
(
DIGITAL_FORMAT VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DIGITAL_OUTPUT'
CREATE TABLE ra_digital_output
(
DIGITAL_OUTPUT VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DIRECTION'
CREATE TABLE ra_direction
(
DIRECTION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DIR_SRVY_ACC_REASON'
CREATE TABLE ra_dir_srvy_acc_reason
(
ACCURACY_PROBLEM_REASON VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DIR_SRVY_CLASS'
CREATE TABLE ra_dir_srvy_class
(
DIR_SURVEY_CLASS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DIR_SRVY_COMPUTE'
CREATE TABLE ra_dir_srvy_compute
(
COMPUTE_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DIR_SRVY_CORR_ANGLE_TYPE'
CREATE TABLE ra_dir_srvy_corr_angle_type
(
CORR_ANGLE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DIR_SRVY_POINT_TYPE'
CREATE TABLE ra_dir_srvy_point_type
(
POINT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DIR_SRVY_PROCESS_METH'
CREATE TABLE ra_dir_srvy_process_meth
(
PROCESS_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DIR_SRVY_RAD_UNCERT'
CREATE TABLE ra_dir_srvy_rad_uncert
(
RAD_UNCERT_DIST_REASON VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DIR_SRVY_RECORD'
CREATE TABLE ra_dir_srvy_record
(
RECORD_MODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DIR_SRVY_REPORT_TYPE'
CREATE TABLE ra_dir_srvy_report_type
(
REPORT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DIR_SRVY_TYPE'
CREATE TABLE ra_dir_srvy_type
(
SURVEY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DIST_REF_PT'
CREATE TABLE ra_dist_ref_pt
(
DISTANCE_REF_POINT VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DOCUMENT_TYPE'
CREATE TABLE ra_document_type
(
DOCUMENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DOC_STATUS'
CREATE TABLE ra_doc_status
(
DOCUMENT_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DRILLING_MEDIA'
CREATE TABLE ra_drilling_media
(
DRILLING_MEDIA VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DRILL_ASSEMBLY_COMP'
CREATE TABLE ra_drill_assembly_comp
(
COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DRILL_BIT_CONDITION'
CREATE TABLE ra_drill_bit_condition
(
DRILL_BIT_CONDITION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DRILL_BIT_DETAIL_CODE'
CREATE TABLE ra_drill_bit_detail_code
(
BIT_DETAIL_TYPE VARCHAR(40) NOT NULL,
BIT_DETAIL_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DRILL_BIT_DETAIL_TYPE'
CREATE TABLE ra_drill_bit_detail_type
(
BIT_DETAIL_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DRILL_BIT_JET_TYPE'
CREATE TABLE ra_drill_bit_jet_type
(
JET_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DRILL_BIT_TYPE'
CREATE TABLE ra_drill_bit_type
(
DRILL_BIT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DRILL_HOLE_POSITION'
CREATE TABLE ra_drill_hole_position
(
DRILL_HOLE_POSITION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DRILL_REPORT_TIME'
CREATE TABLE ra_drill_report_time
(
REPORT_TIME_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DRILL_STAT_CODE'
CREATE TABLE ra_drill_stat_code
(
STATISTIC_TYPE VARCHAR(40) NOT NULL,
STATISTIC_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DRILL_STAT_TYPE'
CREATE TABLE ra_drill_stat_type
(
STATISTIC_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_DRILL_TOOL_TYPE'
CREATE TABLE ra_drill_tool_type
(
DRILL_TOOL_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ECONOMIC_SCENARIO'
CREATE TABLE ra_economic_scenario
(
ECONOMIC_SCENARIO VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ECONOMIC_SCHEDULE'
CREATE TABLE ra_economic_schedule
(
ECONOMIC_SCHEDULE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ECOZONE_HIER_LEVEL'
CREATE TABLE ra_ecozone_hier_level
(
HIERARCHY_LEVEL VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ECOZONE_TYPE'
CREATE TABLE ra_ecozone_type
(
ECOZONE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ECOZONE_XREF'
CREATE TABLE ra_ecozone_xref
(
ECOZONE_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_EMPLOYEE_POSITION'
CREATE TABLE ra_employee_position
(
EMPLOYEE_POSITION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_EMPLOYEE_STATUS'
CREATE TABLE ra_employee_status
(
EMPLOYEE_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ENCODING_TYPE'
CREATE TABLE ra_encoding_type
(
ENCODING_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ENHANCED_REC_TYPE'
CREATE TABLE ra_enhanced_rec_type
(
ENHANCED_RECOVERY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ENT_ACCESS_TYPE'
CREATE TABLE ra_ent_access_type
(
ACCESS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ENT_COMPONENT_TYPE'
CREATE TABLE ra_ent_component_type
(
ENT_COMP_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ENT_EXPIRY_ACTION'
CREATE TABLE ra_ent_expiry_action
(
EXPIRY_ACTION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ENT_SEC_GROUP_TYPE'
CREATE TABLE ra_ent_sec_group_type
(
GROUP_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ENT_SEC_GROUP_XREF'
CREATE TABLE ra_ent_sec_group_xref
(
XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ENT_TYPE'
CREATE TABLE ra_ent_type
(
ENTITLEMENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ENVIRONMENT'
CREATE TABLE ra_environment
(
ENVIRONMENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_EQUIP_BA_ROLE_TYPE'
CREATE TABLE ra_equip_ba_role_type
(
ROLE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_EQUIP_COMPONENT_TYPE'
CREATE TABLE ra_equip_component_type
(
EQUIPMENT_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_EQUIP_INSTALL_LOC'
CREATE TABLE ra_equip_install_loc
(
INSTALL_LOC_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_EQUIP_MAINT_LOC'
CREATE TABLE ra_equip_maint_loc
(
MAINT_LOCATION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_EQUIP_MAINT_REASON'
CREATE TABLE ra_equip_maint_reason
(
MAINT_REASON VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_EQUIP_MAINT_STATUS'
CREATE TABLE ra_equip_maint_status
(
MAINTAIN_STATUS_TYPE VARCHAR(40) NOT NULL,
MAINTAIN_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_EQUIP_MAINT_STAT_TYPE'
CREATE TABLE ra_equip_maint_stat_type
(
MAINTAIN_STATUS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_EQUIP_REMOVE_REASON'
CREATE TABLE ra_equip_remove_reason
(
REMOVE_REASON VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_EQUIP_SPEC'
CREATE TABLE ra_equip_spec
(
SPEC_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_EQUIP_SPEC_REF_TYPE'
CREATE TABLE ra_equip_spec_ref_type
(
REFERENCE_VALUE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_EQUIP_SPEC_SET_TYPE'
CREATE TABLE ra_equip_spec_set_type
(
SPEC_SET_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_EQUIP_STATUS'
CREATE TABLE ra_equip_status
(
STATUS_TYPE VARCHAR(40) NOT NULL,
EQUIP_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_EQUIP_STATUS_TYPE'
CREATE TABLE ra_equip_status_type
(
STATUS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_EQUIP_SYSTEM_CONDITION'
CREATE TABLE ra_equip_system_condition
(
SYSTEM_CONDITION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_EQUIP_USE_STAT_TYPE'
CREATE TABLE ra_equip_use_stat_type
(
EQUIP_USE_STAT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_EQUIP_XREF_TYPE'
CREATE TABLE ra_equip_xref_type
(
EQUIP_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_EW_DIRECTION'
CREATE TABLE ra_ew_direction
(
EW_DIRECTION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_EW_START_LINE'
CREATE TABLE ra_ew_start_line
(
EW_START_LINE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FACILITY_CLASS'
CREATE TABLE ra_facility_class
(
FACILITY_CLASS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FACILITY_COMP_TYPE'
CREATE TABLE ra_facility_comp_type
(
FACILITY_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FACILITY_SPEC_CODE'
CREATE TABLE ra_facility_spec_code
(
SPEC_TYPE VARCHAR(40) NOT NULL,
SPEC_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FACILITY_SPEC_TYPE'
CREATE TABLE ra_facility_spec_type
(
SPEC_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FACILITY_STATUS'
CREATE TABLE ra_facility_status
(
STATUS_TYPE VARCHAR(40) NOT NULL,
STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FACILITY_TYPE'
CREATE TABLE ra_facility_type
(
FACILITY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FACILITY_XREF_TYPE'
CREATE TABLE ra_facility_xref_type
(
FACILITY_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FAC_FUNCTION'
CREATE TABLE ra_fac_function
(
FACILITY_FUNCTION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FAC_LIC_COND'
CREATE TABLE ra_fac_lic_cond
(
CONDITION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FAC_LIC_COND_CODE'
CREATE TABLE ra_fac_lic_cond_code
(
CONDITION_TYPE VARCHAR(40) NOT NULL,
CONDITION_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FAC_LIC_DUE_CONDITION'
CREATE TABLE ra_fac_lic_due_condition
(
DUE_CONDITION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FAC_LIC_EXTEND_TYPE'
CREATE TABLE ra_fac_lic_extend_type
(
LICENSE_EXTENSION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FAC_LIC_VIOLATION_TYPE'
CREATE TABLE ra_fac_lic_violation_type
(
VIOLATION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FAC_LIC_VIOL_RESOL'
CREATE TABLE ra_fac_lic_viol_resol
(
RESOLVE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FAC_MAINTAIN_TYPE'
CREATE TABLE ra_fac_maintain_type
(
FACILITY_TYPE VARCHAR(40) NOT NULL,
MAINTAIN_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FAC_MAINT_STATUS'
CREATE TABLE ra_fac_maint_status
(
MAINTAIN_STATUS_TYPE VARCHAR(40) NOT NULL,
MAINTAIN_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FAC_MAINT_STATUS_TYPE'
CREATE TABLE ra_fac_maint_status_type
(
MAINTAIN_STATUS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FAC_PIPE_COVER'
CREATE TABLE ra_fac_pipe_cover
(
COVER_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FAC_PIPE_MATERIAL'
CREATE TABLE ra_fac_pipe_material
(
PIPELINE_MATERIAL VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FAC_PIPE_TYPE'
CREATE TABLE ra_fac_pipe_type
(
PIPELINE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FAC_SPEC_REFERENCE'
CREATE TABLE ra_fac_spec_reference
(
REFERENCE_VALUE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FAC_STATUS_TYPE'
CREATE TABLE ra_fac_status_type
(
STATUS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FAULT_TYPE'
CREATE TABLE ra_fault_type
(
FAULT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FIELD_COMPONENT_TYPE'
CREATE TABLE ra_field_component_type
(
FIELD_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FIELD_STATION_TYPE'
CREATE TABLE ra_field_station_type
(
FIELD_STATION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FIELD_TYPE'
CREATE TABLE ra_field_type
(
FIELD_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FIN_COMPONENT_TYPE'
CREATE TABLE ra_fin_component_type
(
FIN_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FIN_COST_TYPE'
CREATE TABLE ra_fin_cost_type
(
COST_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FIN_STATUS'
CREATE TABLE ra_fin_status
(
FIN_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FIN_TYPE'
CREATE TABLE ra_fin_type
(
FIN_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FIN_XREF_TYPE'
CREATE TABLE ra_fin_xref_type
(
FIN_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FLUID_TYPE'
CREATE TABLE ra_fluid_type
(
FLUID_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FONT'
CREATE TABLE ra_font
(
FONT VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FONT_EFFECT'
CREATE TABLE ra_font_effect
(
FONT_EFFECT VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FOOTAGE_ORIGIN'
CREATE TABLE ra_footage_origin
(
FOOTAGE_ORIGIN VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FOS_ALIAS_TYPE'
CREATE TABLE ra_fos_alias_type
(
FOS_ALIAS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FOS_ASSEMBLAGE_TYPE'
CREATE TABLE ra_fos_assemblage_type
(
ASSEMBLAGE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FOS_DESC_CODE'
CREATE TABLE ra_fos_desc_code
(
DESCRIPTION_TYPE VARCHAR(40) NOT NULL,
DESCRIPTION_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FOS_DESC_TYPE'
CREATE TABLE ra_fos_desc_type
(
DESCRIPTION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FOS_LIFE_HABIT'
CREATE TABLE ra_fos_life_habit
(
LIFE_HABIT VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FOS_NAME_SET_TYPE'
CREATE TABLE ra_fos_name_set_type
(
FOSSIL_NAME_SET_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FOS_OBS_TYPE'
CREATE TABLE ra_fos_obs_type
(
FOSSIL_OBS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FOS_TAXON_GROUP'
CREATE TABLE ra_fos_taxon_group
(
TAXON_GROUP VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FOS_TAXON_LEVEL'
CREATE TABLE ra_fos_taxon_level
(
TAXON_LEVEL VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_FOS_XREF'
CREATE TABLE ra_fos_xref
(
FOSSIL_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_GAS_ANL_VALUE_CODE'
CREATE TABLE ra_gas_anl_value_code
(
GAS_ANL_VALUE_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_GAS_ANL_VALUE_TYPE'
CREATE TABLE ra_gas_anl_value_type
(
GAS_ANL_VALUE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_GRANTED_RIGHT_TYPE'
CREATE TABLE ra_granted_right_type
(
GRANTED_RIGHT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_HEAT_CONTENT_METHOD'
CREATE TABLE ra_heat_content_method
(
HEAT_CONTENT_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_HOLE_CONDITION'
CREATE TABLE ra_hole_condition
(
HOLE_CONDITION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_HORIZ_DRILL_REASON'
CREATE TABLE ra_horiz_drill_reason
(
HORIZ_DRILL_REASON VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_HORIZ_DRILL_TYPE'
CREATE TABLE ra_horiz_drill_type
(
HORIZ_DRILL_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_HSE_COMP_ROLE'
CREATE TABLE ra_hse_comp_role
(
COMPONENT_ROLE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_HSE_INCIDENT_COMP_TYPE'
CREATE TABLE ra_hse_incident_comp_type
(
COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_HSE_INCIDENT_DETAIL'
CREATE TABLE ra_hse_incident_detail
(
DETAIL_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_HSE_RESPONSE_TYPE'
CREATE TABLE ra_hse_response_type
(
ACTION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_IMAGE_CALIBRATE_METHOD'
CREATE TABLE ra_image_calibrate_method
(
CALIBRATE_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_IMAGE_SECTION_TYPE'
CREATE TABLE ra_image_section_type
(
SECTION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INCIDENT_BA_ROLE'
CREATE TABLE ra_incident_ba_role
(
BA_ROLE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INCIDENT_CAUSE_CODE'
CREATE TABLE ra_incident_cause_code
(
CAUSE_TYPE VARCHAR(40) NOT NULL,
CAUSE_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INCIDENT_CAUSE_TYPE'
CREATE TABLE ra_incident_cause_type
(
CAUSE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INCIDENT_INTERACT_TYPE'
CREATE TABLE ra_incident_interact_type
(
INTERACTION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INCIDENT_RESP_RESULT'
CREATE TABLE ra_incident_resp_result
(
RESPONSE_RESULT VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INCIDENT_SUBSTANCE'
CREATE TABLE ra_incident_substance
(
INCIDENT_SUBSTANCE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INCIDENT_SUBST_ROLE'
CREATE TABLE ra_incident_subst_role
(
SUBSTANCE_ROLE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INFORMATION_PROCESS'
CREATE TABLE ra_information_process
(
INFORMATION_PROCESS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INPUT_TYPE'
CREATE TABLE ra_input_type
(
INPUT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INSP_COMP_TYPE'
CREATE TABLE ra_insp_comp_type
(
COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INSP_STATUS'
CREATE TABLE ra_insp_status
(
INSPECTION_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INSTRUMENT_COMP_TYPE'
CREATE TABLE ra_instrument_comp_type
(
INSTRUMENT_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INSTRUMENT_TYPE'
CREATE TABLE ra_instrument_type
(
LAND_INSTRUMENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INST_DETAIL_CODE'
CREATE TABLE ra_inst_detail_code
(
INSTRUMENT_DETAIL_TYPE VARCHAR(40) NOT NULL,
INSTRUMENT_DETAIL_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INST_DETAIL_REF_VALUE'
CREATE TABLE ra_inst_detail_ref_value
(
REFERENCE_VALUE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INST_DETAIL_TYPE'
CREATE TABLE ra_inst_detail_type
(
INSTRUMENT_DETAIL_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INTERP_ORIGIN_TYPE'
CREATE TABLE ra_interp_origin_type
(
ORIGIN_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INTERP_TYPE'
CREATE TABLE ra_interp_type
(
INTERP_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INT_SET_COMPONENT'
CREATE TABLE ra_int_set_component
(
COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INT_SET_ROLE'
CREATE TABLE ra_int_set_role
(
INTEREST_SET_ROLE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INT_SET_STATUS'
CREATE TABLE ra_int_set_status
(
STATUS_TYPE VARCHAR(40) NOT NULL,
STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INT_SET_STATUS_TYPE'
CREATE TABLE ra_int_set_status_type
(
STATUS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INT_SET_TRIGGER'
CREATE TABLE ra_int_set_trigger
(
TRIGGER_EVENT VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INT_SET_TYPE'
CREATE TABLE ra_int_set_type
(
INTEREST_SET_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INT_SET_XREF_TYPE'
CREATE TABLE ra_int_set_xref_type
(
INT_SET_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_INV_MATERIAL_TYPE'
CREATE TABLE ra_inv_material_type
(
INVENTORY_MATERIAL_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ITEM_CATEGORY'
CREATE TABLE ra_item_category
(
ITEM_CATEGORY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ITEM_SUB_CATEGORY'
CREATE TABLE ra_item_sub_category
(
ITEM_CATEGORY VARCHAR(40) NOT NULL,
ITEM_SUB_CATEGORY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LAND_ACQTN_METHOD'
CREATE TABLE ra_land_acqtn_method
(
LAND_ACQTN_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LAND_AGREE_TYPE'
CREATE TABLE ra_land_agree_type
(
LAND_AGREE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LAND_BIDDER_TYPE'
CREATE TABLE ra_land_bidder_type
(
LAND_BIDDER_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LAND_BID_STATUS'
CREATE TABLE ra_land_bid_status
(
LAND_BID_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LAND_BID_TYPE'
CREATE TABLE ra_land_bid_type
(
LAND_BID_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LAND_CASE_ACTION'
CREATE TABLE ra_land_case_action
(
LAND_CASE_ACTION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LAND_CASE_TYPE'
CREATE TABLE ra_land_case_type
(
LAND_CASE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LAND_CASH_BID_TYPE'
CREATE TABLE ra_land_cash_bid_type
(
CASH_BID_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LAND_COMPONENT_TYPE'
CREATE TABLE ra_land_component_type
(
LAND_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LAND_LESSOR_TYPE'
CREATE TABLE ra_land_lessor_type
(
LAND_LESSOR_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LAND_OFFRING_STATUS'
CREATE TABLE ra_land_offring_status
(
LAND_OFFRING_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LAND_OFFRING_TYPE'
CREATE TABLE ra_land_offring_type
(
LAND_OFFRING_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LAND_PROPERTY_TYPE'
CREATE TABLE ra_land_property_type
(
LAND_PROPERTY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LAND_REF_NUM_TYPE'
CREATE TABLE ra_land_ref_num_type
(
LAND_REF_NUM_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LAND_RENTAL_TYPE'
CREATE TABLE ra_land_rental_type
(
LAND_RENTAL_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LAND_REQUEST_TYPE'
CREATE TABLE ra_land_request_type
(
LAND_REQUEST_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LAND_REQ_STATUS'
CREATE TABLE ra_land_req_status
(
LAND_REQ_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LAND_RIGHT_CATEGORY'
CREATE TABLE ra_land_right_category
(
LAND_RIGHT_CATEGORY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LAND_RIGHT_STATUS'
CREATE TABLE ra_land_right_status
(
STATUS_TYPE VARCHAR(40) NOT NULL,
LAND_RIGHT_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LAND_STATUS_TYPE'
CREATE TABLE ra_land_status_type
(
STATUS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LAND_TITLE_CHG_RSN'
CREATE TABLE ra_land_title_chg_rsn
(
LAND_TITLE_CHANGE_REASON VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LAND_TITLE_TYPE'
CREATE TABLE ra_land_title_type
(
LAND_TITLE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LAND_TRACT_TYPE'
CREATE TABLE ra_land_tract_type
(
LAND_TRACT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LAND_UNIT_TYPE'
CREATE TABLE ra_land_unit_type
(
LAND_UNIT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LAND_WELL_REL_TYPE'
CREATE TABLE ra_land_well_rel_type
(
WELL_RELATIONSHIP_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LANGUAGE'
CREATE TABLE ra_language
(
LANGUAGE_ID VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LEASE_UNIT_STATUS'
CREATE TABLE ra_lease_unit_status
(
LEASE_UNIT_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LEASE_UNIT_TYPE'
CREATE TABLE ra_lease_unit_type
(
LEASE_UNIT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LEGAL_SURVEY_TYPE'
CREATE TABLE ra_legal_survey_type
(
LEGAL_SURVEY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LICENSE_STATUS'
CREATE TABLE ra_license_status
(
LICENSE_STATUS_TYPE VARCHAR(40) NOT NULL,
LICENSE_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LIC_STATUS_TYPE'
CREATE TABLE ra_lic_status_type
(
LICENSE_STATUS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LINER_TYPE'
CREATE TABLE ra_liner_type
(
LINER_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LITHOLOGY'
CREATE TABLE ra_lithology
(
LITHOLOGY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LITH_ABUNDANCE'
CREATE TABLE ra_lith_abundance
(
ABUNDANCE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LITH_BOUNDARY_TYPE'
CREATE TABLE ra_lith_boundary_type
(
BOUNDARY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LITH_COLOR'
CREATE TABLE ra_lith_color
(
COLOR VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LITH_CONSOLIDATION'
CREATE TABLE ra_lith_consolidation
(
CONSOLIDATION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LITH_CYCLE_BED'
CREATE TABLE ra_lith_cycle_bed
(
CYCLE_BED VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LITH_DEP_ENV'
CREATE TABLE ra_lith_dep_env
(
DEPOSITIONAL_ENVIRONMENT VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LITH_DIAGENESIS'
CREATE TABLE ra_lith_diagenesis
(
DIAGENESIS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LITH_DISTRIBUTION'
CREATE TABLE ra_lith_distribution
(
DISTRIBUTION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LITH_INTENSITY'
CREATE TABLE ra_lith_intensity
(
INTENSITY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LITH_LOG_COMP_TYPE'
CREATE TABLE ra_lith_log_comp_type
(
LITH_LOG_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LITH_LOG_TYPE'
CREATE TABLE ra_lith_log_type
(
LITH_LOG_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LITH_OIL_STAIN'
CREATE TABLE ra_lith_oil_stain
(
OIL_STAIN VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LITH_PATTERN_CODE'
CREATE TABLE ra_lith_pattern_code
(
LITH_PATTERN_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LITH_ROCKPART'
CREATE TABLE ra_lith_rockpart
(
ROCKPART_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LITH_ROCK_MATRIX'
CREATE TABLE ra_lith_rock_matrix
(
ROCK_MATRIX VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LITH_ROCK_PROFILE'
CREATE TABLE ra_lith_rock_profile
(
ROCK_PROFILE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LITH_ROCK_TYPE'
CREATE TABLE ra_lith_rock_type
(
ROCK_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LITH_ROUNDING'
CREATE TABLE ra_lith_rounding
(
ROUNDING VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LITH_SCALE_SCHEME'
CREATE TABLE ra_lith_scale_scheme
(
SCALE_SCHEME VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LITH_SORTING'
CREATE TABLE ra_lith_sorting
(
SORTING VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LITH_STRUCTURE'
CREATE TABLE ra_lith_structure
(
STRUCTURE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LOCATION_DESC_TYPE'
CREATE TABLE ra_location_desc_type
(
LOCATION_DESC_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LOCATION_QUALIFIER'
CREATE TABLE ra_location_qualifier
(
LOCATION_QUALIFIER VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LOCATION_QUALITY'
CREATE TABLE ra_location_quality
(
LOCATION_QUALITY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LOCATION_TYPE'
CREATE TABLE ra_location_type
(
LOCATION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LOG_ARRAY_DIMENSION'
CREATE TABLE ra_log_array_dimension
(
DIMENSION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LOG_CORRECT_METHOD'
CREATE TABLE ra_log_correct_method
(
CORRECTION_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LOG_CRV_CLASS_SYSTEM'
CREATE TABLE ra_log_crv_class_system
(
SYSTEM_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LOG_DEPTH_TYPE'
CREATE TABLE ra_log_depth_type
(
DEPTH_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LOG_DIRECTION'
CREATE TABLE ra_log_direction
(
LOG_DIRECTION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LOG_GOOD_VALUE_TYPE'
CREATE TABLE ra_log_good_value_type
(
GOOD_VALUE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LOG_INDEX_TYPE'
CREATE TABLE ra_log_index_type
(
INDEX_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LOG_MATRIX'
CREATE TABLE ra_log_matrix
(
LOG_MATRIX_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LOG_POSITION_TYPE'
CREATE TABLE ra_log_position_type
(
POSITION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LOG_TOOL_TYPE'
CREATE TABLE ra_log_tool_type
(
LOG_TOOL_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LOST_MATERIAL_TYPE'
CREATE TABLE ra_lost_material_type
(
LOST_MATERIAL_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LR_FACILITY_XREF'
CREATE TABLE ra_lr_facility_xref
(
XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LR_FIELD_XREF'
CREATE TABLE ra_lr_field_xref
(
XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LR_SIZE_TYPE'
CREATE TABLE ra_lr_size_type
(
SIZE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LR_TERMIN_REQMT'
CREATE TABLE ra_lr_termin_reqmt
(
TERMINATION_REQMT VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LR_TERMIN_TYPE'
CREATE TABLE ra_lr_termin_type
(
TERMINATION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_LR_XREF_TYPE'
CREATE TABLE ra_lr_xref_type
(
LR_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_L_OFFR_CANCEL_RSN'
CREATE TABLE ra_l_offr_cancel_rsn
(
LAND_OFFR_CANCEL_RSN VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_MACERAL_AMOUNT_TYPE'
CREATE TABLE ra_maceral_amount_type
(
MACERAL_AMOUNT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_MAINT_PROCESS'
CREATE TABLE ra_maint_process
(
MAINTAIN_PROCESS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_MATURATION_TYPE'
CREATE TABLE ra_maturation_type
(
MATURATION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_MATURITY_METHOD'
CREATE TABLE ra_maturity_method
(
MATURITY_METHOD_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_MBAL_COMPRESS_TYPE'
CREATE TABLE ra_mbal_compress_type
(
Z_FACTOR_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_MBAL_CURVE_TYPE'
CREATE TABLE ra_mbal_curve_type
(
CURVE_FIT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_MEASUREMENT_LOC'
CREATE TABLE ra_measurement_loc
(
MEASUREMENT_LOCATION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_MEASUREMENT_TYPE'
CREATE TABLE ra_measurement_type
(
MEASUREMENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_MEASURE_TECHNIQUE'
CREATE TABLE ra_measure_technique
(
MEASUREMENT_TECHNIQUE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_MEDIA_TYPE'
CREATE TABLE ra_media_type
(
MEDIA_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_METHOD_TYPE'
CREATE TABLE ra_method_type
(
METHOD_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_MISC_DATA_CODE'
CREATE TABLE ra_misc_data_code
(
MISC_DATA_TYPE VARCHAR(40) NOT NULL,
MISC_DATA_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_MISC_DATA_TYPE'
CREATE TABLE ra_misc_data_type
(
MISC_DATA_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_MISSING_STRAT_TYPE'
CREATE TABLE ra_missing_strat_type
(
MISSING_STRAT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_MOBILITY_TYPE'
CREATE TABLE ra_mobility_type
(
MOBILITY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_MONTH'
CREATE TABLE ra_month
(
MONTH VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_MUD_COLLECT_REASON'
CREATE TABLE ra_mud_collect_reason
(
MUD_COLLECT_REASON VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_MUD_LOG_COLOR'
CREATE TABLE ra_mud_log_color
(
MUD_LOG_COLOR VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_MUD_PROPERTY_CODE'
CREATE TABLE ra_mud_property_code
(
MUD_PROPERTY VARCHAR(40) NOT NULL,
MUD_PROPERTY_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_MUD_PROPERTY_REF'
CREATE TABLE ra_mud_property_ref
(
MUD_PROPERTY_REF VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_MUD_PROPERTY_TYPE'
CREATE TABLE ra_mud_property_type
(
MUD_PROPERTY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_MUD_SAMPLE_TYPE'
CREATE TABLE ra_mud_sample_type
(
MUD_SAMPLE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_MUNICIPALITY'
CREATE TABLE ra_municipality
(
MUNICIPALITY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_NAME_SET_XREF_TYPE'
CREATE TABLE ra_name_set_xref_type
(
XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_NODE_POSITION'
CREATE TABLE ra_node_position
(
NODE_POSITION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_NORTH'
CREATE TABLE ra_north
(
NORTH_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_NOTIFICATION_COMP_TYPE'
CREATE TABLE ra_notification_comp_type
(
NOTIFICATION_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_NOTIFICATION_TYPE'
CREATE TABLE ra_notification_type
(
NOTIFICATION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_NS_DIRECTION'
CREATE TABLE ra_ns_direction
(
NS_DIRECTION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_NS_START_LINE'
CREATE TABLE ra_ns_start_line
(
NS_START_LINE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_OBLIG_CALC_METHOD'
CREATE TABLE ra_oblig_calc_method
(
CALCULATION_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_OBLIG_CALC_POINT'
CREATE TABLE ra_oblig_calc_point
(
CALCULATION_POINT VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_OBLIG_CATEGORY'
CREATE TABLE ra_oblig_category
(
LAND_OBLIG_CATEGORY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_OBLIG_COMPONENT_TYPE'
CREATE TABLE ra_oblig_component_type
(
OBLIGATION_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_OBLIG_COMP_REASON'
CREATE TABLE ra_oblig_comp_reason
(
COMPONENT_REASON VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_OBLIG_DEDUCT_CALC'
CREATE TABLE ra_oblig_deduct_calc
(
CALCULATION_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_OBLIG_PARTY_TYPE'
CREATE TABLE ra_oblig_party_type
(
PARTY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_OBLIG_PAY_RESP'
CREATE TABLE ra_oblig_pay_resp
(
PAYMENT_RESPONSIBILITY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_OBLIG_REMARK_TYPE'
CREATE TABLE ra_oblig_remark_type
(
REMARK_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_OBLIG_SUSPEND_PAY'
CREATE TABLE ra_oblig_suspend_pay
(
SUSPEND_PAYMENT_REASON VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_OBLIG_TRIGGER'
CREATE TABLE ra_oblig_trigger
(
TRIGGER_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_OBLIG_TYPE'
CREATE TABLE ra_oblig_type
(
LAND_OBLIG_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_OBLIG_XREF_TYPE'
CREATE TABLE ra_oblig_xref_type
(
OBLIG_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_OFFSHORE_AREA_CODE'
CREATE TABLE ra_offshore_area_code
(
OFFSHORE_AREA_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_OFFSHORE_COMP_TYPE'
CREATE TABLE ra_offshore_comp_type
(
OFFSHORE_COMPLETION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_OIL_VALUE_CODE'
CREATE TABLE ra_oil_value_code
(
OIL_VALUE_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ONTOGENY_TYPE'
CREATE TABLE ra_ontogeny_type
(
ONTOGENY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_OPERAND_QUALIFIER'
CREATE TABLE ra_operand_qualifier
(
OPERAND_QUALIFIER VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ORIENTATION'
CREATE TABLE ra_orientation
(
ORIENTATION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PALEO_AMOUNT_TYPE'
CREATE TABLE ra_paleo_amount_type
(
PALEO_AMOUNT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PALEO_IND_TYPE'
CREATE TABLE ra_paleo_ind_type
(
INDICATOR_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PALEO_INTERP_TYPE'
CREATE TABLE ra_paleo_interp_type
(
INTERP_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PALEO_TYPE_FOSSIL'
CREATE TABLE ra_paleo_type_fossil
(
TYPE_FOSSIL_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PAL_SUM_COMP_TYPE'
CREATE TABLE ra_pal_sum_comp_type
(
PALEO_SUMMARY_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PAL_SUM_XREF_TYPE'
CREATE TABLE ra_pal_sum_xref_type
(
PALEO_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PARCEL_LOT_TYPE'
CREATE TABLE ra_parcel_lot_type
(
PARCEL_LOT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PARCEL_TYPE'
CREATE TABLE ra_parcel_type
(
PARCEL_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PAYMENT_TYPE'
CREATE TABLE ra_payment_type
(
PAYMENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PAYZONE_TYPE'
CREATE TABLE ra_payzone_type
(
PAYZONE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PAY_DETAIL_TYPE'
CREATE TABLE ra_pay_detail_type
(
PAY_DETAIL_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PAY_METHOD'
CREATE TABLE ra_pay_method
(
PAY_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PAY_RATE_TYPE'
CREATE TABLE ra_pay_rate_type
(
PAY_RATE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PDEN_AMEND_REASON'
CREATE TABLE ra_pden_amend_reason
(
AMEND_REASON VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PDEN_COMPONENT_TYPE'
CREATE TABLE ra_pden_component_type
(
PDEN_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PDEN_STATUS'
CREATE TABLE ra_pden_status
(
PDEN_STATUS_TYPE VARCHAR(40) NOT NULL,
PDEN_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PDEN_STATUS_TYPE'
CREATE TABLE ra_pden_status_type
(
PDEN_STATUS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PDEN_XREF_TYPE'
CREATE TABLE ra_pden_xref_type
(
PDEN_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PERFORATION_METHOD'
CREATE TABLE ra_perforation_method
(
PERFORATION_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PERFORATION_TYPE'
CREATE TABLE ra_perforation_type
(
PERF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PERIOD_TYPE'
CREATE TABLE ra_period_type
(
PERIOD_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PERMEABILITY_TYPE'
CREATE TABLE ra_permeability_type
(
PERMEABILITY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PHYSICAL_ITEM_STATUS'
CREATE TABLE ra_physical_item_status
(
PHYSICAL_ITEM_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PHYSICAL_PROCESS'
CREATE TABLE ra_physical_process
(
PHYSICAL_PROCESS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PHYS_ITEM_GROUP_TYPE'
CREATE TABLE ra_phys_item_group_type
(
GROUP_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PICK_LOCATION'
CREATE TABLE ra_pick_location
(
PICK_LOCATION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PICK_QUALIFIER'
CREATE TABLE ra_pick_qualifier
(
PICK_QUALIFIER VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PICK_QUALIF_REASON'
CREATE TABLE ra_pick_qualif_reason
(
PICK_QUALIF_REASON VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PICK_QUALITY'
CREATE TABLE ra_pick_quality
(
PICK_QUALITY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PICK_VERSION_TYPE'
CREATE TABLE ra_pick_version_type
(
PICK_VERSION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PLATFORM_TYPE'
CREATE TABLE ra_platform_type
(
PLATFORM_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PLOT_SYMBOL'
CREATE TABLE ra_plot_symbol
(
PLOT_SYMBOL VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PLUG_TYPE'
CREATE TABLE ra_plug_type
(
PLUG_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_POOL_COMPONENT_TYPE'
CREATE TABLE ra_pool_component_type
(
POOL_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_POOL_STATUS'
CREATE TABLE ra_pool_status
(
POOL_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_POOL_TYPE'
CREATE TABLE ra_pool_type
(
POOL_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_POROSITY_TYPE'
CREATE TABLE ra_porosity_type
(
POROSITY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_AUDIT_REASON'
CREATE TABLE ra_ppdm_audit_reason
(
AUDIT_REASON VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_AUDIT_TYPE'
CREATE TABLE ra_ppdm_audit_type
(
AUDIT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_BOOLEAN_RULE'
CREATE TABLE ra_ppdm_boolean_rule
(
BOOLEAN_RULE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_CREATE_METHOD'
CREATE TABLE ra_ppdm_create_method
(
CREATE_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_DATA_TYPE'
CREATE TABLE ra_ppdm_data_type
(
DATA_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_DEFAULT_VALUE'
CREATE TABLE ra_ppdm_default_value
(
DEFAULT_VALUE_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_ENFORCE_METHOD'
CREATE TABLE ra_ppdm_enforce_method
(
ENFORCE_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_FAIL_RESULT'
CREATE TABLE ra_ppdm_fail_result
(
RULE_FAIL_RESULT VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_GROUP_TYPE'
CREATE TABLE ra_ppdm_group_type
(
GROUP_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_GROUP_USE'
CREATE TABLE ra_ppdm_group_use
(
GROUP_USE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_GROUP_XREF_TYPE'
CREATE TABLE ra_ppdm_group_xref_type
(
GROUP_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_INDEX_CATEGORY'
CREATE TABLE ra_ppdm_index_category
(
INDEX_CATEGORY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_MAP_RULE_TYPE'
CREATE TABLE ra_ppdm_map_rule_type
(
MAP_RULE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_MAP_TYPE'
CREATE TABLE ra_ppdm_map_type
(
MAP_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_METRIC_CODE'
CREATE TABLE ra_ppdm_metric_code
(
METRIC_TYPE VARCHAR(40) NOT NULL,
METRIC_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_METRIC_COMP_TYPE'
CREATE TABLE ra_ppdm_metric_comp_type
(
METRIC_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_METRIC_REF_VALUE'
CREATE TABLE ra_ppdm_metric_ref_value
(
REFERENCE_VALUE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_METRIC_TYPE'
CREATE TABLE ra_ppdm_metric_type
(
METRIC_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_OBJECT_STATUS'
CREATE TABLE ra_ppdm_object_status
(
OBJECT_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_OBJECT_TYPE'
CREATE TABLE ra_ppdm_object_type
(
OBJECT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_OPERATING_SYSTEM'
CREATE TABLE ra_ppdm_operating_system
(
OPERATING_SYSTEM VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_OWNER_ROLE'
CREATE TABLE ra_ppdm_owner_role
(
OWNER_ROLE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_PROC_TYPE'
CREATE TABLE ra_ppdm_proc_type
(
PROCEDURE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_QC_QUALITY'
CREATE TABLE ra_ppdm_qc_quality
(
QUALITY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_QC_STATUS'
CREATE TABLE ra_ppdm_qc_status
(
QC_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_QC_TYPE'
CREATE TABLE ra_ppdm_qc_type
(
QC_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_RDBMS'
CREATE TABLE ra_ppdm_rdbms
(
RDBMS_ID VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_REF_VALUE_TYPE'
CREATE TABLE ra_ppdm_ref_value_type
(
REFERENCE_VALUE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_ROW_QUALITY'
CREATE TABLE ra_ppdm_row_quality
(
ROW_QUALITY_ID VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_RULE_CLASS'
CREATE TABLE ra_ppdm_rule_class
(
RULE_CLASS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_RULE_COMP_TYPE'
CREATE TABLE ra_ppdm_rule_comp_type
(
RULE_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_RULE_DETAIL_TYPE'
CREATE TABLE ra_ppdm_rule_detail_type
(
RULE_DETAIL_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_RULE_PURPOSE'
CREATE TABLE ra_ppdm_rule_purpose
(
RULE_PURPOSE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_RULE_STATUS'
CREATE TABLE ra_ppdm_rule_status
(
RULE_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_RULE_USE_COND'
CREATE TABLE ra_ppdm_rule_use_cond
(
USE_CONDITION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_RULE_XREF_COND'
CREATE TABLE ra_ppdm_rule_xref_cond
(
RULE_XREF_CONDITION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_RULE_XREF_TYPE'
CREATE TABLE ra_ppdm_rule_xref_type
(
RULE_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_SCHEMA_ENTITY'
CREATE TABLE ra_ppdm_schema_entity
(
ELEMENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_SCHEMA_GROUP'
CREATE TABLE ra_ppdm_schema_group
(
SCHEMA_GROUP_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_SYSTEM_TYPE'
CREATE TABLE ra_ppdm_system_type
(
PPDM_SYSTEM_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_TABLE_TYPE'
CREATE TABLE ra_ppdm_table_type
(
TABLE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_UOM_ALIAS_TYPE'
CREATE TABLE ra_ppdm_uom_alias_type
(
UOM_ALIAS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PPDM_UOM_USAGE'
CREATE TABLE ra_ppdm_uom_usage
(
UOM_USAGE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PRESERVE_QUALITY'
CREATE TABLE ra_preserve_quality
(
PRESERVATION_QUALITY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PRESERVE_TYPE'
CREATE TABLE ra_preserve_type
(
PRESERVATION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PRODUCTION_METHOD'
CREATE TABLE ra_production_method
(
PRODUCTION_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PRODUCT_COMPONENT_TYPE'
CREATE TABLE ra_product_component_type
(
PRODUCT_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PROD_STRING_COMP_TYPE'
CREATE TABLE ra_prod_string_comp_type
(
PROD_STRING_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PROD_STRING_STATUS'
CREATE TABLE ra_prod_string_status
(
STATUS_TYPE VARCHAR(40) NOT NULL,
STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PROD_STRING_STAT_TYPE'
CREATE TABLE ra_prod_string_stat_type
(
STATUS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PROD_STRING_TYPE'
CREATE TABLE ra_prod_string_type
(
PROD_STRING_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PROD_STR_FM_STATUS'
CREATE TABLE ra_prod_str_fm_status
(
STATUS_TYPE VARCHAR(40) NOT NULL,
STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PROD_STR_FM_STAT_TYPE'
CREATE TABLE ra_prod_str_fm_stat_type
(
STATUS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PROJECTION_TYPE'
CREATE TABLE ra_projection_type
(
PROJECTION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PROJECT_ALIAS_TYPE'
CREATE TABLE ra_project_alias_type
(
PROJ_ALIAS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PROJECT_BA_ROLE'
CREATE TABLE ra_project_ba_role
(
ROLE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PROJECT_COMP_REASON'
CREATE TABLE ra_project_comp_reason
(
COMPONENT_REASON VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PROJECT_COMP_TYPE'
CREATE TABLE ra_project_comp_type
(
COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PROJECT_CONDITION'
CREATE TABLE ra_project_condition
(
PROJECT_TYPE VARCHAR(40) NOT NULL,
CONDITION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PROJECT_EQUIP_ROLE'
CREATE TABLE ra_project_equip_role
(
EQUIP_ROLE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PROJECT_STATUS'
CREATE TABLE ra_project_status
(
STATUS_TYPE VARCHAR(40) NOT NULL,
STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PROJECT_STATUS_TYPE'
CREATE TABLE ra_project_status_type
(
STATUS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PROJECT_TYPE'
CREATE TABLE ra_project_type
(
PROJECT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PROJ_STEP_TYPE'
CREATE TABLE ra_proj_step_type
(
STEP_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PROJ_STEP_XREF_TYPE'
CREATE TABLE ra_proj_step_xref_type
(
PROJECT_STEP_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PROPPANT_TYPE'
CREATE TABLE ra_proppant_type
(
PROPPANT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_PUBLICATION_NAME'
CREATE TABLE ra_publication_name
(
PUBLICATION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_QUALIFIER_TYPE'
CREATE TABLE ra_qualifier_type
(
QUALIFIER_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_QUALITY'
CREATE TABLE ra_quality
(
QUALITY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RATE_CONDITION'
CREATE TABLE ra_rate_condition
(
RATE_CONDITION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RATE_SCHEDULE'
CREATE TABLE ra_rate_schedule
(
RATE_SCHEDULE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RATE_SCHEDULE_COMP_TYPE'
CREATE TABLE ra_rate_schedule_comp_type
(
RATE_SCHEDULE_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RATE_SCHED_XREF'
CREATE TABLE ra_rate_sched_xref
(
RATE_SCHEDULE_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RATE_TYPE'
CREATE TABLE ra_rate_type
(
RATE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RATIO_CURVE_TYPE'
CREATE TABLE ra_ratio_curve_type
(
RATIO_CURVE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RATIO_FLUID_TYPE'
CREATE TABLE ra_ratio_fluid_type
(
RATIO_FLUID_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RECORDER_POSITION'
CREATE TABLE ra_recorder_position
(
RECORDER_POSITION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RECORDER_TYPE'
CREATE TABLE ra_recorder_type
(
RECORDER_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_REMARK_TYPE'
CREATE TABLE ra_remark_type
(
REMARK_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_REMARK_USE_TYPE'
CREATE TABLE ra_remark_use_type
(
REMARK_USE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_REPEAT_STRAT_TYPE'
CREATE TABLE ra_repeat_strat_type
(
REPEAT_STRAT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_REPORT_HIER_COMP'
CREATE TABLE ra_report_hier_comp
(
COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_REPORT_HIER_LEVEL'
CREATE TABLE ra_report_hier_level
(
LEVEL_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_REPORT_HIER_TYPE'
CREATE TABLE ra_report_hier_type
(
HIERARCHY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_REP_HIER_ALIAS_TYPE'
CREATE TABLE ra_rep_hier_alias_type
(
REP_HIER_ALIAS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RESENT_COMP_TYPE'
CREATE TABLE ra_resent_comp_type
(
RESENT_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RESENT_CONFIDENCE'
CREATE TABLE ra_resent_confidence
(
CONFIDENCE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RESENT_GROUP_TYPE'
CREATE TABLE ra_resent_group_type
(
GROUP_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RESENT_REV_CAT'
CREATE TABLE ra_resent_rev_cat
(
CATEGORY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RESENT_USE_TYPE'
CREATE TABLE ra_resent_use_type
(
USE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RESENT_VOL_METHOD'
CREATE TABLE ra_resent_vol_method
(
VOLUME_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RESENT_XREF_TYPE'
CREATE TABLE ra_resent_xref_type
(
XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_REST_ACTIVITY'
CREATE TABLE ra_rest_activity
(
RESTRICTED_ACTIVITY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_REST_DURATION'
CREATE TABLE ra_rest_duration
(
REST_DURATION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_REST_REMARK'
CREATE TABLE ra_rest_remark
(
RESTRICTION_REMARK_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_REST_TYPE'
CREATE TABLE ra_rest_type
(
RESTRICTION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RETENTION_PERIOD'
CREATE TABLE ra_retention_period
(
RETENTION_PERIOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_REVISION_METHOD'
CREATE TABLE ra_revision_method
(
REVISION_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RIG_BLOWOUT_PREVENTER'
CREATE TABLE ra_rig_blowout_preventer
(
BLOWOUT_PREVENTER_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RIG_CATEGORY'
CREATE TABLE ra_rig_category
(
RIG_CATEGORY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RIG_CLASS'
CREATE TABLE ra_rig_class
(
RIG_CLASS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RIG_CODE'
CREATE TABLE ra_rig_code
(
RIG_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RIG_DESANDER_TYPE'
CREATE TABLE ra_rig_desander_type
(
DESANDER_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RIG_DESILTER_TYPE'
CREATE TABLE ra_rig_desilter_type
(
DESILTER_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RIG_DRAWWORKS'
CREATE TABLE ra_rig_drawworks
(
DRAWWORKS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RIG_GENERATOR_TYPE'
CREATE TABLE ra_rig_generator_type
(
PLANT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RIG_HOOKBLOCK_TYPE'
CREATE TABLE ra_rig_hookblock_type
(
HOOKBLOCK_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
MAST_TYPE VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RIG_MAST'
CREATE TABLE ra_rig_mast
(
MAST_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RIG_OVERHEAD_CAPACITY'
CREATE TABLE ra_rig_overhead_capacity
(
CAPACITY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RIG_OVERHEAD_TYPE'
CREATE TABLE ra_rig_overhead_type
(
OVERHEAD_EQUIP_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RIG_PUMP'
CREATE TABLE ra_rig_pump
(
PUMP_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RIG_PUMP_FUNCTION'
CREATE TABLE ra_rig_pump_function
(
PUMP_FUNCTION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RIG_SUBSTRUCTURE'
CREATE TABLE ra_rig_substructure
(
SUBSTRUCTURE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RIG_SWIVEL_TYPE'
CREATE TABLE ra_rig_swivel_type
(
SWIVEL_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RIG_TYPE'
CREATE TABLE ra_rig_type
(
RIG_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RMII_CONTACT_TYPE'
CREATE TABLE ra_rmii_contact_type
(
CONTACT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RMII_CONTENT_TYPE'
CREATE TABLE ra_rmii_content_type
(
RMII_CONTENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RMII_DEFICIENCY'
CREATE TABLE ra_rmii_deficiency
(
DEFICIENCY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RMII_DESC_TYPE'
CREATE TABLE ra_rmii_desc_type
(
DESCRIPTION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RMII_GROUP_TYPE'
CREATE TABLE ra_rmii_group_type
(
GROUP_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RMII_METADATA_CODE'
CREATE TABLE ra_rmii_metadata_code
(
METADATA_TYPE VARCHAR(40) NOT NULL,
METADATA_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RMII_METADATA_TYPE'
CREATE TABLE ra_rmii_metadata_type
(
METADATA_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RMII_QUALITY_CODE'
CREATE TABLE ra_rmii_quality_code
(
INFORMATION_QUALITY_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RMII_STATUS'
CREATE TABLE ra_rmii_status
(
STATUS_TYPE VARCHAR(40) NOT NULL,
STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RMII_STATUS_TYPE'
CREATE TABLE ra_rmii_status_type
(
STATUS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_RM_THESAURUS_XREF'
CREATE TABLE ra_rm_thesaurus_xref
(
THESAURUS_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ROAD_CONDITION'
CREATE TABLE ra_road_condition
(
ROAD_CONDITION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ROAD_CONTROL_TYPE'
CREATE TABLE ra_road_control_type
(
CONTROL_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ROAD_DRIVING_SIDE'
CREATE TABLE ra_road_driving_side
(
DRIVING_SIDE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ROAD_TRAFFIC_FLOW_TYPE'
CREATE TABLE ra_road_traffic_flow_type
(
TRAFFIC_FLOW_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ROCK_CLASS_SCHEME'
CREATE TABLE ra_rock_class_scheme
(
ROCK_CLASS_SCHEME VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ROLL_ALONG_METHOD'
CREATE TABLE ra_roll_along_method
(
ROLL_ALONG_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_ROYALTY_TYPE'
CREATE TABLE ra_royalty_type
(
ROYALTY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SALINITY_TYPE'
CREATE TABLE ra_salinity_type
(
SALINITY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SAMPLE_COLLECTION_TYPE'
CREATE TABLE ra_sample_collection_type
(
COLLECTION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SAMPLE_COLLECT_METHOD'
CREATE TABLE ra_sample_collect_method
(
COLLECT_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SAMPLE_COMP_TYPE'
CREATE TABLE ra_sample_comp_type
(
SAMPLE_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SAMPLE_CONTAMINANT'
CREATE TABLE ra_sample_contaminant
(
SAMPLE_CONTAMINANT VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SAMPLE_DESC_CODE'
CREATE TABLE ra_sample_desc_code
(
DESCRIPTION_TYPE VARCHAR(40) NOT NULL,
DESCRIPTION_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SAMPLE_DESC_TYPE'
CREATE TABLE ra_sample_desc_type
(
DESCRIPTION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SAMPLE_FRACTION_TYPE'
CREATE TABLE ra_sample_fraction_type
(
SAMPLE_FRACTION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SAMPLE_LOCATION'
CREATE TABLE ra_sample_location
(
SAMPLE_LOCATION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SAMPLE_PHASE'
CREATE TABLE ra_sample_phase
(
PHASE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SAMPLE_PREP_CLASS'
CREATE TABLE ra_sample_prep_class
(
PREPARATION_CLASS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SAMPLE_REF_VALUE_TYPE'
CREATE TABLE ra_sample_ref_value_type
(
REFERENCE_VALUE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SAMPLE_SHAPE'
CREATE TABLE ra_sample_shape
(
SAMPLE_SHAPE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SAMPLE_TYPE'
CREATE TABLE ra_sample_type
(
SAMPLE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SCALE_TRANSFORM'
CREATE TABLE ra_scale_transform
(
SCALE_TRANSFORM VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SCREEN_LOCATION'
CREATE TABLE ra_screen_location
(
SCREEN_LOCATION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SECTION_TYPE'
CREATE TABLE ra_section_type
(
SECTION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEISMIC_PATH'
CREATE TABLE ra_seismic_path
(
SEISMIC_PATH VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_3D_TYPE'
CREATE TABLE ra_seis_3d_type
(
SEISMIC_3D_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_ACTIVITY_CLASS'
CREATE TABLE ra_seis_activity_class
(
SEIS_ACTIVITY_CLASS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_ACTIVITY_TYPE'
CREATE TABLE ra_seis_activity_type
(
SEIS_ACTIVITY_CLASS VARCHAR(40) NOT NULL,
SEIS_ACTIVITY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_AUTHORIZE_LIMIT'
CREATE TABLE ra_seis_authorize_limit
(
LIMIT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_AUTHORIZE_REASON'
CREATE TABLE ra_seis_authorize_reason
(
REASON_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_AUTHORIZE_TYPE'
CREATE TABLE ra_seis_authorize_type
(
AUTHORIZE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_BIN_METHOD'
CREATE TABLE ra_seis_bin_method
(
BIN_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_BIN_OUTLINE_TYPE'
CREATE TABLE ra_seis_bin_outline_type
(
BIN_OUTLINE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_CABLE_MAKE'
CREATE TABLE ra_seis_cable_make
(
CABLE_MAKE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_CHANNEL_TYPE'
CREATE TABLE ra_seis_channel_type
(
CHANNEL_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_DIMENSION'
CREATE TABLE ra_seis_dimension
(
SEIS_DIMENSION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_ENERGY_TYPE'
CREATE TABLE ra_seis_energy_type
(
SEIS_ENERGY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_FLOW_DESC_TYPE'
CREATE TABLE ra_seis_flow_desc_type
(
FLOW_DESC_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_GROUP_TYPE'
CREATE TABLE ra_seis_group_type
(
SEIS_GROUP_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_INSP_COMPONENT_TYPE'
CREATE TABLE ra_seis_insp_component_type
(
SEIS_INSP_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_LIC_COND'
CREATE TABLE ra_seis_lic_cond
(
CONDITION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_LIC_COND_CODE'
CREATE TABLE ra_seis_lic_cond_code
(
CONDITION_TYPE VARCHAR(40) NOT NULL,
CONDITION_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_LIC_DUE_CONDITION'
CREATE TABLE ra_seis_lic_due_condition
(
DUE_CONDITION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_LIC_VIOL_RESOL'
CREATE TABLE ra_seis_lic_viol_resol
(
RESOLVE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_LIC_VIOL_TYPE'
CREATE TABLE ra_seis_lic_viol_type
(
VIOLATION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_PARM_ORIGIN'
CREATE TABLE ra_seis_parm_origin
(
PARAMETER_ORIGIN VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_PATCH_TYPE'
CREATE TABLE ra_seis_patch_type
(
PATCH_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_PICK_METHOD'
CREATE TABLE ra_seis_pick_method
(
PICK_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_PROC_COMP_TYPE'
CREATE TABLE ra_seis_proc_comp_type
(
PROCESSING_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_PROC_PARM'
CREATE TABLE ra_seis_proc_parm
(
PARAMETER_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_PROC_SET_TYPE'
CREATE TABLE ra_seis_proc_set_type
(
PROC_SET_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_PROC_STATUS'
CREATE TABLE ra_seis_proc_status
(
PROCESS_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_PROC_STEP_NAME'
CREATE TABLE ra_seis_proc_step_name
(
STEP_NAME VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_PROC_STEP_TYPE'
CREATE TABLE ra_seis_proc_step_type
(
STEP_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_RCRD_FMT_TYPE'
CREATE TABLE ra_seis_rcrd_fmt_type
(
SEIS_RCRD_FMT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_RCRD_MAKE'
CREATE TABLE ra_seis_rcrd_make
(
SEIS_RCRD_MAKE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_RCVR_ARRY_TYPE'
CREATE TABLE ra_seis_rcvr_arry_type
(
SEIS_RCVR_ARRAY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_RCVR_TYPE'
CREATE TABLE ra_seis_rcvr_type
(
SEIS_RCVR_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_RECORD_TYPE'
CREATE TABLE ra_seis_record_type
(
RECORD_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_REF_DATUM'
CREATE TABLE ra_seis_ref_datum
(
REFERENCE_DATUM VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_REF_NUM_TYPE'
CREATE TABLE ra_seis_ref_num_type
(
REPORTED_REF_NUM_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_SAMPLE_TYPE'
CREATE TABLE ra_seis_sample_type
(
SAMPLE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_SEGMENT_REASON'
CREATE TABLE ra_seis_segment_reason
(
SEIS_SEGMENT_REASON VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_SET_COMPONENT_TYPE'
CREATE TABLE ra_seis_set_component_type
(
SEIS_SET_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_SPECTRUM_TYPE'
CREATE TABLE ra_seis_spectrum_type
(
SEIS_SPECTRUM_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_SRC_ARRAY_TYPE'
CREATE TABLE ra_seis_src_array_type
(
SEIS_SRC_ARRAY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_SRC_MAKE'
CREATE TABLE ra_seis_src_make
(
SEIS_SRC_MAKE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_STATION_TYPE'
CREATE TABLE ra_seis_station_type
(
SEIS_STATION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_STATUS'
CREATE TABLE ra_seis_status
(
SEIS_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_STATUS_TYPE'
CREATE TABLE ra_seis_status_type
(
STATUS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_SUMMARY_TYPE'
CREATE TABLE ra_seis_summary_type
(
SUMMARY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_SWEEP_TYPE'
CREATE TABLE ra_seis_sweep_type
(
SEIS_SWEEP_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEIS_TRANS_COMP_TYPE'
CREATE TABLE ra_seis_trans_comp_type
(
SEIS_TRANS_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEND_METHOD'
CREATE TABLE ra_send_method
(
SEND_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SERVICE_QUALITY'
CREATE TABLE ra_service_quality
(
SERVICE_QUALITY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SEVERITY'
CREATE TABLE ra_severity
(
SEVERITY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SF_AIRSTRIP_TYPE'
CREATE TABLE ra_sf_airstrip_type
(
AIRSTRIP_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SF_BRIDGE_TYPE'
CREATE TABLE ra_sf_bridge_type
(
BRIDGE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SF_COMPONENT_TYPE'
CREATE TABLE ra_sf_component_type
(
SF_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SF_DESC_TYPE'
CREATE TABLE ra_sf_desc_type
(
DESC_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SF_DESC_VALUE'
CREATE TABLE ra_sf_desc_value
(
DESC_TYPE VARCHAR(40) NOT NULL,
VALUE_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SF_DOCK_TYPE'
CREATE TABLE ra_sf_dock_type
(
DOCK_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SF_ELECTRIC_TYPE'
CREATE TABLE ra_sf_electric_type
(
ELECTRIC_FACILITY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SF_LANDING_TYPE'
CREATE TABLE ra_sf_landing_type
(
LANDING_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SF_MAINTAIN_TYPE'
CREATE TABLE ra_sf_maintain_type
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
MAINTAIN_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SF_PAD_TYPE'
CREATE TABLE ra_sf_pad_type
(
PAD_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SF_ROAD_TYPE'
CREATE TABLE ra_sf_road_type
(
ROAD_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SF_STATUS'
CREATE TABLE ra_sf_status
(
STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SF_STATUS_TYPE'
CREATE TABLE ra_sf_status_type
(
STATUS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SF_SURFACE_TYPE'
CREATE TABLE ra_sf_surface_type
(
SURFACE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SF_TOWER_TYPE'
CREATE TABLE ra_sf_tower_type
(
TOWER_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SF_VEHICLE_TYPE'
CREATE TABLE ra_sf_vehicle_type
(
VEHICLE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SF_VESSEL_ROLE'
CREATE TABLE ra_sf_vessel_role
(
VESSEL_ROLE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SF_VESSEL_TYPE'
CREATE TABLE ra_sf_vessel_type
(
VESSEL_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SF_XREF_TYPE'
CREATE TABLE ra_sf_xref_type
(
XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SHOW_TYPE'
CREATE TABLE ra_show_type
(
SHOW_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SHUTIN_PRESS_TYPE'
CREATE TABLE ra_shutin_press_type
(
SHUTIN_PRESSURE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SOURCE'
CREATE TABLE ra_source
(
SOURCE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
ROW_SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SOURCE_ORIGIN'
CREATE TABLE ra_source_origin
(
SOURCE VARCHAR(40) NOT NULL,
ORIGIN_OBS_NO INT,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
ROW_SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SPACING_UNIT_TYPE'
CREATE TABLE ra_spacing_unit_type
(
SPACING_UNIT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SPATIAL_DESC_COMP_TYPE'
CREATE TABLE ra_spatial_desc_comp_type
(
SP_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SPATIAL_DESC_TYPE'
CREATE TABLE ra_spatial_desc_type
(
SPATIAL_DESC_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SPATIAL_XREF_TYPE'
CREATE TABLE ra_spatial_xref_type
(
SPATIAL_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SP_POINT_VERSION_TYPE'
CREATE TABLE ra_sp_point_version_type
(
VERSION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SP_ZONE_DEFIN_XREF'
CREATE TABLE ra_sp_zone_defin_xref
(
XREF_REASON VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SP_ZONE_DERIV'
CREATE TABLE ra_sp_zone_deriv
(
ZONE_DERIVATION_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SP_ZONE_TYPE'
CREATE TABLE ra_sp_zone_type
(
ZONE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STATUS_GROUP'
CREATE TABLE ra_status_group
(
STATUS_GROUP VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STORE_STATUS'
CREATE TABLE ra_store_status
(
PHYSICAL_STORE_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STRAT_ACQTN_METHOD'
CREATE TABLE ra_strat_acqtn_method
(
ACQTN_METHOD_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STRAT_AGE_METHOD'
CREATE TABLE ra_strat_age_method
(
STRAT_AGE_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STRAT_ALIAS_TYPE'
CREATE TABLE ra_strat_alias_type
(
STRAT_ALIAS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STRAT_COLUMN_TYPE'
CREATE TABLE ra_strat_column_type
(
STRAT_COLUMN_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STRAT_COL_XREF_TYPE'
CREATE TABLE ra_strat_col_xref_type
(
STRAT_COLUMN_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STRAT_CORR_CRITERIA'
CREATE TABLE ra_strat_corr_criteria
(
STRAT_CORRELATION_CRITERIA VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STRAT_CORR_TYPE'
CREATE TABLE ra_strat_corr_type
(
STRAT_CORRELATION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STRAT_DESC_TYPE'
CREATE TABLE ra_strat_desc_type
(
DESCRIPTION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STRAT_EQUIV_DIRECT'
CREATE TABLE ra_strat_equiv_direct
(
STRAT_EQUIVALENCE_DIRECTION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STRAT_EQUIV_TYPE'
CREATE TABLE ra_strat_equiv_type
(
STRAT_EQUIVALENCE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STRAT_FLD_NODE_LOC'
CREATE TABLE ra_strat_fld_node_loc
(
NODE_LOC_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STRAT_HIERARCHY'
CREATE TABLE ra_strat_hierarchy
(
STRAT_HIERARCHY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STRAT_INTERP_METHOD'
CREATE TABLE ra_strat_interp_method
(
STRAT_INTERPRET_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STRAT_NAME_SET_TYPE'
CREATE TABLE ra_strat_name_set_type
(
STRAT_NAME_SET_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STRAT_OCCURRENCE_TYPE'
CREATE TABLE ra_strat_occurrence_type
(
OCCURRENCE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STRAT_STATUS'
CREATE TABLE ra_strat_status
(
STRAT_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STRAT_TOPO_RELATION'
CREATE TABLE ra_strat_topo_relation
(
TOPO_RELATION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STRAT_TYPE'
CREATE TABLE ra_strat_type
(
STRAT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STRAT_UNIT_COMP_TYPE'
CREATE TABLE ra_strat_unit_comp_type
(
STRAT_UNIT_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STRAT_UNIT_DESC'
CREATE TABLE ra_strat_unit_desc
(
STRAT_UNIT_DESC VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STRAT_UNIT_QUALIFIER'
CREATE TABLE ra_strat_unit_qualifier
(
QUALIFIER VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STRAT_UNIT_TYPE'
CREATE TABLE ra_strat_unit_type
(
STRAT_TYPE VARCHAR(40) NOT NULL,
STRAT_UNIT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STREAMER_COMP'
CREATE TABLE ra_streamer_comp
(
COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STREAMER_POSITION'
CREATE TABLE ra_streamer_position
(
STREAMER_POSITION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_STUDY_TYPE'
CREATE TABLE ra_study_type
(
STUDY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SUBSTANCE_COMP_TYPE'
CREATE TABLE ra_substance_comp_type
(
SUBSTANCE_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SUBSTANCE_PROPERTY'
CREATE TABLE ra_substance_property
(
SUBSTANCE_PROPERTY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SUBSTANCE_USE_RULE'
CREATE TABLE ra_substance_use_rule
(
SUBSTANCE_USE_RULE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SUBSTANCE_XREF_TYPE'
CREATE TABLE ra_substance_xref_type
(
SUBSTANCE_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SW_APP_BA_ROLE'
CREATE TABLE ra_sw_app_ba_role
(
SW_APP_BA_ROLE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SW_APP_FUNCTION'
CREATE TABLE ra_sw_app_function
(
SW_APP_FUNCTION VARCHAR(40) NOT NULL,
SW_APP_FUNCTION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SW_APP_FUNCTION_TYPE'
CREATE TABLE ra_sw_app_function_type
(
SW_APP_FUNCTION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_SW_APP_XREF_TYPE'
CREATE TABLE ra_sw_app_xref_type
(
SW_APP_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_TAX_CREDIT_CODE'
CREATE TABLE ra_tax_credit_code
(
TAX_CREDIT_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_TEST_EQUIPMENT'
CREATE TABLE ra_test_equipment
(
EQUIP_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_TEST_PERIOD_TYPE'
CREATE TABLE ra_test_period_type
(
TEST_PERIOD_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_TEST_RECOV_METHOD'
CREATE TABLE ra_test_recov_method
(
RECOVERY_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_TEST_RESULT'
CREATE TABLE ra_test_result
(
TEST_RESULT VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_TEST_SHUTOFF_TYPE'
CREATE TABLE ra_test_shutoff_type
(
TEST_SHUTOFF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_TEST_SUBTYPE'
CREATE TABLE ra_test_subtype
(
TEST_TYPE VARCHAR(40) NOT NULL,
TEST_SUBTYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_TIMEZONE'
CREATE TABLE ra_timezone
(
TIMEZONE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_TITLE_OWN_TYPE'
CREATE TABLE ra_title_own_type
(
TITLE_OWN_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_TOUR_OCCURRENCE_TYPE'
CREATE TABLE ra_tour_occurrence_type
(
OCCURRENCE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_TRACE_HEADER_FORMAT'
CREATE TABLE ra_trace_header_format
(
HEADER_FORMAT VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_TRACE_HEADER_WORD'
CREATE TABLE ra_trace_header_word
(
HEADER_WORD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_TRANS_COMP_TYPE'
CREATE TABLE ra_trans_comp_type
(
TRANS_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_TRANS_STATUS'
CREATE TABLE ra_trans_status
(
TRANSACTION_STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_TRANS_TYPE'
CREATE TABLE ra_trans_type
(
TRANS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_TREATMENT_FLUID'
CREATE TABLE ra_treatment_fluid
(
TREATMENT_FLUID VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_TREATMENT_TYPE'
CREATE TABLE ra_treatment_type
(
TREATMENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_TUBING_GRADE'
CREATE TABLE ra_tubing_grade
(
TUBING_GRADE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_TUBING_TYPE'
CREATE TABLE ra_tubing_type
(
TUBING_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_TVD_METHOD'
CREATE TABLE ra_tvd_method
(
TVD_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_VALUE_QUALITY'
CREATE TABLE ra_value_quality
(
VALUE_QUALITY VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_VELOCITY_COMPUTE'
CREATE TABLE ra_velocity_compute
(
COMPUTE_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_VELOCITY_DIMENSION'
CREATE TABLE ra_velocity_dimension
(
VELOCITY_DIMENSION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_VELOCITY_TYPE'
CREATE TABLE ra_velocity_type
(
VELOCITY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_VERTICAL_DATUM_TYPE'
CREATE TABLE ra_vertical_datum_type
(
VERTICAL_DATUM_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_VESSEL_REFERENCE'
CREATE TABLE ra_vessel_reference
(
REFERENCE_POINT VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_VESSEL_SIZE'
CREATE TABLE ra_vessel_size
(
VESSEL_SIZE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_VOLUME_FRACTION'
CREATE TABLE ra_volume_fraction
(
VOLUME_FRACTION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_VOLUME_METHOD'
CREATE TABLE ra_volume_method
(
VOLUME_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_VSP_TYPE'
CREATE TABLE ra_vsp_type
(
VSP_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WASTE_ADJUST_REASON'
CREATE TABLE ra_waste_adjust_reason
(
ADJUST_REASON VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WASTE_FACILITY_TYPE'
CREATE TABLE ra_waste_facility_type
(
WASTE_FACILITY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WASTE_HANDLING'
CREATE TABLE ra_waste_handling
(
WASTE_HANDLING_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WASTE_HAZARD_TYPE'
CREATE TABLE ra_waste_hazard_type
(
WASTE_HAZARD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WASTE_MATERIAL'
CREATE TABLE ra_waste_material
(
WASTE_MATERIAL VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WASTE_ORIGIN'
CREATE TABLE ra_waste_origin
(
WASTE_ORIGIN VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WATER_BOTTOM_ZONE'
CREATE TABLE ra_water_bottom_zone
(
WATER_BOTTOM_ZONE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WATER_CONDITION'
CREATE TABLE ra_water_condition
(
WATER_CONDITION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WATER_DATUM'
CREATE TABLE ra_water_datum
(
WATER_DATUM VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WATER_PROPERTY_CODE'
CREATE TABLE ra_water_property_code
(
WATER_PROPERTY VARCHAR(40) NOT NULL,
WATER_PROPERTY_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WEATHER_CONDITION'
CREATE TABLE ra_weather_condition
(
WEATHER_CONDITION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_ACTIVITY_CAUSE'
CREATE TABLE ra_well_activity_cause
(
CAUSE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_ACTIVITY_COMP_TYPE'
CREATE TABLE ra_well_activity_comp_type
(
WELL_ACTIVITY_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_ACT_TYPE_EQUIV'
CREATE TABLE ra_well_act_type_equiv
(
EQUIV_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_ALIAS_LOCATION'
CREATE TABLE ra_well_alias_location
(
LOCATION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_CIRC_PRESS_TYPE'
CREATE TABLE ra_well_circ_press_type
(
CIRC_PRESSURE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_CLASS'
CREATE TABLE ra_well_class
(
WELL_CLASS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_COMPONENT_TYPE'
CREATE TABLE ra_well_component_type
(
WELL_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_DATUM_TYPE'
CREATE TABLE ra_well_datum_type
(
WELL_DATUM_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_DOWNTIME_TYPE'
CREATE TABLE ra_well_downtime_type
(
DOWNTIME_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_DRILL_OP_TYPE'
CREATE TABLE ra_well_drill_op_type
(
DRILL_OP_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_FACILITY_USE_TYPE'
CREATE TABLE ra_well_facility_use_type
(
FACILITY_USE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_LEVEL_TYPE'
CREATE TABLE ra_well_level_type
(
WELL_LEVEL_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_LIC_COND'
CREATE TABLE ra_well_lic_cond
(
CONDITION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_LIC_COND_CODE'
CREATE TABLE ra_well_lic_cond_code
(
CONDITION_TYPE VARCHAR(40) NOT NULL,
CONDITION_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_LIC_DUE_CONDITION'
CREATE TABLE ra_well_lic_due_condition
(
DUE_CONDITION VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_LIC_VIOL_RESOL'
CREATE TABLE ra_well_lic_viol_resol
(
RESOLVE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_LIC_VIOL_TYPE'
CREATE TABLE ra_well_lic_viol_type
(
VIOLATION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_LOG_CLASS'
CREATE TABLE ra_well_log_class
(
WELL_LOG_CLASS_ID VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_NODE_PICK_METHOD'
CREATE TABLE ra_well_node_pick_method
(
PICK_METHOD VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_PROFILE_TYPE'
CREATE TABLE ra_well_profile_type
(
WELL_PROFILE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_QUALIFIC_TYPE'
CREATE TABLE ra_well_qualific_type
(
WELL_QUALIFIC_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_REF_VALUE_TYPE'
CREATE TABLE ra_well_ref_value_type
(
REFERENCE_VALUE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_RELATIONSHIP'
CREATE TABLE ra_well_relationship
(
WELL_RELATIONSHIP VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_SERVICE_METRIC'
CREATE TABLE ra_well_service_metric
(
SERVICE_METRIC VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_SERV_METRIC_CODE'
CREATE TABLE ra_well_serv_metric_code
(
SERVICE_METRIC VARCHAR(40) NOT NULL,
METRIC_CODE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_SET_ROLE'
CREATE TABLE ra_well_set_role
(
WELL_SET_ROLE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_SET_TYPE'
CREATE TABLE ra_well_set_type
(
WELL_SET_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_SF_USE_TYPE'
CREATE TABLE ra_well_sf_use_type
(
SF_USE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_STATUS'
CREATE TABLE ra_well_status
(
STATUS_TYPE VARCHAR(40) NOT NULL,
STATUS VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_STATUS_QUAL'
CREATE TABLE ra_well_status_qual
(
STATUS_TYPE VARCHAR(40) NOT NULL,
STATUS_QUALIFIER VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_STATUS_QUAL_VALUE'
CREATE TABLE ra_well_status_qual_value
(
STATUS_TYPE VARCHAR(40) NOT NULL,
STATUS VARCHAR(40) NOT NULL,
STATUS_QUALIFIER VARCHAR(40) NOT NULL,
STATUS_QUALIFIER_VALUE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_STATUS_SYMBOL'
CREATE TABLE ra_well_status_symbol
(
PLOT_SYMBOL VARCHAR(40) NOT NULL,
PLOT_SYMBOL_OBS_NO INT,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_STATUS_TYPE'
CREATE TABLE ra_well_status_type
(
STATUS_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_STATUS_XREF'
CREATE TABLE ra_well_status_xref
(
STATUS_XREF_ID VARCHAR(40) NOT NULL,
STATUS_XREF_OBS_NO INT,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_TEST_TYPE'
CREATE TABLE ra_well_test_type
(
WELL_TEST_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_XREF_TYPE'
CREATE TABLE ra_well_xref_type
(
XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WELL_ZONE_INT_VALUE'
CREATE TABLE ra_well_zone_int_value
(
VALUE_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WIND_STRENGTH'
CREATE TABLE ra_wind_strength
(
WIND_STRENGTH VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WORK_BID_TYPE'
CREATE TABLE ra_work_bid_type
(
WORK_BID_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WO_BA_ROLE'
CREATE TABLE ra_wo_ba_role
(
BA_ROLE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WO_COMPONENT_TYPE'
CREATE TABLE ra_wo_component_type
(
COMPONENT_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WO_CONDITION'
CREATE TABLE ra_wo_condition
(
WORK_ORDER_TYPE VARCHAR(40) NOT NULL,
CONDITION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WO_DELIVERY_TYPE'
CREATE TABLE ra_wo_delivery_type
(
DELIVERY_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WO_INSTRUCTION'
CREATE TABLE ra_wo_instruction
(
INSTRUCTION_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WO_TYPE'
CREATE TABLE ra_wo_type
(
WORK_ORDER_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RA_WO_XREF_TYPE'
CREATE TABLE ra_wo_xref_type
(
WO_XREF_TYPE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE REPORT_HIER'
CREATE TABLE report_hier
(
REPORT_HIERARCHY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HIERARCHY_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_NAME VARCHAR(255),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE REPORT_HIER_ALIAS'
CREATE TABLE report_hier_alias
(
REPORT_HIERARCHY_ID VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE REPORT_HIER_DESC'
CREATE TABLE report_hier_desc
(
HIERARCHY_TYPE_ID VARCHAR(40) NOT NULL,
LEVEL_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LEVEL_NAME VARCHAR(255),
LEVEL_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SYSTEM_ID VARCHAR(40),
TABLE_NAME VARCHAR(30),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE REPORT_HIER_LEVEL'
CREATE TABLE report_hier_level
(
REPORT_HIERARCHY_ID VARCHAR(40) NOT NULL,
COMPONENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
COMPONENT_TYPE VARCHAR(40),
CONTRACT_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
HIERARCHY_TYPE_ID VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LEVEL_SEQ_NO INT,
PARENT_COMPONENT_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROJECT_ID VARCHAR(40),
REMARK VARCHAR(2000),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
UWI VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE REPORT_HIER_TYPE'
CREATE TABLE report_hier_type
(
HIERARCHY_TYPE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HIERARCHY_NAME VARCHAR(255),
HIERARCHY_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE REPORT_HIER_USE'
CREATE TABLE report_hier_use
(
REPORT_HIERARCHY_ID VARCHAR(40) NOT NULL,
COMPONENT_ID VARCHAR(40) NOT NULL,
HIERARCHY_USE_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CONTRIBUTION_PERCENT DECIMAL(15,12),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REPORT_IND VARCHAR(1),
RESENT_ID VARCHAR(40),
SOURCE VARCHAR(40),
SUBSTANCE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RESENT_CLASS'
CREATE TABLE resent_class
(
RESENT_ID VARCHAR(40) NOT NULL,
RESERVE_CLASS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONFIDENCE_FACTOR DECIMAL(10,7),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REPORT_IND VARCHAR(1),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RESENT_COMPONENT'
CREATE TABLE resent_component
(
RESENT_ID VARCHAR(40) NOT NULL,
COMPONENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
COMPONENT_RESENT_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PERCENT_CONTRIBUTION DECIMAL(15,12),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROD_STRING_ID VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_FORM_OBS_NO INT,
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
REPORT_IND VARCHAR(1),
RESENT_COMPONENT_TYPE VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RESENT_ECO_RUN'
CREATE TABLE resent_eco_run
(
RESENT_ID VARCHAR(40) NOT NULL,
RESERVE_CLASS_ID VARCHAR(40) NOT NULL,
ECONOMICS_RUN_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
CURRENCY_UOM VARCHAR(40),
ECONOMIC_FORECAST DECIMAL(8,2),
ECONOMIC_SCENARIO VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROSS_IND VARCHAR(1),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
NET_IND VARCHAR(1),
NET_PRESENT_VALUE DECIMAL(12,2),
PARTNER_BA_ID VARCHAR(40),
PARTNER_OBS_NO INT,
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RESERVE_LIFE_INDEX DECIMAL(8,2),
SOURCE VARCHAR(40),
TECH_FORECAST DECIMAL(8,2),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RESENT_ECO_SCHEDULE'
CREATE TABLE resent_eco_schedule
(
RESENT_ID VARCHAR(40) NOT NULL,
RESERVE_CLASS_ID VARCHAR(40) NOT NULL,
ECONOMICS_RUN_ID VARCHAR(40) NOT NULL,
SCHEDULE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ECONOMIC_SCHEDULE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PERIOD_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
PRODUCT_IND VARCHAR(1),
PRODUCT_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
SCHEDULE_DATE TIMESTAMP(0),
SCHEDULE_DATE_DESC VARCHAR(8),
SCHEDULE_DESC VARCHAR(240),
SCHEDULE_VALUE DECIMAL(15,5),
SCHEDULE_VALUE_OUOM VARCHAR(40),
SCHEDULE_VALUE_UOM VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RESENT_ECO_VOLUME'
CREATE TABLE resent_eco_volume
(
RESENT_ID VARCHAR(40) NOT NULL,
RESERVE_CLASS_ID VARCHAR(40) NOT NULL,
ECONOMICS_RUN_ID VARCHAR(40) NOT NULL,
PRODUCT_TYPE VARCHAR(40) NOT NULL,
SUMMARY_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMAINING_BALANCE DECIMAL(14,4),
REMAINING_BALANCE_DATE TIMESTAMP(0),
REMAINING_BALANCE_DATE_DESC VARCHAR(8),
REMAINING_BALANCE_OUOM VARCHAR(40),
REMAINING_BALANCE_UOM VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RESENT_PRODUCT'
CREATE TABLE resent_product
(
RESENT_ID VARCHAR(40) NOT NULL,
RESERVE_CLASS_ID VARCHAR(40) NOT NULL,
PRODUCT_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REPORT_IND VARCHAR(1),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RESENT_PROD_PROPERTY'
CREATE TABLE resent_prod_property
(
RESENT_ID VARCHAR(40) NOT NULL,
RESERVE_CLASS_ID VARCHAR(40) NOT NULL,
PROPERTY_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HEAT_CONTENT DECIMAL(10,5),
HEAT_CONTENT_OUOM VARCHAR(40),
LOSS_FACTOR DECIMAL(10,5),
OIL_DENSITY DECIMAL(10,5),
OIL_DENSITY_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PRODUCT_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SULPHUR_CONTENT DECIMAL(10,5),
SULPHUR_CONTENT_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RESENT_REVISION_CAT'
CREATE TABLE resent_revision_cat
(
REVISION_CATEGORY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CATEGORY_NAME VARCHAR(255),
CATEGORY_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROSS_IND VARCHAR(1),
NET_IND VARCHAR(1),
PART_OF_CATEGORY_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RESENT_VOL_REGIME'
CREATE TABLE resent_vol_regime
(
RESENT_ID VARCHAR(40) NOT NULL,
VOLUME_REGIME_ID VARCHAR(40) NOT NULL,
RESENT_REGIME_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RESENT_VOL_REVISION'
CREATE TABLE resent_vol_revision
(
RESENT_ID VARCHAR(40) NOT NULL,
RESERVE_CLASS_ID VARCHAR(40) NOT NULL,
REVISION_ID VARCHAR(40) NOT NULL,
REVISION_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ANALYST_BA_ID VARCHAR(40),
APPROVED_BY_BA_ID VARCHAR(40),
APPROVED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROSS_REVISION_IND VARCHAR(1),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
NET_REVISION_IND VARCHAR(1),
NEW_VOLUME DECIMAL(14,4),
NEW_VOLUME_OUOM VARCHAR(40),
NEW_VOLUME_UOM VARCHAR(40),
PARTNER_BA_ID VARCHAR(40),
PARTNER_OBS_NO INT,
PPDM_GUID VARCHAR(38),
PRODUCT_TYPE VARCHAR(40),
PROJECT_ID VARCHAR(40),
REMARK VARCHAR(2000),
REPORT_IND VARCHAR(1),
REVISION_CATEGORY_ID VARCHAR(40),
REVISION_DATE TIMESTAMP(0),
REVISION_DATE_DESC VARCHAR(8),
REVISION_METHOD VARCHAR(40),
REVISION_VOLUME DECIMAL(14,4),
REVISION_VOLUME_OUOM VARCHAR(40),
REVISION_VOLUME_UOM VARCHAR(40),
SOURCE VARCHAR(40),
SUMMARY_ID VARCHAR(40),
SUMMARY_OBS_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RESENT_VOL_SUMMARY'
CREATE TABLE resent_vol_summary
(
RESENT_ID VARCHAR(40) NOT NULL,
RESERVE_CLASS_ID VARCHAR(40) NOT NULL,
PRODUCT_TYPE VARCHAR(40) NOT NULL,
SUMMARY_ID VARCHAR(40) NOT NULL,
SUMMARY_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ANALYST_BA_ID VARCHAR(40),
APPROVED_BY_BA_ID VARCHAR(40),
APPROVED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
CREATED_DATE_DESC VARCHAR(8),
CURRENT_BALANCE DECIMAL(14,4),
CURRENT_BALANCE_OUOM VARCHAR(40),
CURRENT_BALANCE_UOM VARCHAR(40),
DECLINE_CASE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROSS_SUMMARY_IND VARCHAR(1),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_PARTNER VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
MATERIAL_BALANCE_CASE_ID VARCHAR(40),
NET_SUMMARY_IND VARCHAR(1),
OPEN_BALANCE DECIMAL(14,4),
OPEN_BALANCE_OUOM VARCHAR(40),
OPEN_BALANCE_UOM VARCHAR(40),
PARTNER_OBS_NO INT,
PDEN_ID VARCHAR(40),
PDEN_PRODUCT_TYPE VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REPORT_IND VARCHAR(1),
SOURCE VARCHAR(40),
VOLUME_METHOD VARCHAR(40),
VOL_ANAL_CASE_ID VARCHAR(40),
YIELD_PARENT_PRODUCT VARCHAR(40),
YIELD_RATE DECIMAL(14,4),
YIELD_RATE_OUOM VARCHAR(40),
YIELD_RATE_UOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RESENT_XREF'
CREATE TABLE resent_xref
(
RESENT_ID VARCHAR(40) NOT NULL,
RESENT_ID2 VARCHAR(40) NOT NULL,
XREF_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
XREF_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RESERVE_CLASS'
CREATE TABLE reserve_class
(
RESERVE_CLASS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
CONFIDENCE_TYPE VARCHAR(40),
DEVELOPED_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PRODUCTION_IND VARCHAR(1),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
USE_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RESERVE_CLASS_CALC'
CREATE TABLE reserve_class_calc
(
RESERVE_CLASS_ID VARCHAR(40) NOT NULL,
FORMULA_ID VARCHAR(40) NOT NULL,
CALCULATION_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
CONTRIBUTION_FACTOR DECIMAL(10,5),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
ORIGIN_RESERVE_CLASS_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RESERVE_CLASS_FORMULA'
CREATE TABLE reserve_class_formula
(
RESERVE_CLASS_ID VARCHAR(40) NOT NULL,
FORMULA_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FORMULA VARCHAR(240),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
USE_RULE VARCHAR(2000),
USE_SEQ_NO INT,
USE_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RESERVE_ENTITY'
CREATE TABLE reserve_entity
(
RESENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CREATED_BY_BA_ID VARCHAR(40),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROUP_TYPE VARCHAR(40),
LAST_APPROVE_BA_ID VARCHAR(40),
LAST_UPDATE_BA_ID VARCHAR(40),
LAST_UPDATE_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PRIMARY_PRODUCT_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
REPORT_IND VARCHAR(1),
RESENT_LONG_NAME VARCHAR(255),
RESENT_SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
UPDATE_SCHEDULE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RESTRICTION'
CREATE TABLE restriction
(
RESTRICTION_ID VARCHAR(40) NOT NULL,
RESTRICTION_VERSION INT,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
END_DATE_EVENT TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REGULATORY_ACT VARCHAR(240),
REMARK VARCHAR(2000),
RESTRICTION_CLASS VARCHAR(40),
RESTRICTION_NAME VARCHAR(255),
RESTRICTION_TYPE VARCHAR(40),
REST_DURATION_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
START_DATE TIMESTAMP(0),
START_DATE_EVENT TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE REST_ACTIVITY'
CREATE TABLE rest_activity
(
RESTRICTION_ID VARCHAR(40) NOT NULL,
RESTRICTION_VERSION INT,
RESTRICTED_ACTIVITY VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE REST_CLASS'
CREATE TABLE rest_class
(
RESTRICTION_CLASS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REST_CLASS_NAME VARCHAR(255),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE REST_CONTACT'
CREATE TABLE rest_contact
(
RESTRICTION_ID VARCHAR(40) NOT NULL,
RESTRICTION_VERSION INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
CONTACT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ADDRESS_OBS_NO INT,
ADDRESS_SOURCE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PHONE_NUM VARCHAR(20),
PHONE_NUM_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PRIMARY_CONTACT_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE REST_REMARK'
CREATE TABLE rest_remark
(
RESTRICTION_ID VARCHAR(40) NOT NULL,
RESTRICTION_VERSION INT,
RESTRICTION_REMARK_ID VARCHAR(40) NOT NULL,
RESTRICTION_REMARK_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_CODE VARCHAR(40),
REMARK_DATE TIMESTAMP(0),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE REST_TEXT'
CREATE TABLE rest_text
(
RESTRICTION_ID VARCHAR(40) NOT NULL,
RESTRICTION_VERSION INT,
TEXT_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
BODY_OF_TEXT VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_AUX_CHANNEL'
CREATE TABLE rm_aux_channel
(
INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
CHANNEL_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CHANNEL_NUM VARCHAR(20),
CHANNEL_TYPE VARCHAR(40),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_CIRCULATION'
CREATE TABLE rm_circulation
(
CIRC_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AUTHORIZED_BY VARCHAR(30),
CHECKED_OUT_BY VARCHAR(40),
CIRC_DUE_DATE TIMESTAMP(0),
CIRC_IN_DATE TIMESTAMP(0),
CIRC_OUT_DATE TIMESTAMP(0),
CONDITION_IN VARCHAR(40),
CONDITION_OUT VARCHAR(40),
DATA_CIRC_STATUS VARCHAR(40),
DATA_CONTENT_SEQ_NO INT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROJECT_ID VARCHAR(40),
PROJECT_STEP_ID VARCHAR(40),
REFERENCE_NUM VARCHAR(20),
REMARK VARCHAR(2000),
RESERVED_BY VARCHAR(40),
RESERVED_IND VARCHAR(1),
SOURCE VARCHAR(40),
STATUS_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_CIRC_PROCESS'
CREATE TABLE rm_circ_process
(
CIRC_ID VARCHAR(40) NOT NULL,
DATA_CIRC_PROCESS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DATA_CIRC_PROCESS VARCHAR(40),
DATA_CIRC_PROCESS_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_COMPOSITE'
CREATE TABLE rm_composite
(
INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_COPY_RECORD'
CREATE TABLE rm_copy_record
(
OLD_PHYSICAL_ITEM_ID VARCHAR(40) NOT NULL,
NEW_PHYSICAL_ITEM_ID VARCHAR(40) NOT NULL,
COPY_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NEW_RECORD_NO BIGINT,
OLD_RECORD_NO BIGINT,
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_CREATOR'
CREATE TABLE rm_creator
(
INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
CREATOR_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CREATOR_BA_ID VARCHAR(40),
CREATOR_BA_TYPE VARCHAR(40),
CREATOR_NAME VARCHAR(255),
CREATOR_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIRST_NAME VARCHAR(255),
LAST_NAME VARCHAR(255),
MIDDLE_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_CUSTODY'
CREATE TABLE rm_custody
(
PHYSICAL_ITEM_ID VARCHAR(40) NOT NULL,
CUSTODY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
RECEIVE_BY VARCHAR(40),
RECEIVE_DATE TIMESTAMP(0),
REGISTRATION_NUM VARCHAR(30),
REMARK VARCHAR(2000),
SEND_BY VARCHAR(40),
SEND_DATE TIMESTAMP(0),
SEND_METHOD VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_DATA_CONTENT'
CREATE TABLE rm_data_content
(
INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
PHYSICAL_ITEM_ID VARCHAR(40) NOT NULL,
DATA_CONTENT_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STORE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_DATA_STORE'
CREATE TABLE rm_data_store
(
STORE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ADDRESS_OBS_NO INT,
ADDRESS_SOURCE VARCHAR(40),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CONTAINED_BY_STORE_ID VARCHAR(40),
DATA_STORE_HIER_ID VARCHAR(40),
DATA_STORE_NAME VARCHAR(255),
DATA_STORE_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HIER_LEVEL_ID VARCHAR(40),
LOCATION_ID VARCHAR(40),
LONG_LOCATION VARCHAR(40),
PHYSICAL_STORE_STATUS VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_LOCATION VARCHAR(40),
SOURCE VARCHAR(40),
TOTAL_CAPACITY BIGINT,
USED_CAPACITY BIGINT,
USED_CAPACITY_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_DATA_STORE_HIER'
CREATE TABLE rm_data_store_hier
(
DATA_STORE_HIER_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HIERARCHY_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_DATA_STORE_HIER_LEVEL'
CREATE TABLE rm_data_store_hier_level
(
DATA_STORE_HIER_ID VARCHAR(40) NOT NULL,
HIER_LEVEL_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DATA_STORE_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LEVEL_NAME VARCHAR(255),
LEVEL_SEQ_NO INT,
PARENT_HIER_LEVEL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_DATA_STORE_ITEM'
CREATE TABLE rm_data_store_item
(
STORE_ID VARCHAR(40) NOT NULL,
STRUCTURE_OBS_NO INT,
ITEM_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
ITEM_CATEGORY VARCHAR(40),
ITEM_SUB_CATEGORY VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
TOTAL_CAPACITY BIGINT,
USED_CAPACITY BIGINT,
USED_CAPACITY_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_DATA_STORE_MEDIA'
CREATE TABLE rm_data_store_media
(
STORE_ID VARCHAR(40) NOT NULL,
STRUCTURE_OBS_NO INT,
MEDIA_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MEDIA_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
TOTAL_CAPACITY BIGINT,
USED_CAPACITY BIGINT,
USED_CAPACITY_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_DATA_STORE_STRUCTURE'
CREATE TABLE rm_data_store_structure
(
STORE_ID VARCHAR(40) NOT NULL,
STRUCTURE_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
DIM_HEIGHT DECIMAL(10,5),
DIM_HEIGHT_OUOM VARCHAR(40),
DIM_HEIGHT_UOM VARCHAR(40),
DIM_LENGTH DECIMAL(10,5),
DIM_LENGTH_OUOM VARCHAR(40),
DIM_LENGTH_UOM VARCHAR(40),
DIM_WEIGHT DECIMAL(10,5),
DIM_WEIGHT_OUOM VARCHAR(40),
DIM_WEIGHT_UOM VARCHAR(40),
DIM_WIDTH DECIMAL(10,5),
DIM_WIDTH_OUOM VARCHAR(40),
DIM_WIDTH_UOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOWER_CONTAINED_STORE_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
TOTAL_CAPACITY BIGINT,
UPPER_CONTAINED_STORE_ID VARCHAR(40),
USED_CAPACITY BIGINT,
USED_CAPACITY_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_DECRYPT_KEY'
CREATE TABLE rm_decrypt_key
(
DECRYPT_KEY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DECRYPTION_TYPE VARCHAR(40),
DECRYPT_KEY VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_DOCUMENT'
CREATE TABLE rm_document
(
INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DOCUMENT_STATUS VARCHAR(40),
DOCUMENT_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_ENCODING'
CREATE TABLE rm_encoding
(
PHYSICAL_ITEM_ID VARCHAR(40) NOT NULL,
ENCODING_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
DECRYPT_KEY_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
ENCODING_TYPE VARCHAR(40),
ENCODING_VERSION VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_EQUIPMENT'
CREATE TABLE rm_equipment
(
INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_FILE_CONTENT'
CREATE TABLE rm_file_content
(
FILE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DIGITAL_FORMAT VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FILE_CONTENT BYTEA,
FILE_SIZE DECIMAL(20,5),
FILE_SIZE_UOM VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_FOSSIL'
CREATE TABLE rm_fossil
(
INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
TYPE_FOSSIL_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_IMAGE_COMP'
CREATE TABLE rm_image_comp
(
PHYSICAL_ITEM_ID VARCHAR(40) NOT NULL,
LOG_SECTION_ID_1 VARCHAR(40) NOT NULL,
LOG_SECTION_ID_2 VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
COMPOSITE_SEQ_NO INT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_IMAGE_LOC'
CREATE TABLE rm_image_loc
(
PHYSICAL_ITEM_ID VARCHAR(40) NOT NULL,
LOG_SECTION_ID VARCHAR(40) NOT NULL,
POSITION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOG_DEPTH DECIMAL(15,5),
LOG_DEPTH_OUOM VARCHAR(40),
LOG_DEPTH_UOM VARCHAR(40),
POSITION_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
X_POSITION DECIMAL(10,5),
Y_POSITION DECIMAL(10,5),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_IMAGE_SECT'
CREATE TABLE rm_image_sect
(
PHYSICAL_ITEM_ID VARCHAR(40) NOT NULL,
IMAGE_SECTION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
CALIBRATED_BY_BA_ID VARCHAR(40),
CALIBRATE_APPLICATION VARCHAR(40),
CALIBRATE_METHOD VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
IMAGE_SECTION_TYPE VARCHAR(40),
INDEX_TYPE VARCHAR(40),
LOG_MATRIX_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SCALE_DEPTH_INTERVAL DECIMAL(15,5),
SCALE_DEPTH_INTERVAL_OUOM VARCHAR(40),
SCALE_DEPTH_INTERVAL_UOM VARCHAR(40),
SCALE_LENGTH DECIMAL(10,3),
SCALE_LENGTH_OUOM VARCHAR(40),
SCALE_LENGTH_UOM VARCHAR(40),
SCALE_RATIO VARCHAR(240),
SECTION_DESC VARCHAR(240),
SOURCE VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
WELL_LOG_CLASS_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_INFORMATION_ITEM'
CREATE TABLE rm_information_item
(
INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
ABSTRACT VARCHAR(2000),
ACCEPTED_DATE TIMESTAMP(0),
ACCESS_CONDITION VARCHAR(2000),
ACTIVE_IND VARCHAR(1),
AVAILABLE_DATE TIMESTAMP(0),
COORD_ACQUISITION_ID VARCHAR(40),
COPYRIGHT_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GEOG_COORD_SYSTEM_ID VARCHAR(40),
GROUP_IND VARCHAR(1),
ISSUE_DATE TIMESTAMP(0),
ITEM_CATEGORY VARCHAR(40),
ITEM_SUB_CATEGORY VARCHAR(40),
LOCAL_COORD_SYSTEM_ID VARCHAR(40),
MAP_COORD_SYSTEM_ID VARCHAR(40),
MAX_LATITUDE DECIMAL(14,9),
MAX_LONGITUDE DECIMAL(14,9),
MIN_LATITUDE DECIMAL(14,9),
MIN_LONGITUDE DECIMAL(14,9),
MODIFIED_DATE TIMESTAMP(0),
ORIGIN_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PUBLISH_DATE TIMESTAMP(0),
PURPOSE VARCHAR(2000),
REFERENCE_NUM VARCHAR(240),
REMARK VARCHAR(2000),
SECURITY_DESC VARCHAR(240),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
SUBMIT_DATE TIMESTAMP(0),
TIME_PERIOD_DESC VARCHAR(240),
TITLE VARCHAR(240),
USE_CONDITION VARCHAR(2000),
VERSION_NUM VARCHAR(30),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_INFO_COORD_QUALITY'
CREATE TABLE rm_info_coord_quality
(
INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
QUALITY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
COMPLETENESS_DESC VARCHAR(1024),
COORD_ACCURACY_DESC VARCHAR(240),
COORD_ACQUISITION_ID VARCHAR(40),
COORD_QUALITY VARCHAR(40),
COORD_QUALITY_DESC VARCHAR(1024),
CORRECTED_DATE TIMESTAMP(0),
DEFICIENCY_IND VARCHAR(1),
DEFICIENCY_TYPE VARCHAR(40),
DESCRIBED_BY_BA_ID VARCHAR(40),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HORIZONTAL_ACCURACY DECIMAL(10,5),
HORIZONTAL_ACCURACY_DESC VARCHAR(240),
HORIZONTAL_ACCURACY_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
QUALITY_DATE TIMESTAMP(0),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
VERTICAL_ACCURACY DECIMAL(10,5),
VERTICAL_ACCURACY_DESC VARCHAR(240),
VERTICAL_ACCURACY_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_INFO_DATA_QUALITY'
CREATE TABLE rm_info_data_quality
(
INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
QUALITY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ATTRIBUTE_ACCURACY VARCHAR(40),
ATTRIBUTE_ACCURACY_DESC VARCHAR(240),
COMPLETENESS_DESC VARCHAR(1024),
CORRECTED_DATE TIMESTAMP(0),
DEFICIENCY_IND VARCHAR(1),
DEFICIENCY_TYPE VARCHAR(40),
DESCRIBED_BY_BA_ID VARCHAR(40),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INFORMATION_QUALITY VARCHAR(40),
INFORMATION_QUALITY_DESC VARCHAR(1024),
PPDM_GUID VARCHAR(38),
QUALITY_DATE TIMESTAMP(0),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_INFO_ITEM_ALIAS'
CREATE TABLE rm_info_item_alias
(
INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_INFO_ITEM_BA'
CREATE TABLE rm_info_item_ba
(
INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
CONTACT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONTACT_BA_ID VARCHAR(40),
CONTACT_BA_TYPE VARCHAR(40),
CONTACT_FULL_NAME VARCHAR(255),
CONTACT_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIRST_NAME VARCHAR(255),
INSTRUCTION VARCHAR(2000),
LAST_NAME VARCHAR(255),
MIDDLE_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_INFO_ITEM_CONTENT'
CREATE TABLE rm_info_item_content
(
INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
CONTENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
APPLIC_ATTACHMENT_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_LICENSEE_BA_ID VARCHAR(40),
BA_LICENSE_ID VARCHAR(40),
BIN_GRID_ID VARCHAR(40),
BIN_GRID_SOURCE VARCHAR(40),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
COLUMN_NAME VARCHAR(30),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTENT_TYPE VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
DISCUSSION_ID VARCHAR(40),
DRILL_REPORT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
ECOZONE_SET_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_LICENSE_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_DESC_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
HSE_INCIDENT_ID VARCHAR(40),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
INTERP_ID VARCHAR(40),
JURISDICTION VARCHAR(40),
LAND_REQUEST_ID VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LAND_SALE_OFFERING_ID VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
LITH_SAMPLE_ID VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
ORGANIZATION_ID VARCHAR(40),
ORGANIZATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_CUSTODY_ID VARCHAR(40),
PHYSICAL_ITEM_ID VARCHAR(40),
PLATFORM_ID VARCHAR(40),
PLATFORM_SF_SUBTYPE VARCHAR(30),
POOL_ID VARCHAR(40),
PPDM_AUDIT_ROW_GUID VARCHAR(38),
PPDM_AUDIT_SEQ_NO INT,
PPDM_GUID VARCHAR(38),
PRODUCT_TYPE VARCHAR(40),
PROD_STRING_ID VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PROJECT_STEP_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
RESERVE_PRODUCT VARCHAR(40),
RESERVE_REVISION_ID VARCHAR(40),
RESERVE_REVISION_OBS_NO INT,
RESERVE_SUMMARY_ID VARCHAR(40),
RESERVE_SUMMARY_OBS_NO INT,
RESTRICTION_ID VARCHAR(40),
RESTRICTION_VERSION INT,
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_LICENSE_ID VARCHAR(40),
SEIS_PATCH_ID VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STRAT_COLUMN_ID VARCHAR(40),
STRAT_COLUMN_SOURCE VARCHAR(40),
STRAT_FIELD_STATION_ID VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SUPPORT_FACILITY_SUBTYPE VARCHAR(30),
SYSTEM_ID VARCHAR(40),
TABLE_NAME VARCHAR(30),
UWI VARCHAR(40),
VELOCITY_VOLUME_ID VARCHAR(40),
WC_CORE_ID VARCHAR(40),
WC_SOURCE VARCHAR(40),
WC_UWI VARCHAR(40),
WDS_SOURCE VARCHAR(40),
WDS_SURVEY_ID VARCHAR(40),
WDS_UWI VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_LICENSE_ID VARCHAR(40),
WELL_LICENSE_SOURCE VARCHAR(40),
WELL_LOG_CURVE_ID VARCHAR(40),
WELL_LOG_ID VARCHAR(40),
WELL_LOG_SOURCE VARCHAR(40),
WL_DGTZ_CURVE_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
WTF_FLUID_TYPE VARCHAR(40),
WTF_PERIOD_OBS_NO INT,
WTF_PERIOD_TYPE VARCHAR(40),
WTF_RUN_NUM VARCHAR(4),
WTF_SOURCE VARCHAR(40),
WTF_TEST_NUM VARCHAR(4),
WTF_TEST_TYPE VARCHAR(40),
WTP_PERIOD_OBS_NO INT,
WTP_PERIOD_TYPE VARCHAR(40),
WTP_RUN_NUM VARCHAR(4),
WTP_SOURCE VARCHAR(40),
WTP_TEST_NUM VARCHAR(4),
WTP_TEST_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_INFO_ITEM_DESC'
CREATE TABLE rm_info_item_desc
(
INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
DESCRIPTION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM VARCHAR(40),
AVERAGE_VALUE_UOM VARCHAR(40),
COST DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
CURRENCY_UOM VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
DESCRIPTION VARCHAR(2000),
DESCRIPTION_DATE TIMESTAMP(0),
DESCRIPTION_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
METADATA_CODE VARCHAR(40),
METADATA_TYPE VARCHAR(40),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SPEC_DESC VARCHAR(240),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_INFO_ITEM_GROUP'
CREATE TABLE rm_info_item_group
(
GROUP_INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
GROUP_INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
GROUP_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROUP_SEQ_NO INT,
GROUP_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_INFO_ITEM_MAINT'
CREATE TABLE rm_info_item_maint
(
INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
MAINTAIN_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INSTRUCTION VARCHAR(2000),
MAINT_BA_ID VARCHAR(40),
MAINT_COMPLETE_DATE TIMESTAMP(0),
MAINT_DUE_DATE TIMESTAMP(0),
MAINT_PERIOD DECIMAL(10,5),
MAINT_PERIOD_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SCHEDULED_IND VARCHAR(1),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_INFO_ITEM_ORIGIN'
CREATE TABLE rm_info_item_origin
(
INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
ORIGIN_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INFORMATION_PROCESS VARCHAR(40),
PARENT_INFORMATION_ITEM_ID VARCHAR(40),
PARENT_INFO_ITEM_SUBTYPE VARCHAR(30),
PPDM_GUID VARCHAR(38),
PROCESSOR VARCHAR(40),
PROCESS_DATE TIMESTAMP(0),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
VERSION VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_INFO_ITEM_STATUS'
CREATE TABLE rm_info_item_status
(
INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
STATUS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STATUS VARCHAR(40),
STATUS_DATE TIMESTAMP(0),
STATUS_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_KEYWORD'
CREATE TABLE rm_keyword
(
INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
KEYWORD_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REPORTED_KEYWORD VARCHAR(240),
SOURCE VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_LITH_SAMPLE'
CREATE TABLE rm_lith_sample
(
INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_MAP'
CREATE TABLE rm_map
(
INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAP_SCALE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_PHYSICAL_ITEM'
CREATE TABLE rm_physical_item
(
PHYSICAL_ITEM_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BAR_CODE VARCHAR(240),
CATALOGUE_BY_NAME VARCHAR(255),
CATALOGUE_DATE TIMESTAMP(0),
CERTIFIED_TRUE_COPY_IND VARCHAR(1),
CIRCULATION_ALLOWED_IND VARCHAR(1),
CIRCULATION_OUT_IND VARCHAR(1),
COLOR_FORMAT VARCHAR(40),
CREATE_DATE TIMESTAMP(0),
DIGITAL_FORMAT VARCHAR(40),
DIGITAL_SIZE DOUBLE PRECISION,
DIGITAL_SIZE_UOM VARCHAR(40),
DIM_HEIGHT DECIMAL(10,5),
DIM_HEIGHT_UOM VARCHAR(40),
DIM_LENGTH DECIMAL(10,5),
DIM_LENGTH_UOM VARCHAR(40),
DIM_WEIGHT DECIMAL(10,5),
DIM_WEIGHT_UOM VARCHAR(40),
DIM_WIDTH DECIMAL(10,5),
DIM_WIDTH_UOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FILE_COUNT BIGINT,
GROUP_IND VARCHAR(1),
IMAGE_RESOLUTION_UOM VARCHAR(40),
IMAGE_X_RESOLUTION DECIMAL(10,5),
IMAGE_Y_RESOLUTION DECIMAL(10,5),
ITEM_CATEGORY VARCHAR(40),
ITEM_SUB_CATEGORY VARCHAR(40),
LABEL VARCHAR(30),
LANGUAGE VARCHAR(40),
LAST_CONDITION VARCHAR(40),
LOCATION_REFERENCE VARCHAR(240),
MEDIA_TYPE VARCHAR(40),
ORIGINAL_FILE_NAME VARCHAR(255),
ORIGINAL_IND VARCHAR(1),
OUTPUT_FILE_NAME VARCHAR(255),
PAGE_COUNT DECIMAL(10,5),
PHYSICAL_ITEM_STATUS VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
QC_BY_NAME VARCHAR(255),
REMARK VARCHAR(2000),
RETENTION_PERIOD VARCHAR(40),
SALE_ALLOWED_IND VARCHAR(1),
SOURCE VARCHAR(40),
STORE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_PHYS_ITEM_CONDITION'
CREATE TABLE rm_phys_item_condition
(
PHYSICAL_ITEM_ID VARCHAR(40) NOT NULL,
CONDITION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONDITION_TYPE VARCHAR(40),
CORRECTION_METHOD VARCHAR(40),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
ERROR_COUNT BIGINT,
EXPIRY_DATE TIMESTAMP(0),
ORIGIN_SEQ_NO INT,
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_PHYS_ITEM_GROUP'
CREATE TABLE rm_phys_item_group
(
GROUP_PHYSICAL_ITEM_ID VARCHAR(40) NOT NULL,
PHYSICAL_ITEM_ID VARCHAR(40) NOT NULL,
GROUP_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROUP_TYPE VARCHAR(40),
ORDER_SEQ_NO INT,
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_PHYS_ITEM_MAINT'
CREATE TABLE rm_phys_item_maint
(
PHYSICAL_ITEM_ID VARCHAR(40) NOT NULL,
MAINT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ACTUAL_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAINTAIN_PROCESS VARCHAR(40),
MAINT_BA_ID VARCHAR(40),
MAINT_BY_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SCHEDULED_DATE TIMESTAMP(0),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_PHYS_ITEM_ORIGIN'
CREATE TABLE rm_phys_item_origin
(
PHYSICAL_ITEM_ID VARCHAR(40) NOT NULL,
ORIGIN_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PARENT_PHYSICAL_ITEM_ID VARCHAR(40),
PHYSICAL_PROCESS VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROCESS_DATE TIMESTAMP(0),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
VERSION VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_PHYS_ITEM_STORE'
CREATE TABLE rm_phys_item_store
(
STORE_ID VARCHAR(40) NOT NULL,
PHYSICAL_ITEM_ID VARCHAR(40) NOT NULL,
STORE_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
CREATE_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PHYSICAL_ITEM_STATUS VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_LOCATION_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_SEIS_TRACE'
CREATE TABLE rm_seis_trace
(
INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DATUM_VEL_CORRECTION VARCHAR(240),
DATUM_VEL_CORRECTION_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIRST_SAMPLE_TIME DECIMAL(10,5),
FIRST_SAMPLE_TIMEZONE VARCHAR(40),
HORIZONTAL_SCALE VARCHAR(40),
HORIZONTAL_SCALE_OUOM VARCHAR(40),
PHASE VARCHAR(40),
POLARITY VARCHAR(40),
PPDM_GUID VARCHAR(38),
RECORD_LENGTH DECIMAL(10,5),
RECORD_LENGTH_OUOM VARCHAR(40),
REFERENCE_DATUM DECIMAL(10,5),
REFERENCE_DATUM_OUOM VARCHAR(40),
REMARK VARCHAR(2000),
REPLACEMENT_VEL DECIMAL(10,5),
REPLACEMENT_VEL_OUOM VARCHAR(40),
REPORTED_FIRST_REF_NUM VARCHAR(30),
REPORTED_LAST_REF_NUM VARCHAR(30),
REPORTED_REF_NUM_TYPE VARCHAR(40),
SAMPLE_RATE DECIMAL(8,4),
SAMPLE_RATE_OUOM VARCHAR(40),
SAMPLE_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
STATIC_CORRECTION DECIMAL(10,5),
STATIC_CORRECTION_OUOM VARCHAR(40),
VARIABLE_AREA_IND VARCHAR(1),
VERTICAL_SCALE VARCHAR(40),
VERTICAL_SCALE_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_SPATIAL_DATASET'
CREATE TABLE rm_spatial_dataset
(
INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_THESAURUS'
CREATE TABLE rm_thesaurus
(
THESAURUS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
THESAURUS_NAME VARCHAR(255),
THESAURUS_VERSION VARCHAR(20),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_THESAURUS_GLOSSARY'
CREATE TABLE rm_thesaurus_glossary
(
THESAURUS_ID VARCHAR(40) NOT NULL,
THESAURUS_WORD_ID VARCHAR(40) NOT NULL,
GLOSSARY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GLOSSARY_DEFINITION VARCHAR(2000),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_THESAURUS_WORD'
CREATE TABLE rm_thesaurus_word
(
THESAURUS_ID VARCHAR(40) NOT NULL,
THESAURUS_WORD_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
THESAURUS_WORD VARCHAR(255),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_THESAURUS_WORD_XREF'
CREATE TABLE rm_thesaurus_word_xref
(
THESAURUS_ID1 VARCHAR(40) NOT NULL,
THESAURUS_WORD_ID1 VARCHAR(40) NOT NULL,
THESAURUS_ID2 VARCHAR(40) NOT NULL,
THESAURUS_WORD_ID2 VARCHAR(40) NOT NULL,
XREF_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
RELATIONSHIP_DESCRIPTION VARCHAR(2000),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
THESAURUS_XREF_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_TRACE_HEADER'
CREATE TABLE rm_trace_header
(
INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
HEADER_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HEADER_FORMAT VARCHAR(40),
HEADER_OFFSET DECIMAL(10,5),
HEADER_WORD VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
WORD_LENGTH DECIMAL(10,5),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE RM_WELL_LOG'
CREATE TABLE rm_well_log
(
INFO_ITEM_SUBTYPE VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DISPLAY_INTERVAL DECIMAL(10,5),
DISPLAY_INTERVAL_UOM VARCHAR(40),
DISPLAY_SCALE DECIMAL(10,5),
DISPLAY_SCALE_UOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTERPRETED_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REPORTED_BASE_DEPTH DECIMAL(15,5),
REPORTED_BASE_DEPTH_OUOM VARCHAR(40),
REPORTED_TOP_DEPTH DECIMAL(15,5),
REPORTED_TOP_DEPTH_OUOM VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ACCESS_CONDITION'
CREATE TABLE r_access_condition
(
ACCESS_CONDITION_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ACCOUNT_PROC_TYPE'
CREATE TABLE r_account_proc_type
(
ACCOUNT_PROC_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ACTIVITY_SET_TYPE'
CREATE TABLE r_activity_set_type
(
ACTIVITY_SET_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ACTIVITY_TYPE'
CREATE TABLE r_activity_type
(
ACTIVITY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ADDITIVE_METHOD'
CREATE TABLE r_additive_method
(
ADDITIVE_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ADDITIVE_TYPE'
CREATE TABLE r_additive_type
(
ADDITIVE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ADDRESS_TYPE'
CREATE TABLE r_address_type
(
ADDRESS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_AIRCRAFT_TYPE'
CREATE TABLE r_aircraft_type
(
AIRCRAFT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_AIR_GAS_CODE'
CREATE TABLE r_air_gas_code
(
AIR_GAS_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ALIAS_REASON_TYPE'
CREATE TABLE r_alias_reason_type
(
REASON_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ALIAS_TYPE'
CREATE TABLE r_alias_type
(
ALIAS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ALLOCATION_TYPE'
CREATE TABLE r_allocation_type
(
ALLOCATION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ALLOWABLE_EXPENSE'
CREATE TABLE r_allowable_expense
(
ALLOWABLE_EXPENSE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANALYSIS_PROPERTY'
CREATE TABLE r_analysis_property
(
ANALYSIS_PROPERTY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_ACCURACY_TYPE'
CREATE TABLE r_anl_accuracy_type
(
ACCURACY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_BA_ROLE_TYPE'
CREATE TABLE r_anl_ba_role_type
(
BA_ROLE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_CALC_EQUIV_TYPE'
CREATE TABLE r_anl_calc_equiv_type
(
CALCULATION_EQUIV_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_CHRO_PROPERTY'
CREATE TABLE r_anl_chro_property
(
CHRO_PROPERTY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_COMP_TYPE'
CREATE TABLE r_anl_comp_type
(
ANL_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_CONFIDENCE_TYPE'
CREATE TABLE r_anl_confidence_type
(
CONFIDENCE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_DETAIL_REF_VALUE'
CREATE TABLE r_anl_detail_ref_value
(
REFERENCE_VALUE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_DETAIL_TYPE'
CREATE TABLE r_anl_detail_type
(
ANL_DETAIL_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_ELEMENT_VALUE_CODE'
CREATE TABLE r_anl_element_value_code
(
VALUE_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_ELEMENT_VALUE_TYPE'
CREATE TABLE r_anl_element_value_type
(
ANL_VALUE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_EQUIP_ROLE'
CREATE TABLE r_anl_equip_role
(
ANL_EQUIP_ROLE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_FORMULA_TYPE'
CREATE TABLE r_anl_formula_type
(
FORMULA_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_GAS_CHRO_VALUE'
CREATE TABLE r_anl_gas_chro_value
(
ANL_VALUE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_GAS_PROPERTY'
CREATE TABLE r_anl_gas_property
(
ANALYSIS_PROPERTY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_GAS_PROPERTY_CODE'
CREATE TABLE r_anl_gas_property_code
(
ANALYSIS_PROPERTY VARCHAR(40) NOT NULL,
PROPERTY_VALUE_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_METHOD_EQUIV_TYPE'
CREATE TABLE r_anl_method_equiv_type
(
METHOD_EQUIV_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_METHOD_SET_TYPE'
CREATE TABLE r_anl_method_set_type
(
METHOD_SET_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_MISSING_REP'
CREATE TABLE r_anl_missing_rep
(
MISSING_REPRESENTATION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_NULL_REP'
CREATE TABLE r_anl_null_rep
(
NULL_REPRESENTATION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_OIL_PROPERTY_CODE'
CREATE TABLE r_anl_oil_property_code
(
ANALYSIS_PROPERTY VARCHAR(40) NOT NULL,
PROPERTY_VALUE_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_PARAMETER_TYPE'
CREATE TABLE r_anl_parameter_type
(
PARAMETER_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_PROBLEM_RESOLUTION'
CREATE TABLE r_anl_problem_resolution
(
RESOLUTION_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_PROBLEM_RESULT'
CREATE TABLE r_anl_problem_result
(
PROBLEM_RESULT VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_PROBLEM_SEVERITY'
CREATE TABLE r_anl_problem_severity
(
PROBLEM_SEVERITY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_PROBLEM_TYPE'
CREATE TABLE r_anl_problem_type
(
PROBLEM_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_REF_VALUE'
CREATE TABLE r_anl_ref_value
(
REFERENCE_VALUE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_REMARK_TYPE'
CREATE TABLE r_anl_remark_type
(
ANL_REMARK_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_REPEATABILITY'
CREATE TABLE r_anl_repeatability
(
REPEATABILITY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_STEP_XREF'
CREATE TABLE r_anl_step_xref
(
STEP_XREF_REASON VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_TOLERANCE_TYPE'
CREATE TABLE r_anl_tolerance_type
(
TOLERANCE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_VALID_MEASUREMENT'
CREATE TABLE r_anl_valid_measurement
(
MEASUREMENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_VALID_MEAS_VALUE'
CREATE TABLE r_anl_valid_meas_value
(
MEASUREMENT_TYPE VARCHAR(40) NOT NULL,
VALID_VALUE_TEXT VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_VALID_PROBLEM'
CREATE TABLE r_anl_valid_problem
(
PROBLEM_RESULT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ANL_WATER_PROPERTY'
CREATE TABLE r_anl_water_property
(
WATER_PROPERTY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_AOF_ANALYSIS_TYPE'
CREATE TABLE r_aof_analysis_type
(
AOF_ANALYSIS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_AOF_CALC_METHOD'
CREATE TABLE r_aof_calc_method
(
AOF_CALCULATE_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_API_LOG_SYSTEM'
CREATE TABLE r_api_log_system
(
API_CODE_SYSTEM VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_APPLICATION_COMP_TYPE'
CREATE TABLE r_application_comp_type
(
APPLICATION_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_APPLIC_ATTACHMENT'
CREATE TABLE r_applic_attachment
(
ATTACHMENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_APPLIC_BA_ROLE'
CREATE TABLE r_applic_ba_role
(
APPLICATION_BA_ROLE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_APPLIC_DECISION'
CREATE TABLE r_applic_decision
(
APPLICATION_DECISION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_APPLIC_DESC'
CREATE TABLE r_applic_desc
(
APPLICATION_TYPE VARCHAR(40) NOT NULL,
APPLIC_DESC_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_APPLIC_REMARK_TYPE'
CREATE TABLE r_applic_remark_type
(
REMARK_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_APPLIC_STATUS'
CREATE TABLE r_applic_status
(
APPLICATION_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_APPLIC_TYPE'
CREATE TABLE r_applic_type
(
APPLICATION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_AREA_COMPONENT_TYPE'
CREATE TABLE r_area_component_type
(
AREA_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_AREA_CONTAIN_TYPE'
CREATE TABLE r_area_contain_type
(
CONTAIN_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_AREA_DESC_CODE'
CREATE TABLE r_area_desc_code
(
AREA_DESC_TYPE VARCHAR(40) NOT NULL,
AREA_DESC_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_AREA_DESC_TYPE'
CREATE TABLE r_area_desc_type
(
AREA_DESC_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_AREA_TYPE'
CREATE TABLE r_area_type
(
AREA_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_AREA_XREF_TYPE'
CREATE TABLE r_area_xref_type
(
AREA_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_AUTHORITY_TYPE'
CREATE TABLE r_authority_type
(
AUTHORITY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_AUTHOR_TYPE'
CREATE TABLE r_author_type
(
AUTHOR_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BA_AUTHORITY_COMP_TYPE'
CREATE TABLE r_ba_authority_comp_type
(
BA_AUTHORITY_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BA_CATEGORY'
CREATE TABLE r_ba_category
(
BA_CATEGORY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BA_COMPONENT_TYPE'
CREATE TABLE r_ba_component_type
(
BUSINESS_ASSOCIATE_COMP_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BA_CONTACT_LOC_TYPE'
CREATE TABLE r_ba_contact_loc_type
(
CONTACT_LOC_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BA_CREW_OVERHEAD_TYPE'
CREATE TABLE r_ba_crew_overhead_type
(
OVERHEAD_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BA_CREW_TYPE'
CREATE TABLE r_ba_crew_type
(
CREW_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BA_DESC_CODE'
CREATE TABLE r_ba_desc_code
(
BA_DESC_TYPE VARCHAR(40) NOT NULL,
BA_DESC_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BA_DESC_REF_VALUE'
CREATE TABLE r_ba_desc_ref_value
(
REFERENCE_VALUE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BA_DESC_TYPE'
CREATE TABLE r_ba_desc_type
(
BA_DESC_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BA_LIC_DUE_CONDITION'
CREATE TABLE r_ba_lic_due_condition
(
DUE_CONDITION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BA_LIC_VIOLATION_TYPE'
CREATE TABLE r_ba_lic_violation_type
(
VIOLATION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BA_LIC_VIOL_RESOL'
CREATE TABLE r_ba_lic_viol_resol
(
RESOLVE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BA_ORGANIZATION_COMP_TYPE'
CREATE TABLE r_ba_organization_comp_type
(
BA_ORGANIZATION_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BA_ORGANIZATION_TYPE'
CREATE TABLE r_ba_organization_type
(
ORGANIZATION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BA_PERMIT_TYPE'
CREATE TABLE r_ba_permit_type
(
PERMIT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BA_PREF_TYPE'
CREATE TABLE r_ba_pref_type
(
PREFERENCE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BA_SERVICE_TYPE'
CREATE TABLE r_ba_service_type
(
BA_SERVICE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BA_STATUS'
CREATE TABLE r_ba_status
(
BA_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BA_TYPE'
CREATE TABLE r_ba_type
(
BA_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BA_XREF_TYPE'
CREATE TABLE r_ba_xref_type
(
BA_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BHP_METHOD'
CREATE TABLE r_bhp_method
(
BHP_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BH_PRESS_TEST_TYPE'
CREATE TABLE r_bh_press_test_type
(
BH_PRESSURE_TEST_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BIT_BEARING_CONDITION'
CREATE TABLE r_bit_bearing_condition
(
BEARING_CONDITION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BIT_CUT_STRUCT_DULL'
CREATE TABLE r_bit_cut_struct_dull
(
CUTTING_STRUCTURE_MDC VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BIT_CUT_STRUCT_INNER'
CREATE TABLE r_bit_cut_struct_inner
(
CUTTING_STRUCTURE_T1 VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BIT_CUT_STRUCT_LOC'
CREATE TABLE r_bit_cut_struct_loc
(
CUTTING_STRUCTURE_LOC VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BIT_CUT_STRUCT_OUTER'
CREATE TABLE r_bit_cut_struct_outer
(
CUTTING_STRUCTURE_TO VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BIT_REASON_PULLED'
CREATE TABLE r_bit_reason_pulled
(
REASON_PULLED VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BLOWOUT_FLUID'
CREATE TABLE r_blowout_fluid
(
BLOWOUT_FLUID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_BUILDUP_RADIUS_TYPE'
CREATE TABLE r_buildup_radius_type
(
BUILDUP_RADIUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CAT_ADDITIVE_GROUP'
CREATE TABLE r_cat_additive_group
(
ADDITIVE_GROUP VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CAT_ADDITIVE_QUANTITY'
CREATE TABLE r_cat_additive_quantity
(
QUANTITY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CAT_ADDITIVE_SPEC'
CREATE TABLE r_cat_additive_spec
(
ADDITIVE_SPEC_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CAT_ADDITIVE_XREF'
CREATE TABLE r_cat_additive_xref
(
ADDITIVE_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CAT_EQUIP_GROUP'
CREATE TABLE r_cat_equip_group
(
CAT_EQUIP_GROUP VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CAT_EQUIP_SPEC'
CREATE TABLE r_cat_equip_spec
(
SPEC_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CAT_EQUIP_SPEC_CODE'
CREATE TABLE r_cat_equip_spec_code
(
SPEC_TYPE VARCHAR(40) NOT NULL,
SPEC_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CAT_EQUIP_TYPE'
CREATE TABLE r_cat_equip_type
(
CAT_EQUIP_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CEMENT_TYPE'
CREATE TABLE r_cement_type
(
CEMENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CHECKSHOT_SRVY_TYPE'
CREATE TABLE r_checkshot_srvy_type
(
CHECKSHOT_SURVEY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CLASS_DESC_PROPERTY'
CREATE TABLE r_class_desc_property
(
DESC_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CLASS_LEV_COMP_TYPE'
CREATE TABLE r_class_lev_comp_type
(
CLASS_LEVEL_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CLASS_LEV_XREF_TYPE'
CREATE TABLE r_class_lev_xref_type
(
LEVEL_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CLASS_SYSTEM_DIMENSION'
CREATE TABLE r_class_system_dimension
(
CLASS_DIMENSION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CLASS_SYST_XREF_TYPE'
CREATE TABLE r_class_syst_xref_type
(
SYSTEM_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CLIMATE'
CREATE TABLE r_climate
(
CLIMATE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_COAL_RANK_SCHEME_TYPE'
CREATE TABLE r_coal_rank_scheme_type
(
COAL_RANK_SCHEME_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CODE_VERSION_XREF_TYPE'
CREATE TABLE r_code_version_xref_type
(
CODE_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_COLLAR_TYPE'
CREATE TABLE r_collar_type
(
COLLAR_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_COLOR'
CREATE TABLE r_color
(
COLOR VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
COLOR_INTERPRETATION VARCHAR(1024),
COLOR_PALETTE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
VITRINITE_EQUIVALENCE VARCHAR(1024),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_COLOR_EQUIV'
CREATE TABLE r_color_equiv
(
COLOR_1 VARCHAR(40) NOT NULL,
COLOR_2 VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIVALENT_TYPE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_COLOR_FORMAT'
CREATE TABLE r_color_format
(
COLOR_FORMAT VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_COLOR_PALETTE'
CREATE TABLE r_color_palette
(
COLOR_PALETTE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PALETTE_PURPOSE VARCHAR(1024),
PALETTE_TYPE VARCHAR(40),
PHYSICAL_ITEM_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_COMPLETION_METHOD'
CREATE TABLE r_completion_method
(
COMPLETION_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_COMPLETION_STATUS'
CREATE TABLE r_completion_status
(
STATUS_TYPE VARCHAR(40) NOT NULL,
COMPLETION_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_COMPLETION_STATUS_TYPE'
CREATE TABLE r_completion_status_type
(
STATUS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_COMPLETION_TYPE'
CREATE TABLE r_completion_type
(
COMPLETION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONDITION_TYPE'
CREATE TABLE r_condition_type
(
CONDITION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONFIDENCE_TYPE'
CREATE TABLE r_confidence_type
(
CONFIDENCE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONFIDENTIAL_REASON'
CREATE TABLE r_confidential_reason
(
CONFIDENTIAL_REASON VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONFIDENTIAL_TYPE'
CREATE TABLE r_confidential_type
(
CONFIDENTIAL_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONFORMITY_RELATION'
CREATE TABLE r_conformity_relation
(
CONFORMITY_RELATIONSHIP VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONSENT_BA_ROLE'
CREATE TABLE r_consent_ba_role
(
CONSENT_BA_ROLE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONSENT_COMP_TYPE'
CREATE TABLE r_consent_comp_type
(
CONSENT_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONSENT_CONDITION'
CREATE TABLE r_consent_condition
(
CONSENT_TYPE VARCHAR(40) NOT NULL,
CONSENT_CONDITION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONSENT_REMARK'
CREATE TABLE r_consent_remark
(
REMARK_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONSENT_STATUS'
CREATE TABLE r_consent_status
(
CONSENT_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONSENT_TYPE'
CREATE TABLE r_consent_type
(
CONSENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONSULT_ATTEND_TYPE'
CREATE TABLE r_consult_attend_type
(
ATTEND_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONSULT_COMP_TYPE'
CREATE TABLE r_consult_comp_type
(
COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONSULT_DISC_TYPE'
CREATE TABLE r_consult_disc_type
(
DISCUSSION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONSULT_ISSUE_TYPE'
CREATE TABLE r_consult_issue_type
(
CONSULT_ISSUE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONSULT_REASON'
CREATE TABLE r_consult_reason
(
CONSULT_REASON VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONSULT_RESOLUTION'
CREATE TABLE r_consult_resolution
(
CONSULT_RESOLUTION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONSULT_ROLE'
CREATE TABLE r_consult_role
(
CONSULT_ROLE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONSULT_TYPE'
CREATE TABLE r_consult_type
(
CONSULT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONSULT_XREF_TYPE'
CREATE TABLE r_consult_xref_type
(
CONSULT_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONTACT_ROLE'
CREATE TABLE r_contact_role
(
CONTACT_ROLE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONTAMINANT_TYPE'
CREATE TABLE r_contaminant_type
(
CONTAMINANT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONTEST_COMP_TYPE'
CREATE TABLE r_contest_comp_type
(
CONTEST_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONTEST_PARTY_ROLE'
CREATE TABLE r_contest_party_role
(
PARTY_ROLE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONTEST_RESOLUTION'
CREATE TABLE r_contest_resolution
(
RESOLUTION_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONTEST_TYPE'
CREATE TABLE r_contest_type
(
CONTEST_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONTRACT_COMP_TYPE'
CREATE TABLE r_contract_comp_type
(
CONTRACT_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONT_BA_ROLE'
CREATE TABLE r_cont_ba_role
(
BA_ROLE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONT_COMP_REASON'
CREATE TABLE r_cont_comp_reason
(
REASON_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONT_EXTEND_COND'
CREATE TABLE r_cont_extend_cond
(
EXTENSION_CONDITION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONT_EXTEND_TYPE'
CREATE TABLE r_cont_extend_type
(
EXTENSION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONT_INSUR_ELECT'
CREATE TABLE r_cont_insur_elect
(
INSURANCE_ELECTION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONT_OPERATING_PROC'
CREATE TABLE r_cont_operating_proc
(
OPERATING_PROCEDURE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONT_PROVISION_TYPE'
CREATE TABLE r_cont_provision_type
(
CONT_PROVISION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONT_PROV_XREF_TYPE'
CREATE TABLE r_cont_prov_xref_type
(
PROVISION_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONT_STATUS'
CREATE TABLE r_cont_status
(
CONTRACT_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONT_STATUS_TYPE'
CREATE TABLE r_cont_status_type
(
CONTRACT_STATUS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONT_TYPE'
CREATE TABLE r_cont_type
(
CONTRACT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONT_VOTE_RESPONSE'
CREATE TABLE r_cont_vote_response
(
VOTE_RESPONSE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONT_VOTE_TYPE'
CREATE TABLE r_cont_vote_type
(
VOTE_PROCEDURE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CONT_XREF_TYPE'
CREATE TABLE r_cont_xref_type
(
CONTRACT_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_COORD_CAPTURE'
CREATE TABLE r_coord_capture
(
CAPTURE_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_COORD_COMPUTE'
CREATE TABLE r_coord_compute
(
COMPUTE_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_COORD_QUALITY'
CREATE TABLE r_coord_quality
(
COORDINATE_QUALITY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_COORD_SYSTEM_TYPE'
CREATE TABLE r_coord_system_type
(
COORDINATE_SYSTEM_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CORE_HANDLING'
CREATE TABLE r_core_handling
(
CORE_HANDLING VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CORE_RECOVERY_TYPE'
CREATE TABLE r_core_recovery_type
(
CORE_RECOVERY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CORE_SAMPLE_TYPE'
CREATE TABLE r_core_sample_type
(
CORE_SAMPLE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CORE_SHIFT_METHOD'
CREATE TABLE r_core_shift_method
(
CORE_SHIFT_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CORE_SOLVENT'
CREATE TABLE r_core_solvent
(
CORE_SOLVENT VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CORE_TYPE'
CREATE TABLE r_core_type
(
CORE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CORRECTION_METHOD'
CREATE TABLE r_correction_method
(
CORRECTION_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_COUPLING_TYPE'
CREATE TABLE r_coupling_type
(
COUPLING_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CREATOR_TYPE'
CREATE TABLE r_creator_type
(
CREATOR_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CS_TRANSFORM_PARM'
CREATE TABLE r_cs_transform_parm
(
TRANSFORM_PARM VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CS_TRANSFORM_TYPE'
CREATE TABLE r_cs_transform_type
(
TRANSFORM_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CURVE_SCALE'
CREATE TABLE r_curve_scale
(
CURVE_SCALE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CURVE_TYPE'
CREATE TABLE r_curve_type
(
CURVE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CURVE_XREF_TYPE'
CREATE TABLE r_curve_xref_type
(
XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CUSHION_TYPE'
CREATE TABLE r_cushion_type
(
CUSHION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_CUTTING_FLUID'
CREATE TABLE r_cutting_fluid
(
CUTTING_FLUID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DATA_CIRC_PROCESS'
CREATE TABLE r_data_circ_process
(
DATA_CIRC_PROCESS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DATA_CIRC_STATUS'
CREATE TABLE r_data_circ_status
(
DATA_CIRC_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DATA_STORE_TYPE'
CREATE TABLE r_data_store_type
(
DATA_STORE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DATE_FORMAT_TYPE'
CREATE TABLE r_date_format_type
(
DATA_STORE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DATUM_ORIGIN'
CREATE TABLE r_datum_origin
(
DATUM_ORIGIN VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DECLINE_COND_CODE'
CREATE TABLE r_decline_cond_code
(
CONDITION_TYPE VARCHAR(40) NOT NULL,
CONDITION_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DECLINE_COND_TYPE'
CREATE TABLE r_decline_cond_type
(
CONDITION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DECLINE_CURVE_TYPE'
CREATE TABLE r_decline_curve_type
(
DECLINE_CURVE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DECLINE_TYPE'
CREATE TABLE r_decline_type
(
DECLINE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DECRYPT_TYPE'
CREATE TABLE r_decrypt_type
(
DECRYPTION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DEDUCT_TYPE'
CREATE TABLE r_deduct_type
(
DEDUCT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DIGITAL_FORMAT'
CREATE TABLE r_digital_format
(
DIGITAL_FORMAT VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
VERSION VARCHAR(20),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DIGITAL_OUTPUT'
CREATE TABLE r_digital_output
(
DIGITAL_OUTPUT VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DIRECTION'
CREATE TABLE r_direction
(
DIRECTION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DIR_SRVY_ACC_REASON'
CREATE TABLE r_dir_srvy_acc_reason
(
ACCURACY_PROBLEM_REASON VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DIR_SRVY_CLASS'
CREATE TABLE r_dir_srvy_class
(
DIR_SURVEY_CLASS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DIR_SRVY_COMPUTE'
CREATE TABLE r_dir_srvy_compute
(
COMPUTE_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DIR_SRVY_CORR_ANGLE_TYPE'
CREATE TABLE r_dir_srvy_corr_angle_type
(
CORR_ANGLE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DIR_SRVY_POINT_TYPE'
CREATE TABLE r_dir_srvy_point_type
(
POINT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DIR_SRVY_PROCESS_METH'
CREATE TABLE r_dir_srvy_process_meth
(
PROCESS_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DIR_SRVY_RAD_UNCERT'
CREATE TABLE r_dir_srvy_rad_uncert
(
RAD_UNCERT_DIST_REASON VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DIR_SRVY_RECORD'
CREATE TABLE r_dir_srvy_record
(
RECORD_MODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DIR_SRVY_REPORT_TYPE'
CREATE TABLE r_dir_srvy_report_type
(
REPORT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DIR_SRVY_TYPE'
CREATE TABLE r_dir_srvy_type
(
SURVEY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DIST_REF_PT'
CREATE TABLE r_dist_ref_pt
(
DISTANCE_REF_POINT VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DOCUMENT_TYPE'
CREATE TABLE r_document_type
(
DOCUMENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DOC_STATUS'
CREATE TABLE r_doc_status
(
DOCUMENT_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DRILLING_MEDIA'
CREATE TABLE r_drilling_media
(
DRILLING_MEDIA VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DRILL_ASSEMBLY_COMP'
CREATE TABLE r_drill_assembly_comp
(
COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DRILL_BIT_CONDITION'
CREATE TABLE r_drill_bit_condition
(
DRILL_BIT_CONDITION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DRILL_BIT_DETAIL_CODE'
CREATE TABLE r_drill_bit_detail_code
(
BIT_DETAIL_TYPE VARCHAR(40) NOT NULL,
BIT_DETAIL_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DRILL_BIT_DETAIL_TYPE'
CREATE TABLE r_drill_bit_detail_type
(
BIT_DETAIL_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DRILL_BIT_JET_TYPE'
CREATE TABLE r_drill_bit_jet_type
(
JET_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DRILL_BIT_TYPE'
CREATE TABLE r_drill_bit_type
(
DRILL_BIT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DRILL_HOLE_POSITION'
CREATE TABLE r_drill_hole_position
(
DRILL_HOLE_POSITION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DRILL_REPORT_TIME'
CREATE TABLE r_drill_report_time
(
REPORT_TIME_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DRILL_STAT_CODE'
CREATE TABLE r_drill_stat_code
(
STATISTIC_TYPE VARCHAR(40) NOT NULL,
STATISTIC_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DRILL_STAT_TYPE'
CREATE TABLE r_drill_stat_type
(
STATISTIC_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_DRILL_TOOL_TYPE'
CREATE TABLE r_drill_tool_type
(
DRILL_TOOL_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ECONOMIC_SCENARIO'
CREATE TABLE r_economic_scenario
(
ECONOMIC_SCENARIO VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ECONOMIC_SCHEDULE'
CREATE TABLE r_economic_schedule
(
ECONOMIC_SCHEDULE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ECOZONE_HIER_LEVEL'
CREATE TABLE r_ecozone_hier_level
(
HIERARCHY_LEVEL VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ECOZONE_TYPE'
CREATE TABLE r_ecozone_type
(
ECOZONE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ECOZONE_XREF'
CREATE TABLE r_ecozone_xref
(
ECOZONE_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_EMPLOYEE_POSITION'
CREATE TABLE r_employee_position
(
EMPLOYEE_POSITION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_EMPLOYEE_STATUS'
CREATE TABLE r_employee_status
(
EMPLOYEE_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ENCODING_TYPE'
CREATE TABLE r_encoding_type
(
ENCODING_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ENHANCED_REC_TYPE'
CREATE TABLE r_enhanced_rec_type
(
ENHANCED_RECOVERY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ENT_ACCESS_TYPE'
CREATE TABLE r_ent_access_type
(
ACCESS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ENT_COMPONENT_TYPE'
CREATE TABLE r_ent_component_type
(
ENT_COMP_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ENT_EXPIRY_ACTION'
CREATE TABLE r_ent_expiry_action
(
EXPIRY_ACTION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ENT_SEC_GROUP_TYPE'
CREATE TABLE r_ent_sec_group_type
(
GROUP_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ENT_SEC_GROUP_XREF'
CREATE TABLE r_ent_sec_group_xref
(
XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ENT_TYPE'
CREATE TABLE r_ent_type
(
ENTITLEMENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ENVIRONMENT'
CREATE TABLE r_environment
(
ENVIRONMENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_EQUIP_BA_ROLE_TYPE'
CREATE TABLE r_equip_ba_role_type
(
ROLE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_EQUIP_COMPONENT_TYPE'
CREATE TABLE r_equip_component_type
(
EQUIPMENT_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_EQUIP_INSTALL_LOC'
CREATE TABLE r_equip_install_loc
(
INSTALL_LOC_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_EQUIP_MAINT_LOC'
CREATE TABLE r_equip_maint_loc
(
MAINT_LOCATION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_EQUIP_MAINT_REASON'
CREATE TABLE r_equip_maint_reason
(
MAINT_REASON VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_EQUIP_MAINT_STATUS'
CREATE TABLE r_equip_maint_status
(
MAINTAIN_STATUS_TYPE VARCHAR(40) NOT NULL,
MAINTAIN_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_EQUIP_MAINT_STAT_TYPE'
CREATE TABLE r_equip_maint_stat_type
(
MAINTAIN_STATUS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_EQUIP_REMOVE_REASON'
CREATE TABLE r_equip_remove_reason
(
REMOVE_REASON VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_EQUIP_SPEC'
CREATE TABLE r_equip_spec
(
SPEC_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_EQUIP_SPEC_REF_TYPE'
CREATE TABLE r_equip_spec_ref_type
(
REFERENCE_VALUE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_EQUIP_SPEC_SET_TYPE'
CREATE TABLE r_equip_spec_set_type
(
SPEC_SET_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_EQUIP_STATUS'
CREATE TABLE r_equip_status
(
STATUS_TYPE VARCHAR(40) NOT NULL,
EQUIP_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_EQUIP_STATUS_TYPE'
CREATE TABLE r_equip_status_type
(
STATUS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_EQUIP_SYSTEM_CONDITION'
CREATE TABLE r_equip_system_condition
(
SYSTEM_CONDITION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_EQUIP_USE_STAT_TYPE'
CREATE TABLE r_equip_use_stat_type
(
EQUIP_USE_STAT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_EQUIP_XREF_TYPE'
CREATE TABLE r_equip_xref_type
(
EQUIP_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_EW_DIRECTION'
CREATE TABLE r_ew_direction
(
EW_DIRECTION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_EW_START_LINE'
CREATE TABLE r_ew_start_line
(
EW_START_LINE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EW_START_LINE_1 VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FACILITY_CLASS'
CREATE TABLE r_facility_class
(
FACILITY_CLASS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FACILITY_COMP_TYPE'
CREATE TABLE r_facility_comp_type
(
FACILITY_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FACILITY_SPEC_CODE'
CREATE TABLE r_facility_spec_code
(
SPEC_TYPE VARCHAR(40) NOT NULL,
SPEC_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FACILITY_SPEC_TYPE'
CREATE TABLE r_facility_spec_type
(
SPEC_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FACILITY_STATUS'
CREATE TABLE r_facility_status
(
STATUS_TYPE VARCHAR(40) NOT NULL,
STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FACILITY_TYPE'
CREATE TABLE r_facility_type
(
FACILITY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FACILITY_XREF_TYPE'
CREATE TABLE r_facility_xref_type
(
FACILITY_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FAC_FUNCTION'
CREATE TABLE r_fac_function
(
FACILITY_FUNCTION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FAC_LIC_COND'
CREATE TABLE r_fac_lic_cond
(
CONDITION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FAC_LIC_COND_CODE'
CREATE TABLE r_fac_lic_cond_code
(
CONDITION_TYPE VARCHAR(40) NOT NULL,
CONDITION_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FAC_LIC_DUE_CONDITION'
CREATE TABLE r_fac_lic_due_condition
(
DUE_CONDITION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FAC_LIC_EXTEND_TYPE'
CREATE TABLE r_fac_lic_extend_type
(
LICENSE_EXTENSION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FAC_LIC_VIOLATION_TYPE'
CREATE TABLE r_fac_lic_violation_type
(
VIOLATION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FAC_LIC_VIOL_RESOL'
CREATE TABLE r_fac_lic_viol_resol
(
RESOLVE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FAC_MAINTAIN_TYPE'
CREATE TABLE r_fac_maintain_type
(
FACILITY_TYPE VARCHAR(40) NOT NULL,
MAINTAIN_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FAC_MAINT_STATUS'
CREATE TABLE r_fac_maint_status
(
MAINTAIN_STATUS_TYPE VARCHAR(40) NOT NULL,
MAINTAIN_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FAC_MAINT_STATUS_TYPE'
CREATE TABLE r_fac_maint_status_type
(
MAINTAIN_STATUS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FAC_PIPE_COVER'
CREATE TABLE r_fac_pipe_cover
(
COVER_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FAC_PIPE_MATERIAL'
CREATE TABLE r_fac_pipe_material
(
PIPELINE_MATERIAL VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FAC_PIPE_TYPE'
CREATE TABLE r_fac_pipe_type
(
PIPELINE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FAC_SPEC_REFERENCE'
CREATE TABLE r_fac_spec_reference
(
REFERENCE_VALUE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FAC_STATUS_TYPE'
CREATE TABLE r_fac_status_type
(
STATUS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FAULT_TYPE'
CREATE TABLE r_fault_type
(
FAULT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FIELD_COMPONENT_TYPE'
CREATE TABLE r_field_component_type
(
FIELD_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FIELD_STATION_TYPE'
CREATE TABLE r_field_station_type
(
FIELD_STATION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FIELD_TYPE'
CREATE TABLE r_field_type
(
FIELD_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FIN_COMPONENT_TYPE'
CREATE TABLE r_fin_component_type
(
FIN_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FIN_COST_TYPE'
CREATE TABLE r_fin_cost_type
(
COST_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FIN_STATUS'
CREATE TABLE r_fin_status
(
FIN_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FIN_TYPE'
CREATE TABLE r_fin_type
(
FIN_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FIN_XREF_TYPE'
CREATE TABLE r_fin_xref_type
(
FIN_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FLUID_TYPE'
CREATE TABLE r_fluid_type
(
FLUID_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
SUBSTANCE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FONT'
CREATE TABLE r_font
(
FONT VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FONT_EFFECT'
CREATE TABLE r_font_effect
(
FONT_EFFECT VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FOOTAGE_ORIGIN'
CREATE TABLE r_footage_origin
(
FOOTAGE_ORIGIN VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FOS_ALIAS_TYPE'
CREATE TABLE r_fos_alias_type
(
FOS_ALIAS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FOS_ASSEMBLAGE_TYPE'
CREATE TABLE r_fos_assemblage_type
(
ASSEMBLAGE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FOS_DESC_CODE'
CREATE TABLE r_fos_desc_code
(
DESCRIPTION_TYPE VARCHAR(40) NOT NULL,
DESCRIPTION_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FOS_DESC_TYPE'
CREATE TABLE r_fos_desc_type
(
DESCRIPTION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FOS_LIFE_HABIT'
CREATE TABLE r_fos_life_habit
(
LIFE_HABIT VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FOS_NAME_SET_TYPE'
CREATE TABLE r_fos_name_set_type
(
FOSSIL_NAME_SET_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FOS_OBS_TYPE'
CREATE TABLE r_fos_obs_type
(
FOSSIL_OBS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FOS_TAXON_GROUP'
CREATE TABLE r_fos_taxon_group
(
TAXON_GROUP VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FOS_TAXON_LEVEL'
CREATE TABLE r_fos_taxon_level
(
TAXON_LEVEL VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_FOS_XREF'
CREATE TABLE r_fos_xref
(
FOSSIL_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_GAS_ANL_VALUE_CODE'
CREATE TABLE r_gas_anl_value_code
(
GAS_ANL_VALUE_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_GAS_ANL_VALUE_TYPE'
CREATE TABLE r_gas_anl_value_type
(
GAS_ANL_VALUE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PPDM_PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_GRANTED_RIGHT_TYPE'
CREATE TABLE r_granted_right_type
(
GRANTED_RIGHT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_HEAT_CONTENT_METHOD'
CREATE TABLE r_heat_content_method
(
HEAT_CONTENT_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_HOLE_CONDITION'
CREATE TABLE r_hole_condition
(
HOLE_CONDITION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_HORIZ_DRILL_REASON'
CREATE TABLE r_horiz_drill_reason
(
HORIZ_DRILL_REASON VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_HORIZ_DRILL_TYPE'
CREATE TABLE r_horiz_drill_type
(
HORIZ_DRILL_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_HSE_COMP_ROLE'
CREATE TABLE r_hse_comp_role
(
COMPONENT_ROLE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_HSE_INCIDENT_COMP_TYPE'
CREATE TABLE r_hse_incident_comp_type
(
COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_HSE_INCIDENT_DETAIL'
CREATE TABLE r_hse_incident_detail
(
DETAIL_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_HSE_RESPONSE_TYPE'
CREATE TABLE r_hse_response_type
(
ACTION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_IMAGE_CALIBRATE_METHOD'
CREATE TABLE r_image_calibrate_method
(
CALIBRATE_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_IMAGE_SECTION_TYPE'
CREATE TABLE r_image_section_type
(
SECTION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INCIDENT_BA_ROLE'
CREATE TABLE r_incident_ba_role
(
BA_ROLE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INCIDENT_CAUSE_CODE'
CREATE TABLE r_incident_cause_code
(
CAUSE_TYPE VARCHAR(40) NOT NULL,
CAUSE_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INCIDENT_CAUSE_TYPE'
CREATE TABLE r_incident_cause_type
(
CAUSE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INCIDENT_INTERACT_TYPE'
CREATE TABLE r_incident_interact_type
(
INTERACTION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INCIDENT_RESP_RESULT'
CREATE TABLE r_incident_resp_result
(
RESPONSE_RESULT VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INCIDENT_SUBSTANCE'
CREATE TABLE r_incident_substance
(
INCIDENT_SUBSTANCE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INCIDENT_SUBST_ROLE'
CREATE TABLE r_incident_subst_role
(
SUBSTANCE_ROLE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INFORMATION_PROCESS'
CREATE TABLE r_information_process
(
INFORMATION_PROCESS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INPUT_TYPE'
CREATE TABLE r_input_type
(
INPUT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INSP_COMP_TYPE'
CREATE TABLE r_insp_comp_type
(
COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INSP_STATUS'
CREATE TABLE r_insp_status
(
INSPECTION_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INSTRUMENT_COMP_TYPE'
CREATE TABLE r_instrument_comp_type
(
INSTRUMENT_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INSTRUMENT_TYPE'
CREATE TABLE r_instrument_type
(
LAND_INSTRUMENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INST_DETAIL_CODE'
CREATE TABLE r_inst_detail_code
(
INSTRUMENT_DETAIL_TYPE VARCHAR(40) NOT NULL,
INSTRUMENT_DETAIL_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INST_DETAIL_REF_VALUE'
CREATE TABLE r_inst_detail_ref_value
(
REFERENCE_VALUE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INST_DETAIL_TYPE'
CREATE TABLE r_inst_detail_type
(
INSTRUMENT_DETAIL_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INTERP_ORIGIN_TYPE'
CREATE TABLE r_interp_origin_type
(
ORIGIN_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INTERP_TYPE'
CREATE TABLE r_interp_type
(
INTERP_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INT_SET_COMPONENT'
CREATE TABLE r_int_set_component
(
COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INT_SET_ROLE'
CREATE TABLE r_int_set_role
(
INTEREST_SET_ROLE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INT_SET_STATUS'
CREATE TABLE r_int_set_status
(
STATUS_TYPE VARCHAR(40) NOT NULL,
STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INT_SET_STATUS_TYPE'
CREATE TABLE r_int_set_status_type
(
STATUS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INT_SET_TRIGGER'
CREATE TABLE r_int_set_trigger
(
TRIGGER_EVENT VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INT_SET_TYPE'
CREATE TABLE r_int_set_type
(
INTEREST_SET_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INT_SET_XREF_TYPE'
CREATE TABLE r_int_set_xref_type
(
INT_SET_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_INV_MATERIAL_TYPE'
CREATE TABLE r_inv_material_type
(
INVENTORY_MATERIAL_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ITEM_CATEGORY'
CREATE TABLE r_item_category
(
ITEM_CATEGORY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RETENTION_PERIOD VARCHAR(40),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ITEM_SUB_CATEGORY'
CREATE TABLE r_item_sub_category
(
ITEM_CATEGORY VARCHAR(40) NOT NULL,
ITEM_SUB_CATEGORY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RETENTION_PERIOD VARCHAR(40),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LAND_ACQTN_METHOD'
CREATE TABLE r_land_acqtn_method
(
LAND_ACQTN_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LAND_AGREE_TYPE'
CREATE TABLE r_land_agree_type
(
LAND_AGREE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LAND_BIDDER_TYPE'
CREATE TABLE r_land_bidder_type
(
LAND_BIDDER_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LAND_BID_STATUS'
CREATE TABLE r_land_bid_status
(
LAND_BID_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LAND_BID_TYPE'
CREATE TABLE r_land_bid_type
(
LAND_BID_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LAND_CASE_ACTION'
CREATE TABLE r_land_case_action
(
LAND_CASE_ACTION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LAND_CASE_TYPE'
CREATE TABLE r_land_case_type
(
LAND_CASE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LAND_CASH_BID_TYPE'
CREATE TABLE r_land_cash_bid_type
(
CASH_BID_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LAND_COMPONENT_TYPE'
CREATE TABLE r_land_component_type
(
LAND_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LAND_LESSOR_TYPE'
CREATE TABLE r_land_lessor_type
(
LAND_LESSOR_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LAND_OFFRING_STATUS'
CREATE TABLE r_land_offring_status
(
LAND_OFFRING_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LAND_OFFRING_TYPE'
CREATE TABLE r_land_offring_type
(
LAND_OFFRING_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LAND_PROPERTY_TYPE'
CREATE TABLE r_land_property_type
(
LAND_PROPERTY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LAND_REF_NUM_TYPE'
CREATE TABLE r_land_ref_num_type
(
LAND_REF_NUM_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LAND_RENTAL_TYPE'
CREATE TABLE r_land_rental_type
(
LAND_RENTAL_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LAND_REQUEST_TYPE'
CREATE TABLE r_land_request_type
(
LAND_REQUEST_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LAND_REQ_STATUS'
CREATE TABLE r_land_req_status
(
LAND_REQ_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LAND_RIGHT_CATEGORY'
CREATE TABLE r_land_right_category
(
LAND_RIGHT_CATEGORY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LAND_RIGHT_STATUS'
CREATE TABLE r_land_right_status
(
STATUS_TYPE VARCHAR(40) NOT NULL,
LAND_RIGHT_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LAND_STATUS_TYPE'
CREATE TABLE r_land_status_type
(
STATUS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LAND_TITLE_CHG_RSN'
CREATE TABLE r_land_title_chg_rsn
(
LAND_TITLE_CHANGE_REASON VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LAND_TITLE_TYPE'
CREATE TABLE r_land_title_type
(
LAND_TITLE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LAND_TRACT_TYPE'
CREATE TABLE r_land_tract_type
(
LAND_TRACT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LAND_UNIT_TYPE'
CREATE TABLE r_land_unit_type
(
LAND_UNIT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LAND_WELL_REL_TYPE'
CREATE TABLE r_land_well_rel_type
(
WELL_RELATIONSHIP_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LANGUAGE'
CREATE TABLE r_language
(
LANGUAGE_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LEASE_UNIT_STATUS'
CREATE TABLE r_lease_unit_status
(
LEASE_UNIT_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LEASE_UNIT_TYPE'
CREATE TABLE r_lease_unit_type
(
LEASE_UNIT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LEGAL_SURVEY_TYPE'
CREATE TABLE r_legal_survey_type
(
LEGAL_SURVEY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOC_TABLE_NAME VARCHAR(30),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LICENSE_STATUS'
CREATE TABLE r_license_status
(
LICENSE_STATUS_TYPE VARCHAR(40) NOT NULL,
LICENSE_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LIC_STATUS_TYPE'
CREATE TABLE r_lic_status_type
(
LICENSE_STATUS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LINER_TYPE'
CREATE TABLE r_liner_type
(
LINER_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LITHOLOGY'
CREATE TABLE r_lithology
(
LITHOLOGY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LITH_ABUNDANCE'
CREATE TABLE r_lith_abundance
(
ABUNDANCE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LITH_BOUNDARY_TYPE'
CREATE TABLE r_lith_boundary_type
(
BOUNDARY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LITH_COLOR'
CREATE TABLE r_lith_color
(
COLOR VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LITH_CONSOLIDATION'
CREATE TABLE r_lith_consolidation
(
CONSOLIDATION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LITH_CYCLE_BED'
CREATE TABLE r_lith_cycle_bed
(
CYCLE_BED VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LITH_DEP_ENV'
CREATE TABLE r_lith_dep_env
(
DEPOSITIONAL_ENVIRONMENT VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LITH_DIAGENESIS'
CREATE TABLE r_lith_diagenesis
(
DIAGENESIS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LITH_DISTRIBUTION'
CREATE TABLE r_lith_distribution
(
DISTRIBUTION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LITH_INTENSITY'
CREATE TABLE r_lith_intensity
(
INTENSITY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LITH_LOG_COMP_TYPE'
CREATE TABLE r_lith_log_comp_type
(
LITH_LOG_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LITH_LOG_TYPE'
CREATE TABLE r_lith_log_type
(
LITH_LOG_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LITH_OIL_STAIN'
CREATE TABLE r_lith_oil_stain
(
OIL_STAIN VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LITH_PATTERN_CODE'
CREATE TABLE r_lith_pattern_code
(
LITH_PATTERN_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LITH_ROCKPART'
CREATE TABLE r_lith_rockpart
(
ROCKPART_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LITH_ROCK_MATRIX'
CREATE TABLE r_lith_rock_matrix
(
ROCK_MATRIX VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LITH_ROCK_PROFILE'
CREATE TABLE r_lith_rock_profile
(
ROCK_PROFILE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LITH_ROCK_TYPE'
CREATE TABLE r_lith_rock_type
(
ROCK_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LITH_ROUNDING'
CREATE TABLE r_lith_rounding
(
ROUNDING VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LITH_SCALE_SCHEME'
CREATE TABLE r_lith_scale_scheme
(
SCALE_SCHEME VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LITH_SORTING'
CREATE TABLE r_lith_sorting
(
SORTING VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LITH_STRUCTURE'
CREATE TABLE r_lith_structure
(
STRUCTURE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LOCATION_DESC_TYPE'
CREATE TABLE r_location_desc_type
(
LOCATION_DESC_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LOCATION_QUALIFIER'
CREATE TABLE r_location_qualifier
(
LOCATION_QUALIFIER VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LOCATION_QUALITY'
CREATE TABLE r_location_quality
(
LOCATION_QUALITY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LOCATION_TYPE'
CREATE TABLE r_location_type
(
LOCATION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LOG_ARRAY_DIMENSION'
CREATE TABLE r_log_array_dimension
(
DIMENSION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LOG_CORRECT_METHOD'
CREATE TABLE r_log_correct_method
(
CORRECTION_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LOG_CRV_CLASS_SYSTEM'
CREATE TABLE r_log_crv_class_system
(
SYSTEM_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LOG_DEPTH_TYPE'
CREATE TABLE r_log_depth_type
(
DEPTH_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LOG_DIRECTION'
CREATE TABLE r_log_direction
(
LOG_DIRECTION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LOG_GOOD_VALUE_TYPE'
CREATE TABLE r_log_good_value_type
(
GOOD_VALUE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LOG_INDEX_TYPE'
CREATE TABLE r_log_index_type
(
INDEX_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LOG_MATRIX'
CREATE TABLE r_log_matrix
(
LOG_MATRIX_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LOG_POSITION_TYPE'
CREATE TABLE r_log_position_type
(
POSITION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LOG_TOOL_TYPE'
CREATE TABLE r_log_tool_type
(
LOG_TOOL_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LOST_MATERIAL_TYPE'
CREATE TABLE r_lost_material_type
(
LOST_MATERIAL_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LR_FACILITY_XREF'
CREATE TABLE r_lr_facility_xref
(
XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LR_FIELD_XREF'
CREATE TABLE r_lr_field_xref
(
XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LR_SIZE_TYPE'
CREATE TABLE r_lr_size_type
(
SIZE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LR_TERMIN_REQMT'
CREATE TABLE r_lr_termin_reqmt
(
TERMINATION_REQMT VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LR_TERMIN_TYPE'
CREATE TABLE r_lr_termin_type
(
TERMINATION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_LR_XREF_TYPE'
CREATE TABLE r_lr_xref_type
(
LR_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_L_OFFR_CANCEL_RSN'
CREATE TABLE r_l_offr_cancel_rsn
(
LAND_OFFR_CANCEL_RSN VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_MACERAL_AMOUNT_TYPE'
CREATE TABLE r_maceral_amount_type
(
MACERAL_AMOUNT_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_MAINT_PROCESS'
CREATE TABLE r_maint_process
(
MAINTAIN_PROCESS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_MATURATION_TYPE'
CREATE TABLE r_maturation_type
(
MATURATION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_MATURITY_METHOD'
CREATE TABLE r_maturity_method
(
MATURITY_METHOD_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_MBAL_COMPRESS_TYPE'
CREATE TABLE r_mbal_compress_type
(
Z_FACTOR_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_MBAL_CURVE_TYPE'
CREATE TABLE r_mbal_curve_type
(
CURVE_FIT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_MEASUREMENT_LOC'
CREATE TABLE r_measurement_loc
(
MEASUREMENT_LOCATION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_MEASUREMENT_TYPE'
CREATE TABLE r_measurement_type
(
MEASUREMENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_MEASURE_TECHNIQUE'
CREATE TABLE r_measure_technique
(
MEASUREMENT_TECHNIQUE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_MEDIA_TYPE'
CREATE TABLE r_media_type
(
MEDIA_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
DIGITAL_CAPACITY DECIMAL(20,5),
DIGITAL_CAPACITY_UOM VARCHAR(40),
DIGITAL_DENSITY DECIMAL(20,5),
DIGITAL_DENSITY_UOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_METHOD_TYPE'
CREATE TABLE r_method_type
(
METHOD_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_MISC_DATA_CODE'
CREATE TABLE r_misc_data_code
(
MISC_DATA_TYPE VARCHAR(40) NOT NULL,
MISC_DATA_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_MISC_DATA_TYPE'
CREATE TABLE r_misc_data_type
(
MISC_DATA_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_MISSING_STRAT_TYPE'
CREATE TABLE r_missing_strat_type
(
MISSING_STRAT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_MOBILITY_TYPE'
CREATE TABLE r_mobility_type
(
MOBILITY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_MONTH'
CREATE TABLE r_month
(
MONTH VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_MUD_COLLECT_REASON'
CREATE TABLE r_mud_collect_reason
(
MUD_COLLECT_REASON VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_MUD_LOG_COLOR'
CREATE TABLE r_mud_log_color
(
MUD_LOG_COLOR VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_MUD_PROPERTY_CODE'
CREATE TABLE r_mud_property_code
(
MUD_PROPERTY VARCHAR(40) NOT NULL,
MUD_PROPERTY_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_MUD_PROPERTY_REF'
CREATE TABLE r_mud_property_ref
(
MUD_PROPERTY_REF VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_MUD_PROPERTY_TYPE'
CREATE TABLE r_mud_property_type
(
MUD_PROPERTY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_MUD_SAMPLE_TYPE'
CREATE TABLE r_mud_sample_type
(
MUD_SAMPLE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_MUNICIPALITY'
CREATE TABLE r_municipality
(
MUNICIPALITY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_NAME_SET_XREF_TYPE'
CREATE TABLE r_name_set_xref_type
(
XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_NODE_POSITION'
CREATE TABLE r_node_position
(
NODE_POSITION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_NORTH'
CREATE TABLE r_north
(
NORTH_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_NOTIFICATION_COMP_TYPE'
CREATE TABLE r_notification_comp_type
(
NOTIFICATION_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_NOTIFICATION_TYPE'
CREATE TABLE r_notification_type
(
NOTIFICATION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_NS_DIRECTION'
CREATE TABLE r_ns_direction
(
NS_DIRECTION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_NS_START_LINE'
CREATE TABLE r_ns_start_line
(
NS_START_LINE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_OBLIG_CALC_METHOD'
CREATE TABLE r_oblig_calc_method
(
CALCULATION_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_OBLIG_CALC_POINT'
CREATE TABLE r_oblig_calc_point
(
CALCULATION_POINT VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_OBLIG_CATEGORY'
CREATE TABLE r_oblig_category
(
LAND_OBLIG_CATEGORY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_OBLIG_COMPONENT_TYPE'
CREATE TABLE r_oblig_component_type
(
OBLIGATION_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_OBLIG_COMP_REASON'
CREATE TABLE r_oblig_comp_reason
(
COMPONENT_REASON VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_OBLIG_DEDUCT_CALC'
CREATE TABLE r_oblig_deduct_calc
(
CALCULATION_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_OBLIG_PARTY_TYPE'
CREATE TABLE r_oblig_party_type
(
PARTY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_OBLIG_PAY_RESP'
CREATE TABLE r_oblig_pay_resp
(
PAYMENT_RESPONSIBILITY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_OBLIG_REMARK_TYPE'
CREATE TABLE r_oblig_remark_type
(
REMARK_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_OBLIG_SUSPEND_PAY'
CREATE TABLE r_oblig_suspend_pay
(
SUSPEND_PAYMENT_REASON VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_OBLIG_TRIGGER'
CREATE TABLE r_oblig_trigger
(
TRIGGER_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_OBLIG_TYPE'
CREATE TABLE r_oblig_type
(
LAND_OBLIG_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_OBLIG_XREF_TYPE'
CREATE TABLE r_oblig_xref_type
(
OBLIG_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_OFFSHORE_AREA_CODE'
CREATE TABLE r_offshore_area_code
(
OFFSHORE_AREA_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_OFFSHORE_COMP_TYPE'
CREATE TABLE r_offshore_comp_type
(
OFFSHORE_COMPLETION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_OIL_VALUE_CODE'
CREATE TABLE r_oil_value_code
(
OIL_VALUE_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ONTOGENY_TYPE'
CREATE TABLE r_ontogeny_type
(
ONTOGENY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_OPERAND_QUALIFIER'
CREATE TABLE r_operand_qualifier
(
OPERAND_QUALIFIER VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ORIENTATION'
CREATE TABLE r_orientation
(
ORIENTATION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PALEO_AMOUNT_TYPE'
CREATE TABLE r_paleo_amount_type
(
PALEO_AMOUNT_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PALEO_IND_TYPE'
CREATE TABLE r_paleo_ind_type
(
INDICATOR_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PALEO_INTERP_TYPE'
CREATE TABLE r_paleo_interp_type
(
INTERP_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PALEO_TYPE_FOSSIL'
CREATE TABLE r_paleo_type_fossil
(
TYPE_FOSSIL_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PAL_SUM_COMP_TYPE'
CREATE TABLE r_pal_sum_comp_type
(
PALEO_SUMMARY_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PAL_SUM_XREF_TYPE'
CREATE TABLE r_pal_sum_xref_type
(
PALEO_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PARCEL_LOT_TYPE'
CREATE TABLE r_parcel_lot_type
(
PARCEL_LOT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PARCEL_TYPE'
CREATE TABLE r_parcel_type
(
PARCEL_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PAYMENT_TYPE'
CREATE TABLE r_payment_type
(
PAYMENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PAYZONE_TYPE'
CREATE TABLE r_payzone_type
(
PAYZONE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PAY_DETAIL_TYPE'
CREATE TABLE r_pay_detail_type
(
PAY_DETAIL_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PAY_METHOD'
CREATE TABLE r_pay_method
(
PAY_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PAY_RATE_TYPE'
CREATE TABLE r_pay_rate_type
(
PAY_RATE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PDEN_AMEND_REASON'
CREATE TABLE r_pden_amend_reason
(
AMEND_REASON VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PDEN_COMPONENT_TYPE'
CREATE TABLE r_pden_component_type
(
PDEN_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PDEN_STATUS'
CREATE TABLE r_pden_status
(
PDEN_STATUS_TYPE VARCHAR(40) NOT NULL,
PDEN_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PDEN_STATUS_TYPE'
CREATE TABLE r_pden_status_type
(
PDEN_STATUS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PDEN_XREF_TYPE'
CREATE TABLE r_pden_xref_type
(
PDEN_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PERFORATION_METHOD'
CREATE TABLE r_perforation_method
(
PERFORATION_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PERFORATION_TYPE'
CREATE TABLE r_perforation_type
(
PERF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PERIOD_TYPE'
CREATE TABLE r_period_type
(
PERIOD_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PERMEABILITY_TYPE'
CREATE TABLE r_permeability_type
(
PERMEABILITY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PHYSICAL_ITEM_STATUS'
CREATE TABLE r_physical_item_status
(
PHYSICAL_ITEM_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PHYSICAL_PROCESS'
CREATE TABLE r_physical_process
(
PHYSICAL_PROCESS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PHYS_ITEM_GROUP_TYPE'
CREATE TABLE r_phys_item_group_type
(
GROUP_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PICK_LOCATION'
CREATE TABLE r_pick_location
(
PICK_LOCATION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PICK_QUALIFIER'
CREATE TABLE r_pick_qualifier
(
PICK_QUALIFIER VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PICK_QUALIF_REASON'
CREATE TABLE r_pick_qualif_reason
(
PICK_QUALIF_REASON VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PICK_QUALITY'
CREATE TABLE r_pick_quality
(
PICK_QUALITY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PICK_VERSION_TYPE'
CREATE TABLE r_pick_version_type
(
PICK_VERSION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PLATFORM_TYPE'
CREATE TABLE r_platform_type
(
PLATFORM_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PLOT_SYMBOL'
CREATE TABLE r_plot_symbol
(
PLOT_SYMBOL VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PLUG_TYPE'
CREATE TABLE r_plug_type
(
PLUG_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_POOL_COMPONENT_TYPE'
CREATE TABLE r_pool_component_type
(
POOL_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_POOL_STATUS'
CREATE TABLE r_pool_status
(
POOL_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_POOL_TYPE'
CREATE TABLE r_pool_type
(
POOL_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_POROSITY_TYPE'
CREATE TABLE r_porosity_type
(
POROSITY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_AUDIT_REASON'
CREATE TABLE r_ppdm_audit_reason
(
AUDIT_REASON VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_AUDIT_TYPE'
CREATE TABLE r_ppdm_audit_type
(
AUDIT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_BOOLEAN_RULE'
CREATE TABLE r_ppdm_boolean_rule
(
BOOLEAN_RULE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_CREATE_METHOD'
CREATE TABLE r_ppdm_create_method
(
CREATE_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_DATA_TYPE'
CREATE TABLE r_ppdm_data_type
(
DATA_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_DEFAULT_VALUE'
CREATE TABLE r_ppdm_default_value
(
DEFAULT_VALUE_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_ENFORCE_METHOD'
CREATE TABLE r_ppdm_enforce_method
(
ENFORCE_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_FAIL_RESULT'
CREATE TABLE r_ppdm_fail_result
(
RULE_FAIL_RESULT VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_GROUP_TYPE'
CREATE TABLE r_ppdm_group_type
(
GROUP_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_GROUP_USE'
CREATE TABLE r_ppdm_group_use
(
GROUP_USE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_GROUP_XREF_TYPE'
CREATE TABLE r_ppdm_group_xref_type
(
GROUP_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_INDEX_CATEGORY'
CREATE TABLE r_ppdm_index_category
(
INDEX_CATEGORY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_MAP_RULE_TYPE'
CREATE TABLE r_ppdm_map_rule_type
(
MAP_RULE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_MAP_TYPE'
CREATE TABLE r_ppdm_map_type
(
MAP_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_METRIC_CODE'
CREATE TABLE r_ppdm_metric_code
(
METRIC_TYPE VARCHAR(40) NOT NULL,
METRIC_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_METRIC_COMP_TYPE'
CREATE TABLE r_ppdm_metric_comp_type
(
METRIC_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_METRIC_REF_VALUE'
CREATE TABLE r_ppdm_metric_ref_value
(
REFERENCE_VALUE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_METRIC_TYPE'
CREATE TABLE r_ppdm_metric_type
(
METRIC_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_OBJECT_STATUS'
CREATE TABLE r_ppdm_object_status
(
OBJECT_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_OBJECT_TYPE'
CREATE TABLE r_ppdm_object_type
(
OBJECT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_OPERATING_SYSTEM'
CREATE TABLE r_ppdm_operating_system
(
OPERATING_SYSTEM VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_OWNER_ROLE'
CREATE TABLE r_ppdm_owner_role
(
OWNER_ROLE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_PROC_TYPE'
CREATE TABLE r_ppdm_proc_type
(
PROCEDURE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_QC_QUALITY'
CREATE TABLE r_ppdm_qc_quality
(
QUALITY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_QC_STATUS'
CREATE TABLE r_ppdm_qc_status
(
QC_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_QC_TYPE'
CREATE TABLE r_ppdm_qc_type
(
QC_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_RDBMS'
CREATE TABLE r_ppdm_rdbms
(
RDBMS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
VENDOR_BA_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_REF_VALUE_TYPE'
CREATE TABLE r_ppdm_ref_value_type
(
REFERENCE_VALUE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_ROW_QUALITY'
CREATE TABLE r_ppdm_row_quality
(
ROW_QUALITY_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_RULE_CLASS'
CREATE TABLE r_ppdm_rule_class
(
RULE_CLASS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_RULE_COMP_TYPE'
CREATE TABLE r_ppdm_rule_comp_type
(
RULE_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_RULE_DETAIL_TYPE'
CREATE TABLE r_ppdm_rule_detail_type
(
RULE_DETAIL_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_RULE_PURPOSE'
CREATE TABLE r_ppdm_rule_purpose
(
RULE_PURPOSE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_RULE_STATUS'
CREATE TABLE r_ppdm_rule_status
(
RULE_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_RULE_USE_COND'
CREATE TABLE r_ppdm_rule_use_cond
(
USE_CONDITION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_RULE_XREF_COND'
CREATE TABLE r_ppdm_rule_xref_cond
(
RULE_XREF_CONDITION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_RULE_XREF_TYPE'
CREATE TABLE r_ppdm_rule_xref_type
(
RULE_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_SCHEMA_ENTITY'
CREATE TABLE r_ppdm_schema_entity
(
ELEMENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_SCHEMA_GROUP'
CREATE TABLE r_ppdm_schema_group
(
SCHEMA_GROUP_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_SYSTEM_TYPE'
CREATE TABLE r_ppdm_system_type
(
PPDM_SYSTEM_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_TABLE_TYPE'
CREATE TABLE r_ppdm_table_type
(
TABLE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_UOM_ALIAS_TYPE'
CREATE TABLE r_ppdm_uom_alias_type
(
UOM_ALIAS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PPDM_UOM_USAGE'
CREATE TABLE r_ppdm_uom_usage
(
UOM_USAGE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PRESERVE_QUALITY'
CREATE TABLE r_preserve_quality
(
PRESERVATION_QUALITY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PRESERVE_TYPE'
CREATE TABLE r_preserve_type
(
PRESERVATION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PRODUCTION_METHOD'
CREATE TABLE r_production_method
(
PRODUCTION_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PRODUCT_COMPONENT_TYPE'
CREATE TABLE r_product_component_type
(
PRODUCT_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PROD_STRING_COMP_TYPE'
CREATE TABLE r_prod_string_comp_type
(
PROD_STRING_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PROD_STRING_STATUS'
CREATE TABLE r_prod_string_status
(
STATUS_TYPE VARCHAR(40) NOT NULL,
STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
STATUS_GROUP VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PROD_STRING_STAT_TYPE'
CREATE TABLE r_prod_string_stat_type
(
STATUS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PROD_STRING_TYPE'
CREATE TABLE r_prod_string_type
(
PROD_STRING_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PROD_STR_FM_STATUS'
CREATE TABLE r_prod_str_fm_status
(
STATUS_TYPE VARCHAR(40) NOT NULL,
STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
STATUS_GROUP VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PROD_STR_FM_STAT_TYPE'
CREATE TABLE r_prod_str_fm_stat_type
(
STATUS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PROJECTION_TYPE'
CREATE TABLE r_projection_type
(
PROJECTION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PROJECT_ALIAS_TYPE'
CREATE TABLE r_project_alias_type
(
PROJ_ALIAS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PROJECT_BA_ROLE'
CREATE TABLE r_project_ba_role
(
ROLE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PROJECT_COMP_REASON'
CREATE TABLE r_project_comp_reason
(
COMPONENT_REASON VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PROJECT_COMP_TYPE'
CREATE TABLE r_project_comp_type
(
COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PROJECT_CONDITION'
CREATE TABLE r_project_condition
(
PROJECT_TYPE VARCHAR(40) NOT NULL,
CONDITION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PROJECT_EQUIP_ROLE'
CREATE TABLE r_project_equip_role
(
EQUIP_ROLE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PROJECT_STATUS'
CREATE TABLE r_project_status
(
STATUS_TYPE VARCHAR(40) NOT NULL,
STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PROJECT_STATUS_TYPE'
CREATE TABLE r_project_status_type
(
STATUS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROJECT_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PROJECT_TYPE'
CREATE TABLE r_project_type
(
PROJECT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PROJ_STEP_TYPE'
CREATE TABLE r_proj_step_type
(
STEP_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PROJ_STEP_XREF_TYPE'
CREATE TABLE r_proj_step_xref_type
(
PROJECT_STEP_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PROPPANT_TYPE'
CREATE TABLE r_proppant_type
(
PROPPANT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_PUBLICATION_NAME'
CREATE TABLE r_publication_name
(
PUBLICATION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_QUALIFIER_TYPE'
CREATE TABLE r_qualifier_type
(
QUALIFIER_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_QUALITY'
CREATE TABLE r_quality
(
QUALITY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RATE_CONDITION'
CREATE TABLE r_rate_condition
(
RATE_CONDITION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RATE_SCHEDULE'
CREATE TABLE r_rate_schedule
(
RATE_SCHEDULE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RATE_SCHEDULE_COMP_TYPE'
CREATE TABLE r_rate_schedule_comp_type
(
RATE_SCHEDULE_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RATE_SCHED_XREF'
CREATE TABLE r_rate_sched_xref
(
RATE_SCHEDULE_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RATE_TYPE'
CREATE TABLE r_rate_type
(
RATE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RATIO_CURVE_TYPE'
CREATE TABLE r_ratio_curve_type
(
RATIO_CURVE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RATIO_FLUID_TYPE'
CREATE TABLE r_ratio_fluid_type
(
RATIO_FLUID_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RECORDER_POSITION'
CREATE TABLE r_recorder_position
(
RECORDER_POSITION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RECORDER_TYPE'
CREATE TABLE r_recorder_type
(
RECORDER_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_REMARK_TYPE'
CREATE TABLE r_remark_type
(
REMARK_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_REMARK_USE_TYPE'
CREATE TABLE r_remark_use_type
(
REMARK_USE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_REPEAT_STRAT_TYPE'
CREATE TABLE r_repeat_strat_type
(
REPEAT_STRAT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_REPORT_HIER_COMP'
CREATE TABLE r_report_hier_comp
(
COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_REPORT_HIER_LEVEL'
CREATE TABLE r_report_hier_level
(
LEVEL_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_REPORT_HIER_TYPE'
CREATE TABLE r_report_hier_type
(
HIERARCHY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_REP_HIER_ALIAS_TYPE'
CREATE TABLE r_rep_hier_alias_type
(
REP_HIER_ALIAS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RESENT_COMP_TYPE'
CREATE TABLE r_resent_comp_type
(
RESENT_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RESENT_CONFIDENCE'
CREATE TABLE r_resent_confidence
(
CONFIDENCE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RESENT_GROUP_TYPE'
CREATE TABLE r_resent_group_type
(
GROUP_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RESENT_REV_CAT'
CREATE TABLE r_resent_rev_cat
(
CATEGORY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RESENT_USE_TYPE'
CREATE TABLE r_resent_use_type
(
USE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RESENT_VOL_METHOD'
CREATE TABLE r_resent_vol_method
(
VOLUME_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RESENT_XREF_TYPE'
CREATE TABLE r_resent_xref_type
(
XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_REST_ACTIVITY'
CREATE TABLE r_rest_activity
(
RESTRICTED_ACTIVITY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_REST_DURATION'
CREATE TABLE r_rest_duration
(
REST_DURATION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_REST_REMARK'
CREATE TABLE r_rest_remark
(
RESTRICTION_REMARK_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_REST_TYPE'
CREATE TABLE r_rest_type
(
RESTRICTION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RETENTION_PERIOD'
CREATE TABLE r_retention_period
(
RETENTION_PERIOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_REVISION_METHOD'
CREATE TABLE r_revision_method
(
REVISION_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RIG_BLOWOUT_PREVENTER'
CREATE TABLE r_rig_blowout_preventer
(
BLOWOUT_PREVENTER_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RIG_CATEGORY'
CREATE TABLE r_rig_category
(
RIG_CATEGORY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RIG_CLASS'
CREATE TABLE r_rig_class
(
RIG_CLASS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RIG_CODE'
CREATE TABLE r_rig_code
(
RIG_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RIG_DESANDER_TYPE'
CREATE TABLE r_rig_desander_type
(
DESANDER_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RIG_DESILTER_TYPE'
CREATE TABLE r_rig_desilter_type
(
DESILTER_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RIG_DRAWWORKS'
CREATE TABLE r_rig_drawworks
(
DRAWWORKS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RIG_GENERATOR_TYPE'
CREATE TABLE r_rig_generator_type
(
PLANT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RIG_HOOKBLOCK_TYPE'
CREATE TABLE r_rig_hookblock_type
(
HOOKBLOCK_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RIG_MAST'
CREATE TABLE r_rig_mast
(
MAST_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RIG_OVERHEAD_CAPACITY'
CREATE TABLE r_rig_overhead_capacity
(
CAPACITY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RIG_OVERHEAD_TYPE'
CREATE TABLE r_rig_overhead_type
(
OVERHEAD_EQUIP_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RIG_PUMP'
CREATE TABLE r_rig_pump
(
PUMP_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RIG_PUMP_FUNCTION'
CREATE TABLE r_rig_pump_function
(
PUMP_FUNCTION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RIG_SUBSTRUCTURE'
CREATE TABLE r_rig_substructure
(
SUBSTRUCTURE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RIG_SWIVEL_TYPE'
CREATE TABLE r_rig_swivel_type
(
SWIVEL_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RIG_TYPE'
CREATE TABLE r_rig_type
(
RIG_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RMII_CONTACT_TYPE'
CREATE TABLE r_rmii_contact_type
(
CONTACT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RMII_CONTENT_TYPE'
CREATE TABLE r_rmii_content_type
(
RMII_CONTENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RMII_DEFICIENCY'
CREATE TABLE r_rmii_deficiency
(
DEFICIENCY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RMII_DESC_TYPE'
CREATE TABLE r_rmii_desc_type
(
DESCRIPTION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RMII_GROUP_TYPE'
CREATE TABLE r_rmii_group_type
(
GROUP_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RMII_METADATA_CODE'
CREATE TABLE r_rmii_metadata_code
(
METADATA_TYPE VARCHAR(40) NOT NULL,
METADATA_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RMII_METADATA_TYPE'
CREATE TABLE r_rmii_metadata_type
(
METADATA_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RMII_QUALITY_CODE'
CREATE TABLE r_rmii_quality_code
(
INFORMATION_QUALITY_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RMII_STATUS'
CREATE TABLE r_rmii_status
(
STATUS_TYPE VARCHAR(40) NOT NULL,
STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RMII_STATUS_TYPE'
CREATE TABLE r_rmii_status_type
(
STATUS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_RM_THESAURUS_XREF'
CREATE TABLE r_rm_thesaurus_xref
(
THESAURUS_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ROAD_CONDITION'
CREATE TABLE r_road_condition
(
ROAD_CONDITION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ROAD_CONTROL_TYPE'
CREATE TABLE r_road_control_type
(
CONTROL_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ROAD_DRIVING_SIDE'
CREATE TABLE r_road_driving_side
(
DRIVING_SIDE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ROAD_TRAFFIC_FLOW_TYPE'
CREATE TABLE r_road_traffic_flow_type
(
TRAFFIC_FLOW_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ROCK_CLASS_SCHEME'
CREATE TABLE r_rock_class_scheme
(
ROCK_CLASS_SCHEME VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ROLL_ALONG_METHOD'
CREATE TABLE r_roll_along_method
(
ROLL_ALONG_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_ROYALTY_TYPE'
CREATE TABLE r_royalty_type
(
ROYALTY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SALINITY_TYPE'
CREATE TABLE r_salinity_type
(
SALINITY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SAMPLE_COLLECTION_TYPE'
CREATE TABLE r_sample_collection_type
(
COLLECTION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SAMPLE_COLLECT_METHOD'
CREATE TABLE r_sample_collect_method
(
COLLECT_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SAMPLE_COMP_TYPE'
CREATE TABLE r_sample_comp_type
(
SAMPLE_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SAMPLE_CONTAMINANT'
CREATE TABLE r_sample_contaminant
(
SAMPLE_CONTAMINANT VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SAMPLE_DESC_CODE'
CREATE TABLE r_sample_desc_code
(
DESCRIPTION_TYPE VARCHAR(40) NOT NULL,
DESCRIPTION_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SAMPLE_DESC_TYPE'
CREATE TABLE r_sample_desc_type
(
DESCRIPTION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SAMPLE_FRACTION_TYPE'
CREATE TABLE r_sample_fraction_type
(
SAMPLE_FRACTION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SAMPLE_LOCATION'
CREATE TABLE r_sample_location
(
SAMPLE_LOCATION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SAMPLE_PHASE'
CREATE TABLE r_sample_phase
(
PHASE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SAMPLE_PREP_CLASS'
CREATE TABLE r_sample_prep_class
(
PREPARATION_CLASS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SAMPLE_REF_VALUE_TYPE'
CREATE TABLE r_sample_ref_value_type
(
REFERENCE_VALUE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SAMPLE_SHAPE'
CREATE TABLE r_sample_shape
(
SAMPLE_SHAPE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SAMPLE_TYPE'
CREATE TABLE r_sample_type
(
SAMPLE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SCALE_TRANSFORM'
CREATE TABLE r_scale_transform
(
SCALE_TRANSFORM VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SCREEN_LOCATION'
CREATE TABLE r_screen_location
(
SCREEN_LOCATION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SECTION_TYPE'
CREATE TABLE r_section_type
(
SECTION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEISMIC_PATH'
CREATE TABLE r_seismic_path
(
SEISMIC_PATH VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_3D_TYPE'
CREATE TABLE r_seis_3d_type
(
SEISMIC_3D_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_ACTIVITY_CLASS'
CREATE TABLE r_seis_activity_class
(
SEIS_ACTIVITY_CLASS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_ACTIVITY_TYPE'
CREATE TABLE r_seis_activity_type
(
SEIS_ACTIVITY_CLASS VARCHAR(40) NOT NULL,
SEIS_ACTIVITY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_AUTHORIZE_LIMIT'
CREATE TABLE r_seis_authorize_limit
(
LIMIT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_AUTHORIZE_REASON'
CREATE TABLE r_seis_authorize_reason
(
REASON_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_AUTHORIZE_TYPE'
CREATE TABLE r_seis_authorize_type
(
AUTHORIZE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_BIN_METHOD'
CREATE TABLE r_seis_bin_method
(
BIN_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_BIN_OUTLINE_TYPE'
CREATE TABLE r_seis_bin_outline_type
(
BIN_OUTLINE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_CABLE_MAKE'
CREATE TABLE r_seis_cable_make
(
CABLE_MAKE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_CHANNEL_TYPE'
CREATE TABLE r_seis_channel_type
(
CHANNEL_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_DIMENSION'
CREATE TABLE r_seis_dimension
(
SEIS_DIMENSION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_ENERGY_TYPE'
CREATE TABLE r_seis_energy_type
(
SEIS_ENERGY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_FLOW_DESC_TYPE'
CREATE TABLE r_seis_flow_desc_type
(
FLOW_DESC_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_GROUP_TYPE'
CREATE TABLE r_seis_group_type
(
SEIS_GROUP_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_INSP_COMPONENT_TYPE'
CREATE TABLE r_seis_insp_component_type
(
SEIS_INSP_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_LIC_COND'
CREATE TABLE r_seis_lic_cond
(
CONDITION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_LIC_COND_CODE'
CREATE TABLE r_seis_lic_cond_code
(
CONDITION_TYPE VARCHAR(40) NOT NULL,
CONDITION_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_LIC_DUE_CONDITION'
CREATE TABLE r_seis_lic_due_condition
(
DUE_CONDITION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_LIC_VIOL_RESOL'
CREATE TABLE r_seis_lic_viol_resol
(
RESOLVE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_LIC_VIOL_TYPE'
CREATE TABLE r_seis_lic_viol_type
(
VIOLATION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_PARM_ORIGIN'
CREATE TABLE r_seis_parm_origin
(
PARAMETER_ORIGIN VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_PATCH_TYPE'
CREATE TABLE r_seis_patch_type
(
PATCH_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_PICK_METHOD'
CREATE TABLE r_seis_pick_method
(
PICK_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_PROC_COMP_TYPE'
CREATE TABLE r_seis_proc_comp_type
(
PROCESSING_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_PROC_PARM'
CREATE TABLE r_seis_proc_parm
(
PARAMETER_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_PROC_SET_TYPE'
CREATE TABLE r_seis_proc_set_type
(
PROC_SET_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_PROC_STATUS'
CREATE TABLE r_seis_proc_status
(
PROCESS_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_PROC_STEP_NAME'
CREATE TABLE r_seis_proc_step_name
(
STEP_NAME VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_PROC_STEP_TYPE'
CREATE TABLE r_seis_proc_step_type
(
STEP_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_RCRD_FMT_TYPE'
CREATE TABLE r_seis_rcrd_fmt_type
(
SEIS_RCRD_FMT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_RCRD_MAKE'
CREATE TABLE r_seis_rcrd_make
(
SEIS_RCRD_MAKE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_RCVR_ARRY_TYPE'
CREATE TABLE r_seis_rcvr_arry_type
(
SEIS_RCVR_ARRAY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_RCVR_TYPE'
CREATE TABLE r_seis_rcvr_type
(
SEIS_RCVR_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_RECORD_TYPE'
CREATE TABLE r_seis_record_type
(
RECORD_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_REF_DATUM'
CREATE TABLE r_seis_ref_datum
(
REFERENCE_DATUM VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_REF_NUM_TYPE'
CREATE TABLE r_seis_ref_num_type
(
REPORTED_REF_NUM_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_SAMPLE_TYPE'
CREATE TABLE r_seis_sample_type
(
SAMPLE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_SEGMENT_REASON'
CREATE TABLE r_seis_segment_reason
(
SEIS_SEGMENT_REASON VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_SET_COMPONENT_TYPE'
CREATE TABLE r_seis_set_component_type
(
SEIS_SET_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_SPECTRUM_TYPE'
CREATE TABLE r_seis_spectrum_type
(
SEIS_SPECTRUM_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_SRC_ARRAY_TYPE'
CREATE TABLE r_seis_src_array_type
(
SEIS_SRC_ARRAY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_SRC_MAKE'
CREATE TABLE r_seis_src_make
(
SEIS_SRC_MAKE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
VIB_PEAK_FORCE DECIMAL(10,5),
VIB_PEAK_FORCE_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_STATION_TYPE'
CREATE TABLE r_seis_station_type
(
SEIS_STATION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_STATUS'
CREATE TABLE r_seis_status
(
SEIS_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_STATUS_TYPE'
CREATE TABLE r_seis_status_type
(
STATUS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_SUMMARY_TYPE'
CREATE TABLE r_seis_summary_type
(
SUMMARY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_SWEEP_TYPE'
CREATE TABLE r_seis_sweep_type
(
SEIS_SWEEP_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEIS_TRANS_COMP_TYPE'
CREATE TABLE r_seis_trans_comp_type
(
SEIS_TRANS_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEND_METHOD'
CREATE TABLE r_send_method
(
SEND_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SERVICE_QUALITY'
CREATE TABLE r_service_quality
(
SERVICE_QUALITY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SEVERITY'
CREATE TABLE r_severity
(
SEVERITY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SF_AIRSTRIP_TYPE'
CREATE TABLE r_sf_airstrip_type
(
AIRSTRIP_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SF_BRIDGE_TYPE'
CREATE TABLE r_sf_bridge_type
(
BRIDGE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SF_COMPONENT_TYPE'
CREATE TABLE r_sf_component_type
(
SF_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SF_DESC_TYPE'
CREATE TABLE r_sf_desc_type
(
DESC_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SF_DESC_VALUE'
CREATE TABLE r_sf_desc_value
(
DESC_TYPE VARCHAR(40) NOT NULL,
VALUE_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SF_DOCK_TYPE'
CREATE TABLE r_sf_dock_type
(
DOCK_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SF_ELECTRIC_TYPE'
CREATE TABLE r_sf_electric_type
(
ELECTRIC_FACILITY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SF_LANDING_TYPE'
CREATE TABLE r_sf_landing_type
(
LANDING_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SF_MAINTAIN_TYPE'
CREATE TABLE r_sf_maintain_type
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
MAINTAIN_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SF_PAD_TYPE'
CREATE TABLE r_sf_pad_type
(
PAD_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SF_ROAD_TYPE'
CREATE TABLE r_sf_road_type
(
ROAD_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SF_STATUS'
CREATE TABLE r_sf_status
(
STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SF_STATUS_TYPE'
CREATE TABLE r_sf_status_type
(
STATUS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SF_SURFACE_TYPE'
CREATE TABLE r_sf_surface_type
(
SURFACE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SF_TOWER_TYPE'
CREATE TABLE r_sf_tower_type
(
TOWER_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SF_VEHICLE_TYPE'
CREATE TABLE r_sf_vehicle_type
(
VEHICLE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SF_VESSEL_ROLE'
CREATE TABLE r_sf_vessel_role
(
VESSEL_ROLE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SF_VESSEL_TYPE'
CREATE TABLE r_sf_vessel_type
(
VESSEL_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SF_XREF_TYPE'
CREATE TABLE r_sf_xref_type
(
XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SHOW_TYPE'
CREATE TABLE r_show_type
(
SHOW_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SHUTIN_PRESS_TYPE'
CREATE TABLE r_shutin_press_type
(
SHUTIN_PRESSURE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SOURCE'
CREATE TABLE r_source
(
SOURCE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_SOURCE VARCHAR(40),
SHORT_NAME VARCHAR(30),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SOURCE_ORIGIN'
CREATE TABLE r_source_origin
(
SOURCE VARCHAR(40) NOT NULL,
ORIGIN_OBS_NO INT,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
OWNER_BA_ID VARCHAR(40),
PHYSICAL_ITEM_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROJECT_ID VARCHAR(40),
REMARK VARCHAR(2000),
ROW_SOURCE VARCHAR(40),
SHORT_NAME VARCHAR(30),
SOURCE_DOCUMENT VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SPACING_UNIT_TYPE'
CREATE TABLE r_spacing_unit_type
(
SPACING_UNIT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SPATIAL_DESC_COMP_TYPE'
CREATE TABLE r_spatial_desc_comp_type
(
SP_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SPATIAL_DESC_TYPE'
CREATE TABLE r_spatial_desc_type
(
SPATIAL_DESC_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SPATIAL_XREF_TYPE'
CREATE TABLE r_spatial_xref_type
(
SPATIAL_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SP_POINT_VERSION_TYPE'
CREATE TABLE r_sp_point_version_type
(
VERSION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SP_ZONE_DEFIN_XREF'
CREATE TABLE r_sp_zone_defin_xref
(
XREF_REASON VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SP_ZONE_DERIV'
CREATE TABLE r_sp_zone_deriv
(
ZONE_DERIVATION_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SP_ZONE_TYPE'
CREATE TABLE r_sp_zone_type
(
ZONE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STATUS_GROUP'
CREATE TABLE r_status_group
(
STATUS_GROUP VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STORE_STATUS'
CREATE TABLE r_store_status
(
PHYSICAL_STORE_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STRAT_ACQTN_METHOD'
CREATE TABLE r_strat_acqtn_method
(
ACQTN_METHOD_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STRAT_AGE_METHOD'
CREATE TABLE r_strat_age_method
(
STRAT_AGE_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STRAT_ALIAS_TYPE'
CREATE TABLE r_strat_alias_type
(
STRAT_ALIAS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STRAT_COLUMN_TYPE'
CREATE TABLE r_strat_column_type
(
STRAT_COLUMN_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STRAT_COL_XREF_TYPE'
CREATE TABLE r_strat_col_xref_type
(
STRAT_COLUMN_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STRAT_CORR_CRITERIA'
CREATE TABLE r_strat_corr_criteria
(
STRAT_CORRELATION_CRITERIA VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STRAT_CORR_TYPE'
CREATE TABLE r_strat_corr_type
(
STRAT_CORRELATION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STRAT_DESC_TYPE'
CREATE TABLE r_strat_desc_type
(
DESCRIPTION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STRAT_EQUIV_DIRECT'
CREATE TABLE r_strat_equiv_direct
(
STRAT_EQUIVALENCE_DIRECTION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STRAT_EQUIV_TYPE'
CREATE TABLE r_strat_equiv_type
(
STRAT_EQUIVALENCE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STRAT_FLD_NODE_LOC'
CREATE TABLE r_strat_fld_node_loc
(
NODE_LOC_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STRAT_HIERARCHY'
CREATE TABLE r_strat_hierarchy
(
STRAT_HIERARCHY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STRAT_INTERP_METHOD'
CREATE TABLE r_strat_interp_method
(
STRAT_INTERPRET_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STRAT_NAME_SET_TYPE'
CREATE TABLE r_strat_name_set_type
(
STRAT_NAME_SET_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STRAT_OCCURRENCE_TYPE'
CREATE TABLE r_strat_occurrence_type
(
OCCURRENCE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STRAT_STATUS'
CREATE TABLE r_strat_status
(
STRAT_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STRAT_TOPO_RELATION'
CREATE TABLE r_strat_topo_relation
(
TOPO_RELATION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STRAT_TYPE'
CREATE TABLE r_strat_type
(
STRAT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STRAT_UNIT_COMP_TYPE'
CREATE TABLE r_strat_unit_comp_type
(
STRAT_UNIT_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STRAT_UNIT_DESC'
CREATE TABLE r_strat_unit_desc
(
STRAT_UNIT_DESC VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STRAT_UNIT_QUALIFIER'
CREATE TABLE r_strat_unit_qualifier
(
QUALIFIER VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STRAT_UNIT_TYPE'
CREATE TABLE r_strat_unit_type
(
STRAT_TYPE VARCHAR(40) NOT NULL,
STRAT_UNIT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STREAMER_COMP'
CREATE TABLE r_streamer_comp
(
COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STREAMER_POSITION'
CREATE TABLE r_streamer_position
(
STREAMER_POSITION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_STUDY_TYPE'
CREATE TABLE r_study_type
(
STUDY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SUBSTANCE_COMP_TYPE'
CREATE TABLE r_substance_comp_type
(
SUBSTANCE_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SUBSTANCE_PROPERTY'
CREATE TABLE r_substance_property
(
SUBSTANCE_PROPERTY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SUBSTANCE_USE_RULE'
CREATE TABLE r_substance_use_rule
(
SUBSTANCE_USE_RULE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SUBSTANCE_XREF_TYPE'
CREATE TABLE r_substance_xref_type
(
SUBSTANCE_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SW_APP_BA_ROLE'
CREATE TABLE r_sw_app_ba_role
(
SW_APP_BA_ROLE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SW_APP_FUNCTION'
CREATE TABLE r_sw_app_function
(
SW_APP_FUNCTION VARCHAR(40) NOT NULL,
SW_APP_FUNCTION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SW_APP_FUNCTION_TYPE'
CREATE TABLE r_sw_app_function_type
(
SW_APP_FUNCTION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_SW_APP_XREF_TYPE'
CREATE TABLE r_sw_app_xref_type
(
SW_APP_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_TAX_CREDIT_CODE'
CREATE TABLE r_tax_credit_code
(
TAX_CREDIT_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_TEST_EQUIPMENT'
CREATE TABLE r_test_equipment
(
EQUIP_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_TEST_PERIOD_TYPE'
CREATE TABLE r_test_period_type
(
TEST_PERIOD_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_TEST_RECOV_METHOD'
CREATE TABLE r_test_recov_method
(
RECOVERY_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_TEST_RESULT'
CREATE TABLE r_test_result
(
TEST_RESULT VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_TEST_SHUTOFF_TYPE'
CREATE TABLE r_test_shutoff_type
(
TEST_SHUTOFF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_TEST_SUBTYPE'
CREATE TABLE r_test_subtype
(
TEST_TYPE VARCHAR(40) NOT NULL,
TEST_SUBTYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_TIMEZONE'
CREATE TABLE r_timezone
(
TIMEZONE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_TITLE_OWN_TYPE'
CREATE TABLE r_title_own_type
(
TITLE_OWN_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_TOUR_OCCURRENCE_TYPE'
CREATE TABLE r_tour_occurrence_type
(
OCCURRENCE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_TRACE_HEADER_FORMAT'
CREATE TABLE r_trace_header_format
(
HEADER_FORMAT VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_TRACE_HEADER_WORD'
CREATE TABLE r_trace_header_word
(
HEADER_WORD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_TRANS_COMP_TYPE'
CREATE TABLE r_trans_comp_type
(
TRANS_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_TRANS_STATUS'
CREATE TABLE r_trans_status
(
TRANSACTION_STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_TRANS_TYPE'
CREATE TABLE r_trans_type
(
TRANS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_TREATMENT_FLUID'
CREATE TABLE r_treatment_fluid
(
TREATMENT_FLUID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_TREATMENT_TYPE'
CREATE TABLE r_treatment_type
(
TREATMENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_TUBING_GRADE'
CREATE TABLE r_tubing_grade
(
TUBING_GRADE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_TUBING_TYPE'
CREATE TABLE r_tubing_type
(
TUBING_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_TVD_METHOD'
CREATE TABLE r_tvd_method
(
TVD_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_VALUE_QUALITY'
CREATE TABLE r_value_quality
(
VALUE_QUALITY VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_VELOCITY_COMPUTE'
CREATE TABLE r_velocity_compute
(
COMPUTE_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_VELOCITY_DIMENSION'
CREATE TABLE r_velocity_dimension
(
VELOCITY_DIMENSION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_VELOCITY_TYPE'
CREATE TABLE r_velocity_type
(
VELOCITY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_VERTICAL_DATUM_TYPE'
CREATE TABLE r_vertical_datum_type
(
VERTICAL_DATUM_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_VESSEL_REFERENCE'
CREATE TABLE r_vessel_reference
(
REFERENCE_POINT VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_VESSEL_SIZE'
CREATE TABLE r_vessel_size
(
VESSEL_SIZE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_VOLUME_FRACTION'
CREATE TABLE r_volume_fraction
(
VOLUME_FRACTION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_VOLUME_METHOD'
CREATE TABLE r_volume_method
(
VOLUME_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_VSP_TYPE'
CREATE TABLE r_vsp_type
(
VSP_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WASTE_ADJUST_REASON'
CREATE TABLE r_waste_adjust_reason
(
ADJUST_REASON VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WASTE_FACILITY_TYPE'
CREATE TABLE r_waste_facility_type
(
WASTE_FACILITY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WASTE_HANDLING'
CREATE TABLE r_waste_handling
(
WASTE_HANDLING_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WASTE_HAZARD_TYPE'
CREATE TABLE r_waste_hazard_type
(
WASTE_HAZARD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WASTE_MATERIAL'
CREATE TABLE r_waste_material
(
WASTE_MATERIAL VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PREFERRED_UOM VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WASTE_ORIGIN'
CREATE TABLE r_waste_origin
(
WASTE_ORIGIN VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WATER_BOTTOM_ZONE'
CREATE TABLE r_water_bottom_zone
(
WATER_BOTTOM_ZONE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WATER_CONDITION'
CREATE TABLE r_water_condition
(
WATER_CONDITION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WATER_DATUM'
CREATE TABLE r_water_datum
(
WATER_DATUM VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WATER_PROPERTY_CODE'
CREATE TABLE r_water_property_code
(
WATER_PROPERTY VARCHAR(40) NOT NULL,
WATER_PROPERTY_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WEATHER_CONDITION'
CREATE TABLE r_weather_condition
(
WEATHER_CONDITION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_ACTIVITY_CAUSE'
CREATE TABLE r_well_activity_cause
(
CAUSE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PARENT_CAUSE_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_ACTIVITY_COMP_TYPE'
CREATE TABLE r_well_activity_comp_type
(
WELL_ACTIVITY_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_ACT_TYPE_EQUIV'
CREATE TABLE r_well_act_type_equiv
(
EQUIV_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_ALIAS_LOCATION'
CREATE TABLE r_well_alias_location
(
LOCATION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_CIRC_PRESS_TYPE'
CREATE TABLE r_well_circ_press_type
(
CIRC_PRESSURE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_CLASS'
CREATE TABLE r_well_class
(
WELL_CLASS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_COMPONENT_TYPE'
CREATE TABLE r_well_component_type
(
WELL_COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_DATUM_TYPE'
CREATE TABLE r_well_datum_type
(
WELL_DATUM_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_DOWNTIME_TYPE'
CREATE TABLE r_well_downtime_type
(
DOWNTIME_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_DRILL_OP_TYPE'
CREATE TABLE r_well_drill_op_type
(
DRILL_OP_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_FACILITY_USE_TYPE'
CREATE TABLE r_well_facility_use_type
(
FACILITY_USE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_LEVEL_TYPE'
CREATE TABLE r_well_level_type
(
WELL_LEVEL_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_LIC_COND'
CREATE TABLE r_well_lic_cond
(
CONDITION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_LIC_COND_CODE'
CREATE TABLE r_well_lic_cond_code
(
CONDITION_TYPE VARCHAR(40) NOT NULL,
CONDITION_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_LIC_DUE_CONDITION'
CREATE TABLE r_well_lic_due_condition
(
DUE_CONDITION VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_LIC_VIOL_RESOL'
CREATE TABLE r_well_lic_viol_resol
(
RESOLVE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_LIC_VIOL_TYPE'
CREATE TABLE r_well_lic_viol_type
(
VIOLATION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_LOG_CLASS'
CREATE TABLE r_well_log_class
(
WELL_LOG_CLASS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_NODE_PICK_METHOD'
CREATE TABLE r_well_node_pick_method
(
PICK_METHOD VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_PROFILE_TYPE'
CREATE TABLE r_well_profile_type
(
WELL_PROFILE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_QUALIFIC_TYPE'
CREATE TABLE r_well_qualific_type
(
WELL_QUALIFIC_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_REF_VALUE_TYPE'
CREATE TABLE r_well_ref_value_type
(
REFERENCE_VALUE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_RELATIONSHIP'
CREATE TABLE r_well_relationship
(
WELL_RELATIONSHIP VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_SERVICE_METRIC'
CREATE TABLE r_well_service_metric
(
SERVICE_METRIC VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_SERV_METRIC_CODE'
CREATE TABLE r_well_serv_metric_code
(
SERVICE_METRIC VARCHAR(40) NOT NULL,
METRIC_CODE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_SET_ROLE'
CREATE TABLE r_well_set_role
(
WELL_SET_ROLE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_SET_TYPE'
CREATE TABLE r_well_set_type
(
WELL_SET_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_SF_USE_TYPE'
CREATE TABLE r_well_sf_use_type
(
SF_USE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_STATUS'
CREATE TABLE r_well_status
(
STATUS_TYPE VARCHAR(40) NOT NULL,
STATUS VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
STATUS_GROUP VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_STATUS_QUAL'
CREATE TABLE r_well_status_qual
(
STATUS_TYPE VARCHAR(40) NOT NULL,
STATUS_QUALIFIER VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_STATUS_QUAL_VALUE'
CREATE TABLE r_well_status_qual_value
(
STATUS_TYPE VARCHAR(40) NOT NULL,
STATUS VARCHAR(40) NOT NULL,
STATUS_QUALIFIER VARCHAR(40) NOT NULL,
STATUS_QUALIFIER_VALUE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
STATUS_GROUP VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_STATUS_SYMBOL'
CREATE TABLE r_well_status_symbol
(
PLOT_SYMBOL VARCHAR(40) NOT NULL,
PLOT_SYMBOL_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
QUALIFIER_VALUE VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STATUS VARCHAR(40),
STATUS_FACET_COUNT BIGINT,
STATUS_QUALIFIER VARCHAR(40),
STATUS_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_STATUS_TYPE'
CREATE TABLE r_well_status_type
(
STATUS_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_STATUS_XREF'
CREATE TABLE r_well_status_xref
(
STATUS_XREF_ID VARCHAR(40) NOT NULL,
STATUS_XREF_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAPPING_COUNT BIGINT,
PPDM_GUID VARCHAR(38),
QUALIFIER_VALUE1 VARCHAR(40),
QUALIFIER_VALUE2 VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STATUS1 VARCHAR(40),
STATUS2 VARCHAR(40),
STATUS_QUALIFIER1 VARCHAR(40),
STATUS_QUALIFIER2 VARCHAR(40),
STATUS_TYPE1 VARCHAR(40),
STATUS_TYPE2 VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_TEST_TYPE'
CREATE TABLE r_well_test_type
(
WELL_TEST_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_XREF_TYPE'
CREATE TABLE r_well_xref_type
(
XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WELL_ZONE_INT_VALUE'
CREATE TABLE r_well_zone_int_value
(
VALUE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WIND_STRENGTH'
CREATE TABLE r_wind_strength
(
WIND_STRENGTH VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WORK_BID_TYPE'
CREATE TABLE r_work_bid_type
(
WORK_BID_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WO_BA_ROLE'
CREATE TABLE r_wo_ba_role
(
BA_ROLE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WO_COMPONENT_TYPE'
CREATE TABLE r_wo_component_type
(
COMPONENT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WO_CONDITION'
CREATE TABLE r_wo_condition
(
WORK_ORDER_TYPE VARCHAR(40) NOT NULL,
CONDITION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WO_DELIVERY_TYPE'
CREATE TABLE r_wo_delivery_type
(
DELIVERY_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WO_INSTRUCTION'
CREATE TABLE r_wo_instruction
(
INSTRUCTION_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WO_TYPE'
CREATE TABLE r_wo_type
(
WORK_ORDER_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE R_WO_XREF_TYPE'
CREATE TABLE r_wo_xref_type
(
WO_XREF_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SAMPLE'
CREATE TABLE sample
(
SAMPLE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BASE_MD DECIMAL(15,5),
BASE_MD_OUOM VARCHAR(40),
BASE_STRAT_UNIT_ID VARCHAR(40),
COLLECTED_BY_BA_ID VARCHAR(40),
COLLECTED_DATE TIMESTAMP(0),
COLLECTED_EQUIP_ID VARCHAR(40),
COLLECTED_FOR_BA_ID VARCHAR(40),
COLLECTED_TIME TIMESTAMP(0),
COLLECTION_PHASE_TYPE VARCHAR(40),
COLLECTION_PRESS DECIMAL(8,2),
COLLECTION_PRESS_OUOM VARCHAR(40),
COLLECTION_TEMP DECIMAL(10,5),
COLLECTION_TEMP_OUOM VARCHAR(40),
COLLECTION_TEST_TYPE VARCHAR(40),
COLLECTION_TYPE VARCHAR(40),
COMPOSITE_SAMPLE_COUNT BIGINT,
COMPOSITE_SAMPLE_IND VARCHAR(1),
CONDENSED_SECTION_IND VARCHAR(1),
CURRENT_LENGTH DECIMAL(10,3),
CURRENT_LENGTH_OUOM VARCHAR(40),
CURRENT_LENGTH_PERCENT DECIMAL(15,12),
CURRENT_VOLUME DECIMAL(14,4),
CURRENT_VOLUME_OUOM VARCHAR(40),
CURRENT_VOLUME_PERCENT DECIMAL(15,12),
CURRENT_WEIGHT DECIMAL(10,5),
CURRENT_WEIGHT_OUOM VARCHAR(40),
CURRENT_WEIGHT_PERCENT DECIMAL(15,12),
CYLINDER_PRESS DECIMAL(8,2),
CYLINDER_PRESS_OUOM VARCHAR(40),
CYLINDER_TEMP DECIMAL(10,5),
CYLINDER_TEMP_OUOM VARCHAR(40),
DESTROYED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INITIAL_LENGTH DECIMAL(10,3),
INITIAL_LENGTH_OUOM VARCHAR(40),
INITIAL_LENGTH_PERCENT DECIMAL(10,3),
INITIAL_VOLUME DECIMAL(14,4),
INITIAL_VOLUME_OUOM VARCHAR(40),
INITIAL_VOLUME_PERCENT DECIMAL(15,12),
INITIAL_WEIGHT DECIMAL(10,5),
INITIAL_WEIGHT_OUOM VARCHAR(40),
INITIAL_WEIGHT_PERCENT DECIMAL(15,12),
INTERVAL_PERCENT DECIMAL(10,5),
OIL_STAINED_IND VARCHAR(1),
PHYSICAL_ITEM_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REPORTED_MUD_DESC VARCHAR(240),
REPORTED_RES_PRESS DECIMAL(8,2),
REPORTED_RES_PRESS_OUOM VARCHAR(40),
SAMPLE_COUNT BIGINT,
SAMPLE_DIAMETER DECIMAL(8,3),
SAMPLE_DIAMETER_OUOM VARCHAR(40),
SAMPLE_INTERVAL DECIMAL(15,5),
SAMPLE_INTERVAL_OUOM VARCHAR(40),
SAMPLE_QUALITY VARCHAR(40),
SAMPLE_QUALITY_DESC VARCHAR(1024),
SAMPLE_REF_NUM VARCHAR(255),
SAMPLE_SHAPE_TYPE VARCHAR(40),
SAMPLE_TYPE VARCHAR(40),
SAMPLE_WIDTH DECIMAL(10,5),
SAMPLE_WIDTH_OUOM VARCHAR(40),
SEPARATOR_PRESS DECIMAL(8,2),
SEPARATOR_PRESS_OUOM VARCHAR(40),
SEPARATOR_TEMP DECIMAL(10,5),
SEPARATOR_TEMP_OUOM VARCHAR(40),
SOURCE VARCHAR(40),
STORED_EQUIP_ID VARCHAR(40),
STORED_PHASE_TYPE VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
SUB_SAMPLE_IND VARCHAR(1),
TOP_MD DECIMAL(15,5),
TOP_MD_OUOM VARCHAR(40),
TOP_STRAT_UNIT_ID VARCHAR(40),
TOTAL_LENGTH DECIMAL(10,3),
TOTAL_LENGTH_OUOM VARCHAR(40),
TOTAL_VOLUME DECIMAL(14,4),
TOTAL_VOLUME_OUOM VARCHAR(40),
TOTAL_WEIGHT DECIMAL(10,5),
TOTAL_WEIGHT_OUOM VARCHAR(40),
WELL_DATUM_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SAMPLE_ALIAS'
CREATE TABLE sample_alias
(
SAMPLE_ID VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SAMPLE_COMPONENT'
CREATE TABLE sample_component
(
SAMPLE_ID VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
ANL_SOURCE VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
COMPONENT_TYPE VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_SOURCE VARCHAR(40),
PR_STR_UWI VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
STRING_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_ACTIVITY_UWI VARCHAR(40),
WELL_CORE_ID VARCHAR(40),
WELL_CORE_SOURCE VARCHAR(40),
WELL_CORE_UWI VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SAMPLE_DESC_OTHER'
CREATE TABLE sample_desc_other
(
SAMPLE_ID VARCHAR(40) NOT NULL,
DESCRIPTION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AVERAGE_RATIO_VALUE DOUBLE PRECISION,
AVERAGE_VALUE DECIMAL(10,5),
AVERAGE_VALUE_OUOM VARCHAR(40),
AVERAGE_VALUE_UOM VARCHAR(40),
CALCULATE_METHOD_ID VARCHAR(40),
COST DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
CURRENCY_UOM VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
DESCRIPTION VARCHAR(1024),
DESCRIPTION_CODE VARCHAR(40),
DESCRIPTION_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_DATE TIMESTAMP(0),
MAX_RATIO_VALUE DOUBLE PRECISION,
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MIN_DATE TIMESTAMP(0),
MIN_RATIO_VALUE DOUBLE PRECISION,
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_VALUE DOUBLE PRECISION,
REFERENCE_VALUE_OUOM VARCHAR(40),
REFERENCE_VALUE_TYPE VARCHAR(40),
REFERENCE_VALUE_UOM VARCHAR(40),
REMARK VARCHAR(2000),
REPORTED_RATIO VARCHAR(20),
REPORTED_RATIO_OUOM VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SAMPLE_LITH_DESC'
CREATE TABLE sample_lith_desc
(
SAMPLE_ID VARCHAR(40) NOT NULL,
DESCRIPTION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
COLOR_INTENSITY VARCHAR(40),
COLOR_TYPE VARCHAR(40),
CONTAMINANT VARCHAR(40),
DEPOSITIONAL_ENVIRONMENT VARCHAR(40),
DIAGENESIS_TYPE VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LITHOLOGY VARCHAR(40),
OIL_STAIN VARCHAR(40),
PERCENT DECIMAL(15,12),
PERMEABILITY_TYPE VARCHAR(40),
POROSITY_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROCK_MATRIX VARCHAR(40),
ROCK_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SAMPLE_ORIGIN'
CREATE TABLE sample_origin
(
SAMPLE_ID VARCHAR(40) NOT NULL,
COLLECTION_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ANALYSIS_ID VARCHAR(40),
ANALYSIS_SOURCE VARCHAR(40),
ANL_STEP_SEQ_NO INT,
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
COLLECTED_BY_BA_ID VARCHAR(40),
COLLECTED_FOR_BA_ID VARCHAR(40),
COLLECT_METHOD VARCHAR(40),
CORE_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_STATION_ID VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
MEAS_SECTION_ID VARCHAR(40),
MEAS_SECTION_SOURCE VARCHAR(40),
PORTION_DIAMETER DECIMAL(8,3),
PORTION_DIAMETER_OUOM VARCHAR(40),
PORTION_LENGTH DECIMAL(15,5),
PORTION_LENGTH_OUOM VARCHAR(40),
PORTION_VOLUME DECIMAL(14,4),
PORTION_VOLUME_OUOM VARCHAR(40),
PORTION_WEIGHT DECIMAL(10,5),
PORTION_WEIGHT_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROD_STRING_ID VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PROJECT_ID VARCHAR(40),
REMARK VARCHAR(2000),
SAMPLE_PART_ID VARCHAR(40),
SOURCE VARCHAR(40),
WELL_CORE_ID VARCHAR(40),
WELL_SOURCE VARCHAR(40),
WELL_SURVEY_ID VARCHAR(40),
WELL_SURVEY_SOURCE VARCHAR(40),
WELL_UWI VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_3D'
CREATE TABLE seis_3d
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_3D_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SEIS_3D_REASON VARCHAR(40),
SEIS_3D_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_ACQTN_DESIGN'
CREATE TABLE seis_acqtn_design
(
ACQTN_DESIGN_ID VARCHAR(40) NOT NULL,
ACQTN_COMPLETED_DATE TIMESTAMP(0),
ACQTN_COMPLETED_DATE_DESC VARCHAR(8),
ACQTN_DIMENSION VARCHAR(40),
ACQTN_DIRECTION VARCHAR(40),
ACQTN_INLINE_BIN_SIZE DOUBLE PRECISION,
ACQTN_INLINE_BIN_SIZE_OUOM VARCHAR(40),
ACQTN_REMARK VARCHAR(2000),
ACQTN_SHOTPT_INTERVAL DECIMAL(10,5),
ACQTN_SHOTPT_INTERVAL_OUOM VARCHAR(40),
ACQTN_SHOT_LINE_SPACING DECIMAL(10,3),
ACQTN_SHOT_LINE_SPACING_OUOM VARCHAR(40),
ACQTN_SHOT_TIME_INTVL DECIMAL(10,5),
ACQTN_SHOT_TIME_INTVL_OUOM VARCHAR(40),
ACQTN_START_DATE TIMESTAMP(0),
ACQTN_START_DATE_DESC VARCHAR(8),
ACQTN_XLINE_BIN_SIZE DOUBLE PRECISION,
ACQTN_XLINE_BIN_SIZE_OUOM VARCHAR(40),
ACTIVE_IND VARCHAR(1),
ACTUAL_IND VARCHAR(1),
CDP_COVERAGE DOUBLE PRECISION,
EFFECTIVE_DATE TIMESTAMP(0),
ENERGY_CHARGE_SIZE DOUBLE PRECISION,
ENERGY_CHARGE_SIZE_OUOM VARCHAR(40),
ENERGY_OPRG_PSR DECIMAL(6,2),
ENERGY_OPRG_PSR_OUOM VARCHAR(40),
ENERGY_OPRG_VOLUME DECIMAL(14,4),
ENERGY_OPRG_VOLUME_OUOM VARCHAR(40),
ENERGY_SHOT_DEPTH DECIMAL(15,5),
ENERGY_SHOT_DEPTH_OUOM VARCHAR(40),
ENERGY_SRC_ARRAY_SPC DECIMAL(4,1),
ENERGY_SRC_ARRAY_SPC_OUOM VARCHAR(40),
ENERGY_SRC_ARRAY_TYPE VARCHAR(40),
ENERGY_SRC_MAKE VARCHAR(40),
ENERGY_SRC_PER_SHOT DECIMAL(10,5),
ENERGY_SWEEP_DURATION DECIMAL(10,5),
ENERGY_SWEEP_DURATION_OUOM VARCHAR(40),
ENERGY_SWEEP_END_FREQ DECIMAL(10,5),
ENERGY_SWEEP_FREQ_OUOM VARCHAR(40),
ENERGY_SWEEP_MVUP_DIST DECIMAL(10,3),
ENERGY_SWEEP_MVUP_DIST_OUOM VARCHAR(40),
ENERGY_SWEEP_NO BIGINT,
ENERGY_SWEEP_ST_FREQ DECIMAL(10,5),
ENERGY_SWEEP_TAPER DECIMAL(4,1),
ENERGY_SWEEP_TAPER_OUOM VARCHAR(40),
ENERGY_SWEEP_TYPE VARCHAR(40),
ENERGY_TYPE VARCHAR(40),
ENVIRONMENT VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
MONITOR_DEPTH DECIMAL(15,5),
MONITOR_DEPTH_OUOM VARCHAR(40),
NOMINAL_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
RCRD_CHANNEL_COUNT BIGINT,
RCRD_FORMAT_TYPE VARCHAR(40),
RCRD_GAIN_MODE VARCHAR(40),
RCRD_HF_FREQ DECIMAL(10,5),
RCRD_HF_SLOPE DECIMAL(10,5),
RCRD_LF_FREQ DECIMAL(10,5),
RCRD_LF_SLOPE DECIMAL(10,5),
RCRD_MAKE VARCHAR(40),
RCRD_NEAR_SURF_CORR VARCHAR(240),
RCRD_NEAR_SURF_CORR_OUOM VARCHAR(40),
RCRD_NF_FREQ DECIMAL(10,5),
RCRD_NF_IND VARCHAR(1),
RCRD_POLARITY VARCHAR(40),
RCRD_REC_LENGTH DECIMAL(10,5),
RCRD_REC_LENGTH_OUOM VARCHAR(40),
RCRD_SAMPLE_RATE DECIMAL(15,5),
RCRD_SAMPLE_RATE_OUOM VARCHAR(40),
RCVR_LINE_SPACING DECIMAL(10,3),
RCVR_LINE_SPACING_OUOM VARCHAR(40),
REMARK VARCHAR(2000),
REP_WATER_ACOUSTIC_VEL DECIMAL(10,5),
REP_WATER_ACOUSTIC_VEL_OUOM VARCHAR(40),
SHOT_BY VARCHAR(40),
SHOT_FOR VARCHAR(40),
SOURCE VARCHAR(40),
WELL_SRC_AZIMUTH DECIMAL(10,5),
WELL_SRC_AZIMUTH_NORTH VARCHAR(40),
WELL_SRC_OFFSET DECIMAL(10,5),
WELL_SRC_OFFSET_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_ACQTN_SPECTRUM'
CREATE TABLE seis_acqtn_spectrum
(
ACQTN_DESIGN_ID VARCHAR(40) NOT NULL,
SEIS_SPECTRUM_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESIGN_DESC VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_ACQTN_SURVEY'
CREATE TABLE seis_acqtn_survey
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_ACQTN_SURVEY_ID VARCHAR(40) NOT NULL,
ACQTN_SURVEY_NAME VARCHAR(255),
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
COMPLETED_DATE TIMESTAMP(0),
COMPLETED_DATE_DESC VARCHAR(8),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SEIS_DIMENSION VARCHAR(40),
SHOT_FOR VARCHAR(40),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
START_DATE_DESC VARCHAR(8),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_ACTIVITY'
CREATE TABLE seis_activity
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
ACTIVITY_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_DURATION DECIMAL(10,5),
ACTIVITY_DURATION_OUOM VARCHAR(40),
AREA_SIZE DECIMAL(20,10),
AREA_SIZE_OUOM VARCHAR(40),
CREW_COMPANY_BA_ID VARCHAR(40),
CREW_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
END_TIMEZONE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FIRST_NLINE_NO INT,
FIRST_SEIS_POINT_ID VARCHAR(16),
FIRST_XLINE_NO INT,
LAST_NLINE_NO INT,
LAST_SEIS_POINT_ID VARCHAR(16),
LAST_XLINE_NO INT,
LINE_LENGTH DECIMAL(10,3),
LINE_LENGTH_OUOM VARCHAR(40),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SEIS_ACTIVITY_CLASS VARCHAR(40),
SEIS_ACTIVITY_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
START_TIME TIMESTAMP(0),
START_TIMEZONE VARCHAR(40),
TOTAL_TIME_ELAPSED DECIMAL(10,5),
TOTAL_TIME_ELAPSED_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_ALIAS'
CREATE TABLE seis_alias
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
SEIS_ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_BA_SERVICE'
CREATE TABLE seis_ba_service
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
PROVIDED_BY VARCHAR(40) NOT NULL,
SERVICE_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
BA_SERVICE_TYPE VARCHAR(40),
CONTACT_BA_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PROVISION_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REMARK VARCHAR(2000),
REPRESENTED_BA_ID VARCHAR(40),
SERVICE_DATE TIMESTAMP(0),
SERVICE_QUALITY VARCHAR(40),
SERVICE_REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_BIN_GRID'
CREATE TABLE seis_bin_grid
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
BIN_GRID_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ANGLE_ROTATION DECIMAL(10,5),
BIN_GRID_TYPE VARCHAR(40),
BIN_GRID_VERSION DECIMAL(5,2),
BIN_METHOD VARCHAR(40),
BIN_POINT_OUOM VARCHAR(40),
COORD_ACQUISITION_ID VARCHAR(40),
COORD_SYSTEM_ID VARCHAR(40),
CORNER1_LAT DECIMAL(14,9),
CORNER1_LONG DECIMAL(14,9),
CORNER2_LAT DECIMAL(14,9),
CORNER2_LONG DECIMAL(14,9),
CORNER3_LAT DECIMAL(14,9),
CORNER3_LONG DECIMAL(14,9),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FOLD_COVERAGE DECIMAL(10,5),
LOCAL_COORD_SYSTEM_ID VARCHAR(40),
NLINE_AZIMUTH DECIMAL(10,5),
NLINE_COUNT BIGINT,
NLINE_MAX_NO BIGINT,
NLINE_MIN_NO BIGINT,
NLINE_SPACING DECIMAL(10,3),
NORTH_TYPE VARCHAR(40),
POINT_ORIGIN_EASTING DECIMAL(15,7),
POINT_ORIGIN_LATITUDE DECIMAL(14,9),
POINT_ORIGIN_LONGITUDE DECIMAL(14,9),
POINT_ORIGIN_NORTHING DECIMAL(15,7),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
XLINE_AZIMUTH DECIMAL(10,5),
XLINE_COUNT BIGINT,
XLINE_MAX_NO BIGINT,
XLINE_MIN_NO BIGINT,
XLINE_SPACING DECIMAL(10,3),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_BIN_ORIGIN'
CREATE TABLE seis_bin_origin
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
BIN_GRID_ID VARCHAR(40) NOT NULL,
BIN_GRID_SOURCE VARCHAR(40) NOT NULL,
BIN_ORIGIN_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
COORD_ACQUISITION_ID VARCHAR(40),
COORD_SYSTEM_ID VARCHAR(40),
CORNER1_LAT DECIMAL(14,9),
CORNER1_LONG DECIMAL(14,9),
CORNER2_LAT DECIMAL(14,9),
CORNER2_LONG DECIMAL(14,9),
CORNER3_LAT DECIMAL(14,9),
CORNER3_LONG DECIMAL(14,9),
EFFECTIVE_DATE TIMESTAMP(0),
EXCLUSION_IND VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
INCLUSION_IND VARCHAR(1),
INPUT_BIN_GRID_ID VARCHAR(40),
INPUT_BIN_SOURCE VARCHAR(40),
INPUT_SEIS_SET_ID VARCHAR(40),
INPUT_SEIS_SET_SUBTYPE VARCHAR(30),
LOCAL_COORD_SYSTEM_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_BIN_OUTLINE'
CREATE TABLE seis_bin_outline
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
BIN_GRID_ID VARCHAR(40) NOT NULL,
BIN_GRID_SOURCE VARCHAR(40) NOT NULL,
OUTLINE_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
BIN_OUTLINE_TYPE VARCHAR(40),
BIN_POINT_ID VARCHAR(16),
COORD_ACQUISITION_ID VARCHAR(40),
COORD_SYSTEM_ID VARCHAR(40),
EASTING DECIMAL(15,7),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOCAL_COORD_SYSTEM_ID VARCHAR(40),
NLINE_NO BIGINT,
NORTHING DECIMAL(15,7),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
XLINE_NO BIGINT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_BIN_POINT'
CREATE TABLE seis_bin_point
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
BIN_GRID_ID VARCHAR(40) NOT NULL,
BIN_GRID_SOURCE VARCHAR(40) NOT NULL,
BIN_POINT_ID VARCHAR(16) NOT NULL,
ACTIVE_IND VARCHAR(1),
EASTING DECIMAL(15,7),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NLINE_NO BIGINT,
NORTHING DECIMAL(15,7),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
VELOCITY_ANALYSIS_IND VARCHAR(1),
XLINE_NO BIGINT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_BIN_POINT_TRACE'
CREATE TABLE seis_bin_point_trace
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
BIN_GRID_ID VARCHAR(40) NOT NULL,
BIN_GRID_SOURCE VARCHAR(40) NOT NULL,
BIN_POINT_ID VARCHAR(16) NOT NULL,
TRACE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_BIN_POINT_VERSION'
CREATE TABLE seis_bin_point_version
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
BIN_GRID_ID VARCHAR(40) NOT NULL,
BIN_GRID_SOURCE VARCHAR(40) NOT NULL,
BIN_POINT_ID VARCHAR(16) NOT NULL,
BIN_POINT_OBS_NO INT,
ACQUISITION_ID VARCHAR(40),
ACTIVE_IND VARCHAR(1),
EASTING DECIMAL(15,7),
EASTING_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
ELEV DECIMAL(10,5),
ELEV_OUOM VARCHAR(40),
EW_DIRECTION VARCHAR(40),
EW_DISTANCE DECIMAL(10,3),
EW_START_LINE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
GEOG_COORD_SYSTEM_ID VARCHAR(40),
LOCAL_COORD_SYSTEM_ID VARCHAR(40),
MAP_COORD_SYSTEM_ID VARCHAR(40),
NORTHING DECIMAL(15,7),
NORTHING_OUOM VARCHAR(40),
NORTH_TYPE VARCHAR(40),
NS_DIRECTION VARCHAR(40),
NS_DISTANCE DECIMAL(10,5),
NS_START_LINE VARCHAR(40),
POLAR_AZIMUTH DECIMAL(10,5),
POLAR_OFFSET DECIMAL(8,2),
POLAR_OFFSET_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REFERENCE_LOC VARCHAR(40),
REMARK VARCHAR(2000),
SEIS_POINT_LABEL VARCHAR(20),
SEIS_POINT_LAT DECIMAL(14,9),
SEIS_POINT_LONG DECIMAL(14,9),
SEIS_POINT_NO BIGINT,
UWI VARCHAR(40),
VERSION_TYPE VARCHAR(40),
X_COORDINATE DECIMAL(10,5),
Y_COORDINATE DECIMAL(10,5),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_CHANNEL'
CREATE TABLE seis_channel
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
RECORD_ID VARCHAR(40) NOT NULL,
CHANNEL_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CHANNEL_NUM VARCHAR(30),
CHANNEL_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FILE_NUM VARCHAR(30),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SEIS_RECEIVER_POINT_ID VARCHAR(16),
SOURCE VARCHAR(40),
STREAMER_ID VARCHAR(40),
VESSEL_CONFIG_OBS_NO INT,
VESSEL_ID VARCHAR(40),
VESSEL_SF_SUBTYPE VARCHAR(30),
X_OFFSET DECIMAL(10,5),
X_OFFSET_OUOM VARCHAR(40),
Y_OFFSET DECIMAL(10,5),
Y_OFFSET_OUOM VARCHAR(40),
Z_OFFSET DECIMAL(10,5),
Z_OFFSET_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_GROUP_COMP'
CREATE TABLE seis_group_comp
(
SEIS_GROUP_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_GROUP_ID VARCHAR(40) NOT NULL,
INPUT_SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
INPUT_SEIS_SET_ID VARCHAR(40) NOT NULL,
COMPONENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CORNER1_LAT DECIMAL(14,9),
CORNER1_LONG DECIMAL(14,9),
CORNER2_LAT DECIMAL(14,9),
CORNER2_LONG DECIMAL(14,9),
CORNER3_LAT DECIMAL(14,9),
CORNER3_LONG DECIMAL(14,9),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXCLUSION_IND VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
INCLUSION_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SEIS_GROUP_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_INSPECTION'
CREATE TABLE seis_inspection
(
INSPECTION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INSPECTED_LENGTH DECIMAL(10,5),
INSPECTED_LENGTH_OUOM VARCHAR(40),
INSPECTING_BA_ID VARCHAR(40),
INSPECTION_DATE TIMESTAMP(0),
INSPECTION_STATUS VARCHAR(40),
INSP_LOC_ADDRESS_OBS_NO INT,
INSP_LOC_BA_ID VARCHAR(40),
INSP_LOC_SOURCE VARCHAR(40),
MIN_LENGTH DECIMAL(10,5),
MIN_LENGTH_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REASON_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
SCHEDULED_DATE TIMESTAMP(0),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_INSP_COMPONENT'
CREATE TABLE seis_insp_component
(
INSPECTION_ID VARCHAR(40) NOT NULL,
INSPECTION_COMPONENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
AUTHORIZE_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CIRC_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
COMPONENT_TYPE VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSPECTION_STATUS VARCHAR(40),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROD_STRING_ID VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PROJECT_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_INTERP_COMP'
CREATE TABLE seis_interp_comp
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
INTERP_SET_ID VARCHAR(40) NOT NULL,
COMPONENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
COORD_ACQUISITION_ID VARCHAR(40),
COORD_SYSTEM_ID VARCHAR(40),
CORNER1_LAT DECIMAL(14,9),
CORNER1_LONG DECIMAL(14,9),
CORNER2_LAT DECIMAL(14,9),
CORNER2_LONG DECIMAL(14,9),
CORNER3_LAT DECIMAL(14,9),
CORNER3_LONG DECIMAL(14,9),
DATA_SAMPLE_SIZE DOUBLE PRECISION,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INPUT_IND VARCHAR(1),
LOCAL_COORD_SYSTEM_ID VARCHAR(40),
ORIGIN_TYPE VARCHAR(40),
OUTPUT_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
PROCESS_STEP_ID VARCHAR(40),
PROC_COMPONENT_ID VARCHAR(40),
PROC_SET_ID VARCHAR(40),
PROC_SET_SUBTYPE VARCHAR(30),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
UWI VARCHAR(40),
VELOCITY_VOLUME_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_INTERP_LOAD'
CREATE TABLE seis_interp_load
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
INTERP_SET_ID VARCHAR(40) NOT NULL,
PROCESS_STEP_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTERP_ORIGIN_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROCESS_STATUS VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
STEP_NAME VARCHAR(40),
STEP_SEQ_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_INTERP_LOAD_PARM'
CREATE TABLE seis_interp_load_parm
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
INTERP_SET_ID VARCHAR(40) NOT NULL,
PROCESS_STEP_ID VARCHAR(40) NOT NULL,
PARAMETER_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DATE_FORMAT_DESC TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PARAMETER_DESC VARCHAR(240),
PARAMETER_ORIGIN VARCHAR(40),
PARAMETER_TYPE VARCHAR(40),
PARAMETER_UOM VARCHAR(40),
PARAMETER_VALUE_1 DOUBLE PRECISION,
PARAMETER_VALUE_2 DOUBLE PRECISION,
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_INTERP_SET'
CREATE TABLE seis_interp_set
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
INTERP_SET_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTERPRETER VARCHAR(40),
INTERP_DATE TIMESTAMP(0),
INTERP_OBJECTIVE VARCHAR(2000),
INTERP_SET_NAME VARCHAR(255),
INTERP_TYPE VARCHAR(40),
PICK_METHOD VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
TRACE_POSITION VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_INTERP_SURFACE'
CREATE TABLE seis_interp_surface
(
SURFACE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONFORMITY_RELATIONSHIP VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
ORDINAL_SEQ_NO INT,
OVERTURNED_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REPEAT_STRAT_OCCUR_NO BIGINT,
REPEAT_STRAT_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SURFACE_NAME VARCHAR(255),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_LICENSE'
CREATE TABLE seis_license
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
APPLICATION_ID VARCHAR(40),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FEES_PAID_IND VARCHAR(1),
GRANTED_BY_BA_ID VARCHAR(40),
GRANTED_BY_CONTACT_ID VARCHAR(40),
GRANTED_DATE TIMESTAMP(0),
GRANTED_TO_BA_ID VARCHAR(40),
GRANTED_TO_CONTACT_ID VARCHAR(40),
LICENSE_NUM VARCHAR(40),
LICENSE_TERM DECIMAL(10,5),
LICENSE_TERM_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
RATE_SCHEDULE_ID VARCHAR(40),
REL_LICENSE_ID VARCHAR(40),
REL_SEIS_SET_ID VARCHAR(40),
REL_SEIS_SET_SUBTYPE VARCHAR(30),
REMARK VARCHAR(2000),
SECONDARY_TERM DECIMAL(10,5),
SECONDARY_TERM_UOM VARCHAR(40),
SEIS_LICENSE_TYPE_ID VARCHAR(40),
SOURCE VARCHAR(40),
VIOLATION_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_LICENSE_ALIAS'
CREATE TABLE seis_license_alias
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE_DOCUMENT_IDS VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_LICENSE_AREA'
CREATE TABLE seis_license_area
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_LICENSE_COND'
CREATE TABLE seis_license_cond
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
CONDITION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONDITION_CODE VARCHAR(40),
CONDITION_DESC VARCHAR(240),
CONDITION_TYPE VARCHAR(40),
CONDITION_VALUE DECIMAL(12,2),
CONDITION_VALUE_UOM VARCHAR(40),
CONTACT_BA_ID VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
DESCRIPTION VARCHAR(240),
DUE_CONDITION VARCHAR(40),
DUE_DATE TIMESTAMP(0),
DUE_FREQUENCY VARCHAR(40),
DUE_TERM DECIMAL(10,5),
DUE_TERM_UOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXEMPT_IND VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
FULFILLED_BY_BA_ID VARCHAR(40),
FULFILLED_DATE TIMESTAMP(0),
FULFILLED_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RESTRICTION_ID VARCHAR(40),
RESTRICTION_VERSION INT,
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_LICENSE_REMARK'
CREATE TABLE seis_license_remark
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
REMARK_ID VARCHAR(40) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
AUTHOR VARCHAR(255),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_DATE TIMESTAMP(0),
REMARK_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_LICENSE_STATUS'
CREATE TABLE seis_license_status
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
STATUS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LICENSE_STATUS VARCHAR(40),
LICENSE_STATUS_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_LICENSE_TYPE'
CREATE TABLE seis_license_type
(
GRANTED_BY_BA_ID VARCHAR(40) NOT NULL,
SEIS_LICENSE_TYPE_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
RATE_SCHEDULE_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_LICENSE_VIOLATION'
CREATE TABLE seis_license_violation
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
VIOLATION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONDITION_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RESOLVE_DATE TIMESTAMP(0),
RESOLVE_DESC VARCHAR(1024),
RESOLVE_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
VIOLATION_DATE TIMESTAMP(0),
VIOLATION_DESC VARCHAR(1024),
VIOLATION_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_LINE'
CREATE TABLE seis_line
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_LINE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DIMENSION VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LINE_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REFRACTION_REFLECTION VARCHAR(40),
REMARK VARCHAR(2000),
RESHOOT_OF_SET_ID VARCHAR(40),
RESHOOT_SEIS_SET_SUBTYPE VARCHAR(30),
SEIS_ACQTN_SET_SUBTYPE VARCHAR(30),
SEIS_ACQTN_SURVEY_ID VARCHAR(40),
SEIS_SPECTRUM_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
TEST_EXPERIMENTAL VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_PATCH'
CREATE TABLE seis_patch
(
PATCH_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CHANNEL_COUNT BIGINT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GAP_COUNT BIGINT,
PATCH_LAYOUT VARCHAR(2000),
PATCH_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROLL_ALONG_METHOD VARCHAR(40),
SHOT_GAP_IND VARCHAR(1),
SOURCE VARCHAR(40),
SYMMETRIC_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_PATCH_DESC'
CREATE TABLE seis_patch_desc
(
PATCH_ID VARCHAR(40) NOT NULL,
PATCH_DESC_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_CHANNEL DOUBLE PRECISION,
END_STATION_ID VARCHAR(16),
END_X_OFFSET DECIMAL(8,2),
END_Y_OFFSET DECIMAL(8,2),
END_Z_OFFSET DECIMAL(8,2),
EXPIRY_DATE TIMESTAMP(0),
OFFSET_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
RECORDED_LINE VARCHAR(255),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
START_CHANNEL DECIMAL(10,5),
START_STATION_ID VARCHAR(16),
START_X_OFFSET DECIMAL(8,2),
START_Y_OFFSET DECIMAL(8,2),
START_Z_OFFSET DECIMAL(8,2),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_PICK'
CREATE TABLE seis_pick
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
INTERP_SET_ID VARCHAR(40) NOT NULL,
SURFACE_ID VARCHAR(40) NOT NULL,
SEIS_PICK_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BIN_GRID_ID VARCHAR(40),
BIN_POINT_ID VARCHAR(16),
BIN_SEIS_SET_ID VARCHAR(40),
BIN_SEIS_SET_SUBTYPE VARCHAR(30),
BIN_SOURCE VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTERP_TYPE VARCHAR(40),
PICK_DEPTH DECIMAL(15,5),
PICK_DEPTH_OUOM VARCHAR(40),
PICK_DESCRIPTION VARCHAR(240),
PICK_METHOD VARCHAR(40),
PICK_QUALIFIER VARCHAR(40),
PICK_QUALIF_REASON VARCHAR(40),
PICK_QUALITY VARCHAR(40),
PICK_VERSION_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_PICK_IND VARCHAR(1),
REMARK VARCHAR(2000),
SEIS_PICK_VALUE DOUBLE PRECISION,
SEIS_PICK_VALUE_OUOM VARCHAR(40),
SEIS_PICK_VALUE_UOM VARCHAR(40),
SEIS_POINT_ID VARCHAR(16),
SEIS_POINT_SET_ID VARCHAR(40),
SEIS_POINT_SET_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
TRACE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_POINT'
CREATE TABLE seis_point
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
SEIS_POINT_ID VARCHAR(16) NOT NULL,
ACQTN_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
BEND_IND VARCHAR(1),
DATUM_ELEV DECIMAL(10,5),
DATUM_ELEV_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
ELEV DECIMAL(10,5),
ELEV_OUOM VARCHAR(40),
END_IND VARCHAR(1),
EXCEPTION_IND VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
FLOWING_HOLE_IND VARCHAR(1),
MAPPING_CODE VARCHAR(8),
MEASURED_DEPTH DECIMAL(15,5),
MEASURED_DEPTH_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_DATUM VARCHAR(40),
REMARK VARCHAR(2000),
SEIS_POINT_LABEL VARCHAR(20),
SEIS_POINT_LAT DECIMAL(14,9),
SEIS_POINT_LONG DECIMAL(14,9),
SEIS_POINT_NO BIGINT,
SEIS_STATION_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
SPATIAL_SEQ_NO INT,
X_COORDINATE DECIMAL(10,5),
Y_COORDINATE DECIMAL(10,5),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_POINT_FLOW'
CREATE TABLE seis_point_flow
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
SEIS_POINT_ID VARCHAR(16) NOT NULL,
FLOW_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FLOW_DEPTH DECIMAL(15,5),
FLOW_DEPTH_OUOM VARCHAR(40),
FLOW_DURATION DECIMAL(10,5),
FLOW_DURATION_UOM VARCHAR(40),
FLOW_VOLUME DECIMAL(14,4),
FLOW_VOLUME_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMEDIAL_BA_ID VARCHAR(40),
REMEDIAL_DATE TIMESTAMP(0),
REMEDIAL_IND VARCHAR(1),
REPORT_DATE TIMESTAMP(0),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_POINT_FLOW_DESC'
CREATE TABLE seis_point_flow_desc
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
SEIS_POINT_ID VARCHAR(16) NOT NULL,
FLOW_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(2000),
DESCRIPTION_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_POINT_SUMMARY'
CREATE TABLE seis_point_summary
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
SEIS_SUMMARY_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
AREA_SIZE DECIMAL(20,10),
AREA_SIZE_OUOM VARCHAR(40),
CDP_COVERAGE DOUBLE PRECISION,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIRST_NLINE_NO INT,
FIRST_SEIS_POINT_ID VARCHAR(16),
FIRST_XLINE_NO INT,
LAST_NLINE_NO INT,
LAST_SEIS_POINT_ID VARCHAR(16),
LAST_XLINE_NO INT,
LINE_LENGTH DECIMAL(10,3),
LINE_LENGTH_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SEIS_STATION_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
SUMMARY_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_POINT_VERSION'
CREATE TABLE seis_point_version
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_LINE_ID VARCHAR(40) NOT NULL,
SEIS_POINT_ID VARCHAR(16) NOT NULL,
SEIS_POINT_OBS_NO INT,
ACQUISITION_ID VARCHAR(40),
ACTIVE_IND VARCHAR(1),
EASTING DECIMAL(15,7),
EASTING_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
ELEV DECIMAL(10,5),
ELEV_OUOM VARCHAR(40),
EW_DIRECTION VARCHAR(40),
EW_DISTANCE DECIMAL(10,3),
EW_START_LINE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
GEOG_COORD_SYSTEM_ID VARCHAR(40),
LOCAL_COORD_SYSTEM_ID VARCHAR(40),
MAP_COORD_SYSTEM_ID VARCHAR(40),
NORTHING DECIMAL(15,7),
NORTHING_OUOM VARCHAR(40),
NORTH_TYPE VARCHAR(40),
NS_DIRECTION VARCHAR(40),
NS_DISTANCE DECIMAL(10,5),
NS_START_LINE VARCHAR(40),
POLAR_AZIMUTH DECIMAL(10,5),
POLAR_OFFSET DECIMAL(8,2),
POLAR_OFFSET_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REFERENCE_LOC VARCHAR(40),
REMARK VARCHAR(2000),
SEIS_POINT_LABEL VARCHAR(20),
SEIS_POINT_LAT DECIMAL(14,9),
SEIS_POINT_LONG DECIMAL(14,9),
SEIS_POINT_NO BIGINT,
SOURCE VARCHAR(40),
UWI VARCHAR(40),
VERSION_TYPE VARCHAR(40),
X_COORDINATE DECIMAL(10,5),
Y_COORDINATE DECIMAL(10,5),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_PROC_COMPONENT'
CREATE TABLE seis_proc_component
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_PROC_SET_ID VARCHAR(40) NOT NULL,
COMPONENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BIN_GRID_ID VARCHAR(40),
BIN_GRID_SOURCE VARCHAR(40),
COMP_SEIS_SET_ID VARCHAR(40),
COMP_SEIS_SET_SUBTYPE VARCHAR(30),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INPUT_IND VARCHAR(1),
OUTPUT_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
PROCESSING_COMPONENT_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
SEIS_PROC_PLAN_ID VARCHAR(40),
SOURCE VARCHAR(40),
UWI VARCHAR(40),
VELOCITY_VOLUME_ID VARCHAR(40),
WELL_LOG_CURVE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_PROC_PARM'
CREATE TABLE seis_proc_parm
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_PROC_SET_ID VARCHAR(40) NOT NULL,
PROCESS_STEP_ID VARCHAR(40) NOT NULL,
PARAMETER_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DATE_FORMAT_DESC TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PARAMETER_DESC VARCHAR(240),
PARAMETER_ORIGIN VARCHAR(40),
PARAMETER_TYPE VARCHAR(40),
PARAMETER_UOM VARCHAR(40),
PARAMETER_VALUE_1 DOUBLE PRECISION,
PARAMETER_VALUE_2 DOUBLE PRECISION,
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_PROC_PLAN'
CREATE TABLE seis_proc_plan
(
SEIS_PROC_PLAN_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CREATED_BY VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PLAN_NAME VARCHAR(255),
PLAN_NUM VARCHAR(20),
PLAN_OWNER VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_PROC_PLAN_PARM'
CREATE TABLE seis_proc_plan_parm
(
SEIS_PROC_PLAN_ID VARCHAR(40) NOT NULL,
PROC_PLAN_STEP_ID VARCHAR(40) NOT NULL,
PARAMETER_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DATE_FORMAT_DESC TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PARAMETER_DESC VARCHAR(240),
PARAMETER_ORIGIN VARCHAR(40),
PARAMETER_TYPE VARCHAR(40),
PARAMETER_UOM VARCHAR(40),
PARAMETER_VALUE_1 DOUBLE PRECISION,
PARAMETER_VALUE_2 DOUBLE PRECISION,
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_PROC_PLAN_STEP'
CREATE TABLE seis_proc_plan_step
(
SEIS_PROC_PLAN_ID VARCHAR(40) NOT NULL,
PROC_PLAN_STEP_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STEP_NAME VARCHAR(40),
STEP_SEQ_NO INT,
STEP_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_PROC_SET'
CREATE TABLE seis_proc_set
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_PROC_SET_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_LATITUDE DECIMAL(14,9),
MAX_LONGITUDE DECIMAL(14,9),
MIN_LATITUDE DECIMAL(14,9),
MIN_LONGITUDE DECIMAL(14,9),
OBJECTIVE VARCHAR(2000),
ORIGINAL_PROC_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
PROCESSED_FOR VARCHAR(40),
PROCESSING_COMPANY VARCHAR(40),
PROCESSING_NAME VARCHAR(255),
PROCESS_STATUS VARCHAR(40),
PROC_SET_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
REPROCESSED_IND VARCHAR(1),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_PROC_STEP'
CREATE TABLE seis_proc_step
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_PROC_SET_ID VARCHAR(40) NOT NULL,
PROCESS_STEP_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PROCESS_STATUS VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
STEP_NAME VARCHAR(40),
STEP_SEQ_NO INT,
STEP_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_PROC_STEP_COMPONENT'
CREATE TABLE seis_proc_step_component
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_PROC_SET_ID VARCHAR(40) NOT NULL,
COMPONENT_ID VARCHAR(40) NOT NULL,
PROCESS_STEP_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INPUT_IND VARCHAR(1),
OUTPUT_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_RECORD'
CREATE TABLE seis_record
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
RECORD_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ACTUAL_ACQTN_DESIGN_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_FILE_NUMBER VARCHAR(20),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
LOGICAL_RECORD_NUMBER VARCHAR(20),
PATCH_ID VARCHAR(40),
PATCH_USED_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
RCRD_CHANNEL_COUNT BIGINT,
RECORDING_REMARK VARCHAR(2000),
RECORD_NUMBER VARCHAR(20),
RECORD_QUALITY VARCHAR(40),
RECORD_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
SEIS_SHOT_POINT_ID VARCHAR(16),
SOURCE VARCHAR(40),
TAPE_NUMBER VARCHAR(20),
TIME_DELAY DECIMAL(10,5),
TIME_DELAY_OUOM VARCHAR(40),
UPHOLE_TIME DECIMAL(10,5),
UPHOLE_TIME_OUOM VARCHAR(40),
VESSEL_CONFIG_OBS_NO INT,
VESSEL_ID VARCHAR(40),
VESSEL_SF_SUBTYPE VARCHAR(30),
X_OFFSET DECIMAL(8,2),
Y_OFFSET DECIMAL(8,2),
Z_OFFSET DECIMAL(8,2),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_RECVR_MAKE'
CREATE TABLE seis_recvr_make
(
SEIS_RCVR_MAKE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
BASE_HORIZONTAL_FREQ DECIMAL(10,5),
BASE_VERTICAL_FREQ DECIMAL(10,5),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SEIS_RCVR_TYPE VARCHAR(40),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_RECVR_SETUP'
CREATE TABLE seis_recvr_setup
(
ACQTN_DESIGN_ID VARCHAR(40) NOT NULL,
RCVR_SETUP_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AVG_FEATHERING_ANGLE DECIMAL(10,5),
AVG_STREAMER_DEPTH DECIMAL(15,5),
AVG_STREAMER_DEPTH_OUOM VARCHAR(40),
BASE_FREQ DECIMAL(10,5),
DEPTH_CONTROLLER VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIXED_IND VARCHAR(1),
GROUP_SPACING DECIMAL(10,3),
GROUP_SPACING_OUOM VARCHAR(40),
INLINE_OFFSET DECIMAL(8,2),
INLINE_OFFSET_DIRECTION VARCHAR(40),
OFFLINE_OFFSET DECIMAL(8,2),
OFFLINE_OFFSET_DIRECTION VARCHAR(40),
OFFSET_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
RCVR_ARRAY_TYPE VARCHAR(40),
RCVR_MAKE VARCHAR(40),
RCVR_PHONE_COUNT BIGINT,
RCVR_SPACING DECIMAL(10,3),
RCVR_SPACING_OUOM VARCHAR(40),
RCVR_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SPREAD_DESCRIPTION VARCHAR(40),
SPREAD_DESCRIPTION_OUOM VARCHAR(40),
STREAMER_COUNT BIGINT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_SEGMENT'
CREATE TABLE seis_segment
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEGMENT_ID VARCHAR(40) NOT NULL,
ACQTN_DESIGN_ID VARCHAR(40),
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REFRACTION_REFLECTION VARCHAR(40),
REMARK VARCHAR(2000),
ROW_AUDIT_BY VARCHAR(30),
ROW_AUDIT_DATE TIMESTAMP(0),
SEIS_DIMENSION VARCHAR(40),
SEIS_LINE_ID VARCHAR(40),
SEIS_LINE_SET_SUBTYPE VARCHAR(30),
SEIS_SEGMENT_REASON VARCHAR(40),
SEIS_SPECTRUM_TYPE VARCHAR(40),
SEIS_STATION_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
TEST_EXPERIMENTAL VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_SET'
CREATE TABLE seis_set
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
ACQTN_DESIGN_ID VARCHAR(40),
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_SIZE DECIMAL(20,10),
AREA_SIZE_OUOM VARCHAR(40),
AREA_TYPE VARCHAR(40),
COORD_ACQUISITION_ID VARCHAR(40),
CURRENT_SEIS_STATUS VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FINANCE_ID VARCHAR(40),
GEOGRAPHIC_COORD_SYSTEM_ID VARCHAR(40),
LOCAL_COORD_SYSTEM_ID VARCHAR(40),
MAX_LATITUDE DECIMAL(14,9),
MAX_LONGITUDE DECIMAL(14,9),
MIN_LATITUDE DECIMAL(14,9),
MIN_LONGITUDE DECIMAL(14,9),
PPDM_GUID VARCHAR(38),
PREFERRED_NAME VARCHAR(255),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
XY_COORD_SYSTEM_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_SET_AREA'
CREATE TABLE seis_set_area
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_SET_AUTHORIZE'
CREATE TABLE seis_set_authorize
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
AUTHORIZE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AUTHORIZED_BY VARCHAR(40),
AUTHORIZE_TYPE VARCHAR(40),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LIMIT_DESC VARCHAR(240),
LIMIT_TYPE VARCHAR(40),
PARTNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PRICE_PER_LENGTH DECIMAL(12,2),
REASON_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_SET_COMPONENT'
CREATE TABLE seis_set_component
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_SOURCE VARCHAR(40),
PR_STR_UWI VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_ACT_OBS_NO INT,
SEIS_ACT_SEIS_SET_ID VARCHAR(40),
SEIS_ACT_SEIS_SET_SUBTYPE VARCHAR(30),
SEIS_SET_COMPONENT_TYPE VARCHAR(40),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
STRING_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACT_OBS_NO INT,
WELL_ACT_SET_ID VARCHAR(40),
WELL_ACT_SOURCE VARCHAR(40),
WELL_ACT_TYPE VARCHAR(40),
WELL_ACT_UWI VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_SET_JURISDICTION'
CREATE TABLE seis_set_jurisdiction
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
JURISDICTION VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_SET_PLAN'
CREATE TABLE seis_set_plan
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PLANNED_END_DATE TIMESTAMP(0),
PLANNED_LENGTH DECIMAL(10,5),
PLANNED_LENGTH_OUOM VARCHAR(40),
PLANNED_START_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_SET_STATUS'
CREATE TABLE seis_set_status
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
STATUS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SEIS_STATUS VARCHAR(40),
SOURCE VARCHAR(40),
STATUS_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_SP_SURVEY'
CREATE TABLE seis_sp_survey
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
SEIS_POINT_ID VARCHAR(16) NOT NULL,
SEIS_SP_SURVEY_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
AZIMUTH DECIMAL(10,5),
AZIMUTH_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EW_DIRECTION VARCHAR(40),
EW_DISTANCE DECIMAL(10,3),
EW_DISTANCE_OUOM VARCHAR(40),
EW_START_LINE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
LOCATION_TYPE VARCHAR(40),
MONUMENT_ID VARCHAR(40),
MONUMENT_SF_SUBTYPE VARCHAR(30),
NORTH_TYPE VARCHAR(40),
NS_DIRECTION VARCHAR(40),
NS_DISTANCE DECIMAL(10,5),
NS_DISTANCE_OUOM VARCHAR(40),
NS_START_LINE VARCHAR(40),
ORIENTATION VARCHAR(40),
POINT_OFFSET DECIMAL(8,3),
POINT_OFFSET_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_LOC VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SURFACE_LOC VARCHAR(40),
WELL_NODE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_STREAMER'
CREATE TABLE seis_streamer
(
STREAMER_ID VARCHAR(40) NOT NULL,
ACQTN_DESIGN_ID VARCHAR(40),
ACTIVE_IND VARCHAR(1),
CABLE_MAKE VARCHAR(40),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
STREAMER_LENGTH DECIMAL(10,3),
STREAMER_LENGTH_OUOM VARCHAR(40),
STREAMER_POSITION VARCHAR(40),
VESSEL_CONFIG_OBS_NO INT,
VESSEL_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_STREAMER_BUILD'
CREATE TABLE seis_streamer_build
(
STREAMER_ID VARCHAR(40) NOT NULL,
STREAMER_COMPONENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
COMPONENT_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
POSITION_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STREAMER_POSITION DECIMAL(15,5),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_STREAMER_COMP'
CREATE TABLE seis_streamer_comp
(
STREAMER_ID VARCHAR(40) NOT NULL,
COMPONENT_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
COMPONENT_COUNT BIGINT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_TRANSACTION'
CREATE TABLE seis_transaction
(
SEIS_TRANSACTION_ID VARCHAR(40) NOT NULL,
TRANSACTION_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LENGTH DECIMAL(10,3),
LENGTH_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PRICE_PER_LENGTH DECIMAL(12,2),
REFERENCE_NUM VARCHAR(20),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
TOTAL_PRICE DECIMAL(12,2),
TRANSACTION_DATE TIMESTAMP(0),
TRANSACTION_STATUS VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_TRANS_COMPONENT'
CREATE TABLE seis_trans_component
(
SEIS_TRANSACTION_ID VARCHAR(40) NOT NULL,
TRANSACTION_TYPE VARCHAR(40) NOT NULL,
TRANSACTION_COMPONENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
AUTHORIZE_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CIRC_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
COMPONENT_TYPE VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
DISCOUNT_RATE DECIMAL(15,12),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSPECTION_ID VARCHAR(40),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LENGTH DECIMAL(10,3),
LENGTH_OUOM VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRICE_PER_LENGTH DECIMAL(12,2),
PRODUCT_TYPE VARCHAR(40),
PROD_STRING_ID VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PROJECT_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
TOTAL_PRICE DECIMAL(12,2),
TRANSACTION_STATUS VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_VELOCITY'
CREATE TABLE seis_velocity
(
VELOCITY_VOLUME_ID VARCHAR(40) NOT NULL,
VOLUME_POINT VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BIN_GRID_ID VARCHAR(40),
BIN_POINT_ID VARCHAR(16),
BIN_SOURCE VARCHAR(40),
COMPUTE_METHOD VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LATITUDE DECIMAL(14,9),
LONGITUDE DECIMAL(14,9),
PPDM_GUID VARCHAR(38),
RECEIVER_MD DECIMAL(15,5),
RECEIVER_MD_OUOM VARCHAR(40),
RECEIVER_VERT_DEPTH DECIMAL(15,5),
RECEIVER_VERT_DEPTH_OUOM VARCHAR(40),
REMARK VARCHAR(2000),
SEIS_POINT_ID VARCHAR(16),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SEIS_TIME DECIMAL(10,5),
SEIS_TIME_OUOM VARCHAR(40),
SEIS_WELL_SET_ID VARCHAR(40),
SEIS_WELL_SET_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SOURCE_MD DECIMAL(15,5),
SOURCE_MD_OUOM VARCHAR(40),
SOURCE_VERT_DEPTH DECIMAL(15,5),
SOURCE_VERT_DEPTH_OUOM VARCHAR(40),
VELOCITY DECIMAL(10,5),
VELOCITY_AZIMUTH DECIMAL(10,5),
VELOCITY_DEPTH DECIMAL(15,5),
VELOCITY_INCLINATION DECIMAL(5,2),
VELOCITY_INCLINATION_OUOM VARCHAR(40),
VELOCITY_OUOM VARCHAR(40),
VELOCITY_TYPE VARCHAR(40),
VELOCITY_X DECIMAL(10,5),
VELOCITY_Y DECIMAL(10,5),
VELOCITY_Z DECIMAL(10,5),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_VELOCITY_INTERVAL'
CREATE TABLE seis_velocity_interval
(
INTERVAL_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
BASE_STRAT_UNIT_ID VARCHAR(40),
COMPUTE_METHOD VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LAST_UPDATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REPORTED_TVD DECIMAL(10,5),
REPORTED_TVD_OUOM VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SEIS_TIME_DATUM DECIMAL(7,2),
SEIS_TIME_DATUM_OUOM VARCHAR(40),
SOURCE VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
TOP_STRAT_UNIT_ID VARCHAR(40),
UWI VARCHAR(40),
VELOCITY_QUALITY VARCHAR(40),
VELOCITY_TYPE VARCHAR(40),
VELOCITY_VALUE DOUBLE PRECISION,
VELOCITY_VALUE_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_VELOCITY_VOLUME'
CREATE TABLE seis_velocity_volume
(
VELOCITY_VOLUME_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BIN_GRID_ID VARCHAR(40),
BIN_GRID_SEIS_SET_ID VARCHAR(40),
BIN_GRID_SEIS_SET_SUBTYPE VARCHAR(30),
BIN_GRID_SOURCE VARCHAR(40),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PICKED_BY VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SEIS_WELL_SET_ID VARCHAR(40),
SEIS_WELL_SET_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
VELOCITY_DIMENSION VARCHAR(40),
VELOCITY_ORIGIN VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_VESSEL'
CREATE TABLE seis_vessel
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
VESSEL_ID VARCHAR(40) NOT NULL,
VESSEL_CONFIG_OBS_NO INT,
ACQTN_DESIGN_ID VARCHAR(40),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FATH_AZIMUTH DECIMAL(10,5),
FATH_OFFSET DECIMAL(9,3),
MASTER_VESSEL_IND VARCHAR(1),
OFFSET_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_POINT VARCHAR(40),
REMARK VARCHAR(2000),
SHOT_OFFSET DECIMAL(9,3),
SLAVE_VESSEL_IND VARCHAR(1),
SOURCE VARCHAR(40),
STREAMER_FAR_OFFSET DECIMAL(9,3),
STREAMER_NEAR_OFFSET DECIMAL(9,3),
VESSEL_AZIMUTH DECIMAL(10,5),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SEIS_WELL'
CREATE TABLE seis_well
(
SEIS_SET_SUBTYPE VARCHAR(30) NOT NULL,
SEIS_SET_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CHECKSHOT_SURVEY_TYPE VARCHAR(40),
CHECKSHOT_VELOCITY DECIMAL(10,5),
CHECKSHOT_VELOCITY_OUOM VARCHAR(40),
DEPTH_DATUM VARCHAR(40),
DEPTH_DATUM_ELEV DECIMAL(10,5),
DEPTH_DATUM_ELEV_OUOM VARCHAR(40),
DIR_SURVEY_ID VARCHAR(40),
DIR_SURVEY_SOURCE VARCHAR(40),
DIR_SURVEY_UWI VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
RECEIVER_UWI VARCHAR(40),
REMARK VARCHAR(2000),
SEISMIC_PATH VARCHAR(40),
SOURCE VARCHAR(40),
SOURCE_UWI VARCHAR(40),
SURVEY_ID VARCHAR(40),
SURVEY_RUN_NUM VARCHAR(20),
VSP_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_AIRCRAFT'
CREATE TABLE sf_aircraft
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
SUPPORT_FACILITY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AIRCRAFT_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LENGTH DECIMAL(10,3),
LENGTH_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_AIRSTRIP'
CREATE TABLE sf_airstrip
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
SUPPORT_FACILITY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AIRSTRIP_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LENGTH DECIMAL(10,3),
LENGTH_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SURFACE_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_ALIAS'
CREATE TABLE sf_alias
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
SUPPORT_FACILITY_ID VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_AREA'
CREATE TABLE sf_area
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
SUPPORT_FACILITY_ID VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_BA_CREW'
CREATE TABLE sf_ba_crew
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
SUPPORT_FACILITY_ID VARCHAR(40) NOT NULL,
CREW_COMPANY_BA_ID VARCHAR(40) NOT NULL,
CREW_ID VARCHAR(40) NOT NULL,
SF_BA_CREW_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_BA_SERVICE'
CREATE TABLE sf_ba_service
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
SUPPORT_FACILITY_ID VARCHAR(40) NOT NULL,
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
SERVICE_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
BA_SERVICE_TYPE VARCHAR(40),
CONTACT_BA_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PROVISION_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REMARK VARCHAR(2000),
REPRESENTED_BA_ID VARCHAR(40),
SERVICE_QUALITY VARCHAR(40),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_BRIDGE'
CREATE TABLE sf_bridge
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
BRIDGE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BRIDGE_CAPACITY DECIMAL(10,5),
BRIDGE_CAPACITY_OUOM VARCHAR(40),
BRIDGE_HEIGHT DECIMAL(10,3),
BRIDGE_HEIGHT_OUOM VARCHAR(40),
BRIDGE_LENGTH DECIMAL(10,3),
BRIDGE_LENGTH_OUOM VARCHAR(40),
BRIDGE_TYPE VARCHAR(40),
BRIDGE_WIDTH DECIMAL(10,3),
BRIDGE_WIDTH_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SURFACE_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_COMPONENT'
CREATE TABLE sf_component
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
SUPPORT_FACILITY_ID VARCHAR(40) NOT NULL,
USE_ID VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
BA_LICENSEE_BA_ID VARCHAR(40),
BA_LICENSE_ID VARCHAR(40),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_LICENSE_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
HSE_INCIDENT_ID VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_JURISDICTION VARCHAR(40),
LAND_SALE_NUMBER VARCHAR(30),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PROD_STRING_ID VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_FORM_OBS_NO INT,
RATE_SCHEDULE_ID VARCHAR(40),
REMARK VARCHAR(2000),
SEIS_LICENSE_ID VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_COMPONENT_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_LICENSE_ID VARCHAR(40),
WELL_LICENSE_SOURCE VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_DESCRIPTION'
CREATE TABLE sf_description
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
SUPPORT_FACILITY_ID VARCHAR(40) NOT NULL,
DESCRIPTION_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
COST DECIMAL(12,2),
COST_OUOM VARCHAR(40),
COST_UOM VARCHAR(40),
CURRENCY_CONVERSION DECIMAL(10,5),
DATE_FORMAT_DESC TIMESTAMP(0),
DESCRIPTION VARCHAR(240),
DESC_TYPE VARCHAR(40),
DESC_VALUE DECIMAL(10,5),
DESC_VALUE_CODE VARCHAR(40),
DESC_VALUE_OUOM VARCHAR(40),
DESC_VALUE_UOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_DISPOSAL'
CREATE TABLE sf_disposal
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
SUPPORT_FACILITY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_SIZE DECIMAL(10,5),
AREA_SIZE_OUOM VARCHAR(40),
AREA_SIZE_UOM VARCHAR(40),
CAPACITY DECIMAL(10,5),
CAPACITY_OUOM VARCHAR(40),
CAPACITY_UOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_DOCK'
CREATE TABLE sf_dock
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
DOCK_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DOCK_LENGTH DECIMAL(10,3),
DOCK_LENGTH_OUOM VARCHAR(40),
DOCK_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SURFACE_TYPE VARCHAR(40),
WATER_DEPTH DECIMAL(15,5),
WATER_DEPTH_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_ELECTRIC'
CREATE TABLE sf_electric
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
SUPPORT_FACILITY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
ELECTRIC_FACILITY_TYPE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_EQUIPMENT'
CREATE TABLE sf_equipment
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
SUPPORT_FACILITY_ID VARCHAR(40) NOT NULL,
COMPONENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CATALOGUE_EQUIP_ID VARCHAR(40),
COMPONENT_COUNT BIGINT,
DESCRIPTION VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID VARCHAR(40),
EQUIPMENT_NAME VARCHAR(255),
EXPIRY_DATE TIMESTAMP(0),
INSTALL_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PURCHASE_DATE TIMESTAMP(0),
REFERENCE_NUM VARCHAR(255),
REMARK VARCHAR(2000),
REMOVE_DATE TIMESTAMP(0),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_HABITAT'
CREATE TABLE sf_habitat
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
SUPPORT_FACILITY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_SIZE DECIMAL(10,5),
AREA_SIZE_OUOM VARCHAR(40),
BED_COUNT BIGINT,
CAPACITY DECIMAL(10,5),
CAPACITY_OUOM VARCHAR(40),
CAPACITY_UOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_LANDING'
CREATE TABLE sf_landing
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
SUPPORT_FACILITY_ID VARCHAR(40) NOT NULL,
ACTIVATION_FREQ_DESC VARCHAR(240),
ACTIVATION_TONE_DESC VARCHAR(240),
ACTIVE_IND VARCHAR(1),
AIRPSPACE_DESC VARCHAR(240),
ALTITUDE DECIMAL(10,5),
ALTITUDE_OUOM VARCHAR(40),
APPROACH_DIRECTION VARCHAR(240),
AREA_ID VARCHAR(40),
AREA_SIZE DECIMAL(10,5),
AREA_SIZE_OUOM VARCHAR(40),
AREA_TYPE VARCHAR(40),
COMMUNICATION_FREQ DECIMAL(15,5),
COMMUNICATION_FREQ_DESC VARCHAR(240),
DEPART_DIRECTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FUEL_AVAIL_DESC VARCHAR(240),
LANDING_FACILITY_CODE VARCHAR(40),
LANDING_TYPE VARCHAR(40),
LIGHTING_AVAIL_IND VARCHAR(1),
LIGHTING_CYCLE_DESC VARCHAR(240),
LIGHTING_DESC VARCHAR(240),
MAX_ALLOW_MASS DECIMAL(10,5),
MAX_ALLOW_MASS_DESC VARCHAR(240),
MAX_ALLOW_MASS_OUOM VARCHAR(40),
PERM_OBSTACLE_DESC VARCHAR(240),
PPDM_GUID VARCHAR(38),
RADIO_CALL_NAME VARCHAR(255),
RADIO_CHANNEL VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SPECIAL_PROCEDURE_DESC VARCHAR(240),
SURFACE_DESC VARCHAR(240),
SURFACE_TYPE VARCHAR(40),
WEATHER_INFO_DESC VARCHAR(240),
WINDCONE_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_MAINTAIN'
CREATE TABLE sf_maintain
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
SUPPORT_FACILITY_ID VARCHAR(40) NOT NULL,
MAINTAIN_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ACTUAL_END_DATE TIMESTAMP(0),
ACTUAL_START_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAINTAIN_BA_ID VARCHAR(40),
MAINTAIN_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SCHEDULE_END_DATE TIMESTAMP(0),
SCHEDULE_START_DATE TIMESTAMP(0),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_MONUMENT'
CREATE TABLE sf_monument
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
MONUMENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
COORD_ACQUISITION_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HORIZ_COORD_SYSTEM VARCHAR(40),
LOCAL_COORD_SYSTEM_ID VARCHAR(40),
LOCATION_TYPE VARCHAR(40),
MONUMENT_ELEV DECIMAL(10,5),
MONUMENT_ELEV_OUOM VARCHAR(40),
MONUMENT_LATITUDE DECIMAL(14,9),
MONUMENT_LONGITUDE DECIMAL(14,9),
MONUMENT_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
VERT_COORD_SYSTEM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_OTHER'
CREATE TABLE sf_other
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
SUPPORT_FACILITY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_SIZE DECIMAL(10,5),
AREA_SIZE_OUOM VARCHAR(40),
CAPACITY DECIMAL(10,5),
CAPACITY_OUOM VARCHAR(40),
CAPACITY_UOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HEIGHT DECIMAL(10,5),
HEIGHT_OUOM VARCHAR(40),
LENGTH DECIMAL(10,3),
LENGTH_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
WIDTH DECIMAL(10,5),
WIDTH_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_PAD'
CREATE TABLE sf_pad
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
PAD_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PAD_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_PLATFORM'
CREATE TABLE sf_platform
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
PLATFORM_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DRILL_SLOT_COUNT BIGINT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INSTALLED_DATE TIMESTAMP(0),
PLATFORM_NAME VARCHAR(255),
PLATFORM_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMOVAL_DATE TIMESTAMP(0),
SOURCE VARCHAR(40),
WATER_DEPTH DECIMAL(15,5),
WATER_DEPTH_DATUM VARCHAR(40),
WATER_DEPTH_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_PORT'
CREATE TABLE sf_port
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
SUPPORT_FACILITY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_SIZE DECIMAL(10,5),
AREA_SIZE_OUOM VARCHAR(40),
CAPACITY DECIMAL(10,5),
CAPACITY_OUOM VARCHAR(40),
CAPACITY_UOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MIN_WATER_DEPTH DECIMAL(10,5),
MIN_WATER_DEPTH_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_RAILWAY'
CREATE TABLE sf_railway
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
RAILWAY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
RAIL_GAUGE DECIMAL(10,3),
RAIL_GAUGE_OUOM VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_RESTRICTION'
CREATE TABLE sf_restriction
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
SUPPORT_FACILITY_ID VARCHAR(40) NOT NULL,
RESTRICTION_ID VARCHAR(40) NOT NULL,
RESTRICTION_VERSION INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_REST_REMARK'
CREATE TABLE sf_rest_remark
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
SUPPORT_FACILITY_ID VARCHAR(40) NOT NULL,
RESTRICTION_ID VARCHAR(40) NOT NULL,
RESTRICTION_VERSION INT,
RESTRICTION_REMARK_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RESTRICTION_REMARK_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_RIG'
CREATE TABLE sf_rig
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
RIG_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BOILER_MANUFACTURER VARCHAR(240),
BOILER_POWER DECIMAL(10,5),
BOILER_POWER_OUOM VARCHAR(40),
CHOKE_MANIFOLD_PRESS DECIMAL(8,2),
CHOKE_MANIFOLD_PRESS_OUOM VARCHAR(40),
CHOKE_MANIFOLD_SIZE DECIMAL(10,5),
CHOKE_MANIFOLD_SIZE_OUOM VARCHAR(40),
CLEAR_WORK_HEIGHT DECIMAL(10,5),
CLEAR_WORK_HEIGHT_OUOM VARCHAR(40),
COMMISSION_DATE TIMESTAMP(0),
DECOMMISSION_DATE TIMESTAMP(0),
DESANDER_TYPE VARCHAR(40),
DESILTER_TYPE VARCHAR(40),
DRAWWORKS_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HOOKBLOCK_RATING DECIMAL(15,5),
HOOKBLOCK_RATING_OUOM VARCHAR(40),
HOOKBLOCK_TYPE VARCHAR(40),
HOOK_LOAD_CAPACITY DECIMAL(15,5),
HOOK_LOAD_CAPACITY_OUOM VARCHAR(40),
KB_GROUND_DIST DECIMAL(10,3),
KB_GROUND_DIST_OUOM VARCHAR(40),
MAST_HEIGHT DECIMAL(15,5),
MAST_HEIGHT_OUOM VARCHAR(40),
MAST_TYPE VARCHAR(40),
MAX_DEPTH DECIMAL(15,5),
MAX_DEPTH_OUOM VARCHAR(40),
MUD_TANK_COUNT BIGINT,
MUD_TANK_SIZE DECIMAL(10,5),
MUD_TANK_SIZE_OUOM VARCHAR(40),
OPERATOR_BA_ID VARCHAR(40),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RIG_CATEGORY VARCHAR(40),
RIG_CLASS VARCHAR(40),
RIG_CODE VARCHAR(40),
RIG_NAME VARCHAR(255),
RIG_TYPE VARCHAR(40),
ROTARY_TABLE_CAP DECIMAL(15,5),
ROTARY_TABLE_CAP_OUOM VARCHAR(40),
ROTARY_TABLE_SIZE DECIMAL(15,5),
ROTARY_TABLE_SIZE_OUOM VARCHAR(40),
SOURCE VARCHAR(40),
SUBSTRUCTURE_TYPE VARCHAR(40),
SUBSTRUCT_CASING_CAP DECIMAL(15,5),
SUBSTRUCT_CASING_CAP_OUOM VARCHAR(40),
SUBSTRUCT_SETBACK_CAP DECIMAL(15,5),
SUBSTRUCT_SETBACK_CAP_OUOM VARCHAR(40),
SWIVEL_RATING DECIMAL(15,5),
SWIVEL_RATING_OUOM VARCHAR(40),
SWIVEL_TYPE VARCHAR(40),
TOP_DRIVE_MODEL VARCHAR(255),
TOP_DRIVE_RATING DECIMAL(15,5),
TOP_DRIVE_RATING_OUOM VARCHAR(40),
WATER_DEPTH_CAPACITY DECIMAL(15,5),
WATER_DEPTH_DATUM VARCHAR(40),
WATER_DEPTH_OUOM VARCHAR(40),
WORKING_PRESSURE DECIMAL(10,5),
WORKING_PRESSURE_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_RIG_BOP'
CREATE TABLE sf_rig_bop
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
RIG_ID VARCHAR(40) NOT NULL,
BOP_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ANNULAR_COUNT BIGINT,
BOP_COUNT BIGINT,
BOP_DIAMETER DECIMAL(10,5),
BOP_DIAMETER_OUOM VARCHAR(40),
BOP_NACE_CERTIFIED_IND VARCHAR(1),
BOP_POSITION_DESC VARCHAR(240),
BOP_PRESSURE_RATING DECIMAL(10,5),
BOP_PRESSURE_RATING_OUOM VARCHAR(40),
BOP_TYPE VARCHAR(40),
CAPACITY DECIMAL(10,5),
CAPACITY_OUOM VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
DOUBLE_COUNT BIGINT,
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
INPUT_TYPE VARCHAR(40),
INSTALL_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REFERENCE_NUM VARCHAR(20),
REMARK VARCHAR(2000),
REMOVE_DATE TIMESTAMP(0),
SINGLE_COUNT BIGINT,
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_RIG_GENERATOR'
CREATE TABLE sf_rig_generator
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
RIG_ID VARCHAR(40) NOT NULL,
GENERATOR_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CATALOGUE_EQUIP_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
GENERATOR_COUNT BIGINT,
GENERATOR_TYPE VARCHAR(40),
INPUT_TYPE VARCHAR(40),
INSTALL_DATE TIMESTAMP(0),
POWER DECIMAL(10,5),
POWER_OUOM VARCHAR(40),
POWER_RATING DECIMAL(10,5),
POWER_RATING_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_NUM VARCHAR(20),
REMARK VARCHAR(2000),
REMOVE_DATE TIMESTAMP(0),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_RIG_OVERHEAD_EQUIP'
CREATE TABLE sf_rig_overhead_equip
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
RIG_ID VARCHAR(40) NOT NULL,
EQUIP_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CAPACITY DECIMAL(10,5),
CAPACITY_OUOM VARCHAR(40),
CAPACITY_TYPE VARCHAR(40),
CAPACITY_UOM VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
INPUT_TYPE VARCHAR(40),
INSIDE_DIAMETER DECIMAL(10,5),
INSIDE_DIAMETER_OUOM VARCHAR(40),
INSTALL_DATE TIMESTAMP(0),
OVERHEAD_COUNT BIGINT,
OVERHEAD_EQUIP_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMOVE_DATE TIMESTAMP(0),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_RIG_PUMP'
CREATE TABLE sf_rig_pump
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
RIG_ID VARCHAR(40) NOT NULL,
PUMP_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CATALOGUE_EQUIP_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
INPUT_TYPE VARCHAR(40),
INSTALL_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PUMP_COUNT BIGINT,
PUMP_FUNCTION VARCHAR(40),
PUMP_HP DECIMAL(10,5),
PUMP_HP_OUOM VARCHAR(40),
PUMP_RATING DECIMAL(10,5),
PUMP_RATING_OUOM VARCHAR(40),
PUMP_TYPE VARCHAR(40),
REFERENCE_NUM VARCHAR(20),
REMARK VARCHAR(2000),
REMOVE_DATE TIMESTAMP(0),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_RIG_SHAKER'
CREATE TABLE sf_rig_shaker
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
RIG_ID VARCHAR(40) NOT NULL,
SHAKER_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CAPACITY DECIMAL(10,5),
CAPACITY_OUOM VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
INPUT_TYPE VARCHAR(40),
INSTALL_DATE TIMESTAMP(0),
POSITION_DESC VARCHAR(240),
PPDM_GUID VARCHAR(38),
REFERENCE_NUM VARCHAR(20),
REMARK VARCHAR(2000),
REMOVE_DATE TIMESTAMP(0),
SHAKER_COUNT BIGINT,
SHAKER_SIZE DECIMAL(10,5),
SHAKER_SIZE_DESC VARCHAR(240),
SHAKER_SIZE_OUOM VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_ROAD'
CREATE TABLE sf_road
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
ROAD_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CAPACITY DECIMAL(10,5),
CAPACITY_OUOM VARCHAR(40),
COMMUNICATION_FREQ DECIMAL(15,5),
COMMUNICATION_FREQ_DESC VARCHAR(240),
CONTROL_TYPE VARCHAR(40),
CURRENT_OPERATOR_BA_ID VARCHAR(40),
DIRECTION VARCHAR(40),
DRIVING_SIDE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROAD_LENGTH DECIMAL(10,3),
ROAD_LENGTH_OUOM VARCHAR(40),
ROAD_TYPE VARCHAR(40),
ROAD_WIDTH DECIMAL(10,3),
ROAD_WIDTH_OUOM VARCHAR(40),
SOURCE VARCHAR(40),
SURFACE_TYPE VARCHAR(40),
TRAFFIC_FLOW_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_STATUS'
CREATE TABLE sf_status
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
SUPPORT_FACILITY_ID VARCHAR(40) NOT NULL,
STATUS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STATUS VARCHAR(40),
STATUS_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_SUPPORT_FACILITY'
CREATE TABLE sf_support_facility
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
SUPPORT_FACILITY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
USE_DESC VARCHAR(240),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_TOWER'
CREATE TABLE sf_tower
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
TOWER_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
COMMUNICATION_FREQ DECIMAL(15,5),
COMMUNICATION_FREQ_DESC VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
TOWER_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_VEHICLE'
CREATE TABLE sf_vehicle
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
VEHICLE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CURRENT_OWNER VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
ENGINE_SIZE DECIMAL(10,5),
ENGINE_SIZE_OUOM VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
LICENSE_EXPIRY_DATE TIMESTAMP(0),
LICENSE_NUM VARCHAR(30),
LICENSE_REGISTER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
VEHICLE_NAME VARCHAR(255),
VEHICLE_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_VESSEL'
CREATE TABLE sf_vessel
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
VESSEL_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
BACKUP_ANTENNA_LOCATION VARCHAR(40),
BACKUP_ANTENNA_TYPE VARCHAR(40),
CURRENT_OPERATOR VARCHAR(40),
DRILL_HOLE_POSITION VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
POSITIONING_METHOD VARCHAR(40),
PPDM_GUID VARCHAR(38),
PRIMARY_ANTENNA_LOCATION VARCHAR(40),
PRIMARY_ANTENNA_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
SECONDARY_ANTENNAL_LOCATION VARCHAR(240),
SECONDARY_ANTENNA_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
VESSEL_BEAM DECIMAL(6,2),
VESSEL_DISPLACEMENT DECIMAL(10,5),
VESSEL_DRAFT DECIMAL(6,2),
VESSEL_LENGTH DECIMAL(10,3),
VESSEL_NAME VARCHAR(255),
VESSEL_SIZE VARCHAR(40),
VESSEL_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_WASTE'
CREATE TABLE sf_waste
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
WASTE_FACILITY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CAPACITY DOUBLE PRECISION,
CAPACITY_OUOM VARCHAR(40),
CURRENT_OWNER VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LICENSE_EXPIRY_DATE TIMESTAMP(0),
LICENSE_NUM VARCHAR(30),
LICENSE_REGISTER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
WASTE_FACILITY_NAME VARCHAR(255),
WASTE_FACILITY_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_WASTE_DISPOSAL'
CREATE TABLE sf_waste_disposal
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
WASTE_FACILITY_ID VARCHAR(40) NOT NULL,
WASTE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ADJUST_REASON VARCHAR(40),
AMOUNT_ADJUSTMENT DOUBLE PRECISION,
AMOUNT_ADJUSTMENT_OUOM VARCHAR(40),
AMOUNT_ADJUSTMENT_UOM VARCHAR(40),
AMOUNT_RECEIVED DOUBLE PRECISION,
AMOUNT_RECEIVED_OUOM VARCHAR(40),
AMOUNT_RECEIVED_UOM VARCHAR(40),
AMOUNT_SHIPPED DOUBLE PRECISION,
AMOUNT_SHIPPED_OUOM VARCHAR(40),
AMOUNT_SHIPPED_UOM VARCHAR(40),
CONTRACT_ID VARCHAR(40),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OPERATOR_BA_ID VARCHAR(40),
ORIGIN_FACILITY_ID VARCHAR(40),
ORIGIN_FACILITY_TYPE VARCHAR(40),
ORIGIN_HSE_INCIDENT_ID VARCHAR(40),
ORIGIN_UWI VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROVISION_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
RECEIVER_BA_ID VARCHAR(40),
REMARK VARCHAR(2000),
REPORTING_UOM VARCHAR(40),
SERVICE_QUALITY VARCHAR(40),
SERVICE_TYPE VARCHAR(40),
SHIPPED_DATE TIMESTAMP(0),
SOURCE VARCHAR(40),
TRANSPORT_BA_ID VARCHAR(40),
WASTE_HANDLING_METHOD VARCHAR(40),
WASTE_HAZARD VARCHAR(40),
WASTE_MATERIAL VARCHAR(40),
WASTE_ORIGIN VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SF_XREF'
CREATE TABLE sf_xref
(
SF_SUBTYPE VARCHAR(30) NOT NULL,
SUPPORT_FACILITY_ID VARCHAR(40) NOT NULL,
SF_SUBTYPE2 VARCHAR(30) NOT NULL,
SUPPORT_FACILITY_ID2 VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FROM_DISTANCE DECIMAL(10,5),
FROM_DISTANCE_OUOM VARCHAR(40),
PORTION_PERCENT DECIMAL(15,12),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
TO_DISTANCE DECIMAL(10,5),
TO_DISTANCE_OUOM VARCHAR(40),
XREF_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SOURCE_DOCUMENT'
CREATE TABLE source_document
(
SOURCE_DOCUMENT_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
DOCUMENT_TITLE VARCHAR(240),
DOCUMENT_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIGURE_REFERENCE VARCHAR(240),
ISSUE VARCHAR(10),
LANGUAGE VARCHAR(40),
PAGE_REFERENCE VARCHAR(20),
PLATE_REFERENCE VARCHAR(240),
PPDM_GUID VARCHAR(38),
PUBLICATION VARCHAR(40),
PUBLICATION_DATE TIMESTAMP(0),
PUBLICATION_YEAR SMALLINT,
PUBLISHER VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SOURCE_DOC_AUTHOR'
CREATE TABLE source_doc_author
(
SOURCE_DOCUMENT_ID VARCHAR(40) NOT NULL,
AUTHOR_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AUTHOR_BA_ID VARCHAR(40),
AUTHOR_FIRST_NAME VARCHAR(30),
AUTHOR_INITIAL VARCHAR(30),
AUTHOR_LAST_NAME VARCHAR(30),
AUTHOR_SEQ_NO INT,
AUTHOR_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SOURCE_DOC_BIBLIO'
CREATE TABLE source_doc_biblio
(
SOURCE_DOCUMENT_ID VARCHAR(40) NOT NULL,
BIBLIO_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
DOCUMENT_NAME VARCHAR(255),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REFERENCED_DOCUMENT VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SPACING_UNIT'
CREATE TABLE spacing_unit
(
SPACING_UNIT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROSS_SIZE DECIMAL(20,10),
GROSS_SIZE_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SPACING_UNIT_DESC VARCHAR(240),
SPACING_UNIT_NAME VARCHAR(255),
SPACING_UNIT_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SPACING_UNIT_INST'
CREATE TABLE spacing_unit_inst
(
SPACING_UNIT_ID VARCHAR(40) NOT NULL,
INSTRUMENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SPATIAL_DESCRIPTION'
CREATE TABLE spatial_description
(
SPATIAL_DESCRIPTION_ID VARCHAR(40) NOT NULL,
SPATIAL_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CARTER_IND VARCHAR(1),
CONGRESS_IND VARCHAR(1),
COORD_ACQUISITION_ID VARCHAR(40),
COORD_SYSTEM_ID VARCHAR(40),
DLS_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FPS_IND VARCHAR(1),
GEODETIC_IND VARCHAR(1),
GROSS_SIZE DECIMAL(20,10),
GROSS_SIZE_OUOM VARCHAR(40),
INACTIVATION_DATE TIMESTAMP(0),
LIBYA_IND VARCHAR(1),
LINE_IND VARCHAR(1),
LINE_VERSION_IND VARCHAR(1),
LOCAL_COORD_SYSTEM_ID VARCHAR(40),
MAX_LATITUDE DECIMAL(14,9),
MAX_LONGITUDE DECIMAL(14,9),
MINERAL_ZONE_IND VARCHAR(1),
MIN_LATITUDE DECIMAL(14,9),
MIN_LONGITUDE DECIMAL(14,9),
NE_LOC_IND VARCHAR(1),
NORTH_SEA_IND VARCHAR(1),
NTS_IND VARCHAR(1),
OFFSHORE_IND VARCHAR(1),
OHIO_IND VARCHAR(1),
PBL_IND VARCHAR(1),
POINT_IND VARCHAR(1),
POINT_VERSION_IND VARCHAR(1),
POLYGON_IND VARCHAR(1),
POLYGON_VERSION_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
REFERENCE_NUM VARCHAR(30),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SPATIAL_DESC_TEXT_IND VARCHAR(1),
SPATIAL_DESC_TYPE VARCHAR(40),
TEXAS_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_BOUNDARY'
CREATE TABLE sp_boundary
(
POLYGON_ID VARCHAR(40) NOT NULL,
POINT_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
DEPTH DECIMAL(15,5),
DEPTH_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
ELEVATION DECIMAL(10,5),
ELEVATION_OUOM VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
LATITUDE DECIMAL(14,9),
LOCATION_QUALITY VARCHAR(40),
LONGITUDE DECIMAL(14,9),
POINT_LABEL VARCHAR(30),
POINT_NO DECIMAL(12,2),
POINT_POSITION VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_BOUNDARY_VERSION'
CREATE TABLE sp_boundary_version
(
POLYGON_ID VARCHAR(40) NOT NULL,
POINT_SEQ_NO INT,
SOURCE VARCHAR(40) NOT NULL,
VERSION_OBS_NO INT,
ACQUISITION_ID VARCHAR(40),
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
EASTING DECIMAL(15,7),
EASTING_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
ELEV DECIMAL(10,5),
ELEV_OUOM VARCHAR(40),
EW_DIRECTION VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
GEOG_COORD_SYSTEM_ID VARCHAR(40),
LATITUDE DECIMAL(14,9),
LEGAL_SURVEY_TYPE VARCHAR(40),
LOCAL_COORD_SYSTEM_ID VARCHAR(40),
LOCATION_QUALIFIER VARCHAR(40),
LOCATION_QUALITY VARCHAR(40),
LONGITUDE DECIMAL(14,9),
MAP_COORD_SYSTEM_ID VARCHAR(40),
MD DECIMAL(10,5),
MD_OUOM VARCHAR(40),
MONUMENT_ID VARCHAR(40),
MONUMENT_SF_SUBTYPE VARCHAR(30),
NODE_POSITION VARCHAR(40),
NORTHING DECIMAL(15,7),
NORTHING_OUOM VARCHAR(40),
NORTH_TYPE VARCHAR(40),
NS_DIRECTION VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
ORIGINAL_REF_NUM VARCHAR(30),
POLAR_AZIMUTH DECIMAL(10,5),
POLAR_OFFSET DECIMAL(8,2),
POLAR_OFFSET_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
REPORTED_TVD DECIMAL(10,5),
REPORTED_TVD_OUOM VARCHAR(40),
VERSION_TYPE VARCHAR(40),
X_COORDINATE DECIMAL(10,5),
X_OFFSET DECIMAL(10,5),
X_OFFSET_OUOM VARCHAR(40),
Y_COORDINATE DECIMAL(10,5),
Y_OFFSET DECIMAL(10,5),
Y_OFFSET_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_COMPONENT'
CREATE TABLE sp_component
(
SPATIAL_DESCRIPTION_ID VARCHAR(40) NOT NULL,
SPATIAL_OBS_NO INT,
COMPONENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ADDRESS_OBS_NO INT,
BA_ADDRESS_SOURCE VARCHAR(40),
BA_LICENSEE_BA_ID VARCHAR(40),
BA_LICENSE_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_NODE_ID VARCHAR(40),
FIELD_NODE_SOURCE VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
HSE_INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_REQUEST_ID VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_STATUS VARCHAR(40),
LAND_RIGHT_STATUS_SEQ_NO INT,
LAND_RIGHT_STATUS_TYPE VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LAND_SALE_OFFERING_ID VARCHAR(40),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
LITH_SAMPLE_ID VARCHAR(40),
NODE_ID VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROD_STRING_ID VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PROJECT_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESENT_PRODUCT_TYPE VARCHAR(40),
RESENT_RESERVE_CLASS_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
RESTRICTION_ID VARCHAR(40),
RESTRICTION_VERSION INT,
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_BIN_GRID_ID VARCHAR(40),
SEIS_BIN_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SIZE_SEQ_NO INT,
SIZE_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
SPACING_UNIT_ID VARCHAR(40),
SP_COMPONENT_TYPE VARCHAR(40),
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SUPPORT_FACILITY_SUBTYPE VARCHAR(30),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_DESC_TEXT'
CREATE TABLE sp_desc_text
(
SPATIAL_DESCRIPTION_ID VARCHAR(40) NOT NULL,
SPATIAL_OBS_NO INT,
TEXT_ID VARCHAR(40) NOT NULL,
DESCRIPTION_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_DESC_XREF'
CREATE TABLE sp_desc_xref
(
SPATIAL_DESCRIPTION_ID VARCHAR(40) NOT NULL,
SPATIAL_OBS_NO INT,
SPATIAL_DESCRIPTION_ID_2 VARCHAR(40) NOT NULL,
SPATIAL_OBS_NO_2 INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OVERLAP_SIZE DECIMAL(20,10),
OVERLAP_SIZE_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SPATIAL_XREF_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_LINE'
CREATE TABLE sp_line
(
LINE_ID VARCHAR(40) NOT NULL,
ACQUISITION_ID VARCHAR(40),
ACTIVE_IND VARCHAR(1),
COORD_SYSTEM_ID VARCHAR(40),
DATUM_ELEV DECIMAL(10,5),
DATUM_ELEV_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LINE_SET_ID VARCHAR(40),
LOCAL_COORD_SYSTEM_ID VARCHAR(40),
LOCATION_TYPE VARCHAR(40),
MAX_PLOT_SCALE VARCHAR(20),
MIN_PLOT_SCALE VARCHAR(20),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REFERENCE_DATUM VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_LINE_POINT'
CREATE TABLE sp_line_point
(
LINE_ID VARCHAR(40) NOT NULL,
POINT_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
BEND_IND VARCHAR(1),
DEPTH DECIMAL(15,5),
DEPTH_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
ELEVATION DECIMAL(10,5),
ELEVATION_OUOM VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FIRST_POINT_IND VARCHAR(1),
LAST_POINT_IND VARCHAR(1),
LATITUDE DECIMAL(14,9),
LOCATION_QUALITY VARCHAR(40),
LONGITUDE DECIMAL(14,9),
POINT_LABEL VARCHAR(30),
POINT_NO DECIMAL(12,2),
POINT_POSITION VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_LINE_POINT_VERSION'
CREATE TABLE sp_line_point_version
(
LINE_ID VARCHAR(40) NOT NULL,
POINT_SEQ_NO INT,
SOURCE VARCHAR(40) NOT NULL,
VERSION_OBS_NO INT,
ACQUISITION_ID VARCHAR(40),
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
EASTING DECIMAL(15,7),
EASTING_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
ELEV DECIMAL(10,5),
ELEV_OUOM VARCHAR(40),
EW_DIRECTION VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
GEOG_COORD_SYSTEM_ID VARCHAR(40),
LATITUDE DECIMAL(14,9),
LEGAL_SURVEY_TYPE VARCHAR(40),
LOCAL_COORD_SYSTEM_ID VARCHAR(40),
LOCATION_QUALIFIER VARCHAR(40),
LOCATION_QUALITY VARCHAR(40),
LONGITUDE DECIMAL(14,9),
MAP_COORD_SYSTEM_ID VARCHAR(40),
MD DECIMAL(10,5),
MD_OUOM VARCHAR(40),
MONUMENT_ID VARCHAR(40),
MONUMENT_SF_SUBTYPE VARCHAR(30),
NODE_POSITION VARCHAR(40),
NORTHING DECIMAL(15,7),
NORTHING_OUOM VARCHAR(40),
NORTH_TYPE VARCHAR(40),
NS_DIRECTION VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
ORIGINAL_REF_NUM VARCHAR(30),
POLAR_AZIMUTH DECIMAL(10,5),
POLAR_OFFSET DECIMAL(8,2),
POLAR_OFFSET_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
REPORTED_TVD DECIMAL(10,5),
REPORTED_TVD_OUOM VARCHAR(40),
VERSION_TYPE VARCHAR(40),
X_COORDINATE DECIMAL(10,5),
X_OFFSET DECIMAL(10,5),
X_OFFSET_OUOM VARCHAR(40),
Y_COORDINATE DECIMAL(10,5),
Y_OFFSET DECIMAL(10,5),
Y_OFFSET_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_MINERAL_ZONE'
CREATE TABLE sp_mineral_zone
(
SPATIAL_DESCRIPTION_ID VARCHAR(40) NOT NULL,
SPATIAL_OBS_NO INT,
MINERAL_ZONE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BASE_QUALIFIER VARCHAR(40),
BASE_ZONE_DEFINITION_ID VARCHAR(40),
DEEP_RIGHT_REVERSION_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INACTIVATION_DATE TIMESTAMP(0),
METES_AND_BOUNDS VARCHAR(2000),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
TOP_QUALIFIER VARCHAR(40),
TOP_ZONE_DEFINITION_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_PARCEL'
CREATE TABLE sp_parcel
(
SPATIAL_DESCRIPTION_ID VARCHAR(40) NOT NULL,
SPATIAL_OBS_NO INT,
PARCEL_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(1024),
DLS_ROAD_ALLOWANCE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROSS_SIZE DECIMAL(20,10),
GROSS_SIZE_OUOM VARCHAR(40),
INACTIVATION_DATE TIMESTAMP(0),
LOCAL_COORD_SYSTEM_ID VARCHAR(40),
PARCEL_CARTER_ID VARCHAR(40),
PARCEL_CONGRESS_ID VARCHAR(40),
PARCEL_DLS_ID VARCHAR(40),
PARCEL_FPS_ID VARCHAR(40),
PARCEL_LIBYA_ID VARCHAR(40),
PARCEL_LOT_ID VARCHAR(40),
PARCEL_LOT_NUM VARCHAR(10),
PARCEL_LOT_TYPE VARCHAR(40),
PARCEL_NE_LOC_ID VARCHAR(40),
PARCEL_NORTH_SEA_ID VARCHAR(40),
PARCEL_NTS_ID VARCHAR(40),
PARCEL_OFFSHORE_ID VARCHAR(40),
PARCEL_OHIO_ID VARCHAR(40),
PARCEL_PBL_ID VARCHAR(40),
PARCEL_TEXAS_ID VARCHAR(40),
PERCENT_OWNERSHIP DECIMAL(15,12),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_PARCEL_AREA'
CREATE TABLE sp_parcel_area
(
PARCEL_ID VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOCATION_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_PARCEL_CARTER'
CREATE TABLE sp_parcel_carter
(
PARCEL_CARTER_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
CARTER_RANGE DECIMAL(5,1),
CARTER_SECTION DECIMAL(5,1),
CARTER_TOWNSHIP VARCHAR(3),
COORD_SYSTEM_ID VARCHAR(40),
DESCRIPTION VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EW_DIRECTION VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
MAP_QUAD_MIN DECIMAL(10,5),
MAP_QUAD_NAME VARCHAR(255),
NS_DIRECTION VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_PLAN_NUM VARCHAR(30),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
SPOT_CODE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_PARCEL_CONGRESS'
CREATE TABLE sp_parcel_congress
(
PARCEL_CONGRESS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
CONGRESS_RANGE DECIMAL(5,1),
CONGRESS_SECTION DECIMAL(5,1),
CONGRESS_SECTION_SUFFIX VARCHAR(1),
CONGRESS_TOWNSHIP DECIMAL(6,1),
CONGRESS_TWP_NAME VARCHAR(255),
COORD_SYSTEM_ID VARCHAR(40),
DESCRIPTION VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EW_DIRECTION VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
NS_DIRECTION VARCHAR(40),
PPDM_GUID VARCHAR(38),
PRINCIPAL_MERIDIAN VARCHAR(40),
REFERENCE_PLAN_NUM VARCHAR(30),
REMARK VARCHAR(2000),
SECTION_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
SPOT_CODE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_PARCEL_DLS'
CREATE TABLE sp_parcel_dls
(
PARCEL_DLS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
COORD_SYSTEM_ID VARCHAR(40),
DESCRIPTION VARCHAR(1024),
DLS_LEGAL_SUBDIVISION DOUBLE PRECISION,
DLS_MERIDIAN DOUBLE PRECISION,
DLS_MERIDIAN_DIRECTION VARCHAR(1),
DLS_QUARTER_SECTION VARCHAR(4),
DLS_QUARTER_SECTION_QUARTER VARCHAR(16),
DLS_RANGE DOUBLE PRECISION,
DLS_RANGE_MODIFIER VARCHAR(1),
DLS_SECTION DOUBLE PRECISION,
DLS_TOWNSHIP DOUBLE PRECISION,
DLS_TOWNSHIP_MODIFIER VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOCAL_COORD_SYSTEM_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PRINCIPAL_MERIDIAN VARCHAR(40),
REFERENCE_PLAN_NUM VARCHAR(30),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_PARCEL_DLS_ROAD'
CREATE TABLE sp_parcel_dls_road
(
PARCEL_DLS_ID VARCHAR(40) NOT NULL,
DLS_ROAD_ALLOWANCE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROAD_ALLOWANCE_PORTION VARCHAR(40),
ROAD_ALLOW_DESC VARCHAR(240),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_PARCEL_FPS'
CREATE TABLE sp_parcel_fps
(
PARCEL_FPS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
COORD_SYSTEM_ID VARCHAR(40),
DESCRIPTION VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GRID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_LATITUDE DECIMAL(14,9),
REFERENCE_LONGITUDE DECIMAL(14,9),
REFERENCE_PLAN_NUM VARCHAR(30),
REMARK VARCHAR(2000),
SECTION SMALLINT,
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
UNIT VARCHAR(255),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_PARCEL_LIBYA'
CREATE TABLE sp_parcel_libya
(
PARCEL_LYBIA_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
COORD_SYSTEM_ID VARCHAR(40),
DESCRIPTION VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EW_DIRECTION VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
LIBYA_AREA VARCHAR(20),
LIBYA_BLOCK VARCHAR(20),
LIBYA_SECTION VARCHAR(20),
LIBYA_SUBSECTION VARCHAR(20),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_PARCEL_LOT'
CREATE TABLE sp_parcel_lot
(
PARCEL_LOT_ID VARCHAR(40) NOT NULL,
PARCEL_LOT_TYPE VARCHAR(40) NOT NULL,
PARCEL_LOT_NUM VARCHAR(10) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROSS_SIZE DECIMAL(20,10),
GROSS_SIZE_OUOM VARCHAR(40),
LOT_DESCRIPTION VARCHAR(1024),
LOT_NAME VARCHAR(255),
PARCEL_CONGRESS_ID VARCHAR(40),
PARCEL_OHIO_ID VARCHAR(40),
PARCEL_PBL_ID VARCHAR(40),
PARCEL_TEXAS_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_PARCEL_M_B'
CREATE TABLE sp_parcel_m_b
(
SPATIAL_DESCRIPTION_ID VARCHAR(40) NOT NULL,
SPATIAL_OBS_NO INT,
M_B_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(1024),
DLS_ROAD_ALLOWANCE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EW_DIRECTION VARCHAR(40),
EW_DISTANCE DECIMAL(10,3),
EW_DISTANCE_OUOM VARCHAR(40),
EW_START_LINE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
INACTIVATION_DATE TIMESTAMP(0),
LOCAL_COORD_SYSTEM_ID VARCHAR(40),
LOCATION_TYPE VARCHAR(40),
NS_DIRECTION VARCHAR(40),
NS_DISTANCE DECIMAL(10,3),
NS_DISTANCE_OUOM VARCHAR(40),
NS_START_LINE VARCHAR(40),
ORIENTATION VARCHAR(40),
PARCEL_CARTER_ID VARCHAR(40),
PARCEL_CONGRESS_ID VARCHAR(40),
PARCEL_DLS_ID VARCHAR(40),
PARCEL_FPS_ID VARCHAR(40),
PARCEL_LIBYA_ID VARCHAR(40),
PARCEL_LOT_ID VARCHAR(40),
PARCEL_LOT_NUM VARCHAR(10),
PARCEL_LOT_TYPE VARCHAR(40),
PARCEL_NE_LOC_ID VARCHAR(40),
PARCEL_NORTH_SEA_ID VARCHAR(40),
PARCEL_NTS_ID VARCHAR(40),
PARCEL_OFFSHORE_ID VARCHAR(40),
PARCEL_OHIO_ID VARCHAR(40),
PARCEL_PBL_ID VARCHAR(40),
PARCEL_TEXAS_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_LOC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SURFACE_LOC VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_PARCEL_NE_LOC'
CREATE TABLE sp_parcel_ne_loc
(
PARCEL_NE_LOC_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
COORD_SYSTEM_ID VARCHAR(40),
DESCRIPTION VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NE_DISTRICT VARCHAR(16),
NE_LOT_CODE VARCHAR(40),
NE_MAP_QUAD_MIN DECIMAL(10,5),
NE_MAP_QUAD_NAME VARCHAR(255),
NE_MAP_QUAD_SECTION VARCHAR(2),
NE_TOWNSHIP_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REFERENCE_PLAN_NUM VARCHAR(30),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_PARCEL_NORTH_SEA'
CREATE TABLE sp_parcel_north_sea
(
PARCEL_NORTH_SEA_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
BLOCK_NO BIGINT,
BLOCK_SUFFIX VARCHAR(2),
COORD_SYSTEM_ID VARCHAR(40),
DESCRIPTION VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PRINCIPAL_MERIDIAN VARCHAR(40),
QUADRANT DOUBLE PRECISION,
QUADRANT_PREFIX VARCHAR(2),
REFERENCE_PLAN_NUM VARCHAR(30),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
SUBDIVISION VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_PARCEL_NTS'
CREATE TABLE sp_parcel_nts
(
PARCEL_NTS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
BLOCK VARCHAR(1),
COORD_SYSTEM_ID VARCHAR(40),
DESCRIPTION VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LETTER_QUADRANGLE VARCHAR(1),
PPDM_GUID VARCHAR(38),
PRIMARY_QUADRANGLE DOUBLE PRECISION,
QUARTER_UNIT VARCHAR(1),
REFERENCE_PLAN_NUM VARCHAR(30),
REMARK VARCHAR(2000),
SIXTEENTH DOUBLE PRECISION,
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
UNIT SMALLINT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_PARCEL_OFFSHORE'
CREATE TABLE sp_parcel_offshore
(
PARCEL_OFFSHORE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
BLOCK_ADDITION VARCHAR(1),
BLOCK_MODIFIER VARCHAR(1),
COORD_SYSTEM_ID VARCHAR(40),
DESCRIPTION VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EW_DIRECTION VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
GRID_BLOCK_RANGE DOUBLE PRECISION,
GRID_BLOCK_TIER DOUBLE PRECISION,
NS_DIRECTION VARCHAR(40),
OCS_NUM VARCHAR(8),
OFFSHORE_AREA_CODE VARCHAR(40),
OFFSHORE_BLOCK VARCHAR(6),
PPDM_GUID VARCHAR(38),
REFERENCE_PLAN_NUM VARCHAR(30),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
UTM_QUADRANT VARCHAR(7),
WATER_BOTTOM_ZONE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_PARCEL_OHIO'
CREATE TABLE sp_parcel_ohio
(
PARCEL_OHIO_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
COORD_SYSTEM_ID VARCHAR(40),
DESCRIPTION VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
JURISDICTION VARCHAR(40),
MAP_QUAD_MIN DECIMAL(10,5),
MAP_QUAD_NAME VARCHAR(255),
OHIO_ALLOTMENT VARCHAR(60),
OHIO_DIVISION VARCHAR(60),
OHIO_FRACTION VARCHAR(60),
OHIO_LAND_SUBDIVISION_NAME VARCHAR(60),
OHIO_OTHER_SUBDIVISION VARCHAR(60),
OHIO_QUARTER_TOWNSHIP VARCHAR(2),
OHIO_RANGE DECIMAL(5,1),
OHIO_RANGE_DIR VARCHAR(40),
OHIO_TOWNSHIP DECIMAL(6,1),
OHIO_TOWNSHIP_DIR VARCHAR(40),
OHIO_TOWNSHIP_NAME VARCHAR(255),
OHIO_TRACT VARCHAR(60),
OHIO_TWP_LOT_CODE VARCHAR(60),
OHIO_TWP_SECTION_CODE VARCHAR(40),
PPDM_GUID VARCHAR(38),
PRINCIPAL_MERIDIAN VARCHAR(40),
REFERENCE_PLAN_NUM VARCHAR(30),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
SPOT_CODE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_PARCEL_PBL'
CREATE TABLE sp_parcel_pbl
(
PARCEL_PBL_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
COORD_SYSTEM_ID VARCHAR(40),
DESCRIPTION VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
JURISDICTION VARCHAR(40),
PBL_BLOCK VARCHAR(40),
PBL_LOT VARCHAR(40),
PBL_PLAN VARCHAR(40),
PBL_SUBDIVISION VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_PARCEL_REMARK'
CREATE TABLE sp_parcel_remark
(
SPATIAL_DESCRIPTION_ID VARCHAR(40) NOT NULL,
SPATIAL_OBS_NO INT,
PARCEL_ID VARCHAR(40) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_DATE TIMESTAMP(0),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_PARCEL_TEXAS'
CREATE TABLE sp_parcel_texas
(
PARCEL_TEXAS_ID VARCHAR(40) NOT NULL,
ABSTRACT_NUM VARCHAR(20),
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
BLOCK_FRACTION VARCHAR(3),
COORD_SYSTEM_ID VARCHAR(40),
DESCRIPTION VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LABOR VARCHAR(4),
LEAGUE VARCHAR(4),
NS_DIRECTION VARCHAR(40),
PORCION_NUM VARCHAR(30),
PORCION_SURVEY_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REFERENCE_PLAN_NUM VARCHAR(30),
REMARK VARCHAR(2000),
SECTION_FRACTION VARCHAR(3),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
SPOT_CODE VARCHAR(40),
TEXAS_BLOCK VARCHAR(4),
TEXAS_LOT VARCHAR(4),
TEXAS_SECTION VARCHAR(4),
TEXAS_SHARE VARCHAR(30),
TEXAS_SUBDIVISION VARCHAR(4),
TEXAS_SURVEY VARCHAR(60),
TEXAS_TOWNSHIP DECIMAL(4,1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_POINT'
CREATE TABLE sp_point
(
POINT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
COORD_ACQUISITION_ID VARCHAR(40),
COORD_SYSTEM_ID VARCHAR(40),
DATUM_ELEV DECIMAL(10,5),
DATUM_ELEV_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
ELEVATION DECIMAL(10,5),
ELEVATION_OUOM VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
LATITUDE DECIMAL(14,9),
LOCAL_COORD_SYSTEM_ID VARCHAR(40),
LOCATION_QUALITY VARCHAR(40),
LOCATION_TYPE VARCHAR(40),
LONGITUDE DECIMAL(14,9),
MEASURED_DEPTH DECIMAL(15,5),
MEASURED_DEPTH_OUOM VARCHAR(40),
POINT_LABEL VARCHAR(30),
POINT_NO DECIMAL(12,2),
POINT_POSITION VARCHAR(40),
POINT_SEQ_NO INT,
PPDM_GUID VARCHAR(38),
REFERENCE_DATUM VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_POINT_VERSION'
CREATE TABLE sp_point_version
(
POINT_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
VERSION_OBS_NO INT,
ACQUISITION_ID VARCHAR(40),
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
EASTING DECIMAL(15,7),
EASTING_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
ELEV DECIMAL(10,5),
ELEV_OUOM VARCHAR(40),
EW_DIRECTION VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
GEOG_COORD_SYSTEM_ID VARCHAR(40),
LATITUDE DECIMAL(14,9),
LEGAL_SURVEY_TYPE VARCHAR(40),
LOCAL_COORD_SYSTEM_ID VARCHAR(40),
LOCATION_QUALIFIER VARCHAR(40),
LOCATION_QUALITY VARCHAR(40),
LONGITUDE DECIMAL(14,9),
MAP_COORD_SYSTEM_ID VARCHAR(40),
MD DECIMAL(10,5),
MD_OUOM VARCHAR(40),
MONUMENT_ID VARCHAR(40),
MONUMENT_SF_SUBTYPE VARCHAR(30),
NODE_POSITION VARCHAR(40),
NORTHING DECIMAL(15,7),
NORTHING_OUOM VARCHAR(40),
NORTH_TYPE VARCHAR(40),
NS_DIRECTION VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
ORIGINAL_REF_NUM VARCHAR(30),
POLAR_AZIMUTH DECIMAL(10,5),
POLAR_OFFSET DECIMAL(8,2),
POLAR_OFFSET_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
REPORTED_TVD DECIMAL(10,5),
REPORTED_TVD_OUOM VARCHAR(40),
VERSION_TYPE VARCHAR(40),
X_COORDINATE DECIMAL(10,5),
X_OFFSET DECIMAL(10,5),
X_OFFSET_OUOM VARCHAR(40),
Y_COORDINATE DECIMAL(10,5),
Y_OFFSET DECIMAL(10,5),
Y_OFFSET_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_POLYGON'
CREATE TABLE sp_polygon
(
POLYGON_ID VARCHAR(40) NOT NULL,
ACQUISITION_ID VARCHAR(40),
ACTIVE_IND VARCHAR(1),
BOUNDARY_DIRECTION VARCHAR(20),
CONTAINED_BY_POLYGON_ID VARCHAR(40),
COORD_SYSTEM_ID VARCHAR(40),
DATUM_ELEV DECIMAL(10,5),
DATUM_ELEV_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXCLUSION_IND VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
INCLUSION_IND VARCHAR(1),
LOCAL_COORD_SYSTEM_ID VARCHAR(40),
LOCATION_TYPE VARCHAR(40),
MAX_PLOT_SCALE VARCHAR(20),
MIN_PLOT_SCALE VARCHAR(20),
POLYGON_SET_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REFERENCE_DATUM VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_ZONE_DEFINITION'
CREATE TABLE sp_zone_definition
(
ZONE_DEFINITION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
BASE_QUALIFIER VARCHAR(40),
BASE_STRAT_UNIT_ID VARCHAR(40),
DEFINED_STRAT_UNIT_ID VARCHAR(40),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OWNER_BA_ID VARCHAR(40),
OWNER_REF_NUM VARCHAR(30),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
TOP_QUALIFIER VARCHAR(40),
TOP_STRAT_UNIT_ID VARCHAR(40),
UWI VARCHAR(40),
ZONE_DERIVATION_METHOD VARCHAR(40),
ZONE_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_ZONE_DEFIN_XREF'
CREATE TABLE sp_zone_defin_xref
(
ZONE_DEFINITION_ID_1 VARCHAR(40) NOT NULL,
ZONE_DEFINITION_ID_2 VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RESPONSIBLE_BA_ID VARCHAR(40),
SOURCE VARCHAR(40),
XREF_REASON VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SP_ZONE_SUBSTANCE'
CREATE TABLE sp_zone_substance
(
SPATIAL_DESCRIPTION_ID VARCHAR(40) NOT NULL,
SPATIAL_OBS_NO INT,
MINERAL_ZONE_ID VARCHAR(40) NOT NULL,
SUBSTANCE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
BASE_QUALIFIER VARCHAR(40),
BASE_STRAT_UNIT_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXCLUDED_IND VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
INCLUDED_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
TOP_QUALIFIER VARCHAR(40),
TOP_STRAT_UNIT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_ACQTN_METHOD'
CREATE TABLE strat_acqtn_method
(
STRAT_ACQTN_METHOD_ID VARCHAR(40) NOT NULL,
ACQTN_DATE TIMESTAMP(0),
ACQTN_METHOD_TYPE VARCHAR(40),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_STATION_ID VARCHAR(40),
INTERP_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STRAT_COLUMN_ID VARCHAR(40),
STRAT_COLUMN_SOURCE VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
UWI VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_ALIAS'
CREATE TABLE strat_alias
(
STRAT_NAME_SET_ID VARCHAR(40) NOT NULL,
STRAT_UNIT_ID VARCHAR(40) NOT NULL,
ALIAS_STRAT_NAME_SET_ID VARCHAR(40) NOT NULL,
ALIAS_STRAT_UNIT_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_COLUMN'
CREATE TABLE strat_column
(
STRAT_COLUMN_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRAT_COLUMN_NAME VARCHAR(255),
STRAT_COLUMN_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_COLUMN_ACQTN'
CREATE TABLE strat_column_acqtn
(
STRAT_COLUMN_ID VARCHAR(40) NOT NULL,
STRAT_COLUMN_SOURCE VARCHAR(40) NOT NULL,
STRAT_NAME_SET_ID VARCHAR(40) NOT NULL,
STRAT_UNIT_ID VARCHAR(40) NOT NULL,
INTERP_ID VARCHAR(40) NOT NULL,
STRAT_COLUMN_ACQTN_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CORE_ID VARCHAR(40),
CORE_SOURCE VARCHAR(40),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_INTERP_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FIELD_STRAT_UNIT_ID VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
LOG_CURVE_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROJECT_ID VARCHAR(40),
REMARK VARCHAR(2000),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
UWI VARCHAR(40),
WS_INTERP_ID VARCHAR(40),
WS_STRAT_UNIT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_COLUMN_UNIT'
CREATE TABLE strat_column_unit
(
STRAT_COLUMN_ID VARCHAR(40) NOT NULL,
STRAT_COLUMN_SOURCE VARCHAR(40) NOT NULL,
STRAT_NAME_SET_ID VARCHAR(40) NOT NULL,
STRAT_UNIT_ID VARCHAR(40) NOT NULL,
INTERP_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CERTIFIED_IND VARCHAR(1),
CONFORMITY_RELATIONSHIP VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTERPRETATION_VERSION VARCHAR(40),
LITHOLOGY VARCHAR(40),
OCCURRENCE_TYPE VARCHAR(40),
ORDINAL_SEQ_NO INT,
OVERTURNED_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
REPEAT_STRAT_OCCUR_NO BIGINT,
REPEAT_STRAT_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
SOUR_GAS_IND VARCHAR(1),
STRAT_INTERPRET_METHOD VARCHAR(40),
STRAT_TOPO_RELATION_IND VARCHAR(1),
SW_APPLICATION_ID VARCHAR(40),
VERSION_OBS_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_COLUMN_XREF'
CREATE TABLE strat_column_xref
(
STRAT_COLUMN_ID_1 VARCHAR(40) NOT NULL,
STRAT_COLUMN_SOURCE_1 VARCHAR(40) NOT NULL,
STRAT_COLUMN_ID_2 VARCHAR(40) NOT NULL,
STRAT_COLUMN_SOURCE_2 VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STRAT_COLUMN_XREF_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_COL_UNIT_AGE'
CREATE TABLE strat_col_unit_age
(
STRAT_COLUMN_ID VARCHAR(40) NOT NULL,
STRAT_COLUMN_SOURCE VARCHAR(40) NOT NULL,
STRAT_NAME_SET_ID VARCHAR(40) NOT NULL,
STRAT_UNIT_ID VARCHAR(40) NOT NULL,
INTERP_ID VARCHAR(40) NOT NULL,
AGE_SOURCE VARCHAR(40) NOT NULL,
AGE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AVERAGE_AGE DECIMAL(15,5),
AVERAGE_AGE_ERROR_MINUS DECIMAL(15,5),
AVERAGE_AGE_ERROR_PLUS DECIMAL(15,5),
AVERAGE_REL_STRAT_NAME_SET VARCHAR(40),
AVERAGE_REL_STRAT_UNIT_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOWER_MAX_AGE DECIMAL(15,5),
LOWER_MAX_AGE_ERROR_MINUS DECIMAL(15,5),
LOWER_MAX_AGE_ERROR_PLUS DECIMAL(15,5),
LOWER_MIN_AGE DECIMAL(15,5),
LOWER_MIN_AGE_ERROR_MINUS DECIMAL(15,5),
LOWER_MIN_AGE_ERROR_PLUS DECIMAL(15,5),
LOWER_REL_STRAT_NAME_SET VARCHAR(40),
LOWER_REL_STRAT_UNIT_ID VARCHAR(40),
MAX_AGE DECIMAL(15,5),
MAX_AGE_ERROR_MINUS DECIMAL(15,5),
MAX_AGE_ERROR_PLUS DECIMAL(15,5),
MIN_AGE DECIMAL(15,5),
MIN_AGE_ERROR_MINUS DECIMAL(15,5),
MIN_AGE_ERROR_PLUS DECIMAL(15,5),
POST_QUALIFIER VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PRE_QUALIFIER VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRAT_AGE_METHOD VARCHAR(40),
UPPER_MAX_AGE DECIMAL(15,5),
UPPER_MAX_AGE_ERROR_MINUS DECIMAL(15,5),
UPPER_MAX_AGE_ERROR_PLUS DECIMAL(15,5),
UPPER_MIN_AGE DECIMAL(15,5),
UPPER_MIN_AGE_ERROR_MINUS DECIMAL(15,5),
UPPER_MIN_AGE_ERROR_PLUS DECIMAL(15,5),
UPPER_REL_STRAT_NAME_SET VARCHAR(40),
UPPER_REL_STRAT_UNIT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_EQUIVALENCE'
CREATE TABLE strat_equivalence
(
STRAT_NAME_SET_ID VARCHAR(40) NOT NULL,
STRAT_UNIT_ID VARCHAR(40) NOT NULL,
EQUIV_STRAT_NAME_SET_ID VARCHAR(40) NOT NULL,
EQUIV_STRAT_UNIT_ID VARCHAR(40) NOT NULL,
EQUIV_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_ID2 VARCHAR(40),
AREA_TYPE VARCHAR(40),
AREA_TYPE2 VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIV_DIRECTION VARCHAR(40),
EQUIV_INTERP_ID VARCHAR(40),
EQUIV_STRAT_COLUMN_ID VARCHAR(40),
EQUIV_STRAT_COLUMN_SOURCE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRAT_COLUMN_ID VARCHAR(40),
STRAT_COLUMN_SOURCE VARCHAR(40),
STRAT_EQUIVALENCE_TYPE VARCHAR(40),
STRAT_INTERP_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_FIELD_ACQTN'
CREATE TABLE strat_field_acqtn
(
STRAT_FIELD_ACQTN_ID VARCHAR(40) NOT NULL,
FIELD_STATION_ID VARCHAR(40) NOT NULL,
STRAT_NAME_SET_ID VARCHAR(40) NOT NULL,
STRAT_UNIT_ID VARCHAR(40) NOT NULL,
INTERP_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CORE_ID VARCHAR(40),
CORE_SOURCE VARCHAR(40),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
LOG_CURVE_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROJECT_ID VARCHAR(40),
REMARK VARCHAR(2000),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
STRAT_COLUMN_ID VARCHAR(40),
STRAT_COLUMN_SOURCE VARCHAR(40),
UWI VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_FIELD_NODE'
CREATE TABLE strat_field_node
(
FIELD_STATION_ID VARCHAR(40) NOT NULL,
NODE_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
COORD_ACQUISITION_ID VARCHAR(40),
COORD_SYSTEM_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
ELEV DECIMAL(10,5),
ELEV_OUOM VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
LATITUDE DECIMAL(14,9),
LOCAL_COORD_SYSTEM_ID VARCHAR(40),
LONGITUDE DECIMAL(14,9),
NODE_LOC_TYPE VARCHAR(40),
ORIGINAL_OBS_NO INT,
ORIGINAL_XY_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SELECTED_OBS_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_FIELD_SECTION'
CREATE TABLE strat_field_section
(
FIELD_STATION_ID VARCHAR(40) NOT NULL,
STRAT_NAME_SET_ID VARCHAR(40) NOT NULL,
STRAT_UNIT_ID VARCHAR(40) NOT NULL,
INTERP_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AZIMUTH_NORTH_TYPE VARCHAR(40),
CERTIFIED_IND VARCHAR(1),
CONFORMITY_RELATIONSHIP VARCHAR(40),
DIP_ANGLE DECIMAL(22,5),
DIP_DIRECTION VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FAULT_HEAVE DECIMAL(22,5),
FAULT_THROW DECIMAL(22,5),
INTERPRETATION_VERSION VARCHAR(40),
INTERPRETER VARCHAR(40),
LITHOLOGY VARCHAR(40),
MISSING_SECTION DECIMAL(22,5),
MISSING_STRAT_TYPE VARCHAR(40),
ORDINAL_SEQ_NO INT,
OVERTURNED_IND VARCHAR(1),
PICK_DATE TIMESTAMP(0),
PICK_LOCATION VARCHAR(40),
PICK_QUALIFIER VARCHAR(40),
PICK_QUALIF_REASON VARCHAR(40),
PICK_QUALITY VARCHAR(40),
PICK_VERSION_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_PICK_IND VARCHAR(1),
REMARK VARCHAR(2000),
REPEAT_SECTION DECIMAL(22,5),
REPEAT_STRAT_OCCUR_NO BIGINT,
REPEAT_STRAT_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRAT_INTERPRET_METHOD VARCHAR(40),
STRAT_UNIT_MD DECIMAL(15,5),
STRAT_UNIT_MD_OUOM VARCHAR(40),
STRAT_UNIT_TVD DECIMAL(15,5),
STRIKE DECIMAL(22,5),
SW_APPLICATION_ID VARCHAR(40),
TRUE_THICKNESS_IND VARCHAR(1),
TVD_METHOD VARCHAR(40),
VERSION_OBS_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_FIELD_STATION'
CREATE TABLE strat_field_station
(
FIELD_STATION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AIR_PHOTO_NUM VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
COMPLETE_DATE TIMESTAMP(0),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_STATION_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_FLD_INTERP_AGE'
CREATE TABLE strat_fld_interp_age
(
FIELD_STATION_ID VARCHAR(40) NOT NULL,
STRAT_NAME_SET_ID VARCHAR(40) NOT NULL,
STRAT_UNIT_ID VARCHAR(40) NOT NULL,
INTERP_ID VARCHAR(40) NOT NULL,
AGE_SOURCE VARCHAR(40) NOT NULL,
AGE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AVERAGE_AGE DECIMAL(15,5),
AVERAGE_AGE_ERROR_MINUS DECIMAL(15,5),
AVERAGE_AGE_ERROR_PLUS DECIMAL(15,5),
AVERAGE_REL_STRAT_NAME_SET VARCHAR(40),
AVERAGE_REL_STRAT_UNIT_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOWER_MAX_AGE DECIMAL(15,5),
LOWER_MAX_AGE_ERROR_MINUS DECIMAL(15,5),
LOWER_MAX_AGE_ERROR_PLUS DECIMAL(15,5),
LOWER_MIN_AGE DECIMAL(15,5),
LOWER_MIN_AGE_ERROR_MINUS DECIMAL(15,5),
LOWER_MIN_AGE_ERROR_PLUS DECIMAL(15,5),
LOWER_REL_STRAT_NAME_SET VARCHAR(40),
LOWER_REL_STRAT_UNIT_ID VARCHAR(40),
POST_QUALIFIER VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PRE_QUALIFIER VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRAT_AGE_METHOD VARCHAR(40),
UPPER_MAX_AGE DECIMAL(15,5),
UPPER_MAX_AGE_ERROR_MINUS DECIMAL(15,5),
UPPER_MAX_AGE_ERROR_PLUS DECIMAL(15,5),
UPPER_MIN_AGE DECIMAL(15,5),
UPPER_MIN_AGE_ERROR_MINUS DECIMAL(15,5),
UPPER_MIN_AGE_ERROR_PLUS DECIMAL(15,5),
UPPER_REL_STRAT_NAME_SET VARCHAR(40),
UPPER_REL_STRAT_UNIT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_HIERARCHY'
CREATE TABLE strat_hierarchy
(
PARENT_STRAT_NAME_SET_ID VARCHAR(40) NOT NULL,
PARENT_STRAT_UNIT_ID VARCHAR(40) NOT NULL,
CHILD_STRAT_NAME_SET_ID VARCHAR(40) NOT NULL,
CHILD_STRAT_UNIT_ID VARCHAR(40) NOT NULL,
HIERARCHY_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
CHILD_INTERP_ID2 VARCHAR(40),
CHILD_STRAT_COLUMN_ID VARCHAR(40),
CHILD_STRAT_COLUMN_SOURCE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PARENT_INTERP_ID VARCHAR(40),
PARENT_STRAT_COLUMN_ID VARCHAR(40),
PARENT_STRAT_COLUMN_SOURCE VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_HIERARCHY_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRAT_HIERARCHY_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_HIERARCHY_DESC'
CREATE TABLE strat_hierarchy_desc
(
HIERARCHY_DESC_ID VARCHAR(40) NOT NULL,
HIERARCHY_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PARENT_STRAT_UNIT_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRAT_HIERARCHY_TYPE VARCHAR(40),
STRAT_TYPE VARCHAR(40),
STRAT_UNIT_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_INTERP_CORR'
CREATE TABLE strat_interp_corr
(
CORRELATION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CORRELATION_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_INTERP_ID_1 VARCHAR(40),
FIELD_INTERP_ID_2 VARCHAR(40),
FIELD_STATION_ID_1 VARCHAR(40),
FIELD_STATION_ID_2 VARCHAR(40),
FIELD_STRAT_NAME_SET_1 VARCHAR(40),
FIELD_STRAT_NAME_SET_2 VARCHAR(40),
FIELD_STRAT_UNIT_ID_1 VARCHAR(40),
FIELD_STRAT_UNIT_ID_2 VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROJECT_ID VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRAT_CORRELATION_CRITERIA VARCHAR(40),
STRAT_CORRELATION_QUALITY VARCHAR(40),
STRAT_CORRELATION_TYPE VARCHAR(40),
STRAT_INTERPRET_METHOD VARCHAR(40),
UWI_1 VARCHAR(40),
UWI_2 VARCHAR(40),
UWI_INTERP_ID_1 VARCHAR(40),
UWI_INTERP_ID_2 VARCHAR(40),
UWI_STRAT_NAME_SET_1 VARCHAR(40),
UWI_STRAT_NAME_SET_2 VARCHAR(40),
UWI_STRAT_UNIT_ID_1 VARCHAR(40),
UWI_STRAT_UNIT_ID_2 VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_NAME_SET'
CREATE TABLE strat_name_set
(
STRAT_NAME_SET_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CERTIFIED_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STRAT_NAME_SET_NAME VARCHAR(255),
STRAT_NAME_SET_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_NAME_SET_XREF'
CREATE TABLE strat_name_set_xref
(
STRAT_NAME_SET_ID_1 VARCHAR(40) NOT NULL,
STRAT_NAME_SET_ID_2 VARCHAR(40) NOT NULL,
XREF_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
XREF_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_NODE_VERSION'
CREATE TABLE strat_node_version
(
FIELD_STATION_ID VARCHAR(40) NOT NULL,
NODE_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
NODE_OBS_NO INT,
ACQUISITION_ID VARCHAR(40),
ACTIVE_IND VARCHAR(1),
EASTING DECIMAL(15,7),
EASTING_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
ELEV DECIMAL(10,5),
ELEV_OUOM VARCHAR(40),
EW_DIRECTION VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
GEOG_COORD_SYSTEM_ID VARCHAR(40),
LATITUDE DECIMAL(14,9),
LEGAL_SURVEY_TYPE VARCHAR(40),
LOCAL_COORD_SYSTEM_ID VARCHAR(40),
LOCATION_QUALIFIER VARCHAR(40),
LONGITUDE DECIMAL(14,9),
MAP_COORD_SYSTEM_ID VARCHAR(40),
MD DECIMAL(10,5),
MD_OUOM VARCHAR(40),
NODE_LOC_TYPE VARCHAR(40),
NORTHING DECIMAL(15,7),
NORTHING_OUOM VARCHAR(40),
NORTH_TYPE VARCHAR(40),
NS_DIRECTION VARCHAR(40),
POLAR_AZIMUTH DECIMAL(10,5),
POLAR_OFFSET DECIMAL(8,2),
POLAR_OFFSET_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REPORTED_TVD DECIMAL(10,5),
REPORTED_TVD_OUOM VARCHAR(40),
VERSION_TYPE VARCHAR(40),
X_OFFSET DECIMAL(10,5),
X_OFFSET_OUOM VARCHAR(40),
Y_OFFSET DECIMAL(10,5),
Y_OFFSET_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_TOPO_RELATION'
CREATE TABLE strat_topo_relation
(
STRAT_NAME_SET_ID_1 VARCHAR(40) NOT NULL,
STRAT_UNIT_ID_1 VARCHAR(40) NOT NULL,
STRAT_NAME_SET_ID_2 VARCHAR(40) NOT NULL,
STRAT_UNIT_ID_2 VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
TOPO_RELATION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTERP_ID_1 VARCHAR(40),
INTERP_ID_2 VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
STRAT_COLUMN_ID_1 VARCHAR(40),
STRAT_COLUMN_ID_2 VARCHAR(40),
STRAT_COLUMN_SOURCE_1 VARCHAR(40),
STRAT_COLUMN_SOURCE_2 VARCHAR(40),
TOPO_RELATION_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_UNIT'
CREATE TABLE strat_unit
(
STRAT_NAME_SET_ID VARCHAR(40) NOT NULL,
STRAT_UNIT_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CONFIDENCE_ID VARCHAR(40),
CURRENT_STATUS_DATE TIMESTAMP(0),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FAULT_TYPE VARCHAR(40),
FORM_CODE VARCHAR(20),
GROUP_CODE VARCHAR(20),
LONG_NAME VARCHAR(255),
ORDINAL_AGE_CODE DECIMAL(15,5),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
STRAT_INTERPRET_METHOD VARCHAR(40),
STRAT_STATUS VARCHAR(40),
STRAT_TYPE VARCHAR(40),
STRAT_UNIT_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_UNIT_AGE'
CREATE TABLE strat_unit_age
(
STRAT_NAME_SET_ID VARCHAR(40) NOT NULL,
STRAT_UNIT_ID VARCHAR(40) NOT NULL,
AGE_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
AVERAGE_AGE DECIMAL(15,5),
AVERAGE_AGE_ERROR_MINUS DECIMAL(15,5),
AVERAGE_AGE_ERROR_PLUS DECIMAL(15,5),
AVERAGE_REL_STRAT_NAME_SET VARCHAR(40),
AVERAGE_REL_STRAT_UNIT_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOWER_MAX_AGE DECIMAL(15,5),
LOWER_MAX_AGE_ERROR_MINUS DECIMAL(15,5),
LOWER_MAX_AGE_ERROR_PLUS DECIMAL(15,5),
LOWER_MIN_AGE DECIMAL(15,5),
LOWER_MIN_AGE_ERROR_MINUS DECIMAL(15,5),
LOWER_MIN_AGE_ERROR_PLUS DECIMAL(15,5),
LOWER_REL_STRAT_NAME_SET VARCHAR(40),
LOWER_REL_STRAT_UNIT_ID VARCHAR(40),
MAX_AGE DECIMAL(15,5),
MAX_AGE_ERROR_MINUS DECIMAL(15,5),
MAX_AGE_ERROR_PLUS DECIMAL(15,5),
MIN_AGE DECIMAL(15,5),
MIN_AGE_ERROR_MINUS DECIMAL(15,5),
MIN_AGE_ERROR_PLUS DECIMAL(15,5),
POST_QUALIFIER VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PRE_QUALIFIER VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRAT_AGE_METHOD VARCHAR(40),
UPPER_MAX_AGE DECIMAL(15,5),
UPPER_MAX_AGE_ERROR_MINUS DECIMAL(15,5),
UPPER_MAX_AGE_ERROR_PLUS DECIMAL(15,5),
UPPER_MIN_AGE DECIMAL(15,5),
UPPER_MIN_AGE_ERROR_MINUS DECIMAL(15,5),
UPPER_MIN_AGE_ERROR_PLUS DECIMAL(15,5),
UPPER_REL_STRAT_NAME_SET VARCHAR(40),
UPPER_REL_STRAT_UNIT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_UNIT_COMPONENT'
CREATE TABLE strat_unit_component
(
STRAT_NAME_SET_ID VARCHAR(40) NOT NULL,
STRAT_UNIT_ID VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_SOURCE VARCHAR(40),
PR_STR_UWI VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_UNIT_COMPONENT_TYPE VARCHAR(40),
STRING_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_ACTIVITY_UWI VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_UNIT_DESCRIPTION'
CREATE TABLE strat_unit_description
(
STRAT_NAME_SET_ID VARCHAR(40) NOT NULL,
STRAT_UNIT_ID VARCHAR(40) NOT NULL,
DESCRIPTION_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM VARCHAR(40),
AVERAGE_VALUE_UOM VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
DESCRIPTION VARCHAR(2000),
DESCRIPTION_DATE TIMESTAMP(0),
DESCRIPTION_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_PAGES VARCHAR(20),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRAT_UNIT_DESC VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_WELL_ACQTN'
CREATE TABLE strat_well_acqtn
(
STRAT_WELL_ACQTN_ID VARCHAR(40) NOT NULL,
UWI VARCHAR(40) NOT NULL,
STRAT_NAME_SET_ID VARCHAR(40) NOT NULL,
STRAT_UNIT_ID VARCHAR(40) NOT NULL,
INTERP_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CORE_ID VARCHAR(40),
CORE_SOURCE VARCHAR(40),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_INTERP_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FIELD_STRAT_NAME_SET_ID VARCHAR(40),
FIELD_STRAT_UNIT_ID VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
LOG_CURVE_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROJECT_ID VARCHAR(40),
REMARK VARCHAR(2000),
SC_INTERP_ID VARCHAR(40),
SC_STRAT_UNIT_ID VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
STRAT_COLUMN_ID VARCHAR(40),
STRAT_COLUMN_SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_WELL_INTERP_AGE'
CREATE TABLE strat_well_interp_age
(
UWI VARCHAR(40) NOT NULL,
STRAT_NAME_SET_ID VARCHAR(40) NOT NULL,
STRAT_UNIT_ID VARCHAR(40) NOT NULL,
INTERP_ID VARCHAR(40) NOT NULL,
AGE_SOURCE VARCHAR(40) NOT NULL,
AGE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AVERAGE_AGE DECIMAL(15,5),
AVERAGE_AGE_ERROR_MINUS DECIMAL(15,5),
AVERAGE_AGE_ERROR_PLUS DECIMAL(15,5),
AVERAGE_REL_STRAT_NAME_SET VARCHAR(40),
AVERAGE_REL_STRAT_UNIT_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOWER_MAX_AGE DECIMAL(15,5),
LOWER_MAX_AGE_ERROR_MINUS DECIMAL(15,5),
LOWER_MAX_AGE_ERROR_PLUS DECIMAL(15,5),
LOWER_MIN_AGE DECIMAL(15,5),
LOWER_MIN_AGE_ERROR_MINUS DECIMAL(15,5),
LOWER_MIN_AGE_ERROR_PLUS DECIMAL(15,5),
LOWER_REL_STRAT_NAME_SET VARCHAR(40),
LOWER_REL_STRAT_UNIT_ID VARCHAR(40),
POST_QUALIFIER VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PRE_QUALIFIER VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRAT_AGE_METHOD VARCHAR(40),
UPPER_MAX_AGE DECIMAL(15,5),
UPPER_MAX_AGE_ERROR_MINUS DECIMAL(15,5),
UPPER_MAX_AGE_ERROR_PLUS DECIMAL(15,5),
UPPER_MIN_AGE DECIMAL(15,5),
UPPER_MIN_AGE_ERROR_MINUS DECIMAL(15,5),
UPPER_MIN_AGE_ERROR_PLUS DECIMAL(15,5),
UPPER_REL_STRAT_NAME_SET VARCHAR(40),
UPPER_REL_STRAT_UNIT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE STRAT_WELL_SECTION'
CREATE TABLE strat_well_section
(
UWI VARCHAR(40) NOT NULL,
STRAT_NAME_SET_ID VARCHAR(40) NOT NULL,
STRAT_UNIT_ID VARCHAR(40) NOT NULL,
INTERP_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AZIMUTH_NORTH_TYPE VARCHAR(40),
CERTIFIED_IND VARCHAR(1),
CONFORMITY_RELATIONSHIP VARCHAR(40),
DIP_ANGLE DECIMAL(10,5),
DIP_DIRECTION VARCHAR(40),
DOMINANT_LITHOLOGY VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FAULT_HEAVE DECIMAL(22,5),
FAULT_THROW DECIMAL(22,5),
INTERPRETER VARCHAR(40),
MISSING_SECTION DECIMAL(22,5),
MISSING_STRAT_TYPE VARCHAR(40),
ORDINAL_SEQ_NO INT,
OVERTURNED_IND VARCHAR(1),
PICK_DATE TIMESTAMP(0),
PICK_DEPTH DECIMAL(15,5),
PICK_DEPTH_OUOM VARCHAR(40),
PICK_LOCATION VARCHAR(40),
PICK_QUALIFIER VARCHAR(40),
PICK_QUALIF_REASON VARCHAR(40),
PICK_QUALITY VARCHAR(40),
PICK_TVD DECIMAL(15,5),
PICK_VERSION_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_PICK_IND VARCHAR(1),
REMARK VARCHAR(2000),
REPEAT_SECTION DECIMAL(22,5),
REPEAT_STRAT_OCCUR_NO BIGINT,
REPEAT_STRAT_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRAT_INTERPRET_METHOD VARCHAR(40),
STRIKE DECIMAL(22,5),
SW_APPLICATION_ID VARCHAR(40),
TVD_METHOD VARCHAR(40),
VERSION_OBS_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SUBSTANCE'
CREATE TABLE substance
(
SUBSTANCE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
API_GRAVITY_MAX DECIMAL(10,5),
API_GRAVITY_MIN DECIMAL(10,5),
ATOMIC_MASS DECIMAL(10,5),
ATOMIC_MASS_NUMBER VARCHAR(20),
ATOMIC_WEIGHT DECIMAL(10,5),
CARBON_COUNT BIGINT,
CARBON_COUNT_MAX BIGINT,
CARBON_COUNT_MIN BIGINT,
COMPOSITION_FORMULA VARCHAR(1024),
CONVERSION_QUANTITY VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
IONIC_CHARGE DECIMAL(10,5),
MOLECULAR_MASS DECIMAL(10,5),
M_Z_ION VARCHAR(240),
PHASE_TYPE VARCHAR(40),
PH_VALUE DECIMAL(10,5),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PREFERRED_LONG_NAME VARCHAR(255),
PREFERRED_SHORT_NAME VARCHAR(30),
PREFERRED_UOM_ID VARCHAR(40),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
SUBSTANCE_DEFINITION VARCHAR(2000),
VALENCE_VALUE DECIMAL(10,5),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SUBSTANCE_ALIAS'
CREATE TABLE substance_alias
(
SUBSTANCE_ID VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CATALOGUE_EQUIP_ID VARCHAR(40),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SUBSTANCE_BA'
CREATE TABLE substance_ba
(
SUBSTANCE_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
BA_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BA_ROLE_TYPE VARCHAR(40),
CAS_NUMBER VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOCATION VARCHAR(40),
MANUFACTURER VARCHAR(30),
PPDM_GUID VARCHAR(38),
PRICE DECIMAL(12,2),
PRICE_OUOM VARCHAR(40),
PROBLEM_IND VARCHAR(1),
PURCHASE_QUANTITY DECIMAL(10,5),
PURCHASE_QUANTITY_OUOM VARCHAR(40),
PURCHASE_QUANTITY_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
SUBSTANCE_BA_ID VARCHAR(40),
SUPPLIER VARCHAR(30),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SUBSTANCE_BEHAVIOR'
CREATE TABLE substance_behavior
(
SUBSTANCE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
COMPOSITE_IND VARCHAR(1),
DRILLING_MUD_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
ELEMENT_IND VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
HYDROCARBON_IND VARCHAR(1),
ION_IND VARCHAR(1),
ISOMER_IND VARCHAR(1),
ISOTOPE_IND VARCHAR(1),
MINERAL_IND VARCHAR(1),
ORGANIC_MATTER_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PREFERRED_LONG_NAME VARCHAR(255),
PREFERRED_SHORT_NAME VARCHAR(30),
PRODUCTION_STUFF_IND VARCHAR(1),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SOLVENT_IND VARCHAR(1),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SUBSTANCE_COMPOSITION'
CREATE TABLE substance_composition
(
SUBSTANCE_ID VARCHAR(40) NOT NULL,
SUB_SUBSTANCE_ID VARCHAR(40) NOT NULL,
COMPOSITION_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
DEFINED_BY_BA_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FORMULA VARCHAR(240),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
SUBSTANCE_COMPONENT_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SUBSTANCE_PROPERTY_DETAIL'
CREATE TABLE substance_property_detail
(
SUBSTANCE_ID VARCHAR(40) NOT NULL,
PROPERTY_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM VARCHAR(40),
AVERAGE_VALUE_UOM VARCHAR(40),
CODE_VALUE DECIMAL(10,5),
COST DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
CURRENCY_UOM VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
DESCRIPTION VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_VALUE DOUBLE PRECISION,
REFERENCE_VALUE_TYPE VARCHAR(40),
REFERENCE_VALUE_UOM VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SUBSTANCE_PROPERTY VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SUBSTANCE_USE'
CREATE TABLE substance_use
(
SUBSTANCE_ID VARCHAR(40) NOT NULL,
SUBSTANCE_USE_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
PPDM_COLUMN_NAME VARCHAR(30),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PREFERRED_IND VARCHAR(1),
PROJECT_ID VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SUBSTANCE_ALIAS_ID VARCHAR(40),
SUBSTANCE_USE_RULE_DESC VARCHAR(240),
SUBSTANCE_USE_RULE_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE SUBSTANCE_XREF'
CREATE TABLE substance_xref
(
SUBSTANCE_ID1 VARCHAR(40) NOT NULL,
SUBSTANCE_ID2 VARCHAR(40) NOT NULL,
SUBSTANCE_XREF_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SUBSTANCE_XREF_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL'
CREATE TABLE well
(
UWI VARCHAR(40) NOT NULL,
ABANDONMENT_DATE TIMESTAMP(0),
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
ASSIGNED_FIELD VARCHAR(40),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
BASE_NODE_ID VARCHAR(40),
BASE_STRAT_NAME_SET_ID VARCHAR(40),
BASE_STRAT_UNIT_ID VARCHAR(40),
BOTTOM_HOLE_LATITUDE DECIMAL(14,9),
BOTTOM_HOLE_LONGITUDE DECIMAL(14,9),
CASING_FLANGE_ELEV DECIMAL(10,5),
CASING_FLANGE_ELEV_OUOM VARCHAR(40),
COMPLETION_DATE TIMESTAMP(0),
CONFIDENTIAL_DATE TIMESTAMP(0),
CONFIDENTIAL_DEPTH DECIMAL(15,5),
CONFIDENTIAL_DEPTH_OUOM VARCHAR(40),
CONFIDENTIAL_TYPE VARCHAR(40),
CONFID_STRAT_NAME_SET_ID VARCHAR(40),
CONFID_STRAT_UNIT_ID VARCHAR(40),
CURRENT_CLASS VARCHAR(40),
CURRENT_STATUS VARCHAR(40),
CURRENT_STATUS_DATE TIMESTAMP(0),
DEEPEST_DEPTH DECIMAL(15,5),
DEEPEST_DEPTH_OUOM VARCHAR(40),
DEPTH_DATUM VARCHAR(40),
DEPTH_DATUM_ELEV DECIMAL(10,5),
DEPTH_DATUM_ELEV_OUOM VARCHAR(40),
DERRICK_FLOOR_ELEV DECIMAL(10,5),
DERRICK_FLOOR_ELEV_OUOM VARCHAR(40),
DIFFERENCE_LAT_MSL DECIMAL(10,5),
DISCOVERY_IND VARCHAR(1),
DRILL_TD DECIMAL(10,5),
DRILL_TD_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
ELEV_REF_DATUM VARCHAR(40),
ENVIRONMENT_TYPE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FAULTED_IND VARCHAR(1),
FINAL_DRILL_DATE TIMESTAMP(0),
FINAL_TD DECIMAL(10,5),
FINAL_TD_OUOM VARCHAR(40),
GROUND_ELEV DECIMAL(10,5),
GROUND_ELEV_OUOM VARCHAR(40),
GROUND_ELEV_TYPE VARCHAR(40),
INITIAL_CLASS VARCHAR(40),
KB_ELEV DECIMAL(10,5),
KB_ELEV_OUOM VARCHAR(40),
LEASE_NAME VARCHAR(255),
LEASE_NUM VARCHAR(20),
LEGAL_SURVEY_TYPE VARCHAR(40),
LOCATION_TYPE VARCHAR(40),
LOG_TD DECIMAL(10,5),
LOG_TD_OUOM VARCHAR(40),
MAX_TVD DECIMAL(10,5),
MAX_TVD_OUOM VARCHAR(40),
NET_PAY DECIMAL(10,5),
NET_PAY_OUOM VARCHAR(40),
OLDEST_STRAT_AGE VARCHAR(40),
OLDEST_STRAT_NAME_SET_AGE VARCHAR(40),
OLDEST_STRAT_NAME_SET_ID VARCHAR(40),
OLDEST_STRAT_UNIT_ID VARCHAR(40),
OPERATOR VARCHAR(40),
PLATFORM_ID VARCHAR(40),
PLATFORM_SF_SUBTYPE VARCHAR(30),
PLOT_NAME VARCHAR(255),
PLOT_SYMBOL VARCHAR(40),
PLUGBACK_DEPTH DECIMAL(15,5),
PLUGBACK_DEPTH_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PRIMARY_SOURCE VARCHAR(40),
PROFILE_TYPE VARCHAR(40),
REGULATORY_AGENCY VARCHAR(40),
REMARK VARCHAR(2000),
RIG_ON_SITE_DATE TIMESTAMP(0),
RIG_RELEASE_DATE TIMESTAMP(0),
ROTARY_TABLE_ELEV DECIMAL(10,5),
ROTARY_TABLE_ELEV_OUOM VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
SPUD_DATE TIMESTAMP(0),
STATUS_TYPE VARCHAR(40),
SUBSEA_ELEV_REF_TYPE VARCHAR(40),
SURFACE_LATITUDE DECIMAL(14,9),
SURFACE_LONGITUDE DECIMAL(14,9),
SURFACE_NODE_ID VARCHAR(40),
TAX_CREDIT_CODE VARCHAR(40),
TD_STRAT_AGE VARCHAR(40),
TD_STRAT_NAME_SET_AGE VARCHAR(40),
TD_STRAT_NAME_SET_ID VARCHAR(40),
TD_STRAT_UNIT_ID VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
TOP_STRAT_NAME_SET_ID VARCHAR(40),
TOP_STRAT_UNIT_ID VARCHAR(40),
WATER_ACOUSTIC_VEL DECIMAL(10,5),
WATER_ACOUSTIC_VEL_OUOM VARCHAR(40),
WATER_DEPTH DECIMAL(15,5),
WATER_DEPTH_DATUM VARCHAR(40),
WATER_DEPTH_OUOM VARCHAR(40),
WELL_EVENT_NUM VARCHAR(4),
WELL_GOVERNMENT_ID VARCHAR(40),
WELL_INTERSECT_MD DECIMAL(10,5),
WELL_LEVEL_TYPE VARCHAR(40),
WELL_NAME VARCHAR(255),
WELL_NUM VARCHAR(20),
WHIPSTOCK_DEPTH DECIMAL(15,5),
WHIPSTOCK_DEPTH_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_ACTIVITY'
CREATE TABLE well_activity
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVITY_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_DURATION DECIMAL(10,5),
ACTIVITY_DURATION_OUOM VARCHAR(40),
ACTIVITY_PRODUCT VARCHAR(40),
ACTIVITY_SET_ID VARCHAR(40),
ACTIVITY_TYPE_ID VARCHAR(40),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
BASE_STRAT_UNIT_ID VARCHAR(40),
BLOWOUT_FLUID VARCHAR(40),
CONTROL_DATE TIMESTAMP(0),
CONTROL_DEPTH DECIMAL(15,5),
CONTROL_DEPTH_OUOM VARCHAR(40),
DOWNTIME_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
END_TIMEZONE VARCHAR(40),
EVENT_DATE TIMESTAMP(0),
EVENT_DEPTH DECIMAL(15,5),
EVENT_DEPTH_OUOM VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FINAL_MUD_DENSITY DECIMAL(10,5),
FINAL_MUD_DENSITY_OUOM VARCHAR(40),
FINAL_MUD_VISCOSITY DECIMAL(10,5),
FINAL_MUD_VISCOSITY_OUOM VARCHAR(40),
LITHOLOGY VARCHAR(40),
LOST_CIRC_SEVERITY VARCHAR(40),
LOST_MATERIAL_AMOUNT DECIMAL(10,5),
LOST_MATERIAL_AMOUNT_OUOM VARCHAR(40),
LOST_MATERIAL_TYPE VARCHAR(40),
LOST_VOLUME DECIMAL(14,4),
LOST_VOLUME_OUOM VARCHAR(40),
LOST_VOLUME_PRODUCT VARCHAR(40),
LOST_VOLUME_UOM VARCHAR(40),
PERIOD_OBS_NO INT,
PPDM_GUID VARCHAR(38),
PROD_STRING_ID VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PR_STR_FORM_OBS_NO INT,
REMARK VARCHAR(2000),
REPORTED_CODE VARCHAR(20),
REPORTED_TIME_ELAPSED DECIMAL(10,5),
REPORTED_TIME_ELAPSED_OUOM VARCHAR(40),
REPORTED_TVD DECIMAL(10,5),
REPORTED_TVD_OUOM VARCHAR(40),
START_DATE TIMESTAMP(0),
START_MUD_DENSITY DECIMAL(10,5),
START_MUD_DENSITY_OUOM VARCHAR(40),
START_MUD_VISCOSITY DECIMAL(10,5),
START_MUD_VISCOSITY_OUOM VARCHAR(40),
START_TIME TIMESTAMP(0),
START_TIMEZONE VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
TOP_STRAT_UNIT_ID VARCHAR(40),
TOTAL_TIME_ELAPSED DECIMAL(10,5),
TOTAL_TIME_ELAPSED_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_ACTIVITY_CAUSE'
CREATE TABLE well_activity_cause
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVITY_OBS_NO INT,
CAUSE_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
PERIOD_OBS_NO INT,
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_ACTIVITY_COMPONENT'
CREATE TABLE well_activity_component
(
UWI VARCHAR(40) NOT NULL,
ACTIVITY_SOURCE VARCHAR(40) NOT NULL,
ACTIVITY_OBS_NO INT,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BA_SERVICE_PROVIDED_BY VARCHAR(40),
BA_SERVICE_SEQ_NO INT,
BIT_INTERVAL_OBS_NO INT,
BIT_SOURCE VARCHAR(40),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CEMENT_OBS_NO INT,
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
COMPONENT_TYPE VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
CREW_COMPANY_BA_ID VARCHAR(40),
CREW_ID VARCHAR(40),
DIR_SURVEY_ID VARCHAR(40),
DIR_SURVEY_SOURCE VARCHAR(40),
DRILL_BIT_PERIOD_OBS_NO INT,
DRILL_CHECK_OBS_NO INT,
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_OBS_NO INT,
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
MAINT_EQUIPMENT_ID VARCHAR(40),
MAINT_EQUIP_MAINT_ID VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ACTIVITY_TYPE VARCHAR(40),
PDEN_AMENDMENT_SEQ_NO INT,
PDEN_ID VARCHAR(40),
PDEN_PERIOD_ID VARCHAR(40),
PDEN_PERIOD_TYPE VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PDEN_VOLUME_DATE TIMESTAMP(0),
PDEN_VOLUME_DATE_DESC VARCHAR(8),
PDEN_VOLUME_METHOD VARCHAR(40),
PERFORATION_OBS_NO INT,
PERFORATION_SOURCE VARCHAR(40),
PERIOD_OBS_NO INT,
PHYSICAL_ITEM_ID VARCHAR(40),
PLUGBACK_OBS_NO INT,
PLUGBACK_SOURCE VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROD_STRING_ID VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_FORM_OBS_NO INT,
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
TUBING_OBS_NO INT,
TUBING_SOURCE VARCHAR(40),
TUBING_TYPE VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_CORE_ID VARCHAR(40),
WELL_CORE_SOURCE VARCHAR(40),
WELL_LOG_ID VARCHAR(40),
WELL_LOG_SOURCE VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WELL_TEST_NUM VARCHAR(4),
WELL_TEST_RUN_NUM VARCHAR(4),
WELL_TEST_SOURCE VARCHAR(40),
WELL_TEST_TYPE VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_ACTIVITY_DURATION'
CREATE TABLE well_activity_duration
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVITY_OBS_NO INT,
DURATION_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_DURATION DECIMAL(10,5),
ACTIVITY_DURATION_OUOM VARCHAR(40),
DOWNTIME_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
END_TIMEZONE VARCHAR(40),
EVENT_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERIOD_OBS_NO INT,
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
START_TIME TIMESTAMP(0),
START_TIMEZONE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_ACTIVITY_SET'
CREATE TABLE well_activity_set
(
ACTIVITY_SET_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ACTIVITY_SET_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_ACTIVITY_TYPE'
CREATE TABLE well_activity_type
(
ACTIVITY_SET_ID VARCHAR(40) NOT NULL,
ACTIVITY_TYPE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REGULATORY_REPORT_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_ACTIVITY_TYPE_ALIAS'
CREATE TABLE well_activity_type_alias
(
ACTIVITY_SET_ID VARCHAR(40) NOT NULL,
ACTIVITY_TYPE_ID VARCHAR(40) NOT NULL,
ALIAS_OBS_NO INT,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_ACTIVITY_TYPE_EQUIV'
CREATE TABLE well_activity_type_equiv
(
ACTIVITY_SET_ID VARCHAR(40) NOT NULL,
ACTIVITY_TYPE_ID VARCHAR(40) NOT NULL,
ACTIVITY_SET_ID2 VARCHAR(40) NOT NULL,
ACTIVITY_TYPE_ID2 VARCHAR(40) NOT NULL,
EQUIV_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIV_OWNER_BA_ID VARCHAR(40),
EQUIV_TYPE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FULL_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_AIR_DRILL'
CREATE TABLE well_air_drill
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
AIR_DRILL_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
COMPRESSOR_COUNT BIGINT,
CONTRACTOR VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_COMPRESSOR_CAP_VOL DECIMAL(14,4),
MAX_COMPRESSOR_CAP_VOL_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_AIR_DRILL_INTERVAL'
CREATE TABLE well_air_drill_interval
(
UWI VARCHAR(40) NOT NULL,
AIR_DRILL_SOURCE VARCHAR(40) NOT NULL,
AIR_DRILL_OBS_NO INT,
DEPTH_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
AIR_GAS_CODE VARCHAR(40),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
COMPRESSOR_RATE_VOLUME DECIMAL(14,4),
COMPRESSOR_RATE_VOLUME_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_INTERVAL_PRESSURE DECIMAL(8,2),
MAX_INTERVAL_PRESSURE_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
WATER_INFLUX_AMOUNT DECIMAL(10,5),
WATER_INFLUX_AMOUNT_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_AIR_DRILL_PERIOD'
CREATE TABLE well_air_drill_period
(
UWI VARCHAR(40) NOT NULL,
INTERVAL_SOURCE VARCHAR(40) NOT NULL,
AIR_DRILL_OBS_NO INT,
DEPTH_OBS_NO INT,
PERIOD_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_ALIAS'
CREATE TABLE well_alias
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
WELL_ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
LOCATION_TYPE VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_AREA'
CREATE TABLE well_area
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_BA_SERVICE'
CREATE TABLE well_ba_service
(
UWI VARCHAR(40) NOT NULL,
PROVIDED_BY VARCHAR(40) NOT NULL,
SERVICE_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
CONTACT_BA_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PROVIDED_FOR VARCHAR(40),
PROVISION_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REMARK VARCHAR(2000),
REPRESENTED_BA_ID VARCHAR(40),
SERVICE_DATE TIMESTAMP(0),
SERVICE_PERIOD DECIMAL(6,2),
SERVICE_PERIOD_UOM VARCHAR(40),
SERVICE_QUALITY VARCHAR(40),
SERVICE_TIME TIMESTAMP(0),
SERVICE_TIMEZONE VARCHAR(40),
SERVICE_TIME_DESC VARCHAR(240),
SERVICE_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
WELL_ACTIVITY_OBS_NO INT,
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_DRILL_PERIOD_OBS_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_CEMENT'
CREATE TABLE well_cement
(
UWI VARCHAR(40) NOT NULL,
WELL_TUBE_SOURCE VARCHAR(40) NOT NULL,
TUBING_TYPE VARCHAR(40) NOT NULL,
TUBING_OBS_NO INT,
CEMENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CEMENT_AMOUNT DECIMAL(10,5),
CEMENT_AMOUNT_OUOM VARCHAR(40),
CEMENT_AMOUNT_UOM VARCHAR(40),
CEMENT_BA_ID VARCHAR(40),
CEMENT_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERFORATION_BASE_DEPTH DECIMAL(15,5),
PERFORATION_BASE_DEPTH_OUOM VARCHAR(40),
PERFORATION_COUNT BIGINT,
PERFORATION_PER_UOM VARCHAR(40),
PERFORATION_TOP_DEPTH DECIMAL(15,5),
PERFORATION_TOP_DEPTH_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
RECEMENT_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STAGE_NO BIGINT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_COMPLETION'
CREATE TABLE well_completion
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
COMPLETION_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
BASE_STRAT_UNIT_ID VARCHAR(40),
COMPLETION_DATE TIMESTAMP(0),
COMPLETION_METHOD VARCHAR(40),
COMPLETION_STRAT_UNIT_ID VARCHAR(40),
COMPLETION_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
STRAT_NAME_SET_ID VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
TOP_STRAT_UNIT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_COMPONENT'
CREATE TABLE well_component
(
UWI VARCHAR(40) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROJECT_ID VARCHAR(40),
PR_STR_SOURCE VARCHAR(40),
PR_STR_UWI VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
STRING_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_ACTIVITY_UWI VARCHAR(40),
WELL_COMPONENT_TYPE VARCHAR(40),
WELL_SET_ID VARCHAR(40),
WORK_ORDER_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_CORE'
CREATE TABLE well_core
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
CORE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
CONTRACTOR VARCHAR(40),
CORE_BARREL_SIZE DOUBLE PRECISION,
CORE_BARREL_SIZE_OUOM VARCHAR(40),
CORE_DIAMETER DECIMAL(8,3),
CORE_DIAMETER_OUOM VARCHAR(40),
CORE_HANDLING_TYPE VARCHAR(40),
CORE_ORIENTED_IND VARCHAR(1),
CORE_SHOW_TYPE VARCHAR(40),
CORE_TYPE VARCHAR(40),
CORING_FLUID VARCHAR(40),
DIGIT_AVAIL_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GAMMA_CORRELATION_IND VARCHAR(1),
OPERATION_SEQ_NO INT,
PPDM_GUID VARCHAR(38),
PRIMARY_CORE_STRAT_UNIT_ID VARCHAR(40),
RECOVERED_AMOUNT DECIMAL(10,5),
RECOVERED_AMOUNT_OUOM VARCHAR(40),
RECOVERED_AMOUNT_UOM VARCHAR(40),
RECOVERY_DATE TIMESTAMP(0),
REMARK VARCHAR(2000),
REPORTED_CORE_NUM VARCHAR(20),
RUN_NUM VARCHAR(20),
SHOT_RECOVERED_COUNT BIGINT,
SIDEWALL_IND VARCHAR(1),
STRAT_NAME_SET_ID VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
TOTAL_SHOT_COUNT BIGINT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_CORE_ANALYSIS'
CREATE TABLE well_core_analysis
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
CORE_ID VARCHAR(40) NOT NULL,
ANALYSIS_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ANALYSIS_DATE TIMESTAMP(0),
ANALYZING_COMPANY VARCHAR(40),
ANALYZING_COMPANY_LOC VARCHAR(40),
ANALYZING_FILE_NUM VARCHAR(20),
CORE_ANALYST_NAME VARCHAR(255),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PRIMARY_SAMPLE_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
SAMPLE_DIAMETER DECIMAL(8,3),
SAMPLE_DIAMETER_OUOM VARCHAR(40),
SAMPLE_LENGTH DECIMAL(10,3),
SAMPLE_LENGTH_OUOM VARCHAR(40),
SAMPLE_SHAPE VARCHAR(40),
SECOND_SAMPLE_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_CORE_ANAL_METHOD'
CREATE TABLE well_core_anal_method
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
CORE_ID VARCHAR(40) NOT NULL,
ANALYSIS_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CORE_SOLVENT VARCHAR(40),
CUTTING_FLUID VARCHAR(40),
DENSITY_ANALYSIS VARCHAR(40),
DRYING_METHOD VARCHAR(40),
DRYING_TEMPERATURE DECIMAL(10,5),
DRYING_TEMPERATURE_OUOM VARCHAR(40),
DRYING_TIME_ELAPSED DECIMAL(10,5),
DRYING_TIME_ELAPSED_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTRACT_METHOD VARCHAR(40),
EXTRACT_TIME_ELAPSED DECIMAL(10,5),
EXTRACT_TIME_ELAPSED_OUOM VARCHAR(40),
FLUID_SAT_ANALYSIS VARCHAR(40),
PERMEABILITY_ANALYSIS VARCHAR(40),
POROSITY_ANALYSIS VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_CORE_ANAL_REMARK'
CREATE TABLE well_core_anal_remark
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
CORE_ID VARCHAR(40) NOT NULL,
ANALYSIS_OBS_NO INT,
REMARK_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_CORE_DESCRIPTION'
CREATE TABLE well_core_description
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
CORE_ID VARCHAR(40) NOT NULL,
DESCRIPTION_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
CORE_DESCRIPTION_COMPANY VARCHAR(40),
DESCRIPTION_DATE TIMESTAMP(0),
DIP_ANGLE DECIMAL(10,5),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTERVAL_THICKNESS DECIMAL(10,5),
INTERVAL_THICKNESS_OUOM VARCHAR(40),
LITHOLOGY_DESC VARCHAR(240),
POROSITY_LENGTH DECIMAL(10,5),
POROSITY_LENGTH_OUOM VARCHAR(40),
POROSITY_QUALITY VARCHAR(40),
POROSITY_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHOW_LENGTH DECIMAL(10,5),
SHOW_LENGTH_OUOM VARCHAR(40),
SHOW_TYPE VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_CORE_REMARK'
CREATE TABLE well_core_remark
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
CORE_ID VARCHAR(40) NOT NULL,
REMARK_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_CORE_SAMPLE_ANAL'
CREATE TABLE well_core_sample_anal
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
CORE_ID VARCHAR(40) NOT NULL,
ANALYSIS_OBS_NO INT,
SAMPLE_NUM VARCHAR(20) NOT NULL,
SAMPLE_ANALYSIS_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ANALYSIS_SOURCE VARCHAR(40),
BULK_DENSITY DECIMAL(10,5),
BULK_DENSITY_OUOM VARCHAR(40),
BULK_MASS_OIL_SAT DECIMAL(10,5),
BULK_MASS_OIL_SAT_OUOM VARCHAR(40),
BULK_MASS_SAND_SAT DECIMAL(10,5),
BULK_MASS_SAND_SAT_OUOM VARCHAR(40),
BULK_MASS_WATER_SAT DECIMAL(10,5),
BULK_MASS_WATER_SAT_OUOM VARCHAR(40),
BULK_VOLUME_OIL_SAT DECIMAL(14,4),
BULK_VOLUME_WATER_SAT DECIMAL(14,4),
CONFINE_PERM_PRESSURE DECIMAL(8,2),
CONFINE_PERM_PRESSURE_OUOM VARCHAR(40),
CONFINE_POR_PRESSURE DECIMAL(8,2),
CONFINE_POR_PRESSURE_OUOM VARCHAR(40),
CONFINE_SAT_PRESSURE DECIMAL(8,2),
CONFINE_SAT_PRESSURE_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EFFECTIVE_POROSITY DECIMAL(10,5),
EXPIRY_DATE TIMESTAMP(0),
GAS_SAT_VOLUME DECIMAL(14,4),
GRAIN_DENSITY DECIMAL(10,5),
GRAIN_DENSITY_OUOM VARCHAR(40),
GRAIN_MASS_OIL_SAT DECIMAL(10,5),
GRAIN_MASS_OIL_SAT_OUOM VARCHAR(40),
GRAIN_MASS_WATER_SAT DECIMAL(10,5),
GRAIN_MASS_WATER_SAT_OUOM VARCHAR(40),
INTERVAL_DEPTH DECIMAL(15,5),
INTERVAL_DEPTH_OUOM VARCHAR(40),
INTERVAL_LENGTH DECIMAL(10,5),
INTERVAL_LENGTH_OUOM VARCHAR(40),
K90 DECIMAL(12,4),
K90_OUOM VARCHAR(40),
K90_QUALIFIER VARCHAR(40),
KMAX DECIMAL(10,5),
KMAX_OUOM VARCHAR(40),
KMAX_QUALIFIER VARCHAR(40),
KVERT DECIMAL(10,5),
KVERT_OUOM VARCHAR(40),
KVERT_QUALIFIER VARCHAR(40),
OIL_SAT DECIMAL(10,5),
PORE_VOLUME_GAS_SAT DECIMAL(14,4),
PORE_VOLUME_OIL_SAT DECIMAL(14,4),
PORE_VOLUME_WATER_SAT DECIMAL(14,4),
POROSITY DECIMAL(10,5),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
WATER_SAT DECIMAL(10,5),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_CORE_SAMPLE_DESC'
CREATE TABLE well_core_sample_desc
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
CORE_ID VARCHAR(40) NOT NULL,
ANALYSIS_OBS_NO INT,
SAMPLE_NUM VARCHAR(20) NOT NULL,
SAMPLE_ANALYSIS_OBS_NO INT,
SAMPLE_DESC_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
DESCRIPTION VARCHAR(240),
DESC_SOURCE VARCHAR(40),
DIP_ANGLE DECIMAL(10,5),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LITHOLOGY_DESC VARCHAR(240),
POROSITY_LENGTH DECIMAL(10,5),
POROSITY_LENGTH_OUOM VARCHAR(40),
POROSITY_QUALITY VARCHAR(40),
POROSITY_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
RECOVERED_AMOUNT DECIMAL(10,5),
RECOVERED_AMOUNT_OUOM VARCHAR(40),
REMARK VARCHAR(2000),
SAMPLE_TYPE VARCHAR(40),
SHOW_LENGTH DECIMAL(10,5),
SHOW_LENGTH_OUOM VARCHAR(40),
SHOW_QUALITY VARCHAR(40),
SHOW_TYPE VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SWC_RECOVERY_TYPE VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_CORE_SAMPLE_RMK'
CREATE TABLE well_core_sample_rmk
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
CORE_ID VARCHAR(40) NOT NULL,
ANALYSIS_OBS_NO INT,
SAMPLE_NUM VARCHAR(20) NOT NULL,
SAMPLE_ANALYSIS_OBS_NO INT,
REMARK_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_CORE_SHIFT'
CREATE TABLE well_core_shift
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
CORE_ID VARCHAR(40) NOT NULL,
SHIFT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
BASE_SHIFT_DEPTH DECIMAL(15,5),
BASE_SHIFT_DEPTH_OUOM VARCHAR(40),
CORE_SHIFT_COMPANY VARCHAR(40),
CORE_SHIFT_IND VARCHAR(1),
CORE_SHIFT_METHOD VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
TOP_SHIFT_DEPTH DECIMAL(15,5),
TOP_SHIFT_DEPTH_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_CORE_STRAT_UNIT'
CREATE TABLE well_core_strat_unit
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
CORE_ID VARCHAR(40) NOT NULL,
DESCRIPTION_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40) NOT NULL,
CORE_STRAT_UNIT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CORE_STRAT_UNIT_MD DECIMAL(10,5),
CORE_STRAT_UNIT_MD_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DIR_SRVY'
CREATE TABLE well_dir_srvy
(
UWI VARCHAR(40) NOT NULL,
SURVEY_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AZIMUTH_COORD_SYS_ID VARCHAR(40),
AZIMUTH_COORD_SYS_QUALIFIER VARCHAR(40),
AZIMUTH_COORD_SYS_REMARK VARCHAR(2000),
AZIMUTH_CORR_ANGLE DECIMAL(10,5),
AZIMUTH_CORR_ANGLE_OUOM VARCHAR(40),
AZIMUTH_CORR_ANGLE_TYPE VARCHAR(40),
AZIMUTH_NORTH_TYPE VARCHAR(40),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
COMPUTE_METHOD VARCHAR(40),
CONFIDENTIAL_TYPE VARCHAR(40),
COORD_ACQUISITION_ID VARCHAR(40),
DIR_SURVEY_CLASS VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTRAPOLATE_DEPTH DECIMAL(15,5),
EXTRAPOLATE_DEPTH_OUOM VARCHAR(40),
EXTRAPOLATE_IND VARCHAR(1),
GEOG_COORD_SYS_ID VARCHAR(40),
LOCAL_COORD_SYS_ID VARCHAR(40),
MAGNETIC_DECLINATION DECIMAL(10,5),
MAGNETIC_DECLINATION_OUOM VARCHAR(40),
MAG_DECL_EW_DIRECTION VARCHAR(40),
OFFSET_COORD_SYS_ID VARCHAR(40),
OFFSET_COORD_SYS_QUALIFIER VARCHAR(40),
OFFSET_COORD_SYS_REMARK VARCHAR(2000),
OFFSET_NORTH_TYPE VARCHAR(40),
PLANE_OF_PROPOSAL DECIMAL(10,6),
PLANE_OF_PROPOSAL_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
RAD_UNCERT_DIST DECIMAL(10,5),
RAD_UNCERT_DIST_OUOM VARCHAR(40),
RAD_UNCERT_DIST_REASON VARCHAR(40),
RECORD_MODE VARCHAR(40),
REMARK VARCHAR(2000),
REPORT_APD DECIMAL(10,5),
REPORT_LOG_DATUM VARCHAR(40),
REPORT_LOG_DATUM_ELEV DECIMAL(10,5),
REPORT_LOG_DATUM_ELEV_OUOM VARCHAR(40),
REPORT_PERM_DATUM VARCHAR(40),
REPORT_PERM_DATUM_ELEV DECIMAL(10,5),
REPORT_PERM_DATUM_ELEV_OUOM VARCHAR(40),
RESAMPLE_INTERVAL DOUBLE PRECISION,
RESAMPLE_INTERVAL_OUOM VARCHAR(40),
RPT_COORD_SYS_ID VARCHAR(40),
RPT_COORD_SYS_QUALIFIER VARCHAR(40),
RPT_COORD_SYS_REMARK VARCHAR(2000),
RPT_CORR_ANGLE DECIMAL(10,5),
RPT_CORR_ANGLE_OUOM VARCHAR(40),
RPT_CORR_ANGLE_TYPE VARCHAR(40),
RPT_NORTH_TYPE VARCHAR(40),
RPT_SURVEY_TYPE VARCHAR(40),
RPT_TIE_AZIMUTH DECIMAL(10,5),
RPT_TIE_AZIMUTH_OUOM VARCHAR(40),
RPT_TIE_INCLINATION DECIMAL(10,5),
RPT_TIE_INCLINATION_OUOM VARCHAR(40),
RPT_TIE_MD DECIMAL(15,5),
RPT_TIE_MD_OUOM VARCHAR(40),
RPT_TIE_POINT_IND VARCHAR(1),
RPT_TIE_TVD DECIMAL(15,5),
RPT_TIE_TVD_OUOM VARCHAR(40),
RPT_TIE_X_OFFSET DECIMAL(10,5),
RPT_TIE_X_OFFSET_EW_DIR VARCHAR(40),
RPT_TIE_X_OFFSET_OUOM VARCHAR(40),
RPT_TIE_Y_OFFSET DECIMAL(10,5),
RPT_TIE_Y_OFFSET_NS_DIR VARCHAR(40),
RPT_TIE_Y_OFFSET_OUOM VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
SURVEY_COMPANY_BA_ID VARCHAR(40),
SURVEY_COMPILER_BA_ID VARCHAR(40),
SURVEY_DIGITAL_PRVDR_BA_ID VARCHAR(40),
SURVEY_END_DATE TIMESTAMP(0),
SURVEY_END_DATE_QUALIFIER VARCHAR(40),
SURVEY_PROCESS_METHOD VARCHAR(40),
SURVEY_QUALITY VARCHAR(40),
SURVEY_REF_NUM VARCHAR(40),
SURVEY_REPORT_TYPE VARCHAR(40),
SURVEY_RUN_NUM VARCHAR(40),
SURVEY_START_DATE TIMESTAMP(0),
SURVEY_START_DATE_QUALIFIER VARCHAR(40),
SURVEY_TYPE VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DIR_SRVY_COMPOSITE'
CREATE TABLE well_dir_srvy_composite
(
COMPOSITE_UWI VARCHAR(40) NOT NULL,
COMPOSITE_SURVEY_ID VARCHAR(40) NOT NULL,
COMPOSITE_SOURCE VARCHAR(40) NOT NULL,
COMPOSITE_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
DEPTH_OBS_NO_FROM INT,
DEPTH_OBS_NO_TO INT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INPUT_SOURCE VARCHAR(40),
INPUT_SURVEY_ID VARCHAR(40),
INPUT_UWI VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DIR_SRVY_STATION'
CREATE TABLE well_dir_srvy_station
(
UWI VARCHAR(40) NOT NULL,
SURVEY_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
DEPTH_OBS_NO INT,
ACCURACY_PROBLEM_IND VARCHAR(1),
ACCURACY_PROBLEM_REASON VARCHAR(40),
ACTIVE_IND VARCHAR(1),
AZIMUTH DECIMAL(10,5),
AZIMUTH_OUOM VARCHAR(40),
CLOSURE_DIST DECIMAL(10,5),
CLOSURE_DIST_DIR DECIMAL(10,5),
CLOSURE_DIST_DIR_OUOM VARCHAR(40),
CLOSURE_DIST_OUOM VARCHAR(40),
DELTA_LAT DECIMAL(14,9),
DELTA_LONG DECIMAL(14,9),
DOG_LEG_SEVERITY DECIMAL(10,5),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INCLINATION DECIMAL(10,5),
INCLINATION_OUOM VARCHAR(40),
LATITUDE DECIMAL(14,9),
LONGITUDE DECIMAL(14,9),
PERIOD_OBS_NO INT,
POINT_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
RAD_UNCERT_DIST DECIMAL(10,5),
RAD_UNCERT_DIST_OUOM VARCHAR(40),
RAD_UNCERT_DIST_REASON VARCHAR(40),
REMARK VARCHAR(2000),
RPT_AZIMUTH DECIMAL(10,5),
RPT_AZIMUTH_OUOM VARCHAR(40),
STATION_ID VARCHAR(40),
STATION_MD DECIMAL(10,5),
STATION_MD_OUOM VARCHAR(40),
STATION_TVD DECIMAL(10,5),
STATION_TVDSS DECIMAL(10,5),
STATION_TVDSS_OUOM VARCHAR(40),
STATION_TVD_OUOM VARCHAR(40),
SURVEY_RUN_NUM VARCHAR(40),
SURVEY_TYPE VARCHAR(40),
VERTICAL_SECTION DECIMAL(15,2),
VERTICAL_SECTION_OUOM VARCHAR(40),
X_OFFSET DECIMAL(10,5),
X_OFFSET_EW_DIRECTION VARCHAR(40),
X_OFFSET_OUOM VARCHAR(40),
Y_OFFSET DECIMAL(10,5),
Y_OFFSET_NS_DIRECTION VARCHAR(40),
Y_OFFSET_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DIR_SRVY_ST_VERSION'
CREATE TABLE well_dir_srvy_st_version
(
UWI VARCHAR(40) NOT NULL,
SURVEY_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
VERSION_OBS_NO INT,
DEPTH_OBS_NO INT,
ACCURACY_PROBLEM_IND VARCHAR(1),
ACCURACY_PROBLEM_REASON VARCHAR(40),
ACTIVE_IND VARCHAR(1),
AZIMUTH DECIMAL(10,5),
AZIMUTH_OUOM VARCHAR(40),
CLOSURE_DIST DECIMAL(10,5),
CLOSURE_DIST_DIR DECIMAL(10,5),
CLOSURE_DIST_DIR_OUOM VARCHAR(40),
CLOSURE_DIST_OUOM VARCHAR(40),
DELTA_LAT DECIMAL(14,9),
DELTA_LONG DECIMAL(14,9),
DOG_LEG_SEVERITY DECIMAL(10,5),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INCLINATION DECIMAL(10,5),
INCLINATION_OUOM VARCHAR(40),
LATITUDE DECIMAL(14,9),
LONGITUDE DECIMAL(14,9),
PERIOD_OBS_NO INT,
POINT_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
RAD_UNCERT_DIST DECIMAL(10,5),
RAD_UNCERT_DIST_OUOM VARCHAR(40),
RAD_UNCERT_DIST_REASON VARCHAR(40),
REMARK VARCHAR(2000),
RPT_AZIMUTH DECIMAL(10,5),
RPT_AZIMUTH_OUOM VARCHAR(40),
STATION_ID VARCHAR(40),
STATION_MD DECIMAL(10,5),
STATION_MD_OUOM VARCHAR(40),
STATION_TVD DECIMAL(10,5),
STATION_TVDSS DECIMAL(10,5),
STATION_TVDSS_OUOM VARCHAR(40),
STATION_TVD_OUOM VARCHAR(40),
SURVEY_RUN_NUM VARCHAR(40),
SURVEY_TYPE VARCHAR(40),
VERTICAL_SECTION DECIMAL(15,2),
VERTICAL_SECTION_OUOM VARCHAR(40),
X_OFFSET DECIMAL(10,5),
X_OFFSET_EW_DIRECTION VARCHAR(40),
X_OFFSET_OUOM VARCHAR(40),
Y_OFFSET DECIMAL(10,5),
Y_OFFSET_NS_DIRECTION VARCHAR(40),
Y_OFFSET_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DIR_SRVY_VERSION'
CREATE TABLE well_dir_srvy_version
(
UWI VARCHAR(40) NOT NULL,
SURVEY_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
VERSION_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
AZIMUTH_COORD_SYS_ID VARCHAR(40),
AZIMUTH_COORD_SYS_QUALIFIER VARCHAR(40),
AZIMUTH_COORD_SYS_REMARK VARCHAR(2000),
AZIMUTH_CORR_ANGLE DECIMAL(10,5),
AZIMUTH_CORR_ANGLE_OUOM VARCHAR(40),
AZIMUTH_CORR_ANGLE_TYPE VARCHAR(40),
AZIMUTH_NORTH_TYPE VARCHAR(40),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
COMPUTE_METHOD VARCHAR(40),
CONFIDENTIAL_TYPE VARCHAR(40),
COORD_ACQUISITION_ID VARCHAR(40),
DIR_SURVEY_CLASS VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTRAPOLATE_DEPTH DECIMAL(15,5),
EXTRAPOLATE_DEPTH_OUOM VARCHAR(40),
EXTRAPOLATE_IND VARCHAR(1),
GEOG_COORD_SYS_ID VARCHAR(40),
LOCAL_COORD_SYS_ID VARCHAR(40),
MAGNETIC_DECLINATION DECIMAL(10,5),
MAGNETIC_DECLINATION_OUOM VARCHAR(40),
MAG_DECL_EW_DIRECTION VARCHAR(40),
OFFSET_COORD_SYS_ID VARCHAR(40),
OFFSET_COORD_SYS_QUALIFIER VARCHAR(40),
OFFSET_COORD_SYS_REMARK VARCHAR(2000),
OFFSET_NORTH_TYPE VARCHAR(40),
PLANE_OF_PROPOSAL DECIMAL(10,6),
PLANE_OF_PROPOSAL_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
RAD_UNCERT_DIST DECIMAL(10,5),
RAD_UNCERT_DIST_OUOM VARCHAR(40),
RAD_UNCERT_DIST_REASON VARCHAR(40),
RECORD_MODE VARCHAR(40),
REMARK VARCHAR(2000),
REPORT_APD DECIMAL(10,5),
REPORT_LOG_DATUM VARCHAR(40),
REPORT_LOG_DATUM_ELEV DECIMAL(10,5),
REPORT_LOG_DATUM_ELEV_OUOM VARCHAR(40),
REPORT_PERM_DATUM VARCHAR(40),
REPORT_PERM_DATUM_ELEV DECIMAL(10,5),
REPORT_PERM_DATUM_ELEV_OUOM VARCHAR(40),
RESAMPLE_INTERVAL DOUBLE PRECISION,
RESAMPLE_INTERVAL_OUOM VARCHAR(40),
RPT_COORD_SYS_ID VARCHAR(40),
RPT_COORD_SYS_QUALIFIER VARCHAR(40),
RPT_COORD_SYS_REMARK VARCHAR(2000),
RPT_CORR_ANGLE DECIMAL(10,5),
RPT_CORR_ANGLE_OUOM VARCHAR(40),
RPT_CORR_ANGLE_TYPE VARCHAR(40),
RPT_NORTH_TYPE VARCHAR(40),
RPT_SURVEY_TYPE VARCHAR(40),
RPT_TIE_AZIMUTH DECIMAL(10,5),
RPT_TIE_AZIMUTH_OUOM VARCHAR(40),
RPT_TIE_INCLINATION DECIMAL(10,5),
RPT_TIE_INCLINATION_OUOM VARCHAR(40),
RPT_TIE_MD DECIMAL(15,5),
RPT_TIE_MD_OUOM VARCHAR(40),
RPT_TIE_POINT_IND VARCHAR(1),
RPT_TIE_TVD DECIMAL(15,5),
RPT_TIE_TVD_OUOM VARCHAR(40),
RPT_TIE_X_OFFSET DECIMAL(10,5),
RPT_TIE_X_OFFSET_EW_DIR VARCHAR(40),
RPT_TIE_X_OFFSET_OUOM VARCHAR(40),
RPT_TIE_Y_OFFSET DECIMAL(10,5),
RPT_TIE_Y_OFFSET_NS_DIR VARCHAR(40),
RPT_TIE_Y_OFFSET_OUOM VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
SURVEY_COMPANY_BA_ID VARCHAR(40),
SURVEY_COMPILER_BA_ID VARCHAR(40),
SURVEY_DIGITAL_PRVDR_BA_ID VARCHAR(40),
SURVEY_END_DATE TIMESTAMP(0),
SURVEY_END_DATE_QUALIFIER VARCHAR(40),
SURVEY_PROCESS_METHOD VARCHAR(40),
SURVEY_QUALITY VARCHAR(40),
SURVEY_REF_NUM VARCHAR(40),
SURVEY_REPORT_TYPE VARCHAR(40),
SURVEY_RUN_NUM VARCHAR(40),
SURVEY_START_DATE TIMESTAMP(0),
SURVEY_START_DATE_QUALIFIER VARCHAR(40),
SURVEY_TYPE VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_ADD_INV'
CREATE TABLE well_drill_add_inv
(
UWI VARCHAR(40) NOT NULL,
DRILL_PERIOD_OBS_NO INT,
ADDITIVE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
QUANTITY_COUNT_OPENING DECIMAL(12,2),
QUANTITY_COUNT_ORDERED DECIMAL(12,2),
QUANTITY_COUNT_REMAINING DECIMAL(12,2),
QUANTITY_COUNT_USED DECIMAL(12,2),
QUANTITY_VALUE_OPENING DECIMAL(15,5),
QUANTITY_VALUE_ORDERED DECIMAL(15,5),
QUANTITY_VALUE_OUOM VARCHAR(40),
QUANTITY_VALUE_REMAINING DECIMAL(15,5),
QUANTITY_VALUE_UOM VARCHAR(40),
QUANTITY_VALUE_USED DECIMAL(15,5),
REMARK VARCHAR(2000),
REPORT_TIME_TYPE VARCHAR(40),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_ASSEMBLY'
CREATE TABLE well_drill_assembly
(
UWI VARCHAR(40) NOT NULL,
ASSEMBLY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ASSEMBLY_REF_NUMBER VARCHAR(30),
CALCULATED_LENGTH DECIMAL(10,3),
CALCULATED_WEIGHT DECIMAL(10,5),
EFFECTIVE_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
END_TIMEZONE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
START_TIME TIMESTAMP(0),
START_TIMEZONE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_ASSEMBLY_COMP'
CREATE TABLE well_drill_assembly_comp
(
UWI VARCHAR(40) NOT NULL,
ASSEMBLY_ID VARCHAR(40) NOT NULL,
COMPONENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CATALOGUE_EQUIP_ID VARCHAR(40),
COMPONENT_COUNT BIGINT,
COMPONENT_DESC VARCHAR(1024),
COMPONENT_LENGTH DECIMAL(10,3),
COMPONENT_LENGTH_OUOM VARCHAR(40),
COMPONENT_SEQ_NO INT,
COMPONENT_TYPE VARCHAR(40),
COMPONENT_WEIGHT DECIMAL(10,5),
COMPONENT_WEIGHT_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_INSIDE_DIAMETER DECIMAL(8,3),
MAX_INSIDE_DIAMETER_OUOM VARCHAR(40),
MAX_OUTSIDE_DIAMETER DECIMAL(8,3),
MAX_OUTSIDE_DIAMETER_OUOM VARCHAR(40),
MIN_INSIDE_DIAMETER DECIMAL(8,3),
MIN_INSIDE_DIAMETER_OUOM VARCHAR(40),
MIN_OUTSIDE_DIAMETER DECIMAL(8,3),
MIN_OUTSIDE_DIAMETER_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SERIAL_NUMBER VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_ASSEMBLY_PER'
CREATE TABLE well_drill_assembly_per
(
UWI VARCHAR(40) NOT NULL,
PERIOD_OBS_NO INT,
ASSEMBLY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
END_TIMEZONE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
START_TIME TIMESTAMP(0),
START_TIMEZONE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_BIT_CONDITION'
CREATE TABLE well_drill_bit_condition
(
UWI VARCHAR(40) NOT NULL,
BIT_SOURCE VARCHAR(40) NOT NULL,
BIT_INTERVAL_OBS_NO INT,
CONDITION_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BEARING_CONDITION VARCHAR(40),
DRILL_BIT_CONDITION VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_BIT_INTERVAL'
CREATE TABLE well_drill_bit_interval
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
BIT_INTERVAL_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
AVG_FORCE_ON_BIT DECIMAL(10,5),
AVG_FORCE_ON_BIT_OUOM VARCHAR(40),
AVG_PENETRATION_RATE DECIMAL(10,5),
AVG_PENETRATION_RATE_OUOM VARCHAR(40),
BIT_COMPANY VARCHAR(40),
BIT_DRILLED_RATE DECIMAL(10,5),
BIT_DRILLED_RATE_OUOM VARCHAR(40),
BIT_JET_COUNT BIGINT,
BIT_JET_REMARK VARCHAR(2000),
BIT_NUMBER VARCHAR(20),
BIT_OPERATING_TIME DECIMAL(10,5),
BIT_OPERATING_TIME_OUOM VARCHAR(40),
BIT_REMARK VARCHAR(2000),
BIT_SIZE DECIMAL(10,5),
BIT_SIZE_DESC VARCHAR(40),
BIT_SIZE_OUOM VARCHAR(40),
CUTTING_STRUCTURE_LOC VARCHAR(40),
CUTTING_STRUCTURE_MDC VARCHAR(40),
CUTTING_STRUCTURE_TI VARCHAR(40),
CUTTING_STRUCTURE_TO VARCHAR(40),
DISTANCE_DRILLED DECIMAL(10,5),
DISTANCE_DRILLED_OUOM VARCHAR(40),
DRILL_BIT_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FLOW_RATE DECIMAL(10,5),
FLOW_RATE_OUOM VARCHAR(40),
GAGE_OUT_DISTANCE DECIMAL(10,3),
GAGE_OUT_DISTANCE_OUOM VARCHAR(40),
MAX_FORCE_ON_BIT DECIMAL(10,5),
MAX_FORCE_ON_BIT_OUOM VARCHAR(40),
MAX_PENETRATION_RATE DECIMAL(10,5),
MAX_PENETRATION_RATE_OUOM VARCHAR(40),
MIN_FORCE_ON_BIT DECIMAL(10,5),
MIN_FORCE_ON_BIT_OUOM VARCHAR(40),
MIN_PENETRATION_RATE DECIMAL(10,5),
MIN_PENETRATION_RATE_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REASON_PULLED VARCHAR(40),
REMARK VARCHAR(2000),
REPORTED_TFA DECIMAL(10,5),
REPORTED_TFA_OUOM VARCHAR(40),
RUN_IN_DEPTH DECIMAL(15,5),
RUN_IN_DEPTH_OUOM VARCHAR(40),
RUN_OUT_DEPTH DECIMAL(15,5),
RUN_OUT_DEPTH_OUOM VARCHAR(40),
TORQUE DECIMAL(10,5),
TORQUE_OUOM VARCHAR(40),
TOTAL_BIT_REVOLUTIONS BIGINT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_BIT_JET'
CREATE TABLE well_drill_bit_jet
(
UWI VARCHAR(40) NOT NULL,
BIT_SOURCE VARCHAR(40) NOT NULL,
BIT_INTERVAL_OBS_NO INT,
JET_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
JET_DIAMETER DECIMAL(8,3),
JET_DIAMETER_OUOM VARCHAR(40),
JET_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_BIT_PERIOD'
CREATE TABLE well_drill_bit_period
(
UWI VARCHAR(40) NOT NULL,
PERIOD_OBS_NO INT,
BIT_SOURCE VARCHAR(40) NOT NULL,
BIT_INTERVAL_OBS_NO INT,
DRILL_BIT_PERIOD_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
AVG_FORCE_ON_BIT DECIMAL(10,5),
AVG_FORCE_ON_BIT_OUOM VARCHAR(40),
AVG_PENETRATION_RATE DECIMAL(10,5),
AVG_PENETRATION_RATE_OUOM VARCHAR(40),
AVG_ROTARY_RPM DECIMAL(10,5),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
BIT_OPERATING_TIME DECIMAL(10,5),
BIT_OPERATING_TIME_OUOM VARCHAR(40),
DRILL_OP_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FLOW_RATE DECIMAL(10,5),
FLOW_RATE_OUOM VARCHAR(40),
MAX_FORCE_ON_BIT DECIMAL(10,5),
MAX_FORCE_ON_BIT_OUOM VARCHAR(40),
MAX_PENETRATION_RATE DECIMAL(10,5),
MAX_PENETRATION_RATE_OUOM VARCHAR(40),
MAX_ROTARY_RPM DECIMAL(10,5),
MIN_FORCE_ON_BIT DECIMAL(10,5),
MIN_FORCE_ON_BIT_OUOM VARCHAR(40),
MIN_PENETRATION_RATE DECIMAL(10,5),
MIN_PENETRATION_RATE_OUOM VARCHAR(40),
MIN_ROTARY_RPM DECIMAL(10,5),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
TORQUE DECIMAL(10,5),
TORQUE_OUOM VARCHAR(40),
TOTAL_BIT_REVOLUTION BIGINT,
TOTAL_DRILLED_DIST DECIMAL(15,5),
TOTAL_DRILLED_DIST_OUOM VARCHAR(40),
TOTAL_PERIOD_RUN DECIMAL(10,5),
TOTAL_PERIOD_RUN_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_CHECK'
CREATE TABLE well_drill_check
(
UWI VARCHAR(40) NOT NULL,
PERIOD_OBS_NO INT,
DRILL_CHECK_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CHECK_SET_ID VARCHAR(40),
CHECK_TYPE VARCHAR(40),
CONTRACTOR_NAME VARCHAR(255),
CONTRACTOR_REP_BA_ID VARCHAR(40),
DEFICIENT_IND VARCHAR(1),
DEFICIENT_PERIOD DECIMAL(10,5),
DEFICIENT_PERIOD_OUOM VARCHAR(40),
DEFICIENT_PERIOD_UOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OPERATOR_NAME VARCHAR(255),
OPERATOR_REP_BA_ID VARCHAR(40),
PASSED_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
RECORDED_TIME TIMESTAMP(0),
RECORDED_TIMEZONE VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_CHECK_SET'
CREATE TABLE well_drill_check_set
(
CHECK_SET_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FULL_NAME VARCHAR(255),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_NUM VARCHAR(255),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_CHECK_TYPE'
CREATE TABLE well_drill_check_type
(
CHECK_SET_ID VARCHAR(40) NOT NULL,
CHECK_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONTRACTOR_IND VARCHAR(1),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FREQUENCY VARCHAR(40),
OPERATOR_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_EQUIPMENT'
CREATE TABLE well_drill_equipment
(
UWI VARCHAR(40) NOT NULL,
EQUIPMENT_ID VARCHAR(40) NOT NULL,
EQUIPMENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OFFSITE_DATE TIMESTAMP(0),
OFFSITE_TIME TIMESTAMP(0),
ONSITE_DATE TIMESTAMP(0),
ONSITE_TIME TIMESTAMP(0),
OPERATED_BY_BA_ID VARCHAR(40),
PARENT_EQUIPMENT_ID VARCHAR(40),
PERIOD_ON_WELL DECIMAL(10,5),
PERIOD_ON_WELL_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_NUM VARCHAR(30),
REMARK VARCHAR(2000),
RENTED_IND VARCHAR(1),
SOURCE VARCHAR(40),
TIMEZONE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_INT_DETAIL'
CREATE TABLE well_drill_int_detail
(
UWI VARCHAR(40) NOT NULL,
BIT_SOURCE VARCHAR(40) NOT NULL,
BIT_INTERVAL_OBS_NO INT,
BIT_DETAIL_TYPE VARCHAR(40) NOT NULL,
DETAIL_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM VARCHAR(40),
AVERAGE_VALUE_UOM VARCHAR(40),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
BIT_DETAIL_CODE VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
DETAIL_DESC VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
START_TIME TIMESTAMP(0),
TIMEZONE VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_MUD_ADDITIVE'
CREATE TABLE well_drill_mud_additive
(
UWI VARCHAR(40) NOT NULL,
DRILL_PERIOD_OBS_NO INT,
ADDITIVE_ID VARCHAR(40) NOT NULL,
ADDITIVE_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
ADDITIVE_METHOD VARCHAR(40),
ADDITIVE_PERIOD DECIMAL(10,5),
ADDITIVE_PERIOD_OUOM VARCHAR(40),
ADDITIVE_PERIOD_UOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
QUANTITY_COUNT DECIMAL(12,2),
QUANTITY_VALUE DECIMAL(15,5),
QUANTITY_VALUE_OUOM VARCHAR(40),
QUANTITY_VALUE_UOM VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
START_TIME TIMESTAMP(0),
TIMEZONE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_MUD_INTRVL'
CREATE TABLE well_drill_mud_intrvl
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
MEDIA_TYPE VARCHAR(40) NOT NULL,
DEPTH_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CASING_DEPTH DECIMAL(15,5),
CASING_DEPTH_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_MUD_WEIGHT DECIMAL(10,5),
MAX_MUD_WEIGHT_OUOM VARCHAR(40),
MAX_MUD_WEIGHT_UOM VARCHAR(40),
MAX_WEIGHT_DEPTH DECIMAL(15,5),
MAX_WEIGHT_DEPTH_OUOM VARCHAR(40),
MUD_END_DEPTH DECIMAL(15,5),
MUD_END_DEPTH_OUOM VARCHAR(40),
MUD_START_DEPTH DECIMAL(15,5),
MUD_START_DEPTH_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_MUD_WEIGHT'
CREATE TABLE well_drill_mud_weight
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
DEPTH_OBS_NO INT,
MEDIA_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MUD_DEPTH DECIMAL(15,5),
MUD_DEPTH_OUOM VARCHAR(40),
MUD_WEIGHT DECIMAL(10,5),
MUD_WEIGHT_OUOM VARCHAR(40),
MUD_WEIGHT_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REPORTED_TVD DECIMAL(10,5),
REPORTED_TVD_OUOM VARCHAR(40),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_PERIOD'
CREATE TABLE well_drill_period
(
UWI VARCHAR(40) NOT NULL,
PERIOD_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BHA_WEIGHT DECIMAL(10,5),
BHA_WEIGHT_OUOM VARCHAR(40),
BOILER_FUEL DECIMAL(10,5),
BOILER_FUEL_OUOM VARCHAR(40),
CAMP_IND VARCHAR(1),
CASING_PRESS_MAX DECIMAL(10,5),
CASING_PRESS_MAX_OUOM VARCHAR(40),
CIRC_PRESSURE DECIMAL(10,5),
CIRC_PRESSURE_MAX DECIMAL(10,5),
CIRC_PRESSURE_MAX_OUOM VARCHAR(40),
CIRC_PRESSURE_MIN DECIMAL(10,5),
CIRC_PRESSURE_MIN_OUOM VARCHAR(40),
CIRC_PRESSURE_OUOM VARCHAR(40),
CIRC_PRESSURE_TYPE VARCHAR(40),
CONTRACTOR_BA_ID VARCHAR(40),
CONTRACTOR_REP_BA_ID VARCHAR(40),
CONTRACTOR_REP_NAME VARCHAR(255),
CONTRACTOR_REP_SIGNED_IND VARCHAR(1),
CUM_CREW_SAFETY_DAYS BIGINT,
CUM_RIG_SAFETY_DAYS BIGINT,
DRILL_ACTIVITY_SET_ID VARCHAR(40),
DRILL_ACTIVITY_TYPE_ID VARCHAR(40),
DRILL_PIPE_SINGLE_COUNT BIGINT,
DRILL_PIPE_SINGLE_LEN DECIMAL(10,3),
DRILL_PIPE_SINGLE_LEN_OUOM VARCHAR(40),
DRILL_PIPE_STAND_COUNT BIGINT,
DRILL_PIPE_STAND_LEN DECIMAL(10,3),
DRILL_PIPE_STAND_LEN_OUOM VARCHAR(40),
DRILL_STRING_TORQUE DECIMAL(10,5),
DRILL_STRING_TORQUE_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
END_TIMEZONE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FINANCE_ID VARCHAR(40),
HOLE_DRAG DECIMAL(10,5),
HOLE_DRAG_OUOM VARCHAR(40),
HOLE_FILL_LENGTH DECIMAL(10,3),
HOLE_FILL_LENGTH_OUOM VARCHAR(40),
HOOKLOAD_MAX DECIMAL(10,5),
HOOKLOAD_MAX_OUOM VARCHAR(40),
JOB_NUM VARCHAR(255),
KB_DOWN_LENGTH DECIMAL(15,5),
KB_DOWN_LENGTH_OUOM VARCHAR(40),
MUD_SYSTEM_TYPE VARCHAR(40),
MUD_TYPE_OIL_IND VARCHAR(1),
MUD_TYPE_WATER_IND VARCHAR(1),
OPERATOR_BA_ID VARCHAR(40),
OPERATOR_FUEL DECIMAL(10,5),
OPERATOR_FUEL_OUOM VARCHAR(40),
OPERATOR_FUEL_UOM VARCHAR(40),
OPERATOR_REP_BA_ID VARCHAR(40),
OPERATOR_REP_NAME VARCHAR(255),
OPERATOR_REP_SIGNED_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
PRIMARY_ACTIVITY_IND VARCHAR(1),
RATE_SCHEDULE_ID VARCHAR(40),
REENTRY_IND VARCHAR(1),
REMARK VARCHAR(2000),
REPORTED_BASE_LOCATION VARCHAR(20),
REPORTED_KB_ELEV DECIMAL(10,5),
REPORTED_KB_ELEV_OUOM VARCHAR(40),
REPORTED_LICENSE_NUM VARCHAR(255),
REPORTED_PERIOD_NUM VARCHAR(30),
REPORTED_PROFILE_TYPE VARCHAR(40),
REPORTED_RIG_NAME VARCHAR(255),
REPORTED_RIG_REL_DATE TIMESTAMP(0),
REPORTED_RIG_REL_TIME TIMESTAMP(0),
REPORTED_RIG_REL_TIMEZONE VARCHAR(40),
REPORTED_SPUD_DATE TIMESTAMP(0),
REPORTED_SPUD_TIME TIMESTAMP(0),
REPORTED_SPUD_TIMEZONE VARCHAR(40),
REPORTED_TOP_LOCATION VARCHAR(20),
REPORTED_UWI VARCHAR(40),
REPORTED_WELL_NAME VARCHAR(255),
REPORT_TIME_TYPE VARCHAR(40),
RIG_FUEL DECIMAL(10,5),
RIG_FUEL_OUOM VARCHAR(40),
RIG_FUEL_UOM VARCHAR(40),
SAFETY_MEETING_TOPIC VARCHAR(255),
SOURCE VARCHAR(40),
START_DATE TIMESTAMP(0),
START_TIME TIMESTAMP(0),
START_TIMEZONE VARCHAR(40),
TOT_DRILL_TOOL_LENGTH DECIMAL(10,3),
TOT_DRILL_TOOL_LENGTH_OUOM VARCHAR(40),
TOT_DRILL_TOOL_WEIGHT DECIMAL(10,5),
TOT_DRILL_TOOL_WEIGHT_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_PERIOD_CREW'
CREATE TABLE well_drill_period_crew
(
UWI VARCHAR(40) NOT NULL,
PERIOD_OBS_NO INT,
CREW_COMPANY_BA_ID VARCHAR(40) NOT NULL,
DETAIL_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BOOKED_TIME_ELAPSED DECIMAL(10,5),
BOOKED_TIME_ELAPSED_UOM VARCHAR(40),
CREW_MEMBER_BA_ID VARCHAR(40),
CREW_MEMBER_NAME VARCHAR(255),
CREW_MEMBER_NUM VARCHAR(255),
CREW_MEMBER_RECORD_IND VARCHAR(1),
CREW_POSITION VARCHAR(40),
CREW_RECORD_IND VARCHAR(1),
CREW_REFERENCE_NUM VARCHAR(30),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INJURY_IND VARCHAR(1),
INJURY_INITIAL_IND VARCHAR(1),
NO_INJURY_IND VARCHAR(1),
OVERHEAD_COST DECIMAL(12,2),
OVERHEAD_COST_UOM VARCHAR(40),
OVERHEAD_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SUBSISTANCE_IND VARCHAR(1),
SUPPORT_FACILITY_ID VARCHAR(40),
TOTAL_CREW_COUNT BIGINT,
TOTAL_INJURY_COUNT BIGINT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_PERIOD_EQUIP'
CREATE TABLE well_drill_period_equip
(
UWI VARCHAR(40) NOT NULL,
PERIOD_OBS_NO INT,
EQUIPMENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AVG_BOILER_PH DECIMAL(10,5),
AVG_BOILER_STACK_TEMP DECIMAL(10,5),
AVG_BOILER_STACK_TEMP_OUOM VARCHAR(40),
AVG_PUMP_PRESSURE DECIMAL(10,5),
AVG_PUMP_PRESSURE_OUOM VARCHAR(40),
BOOKED_TIME_ELAPSED DECIMAL(6,2),
BOOKED_TIME_ELAPSED_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_OBS_NO INT,
EQUIP_REF_NUM VARCHAR(255),
EXPIRY_DATE TIMESTAMP(0),
INTAKE_DENSITY DECIMAL(10,5),
INTAKE_DENSITY_OUOM VARCHAR(40),
OVERFLOW_DENSITY DECIMAL(10,5),
OVERFLOW_DENSITY_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PUMP_LINER_INSIDE_DIAM DECIMAL(10,5),
PUMP_LINER_INSIDE_DIAM_OUOM VARCHAR(40),
PUMP_STROKE BIGINT,
PUMP_STROKE_OUOM VARCHAR(40),
REDUCED_PUMP_DEPTH DECIMAL(15,5),
REDUCED_PUMP_DEPTH_OUOM VARCHAR(40),
REDUCED_PUMP_PRESS DECIMAL(8,2),
REDUCED_PUMP_PRESS_OUOM VARCHAR(40),
REDUCED_PUMP_STROKE DECIMAL(10,5),
REDUCED_PUMP_STROKE_OUOM VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
TUBING_OBS_NO INT,
TUBING_SOURCE VARCHAR(40),
TUBING_TYPE VARCHAR(40),
UNDERFLOW_DENSITY DECIMAL(10,5),
UNDERFLOW_DENSITY_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_PERIOD_INV'
CREATE TABLE well_drill_period_inv
(
UWI VARCHAR(40) NOT NULL,
PERIOD_OBS_NO INT,
INVENTORY_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
CAT_ADDITIVE_ID VARCHAR(40),
CAT_EQUIP_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
INVENTORY_MATERIAL_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
QUANTITY_ON_HAND DOUBLE PRECISION,
QUANTITY_ON_HAND_OUOM VARCHAR(40),
QUANTITY_ON_HAND_UOM VARCHAR(40),
QUANTITY_ORDERED DOUBLE PRECISION,
QUANTITY_ORDERED_OUOM VARCHAR(40),
QUANTITY_ORDERED_UOM VARCHAR(40),
REMARK VARCHAR(2000),
REPORT_TIME TIMESTAMP(0),
REPORT_TIMEZONE VARCHAR(40),
REPORT_TIME_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_PERIOD_SERV'
CREATE TABLE well_drill_period_serv
(
UWI VARCHAR(40) NOT NULL,
PERIOD_OBS_NO INT,
PROVIDED_BY VARCHAR(40) NOT NULL,
SERVICE_SEQ_NO INT,
SEGMENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
END_TIMEZONE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
METRIC_CODE VARCHAR(40),
METRIC_MAX_VALUE DOUBLE PRECISION,
METRIC_MIN_VALUE DOUBLE PRECISION,
METRIC_VALUE DOUBLE PRECISION,
METRIC_VALUE_OUOM VARCHAR(40),
METRIC_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SERVICE_DESC VARCHAR(1024),
SERVICE_METRIC VARCHAR(40),
SOURCE VARCHAR(40),
START_TIME TIMESTAMP(0),
START_TIMEZONE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_PERIOD_VESSEL'
CREATE TABLE well_drill_period_vessel
(
UWI VARCHAR(40) NOT NULL,
PERIOD_OBS_NO INT,
SF_SUBTYPE VARCHAR(30) NOT NULL,
VESSEL_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HEADING DECIMAL(10,5),
HEADING_NORTH_TYPE VARCHAR(40),
PASSENGERS_OFF BIGINT,
PASSENGERS_ON BIGINT,
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RISER_ANGLE DECIMAL(10,5),
RISER_TENSION DECIMAL(10,5),
RISER_TENSION_OUOM VARCHAR(40),
RISER_TENSION_UOM VARCHAR(40),
SOURCE VARCHAR(40),
VESSEL_ROLE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_PIPE_INV'
CREATE TABLE well_drill_pipe_inv
(
UWI VARCHAR(40) NOT NULL,
PERIOD_OBS_NO INT,
INVENTORY_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CAT_EQUIP_ID VARCHAR(40),
COUPLING_TYPE VARCHAR(40),
DAMAGED_JOINT_COUNT BIGINT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
JOINT_COUNT BIGINT,
LINEAR_MASS DECIMAL(10,5),
LINEAR_MASS_OUOM VARCHAR(40),
LOAN_AUTHORIZED_BY_BA_ID VARCHAR(40),
LOAN_COUNT BIGINT,
LOAN_TO_BA_ID VARCHAR(40),
LOST_COUNT BIGINT,
MAX_JOINT_OUTSIDE_DIAM DECIMAL(8,3),
MAX_JOINT_OUTSIDE_DIAM_OUOM VARCHAR(40),
MAX_OUTSIDE_DIAMETER DECIMAL(8,3),
MAX_OUTSIDE_DIAMETER_OUOM VARCHAR(40),
MIN_INSIDE_DIAMETER DECIMAL(8,3),
MIN_INSIDE_DIAMETER_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REPORT_TIME TIMESTAMP(0),
REPORT_TIMEZONE VARCHAR(40),
REPORT_TIME_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
TUBING_GRADE VARCHAR(40),
TUBING_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_REMARK'
CREATE TABLE well_drill_remark
(
UWI VARCHAR(40) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
END_PERIOD_OBS_NO INT,
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_BY_BA_ID VARCHAR(40),
REMARK_DATE TIMESTAMP(0),
REMARK_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
START_PERIOD_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_REPORT'
CREATE TABLE well_drill_report
(
UWI VARCHAR(40) NOT NULL,
REPORT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONTRACTOR_BA_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
END_TIMEZONE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FILE_DATE TIMESTAMP(0),
FILE_TIME TIMESTAMP(0),
FILE_TIMEZONE VARCHAR(40),
PERIOD_COUNT BIGINT,
PERIOD_DURATION DECIMAL(10,5),
PERIOD_DURATION_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
RECORD_COUNT BIGINT,
REFERENCE_NUM VARCHAR(30),
REMARK VARCHAR(2000),
REPORTED_CONTRACTOR_NAME VARCHAR(255),
REPORTED_RIG_NUM VARCHAR(255),
SOURCE VARCHAR(40),
STANDARD_DIGITAL_FORMAT VARCHAR(40),
START_DATE TIMESTAMP(0),
START_TIME TIMESTAMP(0),
START_TIMEZONE VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
VENDOR_DIGITAL_FORMAT VARCHAR(40),
VERSION_SEQ_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_SHAKER'
CREATE TABLE well_drill_shaker
(
UWI VARCHAR(40) NOT NULL,
PERIOD_OBS_NO INT,
SHAKER_ID VARCHAR(40) NOT NULL,
SCREEN_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CATALOGUE_EQUIP_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
NEW_SCREEN_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SCREEN_CHANGE_IND VARCHAR(1),
SCREEN_LOCATION VARCHAR(40),
SCREEN_MESH_DESC VARCHAR(240),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_STATISTIC'
CREATE TABLE well_drill_statistic
(
UWI VARCHAR(40) NOT NULL,
PERIOD_OBS_NO INT,
STATISTIC_TYPE VARCHAR(40) NOT NULL,
STATISTIC_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CURRENCY_CONVERSION DECIMAL(10,5),
DATE_FORMAT_DESC TIMESTAMP(0),
DESCRIPTION VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
STATISTIC_CODE VARCHAR(40),
STATISTIC_DATE TIMESTAMP(0),
STATISTIC_TIME TIMESTAMP(0),
STATISTIC_TIMEZONE VARCHAR(40),
STATISTIC_VALUE DOUBLE PRECISION,
STATISTIC_VALUE_OUOM VARCHAR(40),
STATISTIC_VALUE_UOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_DRILL_WEATHER'
CREATE TABLE well_drill_weather
(
UWI VARCHAR(40) NOT NULL,
PERIOD_OBS_NO INT,
WEATHER_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HEAVE DECIMAL(10,5),
PITCH DECIMAL(10,5),
PPDM_GUID VARCHAR(38),
RECORDED_TIME TIMESTAMP(0),
RECORDED_TIMEZONE VARCHAR(40),
REMARK VARCHAR(2000),
ROAD_CONDITION VARCHAR(40),
ROLL DECIMAL(10,5),
SOURCE VARCHAR(40),
SWELL_HEIGHT DECIMAL(10,5),
TEMPERATURE DECIMAL(10,5),
TEMPERATURE_OUOM VARCHAR(40),
WATER_CONDITION VARCHAR(40),
WAVE_HEIGHT DECIMAL(10,5),
WEATHER_CONDITION VARCHAR(40),
WIND_DIRECTION VARCHAR(40),
WIND_STRENGTH VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_EQUIPMENT'
CREATE TABLE well_equipment
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
EQUIPMENT_ID VARCHAR(40) NOT NULL,
EQUIP_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INSTALL_BASE_DEPTH DECIMAL(15,5),
INSTALL_BASE_DEPTH_OUOM VARCHAR(40),
INSTALL_DATE TIMESTAMP(0),
INSTALL_SEQ_NO INT,
INSTALL_TOP_DEPTH DECIMAL(15,5),
INSTALL_TOP_DEPTH_OUOM VARCHAR(40),
PARENT_EQUIPMENT_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMOVAL_DATE TIMESTAMP(0),
STRING_ID VARCHAR(40),
STRING_SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_FACILITY'
CREATE TABLE well_facility
(
UWI VARCHAR(40) NOT NULL,
FACILITY_ID VARCHAR(40) NOT NULL,
FACILITY_TYPE VARCHAR(40) NOT NULL,
ACTIVE_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_USE_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SINGLE_SOURCE_IND VARCHAR(1),
SOURCE VARCHAR(40),
STRING_ID VARCHAR(40),
STRING_SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_HORIZ_DRILL'
CREATE TABLE well_horiz_drill
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BUILDUP_RADIUS_TYPE VARCHAR(40),
BUILDUP_RATE_DEGREE DECIMAL(15,5),
BUILDUP_RATE_LENGTH DECIMAL(10,3),
BUILDUP_RATE_LENGTH_OUOM VARCHAR(40),
CONTRACTOR VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HORIZ_DISPLACEMENT DECIMAL(10,3),
HORIZ_DISPLACEMENT_OUOM VARCHAR(40),
HORIZ_DRILLING_REASON VARCHAR(40),
HORIZ_DRILLING_TYPE VARCHAR(40),
HORIZ_STRAT_UNIT_ID VARCHAR(40),
LATERAL_HOLE_ID VARCHAR(40),
LATERAL_HOLE_LENGTH DECIMAL(10,5),
LATERAL_HOLE_LENGTH_OUOM VARCHAR(40),
MAX_DEVIATION_ANGLE DECIMAL(10,5),
PAY_LENGTH DECIMAL(10,5),
PAY_LENGTH_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
RAT_HOLE_DEPTH DECIMAL(15,5),
RAT_HOLE_DEPTH_OUOM VARCHAR(40),
RAT_HOLE_DEPTH_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
RESERVOIR VARCHAR(255),
STRAT_NAME_SET_ID VARCHAR(40),
WB_LENGTH_IN_FORM DECIMAL(10,5),
WB_LENGTH_IN_FORM_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_HORIZ_DRILL_KOP'
CREATE TABLE well_horiz_drill_kop
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
KICKOFF_POINT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
KICKOFF_POINT_MD DECIMAL(10,5),
KICKOFF_POINT_MD_OUOM VARCHAR(40),
KICKOFF_POINT_TVD DECIMAL(10,5),
KICKOFF_POINT_TVD_OUOM VARCHAR(40),
LATERAL_HOLE_ID VARCHAR(40),
NODE_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_HORIZ_DRILL_POE'
CREATE TABLE well_horiz_drill_poe
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
POINT_OF_ENTRY_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LATERAL_HOLE_ID VARCHAR(40),
NODE_ID VARCHAR(40),
POINT_OF_ENTRY_MD DECIMAL(10,5),
POINT_OF_ENTRY_MD_OUOM VARCHAR(40),
POINT_OF_ENTRY_STRAT_UNIT VARCHAR(40),
POINT_OF_ENTRY_TVD DECIMAL(10,5),
POINT_OF_ENTRY_TVD_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
STRAT_NAME_SET_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_HORIZ_DRILL_SPOKE'
CREATE TABLE well_horiz_drill_spoke
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
KICKOFF_POINT_OBS_NO INT,
SPOKE_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LATERAL_HOLE_ID VARCHAR(40),
NODE_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SPOKE_LENGTH DECIMAL(10,5),
SPOKE_LENGTH_OUOM VARCHAR(40),
SPOKE_MD DECIMAL(10,5),
SPOKE_MD_OUOM VARCHAR(40),
SPOKE_TVD DECIMAL(10,5),
SPOKE_TVD_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LICENSE'
CREATE TABLE well_license
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AGENT VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AUTHORIZED_STRAT_UNIT_ID VARCHAR(40),
BIDDING_ROUND_NUM VARCHAR(20),
CONTRACTOR VARCHAR(40),
DIRECTION_TO_LOC DECIMAL(5,2),
DIRECTION_TO_LOC_OUOM VARCHAR(40),
DISTANCE_REF_POINT VARCHAR(40),
DISTANCE_TO_LOC DECIMAL(7,2),
DISTANCE_TO_LOC_OUOM VARCHAR(40),
DRILL_RIG_NUM VARCHAR(20),
DRILL_SLOT_NO BIGINT,
DRILL_TOOL VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXCEPTION_GRANTED VARCHAR(40),
EXCEPTION_REQUESTED VARCHAR(40),
EXPIRED_IND VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
FEES_PAID_IND VARCHAR(1),
LICENSEE VARCHAR(40),
LICENSEE_CONTACT_ID VARCHAR(40),
LICENSE_DATE TIMESTAMP(0),
LICENSE_NUM VARCHAR(30),
NO_OF_WELLS DECIMAL(14,9),
OFFSHORE_COMPLETION_TYPE VARCHAR(40),
PERMIT_REFERENCE_NUM VARCHAR(20),
PERMIT_REISSUE_DATE TIMESTAMP(0),
PERMIT_TYPE VARCHAR(40),
PLATFORM_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PROJECTED_DEPTH DECIMAL(15,5),
PROJECTED_DEPTH_OUOM VARCHAR(40),
PROJECTED_STRAT_UNIT_ID VARCHAR(40),
PROJECTED_TVD DECIMAL(15,5),
PROJECTED_TVD_OUOM VARCHAR(40),
PROPOSED_SPUD_DATE TIMESTAMP(0),
PURPOSE VARCHAR(240),
RATE_SCHEDULE_ID VARCHAR(40),
REGULATION_TEXT VARCHAR(20),
REGULATION_TEXT_SOURCE_DOC VARCHAR(40),
REGULATORY_AGENCY VARCHAR(40),
REGULATORY_CONTACT_ID VARCHAR(40),
REMARK VARCHAR(2000),
RIG_CODE VARCHAR(40),
RIG_SF_SUBTYPE VARCHAR(30),
RIG_SUBSTR_HEIGHT DECIMAL(10,5),
RIG_SUBSTR_HEIGHT_OUOM VARCHAR(40),
RIG_SUPPORT_FACILITY_ID VARCHAR(40),
RIG_TYPE VARCHAR(40),
SECTION_OF_REGULATION VARCHAR(240),
STRAT_NAME_SET_ID VARCHAR(40),
SURVEYOR VARCHAR(40),
TARGET_OBJECTIVE_FLUID VARCHAR(40),
VIOLATION_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LICENSE_ALIAS'
CREATE TABLE well_license_alias
(
UWI VARCHAR(40) NOT NULL,
WELL_LIC_SOURCE VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
ALIAS_SOURCE VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LICENSE_AREA'
CREATE TABLE well_license_area
(
UWI VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
WELL_LIC_SOURCE VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LICENSE_COND'
CREATE TABLE well_license_cond
(
UWI VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
WELL_LIC_SOURCE VARCHAR(40) NOT NULL,
CONDITION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONDITION_CODE VARCHAR(40),
CONDITION_TYPE VARCHAR(40),
CONDITION_VALUE DECIMAL(12,2),
CONDITION_VALUE_OUOM VARCHAR(40),
CONDITION_VALUE_UOM VARCHAR(40),
CONTACT_BA_ID VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
DESCRIPTION VARCHAR(240),
DUE_CONDITION VARCHAR(40),
DUE_DATE TIMESTAMP(0),
DUE_FREQUENCY VARCHAR(40),
DUE_TERM DECIMAL(10,5),
DUE_TERM_UOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXEMPT_IND VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
FULFILLED_BY_BA_ID VARCHAR(40),
FULFILLED_DATE TIMESTAMP(0),
FULFILLED_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
PRODUCT_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
RESTRICTION_ID VARCHAR(40),
RESTRICTION_VERSION INT,
SOURCE VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LICENSE_REMARK'
CREATE TABLE well_license_remark
(
UWI VARCHAR(40) NOT NULL,
WELL_LIC_SOURCE VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
REMARK_ID VARCHAR(40) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
AUTHOR VARCHAR(255),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_DATE TIMESTAMP(0),
REMARK_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LICENSE_STATUS'
CREATE TABLE well_license_status
(
UWI VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
LICENSE_SOURCE VARCHAR(40) NOT NULL,
STATUS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LICENSE_STATUS VARCHAR(40),
LICENSE_STATUS_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LICENSE_VIOLATION'
CREATE TABLE well_license_violation
(
UWI VARCHAR(40) NOT NULL,
WELL_LIC_SOURCE VARCHAR(40) NOT NULL,
LICENSE_ID VARCHAR(40) NOT NULL,
VIOLATION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CONDITION_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RESOLVE_DATE TIMESTAMP(0),
RESOLVE_DESC VARCHAR(1024),
RESOLVE_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
VIOLATION_DATE TIMESTAMP(0),
VIOLATION_DESC VARCHAR(1024),
VIOLATION_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG'
CREATE TABLE well_log
(
UWI VARCHAR(40) NOT NULL,
WELL_LOG_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACQUIRED_FOR_BA_ID VARCHAR(40),
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
BYPASS_IND VARCHAR(1),
CASED_HOLE_IND VARCHAR(1),
COMPOSITE_IND VARCHAR(1),
DEPTH_TYPE VARCHAR(40),
DICTIONARY_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOG_JOB_ID VARCHAR(40),
LOG_JOB_SOURCE VARCHAR(40),
LOG_REF_NUM VARCHAR(60),
LOG_TITLE VARCHAR(240),
LOG_TOOL_PASS_NO BIGINT,
MWD_IND VARCHAR(1),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
TRIP_OBS_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_AXIS_COORD'
CREATE TABLE well_log_axis_coord
(
UWI VARCHAR(40) NOT NULL,
CURVE_ID VARCHAR(40) NOT NULL,
AXIS_ID VARCHAR(40) NOT NULL,
COORDINATE_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
AXIS_VALUE DOUBLE PRECISION,
AXIS_VALUE_OUOM VARCHAR(40),
AXIS_VALUE_UOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
TEXT_VALUE VARCHAR(1024),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_CLASS'
CREATE TABLE well_log_class
(
UWI VARCHAR(40) NOT NULL,
WELL_LOG_ID VARCHAR(40) NOT NULL,
WELL_LOG_CLASS_ID VARCHAR(40) NOT NULL,
WELL_LOG_SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PRIMARY_TYPE_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_CLS_CRV_CLS'
CREATE TABLE well_log_cls_crv_cls
(
WELL_LOG_CLASS_ID VARCHAR(40) NOT NULL,
CURVE_CLASS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_CRV_CLS_XREF'
CREATE TABLE well_log_crv_cls_xref
(
PARENT_CURVE_CLASS_ID VARCHAR(40) NOT NULL,
CHILD_CURVE_CLASS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
XREF_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_CURVE'
CREATE TABLE well_log_curve
(
UWI VARCHAR(40) NOT NULL,
CURVE_ID VARCHAR(40) NOT NULL,
ACQUIRED_FOR_BA_ID VARCHAR(40),
ACTIVE_IND VARCHAR(1),
API_CODE_SYSTEM VARCHAR(40),
API_CURVE_CLASS VARCHAR(40),
API_CURVE_CODE BIGINT,
API_CURVE_MODIFIER DOUBLE PRECISION,
API_LOG_CODE BIGINT,
BASE_CURVE_IND VARCHAR(1),
BYPASS_IND VARCHAR(1),
CASED_HOLE_IND VARCHAR(1),
COMPOSITE_IND VARCHAR(1),
CURVE_OUOM VARCHAR(40),
CURVE_OUTPUT_TYPE VARCHAR(40),
CURVE_QUALITY VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
DICTIONARY_ID VARCHAR(40),
DICT_CURVE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXPLICIT_INDEX_IND VARCHAR(1),
FIRST_GOOD_VALUE DOUBLE PRECISION,
FIRST_GOOD_VALUE_INDEX DOUBLE PRECISION,
FRAME_ID VARCHAR(40),
GOOD_VALUE_TYPE VARCHAR(40),
INDEX_CURVE_ID VARCHAR(40),
INDEX_OUOM VARCHAR(40),
INDEX_UOM VARCHAR(40),
JOB_ID VARCHAR(40),
LAST_GOOD_VALUE DOUBLE PRECISION,
LAST_GOOD_VALUE_INDEX DOUBLE PRECISION,
LOG_TOOL_PASS_NO BIGINT,
LOG_TOOL_TYPE VARCHAR(40),
MAX_INDEX DOUBLE PRECISION,
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_INDEX DOUBLE PRECISION,
MEAN_VALUE DOUBLE PRECISION,
MEAN_VALUE_STD_DEV DOUBLE PRECISION,
MIN_INDEX DOUBLE PRECISION,
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_INDEX DOUBLE PRECISION,
MULTIPLE_INDEX_IND VARCHAR(1),
MWD_IND VARCHAR(1),
NULL_COUNT BIGINT,
NULL_REPRESENTATION VARCHAR(40),
ORDER_SEQ_NO INT,
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PRIMARY_INDEX_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
REPORTED_DESC VARCHAR(240),
REPORTED_MNEMONIC VARCHAR(255),
REPORTED_UNIT_MNEMONIC VARCHAR(255),
SOURCE VARCHAR(40),
TRIP_OBS_NO INT,
VALUE_COUNT BIGINT,
WELL_LOG_ID VARCHAR(40),
WELL_LOG_JOB_SOURCE VARCHAR(40),
WELL_LOG_SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_CURVE_AXIS'
CREATE TABLE well_log_curve_axis
(
UWI VARCHAR(40) NOT NULL,
CURVE_ID VARCHAR(40) NOT NULL,
AXIS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AXIS_OUOM VARCHAR(40),
AXIS_SEQ_NO INT,
AXIS_UOM VARCHAR(40),
DIMENSION_COUNT BIGINT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REPORTED_AXIS_NAME VARCHAR(255),
REPORTED_AXIS_OBJECT_NAME VARCHAR(255),
SOURCE VARCHAR(40),
SPACING DOUBLE PRECISION,
SPACING_OUOM VARCHAR(40),
SPACING_UOM VARCHAR(40),
VALUE_COUNT BIGINT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_CURVE_CLASS'
CREATE TABLE well_log_curve_class
(
CURVE_CLASS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CLASS_MNEMONIC VARCHAR(255),
CURVE_CLASS_NAME VARCHAR(255),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
QUANTITY_ID VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SYSTEM_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_CURVE_FRAME'
CREATE TABLE well_log_curve_frame
(
UWI VARCHAR(40) NOT NULL,
WELL_LOG_ID VARCHAR(40) NOT NULL,
WELL_LOG_SOURCE VARCHAR(40) NOT NULL,
FRAME_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
DEPTH_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FRAME_NAME VARCHAR(255),
FRAME_SPACING DOUBLE PRECISION,
FRAME_SPACING_OUOM VARCHAR(40),
FRAME_SPACING_UOM VARCHAR(40),
GAPS_IND VARCHAR(1),
INDEX_OUOM VARCHAR(40),
INDEX_UOM VARCHAR(40),
IRREGULAR_DESC VARCHAR(240),
IRREGULAR_IND VARCHAR(1),
LOG_DIRECTION VARCHAR(40),
MAX_INDEX DOUBLE PRECISION,
MIN_INDEX DOUBLE PRECISION,
PPDM_GUID VARCHAR(38),
PRIMARY_INDEX_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_CURVE_PROC'
CREATE TABLE well_log_curve_proc
(
UWI VARCHAR(40) NOT NULL,
CURVE_ID VARCHAR(40) NOT NULL,
PROCESS_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
DICTIONARY_ID VARCHAR(40),
DICT_PROCESS_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REPORTED_MNEMONIC VARCHAR(255),
SOURCE VARCHAR(40),
SPLICE_OBS_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_CURVE_REMARK'
CREATE TABLE well_log_curve_remark
(
UWI VARCHAR(40) NOT NULL,
CURVE_ID VARCHAR(40) NOT NULL,
REMARK_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MADE_BY_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_TYPE VARCHAR(40),
REMARK_USE_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_CURVE_SCALE'
CREATE TABLE well_log_curve_scale
(
UWI VARCHAR(40) NOT NULL,
CURVE_ID VARCHAR(40) NOT NULL,
DIGITAL_CURVE_ID VARCHAR(40) NOT NULL,
CURVE_SCALE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BACKUP_CURVE_SCALE VARCHAR(40),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LEFT_SCALE_VALUE DOUBLE PRECISION,
MATRIX_LITHOLOGY_SETTING VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RIGHT_SCALE_VALUE DOUBLE PRECISION,
SCALE_TRANSFORM_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
TRACK_NUM VARCHAR(30),
TRACK_WIDTH DECIMAL(10,5),
TRACK_WIDTH_OUOM VARCHAR(40),
TRACK_WIDTH_UOM VARCHAR(40),
VERTICAL_SCALE_RATIO VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_CURVE_SPLICE'
CREATE TABLE well_log_curve_splice
(
UWI VARCHAR(40) NOT NULL,
CURVE_ID VARCHAR(40) NOT NULL,
SPLICE_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CREATED_BY_BA_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
MAX_VALUE_INDEX DOUBLE PRECISION,
MIN_VALUE_INDEX DOUBLE PRECISION,
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_CURVE_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_CURVE_VALUE'
CREATE TABLE well_log_curve_value
(
UWI VARCHAR(40) NOT NULL,
CURVE_ID VARCHAR(40) NOT NULL,
SAMPLE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INDEX_TYPE VARCHAR(40),
INDEX_VALUE DOUBLE PRECISION,
INDEX_VALUE_UOM VARCHAR(40),
MEASURED_VALUE DOUBLE PRECISION,
MEASURED_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_DGTZ_CURVE'
CREATE TABLE well_log_dgtz_curve
(
UWI VARCHAR(40) NOT NULL,
CURVE_ID VARCHAR(40) NOT NULL,
DIGITAL_CURVE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
CURVE_QUALITY VARCHAR(40),
DEPTH_CORRECTION_METHOD VARCHAR(40),
DEPTH_INCREMENT DECIMAL(10,5),
DEPTH_INCREMENT_OUOM VARCHAR(40),
DIGITIZED_DATE TIMESTAMP(0),
DIGITIZER VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NULL_VALUE DOUBLE PRECISION,
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_DICTIONARY'
CREATE TABLE well_log_dictionary
(
DICTIONARY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OWNED_BY_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_NAME VARCHAR(255),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
VERSION_OBS_NO INT,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_DICT_ALIAS'
CREATE TABLE well_log_dict_alias
(
DICTIONARY_ID VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_DICT_BA'
CREATE TABLE well_log_dict_ba
(
DICTIONARY_ID VARCHAR(40) NOT NULL,
USE_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
PREFERRED_NAME VARCHAR(255),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
USED_BY_BA_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_DICT_CRV_CLS'
CREATE TABLE well_log_dict_crv_cls
(
CURVE_CLASS_ID VARCHAR(40) NOT NULL,
DICTIONARY_ID VARCHAR(40) NOT NULL,
DICT_CURVE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_DICT_CURVE'
CREATE TABLE well_log_dict_curve
(
DICTIONARY_ID VARCHAR(40) NOT NULL,
DICT_CURVE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MNEMONIC VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_DICT_PARM'
CREATE TABLE well_log_dict_parm
(
DICTIONARY_ID VARCHAR(40) NOT NULL,
PARAMETER_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MNEMONIC VARCHAR(255),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
QUANTITY_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_DICT_PARM_CLS'
CREATE TABLE well_log_dict_parm_cls
(
DICTIONARY_ID VARCHAR(40) NOT NULL,
PARAMETER_ID VARCHAR(40) NOT NULL,
PARAMETER_CLASS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_DICT_PARM_VAL'
CREATE TABLE well_log_dict_parm_val
(
DICTIONARY_ID VARCHAR(40) NOT NULL,
PARAMETER_ID VARCHAR(40) NOT NULL,
VALUE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
VALUE_MNEMONIC VARCHAR(255),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_DICT_PROC'
CREATE TABLE well_log_dict_proc
(
DICTIONARY_ID VARCHAR(40) NOT NULL,
PROCESS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DESCRIPTION VARCHAR(2000),
DIC_PROC_NAME VARCHAR(255),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MNEMONIC VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_JOB'
CREATE TABLE well_log_job
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
JOB_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
CASING_SHOE_DEPTH DECIMAL(15,5),
CASING_SHOE_DEPTH_OUOM VARCHAR(40),
DRILLING_MD DECIMAL(10,5),
DRILLING_MD_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
ENGINEER VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
LOGGING_COMPANY VARCHAR(40),
LOGGING_UNIT VARCHAR(40),
OBSERVER VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_PARM'
CREATE TABLE well_log_parm
(
UWI VARCHAR(40) NOT NULL,
WELL_LOG_ID VARCHAR(40) NOT NULL,
WELL_LOG_SOURCE VARCHAR(40) NOT NULL,
PARAMETER_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
ARRAY_IND VARCHAR(1),
DESCRIPTION VARCHAR(1024),
DICTIONARY_ID VARCHAR(40),
DICT_PARAMETER_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PARAMETER_OUTPUT VARCHAR(40),
PARAMETER_TEXT_VALUE VARCHAR(1024),
PARAMETER_VALUE DOUBLE PRECISION,
PARAMETER_VALUE_OUOM VARCHAR(40),
PARAMETER_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REPORTED_DESC VARCHAR(1024),
REPORTED_MNEMONIC VARCHAR(255),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_PARM_ARRAY'
CREATE TABLE well_log_parm_array
(
UWI VARCHAR(40) NOT NULL,
WELL_LOG_ID VARCHAR(40) NOT NULL,
WELL_LOG_SOURCE VARCHAR(40) NOT NULL,
PARAMETER_SEQ_NO INT,
ELEMENT_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
DIMENSION VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
ELEMENT_NUM VARCHAR(60),
EXPIRY_DATE TIMESTAMP(0),
PARAMETER_TEXT_VALUE VARCHAR(1024),
PARAMETER_VALUE DOUBLE PRECISION,
PARAMETER_VALUE_OUOM VARCHAR(40),
PARAMETER_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_PARM_CLASS'
CREATE TABLE well_log_parm_class
(
PARAMETER_CLASS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
CLASS_LONG_NAME VARCHAR(255),
CLASS_SHORT_NAME VARCHAR(30),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
QUANTITY_ID VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_PASS'
CREATE TABLE well_log_pass
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
JOB_ID VARCHAR(40) NOT NULL,
TRIP_OBS_NO INT,
LOG_TOOL_PASS_NO BIGINT,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
BASE_LOG_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
END_TIMEZONE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
START_TIME TIMESTAMP(0),
START_TIMEZONE VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_REMARK'
CREATE TABLE well_log_remark
(
UWI VARCHAR(40) NOT NULL,
WELL_LOG_ID VARCHAR(40) NOT NULL,
WELL_LOG_SOURCE VARCHAR(40) NOT NULL,
REMARK_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MADE_BY_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_TYPE VARCHAR(40),
REMARK_USE_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_TRIP'
CREATE TABLE well_log_trip
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
JOB_ID VARCHAR(40) NOT NULL,
TRIP_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
BASE_STRAT_UNIT_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOGGING_SERVICE_TYPE VARCHAR(40),
MAX_DEPTH DECIMAL(15,5),
MAX_DEPTH_OUOM VARCHAR(40),
MAX_TEMPERATURE DECIMAL(10,5),
MAX_TEMPERATURE_OUOM VARCHAR(40),
MUD_SAMPLE_ID VARCHAR(40),
MUD_SAMPLE_TYPE VARCHAR(40),
MUD_SOURCE VARCHAR(40),
OBSERVER VARCHAR(255),
ON_BOTTOM_DATE TIMESTAMP(0),
ON_BOTTOM_TIME TIMESTAMP(0),
ON_BOTTOM_TIMEZONE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REPORTED_TVD DECIMAL(15,5),
REPORTED_TVD_OUOM VARCHAR(40),
REPORT_APD DECIMAL(15,5),
REPORT_LOG_DATUM VARCHAR(40),
REPORT_LOG_DATUM_ELEV DECIMAL(10,5),
REPORT_LOG_DATUM_ELEV_OUOM VARCHAR(40),
REPORT_LOG_RUN VARCHAR(5),
REPORT_PERM_DATUM VARCHAR(40),
REPORT_PERM_DATUM_ELEV DECIMAL(10,5),
REPORT_PERM_DATUM_ELEV_OUOM VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
TOP_STRAT_UNIT_ID VARCHAR(40),
TRIP_DATE TIMESTAMP(0),
TUBING_BOTTOM_DEPTH DECIMAL(15,5),
TUBING_BOTTOM_DEPTH_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_LOG_TRIP_REMARK'
CREATE TABLE well_log_trip_remark
(
UWI VARCHAR(40) NOT NULL,
JOB_SOURCE VARCHAR(40) NOT NULL,
JOB_ID VARCHAR(40) NOT NULL,
TRIP_OBS_NO INT,
REMARK_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_MISC_DATA'
CREATE TABLE well_misc_data
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
MISC_DATA_TYPE VARCHAR(40) NOT NULL,
MISC_DATA_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
COST DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM VARCHAR(40),
CURRENCY_UOM VARCHAR(40),
DATA_VALUE DOUBLE PRECISION,
DATA_VALUE_OUOM VARCHAR(40),
DATA_VALUE_UOM VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
MISC_DATA_CODE VARCHAR(40),
MISC_DATA_DESC VARCHAR(1024),
PPDM_GUID VARCHAR(38),
REFERENCE_VALUE DOUBLE PRECISION,
REFERENCE_VALUE_OUOM VARCHAR(40),
REFERENCE_VALUE_TYPE VARCHAR(40),
REFERENCE_VALUE_UOM VARCHAR(40),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_MUD_PROPERTY'
CREATE TABLE well_mud_property
(
SAMPLE_ANALYSIS_ID VARCHAR(40) NOT NULL,
SAMPLE_ANALYSIS_SOURCE VARCHAR(40) NOT NULL,
PROPERTY_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM VARCHAR(40),
AVERAGE_VALUE_UOM VARCHAR(40),
DATE_FORMAT_DESC TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM VARCHAR(40),
MAX_VALUE_UOM VARCHAR(40),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM VARCHAR(40),
MIN_VALUE_UOM VARCHAR(40),
MUD_ANL_OBS_NO INT,
MUD_PROPERTY VARCHAR(40),
MUD_PROPERTY_CODE VARCHAR(40),
MUD_PROPERTY_DESC VARCHAR(1024),
MUD_PROPERTY_REF VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_VALUE DOUBLE PRECISION,
REFERENCE_VALUE_OUOM VARCHAR(40),
REFERENCE_VALUE_UOM VARCHAR(40),
REMARK VARCHAR(2000),
SAMPLE_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
STEP_SEQ_NO INT,
UWI VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_MUD_RESISTIVITY'
CREATE TABLE well_mud_resistivity
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
SAMPLE_ID VARCHAR(40) NOT NULL,
RESISTIVITY_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MUD_RESISTIVITY DECIMAL(10,5),
MUD_RESISTIVITY_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RESISTIVITY_TEMPERATURE DECIMAL(10,5),
RESISTIVITY_TEMPERATURE_OUOM VARCHAR(40),
SAMPLE_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_MUD_SAMPLE'
CREATE TABLE well_mud_sample
(
ANL_ID VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
STEP_SEQ_NO INT,
MUD_ANL_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CIRCULATION_STOP_DATE TIMESTAMP(0),
CIRCULATION_STOP_TIME TIMESTAMP(0),
CIRCULATION_STOP_TIMEZONE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FLUID_FLOW DECIMAL(10,5),
FLUID_FLOW_OUOM VARCHAR(40),
FLUID_LOSS DECIMAL(6,4),
FLUID_LOSS_OUOM VARCHAR(40),
MUD_COLLECT_REASON VARCHAR(40),
MUD_DENSITY DECIMAL(10,5),
MUD_DENSITY_OUOM VARCHAR(40),
MUD_DENSITY_UOM VARCHAR(40),
MUD_PH DECIMAL(10,5),
MUD_PH_OUOM VARCHAR(40),
MUD_SAMPLE_TYPE VARCHAR(40),
MUD_TYPE VARCHAR(40),
MUD_VISCOSITY DECIMAL(8,3),
MUD_VISCOSITY_OUOM VARCHAR(40),
PERIOD_OBS_NO INT,
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
PROBLEM_IND VARCHAR(1),
REMARK VARCHAR(2000),
SAMPLE_DATE TIMESTAMP(0),
SAMPLE_DEPTH DECIMAL(15,5),
SAMPLE_DEPTH_OUOM VARCHAR(40),
SAMPLE_TIME TIMESTAMP(0),
SAMPLE_TIMEZONE VARCHAR(40),
SOURCE VARCHAR(40),
SOURCE_LOCATION VARCHAR(40),
TIME_SINCE_CIRC DECIMAL(10,5),
TIME_SINCE_CIRC_OUOM VARCHAR(40),
UWI VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_NODE'
CREATE TABLE well_node
(
NODE_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
COORDINATE_QUALITY VARCHAR(40),
COORD_ACQUISITION_ID VARCHAR(40),
COORD_SYSTEM_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LATITUDE DECIMAL(14,9),
LEGAL_SURVEY_TYPE VARCHAR(40),
LOCAL_COORD_SYSTEM_ID VARCHAR(40),
LOCATION_QUALITY VARCHAR(40),
LOCATION_TYPE VARCHAR(40),
LONGITUDE DECIMAL(14,9),
NODE_POSITION VARCHAR(40),
ORIGINAL_OBS_NO INT,
ORIGINAL_XY_UOM VARCHAR(40),
PLATFORM_ID VARCHAR(40),
PLATFORM_SF_SUBTYPE VARCHAR(30),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
SELECTED_OBS_NO INT,
SOURCE VARCHAR(40),
UWI VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_NODE_AREA'
CREATE TABLE well_node_area
(
NODE_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_NODE_M_B'
CREATE TABLE well_node_m_b
(
NODE_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DLS_ROAD_ALLOWANCE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EW_DIRECTION VARCHAR(40),
EW_DISTANCE DECIMAL(10,3),
EW_DISTANCE_OUOM VARCHAR(40),
EW_START_LINE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
LOCATION_TYPE VARCHAR(40),
NS_DIRECTION VARCHAR(40),
NS_DISTANCE DECIMAL(10,5),
NS_DISTANCE_OUOM VARCHAR(40),
NS_START_LINE VARCHAR(40),
ORIENTATION VARCHAR(40),
PARCEL_CARTER_ID VARCHAR(40),
PARCEL_CONGRESS_ID VARCHAR(40),
PARCEL_DLS_ID VARCHAR(40),
PARCEL_FPS_ID VARCHAR(40),
PARCEL_LIBYA_ID VARCHAR(40),
PARCEL_NE_LOC_ID VARCHAR(40),
PARCEL_NORTH_SEA_ID VARCHAR(40),
PARCEL_NTS_ID VARCHAR(40),
PARCEL_OFFSHORE_ID VARCHAR(40),
PARCEL_OHIO_ID VARCHAR(40),
PARCEL_PBL_ID VARCHAR(40),
PARCEL_TEXAS VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_LOC VARCHAR(40),
REMARK VARCHAR(2000),
SURFACE_LOC VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_NODE_STRAT_UNIT'
CREATE TABLE well_node_strat_unit
(
UWI VARCHAR(40) NOT NULL,
STRAT_NAME_SET_ID VARCHAR(40) NOT NULL,
STRAT_UNIT_ID VARCHAR(40) NOT NULL,
INTERP_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BASE_OFFSET_TVD DECIMAL(15,5),
BASE_OFFSET_TVD_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTERPRETER_BA_ID VARCHAR(40),
LOCATION_TYPE VARCHAR(40),
NODE_ID VARCHAR(40),
NODE_POSITION VARCHAR(40),
PICK_DATE TIMESTAMP(0),
PICK_DEPTH DECIMAL(15,5),
PICK_DEPTH_OUOM VARCHAR(40),
PICK_LOCATION VARCHAR(40),
PICK_METHOD VARCHAR(40),
PICK_METHOD_DESC VARCHAR(240),
PICK_QUALITY VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
TOP_OFFSET_TVD DECIMAL(15,5),
TOP_OFFSET_TVD_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_NODE_VERSION'
CREATE TABLE well_node_version
(
NODE_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
NODE_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
COORDINATE_QUALITY VARCHAR(40),
COORD_ACQUISITION_ID VARCHAR(40),
EASTING DECIMAL(15,7),
EASTING_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
ELEV DECIMAL(10,5),
ELEV_OUOM VARCHAR(40),
EW_DIRECTION VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
GEOG_COORD_SYSTEM_ID VARCHAR(40),
LATITUDE DECIMAL(14,9),
LEGAL_SURVEY_TYPE VARCHAR(40),
LOCAL_COORD_SYSTEM_ID VARCHAR(40),
LOCATION_QUALIFIER VARCHAR(40),
LOCATION_QUALITY VARCHAR(40),
LOCATION_TYPE VARCHAR(40),
LONGITUDE DECIMAL(14,9),
MAP_COORD_SYSTEM_ID VARCHAR(40),
MD DECIMAL(10,5),
MD_OUOM VARCHAR(40),
MONUMENT_ID VARCHAR(40),
MONUMENT_SF_SUBTYPE VARCHAR(30),
NODE_POSITION VARCHAR(40),
NORTHING DECIMAL(15,7),
NORTHING_OUOM VARCHAR(40),
NORTH_TYPE VARCHAR(40),
NS_DIRECTION VARCHAR(40),
ORIGINAL_XY_UOM VARCHAR(40),
PLATFORM_ID VARCHAR(40),
PLATFORM_SF_SUBTYPE VARCHAR(30),
POLAR_AZIMUTH DECIMAL(10,5),
POLAR_OFFSET DECIMAL(8,2),
POLAR_OFFSET_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REMARK VARCHAR(2000),
REPORTED_TVD DECIMAL(10,5),
REPORTED_TVD_OUOM VARCHAR(40),
UWI VARCHAR(40),
VERSION_TYPE VARCHAR(40),
X_OFFSET DECIMAL(10,5),
X_OFFSET_OUOM VARCHAR(40),
Y_OFFSET DECIMAL(10,5),
Y_OFFSET_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_PAYZONE'
CREATE TABLE well_payzone
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ZONE_ID VARCHAR(40) NOT NULL,
ZONE_SOURCE VARCHAR(40) NOT NULL,
PAYZONE_TYPE VARCHAR(40) NOT NULL,
FLUID_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
BASE_STRAT_UNIT_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GAS_OIL_CONTACT_DEPTH DECIMAL(15,5),
GAS_OIL_CONTACT_DEPTH_OUOM VARCHAR(40),
GAS_WTR_CONTACT_DEPTH DECIMAL(15,5),
GAS_WTR_CONTACT_DEPTH_OUOM VARCHAR(40),
GROSS_PAY DECIMAL(10,5),
GROSS_PAY_OUOM VARCHAR(40),
NET_PAY DECIMAL(10,5),
NET_PAY_OUOM VARCHAR(40),
OIL_WTR_CONTACT_DEPTH DECIMAL(15,5),
OIL_WTR_CONTACT_DEPTH_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
STRAT_NAME_SET_ID VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
TOP_STRAT_UNIT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_PERFORATION'
CREATE TABLE well_perforation
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
PERFORATION_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
BASE_STRAT_UNIT_ID VARCHAR(40),
COMPLETION_OBS_NO INT,
COMPLETION_SOURCE VARCHAR(40),
COMPLETION_STATUS VARCHAR(40),
COMPLETION_STATUS_TYPE VARCHAR(40),
CURRENT_STATUS_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERFORATION_ANGLE DECIMAL(10,5),
PERFORATION_BA_ID VARCHAR(40),
PERFORATION_COUNT BIGINT,
PERFORATION_DATE TIMESTAMP(0),
PERFORATION_DENSITY DECIMAL(10,5),
PERFORATION_DIAMETER DECIMAL(8,3),
PERFORATION_DIAMETER_OUOM VARCHAR(40),
PERFORATION_METHOD VARCHAR(40),
PERFORATION_PER_UOM VARCHAR(40),
PERFORATION_PHASE VARCHAR(40),
PERFORATION_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
STRAT_NAME_SET_ID VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
TOP_STRAT_UNIT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_PERF_REMARK'
CREATE TABLE well_perf_remark
(
UWI VARCHAR(40) NOT NULL,
PERFORATION_SOURCE VARCHAR(40) NOT NULL,
PERFORATION_OBS_NO INT,
REMARK_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_BA_ID VARCHAR(40),
REMARK_DATE TIMESTAMP(0),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_PERMIT_TYPE'
CREATE TABLE well_permit_type
(
GRANTED_BY_BA_ID VARCHAR(40) NOT NULL,
PERMIT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
RATE_SCHEDULE_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_PLUGBACK'
CREATE TABLE well_plugback
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
PLUGBACK_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
BASE_STRAT_UNIT_ID VARCHAR(40),
CEMENT_AMOUNT DECIMAL(10,5),
CEMENT_AMOUNT_OUOM VARCHAR(40),
CEMENT_AMOUNT_UOM VARCHAR(40),
COMPLETION_OBS_NO INT,
COMPLETION_SOURCE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PLUGBACK_BA_ID VARCHAR(40),
PLUGBACK_DATE TIMESTAMP(0),
PLUG_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
STRAT_NAME_SET_ID VARCHAR(40),
SURFACE_ABANDON_DATE TIMESTAMP(0),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
TOP_FOUND_DEPTH DECIMAL(15,5),
TOP_FOUND_DEPTH_OUOM VARCHAR(40),
TOP_STRAT_UNIT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_POROUS_INTERVAL'
CREATE TABLE well_porous_interval
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
POROUS_INTERVAL_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
AVERAGE_POROSITY DECIMAL(10,5),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
BASE_TVD DECIMAL(10,5),
BASE_TVD_OUOM VARCHAR(40),
CORE_SAMPLE_LENGTH DECIMAL(10,5),
CORE_SAMPLE_LENGTH_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GAS_SHOW_IND VARCHAR(1),
GROSS_THICKNESS DECIMAL(10,5),
GROSS_THICKNESS_OUOM VARCHAR(40),
NET_THICKNESS DECIMAL(10,5),
NET_THICKNESS_OUOM VARCHAR(40),
OIL_SHOW_IND VARCHAR(1),
POROSITY_CUTOFF DECIMAL(10,5),
POROSITY_QUALITY VARCHAR(40),
POROSITY_TYPE VARCHAR(40),
POROUS_FORM_AGE VARCHAR(40),
POROUS_STRAT_UNIT_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
STRAT_AGE VARCHAR(40),
STRAT_AGE_NAME_SET_ID VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
TOP_TVD DECIMAL(10,5),
TOP_TVD_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_PRESSURE'
CREATE TABLE well_pressure
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
PRESSURE_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ASSIGNED_FIELD VARCHAR(40),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
BASE_STRAT_UNIT_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EVENT_OBS_NO INT,
EVENT_SOURCE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FLOW_CASING_PRESSURE DECIMAL(8,2),
FLOW_CASING_PRESSURE_OUOM VARCHAR(40),
FLOW_TUBING_PRESSURE DECIMAL(8,2),
FLOW_TUBING_PRESSURE_OUOM VARCHAR(40),
INIT_RESERVOIR_PRESSURE DECIMAL(8,2),
INIT_RESERVOIR_PRESS_OUOM VARCHAR(40),
POOL_DATUM VARCHAR(40),
POOL_DATUM_DEPTH DECIMAL(15,5),
POOL_DATUM_DEPTH_OUOM VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROD_STRING_ID VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PR_STR_FORM_OBS_NO INT,
REMARK VARCHAR(2000),
SHUTIN_CASING_PRESSURE DECIMAL(8,2),
SHUTIN_CASING_PRESSURE_OUOM VARCHAR(40),
SHUTIN_TUBING_PRESSURE DECIMAL(8,2),
SHUTIN_TUBING_PRESSURE_OUOM VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
TOP_STRAT_UNIT_ID VARCHAR(40),
WELL_DATUM_DEPTH DECIMAL(15,5),
WELL_DATUM_OUOM VARCHAR(40),
WELL_TEST_NUM VARCHAR(4),
WELL_TEST_RUN_NUM VARCHAR(4),
WELL_TEST_SOURCE VARCHAR(40),
WELL_TEST_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_PRESSURE_AOF'
CREATE TABLE well_pressure_aof
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
PRESSURE_OBS_NO INT,
AOF_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ANALYSIS_TYPE VARCHAR(40),
AOF_CALCULATE_METHOD VARCHAR(40),
AOF_POTENTIAL DECIMAL(10,5),
AOF_POTENTIAL_OUOM VARCHAR(40),
AOF_SLOPE DECIMAL(10,5),
BOTTOM_HOLE_PRESSURE_METHOD VARCHAR(40),
CAOF_RATE DECIMAL(15,5),
CAOF_RATE_OUOM VARCHAR(40),
CHOKE_SIZE_DESC VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FLOW_PERIOD_DURATION DECIMAL(10,5),
FLOW_PERIOD_DURATION_OUOM VARCHAR(40),
FLOW_PRESSURE DECIMAL(8,2),
FLOW_PRESSURE_OUOM VARCHAR(40),
FLOW_RATE DECIMAL(15,5),
FLOW_RATE_OUOM VARCHAR(40),
FOUR_POINT_CAOF_RATE DECIMAL(15,5),
FOUR_POINT_CAOF_RATE_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RESERVOIR_PRESSURE DECIMAL(8,2),
RESERVOIR_PRESSURE_OUOM VARCHAR(40),
SHUTIN_PRESSURE_TYPE VARCHAR(40),
TEST_DATE TIMESTAMP(0),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_PRESSURE_AOF_4PT'
CREATE TABLE well_pressure_aof_4pt
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
PRESSURE_OBS_NO INT,
AOF_OBS_NO INT,
POINT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BHFP DECIMAL(8,2),
BHFP_OUOM VARCHAR(40),
CHOKE_SIZE_DESC VARCHAR(240),
CONDENSATE_FLOW_RATE DECIMAL(15,5),
CONDENSATE_FLOW_RATE_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FINAL_SHUTIN_PRESSURE DECIMAL(8,2),
FINAL_SHUTIN_PRESSURE_OUOM VARCHAR(40),
FLOW_DURATION DECIMAL(10,5),
FLOW_DURATION_OUOM VARCHAR(40),
FLOW_PRESSURE DECIMAL(8,2),
FLOW_PRESSURE_OUOM VARCHAR(40),
FLOW_RATE DECIMAL(15,5),
FLOW_RATE_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
WATER_FLOW_RATE DECIMAL(15,5),
WATER_FLOW_RATE_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_PRESSURE_BH'
CREATE TABLE well_pressure_bh
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
PRESSURE_OBS_NO INT,
BHP_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BHFP DECIMAL(8,2),
BHFP_OUOM VARCHAR(40),
BHP_METHOD VARCHAR(40),
BH_TEST_CODE VARCHAR(40),
DATUM_PRESSURE DECIMAL(8,2),
DATUM_PRESSURE_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PACKER_DEPTH DECIMAL(15,5),
PACKER_DEPTH_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PRESSURE_GRADIENT DECIMAL(8,2),
PRESSURE_GRADIENT_OUOM VARCHAR(40),
RECORDER_DATUM DECIMAL(10,5),
RECORDER_DATUM_OUOM VARCHAR(40),
REMARK VARCHAR(2000),
REPORTED_RUN_TVD DECIMAL(10,5),
REPORTED_RUN_TVD_OUOM VARCHAR(40),
RUN_DEPTH DECIMAL(15,5),
RUN_DEPTH_OUOM VARCHAR(40),
RUN_DEPTH_TEMPERATURE DECIMAL(10,5),
RUN_DEPTH_TEMPERATURE_OUOM VARCHAR(40),
SHUTIN_PERIOD DECIMAL(10,5),
SHUTIN_PERIOD_OUOM VARCHAR(40),
SURVEY_DATE TIMESTAMP(0),
TEST_DURATION DECIMAL(10,5),
TEST_DURATION_OUOM VARCHAR(40),
TUBING_SIZE_DESC VARCHAR(240),
WELL_HEAD_PRESSURE DECIMAL(8,2),
WELL_HEAD_PRESSURE_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_REMARK'
CREATE TABLE well_remark
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
REMARK_TYPE VARCHAR(40) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_DATE TIMESTAMP(0),
REMARK_STRAT_UNIT_ID VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_SET'
CREATE TABLE well_set
(
WELL_SET_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
WELL_SET_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_SET_WELL'
CREATE TABLE well_set_well
(
WELL_SET_ID VARCHAR(40) NOT NULL,
UWI VARCHAR(40) NOT NULL,
WELL_SET_WELL_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
WELL_SET_ROLE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_SHOW'
CREATE TABLE well_show
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
SHOW_TYPE VARCHAR(40) NOT NULL,
SHOW_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
BASE_STRAT_UNIT_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LITHOLOGY_DESC VARCHAR(240),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RESERVOIR_IND VARCHAR(1),
SAMPLE_TYPE VARCHAR(40),
SHOW_SYMBOL VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
TOP_STRAT_UNIT_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_SHOW_REMARK'
CREATE TABLE well_show_remark
(
UWI VARCHAR(40) NOT NULL,
SHOW_SOURCE VARCHAR(40) NOT NULL,
SHOW_TYPE VARCHAR(40) NOT NULL,
SHOW_OBS_NO INT,
REMARK_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_BA_ID VARCHAR(40),
REMARK_DATE TIMESTAMP(0),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_SIEVE_ANALYSIS'
CREATE TABLE well_sieve_analysis
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ANALYSIS_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ANALYSIS_DATE TIMESTAMP(0),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTERVAL_DEPTH DECIMAL(15,5),
INTERVAL_DEPTH_OUOM VARCHAR(40),
INTERVAL_LENGTH DECIMAL(10,5),
INTERVAL_LENGTH_OUOM VARCHAR(40),
LABORATORY VARCHAR(40),
LAB_FILE_NUM VARCHAR(20),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_SIEVE_SCREEN'
CREATE TABLE well_sieve_screen
(
UWI VARCHAR(40) NOT NULL,
ANL_SOURCE VARCHAR(40) NOT NULL,
ANALYSIS_OBS_NO INT,
SCREEN_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CAT_EQUIP_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
PARTICLE_HELD_COUNT BIGINT,
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SCREEN_MESH_SIZE DOUBLE PRECISION,
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_STATUS'
CREATE TABLE well_status
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
STATUS_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERCENT_CAPABILITY DECIMAL(15,12),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
START_TIME TIMESTAMP(0),
STATUS VARCHAR(40),
STATUS_DATE TIMESTAMP(0),
STATUS_DEPTH DECIMAL(15,5),
STATUS_DEPTH_OUOM VARCHAR(40),
STATUS_QUALIFIER VARCHAR(40),
STATUS_QUALIFIER_VALUE VARCHAR(40),
STATUS_TYPE VARCHAR(40),
TIMEZONE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_SUPPORT_FACILITY'
CREATE TABLE well_support_facility
(
UWI VARCHAR(40) NOT NULL,
SF_SUBTYPE VARCHAR(30) NOT NULL,
SUPPORT_FACILITY_ID VARCHAR(40) NOT NULL,
SF_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
DEPTH_DATUM VARCHAR(40),
DEPTH_DATUM_ELEV DECIMAL(10,5),
DEPTH_DATUM_ELEV_OUOM VARCHAR(40),
DERRICK_FLOOR_ELEV DECIMAL(10,5),
DERRICK_FLOOR_ELEV_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
ELEV_REF_DATUM VARCHAR(40),
ENVIRONMENT_TYPE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
KB_ELEV DECIMAL(10,5),
KB_ELEV_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
RIG_ON_SITE_DATE TIMESTAMP(0),
RIG_RELEASE_DATE TIMESTAMP(0),
ROTARY_TABLE_ELEV DECIMAL(10,5),
ROTARY_TABLE_ELEV_OUOM VARCHAR(40),
SF_USE_TYPE VARCHAR(40),
SOURCE VARCHAR(40),
SUBSEA_ELEV_REF_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_TEST'
CREATE TABLE well_test
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
TEST_TYPE VARCHAR(40) NOT NULL,
RUN_NUM VARCHAR(4) NOT NULL,
TEST_NUM VARCHAR(4) NOT NULL,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
BASE_STRAT_UNIT_ID VARCHAR(40),
BHP_Z DECIMAL(10,5),
BOTTOM_CHOKE_DESC VARCHAR(40),
BSW_PERCENT DECIMAL(15,12),
CALIPER_HOLE_DIAMETER DECIMAL(8,3),
CALIPER_HOLE_DIAMETER_OUOM VARCHAR(40),
CASED_HOLE_IND VARCHAR(1),
CASING_PRESSURE DECIMAL(8,2),
CASING_PRESSURE_OUOM VARCHAR(40),
CHOKE_SIZE_DESC VARCHAR(240),
COMPLETION_OBS_NO INT,
COMPLETION_SOURCE VARCHAR(40),
CONDENSATE_AMOUNT_PERCENT DECIMAL(15,12),
CONDENSATE_FLOW_AMOUNT DECIMAL(10,5),
CONDENSATE_FLOW_AMOUNT_OUOM VARCHAR(40),
CONDENSATE_FLOW_AMOUNT_UOM VARCHAR(40),
CONDENSATE_GRAVITY DECIMAL(10,5),
CONDENSATE_RATIO DECIMAL(15,6),
CONDENSATE_RATIO_OUOM VARCHAR(40),
DAMAGE_QUALITY VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EVENT_OBS_NO INT,
EVENT_SOURCE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FLOW_PRESSURE DECIMAL(8,2),
FLOW_PRESSURE_OUOM VARCHAR(40),
FLOW_TEMPERATURE DECIMAL(10,5),
FLOW_TEMPERATURE_OUOM VARCHAR(40),
GAS_FLOW_AMOUNT DECIMAL(10,5),
GAS_FLOW_AMOUNT_OUOM VARCHAR(40),
GAS_FLOW_AMOUNT_UOM VARCHAR(40),
GAS_GRAVITY DECIMAL(10,5),
GOR DECIMAL(15,6),
GOR_OUOM VARCHAR(40),
H2S_PERCENT DECIMAL(15,12),
HOLE_CONDITION VARCHAR(40),
MAX_CONDENS_FLOW_RATE DECIMAL(15,5),
MAX_CONDENS_FLOW_RATE_OUOM VARCHAR(40),
MAX_GAS_FLOW_RATE DECIMAL(15,5),
MAX_GAS_FLOW_RATE_OUOM VARCHAR(40),
MAX_HYDROSTATIC_PRESSURE DECIMAL(8,2),
MAX_HYDROSTATIC_PRESS_OUOM VARCHAR(40),
MAX_OIL_FLOW_RATE DECIMAL(15,5),
MAX_OIL_FLOW_RATE_OUOM VARCHAR(40),
MAX_WATER_FLOW_RATE DECIMAL(15,5),
MAX_WATER_FLOW_RATE_OUOM VARCHAR(40),
OIL_AMOUNT_PERCENT DECIMAL(15,12),
OIL_FLOW_AMOUNT DECIMAL(10,5),
OIL_FLOW_AMOUNT_OUOM VARCHAR(40),
OIL_FLOW_AMOUNT_UOM VARCHAR(40),
OIL_GRAVITY DECIMAL(10,5),
PERMEABILITY_QUALITY VARCHAR(40),
PPDM_GUID VARCHAR(38),
PRIMARY_FLUID_RECOVERED VARCHAR(40),
PRODUCTION_METHOD VARCHAR(40),
PROD_STRING_ID VARCHAR(40),
PROD_STR_FORM_OBS_NO INT,
RAT_HOLE_DIAMETER DECIMAL(8,3),
RAT_HOLE_DIAMETER_OUOM VARCHAR(40),
RAT_HOLE_LENGTH DECIMAL(10,3),
RAT_HOLE_LENGTH_OUOM VARCHAR(40),
REMARK VARCHAR(2000),
REPORTED_STRAT_UNIT_ID VARCHAR(40),
REPORT_TEMPERATURE DECIMAL(10,5),
REPORT_TEMPERATURE_OUOM VARCHAR(40),
REPORT_TEST_NUM VARCHAR(4),
SHOW_TYPE VARCHAR(40),
SI_FLOW_RATIO DECIMAL(4,2),
START_TIME TIMESTAMP(0),
START_TIMEZONE VARCHAR(40),
STATIC_PRESSURE DECIMAL(8,2),
STATIC_PRESSURE_OUOM VARCHAR(40),
STRAT_AGE VARCHAR(40),
STRAT_AGE_NAME_SET_ID VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
STRING_SOURCE VARCHAR(40),
SULPHUR_IND VARCHAR(1),
TD DECIMAL(10,5),
TD_OUOM VARCHAR(40),
TEMPERATURE_CORRECTION DECIMAL(10,5),
TEMPERATURE_CORRECTION_IND VARCHAR(1),
TEMPERATURE_CORRECTION_OUOM VARCHAR(40),
TEST_COMPANY VARCHAR(40),
TEST_DATE TIMESTAMP(0),
TEST_DURATION DECIMAL(10,5),
TEST_DURATION_OUOM VARCHAR(40),
TEST_HOLE_DIAMETER DECIMAL(8,3),
TEST_HOLE_DIAMETER_OUOM VARCHAR(40),
TEST_RESULT_CODE VARCHAR(40),
TEST_SUBTYPE VARCHAR(40),
TOOL_OPEN_TIME TIMESTAMP(0),
TOOL_OPEN_TIMEZONE VARCHAR(40),
TOP_CHOKE_DESC VARCHAR(240),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
TOP_STRAT_UNIT_ID VARCHAR(40),
WATER_AMOUNT_PERCENT DECIMAL(15,12),
WATER_CUT_PERCENT DECIMAL(15,12),
WATER_FLOW_AMOUNT DECIMAL(10,5),
WATER_FLOW_AMOUNT_OUOM VARCHAR(40),
WATER_FLOW_AMOUNT_UOM VARCHAR(40),
WELLBORE_COMPLETION_TYPE VARCHAR(40),
Z_FACTOR DECIMAL(10,5),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_TEST_ANALYSIS'
CREATE TABLE well_test_analysis
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
TEST_TYPE VARCHAR(40) NOT NULL,
RUN_NUM VARCHAR(4) NOT NULL,
TEST_NUM VARCHAR(4) NOT NULL,
PERIOD_TYPE VARCHAR(40) NOT NULL,
PERIOD_OBS_NO INT,
ANALYSIS_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BSW DECIMAL(10,5),
COMPLETION_OBS_NO INT,
CONDENSATE_GRAVITY DECIMAL(10,5),
CONDENSATE_RATIO DECIMAL(15,6),
CONDENSATE_RATIO_OUOM VARCHAR(40),
CONDENSATE_TEMPERATURE DECIMAL(10,5),
CONDENSATE_TEMPERATURE_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FLUID_TYPE VARCHAR(40),
GAS_CONTENT VARCHAR(15),
GAS_GRAVITY DECIMAL(10,5),
GOR DECIMAL(15,6),
GOR_OUOM VARCHAR(40),
GWR DECIMAL(15,6),
GWR_OUOM VARCHAR(40),
H2S_PERCENT DECIMAL(15,12),
LGR DECIMAL(15,6),
LGR_OUOM VARCHAR(40),
OIL_DENSITY DECIMAL(10,5),
OIL_DENSITY_OUOM VARCHAR(40),
OIL_GRAVITY DECIMAL(10,5),
OIL_TEMPERATURE DECIMAL(10,5),
OIL_TEMPERATURE_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SALINITY_TYPE VARCHAR(40),
SULPHUR_PERCENT DECIMAL(15,12),
WATER_CUT DECIMAL(5,2),
WATER_RESISTIVITY DECIMAL(10,5),
WATER_RESISTIVITY_OUOM VARCHAR(40),
WATER_SALINITY DOUBLE PRECISION,
WATER_SALINITY_OUOM VARCHAR(40),
WATER_TEMPERATURE DECIMAL(10,5),
WATER_TEMPERATURE_OUOM VARCHAR(40),
WOR DECIMAL(15,6),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_TEST_COMPUT_ANAL'
CREATE TABLE well_test_comput_anal
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
TEST_TYPE VARCHAR(40) NOT NULL,
RUN_NUM VARCHAR(4) NOT NULL,
TEST_NUM VARCHAR(4) NOT NULL,
REPORT_NO BIGINT,
ACTIVE_IND VARCHAR(1),
ANALYSIS_COMPANY VARCHAR(40),
COMPUTED_PERMEABILITY DECIMAL(10,5),
COMPUTED_PERMEABILITY_OUOM VARCHAR(40),
CONFIDENCE_LIMIT DECIMAL(10,5),
CONFIDENCE_LIMIT_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EST_DAMAGE_RATIO DECIMAL(5,2),
EXPIRY_DATE TIMESTAMP(0),
EXTRAP_PRESSURE_PERCENT DECIMAL(15,12),
FINAL_RESERVOIR_PRESSURE DECIMAL(8,2),
FINAL_RESERVOIR_PRESS_OUOM VARCHAR(40),
GAUGE_DEPTH DECIMAL(15,5),
GAUGE_DEPTH_OUOM VARCHAR(40),
INVESTIGATION_RADIUS DECIMAL(10,5),
INVESTIGATION_RADIUS_OUOM VARCHAR(40),
MAX_RESERVOIR_PRESSURE DECIMAL(8,2),
MAX_RESERVOIR_PRESSURE_OUOM VARCHAR(40),
POTMTRC_SURF_HEIGHT DECIMAL(10,5),
POTMTRC_SURF_HEIGHT_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PRODUCTION_INDEX_RATE DECIMAL(15,5),
PRODUCTION_INDEX_RATE_OUOM VARCHAR(40),
RECORDER_ID VARCHAR(40),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_TEST_CONTAMINANT'
CREATE TABLE well_test_contaminant
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
TEST_TYPE VARCHAR(40) NOT NULL,
RUN_NUM VARCHAR(4) NOT NULL,
TEST_NUM VARCHAR(4) NOT NULL,
RECOVERY_OBS_NO INT,
CONTAMINANT_SEQ_NO INT,
ACTIVE_IND VARCHAR(1),
CONTAMINANT_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_TEST_CUSHION'
CREATE TABLE well_test_cushion
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
TEST_TYPE VARCHAR(40) NOT NULL,
RUN_NUM VARCHAR(4) NOT NULL,
TEST_NUM VARCHAR(4) NOT NULL,
CUSHION_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CUSHION_GAS_PRESSURE DECIMAL(8,2),
CUSHION_GAS_PRESSURE_OUOM VARCHAR(40),
CUSHION_INHIBITOR_VOLUME DECIMAL(14,4),
CUSHION_INHIBITOR_VOL_OUOM VARCHAR(40),
CUSHION_LENGTH DECIMAL(10,3),
CUSHION_LENGTH_OUOM VARCHAR(40),
CUSHION_TYPE VARCHAR(40),
CUSHION_VOLUME DECIMAL(14,4),
CUSHION_VOLUME_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_TEST_EQUIPMENT'
CREATE TABLE well_test_equipment
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
TEST_TYPE VARCHAR(40) NOT NULL,
RUN_NUM VARCHAR(4) NOT NULL,
TEST_NUM VARCHAR(4) NOT NULL,
EQUIPMENT_TYPE VARCHAR(40) NOT NULL,
EQUIP_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID VARCHAR(40),
EQUIP_LENGTH DECIMAL(10,3),
EQUIP_LENGTH_OUOM VARCHAR(40),
EQUIP_WEIGHT DECIMAL(10,5),
EQUIP_WEIGHT_OUOM VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
INSIDE_DIAMETER DECIMAL(8,3),
INSIDE_DIAMETER_OUOM VARCHAR(40),
OUTSIDE_DIAMETER DECIMAL(8,3),
OUTSIDE_DIAMETER_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_TEST_FLOW'
CREATE TABLE well_test_flow
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
TEST_TYPE VARCHAR(40) NOT NULL,
RUN_NUM VARCHAR(4) NOT NULL,
TEST_NUM VARCHAR(4) NOT NULL,
PERIOD_TYPE VARCHAR(40) NOT NULL,
PERIOD_OBS_NO INT,
FLUID_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BASIC_SEDIMENT_IND VARCHAR(1),
BLOW_DESC VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GAS_RISER_DIAMETER DECIMAL(8,3),
GAS_RISER_DIAMETER_OUOM VARCHAR(40),
MAX_FLUID_RATE DECIMAL(15,5),
MAX_FLUID_RATE_OUOM VARCHAR(40),
MAX_FLUID_RATE_UOM VARCHAR(40),
MAX_SURFACE_PRESSURE DECIMAL(8,2),
MAX_SURFACE_PRESSURE_OUOM VARCHAR(40),
MEASUREMENT_TECHNIQUE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHAKEOUT_PERCENT DECIMAL(15,12),
TTS_TIME_ELAPSED DECIMAL(10,5),
TTS_TIME_ELAPSED_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_TEST_FLOW_MEAS'
CREATE TABLE well_test_flow_meas
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
TEST_TYPE VARCHAR(40) NOT NULL,
RUN_NUM VARCHAR(4) NOT NULL,
TEST_NUM VARCHAR(4) NOT NULL,
MEASUREMENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FLOW_DURATION DECIMAL(10,5),
FLOW_DURATION_OUOM VARCHAR(40),
FLUID_TYPE VARCHAR(40),
MEASUREMENT_PRESSURE DECIMAL(8,2),
MEASUREMENT_PRESSURE_OUOM VARCHAR(40),
MEASUREMENT_TIME_ELAPSED DECIMAL(10,5),
MEASUREMENT_TIME_ELAPSED_OUOM VARCHAR(40),
MEASUREMENT_VOLUME DECIMAL(14,4),
MEASUREMENT_VOLUME_OUOM VARCHAR(40),
MEASUREMENT_VOLUME_UOM VARCHAR(40),
PERIOD_OBS_NO INT,
PERIOD_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SURFACE_CHOKE_DIAMETER DECIMAL(8,3),
SURFACE_CHOKE_DIAMETER_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_TEST_MUD'
CREATE TABLE well_test_mud
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
TEST_TYPE VARCHAR(40) NOT NULL,
RUN_NUM VARCHAR(4) NOT NULL,
TEST_NUM VARCHAR(4) NOT NULL,
MUD_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FILTRATE_RESISTIVITY DECIMAL(10,5),
FILTRATE_RESISTIVITY_OUOM VARCHAR(40),
FILTRATE_SALINITY DOUBLE PRECISION,
FILTRATE_SALINITY_OUOM VARCHAR(40),
FILTRATE_SALINITY_UOM VARCHAR(40),
FILTRATE_TEMPERATURE DECIMAL(10,5),
FILTRATE_TEMPERATURE_OUOM VARCHAR(40),
MUD_PH DECIMAL(10,5),
MUD_RESISTIVITY DECIMAL(10,5),
MUD_RESISTIVITY_OUOM VARCHAR(40),
MUD_SALINITY DOUBLE PRECISION,
MUD_SALINITY_OUOM VARCHAR(40),
MUD_SALINITY_UOM VARCHAR(40),
MUD_SAMPLE_TYPE VARCHAR(40),
MUD_TEMPERATURE DECIMAL(10,5),
MUD_TEMPERATURE_OUOM VARCHAR(40),
MUD_VISCOSITY DECIMAL(8,3),
MUD_VISCOSITY_OUOM VARCHAR(40),
MUD_WEIGHT DECIMAL(10,5),
MUD_WEIGHT_OUOM VARCHAR(40),
MUD_WEIGHT_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_TEST_PERIOD'
CREATE TABLE well_test_period
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
TEST_TYPE VARCHAR(40) NOT NULL,
RUN_NUM VARCHAR(4) NOT NULL,
TEST_NUM VARCHAR(4) NOT NULL,
PERIOD_TYPE VARCHAR(40) NOT NULL,
PERIOD_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
CASING_PRESSURE DECIMAL(8,2),
CASING_PRESSURE_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERIOD_DURATION DECIMAL(10,5),
PERIOD_DURATION_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
TUBING_PRESSURE DECIMAL(8,2),
TUBING_PRESSURE_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_TEST_PRESSURE'
CREATE TABLE well_test_pressure
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
TEST_TYPE VARCHAR(40) NOT NULL,
RUN_NUM VARCHAR(4) NOT NULL,
TEST_NUM VARCHAR(4) NOT NULL,
PERIOD_TYPE VARCHAR(40) NOT NULL,
PERIOD_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_PRESSURE DECIMAL(8,2),
END_PRESSURE_OUOM VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
QUALITY_CODE VARCHAR(40),
RECORDER_ID VARCHAR(40),
REMARK VARCHAR(2000),
START_PRESSURE DECIMAL(8,2),
START_PRESSURE_OUOM VARCHAR(40),
SUMMARY_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_TEST_PRESS_MEAS'
CREATE TABLE well_test_press_meas
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
TEST_TYPE VARCHAR(40) NOT NULL,
RUN_NUM VARCHAR(4) NOT NULL,
TEST_NUM VARCHAR(4) NOT NULL,
MEASUREMENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MEASUREMENT_PRESSURE DECIMAL(8,2),
MEASUREMENT_PRESSURE_OUOM VARCHAR(40),
MEASUREMENT_TEMPERATURE DECIMAL(10,5),
MEASUREMENT_TEMP_OUOM VARCHAR(40),
MEASUREMENT_TIME_ELAPSED DECIMAL(10,5),
MEASUREMENT_TIME_ELAPSED_OUOM VARCHAR(40),
PERIOD_OBS_NO INT,
PERIOD_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
RECORDER_ID VARCHAR(40),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_TEST_RECORDER'
CREATE TABLE well_test_recorder
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
TEST_TYPE VARCHAR(40) NOT NULL,
RUN_NUM VARCHAR(4) NOT NULL,
TEST_NUM VARCHAR(4) NOT NULL,
RECORDER_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_CAPACITY_PRESSURE DECIMAL(8,2),
MAX_CAPACITY_PRESSURE_OUOM VARCHAR(40),
MAX_CAPACITY_TEMP DECIMAL(10,5),
MAX_CAPACITY_TEMP_OUOM VARCHAR(40),
PERFORMANCE_QUALITY VARCHAR(40),
PPDM_GUID VARCHAR(38),
RECORDER_DEPTH DECIMAL(15,5),
RECORDER_DEPTH_OUOM VARCHAR(40),
RECORDER_INSIDE_IND VARCHAR(1),
RECORDER_MAX_TEMP DECIMAL(10,5),
RECORDER_MAX_TEMP_OUOM VARCHAR(40),
RECORDER_MIN_TEMP DECIMAL(10,5),
RECORDER_MIN_TEMP_OUOM VARCHAR(40),
RECORDER_POSITION VARCHAR(40),
RECORDER_RESOLUTION DECIMAL(10,5),
RECORDER_RESOLUTION_OUOM VARCHAR(40),
RECORDER_TYPE VARCHAR(40),
RECORDER_USED_IND VARCHAR(1),
REMARK VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_TEST_RECOVERY'
CREATE TABLE well_test_recovery
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
TEST_TYPE VARCHAR(40) NOT NULL,
RUN_NUM VARCHAR(4) NOT NULL,
TEST_NUM VARCHAR(4) NOT NULL,
RECOVERY_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MULTIPLE_TEST_IND VARCHAR(1),
PERIOD_OBS_NO INT,
PERIOD_TYPE VARCHAR(40),
PPDM_GUID VARCHAR(38),
RECOVERY_AMOUNT DECIMAL(10,5),
RECOVERY_AMOUNT_OUOM VARCHAR(40),
RECOVERY_AMOUNT_PERCENT DECIMAL(15,12),
RECOVERY_AMOUNT_UOM VARCHAR(40),
RECOVERY_DESC VARCHAR(1024),
RECOVERY_METHOD VARCHAR(40),
RECOVERY_SHOW_TYPE VARCHAR(40),
RECOVERY_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
REVERSE_CIRCULATION_IND VARCHAR(1),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_TEST_REMARK'
CREATE TABLE well_test_remark
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
TEST_TYPE VARCHAR(40) NOT NULL,
RUN_NUM VARCHAR(4) NOT NULL,
TEST_NUM VARCHAR(4) NOT NULL,
REMARK_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REMARK_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_TEST_SHUTOFF'
CREATE TABLE well_test_shutoff
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
TEST_TYPE VARCHAR(40) NOT NULL,
RUN_NUM VARCHAR(4) NOT NULL,
TEST_NUM VARCHAR(4) NOT NULL,
SHUTOFF_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PLUGBACK_DEPTH DECIMAL(15,5),
PLUGBACK_DEPTH_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHUTOFF_TYPE VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_TEST_STRAT_UNIT'
CREATE TABLE well_test_strat_unit
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
TEST_TYPE VARCHAR(40) NOT NULL,
RUN_NUM VARCHAR(4) NOT NULL,
TEST_NUM VARCHAR(4) NOT NULL,
STRAT_UNIT_ID VARCHAR(40) NOT NULL,
STRAT_NAME_SET_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
STRAT_AGE VARCHAR(40),
STRAT_AGE_NAME_SET_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_TREATMENT'
CREATE TABLE well_treatment
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
TREATMENT_TYPE VARCHAR(40) NOT NULL,
TREATMENT_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
ADDITIVE_TYPE VARCHAR(40),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
BASE_STRAT_UNIT_ID VARCHAR(40),
COMPLETION_OBS_NO INT,
COMPLETION_SOURCE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FORM_BREAK_PRESSURE DECIMAL(8,2),
FORM_BREAK_PRESSURE_OUOM VARCHAR(40),
INJECTION_RATE DECIMAL(15,5),
INJECTION_RATE_OUOM VARCHAR(40),
INSTANT_SI_PRESSURE DECIMAL(8,2),
INSTANT_SI_PRESSURE_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROPPANT_AGENT_AMOUNT DECIMAL(14,4),
PROPPANT_AGENT_AMOUNT_OUOM VARCHAR(40),
PROPPANT_AGENT_AMOUNT_UOM VARCHAR(40),
PROPPANT_AGENT_MESH_SIZE VARCHAR(30),
PROPPANT_AGENT_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
RUN_NUM VARCHAR(4),
STAGE_NO BIGINT,
STRAT_NAME_SET_ID VARCHAR(40),
TEST_NUM VARCHAR(4),
TEST_TYPE VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
TOP_STRAT_UNIT_ID VARCHAR(40),
TREATMENT_AMOUNT DECIMAL(14,4),
TREATMENT_AMOUNT_OUOM VARCHAR(40),
TREATMENT_AMOUNT_UOM VARCHAR(40),
TREATMENT_BA_ID VARCHAR(40),
TREATMENT_DATE TIMESTAMP(0),
TREATMENT_FLUID_TYPE VARCHAR(40),
TREATMENT_PRESSURE DECIMAL(8,2),
TREATMENT_PRESSURE_OUOM VARCHAR(40),
TREATMENT_STATUS VARCHAR(40),
TREATMENT_STATUS_TYPE VARCHAR(40),
WELL_TEST_SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_TUBULAR'
CREATE TABLE well_tubular
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
TUBING_TYPE VARCHAR(40) NOT NULL,
TUBING_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
BASE_STRAT_UNIT_ID VARCHAR(40),
CAT_EQUIP_ID VARCHAR(40),
COLLAR_TYPE VARCHAR(40),
COUPLING_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
HOLE_SIZE DOUBLE PRECISION,
HOLE_SIZE_OUOM VARCHAR(40),
HUNG_TOP_DEPTH DECIMAL(15,5),
HUNG_TOP_DEPTH_OUOM VARCHAR(40),
INSIDE_DIAMETER DECIMAL(8,3),
INSIDE_DIAMETER_OUOM VARCHAR(40),
JOINT_COUNT BIGINT,
LEFT_IN_HOLE_LENGTH DECIMAL(10,5),
LEFT_IN_HOLE_LENGTH_OUOM VARCHAR(40),
LINER_TYPE VARCHAR(40),
MANUFACTURER_BA_ID VARCHAR(40),
MIXED_STRING_IND VARCHAR(1),
OBSERVATION_DATE TIMESTAMP(0),
OUTSIDE_DIAMETER DECIMAL(8,3),
OUTSIDE_DIAMETER_DESC VARCHAR(240),
OUTSIDE_DIAMETER_OUOM VARCHAR(40),
PACKER_SET_DEPTH DECIMAL(15,5),
PACKER_SET_DEPTH_OUOM VARCHAR(40),
PERIOD_OBS_NO INT,
PPDM_GUID VARCHAR(38),
PULLED_LENGTH DECIMAL(10,5),
PULLED_LENGTH_OUOM VARCHAR(40),
REMARK VARCHAR(2000),
REPORTED_BASE_TVD DECIMAL(10,5),
REPORTED_BASE_TVD_OUOM VARCHAR(40),
REPORTED_TOP_TVD DECIMAL(10,5),
REPORTED_TOP_TVD_OUOM VARCHAR(40),
SEA_FLOOR_PENETRATION DECIMAL(10,5),
SEA_FLOOR_PENETRATION_OUOM VARCHAR(40),
SHOE_DEPTH DECIMAL(15,5),
SHOE_DEPTH_OUOM VARCHAR(40),
STEEL_SPEC VARCHAR(40),
STRAT_NAME_SET_ID VARCHAR(40),
TOP_STRAT_UNIT_ID VARCHAR(40),
TORQUE DECIMAL(10,5),
TORQUE_OUOM VARCHAR(40),
TUBING_DENSITY DECIMAL(10,5),
TUBING_DENSITY_OUOM VARCHAR(40),
TUBING_GRADE VARCHAR(40),
TUBING_STRENGTH DECIMAL(10,5),
TUBING_STRENGTH_OUOM VARCHAR(40),
TUBING_WEIGHT DECIMAL(10,5),
TUBING_WEIGHT_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_VERSION'
CREATE TABLE well_version
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ABANDONMENT_DATE TIMESTAMP(0),
ACTIVE_IND VARCHAR(1),
ASSIGNED_FIELD VARCHAR(40),
BASE_DEPTH DECIMAL(15,5),
BASE_DEPTH_OUOM VARCHAR(40),
BASE_NODE_ID VARCHAR(40),
BASE_STRAT_NAME_SET_ID VARCHAR(40),
BASE_STRAT_UNIT_ID VARCHAR(40),
BOTTOM_HOLE_LATITUDE DECIMAL(14,9),
BOTTOM_HOLE_LONGITUDE DECIMAL(14,9),
CASING_FLANGE_ELEV DECIMAL(10,5),
CASING_FLANGE_ELEV_OUOM VARCHAR(40),
COMPLETION_DATE TIMESTAMP(0),
CONFIDENTIAL_DATE TIMESTAMP(0),
CONFIDENTIAL_DEPTH DECIMAL(15,5),
CONFIDENTIAL_DEPTH_OUOM VARCHAR(40),
CONFIDENTIAL_TYPE VARCHAR(40),
CONFID_STRAT_NAME_SET_ID VARCHAR(40),
CONFID_STRAT_UNIT_ID VARCHAR(40),
CURRENT_CLASS VARCHAR(40),
CURRENT_STATUS VARCHAR(40),
CURRENT_STATUS_DATE TIMESTAMP(0),
DEEPEST_DEPTH DECIMAL(15,5),
DEEPEST_DEPTH_OUOM VARCHAR(40),
DEPTH_DATUM VARCHAR(40),
DEPTH_DATUM_ELEV DECIMAL(10,5),
DEPTH_DATUM_ELEV_OUOM VARCHAR(40),
DERRICK_FLOOR_ELEV DECIMAL(10,5),
DERRICK_FLOOR_ELEV_OUOM VARCHAR(40),
DIFFERENCE_LAT_MSL DECIMAL(10,5),
DISCOVERY_IND VARCHAR(1),
DRILL_TD DECIMAL(10,5),
DRILL_TD_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
ELEV_REF_DATUM VARCHAR(40),
ENVIRONMENT_TYPE VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FAULTED_IND VARCHAR(1),
FINAL_DRILL_DATE TIMESTAMP(0),
FINAL_TD DECIMAL(10,5),
FINAL_TD_OUOM VARCHAR(40),
GROUND_ELEV DECIMAL(10,5),
GROUND_ELEV_OUOM VARCHAR(40),
GROUND_ELEV_TYPE VARCHAR(40),
INITIAL_CLASS VARCHAR(40),
KB_ELEV DECIMAL(10,5),
KB_ELEV_OUOM VARCHAR(40),
LEASE_NAME VARCHAR(255),
LEASE_NUM VARCHAR(20),
LEGAL_SURVEY_TYPE VARCHAR(40),
LOCATION_TYPE VARCHAR(40),
LOG_TD DECIMAL(10,5),
LOG_TD_OUOM VARCHAR(40),
MAX_TVD DECIMAL(10,5),
MAX_TVD_OUOM VARCHAR(40),
NET_PAY DECIMAL(10,5),
NET_PAY_OUOM VARCHAR(40),
OLDEST_STRAT_AGE VARCHAR(40),
OLDEST_STRAT_NAME_SET_AGE VARCHAR(40),
OLDEST_STRAT_NAME_SET_ID VARCHAR(40),
OLDEST_STRAT_UNIT_ID VARCHAR(40),
OPERATOR VARCHAR(40),
PLATFORM_ID VARCHAR(40),
PLATFORM_SF_SUBTYPE VARCHAR(30),
PLOT_NAME VARCHAR(255),
PLOT_SYMBOL VARCHAR(40),
PLUGBACK_DEPTH DECIMAL(15,5),
PLUGBACK_DEPTH_OUOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
PROFILE_TYPE VARCHAR(40),
REGULATORY_AGENCY VARCHAR(40),
REMARK VARCHAR(2000),
RIG_ON_SITE_DATE TIMESTAMP(0),
RIG_RELEASE_DATE TIMESTAMP(0),
ROTARY_TABLE_ELEV DECIMAL(10,5),
ROTARY_TABLE_ELEV_OUOM VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
SPUD_DATE TIMESTAMP(0),
STATUS_TYPE VARCHAR(40),
SUBSEA_ELEV_REF_TYPE VARCHAR(40),
SURFACE_LATITUDE DECIMAL(14,9),
SURFACE_LONGITUDE DECIMAL(14,9),
SURFACE_NODE_ID VARCHAR(40),
TAX_CREDIT_CODE VARCHAR(40),
TD_STRAT_AGE VARCHAR(40),
TD_STRAT_NAME_SET_AGE VARCHAR(40),
TD_STRAT_NAME_SET_ID VARCHAR(40),
TD_STRAT_UNIT_ID VARCHAR(40),
TOP_DEPTH DECIMAL(15,5),
TOP_DEPTH_OUOM VARCHAR(40),
TOP_STRAT_NAME_SET_ID VARCHAR(40),
TOP_STRAT_UNIT_ID VARCHAR(40),
WATER_ACOUSTIC_VEL DECIMAL(10,5),
WATER_ACOUSTIC_VEL_OUOM VARCHAR(40),
WATER_DEPTH DECIMAL(15,5),
WATER_DEPTH_DATUM VARCHAR(40),
WATER_DEPTH_OUOM VARCHAR(40),
WELL_EVENT_NUM VARCHAR(4),
WELL_GOVERNMENT_ID VARCHAR(40),
WELL_INTERSECT_MD DECIMAL(10,5),
WELL_LEVEL_TYPE VARCHAR(40),
WELL_NAME VARCHAR(255),
WELL_NUM VARCHAR(20),
WHIPSTOCK_DEPTH DECIMAL(15,5),
WHIPSTOCK_DEPTH_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_VERSION_AREA'
CREATE TABLE well_version_area
(
UWI VARCHAR(40) NOT NULL,
WELL_VERSION_SOURCE VARCHAR(40) NOT NULL,
AREA_ID VARCHAR(40) NOT NULL,
AREA_TYPE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_XREF'
CREATE TABLE well_xref
(
UWI VARCHAR(40) NOT NULL,
XREF_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
UWI2 VARCHAR(40),
XREF_OWNER_BA_ID VARCHAR(40),
XREF_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_ZONE_INTERVAL'
CREATE TABLE well_zone_interval
(
UWI VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
INTERVAL_ID VARCHAR(40) NOT NULL,
ZONE_ID VARCHAR(40) NOT NULL,
ZONE_SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BASE_MD DECIMAL(10,5),
BASE_MD_OUOM VARCHAR(40),
BASE_TVD DECIMAL(10,5),
BASE_TVD_OUOM VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
TOP_DELTA_X DECIMAL(7,2),
TOP_DELTA_X_OUOM VARCHAR(40),
TOP_DELTA_Y DECIMAL(7,2),
TOP_DELTA_Y_OUOM VARCHAR(40),
TOP_MD DECIMAL(10,5),
TOP_MD_OUOM VARCHAR(40),
TOP_TVD DECIMAL(10,5),
TOP_TVD_OUOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WELL_ZONE_INTRVL_VALUE'
CREATE TABLE well_zone_intrvl_value
(
UWI VARCHAR(40) NOT NULL,
INTERVAL_SOURCE VARCHAR(40) NOT NULL,
INTERVAL_ID VARCHAR(40) NOT NULL,
ZONE_ID VARCHAR(40) NOT NULL,
ZONE_SOURCE VARCHAR(40) NOT NULL,
ZONE_VALUE_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
DATE_FORMAT_DESC TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PARAMETER VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
VALUE_TYPE VARCHAR(40),
ZONE_VALUE DECIMAL(10,5),
ZONE_VALUE_OUOM VARCHAR(40),
ZONE_VALUE_UOM VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WORK_ORDER'
CREATE TABLE work_order
(
WORK_ORDER_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
COMPLETE_DATE TIMESTAMP(0),
DUE_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FINAL_BILLING_DATE TIMESTAMP(0),
INSTRUCTIONS VARCHAR(2000),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
REQUEST_DATE TIMESTAMP(0),
RUSH_IND VARCHAR(1),
SOURCE VARCHAR(40),
WORK_ORDER_NUMBER VARCHAR(30),
WORK_ORDER_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WORK_ORDER_ALIAS'
CREATE TABLE work_order_alias
(
WORK_ORDER_ID VARCHAR(40) NOT NULL,
ALIAS_ID VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(30),
ACTIVE_IND VARCHAR(1),
ALIAS_LONG_NAME VARCHAR(255),
ALIAS_REASON_TYPE VARCHAR(40),
ALIAS_SHORT_NAME VARCHAR(30),
ALIAS_TYPE VARCHAR(40),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID VARCHAR(40),
ORIGINAL_IND VARCHAR(1),
OWNER_BA_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PREFERRED_IND VARCHAR(1),
REASON_DESC VARCHAR(240),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID VARCHAR(40),
USE_RULE VARCHAR(2000),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WORK_ORDER_BA'
CREATE TABLE work_order_ba
(
WORK_ORDER_ID VARCHAR(40) NOT NULL,
BUSINESS_ASSOCIATE_ID VARCHAR(40) NOT NULL,
BA_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BA_ROLE VARCHAR(40),
CURRENCY_CONVERSION DECIMAL(10,5),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PAYMENT_AMOUNT DECIMAL(12,2),
PAYMENT_AMOUNT_OUOM VARCHAR(40),
PAYMENT_PERCENT DECIMAL(15,12),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WORK_ORDER_COMPONENT'
CREATE TABLE work_order_component
(
WORK_ORDER_ID VARCHAR(40) NOT NULL,
COMPONENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID VARCHAR(40),
APPLICATION_ID VARCHAR(40),
AREA_ID VARCHAR(40),
AREA_TYPE VARCHAR(40),
AUTHORITY_ID VARCHAR(40),
BA_ORGANIZATION_ID VARCHAR(40),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CATALOGUE_ADDITIVE_ID VARCHAR(40),
CATALOGUE_EQUIP_ID VARCHAR(40),
CIRC_ID VARCHAR(40),
CLASSIFICATION_SYSTEM_ID VARCHAR(40),
CLASS_LEVEL_ID VARCHAR(40),
COMPONENT_TYPE VARCHAR(40),
CONSENT_ID VARCHAR(40),
CONSULT_ID VARCHAR(40),
CONTEST_ID VARCHAR(40),
CONTRACT_ID VARCHAR(40),
ECOZONE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID VARCHAR(40),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID VARCHAR(40),
ENTITLEMENT_ID VARCHAR(40),
EQUIPMENT_ID VARCHAR(40),
EQUIP_MAINT_ID VARCHAR(40),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID VARCHAR(40),
FACILITY_MAINTAIN_ID VARCHAR(40),
FACILITY_TYPE VARCHAR(40),
FIELD_ID VARCHAR(40),
FIELD_STATION_ID VARCHAR(40),
FINANCE_ID VARCHAR(40),
FOSSIL_ID VARCHAR(40),
INCIDENT_ID VARCHAR(40),
INCIDENT_SET_ID VARCHAR(40),
INCIDENT_TYPE VARCHAR(40),
INFORMATION_ITEM_ID VARCHAR(40),
INFO_ITEM_SUBTYPE VARCHAR(30),
INSPECTION_ID VARCHAR(40),
INSTRUMENT_ID VARCHAR(40),
INTEREST_SET_ID VARCHAR(40),
INTEREST_SET_SEQ_NO INT,
JURISDICTION VARCHAR(40),
LAND_RIGHT_ID VARCHAR(40),
LAND_RIGHT_SUBTYPE VARCHAR(30),
LAND_SALE_NUMBER VARCHAR(30),
LANGUAGE VARCHAR(40),
LITHOLOGY_LOG_ID VARCHAR(40),
LITH_LOG_SOURCE VARCHAR(40),
NOTIFICATION_ID VARCHAR(40),
OBLIGATION_ID VARCHAR(40),
OBLIGATION_SEQ_NO INT,
ORIGIN_SEQ_NO INT,
PALEO_SUMMARY_ID VARCHAR(40),
PDEN_ID VARCHAR(40),
PDEN_SOURCE VARCHAR(40),
PDEN_SUBTYPE VARCHAR(30),
PHYSICAL_ITEM_ID VARCHAR(40),
POOL_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
PPDM_SYSTEM_ID VARCHAR(40),
PPDM_TABLE_NAME VARCHAR(30),
PRODUCT_TYPE VARCHAR(40),
PROD_STRING_ID VARCHAR(40),
PROD_STRING_SOURCE VARCHAR(40),
PROJECT_ID VARCHAR(40),
RATE_SCHEDULE_ID VARCHAR(40),
REFERENCED_GUID VARCHAR(38),
REFERENCED_SYSTEM_ID VARCHAR(40),
REFERENCED_TABLE_NAME VARCHAR(30),
REMARK VARCHAR(2000),
RESENT_ID VARCHAR(40),
RESERVE_CLASS_ID VARCHAR(40),
SAMPLE_ANAL_SOURCE VARCHAR(40),
SEIS_SET_ID VARCHAR(40),
SEIS_SET_SUBTYPE VARCHAR(30),
SEIS_TRANSACTION_ID VARCHAR(40),
SF_SUBTYPE VARCHAR(30),
SOURCE VARCHAR(40),
SPATIAL_DESCRIPTION_ID VARCHAR(40),
SPATIAL_OBS_NO INT,
STORE_ID VARCHAR(40),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID VARCHAR(40),
STRAT_UNIT_ID VARCHAR(40),
SUPPORT_FACILITY_ID VARCHAR(40),
SW_APPLICATION_ID VARCHAR(40),
THESAURUS_ID VARCHAR(40),
THESAURUS_WORD_ID VARCHAR(40),
TRANSACTION_TYPE VARCHAR(40),
UWI VARCHAR(40),
WELL_ACTIVITY_SET_ID VARCHAR(40),
WELL_ACTIVITY_SOURCE VARCHAR(40),
WELL_ACTIVITY_TYPE_ID VARCHAR(40),
WELL_SET_ID VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WORK_ORDER_CONDITION'
CREATE TABLE work_order_condition
(
WORK_ORDER_ID VARCHAR(40) NOT NULL,
CONDITION_OBS_NO INT,
ACTIVE_IND VARCHAR(1),
BA_ROLE VARCHAR(40),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
CONDITION_DESC VARCHAR(240),
CONDITION_TYPE VARCHAR(40),
CURRENCY_CONVERSION DECIMAL(10,5),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PAYMENT_AMOUNT DECIMAL(12,2),
PAYMENT_AMOUNT_OUOM VARCHAR(40),
PAYMENT_PERCENT DECIMAL(15,12),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
WORK_ORDER_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WORK_ORDER_DELIVERY'
CREATE TABLE work_order_delivery
(
WORK_ORDER_ID VARCHAR(40) NOT NULL,
DELIVERY_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BA_OBS_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
DELIVERY_BA_ADDRESS_OBS_NO INT,
DELIVERY_BA_ADDRESS_SOURCE VARCHAR(40),
DELIVERY_BA_ID VARCHAR(40),
DELIVERY_DATE TIMESTAMP(0),
DELIVERY_TYPE VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WORK_ORDER_DELIVERY_COMP'
CREATE TABLE work_order_delivery_comp
(
WORK_ORDER_ID VARCHAR(40) NOT NULL,
DELIVERY_ID VARCHAR(40) NOT NULL,
COMPONENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WORK_ORDER_INSTRUCTION'
CREATE TABLE work_order_instruction
(
WORK_ORDER_ID VARCHAR(40) NOT NULL,
INSTRUCTION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BA_ADDRESS_OBS_NO INT,
BA_ADDRESS_SOURCE VARCHAR(40),
BA_OBS_NO INT,
BUSINESS_ASSOCIATE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INSTRUCTION_DESC VARCHAR(240),
INSTRUCTION_TYPE VARCHAR(40),
INSTRUCTION_VALUE DECIMAL(10,5),
INSTRUCTION_VALUE_OUOM VARCHAR(40),
INSTRUCTION_VALUE_UOM VARCHAR(40),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WORK_ORDER_INST_COMP'
CREATE TABLE work_order_inst_comp
(
WORK_ORDER_ID VARCHAR(40) NOT NULL,
INSTRUCTION_ID VARCHAR(40) NOT NULL,
COMPONENT_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE WORK_ORDER_XREF'
CREATE TABLE work_order_xref
(
WORK_ORDER_ID VARCHAR(40) NOT NULL,
WORK_ORDER_XREF_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
BUSINESS_ASSOCIATE_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PARENT_WORK_ORDER_ID VARCHAR(40),
PPDM_GUID VARCHAR(38),
REFERENCE_ID VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
WO_XREF_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE ZONE'
CREATE TABLE zone
(
ZONE_ID VARCHAR(40) NOT NULL,
SOURCE VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
ZONE_NAME VARCHAR(255),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE Z_PRODUCT'
CREATE TABLE z_product
(
PRODUCT_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
CONVERSION_QUANTITY VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
PREFERRED_UOM VARCHAR(40),
PROPERTY_SET_ID VARCHAR(40),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE Z_PRODUCT_COMPOSITION'
CREATE TABLE z_product_composition
(
CONVERSION_ID VARCHAR(40) NOT NULL,
ACTIVE_IND VARCHAR(1),
DEFINED_BY_BA_ID VARCHAR(40),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FORMULA VARCHAR(240),
PPDM_GUID VARCHAR(38),
PRODUCT_COMPONENT_TYPE VARCHAR(40),
PRODUCT_TYPE VARCHAR(40),
REMARK VARCHAR(2000),
SOURCE VARCHAR(40),
SOURCE_DOCUMENT_ID VARCHAR(40),
SUBPRODUCT_TYPE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE Z_R_OIL_BASE_TYPE'
CREATE TABLE z_r_oil_base_type
(
OIL_BASE_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE Z_R_OIL_TYPE'
CREATE TABLE z_r_oil_type
(
OIL_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE Z_R_SAMPLE_WATER_TYPE'
CREATE TABLE z_r_sample_water_type
(
SAMPLE_WATER_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING TABLE Z_R_WATER_TYPE'
CREATE TABLE z_r_water_type
(
WATER_TYPE VARCHAR(40) NOT NULL,
ABBREVIATION VARCHAR(12),
ACTIVE_IND VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME VARCHAR(255),
PPDM_GUID VARCHAR(38),
REMARK VARCHAR(2000),
SHORT_NAME VARCHAR(30),
SOURCE VARCHAR(40),
ROW_CHANGED_BY VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_EFFECTIVE_DATE TIMESTAMP(0),
ROW_EXPIRY_DATE TIMESTAMP(0),
ROW_QUALITY VARCHAR(40)
);

\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLA_ANLR_FK'
ALTER TABLE ANL_ACCURACY ADD CONSTRAINT ANLA_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLA_ANLAS_FK'
ALTER TABLE ANL_ACCURACY ADD CONSTRAINT ANLA_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLA_ANLCM_FK'
ALTER TABLE ANL_ACCURACY ADD CONSTRAINT ANLA_ANLCM_FK FOREIGN KEY
(
CALCULATE_METHOD_ID
)
REFERENCES ANL_CALC_METHOD
(
CALCULATE_METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLA_PC_FK'
ALTER TABLE ANL_ACCURACY ADD CONSTRAINT ANLA_PC_FK FOREIGN KEY
(
REFERENCED_SYSTEM_ID,
REFERENCED_TABLE_NAME,
REFERENCED_COLUMN_NAME
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLA_PT_FK'
ALTER TABLE ANL_ACCURACY ADD CONSTRAINT ANLA_PT_FK FOREIGN KEY
(
REFERENCED_SYSTEM_ID,
REFERENCED_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLA_R_ANLAT_FK'
ALTER TABLE ANL_ACCURACY ADD CONSTRAINT ANLA_R_ANLAT_FK FOREIGN KEY
(
ACCURACY_TYPE
)
REFERENCES R_ANL_ACCURACY_TYPE
(
ACCURACY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLA_R_ANLCT_FK'
ALTER TABLE ANL_ACCURACY ADD CONSTRAINT ANLA_R_ANLCT_FK FOREIGN KEY
(
CONFIDENCE_TYPE
)
REFERENCES R_ANL_CONFIDENCE_TYPE
(
CONFIDENCE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLA_R_ANLR_FK'
ALTER TABLE ANL_ACCURACY ADD CONSTRAINT ANLA_R_ANLR_FK FOREIGN KEY
(
REPEATABILITY_TYPE
)
REFERENCES R_ANL_REPEATABILITY
(
REPEATABILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLR_R_Q_FK'
ALTER TABLE ANL_ANALYSIS_REPORT ADD CONSTRAINT ANLR_R_Q_FK FOREIGN KEY
(
ANALYSIS_QUALITY
)
REFERENCES R_QUALITY
(
QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLR_R_SL_FK'
ALTER TABLE ANL_ANALYSIS_REPORT ADD CONSTRAINT ANLR_R_SL_FK FOREIGN KEY
(
SAMPLE_LOCATION
)
REFERENCES R_SAMPLE_LOCATION
(
SAMPLE_LOCATION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLR_R_STDYT_FK'
ALTER TABLE ANL_ANALYSIS_REPORT ADD CONSTRAINT ANLR_R_STDYT_FK FOREIGN KEY
(
STUDY_TYPE
)
REFERENCES R_STUDY_TYPE
(
STUDY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLR_STU_FK'
ALTER TABLE ANL_ANALYSIS_REPORT ADD CONSTRAINT ANLR_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
BASE_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLR_STU_FK2'
ALTER TABLE ANL_ANALYSIS_REPORT ADD CONSTRAINT ANLR_STU_FK2 FOREIGN KEY
(
STRAT_NAME_SET_ID,
TOP_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLAS_ANLR_FK'
ALTER TABLE ANL_ANALYSIS_STEP ADD CONSTRAINT ANLAS_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLAS_ANLM_FK'
ALTER TABLE ANL_ANALYSIS_STEP ADD CONSTRAINT ANLAS_ANLM_FK FOREIGN KEY
(
METHOD_SET_ID,
METHOD_ID
)
REFERENCES ANL_METHOD
(
METHOD_SET_ID,
METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLAS_R_Q_FK2'
ALTER TABLE ANL_ANALYSIS_STEP ADD CONSTRAINT ANLAS_R_Q_FK2 FOREIGN KEY
(
STEP_QUALITY_TYPE
)
REFERENCES R_QUALITY
(
QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLAS_R_Q_FK'
ALTER TABLE ANL_ANALYSIS_STEP ADD CONSTRAINT ANLAS_R_Q_FK FOREIGN KEY
(
SAMPLE_QUALITY
)
REFERENCES R_QUALITY
(
QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLAS_R_SFT_FK'
ALTER TABLE ANL_ANALYSIS_STEP ADD CONSTRAINT ANLAS_R_SFT_FK FOREIGN KEY
(
SAMPLE_FRACTION_TYPE
)
REFERENCES R_SAMPLE_FRACTION_TYPE
(
SAMPLE_FRACTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLAS_R_SPH_FK'
ALTER TABLE ANL_ANALYSIS_STEP ADD CONSTRAINT ANLAS_R_SPH_FK FOREIGN KEY
(
ANALYSIS_PHASE
)
REFERENCES R_SAMPLE_PHASE
(
PHASE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLB_ANLR_FK'
ALTER TABLE ANL_BA ADD CONSTRAINT ANLB_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLB_ANLAS_FK'
ALTER TABLE ANL_BA ADD CONSTRAINT ANLB_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLB_BA_FK'
ALTER TABLE ANL_BA ADD CONSTRAINT ANLB_BA_FK FOREIGN KEY
(
ANALYSIS_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLB_R_ABRT_FK'
ALTER TABLE ANL_BA ADD CONSTRAINT ANLB_R_ABRT_FK FOREIGN KEY
(
BA_ROLE_TYPE
)
REFERENCES R_ANL_BA_ROLE_TYPE
(
BA_ROLE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCA_ANLCM_FK'
ALTER TABLE ANL_CALC_ALIAS ADD CONSTRAINT ANLCA_ANLCM_FK FOREIGN KEY
(
CALCULATE_METHOD_ID
)
REFERENCES ANL_CALC_METHOD
(
CALCULATE_METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCA_ANLM_FK'
ALTER TABLE ANL_CALC_ALIAS ADD CONSTRAINT ANLCA_ANLM_FK FOREIGN KEY
(
ANL_METHOD_SET_ID,
ANL_METHOD_ID
)
REFERENCES ANL_METHOD
(
METHOD_SET_ID,
METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCA_BA_FK'
ALTER TABLE ANL_CALC_ALIAS ADD CONSTRAINT ANLCA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCA_PSWA_FK'
ALTER TABLE ANL_CALC_ALIAS ADD CONSTRAINT ANLCA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCA_R_ART_FK'
ALTER TABLE ANL_CALC_ALIAS ADD CONSTRAINT ANLCA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCA_R_ATY_FK'
ALTER TABLE ANL_CALC_ALIAS ADD CONSTRAINT ANLCA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCA_R_LANG_FK'
ALTER TABLE ANL_CALC_ALIAS ADD CONSTRAINT ANLCA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCA_SRCD_FK'
ALTER TABLE ANL_CALC_ALIAS ADD CONSTRAINT ANLCA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCE_ANLCM_FK'
ALTER TABLE ANL_CALC_EQUIV ADD CONSTRAINT ANLCE_ANLCM_FK FOREIGN KEY
(
CALCULATE_METHOD_ID2
)
REFERENCES ANL_CALC_METHOD
(
CALCULATE_METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCE_ANLCM_FK2'
ALTER TABLE ANL_CALC_EQUIV ADD CONSTRAINT ANLCE_ANLCM_FK2 FOREIGN KEY
(
CALCULATE_METHOD_ID1
)
REFERENCES ANL_CALC_METHOD
(
CALCULATE_METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCF_ANLCM_FK'
ALTER TABLE ANL_CALC_FORMULA ADD CONSTRAINT ANLCF_ANLCM_FK FOREIGN KEY
(
CALCULATE_METHOD_ID
)
REFERENCES ANL_CALC_METHOD
(
CALCULATE_METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCF_PC_FK'
ALTER TABLE ANL_CALC_FORMULA ADD CONSTRAINT ANLCF_PC_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCF_SUB_FK'
ALTER TABLE ANL_CALC_FORMULA ADD CONSTRAINT ANLCF_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCM_ANLCS_FK'
ALTER TABLE ANL_CALC_METHOD ADD CONSTRAINT ANLCM_ANLCS_FK FOREIGN KEY
(
CALC_SET_ID
)
REFERENCES ANL_CALC_SET
(
CALC_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCM_R_ANLFT_FK'
ALTER TABLE ANL_CALC_METHOD ADD CONSTRAINT ANLCM_R_ANLFT_FK FOREIGN KEY
(
FORMULA_TYPE
)
REFERENCES R_ANL_FORMULA_TYPE
(
FORMULA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCS_ANLM_FK'
ALTER TABLE ANL_CALC_SET ADD CONSTRAINT ANLCS_ANLM_FK FOREIGN KEY
(
METHOD_SET_ID,
METHOD_ID
)
REFERENCES ANL_METHOD
(
METHOD_SET_ID,
METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCS_BA_FK'
ALTER TABLE ANL_CALC_SET ADD CONSTRAINT ANLCS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCS_PSWA_FK'
ALTER TABLE ANL_CALC_SET ADD CONSTRAINT ANLCS_PSWA_FK FOREIGN KEY
(
SOFTWARE_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCS_SRCD_FK'
ALTER TABLE ANL_CALC_SET ADD CONSTRAINT ANLCS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCR_ANLCRS_FK'
ALTER TABLE ANL_COAL_RANK ADD CONSTRAINT ANLCR_ANLCRS_FK FOREIGN KEY
(
COAL_RANK_SCHEME_ID
)
REFERENCES ANL_COAL_RANK_SCHEME
(
COAL_RANK_SCHEME_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCRS_R_CRST_FK'
ALTER TABLE ANL_COAL_RANK_SCHEME ADD CONSTRAINT ANLCRS_R_CRST_FK FOREIGN KEY
(
COAL_RANK_SCHEME_TYPE
)
REFERENCES R_COAL_RANK_SCHEME_TYPE
(
COAL_RANK_SCHEME_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCRS_SRCD_FK'
ALTER TABLE ANL_COAL_RANK_SCHEME ADD CONSTRAINT ANLCRS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_ANLR_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_ANLAS_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_APP_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_A_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_BAAU_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_BAE_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_BAO_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_BA_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_CA_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_CEQ_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_CLSL_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_CON_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_CO_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_COT_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_C_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_EZ_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_ENT_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_EQ_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_FAC_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_FLD_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_FIN_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_FOS_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_HI_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_INS_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_INT_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_LR_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_LS_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_LIL_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_NOTI_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_OB_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_PASU_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_PDE_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_PL_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_PSYS_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_PT_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_PS_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_PSF_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_PSF_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
)
REFERENCES PROD_STRING_FORMATION
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_PROJ_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_RATE_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_RSCL_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_RSE_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_RMDSS_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_RMII_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_RMPI_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_RMTW_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_R_ANLCMPT_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_R_ANLCMPT_FK FOREIGN KEY
(
COMPONENT_TYPE
)
REFERENCES R_ANL_COMP_TYPE
(
ANL_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_R_WTT_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_R_WTT_FK FOREIGN KEY
(
WELL_TEST_TYPE
)
REFERENCES R_WELL_TEST_TYPE
(
WELL_TEST_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_SM_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_SM_FK FOREIGN KEY
(
SAMPLE_ID
)
REFERENCES SAMPLE
(
SAMPLE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_SS_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_SF_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_SPD_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_STFST_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_STU_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_SUB_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_W_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_WAC_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_WAC_FK FOREIGN KEY
(
UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_WCRD_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_WCRD_FK FOREIGN KEY
(
UWI,
SOURCE,
WELL_CORE_DESC_ID,
DESCRIPTION_OBS_NO
)
REFERENCES WELL_CORE_DESCRIPTION
(
UWI,
SOURCE,
CORE_ID,
DESCRIPTION_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_WT_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_WT_FK FOREIGN KEY
(
UWI,
WELL_TEST_SOURCE,
WELL_TEST_TYPE,
RUN_NUM,
TEST_NUM
)
REFERENCES WELL_TEST
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_WTRCV_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_WTRCV_FK FOREIGN KEY
(
UWI,
TEST_SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
RECOVERY_OBS_NO
)
REFERENCES WELL_TEST_RECOVERY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
RECOVERY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLCOMP_WO_FK'
ALTER TABLE ANL_COMPONENT ADD CONSTRAINT ANLCOMP_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLD_ANLR_FK'
ALTER TABLE ANL_DETAIL ADD CONSTRAINT ANLD_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLD_ANLAS_FK'
ALTER TABLE ANL_DETAIL ADD CONSTRAINT ANLD_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLD_ANLCM_FK'
ALTER TABLE ANL_DETAIL ADD CONSTRAINT ANLD_ANLCM_FK FOREIGN KEY
(
CALCULATE_METHOD_ID
)
REFERENCES ANL_CALC_METHOD
(
CALCULATE_METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLD_R_ANLDRV_FK'
ALTER TABLE ANL_DETAIL ADD CONSTRAINT ANLD_R_ANLDRV_FK FOREIGN KEY
(
REFERENCE_VALUE_TYPE
)
REFERENCES R_ANL_DETAIL_REF_VALUE
(
REFERENCE_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLD_R_ANLDT_FK'
ALTER TABLE ANL_DETAIL ADD CONSTRAINT ANLD_R_ANLDT_FK FOREIGN KEY
(
ANL_DETAIL_TYPE
)
REFERENCES R_ANL_DETAIL_TYPE
(
ANL_DETAIL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLD_R_ANLVM_FK'
ALTER TABLE ANL_DETAIL ADD CONSTRAINT ANLD_R_ANLVM_FK FOREIGN KEY
(
MEASUREMENT_TYPE
)
REFERENCES R_ANL_VALID_MEASUREMENT
(
MEASUREMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLD_SUB_FK'
ALTER TABLE ANL_DETAIL ADD CONSTRAINT ANLD_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLE_ANLR_FK'
ALTER TABLE ANL_ELEMENTAL ADD CONSTRAINT ANLE_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLE_ANLAS_FK'
ALTER TABLE ANL_ELEMENTAL ADD CONSTRAINT ANLE_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLE_R_ANLVM_FK'
ALTER TABLE ANL_ELEMENTAL ADD CONSTRAINT ANLE_R_ANLVM_FK FOREIGN KEY
(
MEASUREMENT_TYPE
)
REFERENCES R_ANL_VALID_MEASUREMENT
(
MEASUREMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLED_ANLR_FK'
ALTER TABLE ANL_ELEMENTAL_DETAIL ADD CONSTRAINT ANLED_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLED_ANLAS_FK'
ALTER TABLE ANL_ELEMENTAL_DETAIL ADD CONSTRAINT ANLED_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLED_ANLCM_FK'
ALTER TABLE ANL_ELEMENTAL_DETAIL ADD CONSTRAINT ANLED_ANLCM_FK FOREIGN KEY
(
CALCULATE_METHOD_ID
)
REFERENCES ANL_CALC_METHOD
(
CALCULATE_METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLED_R_ANLEVC_FK'
ALTER TABLE ANL_ELEMENTAL_DETAIL ADD CONSTRAINT ANLED_R_ANLEVC_FK FOREIGN KEY
(
VALUE_CODE
)
REFERENCES R_ANL_ELEMENT_VALUE_CODE
(
VALUE_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLED_R_ANLEVT_FK'
ALTER TABLE ANL_ELEMENTAL_DETAIL ADD CONSTRAINT ANLED_R_ANLEVT_FK FOREIGN KEY
(
ANALYSIS_VALUE_TYPE
)
REFERENCES R_ANL_ELEMENT_VALUE_TYPE
(
ANL_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLED_R_ANLVM_FK'
ALTER TABLE ANL_ELEMENTAL_DETAIL ADD CONSTRAINT ANLED_R_ANLVM_FK FOREIGN KEY
(
MEASUREMENT_TYPE
)
REFERENCES R_ANL_VALID_MEASUREMENT
(
MEASUREMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLED_R_VQ1_FK'
ALTER TABLE ANL_ELEMENTAL_DETAIL ADD CONSTRAINT ANLED_R_VQ1_FK FOREIGN KEY
(
VALUE_QUALITY
)
REFERENCES R_VALUE_QUALITY
(
VALUE_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLED_SUB_FK'
ALTER TABLE ANL_ELEMENTAL_DETAIL ADD CONSTRAINT ANLED_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLEQP_ANLR_FK'
ALTER TABLE ANL_EQUIP ADD CONSTRAINT ANLEQP_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLEQP_ANLAS_FK'
ALTER TABLE ANL_EQUIP ADD CONSTRAINT ANLEQP_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLEQP_BA_FK'
ALTER TABLE ANL_EQUIP ADD CONSTRAINT ANLEQP_BA_FK FOREIGN KEY
(
LAB_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLEQP_CEQ_FK'
ALTER TABLE ANL_EQUIP ADD CONSTRAINT ANLEQP_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLEQP_EQ_FK'
ALTER TABLE ANL_EQUIP ADD CONSTRAINT ANLEQP_EQ_FK FOREIGN KEY
(
EQUIP_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLEQP_R_ANLER_FK'
ALTER TABLE ANL_EQUIP ADD CONSTRAINT ANLEQP_R_ANLER_FK FOREIGN KEY
(
EQUIP_ROLE
)
REFERENCES R_ANL_EQUIP_ROLE
(
ANL_EQUIP_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLF_ANLR_FK'
ALTER TABLE ANL_FLUOR ADD CONSTRAINT ANLF_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLF_ANLAS_FK'
ALTER TABLE ANL_FLUOR ADD CONSTRAINT ANLF_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLF_R_COL_FK'
ALTER TABLE ANL_FLUOR ADD CONSTRAINT ANLF_R_COL_FK FOREIGN KEY
(
FROM_COLOR
)
REFERENCES R_COLOR
(
COLOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLF_R_COL_FK2'
ALTER TABLE ANL_FLUOR ADD CONSTRAINT ANLF_R_COL_FK2 FOREIGN KEY
(
TO_COLOR
)
REFERENCES R_COLOR
(
COLOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLF_R_MBT_FK'
ALTER TABLE ANL_FLUOR ADD CONSTRAINT ANLF_R_MBT_FK FOREIGN KEY
(
TO_MOBILITY_TYPE
)
REFERENCES R_MOBILITY_TYPE
(
MOBILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLF_R_MBT_FK2'
ALTER TABLE ANL_FLUOR ADD CONSTRAINT ANLF_R_MBT_FK2 FOREIGN KEY
(
FROM_MOBILITY_TYPE
)
REFERENCES R_MOBILITY_TYPE
(
MOBILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGA_ANLR_FK'
ALTER TABLE ANL_GAS_ANALYSIS ADD CONSTRAINT ANLGA_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGA_ANLAS_FK'
ALTER TABLE ANL_GAS_ANALYSIS ADD CONSTRAINT ANLGA_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGA_SUB_FK'
ALTER TABLE ANL_GAS_ANALYSIS ADD CONSTRAINT ANLGA_SUB_FK FOREIGN KEY
(
FLUID_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGC_ANLR_FK'
ALTER TABLE ANL_GAS_CHRO ADD CONSTRAINT ANLGC_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGC_ANLAS_FK'
ALTER TABLE ANL_GAS_CHRO ADD CONSTRAINT ANLGC_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGC_ANLCM_FK'
ALTER TABLE ANL_GAS_CHRO ADD CONSTRAINT ANLGC_ANLCM_FK FOREIGN KEY
(
CALCULATE_METHOD_ID
)
REFERENCES ANL_CALC_METHOD
(
CALCULATE_METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGC_R_ANLVM_FK'
ALTER TABLE ANL_GAS_CHRO ADD CONSTRAINT ANLGC_R_ANLVM_FK FOREIGN KEY
(
MEASUREMENT_TYPE
)
REFERENCES R_ANL_VALID_MEASUREMENT
(
MEASUREMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGC_R_GAVC_FK'
ALTER TABLE ANL_GAS_CHRO ADD CONSTRAINT ANLGC_R_GAVC_FK FOREIGN KEY
(
ANL_VALUE_CODE
)
REFERENCES R_GAS_ANL_VALUE_CODE
(
GAS_ANL_VALUE_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGC_R_GAVT_FK'
ALTER TABLE ANL_GAS_CHRO ADD CONSTRAINT ANLGC_R_GAVT_FK FOREIGN KEY
(
GAS_ANL_VALUE_TYPE
)
REFERENCES R_GAS_ANL_VALUE_TYPE
(
GAS_ANL_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGC_SUB_FK'
ALTER TABLE ANL_GAS_CHRO ADD CONSTRAINT ANLGC_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGC_SUB_FK4'
ALTER TABLE ANL_GAS_CHRO ADD CONSTRAINT ANLGC_SUB_FK4 FOREIGN KEY
(
PARENT_ION_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGC_SUB_FK3'
ALTER TABLE ANL_GAS_CHRO ADD CONSTRAINT ANLGC_SUB_FK3 FOREIGN KEY
(
DAUGHTER_ION_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGC_SUB_FK2'
ALTER TABLE ANL_GAS_CHRO ADD CONSTRAINT ANLGC_SUB_FK2 FOREIGN KEY
(
QUALIFIER_ION_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGCP_ANLR_FK'
ALTER TABLE ANL_GAS_COMPOSITION ADD CONSTRAINT ANLGCP_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGCP_ANLAS_FK'
ALTER TABLE ANL_GAS_COMPOSITION ADD CONSTRAINT ANLGCP_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGCP_ANLCM_FK'
ALTER TABLE ANL_GAS_COMPOSITION ADD CONSTRAINT ANLGCP_ANLCM_FK FOREIGN KEY
(
CALCULATE_METHOD_ID
)
REFERENCES ANL_CALC_METHOD
(
CALCULATE_METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGCP_SUB_FK'
ALTER TABLE ANL_GAS_COMPOSITION ADD CONSTRAINT ANLGCP_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGD_ANLR_FK'
ALTER TABLE ANL_GAS_DETAIL ADD CONSTRAINT ANLGD_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGD_ANLAS_FK'
ALTER TABLE ANL_GAS_DETAIL ADD CONSTRAINT ANLGD_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGD_ANLCM_FK'
ALTER TABLE ANL_GAS_DETAIL ADD CONSTRAINT ANLGD_ANLCM_FK FOREIGN KEY
(
CALCULATE_METHOD_ID
)
REFERENCES ANL_CALC_METHOD
(
CALCULATE_METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGD_R_ANLGP_FK'
ALTER TABLE ANL_GAS_DETAIL ADD CONSTRAINT ANLGD_R_ANLGP_FK FOREIGN KEY
(
ANALYSIS_PROPERTY
)
REFERENCES R_ANL_GAS_PROPERTY
(
ANALYSIS_PROPERTY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGD_R_ANLGPC_FK'
ALTER TABLE ANL_GAS_DETAIL ADD CONSTRAINT ANLGD_R_ANLGPC_FK FOREIGN KEY
(
ANALYSIS_PROPERTY,
ANALYSIS_VALUE_CODE
)
REFERENCES R_ANL_GAS_PROPERTY_CODE
(
ANALYSIS_PROPERTY,
PROPERTY_VALUE_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGD_R_ANLVM_FK'
ALTER TABLE ANL_GAS_DETAIL ADD CONSTRAINT ANLGD_R_ANLVM_FK FOREIGN KEY
(
MEASUREMENT_TYPE
)
REFERENCES R_ANL_VALID_MEASUREMENT
(
MEASUREMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGD_SUB_FK'
ALTER TABLE ANL_GAS_DETAIL ADD CONSTRAINT ANLGD_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGH_ANLR_FK'
ALTER TABLE ANL_GAS_HEAT ADD CONSTRAINT ANLGH_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGH_ANLAS_FK'
ALTER TABLE ANL_GAS_HEAT ADD CONSTRAINT ANLGH_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGH_ANLCM_FK'
ALTER TABLE ANL_GAS_HEAT ADD CONSTRAINT ANLGH_ANLCM_FK FOREIGN KEY
(
CALCULATE_METHOD_ID
)
REFERENCES ANL_CALC_METHOD
(
CALCULATE_METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGH_R_HCM_FK'
ALTER TABLE ANL_GAS_HEAT ADD CONSTRAINT ANLGH_R_HCM_FK FOREIGN KEY
(
HEAT_CONTENT_METHOD
)
REFERENCES R_HEAT_CONTENT_METHOD
(
HEAT_CONTENT_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGP_ANLR_FK'
ALTER TABLE ANL_GAS_PRESS ADD CONSTRAINT ANLGP_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGP_ANLAS_FK'
ALTER TABLE ANL_GAS_PRESS ADD CONSTRAINT ANLGP_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGP_ANLCM_FK'
ALTER TABLE ANL_GAS_PRESS ADD CONSTRAINT ANLGP_ANLCM_FK FOREIGN KEY
(
CALCULATE_METHOD_ID
)
REFERENCES ANL_CALC_METHOD
(
CALCULATE_METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLGP_R_ML_FK'
ALTER TABLE ANL_GAS_PRESS ADD CONSTRAINT ANLGP_R_ML_FK FOREIGN KEY
(
MEASUREMENT_LOCATION
)
REFERENCES R_MEASUREMENT_LOC
(
MEASUREMENT_LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLI_ANLR_FK'
ALTER TABLE ANL_ISOTOPE ADD CONSTRAINT ANLI_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLI_ANLAS_FK'
ALTER TABLE ANL_ISOTOPE ADD CONSTRAINT ANLI_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLI_ANLCM_FK'
ALTER TABLE ANL_ISOTOPE ADD CONSTRAINT ANLI_ANLCM_FK FOREIGN KEY
(
CALCULATE_METHOD_ID
)
REFERENCES ANL_CALC_METHOD
(
CALCULATE_METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLI_ANLIS_FK'
ALTER TABLE ANL_ISOTOPE ADD CONSTRAINT ANLI_ANLIS_FK FOREIGN KEY
(
STANDARD_ID,
SUBSTANCE_ID
)
REFERENCES ANL_ISOTOPE_STD
(
STANDARD_ID,
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLI_R_ANLVM_FK'
ALTER TABLE ANL_ISOTOPE ADD CONSTRAINT ANLI_R_ANLVM_FK FOREIGN KEY
(
MEASUREMENT_TYPE
)
REFERENCES R_ANL_VALID_MEASUREMENT
(
MEASUREMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLI_SUB_FK'
ALTER TABLE ANL_ISOTOPE ADD CONSTRAINT ANLI_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLIS_SUB_FK'
ALTER TABLE ANL_ISOTOPE_STD ADD CONSTRAINT ANLIS_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLLC_ANLR_FK'
ALTER TABLE ANL_LIQUID_CHRO ADD CONSTRAINT ANLLC_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLLC_ANLAS_FK'
ALTER TABLE ANL_LIQUID_CHRO ADD CONSTRAINT ANLLC_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLLC_R_ANLVM_FK'
ALTER TABLE ANL_LIQUID_CHRO ADD CONSTRAINT ANLLC_R_ANLVM_FK FOREIGN KEY
(
MEASUREMENT_TYPE
)
REFERENCES R_ANL_VALID_MEASUREMENT
(
MEASUREMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLLCD_ANLR_FK'
ALTER TABLE ANL_LIQUID_CHRO_DETAIL ADD CONSTRAINT ANLLCD_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLLCD_ANLAS_FK'
ALTER TABLE ANL_LIQUID_CHRO_DETAIL ADD CONSTRAINT ANLLCD_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLLCD_ANLCM_FK'
ALTER TABLE ANL_LIQUID_CHRO_DETAIL ADD CONSTRAINT ANLLCD_ANLCM_FK FOREIGN KEY
(
CALCULATE_METHOD_ID
)
REFERENCES ANL_CALC_METHOD
(
CALCULATE_METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLLCD_R_ANLCP_FK'
ALTER TABLE ANL_LIQUID_CHRO_DETAIL ADD CONSTRAINT ANLLCD_R_ANLCP_FK FOREIGN KEY
(
CHRO_PROPERTY_TYPE
)
REFERENCES R_ANL_CHRO_PROPERTY
(
CHRO_PROPERTY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLLCD_R_ANLVM_FK'
ALTER TABLE ANL_LIQUID_CHRO_DETAIL ADD CONSTRAINT ANLLCD_R_ANLVM_FK FOREIGN KEY
(
MEASUREMENT_TYPE
)
REFERENCES R_ANL_VALID_MEASUREMENT
(
MEASUREMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLLCD_SUB_FK'
ALTER TABLE ANL_LIQUID_CHRO_DETAIL ADD CONSTRAINT ANLLCD_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLMAC_ANLR_FK'
ALTER TABLE ANL_MACERAL ADD CONSTRAINT ANLMAC_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLMAC_ANLAS_FK'
ALTER TABLE ANL_MACERAL ADD CONSTRAINT ANLMAC_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLMAC_R_MAT_FK'
ALTER TABLE ANL_MACERAL ADD CONSTRAINT ANLMAC_R_MAT_FK FOREIGN KEY
(
MACERAL_AMOUNT_TYPE
)
REFERENCES R_MACERAL_AMOUNT_TYPE
(
MACERAL_AMOUNT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLMAC_SUB_FK'
ALTER TABLE ANL_MACERAL ADD CONSTRAINT ANLMAC_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLMACM_ANLR_FK'
ALTER TABLE ANL_MACERAL_MATURITY ADD CONSTRAINT ANLMACM_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLMACM_ANLAS_FK'
ALTER TABLE ANL_MACERAL_MATURITY ADD CONSTRAINT ANLMACM_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLMACM_ANLCR_FK'
ALTER TABLE ANL_MACERAL_MATURITY ADD CONSTRAINT ANLMACM_ANLCR_FK FOREIGN KEY
(
COAL_RANK_ID
)
REFERENCES ANL_COAL_RANK
(
COAL_RANK_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLMACM_R_COL_FK'
ALTER TABLE ANL_MACERAL_MATURITY ADD CONSTRAINT ANLMACM_R_COL_FK FOREIGN KEY
(
FLUOR_COLOR
)
REFERENCES R_COLOR
(
COLOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLMACM_SUB_FK'
ALTER TABLE ANL_MACERAL_MATURITY ADD CONSTRAINT ANLMACM_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLM_ANLMS_FK'
ALTER TABLE ANL_METHOD ADD CONSTRAINT ANLM_ANLMS_FK FOREIGN KEY
(
METHOD_SET_ID
)
REFERENCES ANL_METHOD_SET
(
METHOD_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLM_R_MTHT_FK'
ALTER TABLE ANL_METHOD ADD CONSTRAINT ANLM_R_MTHT_FK FOREIGN KEY
(
METHOD_TYPE
)
REFERENCES R_METHOD_TYPE
(
METHOD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLM_R_SPC_FK'
ALTER TABLE ANL_METHOD ADD CONSTRAINT ANLM_R_SPC_FK FOREIGN KEY
(
PREPARATION_CLASS
)
REFERENCES R_SAMPLE_PREP_CLASS
(
PREPARATION_CLASS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLM_SRCD_FK'
ALTER TABLE ANL_METHOD ADD CONSTRAINT ANLM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLMA_ANLM_FK'
ALTER TABLE ANL_METHOD_ALIAS ADD CONSTRAINT ANLMA_ANLM_FK FOREIGN KEY
(
METHOD_SET_ID,
METHOD_ID
)
REFERENCES ANL_METHOD
(
METHOD_SET_ID,
METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLMA_BA_FK'
ALTER TABLE ANL_METHOD_ALIAS ADD CONSTRAINT ANLMA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLMA_CEQ_FK'
ALTER TABLE ANL_METHOD_ALIAS ADD CONSTRAINT ANLMA_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLMA_PSWA_FK'
ALTER TABLE ANL_METHOD_ALIAS ADD CONSTRAINT ANLMA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLMA_R_ART_FK'
ALTER TABLE ANL_METHOD_ALIAS ADD CONSTRAINT ANLMA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLMA_R_ATY_FK'
ALTER TABLE ANL_METHOD_ALIAS ADD CONSTRAINT ANLMA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLMA_R_LANG_FK'
ALTER TABLE ANL_METHOD_ALIAS ADD CONSTRAINT ANLMA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLMA_SRCD_FK'
ALTER TABLE ANL_METHOD_ALIAS ADD CONSTRAINT ANLMA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLME_ANLM_FK'
ALTER TABLE ANL_METHOD_EQUIV ADD CONSTRAINT ANLME_ANLM_FK FOREIGN KEY
(
METHOD_SET_ID1,
METHOD_ID1
)
REFERENCES ANL_METHOD
(
METHOD_SET_ID,
METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLME_ANLM_FK2'
ALTER TABLE ANL_METHOD_EQUIV ADD CONSTRAINT ANLME_ANLM_FK2 FOREIGN KEY
(
METHOD_SET_ID2,
METHOD_ID2
)
REFERENCES ANL_METHOD
(
METHOD_SET_ID,
METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLME_R_ANLME_FK'
ALTER TABLE ANL_METHOD_EQUIV ADD CONSTRAINT ANLME_R_ANLME_FK FOREIGN KEY
(
METHOD_EQUIV_TYPE
)
REFERENCES R_ANL_METHOD_EQUIV_TYPE
(
METHOD_EQUIV_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLMP_ANLM_FK'
ALTER TABLE ANL_METHOD_PARM ADD CONSTRAINT ANLMP_ANLM_FK FOREIGN KEY
(
METHOD_SET_ID,
METHOD_ID
)
REFERENCES ANL_METHOD
(
METHOD_SET_ID,
METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLMP_R_ANLPT_FK'
ALTER TABLE ANL_METHOD_PARM ADD CONSTRAINT ANLMP_R_ANLPT_FK FOREIGN KEY
(
PARAMETER_TYPE
)
REFERENCES R_ANL_PARAMETER_TYPE
(
PARAMETER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLMP_R_ANLRV_FK'
ALTER TABLE ANL_METHOD_PARM ADD CONSTRAINT ANLMP_R_ANLRV_FK FOREIGN KEY
(
REFERENCE_VALUE_TYPE
)
REFERENCES R_ANL_REF_VALUE
(
REFERENCE_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLMP_R_ANLVM_FK'
ALTER TABLE ANL_METHOD_PARM ADD CONSTRAINT ANLMP_R_ANLVM_FK FOREIGN KEY
(
MEASUREMENT_TYPE
)
REFERENCES R_ANL_VALID_MEASUREMENT
(
MEASUREMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLMP_SUB_FK'
ALTER TABLE ANL_METHOD_PARM ADD CONSTRAINT ANLMP_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLMS_BA_FK'
ALTER TABLE ANL_METHOD_SET ADD CONSTRAINT ANLMS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLMS_R_ANLMST_FK'
ALTER TABLE ANL_METHOD_SET ADD CONSTRAINT ANLMS_R_ANLMST_FK FOREIGN KEY
(
METHOD_SET_TYPE
)
REFERENCES R_ANL_METHOD_SET_TYPE
(
METHOD_SET_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLMS_SRCD_FK'
ALTER TABLE ANL_METHOD_SET ADD CONSTRAINT ANLMS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOA_ANLR_FK'
ALTER TABLE ANL_OIL_ANALYSIS ADD CONSTRAINT ANLOA_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOA_ANLAS_FK8'
ALTER TABLE ANL_OIL_ANALYSIS ADD CONSTRAINT ANLOA_ANLAS_FK8 FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
DISTILLATION_STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOA_ANLAS_FK9'
ALTER TABLE ANL_OIL_ANALYSIS ADD CONSTRAINT ANLOA_ANLAS_FK9 FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
WAX_CONTENT_STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOA_ANLAS_FK'
ALTER TABLE ANL_OIL_ANALYSIS ADD CONSTRAINT ANLOA_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
ASPH_CONTENT_STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOA_ANLAS_FK10'
ALTER TABLE ANL_OIL_ANALYSIS ADD CONSTRAINT ANLOA_ANLAS_FK10 FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
SEDIMENT_STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOA_ANLAS_FK11'
ALTER TABLE ANL_OIL_ANALYSIS ADD CONSTRAINT ANLOA_ANLAS_FK11 FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
OIL_DENSITY_STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOA_ANLAS_FK12'
ALTER TABLE ANL_OIL_ANALYSIS ADD CONSTRAINT ANLOA_ANLAS_FK12 FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
OIL_GRAVITY_STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOA_ANLAS_FK2'
ALTER TABLE ANL_OIL_ANALYSIS ADD CONSTRAINT ANLOA_ANLAS_FK2 FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
OIL_GRAVITY_TEMP_STEP_SEQ
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOA_ANLAS_FK3'
ALTER TABLE ANL_OIL_ANALYSIS ADD CONSTRAINT ANLOA_ANLAS_FK3 FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
SHRINK_FACTOR_STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOA_ANLAS_FK4'
ALTER TABLE ANL_OIL_ANALYSIS ADD CONSTRAINT ANLOA_ANLAS_FK4 FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
CLOUD_POINT_STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOA_ANLAS_FK5'
ALTER TABLE ANL_OIL_ANALYSIS ADD CONSTRAINT ANLOA_ANLAS_FK5 FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
OIL_COLOR_STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOA_ANLAS_FK6'
ALTER TABLE ANL_OIL_ANALYSIS ADD CONSTRAINT ANLOA_ANLAS_FK6 FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
DEW_POINT_STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOA_ANLAS_FK7'
ALTER TABLE ANL_OIL_ANALYSIS ADD CONSTRAINT ANLOA_ANLAS_FK7 FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
FLASH_POINT_STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOA_R_COL_FK'
ALTER TABLE ANL_OIL_ANALYSIS ADD CONSTRAINT ANLOA_R_COL_FK FOREIGN KEY
(
OIL_COLOR
)
REFERENCES R_COLOR
(
COLOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOA_SUB_FK'
ALTER TABLE ANL_OIL_ANALYSIS ADD CONSTRAINT ANLOA_SUB_FK FOREIGN KEY
(
DISTILLATION_BASE_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOA_SUB_FK2'
ALTER TABLE ANL_OIL_ANALYSIS ADD CONSTRAINT ANLOA_SUB_FK2 FOREIGN KEY
(
OIL_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOD_ANLR_FK'
ALTER TABLE ANL_OIL_DETAIL ADD CONSTRAINT ANLOD_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOD_ANLAS_FK'
ALTER TABLE ANL_OIL_DETAIL ADD CONSTRAINT ANLOD_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOD_ANLCM_FK'
ALTER TABLE ANL_OIL_DETAIL ADD CONSTRAINT ANLOD_ANLCM_FK FOREIGN KEY
(
CALCULATE_METHOD_ID
)
REFERENCES ANL_CALC_METHOD
(
CALCULATE_METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOD_R_AP_FK'
ALTER TABLE ANL_OIL_DETAIL ADD CONSTRAINT ANLOD_R_AP_FK FOREIGN KEY
(
ANALYSIS_PROPERTY
)
REFERENCES R_ANALYSIS_PROPERTY
(
ANALYSIS_PROPERTY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOD_R_ANLOPC_FK'
ALTER TABLE ANL_OIL_DETAIL ADD CONSTRAINT ANLOD_R_ANLOPC_FK FOREIGN KEY
(
ANALYSIS_PROPERTY,
ANALYSIS_VALUE_CODE
)
REFERENCES R_ANL_OIL_PROPERTY_CODE
(
ANALYSIS_PROPERTY,
PROPERTY_VALUE_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOD_R_ANLVM_FK'
ALTER TABLE ANL_OIL_DETAIL ADD CONSTRAINT ANLOD_R_ANLVM_FK FOREIGN KEY
(
MEASUREMENT_TYPE
)
REFERENCES R_ANL_VALID_MEASUREMENT
(
MEASUREMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOD_R_OVC_FK'
ALTER TABLE ANL_OIL_DETAIL ADD CONSTRAINT ANLOD_R_OVC_FK FOREIGN KEY
(
ANALYSIS_VALUE_CODE
)
REFERENCES R_OIL_VALUE_CODE
(
OIL_VALUE_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOD_SUB_FK'
ALTER TABLE ANL_OIL_DETAIL ADD CONSTRAINT ANLOD_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLODL_ANLR_FK'
ALTER TABLE ANL_OIL_DISTILL ADD CONSTRAINT ANLODL_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLODL_ANLAS_FK'
ALTER TABLE ANL_OIL_DISTILL ADD CONSTRAINT ANLODL_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLODL_ANLCM_FK'
ALTER TABLE ANL_OIL_DISTILL ADD CONSTRAINT ANLODL_ANLCM_FK FOREIGN KEY
(
CALCULATE_METHOD_ID
)
REFERENCES ANL_CALC_METHOD
(
CALCULATE_METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLODL_R_VF_FK'
ALTER TABLE ANL_OIL_DISTILL ADD CONSTRAINT ANLODL_R_VF_FK FOREIGN KEY
(
VOLUME_FRACTION_TYPE
)
REFERENCES R_VOLUME_FRACTION
(
VOLUME_FRACTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLODL_SUB_FK'
ALTER TABLE ANL_OIL_DISTILL ADD CONSTRAINT ANLODL_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOF_ANLR_FK'
ALTER TABLE ANL_OIL_FRACTION ADD CONSTRAINT ANLOF_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOF_ANLAS_FK'
ALTER TABLE ANL_OIL_FRACTION ADD CONSTRAINT ANLOF_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOF_ANLCM_FK'
ALTER TABLE ANL_OIL_FRACTION ADD CONSTRAINT ANLOF_ANLCM_FK FOREIGN KEY
(
CALCULATE_METHOD_ID
)
REFERENCES ANL_CALC_METHOD
(
CALCULATE_METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOF_SUB_FK'
ALTER TABLE ANL_OIL_FRACTION ADD CONSTRAINT ANLOF_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOV_ANLR_FK'
ALTER TABLE ANL_OIL_VISCOSITY ADD CONSTRAINT ANLOV_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOV_ANLAS_FK'
ALTER TABLE ANL_OIL_VISCOSITY ADD CONSTRAINT ANLOV_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLOV_SUB_FK'
ALTER TABLE ANL_OIL_VISCOSITY ADD CONSTRAINT ANLOV_SUB_FK FOREIGN KEY
(
OIL_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLP_ANLR_FK'
ALTER TABLE ANL_PALEO ADD CONSTRAINT ANLP_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLP_ANLAS_FK'
ALTER TABLE ANL_PALEO ADD CONSTRAINT ANLP_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLP_ANLCM_FK'
ALTER TABLE ANL_PALEO ADD CONSTRAINT ANLP_ANLCM_FK FOREIGN KEY
(
CALCULATE_METHOD_ID
)
REFERENCES ANL_CALC_METHOD
(
CALCULATE_METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLP_R_PAT_FK'
ALTER TABLE ANL_PALEO ADD CONSTRAINT ANLP_R_PAT_FK FOREIGN KEY
(
AMOUNT_TYPE
)
REFERENCES R_PALEO_AMOUNT_TYPE
(
PALEO_AMOUNT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLP_SUB_FK'
ALTER TABLE ANL_PALEO ADD CONSTRAINT ANLP_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPM_ANLR_FK'
ALTER TABLE ANL_PALEO_MATURITY ADD CONSTRAINT ANLPM_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPM_ANLAS_FK'
ALTER TABLE ANL_PALEO_MATURITY ADD CONSTRAINT ANLPM_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPM_R_COL_FK2'
ALTER TABLE ANL_PALEO_MATURITY ADD CONSTRAINT ANLPM_R_COL_FK2 FOREIGN KEY
(
TAI_COLOR
)
REFERENCES R_COLOR
(
COLOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPM_R_COL_FK'
ALTER TABLE ANL_PALEO_MATURITY ADD CONSTRAINT ANLPM_R_COL_FK FOREIGN KEY
(
FLUOR_COLOR
)
REFERENCES R_COLOR
(
COLOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPM_R_COL_FK1'
ALTER TABLE ANL_PALEO_MATURITY ADD CONSTRAINT ANLPM_R_COL_FK1 FOREIGN KEY
(
SCI_COLOR
)
REFERENCES R_COLOR
(
COLOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPM_R_MM_FK'
ALTER TABLE ANL_PALEO_MATURITY ADD CONSTRAINT ANLPM_R_MM_FK FOREIGN KEY
(
MATURITY_METHOD_TYPE
)
REFERENCES R_MATURITY_METHOD
(
MATURITY_METHOD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPM_SUB_FK'
ALTER TABLE ANL_PALEO_MATURITY ADD CONSTRAINT ANLPM_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPRM_ANLR_FK'
ALTER TABLE ANL_PARM ADD CONSTRAINT ANLPRM_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPRM_ANLAS_FK'
ALTER TABLE ANL_PARM ADD CONSTRAINT ANLPRM_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPRM_ANLEQP_FK'
ALTER TABLE ANL_PARM ADD CONSTRAINT ANLPRM_ANLEQP_FK FOREIGN KEY
(
ANALYSIS_ID,
SOURCE,
EQUIP_OBS_NO
)
REFERENCES ANL_EQUIP
(
ANALYSIS_ID,
ANL_SOURCE,
EQUIP_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPRM_ANLMP_FK'
ALTER TABLE ANL_PARM ADD CONSTRAINT ANLPRM_ANLMP_FK FOREIGN KEY
(
METHOD_SET_ID,
METHOD_ID,
PARAMETER_TYPE,
METHOD_PARM_OBS_NO
)
REFERENCES ANL_METHOD_PARM
(
METHOD_SET_ID,
METHOD_ID,
PARAMETER_TYPE,
METHOD_PARM_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPRM_BA_FK'
ALTER TABLE ANL_PARM ADD CONSTRAINT ANLPRM_BA_FK FOREIGN KEY
(
PARAMETER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPRM_CEQ_FK'
ALTER TABLE ANL_PARM ADD CONSTRAINT ANLPRM_CEQ_FK FOREIGN KEY
(
CAT_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPRM_EQ_FK'
ALTER TABLE ANL_PARM ADD CONSTRAINT ANLPRM_EQ_FK FOREIGN KEY
(
EQUIP_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPRM_R_ANLPT_FK'
ALTER TABLE ANL_PARM ADD CONSTRAINT ANLPRM_R_ANLPT_FK FOREIGN KEY
(
PARAMETER_TYPE
)
REFERENCES R_ANL_PARAMETER_TYPE
(
PARAMETER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPRM_R_ANLRV_FK'
ALTER TABLE ANL_PARM ADD CONSTRAINT ANLPRM_R_ANLRV_FK FOREIGN KEY
(
REFERENCE_VALUE_TYPE
)
REFERENCES R_ANL_REF_VALUE
(
REFERENCE_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPRM_SUB_FK'
ALTER TABLE ANL_PARM ADD CONSTRAINT ANLPRM_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPRB_ANLR_FK'
ALTER TABLE ANL_PROBLEM ADD CONSTRAINT ANLPRB_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPRB_ANLAS_FK'
ALTER TABLE ANL_PROBLEM ADD CONSTRAINT ANLPRB_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
RESOLUTION_STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPRB_ANLAS_FK2'
ALTER TABLE ANL_PROBLEM ADD CONSTRAINT ANLPRB_ANLAS_FK2 FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPRB_ANLVP_FK'
ALTER TABLE ANL_PROBLEM ADD CONSTRAINT ANLPRB_ANLVP_FK FOREIGN KEY
(
ACTIVITY_SET_ID,
METHOD_ID,
VALID_PROBLEM_OBS_NO
)
REFERENCES ANL_VALID_PROBLEM
(
METHOD_SET_ID,
METHOD_ID,
PROBLEM_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPRB_BA_FK'
ALTER TABLE ANL_PROBLEM ADD CONSTRAINT ANLPRB_BA_FK FOREIGN KEY
(
RESOLVED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPRB_PC_FK'
ALTER TABLE ANL_PROBLEM ADD CONSTRAINT ANLPRB_PC_FK FOREIGN KEY
(
REFERENCED_SYSTEM_ID,
REFERENCED_TABLE_NAME,
REFERENCED_COLUMN_NAME
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPRB_PT_FK'
ALTER TABLE ANL_PROBLEM ADD CONSTRAINT ANLPRB_PT_FK FOREIGN KEY
(
REFERENCED_SYSTEM_ID,
REFERENCED_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPRB_R_ANLPBR_FK'
ALTER TABLE ANL_PROBLEM ADD CONSTRAINT ANLPRB_R_ANLPBR_FK FOREIGN KEY
(
RESOLUTION_METHOD
)
REFERENCES R_ANL_PROBLEM_RESOLUTION
(
RESOLUTION_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPRB_R_ANLPR_FK'
ALTER TABLE ANL_PROBLEM ADD CONSTRAINT ANLPRB_R_ANLPR_FK FOREIGN KEY
(
PROBLEM_RESULT
)
REFERENCES R_ANL_PROBLEM_RESULT
(
PROBLEM_RESULT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPRB_R_ANLPS_FK'
ALTER TABLE ANL_PROBLEM ADD CONSTRAINT ANLPRB_R_ANLPS_FK FOREIGN KEY
(
PROBLEM_SEVERITY
)
REFERENCES R_ANL_PROBLEM_SEVERITY
(
PROBLEM_SEVERITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPRB_R_ANLPRBT_FK'
ALTER TABLE ANL_PROBLEM ADD CONSTRAINT ANLPRB_R_ANLPRBT_FK FOREIGN KEY
(
PROBLEM_TYPE
)
REFERENCES R_ANL_PROBLEM_TYPE
(
PROBLEM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPYR_ANLR_FK'
ALTER TABLE ANL_PYROLYSIS ADD CONSTRAINT ANLPYR_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPYR_ANLAS_FK'
ALTER TABLE ANL_PYROLYSIS ADD CONSTRAINT ANLPYR_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLPYR_ANLCM_FK'
ALTER TABLE ANL_PYROLYSIS ADD CONSTRAINT ANLPYR_ANLCM_FK FOREIGN KEY
(
CALCULATE_METHOD_ID
)
REFERENCES ANL_CALC_METHOD
(
CALCULATE_METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLQT_ANLR_FK'
ALTER TABLE ANL_QGF_TSF ADD CONSTRAINT ANLQT_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLQT_ANLAS_FK'
ALTER TABLE ANL_QGF_TSF ADD CONSTRAINT ANLQT_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLRMK_ANLR_FK'
ALTER TABLE ANL_REMARK ADD CONSTRAINT ANLRMK_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLRMK_ANLAS_FK'
ALTER TABLE ANL_REMARK ADD CONSTRAINT ANLRMK_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLRMK_BA_FK'
ALTER TABLE ANL_REMARK ADD CONSTRAINT ANLRMK_BA_FK FOREIGN KEY
(
REMARK_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLRMK_PC_FK'
ALTER TABLE ANL_REMARK ADD CONSTRAINT ANLRMK_PC_FK FOREIGN KEY
(
REFERENCED_SYSTEM_ID,
REFERENCED_TABLE_NAME,
REFERENCED_COLUMN_NAME
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLRMK_PT_FK'
ALTER TABLE ANL_REMARK ADD CONSTRAINT ANLRMK_PT_FK FOREIGN KEY
(
REFERENCED_SYSTEM_ID,
REFERENCED_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLRMK_R_ANLRT_FK'
ALTER TABLE ANL_REMARK ADD CONSTRAINT ANLRMK_R_ANLRT_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_ANL_REMARK_TYPE
(
ANL_REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLRA_ANLR_FK'
ALTER TABLE ANL_REPORT_ALIAS ADD CONSTRAINT ANLRA_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLRA_BA_FK'
ALTER TABLE ANL_REPORT_ALIAS ADD CONSTRAINT ANLRA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLRA_PSWA_FK'
ALTER TABLE ANL_REPORT_ALIAS ADD CONSTRAINT ANLRA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLRA_R_ART_FK'
ALTER TABLE ANL_REPORT_ALIAS ADD CONSTRAINT ANLRA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLRA_R_ATY_FK'
ALTER TABLE ANL_REPORT_ALIAS ADD CONSTRAINT ANLRA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLRA_R_LANG_FK'
ALTER TABLE ANL_REPORT_ALIAS ADD CONSTRAINT ANLRA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLRA_SRCD_FK'
ALTER TABLE ANL_REPORT_ALIAS ADD CONSTRAINT ANLRA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLS_ANLAB_FK'
ALTER TABLE ANL_SAMPLE ADD CONSTRAINT ANLS_ANLAB_FK FOREIGN KEY
(
BATCH_ID
)
REFERENCES ANL_ANALYSIS_BATCH
(
BATCH_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLS_ANLR_FK'
ALTER TABLE ANL_SAMPLE ADD CONSTRAINT ANLS_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLS_ANLAS_FK'
ALTER TABLE ANL_SAMPLE ADD CONSTRAINT ANLS_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLS_SM_FK'
ALTER TABLE ANL_SAMPLE ADD CONSTRAINT ANLS_SM_FK FOREIGN KEY
(
SAMPLE_ID
)
REFERENCES SAMPLE
(
SAMPLE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLSX_ANLAS_FK'
ALTER TABLE ANL_STEP_XREF ADD CONSTRAINT ANLSX_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO2
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLSX_ANLAS_FK2'
ALTER TABLE ANL_STEP_XREF ADD CONSTRAINT ANLSX_ANLAS_FK2 FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO1
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLSX_R_ANLSX_FK'
ALTER TABLE ANL_STEP_XREF ADD CONSTRAINT ANLSX_R_ANLSX_FK FOREIGN KEY
(
STEP_XREF_REASON
)
REFERENCES R_ANL_STEP_XREF
(
STEP_XREF_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLTR_ANLR_FK'
ALTER TABLE ANL_TABLE_RESULT ADD CONSTRAINT ANLTR_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLTR_ANLAS_FK'
ALTER TABLE ANL_TABLE_RESULT ADD CONSTRAINT ANLTR_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLTR_PT_FK'
ALTER TABLE ANL_TABLE_RESULT ADD CONSTRAINT ANLTR_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVB_ANLM_FK'
ALTER TABLE ANL_VALID_BA ADD CONSTRAINT ANLVB_ANLM_FK FOREIGN KEY
(
METHOD_SET_ID,
METHOD_ID
)
REFERENCES ANL_METHOD
(
METHOD_SET_ID,
METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVB_BA_FK'
ALTER TABLE ANL_VALID_BA ADD CONSTRAINT ANLVB_BA_FK FOREIGN KEY
(
VALID_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVB_R_ABRT_FK'
ALTER TABLE ANL_VALID_BA ADD CONSTRAINT ANLVB_R_ABRT_FK FOREIGN KEY
(
BA_ROLE_TYPE
)
REFERENCES R_ANL_BA_ROLE_TYPE
(
BA_ROLE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVB_R_ANLCT_FK'
ALTER TABLE ANL_VALID_BA ADD CONSTRAINT ANLVB_R_ANLCT_FK FOREIGN KEY
(
CONFIDENCE_TYPE
)
REFERENCES R_ANL_CONFIDENCE_TYPE
(
CONFIDENCE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVE_ANLM_FK'
ALTER TABLE ANL_VALID_EQUIP ADD CONSTRAINT ANLVE_ANLM_FK FOREIGN KEY
(
METHOD_SET_ID,
METHOD_ID
)
REFERENCES ANL_METHOD
(
METHOD_SET_ID,
METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVE_CEQ_FK'
ALTER TABLE ANL_VALID_EQUIP ADD CONSTRAINT ANLVE_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVE_EQ_FK'
ALTER TABLE ANL_VALID_EQUIP ADD CONSTRAINT ANLVE_EQ_FK FOREIGN KEY
(
EQUIP_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVE_R_ANLCT_FK'
ALTER TABLE ANL_VALID_EQUIP ADD CONSTRAINT ANLVE_R_ANLCT_FK FOREIGN KEY
(
CONFIDENCE_TYPE
)
REFERENCES R_ANL_CONFIDENCE_TYPE
(
CONFIDENCE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVE_R_ANLER_FK'
ALTER TABLE ANL_VALID_EQUIP ADD CONSTRAINT ANLVE_R_ANLER_FK FOREIGN KEY
(
EQUIP_ROLE
)
REFERENCES R_ANL_EQUIP_ROLE
(
ANL_EQUIP_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVM_ANLCM_FK'
ALTER TABLE ANL_VALID_MEASURE ADD CONSTRAINT ANLVM_ANLCM_FK FOREIGN KEY
(
CALCULATE_METHOD_ID
)
REFERENCES ANL_CALC_METHOD
(
CALCULATE_METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVM_ANLM_FK'
ALTER TABLE ANL_VALID_MEASURE ADD CONSTRAINT ANLVM_ANLM_FK FOREIGN KEY
(
METHOD_SET_ID,
METHOD_ID
)
REFERENCES ANL_METHOD
(
METHOD_SET_ID,
METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVM_R_ANLAT_FK'
ALTER TABLE ANL_VALID_MEASURE ADD CONSTRAINT ANLVM_R_ANLAT_FK FOREIGN KEY
(
ACCURACY_TYPE
)
REFERENCES R_ANL_ACCURACY_TYPE
(
ACCURACY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVM_R_ANLMR_FK'
ALTER TABLE ANL_VALID_MEASURE ADD CONSTRAINT ANLVM_R_ANLMR_FK FOREIGN KEY
(
MISSING_REPRESENTATION
)
REFERENCES R_ANL_MISSING_REP
(
MISSING_REPRESENTATION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVM_R_ANLNR_FK'
ALTER TABLE ANL_VALID_MEASURE ADD CONSTRAINT ANLVM_R_ANLNR_FK FOREIGN KEY
(
NULL_REPRESENTATION
)
REFERENCES R_ANL_NULL_REP
(
NULL_REPRESENTATION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVM_R_ANLVM_FK'
ALTER TABLE ANL_VALID_MEASURE ADD CONSTRAINT ANLVM_R_ANLVM_FK FOREIGN KEY
(
MEASUREMENT_TYPE
)
REFERENCES R_ANL_VALID_MEASUREMENT
(
MEASUREMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVM_R_ANLVMV_FK'
ALTER TABLE ANL_VALID_MEASURE ADD CONSTRAINT ANLVM_R_ANLVMV_FK FOREIGN KEY
(
MEASUREMENT_TYPE,
VALID_VALUE_TEXT
)
REFERENCES R_ANL_VALID_MEAS_VALUE
(
MEASUREMENT_TYPE,
VALID_VALUE_TEXT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVM_SUB_FK'
ALTER TABLE ANL_VALID_MEASURE ADD CONSTRAINT ANLVM_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVP_ANLM_FK'
ALTER TABLE ANL_VALID_PROBLEM ADD CONSTRAINT ANLVP_ANLM_FK FOREIGN KEY
(
METHOD_SET_ID,
METHOD_ID
)
REFERENCES ANL_METHOD
(
METHOD_SET_ID,
METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVP_R_ANLAT_FK'
ALTER TABLE ANL_VALID_PROBLEM ADD CONSTRAINT ANLVP_R_ANLAT_FK FOREIGN KEY
(
ACCURACY_TYPE
)
REFERENCES R_ANL_ACCURACY_TYPE
(
ACCURACY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVP_R_ANLCT_FK'
ALTER TABLE ANL_VALID_PROBLEM ADD CONSTRAINT ANLVP_R_ANLCT_FK FOREIGN KEY
(
CONFIDENCE_TYPE
)
REFERENCES R_ANL_CONFIDENCE_TYPE
(
CONFIDENCE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVP_R_ANLPR_FK'
ALTER TABLE ANL_VALID_PROBLEM ADD CONSTRAINT ANLVP_R_ANLPR_FK FOREIGN KEY
(
PROBLEM_RESULT
)
REFERENCES R_ANL_PROBLEM_RESULT
(
PROBLEM_RESULT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVP_R_ANLPRBT_FK'
ALTER TABLE ANL_VALID_PROBLEM ADD CONSTRAINT ANLVP_R_ANLPRBT_FK FOREIGN KEY
(
PROBLEM_TYPE
)
REFERENCES R_ANL_PROBLEM_TYPE
(
PROBLEM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVP_R_ANLVP_FK'
ALTER TABLE ANL_VALID_PROBLEM ADD CONSTRAINT ANLVP_R_ANLVP_FK FOREIGN KEY
(
PROBLEM_RESULT
)
REFERENCES R_ANL_VALID_PROBLEM
(
PROBLEM_RESULT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVTR_ANLM_FK'
ALTER TABLE ANL_VALID_TABLE_RESULT ADD CONSTRAINT ANLVTR_ANLM_FK FOREIGN KEY
(
METHOD_SET_ID,
METHOD_ID
)
REFERENCES ANL_METHOD
(
METHOD_SET_ID,
METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVT_ANLVE_FK'
ALTER TABLE ANL_VALID_TOLERANCE ADD CONSTRAINT ANLVT_ANLVE_FK FOREIGN KEY
(
METHOD_SET_ID,
METHOD_ID,
EQUIP_OBS_NO
)
REFERENCES ANL_VALID_EQUIP
(
METHOD_SET_ID,
METHOD_ID,
EQUIP_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVT_R_ANLTT_FK'
ALTER TABLE ANL_VALID_TOLERANCE ADD CONSTRAINT ANLVT_R_ANLTT_FK FOREIGN KEY
(
TOLERANCE_TYPE
)
REFERENCES R_ANL_TOLERANCE_TYPE
(
TOLERANCE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLVT_SUB_FK'
ALTER TABLE ANL_VALID_TOLERANCE ADD CONSTRAINT ANLVT_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLWA_ANLR_FK'
ALTER TABLE ANL_WATER_ANALYSIS ADD CONSTRAINT ANLWA_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLWA_ANLAS_FK'
ALTER TABLE ANL_WATER_ANALYSIS ADD CONSTRAINT ANLWA_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLWA_SUB_FK2'
ALTER TABLE ANL_WATER_ANALYSIS ADD CONSTRAINT ANLWA_SUB_FK2 FOREIGN KEY
(
SAMPLE_WATER_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLWA_SUB_FK'
ALTER TABLE ANL_WATER_ANALYSIS ADD CONSTRAINT ANLWA_SUB_FK FOREIGN KEY
(
WATER_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLWD_ANLR_FK'
ALTER TABLE ANL_WATER_DETAIL ADD CONSTRAINT ANLWD_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLWD_ANLAS_FK'
ALTER TABLE ANL_WATER_DETAIL ADD CONSTRAINT ANLWD_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLWD_ANLCM_FK'
ALTER TABLE ANL_WATER_DETAIL ADD CONSTRAINT ANLWD_ANLCM_FK FOREIGN KEY
(
CALCULATE_METHOD_ID
)
REFERENCES ANL_CALC_METHOD
(
CALCULATE_METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLWD_R_ANLVM_FK'
ALTER TABLE ANL_WATER_DETAIL ADD CONSTRAINT ANLWD_R_ANLVM_FK FOREIGN KEY
(
MEASUREMENT_TYPE
)
REFERENCES R_ANL_VALID_MEASUREMENT
(
MEASUREMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLWD_R_ANLWP_FK'
ALTER TABLE ANL_WATER_DETAIL ADD CONSTRAINT ANLWD_R_ANLWP_FK FOREIGN KEY
(
WATER_PROPERTY
)
REFERENCES R_ANL_WATER_PROPERTY
(
WATER_PROPERTY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLWD_R_APC_2_FK'
ALTER TABLE ANL_WATER_DETAIL ADD CONSTRAINT ANLWD_R_APC_2_FK FOREIGN KEY
(
WATER_PROPERTY,
WATER_PROPERTY_CODE
)
REFERENCES R_WATER_PROPERTY_CODE
(
WATER_PROPERTY,
WATER_PROPERTY_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLWS_ANLR_FK'
ALTER TABLE ANL_WATER_SALINITY ADD CONSTRAINT ANLWS_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLWS_ANLAS_FK'
ALTER TABLE ANL_WATER_SALINITY ADD CONSTRAINT ANLWS_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLWS_ANLCM_FK'
ALTER TABLE ANL_WATER_SALINITY ADD CONSTRAINT ANLWS_ANLCM_FK FOREIGN KEY
(
CALCULATE_METHOD_ID
)
REFERENCES ANL_CALC_METHOD
(
CALCULATE_METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ANLWS_R_ST_FK'
ALTER TABLE ANL_WATER_SALINITY ADD CONSTRAINT ANLWS_R_ST_FK FOREIGN KEY
(
SALINITY_TYPE
)
REFERENCES R_SALINITY_TYPE
(
SALINITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APP_APP_FK'
ALTER TABLE APPLICATION ADD CONSTRAINT APP_APP_FK FOREIGN KEY
(
PREVIOUS_APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APP_CEX_FK'
ALTER TABLE APPLICATION ADD CONSTRAINT APP_CEX_FK FOREIGN KEY
(
CONTRACT_ID,
EXTENSION_ID
)
REFERENCES CONT_EXTENSION
(
CONTRACT_ID,
EXTENSION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APP_RATE_FK'
ALTER TABLE APPLICATION ADD CONSTRAINT APP_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APP_R_AD_FK'
ALTER TABLE APPLICATION ADD CONSTRAINT APP_R_AD_FK FOREIGN KEY
(
DECISION
)
REFERENCES R_APPLIC_DECISION
(
APPLICATION_DECISION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APP_R_AST_FK'
ALTER TABLE APPLICATION ADD CONSTRAINT APP_R_AST_FK FOREIGN KEY
(
CURRENT_STATUS
)
REFERENCES R_APPLIC_STATUS
(
APPLICATION_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APP_R_APPT_FK'
ALTER TABLE APPLICATION ADD CONSTRAINT APP_R_APPT_FK FOREIGN KEY
(
APPLICATION_TYPE
)
REFERENCES R_APPLIC_TYPE
(
APPLICATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_ANLR_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_APP_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_APP_FK2'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_APP_FK2 FOREIGN KEY
(
APP_APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_A_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_BAAU_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_BAE_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_BAO_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_BA_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_CA_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_CEQ_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_CLSL_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_CON_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_CO_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_COT_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_C_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_EZ_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_ENT_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_EQ_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_FAC_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_FLD_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_FIN_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_FOS_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_HI_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_INS_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_INT_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_LR_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_LS_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_LIL_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_NOTI_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_OB_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_PASU_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_PDE_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_PL_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_PSWA_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_PSYS_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_PT_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_PS_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_PS_FK FOREIGN KEY
(
PR_STR_UWI,
PR_STR_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_PROJ_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_RATE_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_RSE_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_RMDSS_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_RMII_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_RMPI_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_RMTW_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_R_APPCT_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_R_APPCT_FK FOREIGN KEY
(
APPLICATION_COMPONENT_TYPE
)
REFERENCES R_APPLICATION_COMP_TYPE
(
APPLICATION_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_SS_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_SF_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_SPD_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_STFST_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_STU_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_SUB_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_W_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_WAC_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_WAC_FK FOREIGN KEY
(
WELL_ACTIVITY_UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_WSET_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPC_WO_FK'
ALTER TABLE APPLICATION_COMPONENT ADD CONSTRAINT APPC_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPAL_APP_FK'
ALTER TABLE APPLIC_ALIAS ADD CONSTRAINT APPAL_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPAL_BA_FK'
ALTER TABLE APPLIC_ALIAS ADD CONSTRAINT APPAL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPAL_PSWA_FK'
ALTER TABLE APPLIC_ALIAS ADD CONSTRAINT APPAL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPAL_R_ART_FK'
ALTER TABLE APPLIC_ALIAS ADD CONSTRAINT APPAL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPAL_R_ATY_FK'
ALTER TABLE APPLIC_ALIAS ADD CONSTRAINT APPAL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPAL_R_LANG_FK'
ALTER TABLE APPLIC_ALIAS ADD CONSTRAINT APPAL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPAL_SRCD_FK'
ALTER TABLE APPLIC_ALIAS ADD CONSTRAINT APPAL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPA_APP_FK'
ALTER TABLE APPLIC_AREA ADD CONSTRAINT APPA_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPA_A_FK'
ALTER TABLE APPLIC_AREA ADD CONSTRAINT APPA_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPT_APP_FK'
ALTER TABLE APPLIC_ATTACH ADD CONSTRAINT APPT_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPT_BA_FK'
ALTER TABLE APPLIC_ATTACH ADD CONSTRAINT APPT_BA_FK FOREIGN KEY
(
SENT_BY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPT_RMPI_FK'
ALTER TABLE APPLIC_ATTACH ADD CONSTRAINT APPT_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPT_R_AA_FK'
ALTER TABLE APPLIC_ATTACH ADD CONSTRAINT APPT_R_AA_FK FOREIGN KEY
(
ATTACHMENT_TYPE
)
REFERENCES R_APPLIC_ATTACHMENT
(
ATTACHMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPB_APP_FK'
ALTER TABLE APPLIC_BA ADD CONSTRAINT APPB_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPB_BA_FK'
ALTER TABLE APPLIC_BA ADD CONSTRAINT APPB_BA_FK FOREIGN KEY
(
APPLICATION_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPB_BA_FK2'
ALTER TABLE APPLIC_BA ADD CONSTRAINT APPB_BA_FK2 FOREIGN KEY
(
CONTACT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPB_R_ABR_FK'
ALTER TABLE APPLIC_BA ADD CONSTRAINT APPB_R_ABR_FK FOREIGN KEY
(
APPLICATION_BA_ROLE
)
REFERENCES R_APPLIC_BA_ROLE
(
APPLICATION_BA_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPD_APP_FK'
ALTER TABLE APPLIC_DESC ADD CONSTRAINT APPD_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPD_BA_FK'
ALTER TABLE APPLIC_DESC ADD CONSTRAINT APPD_BA_FK FOREIGN KEY
(
CONTACT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPD_R_ADE_FK'
ALTER TABLE APPLIC_DESC ADD CONSTRAINT APPD_R_ADE_FK FOREIGN KEY
(
APPLICATION_TYPE,
APPLIC_DESC_TYPE
)
REFERENCES R_APPLIC_DESC
(
APPLICATION_TYPE,
APPLIC_DESC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPR_APP_FK'
ALTER TABLE APPLIC_REMARK ADD CONSTRAINT APPR_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPR_BA_FK'
ALTER TABLE APPLIC_REMARK ADD CONSTRAINT APPR_BA_FK FOREIGN KEY
(
MADE_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT APPR_R_ARMT_FK'
ALTER TABLE APPLIC_REMARK ADD CONSTRAINT APPR_R_ARMT_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_APPLIC_REMARK_TYPE
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT A_CS_FK'
ALTER TABLE AREA ADD CONSTRAINT A_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT A_CS_FK2'
ALTER TABLE AREA ADD CONSTRAINT A_CS_FK2 FOREIGN KEY
(
LOCAL_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT A_CSCA_FK'
ALTER TABLE AREA ADD CONSTRAINT A_CSCA_FK FOREIGN KEY
(
COORD_ACQUISITION_ID
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT A_R_ARTY_FK'
ALTER TABLE AREA ADD CONSTRAINT A_R_ARTY_FK FOREIGN KEY
(
AREA_TYPE
)
REFERENCES R_AREA_TYPE
(
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT A_SRCD_FK'
ALTER TABLE AREA ADD CONSTRAINT A_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT AA_A_FK'
ALTER TABLE AREA_ALIAS ADD CONSTRAINT AA_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT AA_BA_FK'
ALTER TABLE AREA_ALIAS ADD CONSTRAINT AA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT AA_PSWA_FK'
ALTER TABLE AREA_ALIAS ADD CONSTRAINT AA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT AA_R_ART_FK'
ALTER TABLE AREA_ALIAS ADD CONSTRAINT AA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT AA_R_ATY_FK'
ALTER TABLE AREA_ALIAS ADD CONSTRAINT AA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT AA_SRCD_FK'
ALTER TABLE AREA_ALIAS ADD CONSTRAINT AA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACL_A_FK'
ALTER TABLE AREA_CLASS ADD CONSTRAINT ACL_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACL_A_FK1'
ALTER TABLE AREA_CLASS ADD CONSTRAINT ACL_A_FK1 FOREIGN KEY
(
AREA_ID_PARENT,
AREA_TYPE_PARENT
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACL_AH_FK'
ALTER TABLE AREA_CLASS ADD CONSTRAINT ACL_AH_FK FOREIGN KEY
(
AREA_HIERARCHY_ID
)
REFERENCES AREA_HIERARCHY
(
AREA_HIERARCHY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_ANLR_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_APP_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_A_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_BAAU_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_BAE_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_BAO_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_BA_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_CA_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_CEQ_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_CLSL_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_CON_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_CO_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_COT_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_C_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_EZ_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_ENT_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_EQ_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_FAC_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_FLD_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_FIN_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_FOS_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_HI_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_INS_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_INT_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_LR_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_LS_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_LIL_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_NOTI_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_OB_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_PASU_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_PDE_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_PL_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_PSWA_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_PSYS_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_PT_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_PS_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_PS_FK FOREIGN KEY
(
PR_STR_UWI,
PR_STR_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_PROJ_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_RATE_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_RSCL_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_RSE_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_RMDSS_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_RMII_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_RMPI_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_RMTW_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_R_ACMPT_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_R_ACMPT_FK FOREIGN KEY
(
AREA_COMPONENT_TYPE
)
REFERENCES R_AREA_COMPONENT_TYPE
(
AREA_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_SS_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_SF_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_SPD_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_STFST_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_STU_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_SUB_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_W_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_WAC_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_WAC_FK FOREIGN KEY
(
WELL_ACTIVITY_UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_WSET_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ACMP_WO_FK'
ALTER TABLE AREA_COMPONENT ADD CONSTRAINT ACMP_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT AC_A_FK'
ALTER TABLE AREA_CONTAIN ADD CONSTRAINT AC_A_FK FOREIGN KEY
(
CONTAINING_AREA_ID,
CONTAINING_AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT AC_A_FK2'
ALTER TABLE AREA_CONTAIN ADD CONSTRAINT AC_A_FK2 FOREIGN KEY
(
CONTAINED_AREA_ID,
CONTAINED_AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT AC_R_ACT_FK'
ALTER TABLE AREA_CONTAIN ADD CONSTRAINT AC_R_ACT_FK FOREIGN KEY
(
CONTAIN_TYPE
)
REFERENCES R_AREA_CONTAIN_TYPE
(
CONTAIN_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT AD_A_FK'
ALTER TABLE AREA_DESCRIPTION ADD CONSTRAINT AD_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT AD_R_ADC_FK'
ALTER TABLE AREA_DESCRIPTION ADD CONSTRAINT AD_R_ADC_FK FOREIGN KEY
(
AREA_DESC_TYPE,
AREA_DESC_CODE
)
REFERENCES R_AREA_DESC_CODE
(
AREA_DESC_TYPE,
AREA_DESC_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT AD_R_ADT1_FK'
ALTER TABLE AREA_DESCRIPTION ADD CONSTRAINT AD_R_ADT1_FK FOREIGN KEY
(
AREA_DESC_TYPE
)
REFERENCES R_AREA_DESC_TYPE
(
AREA_DESC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT AD_SRCD_FK'
ALTER TABLE AREA_DESCRIPTION ADD CONSTRAINT AD_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT AHD_AH_FK'
ALTER TABLE AREA_HIER_DETAIL ADD CONSTRAINT AHD_AH_FK FOREIGN KEY
(
AREA_HIERARCHY_ID
)
REFERENCES AREA_HIERARCHY
(
AREA_HIERARCHY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT AHD_R_ARTY_FK'
ALTER TABLE AREA_HIER_DETAIL ADD CONSTRAINT AHD_R_ARTY_FK FOREIGN KEY
(
AREA_TYPE
)
REFERENCES R_AREA_TYPE
(
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT AX_A_FK'
ALTER TABLE AREA_XREF ADD CONSTRAINT AX_A_FK FOREIGN KEY
(
AREA_TYPE1,
AREA_ID1
)
REFERENCES AREA
(
AREA_TYPE,
AREA_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT AX_A_FK2'
ALTER TABLE AREA_XREF ADD CONSTRAINT AX_A_FK2 FOREIGN KEY
(
AREA_TYPE2,
AREA_ID2
)
REFERENCES AREA
(
AREA_TYPE,
AREA_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT AX_R_AXT_FK'
ALTER TABLE AREA_XREF ADD CONSTRAINT AX_R_AXT_FK FOREIGN KEY
(
AREA_XREF_TYPE
)
REFERENCES R_AREA_XREF_TYPE
(
AREA_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAA_A_FK'
ALTER TABLE BA_ADDRESS ADD CONSTRAINT BAA_A_FK FOREIGN KEY
(
CITY_AREA_ID,
CITY_AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAA_A_FK2'
ALTER TABLE BA_ADDRESS ADD CONSTRAINT BAA_A_FK2 FOREIGN KEY
(
PROVINCE_STATE_AREA_ID,
PROVINCE_STATE_AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAA_A_FK3'
ALTER TABLE BA_ADDRESS ADD CONSTRAINT BAA_A_FK3 FOREIGN KEY
(
COUNTRY_AREA_ID,
COUNTRY_AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAA_BA_FK'
ALTER TABLE BA_ADDRESS ADD CONSTRAINT BAA_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAA_R_ADDT_FK'
ALTER TABLE BA_ADDRESS ADD CONSTRAINT BAA_R_ADDT_FK FOREIGN KEY
(
ADDRESS_TYPE
)
REFERENCES R_ADDRESS_TYPE
(
ADDRESS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAA_R_SQ_FK'
ALTER TABLE BA_ADDRESS ADD CONSTRAINT BAA_R_SQ_FK FOREIGN KEY
(
SERVICE_QUALITY
)
REFERENCES R_SERVICE_QUALITY
(
SERVICE_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAL_BA_FK2'
ALTER TABLE BA_ALIAS ADD CONSTRAINT BAAL_BA_FK2 FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAL_BA_FK'
ALTER TABLE BA_ALIAS ADD CONSTRAINT BAAL_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAL_PSWA_FK'
ALTER TABLE BA_ALIAS ADD CONSTRAINT BAAL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAL_R_ART_FK'
ALTER TABLE BA_ALIAS ADD CONSTRAINT BAAL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAL_R_ATY_FK'
ALTER TABLE BA_ALIAS ADD CONSTRAINT BAAL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAL_R_LANG_FK'
ALTER TABLE BA_ALIAS ADD CONSTRAINT BAAL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAL_SRCD_FK'
ALTER TABLE BA_ALIAS ADD CONSTRAINT BAAL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAU_BA_FK3'
ALTER TABLE BA_AUTHORITY ADD CONSTRAINT BAAU_BA_FK3 FOREIGN KEY
(
REPRESENTED_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAU_BA_FK2'
ALTER TABLE BA_AUTHORITY ADD CONSTRAINT BAAU_BA_FK2 FOREIGN KEY
(
AUTHORIZED_BY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAU_BA_FK'
ALTER TABLE BA_AUTHORITY ADD CONSTRAINT BAAU_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAU_R_AUT_FK'
ALTER TABLE BA_AUTHORITY ADD CONSTRAINT BAAU_R_AUT_FK FOREIGN KEY
(
AUTHORITY_TYPE
)
REFERENCES R_AUTHORITY_TYPE
(
AUTHORITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_ANLR_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_APP_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_A_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_BAAU_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_BAE_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_BAO_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_BA_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_CA_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_CEQ_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_CLSL_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_CON_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_CO_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_COT_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_C_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_EZ_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_ENT_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_EQ_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_FAC_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_FLD_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_FIN_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_FOS_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_HI_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_INS_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_INT_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_LR_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_LS_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_LIL_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_NOTI_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_OB_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_PASU_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_PDE_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_PL_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_PSWA_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_PSYS_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_PT_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_PS_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_PSF_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_PSF_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID,
PR_STR_FORM_OBS_NO
)
REFERENCES PROD_STRING_FORMATION
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_PROJ_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_RATE_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_RSCL_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_RSE_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_RMDSS_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_RMII_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_RMPI_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_RMTW_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_R_AUT_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_R_AUT_FK FOREIGN KEY
(
AUTHORITY_TYPE
)
REFERENCES R_AUTHORITY_TYPE
(
AUTHORITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_R_BAAUCT_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_R_BAAUCT_FK FOREIGN KEY
(
BA_AUTHORITY_COMPONENT_TYPE
)
REFERENCES R_BA_AUTHORITY_COMP_TYPE
(
BA_AUTHORITY_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_SS_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_SF_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_SPD_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_STU_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_SUB_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_W_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_WAC_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_WAC_FK FOREIGN KEY
(
UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_WSET_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAAUC_WO_FK'
ALTER TABLE BA_AUTHORITY_COMP ADD CONSTRAINT BAAUC_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_ANLR_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_APP_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_A_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_BAAU_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_BAE_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_BAO_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_BA_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_CA_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_CEQ_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_CLSL_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_CON_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_CO_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_COT_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_C_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_EZ_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_ENT_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_EQ_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_FAC_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_FLD_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_FIN_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_FOS_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_HI_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_INS_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_INT_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_LR_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_LS_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_LIL_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_NOTI_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_OB_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_PASU_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_PDE_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_PL_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_PSWA_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_PSYS_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_PT_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_PS_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_PS_FK FOREIGN KEY
(
PR_STR_UWI,
PR_STR_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_PROJ_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_RATE_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_RSCL_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_RSE_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_RMDSS_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_RMII_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_RMPI_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_RMTW_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_R_BACT_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_R_BACT_FK FOREIGN KEY
(
BA_COMPONENT_TYPE
)
REFERENCES R_BA_COMPONENT_TYPE
(
BUSINESS_ASSOCIATE_COMP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_SS_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_SF_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_SPD_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_STFST_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_STU_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_SUB_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_W_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_WAC_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_WAC_FK FOREIGN KEY
(
WELL_ACTIVITY_UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_WSET_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACOMP_WO_FK'
ALTER TABLE BA_COMPONENT ADD CONSTRAINT BACOMP_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACS_BA_FK'
ALTER TABLE BA_CONSORTIUM_SERVICE ADD CONSTRAINT BACS_BA_FK FOREIGN KEY
(
CONSORTIUM_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACS_BA_FK2'
ALTER TABLE BA_CONSORTIUM_SERVICE ADD CONSTRAINT BACS_BA_FK2 FOREIGN KEY
(
PROVIDED_BY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACS_BA_FK3'
ALTER TABLE BA_CONSORTIUM_SERVICE ADD CONSTRAINT BACS_BA_FK3 FOREIGN KEY
(
REPRESENTED_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACS_BA_FK4'
ALTER TABLE BA_CONSORTIUM_SERVICE ADD CONSTRAINT BACS_BA_FK4 FOREIGN KEY
(
CONTACT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACS_C_FK'
ALTER TABLE BA_CONSORTIUM_SERVICE ADD CONSTRAINT BACS_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACS_CP_FK'
ALTER TABLE BA_CONSORTIUM_SERVICE ADD CONSTRAINT BACS_CP_FK FOREIGN KEY
(
CONTRACT_ID,
PROVISION_ID
)
REFERENCES CONT_PROVISION
(
CONTRACT_ID,
PROVISION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACS_RATE_FK'
ALTER TABLE BA_CONSORTIUM_SERVICE ADD CONSTRAINT BACS_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACS_R_BST_FK'
ALTER TABLE BA_CONSORTIUM_SERVICE ADD CONSTRAINT BACS_R_BST_FK FOREIGN KEY
(
SERVICE_TYPE
)
REFERENCES R_BA_SERVICE_TYPE
(
BA_SERVICE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACS_R_SQ_FK'
ALTER TABLE BA_CONSORTIUM_SERVICE ADD CONSTRAINT BACS_R_SQ_FK FOREIGN KEY
(
SERVICE_QUALITY
)
REFERENCES R_SERVICE_QUALITY
(
SERVICE_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACI_BAA_FK'
ALTER TABLE BA_CONTACT_INFO ADD CONSTRAINT BACI_BAA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
ADDRESS_SOURCE,
ADDRESS_OBS_NO
)
REFERENCES BA_ADDRESS
(
BUSINESS_ASSOCIATE_ID,
SOURCE,
ADDRESS_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACI_BAO_FK'
ALTER TABLE BA_CONTACT_INFO ADD CONSTRAINT BACI_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACI_BA_FK'
ALTER TABLE BA_CONTACT_INFO ADD CONSTRAINT BACI_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACI_R_BCLT_FK'
ALTER TABLE BA_CONTACT_INFO ADD CONSTRAINT BACI_R_BCLT_FK FOREIGN KEY
(
CONTACT_LOC_TYPE
)
REFERENCES R_BA_CONTACT_LOC_TYPE
(
CONTACT_LOC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAC_BA_FK'
ALTER TABLE BA_CREW ADD CONSTRAINT BAC_BA_FK FOREIGN KEY
(
CREW_COMPANY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAC_R_BCT_FK'
ALTER TABLE BA_CREW ADD CONSTRAINT BAC_R_BCT_FK FOREIGN KEY
(
CREW_TYPE
)
REFERENCES R_BA_CREW_TYPE
(
CREW_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACM_BAC_FK'
ALTER TABLE BA_CREW_MEMBER ADD CONSTRAINT BACM_BAC_FK FOREIGN KEY
(
CREW_COMPANY_BA_ID,
CREW_ID
)
REFERENCES BA_CREW
(
CREW_COMPANY_BA_ID,
CREW_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACM_BA_FK'
ALTER TABLE BA_CREW_MEMBER ADD CONSTRAINT BACM_BA_FK FOREIGN KEY
(
CREW_MEMBER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACM_BA_FK2'
ALTER TABLE BA_CREW_MEMBER ADD CONSTRAINT BACM_BA_FK2 FOREIGN KEY
(
CREW_COMPANY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BACM_R_EP_FK'
ALTER TABLE BA_CREW_MEMBER ADD CONSTRAINT BACM_R_EP_FK FOREIGN KEY
(
CREW_POSITION
)
REFERENCES R_EMPLOYEE_POSITION
(
EMPLOYEE_POSITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAD_BA_FK'
ALTER TABLE BA_DESCRIPTION ADD CONSTRAINT BAD_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAD_R_BADC_FK'
ALTER TABLE BA_DESCRIPTION ADD CONSTRAINT BAD_R_BADC_FK FOREIGN KEY
(
BA_DESC_TYPE,
BA_DESC_CODE
)
REFERENCES R_BA_DESC_CODE
(
BA_DESC_TYPE,
BA_DESC_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAD_R_BADRVT_FK'
ALTER TABLE BA_DESCRIPTION ADD CONSTRAINT BAD_R_BADRVT_FK FOREIGN KEY
(
REFERENCE_VALUE_TYPE
)
REFERENCES R_BA_DESC_REF_VALUE
(
REFERENCE_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAD_R_BADT_FK'
ALTER TABLE BA_DESCRIPTION ADD CONSTRAINT BAD_R_BADT_FK FOREIGN KEY
(
BA_DESC_TYPE
)
REFERENCES R_BA_DESC_TYPE
(
BA_DESC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAE_BA_FK'
ALTER TABLE BA_EMPLOYEE ADD CONSTRAINT BAE_BA_FK FOREIGN KEY
(
EMPLOYER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAE_BA_FK2'
ALTER TABLE BA_EMPLOYEE ADD CONSTRAINT BAE_BA_FK2 FOREIGN KEY
(
EMPLOYEE_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAE_R_EP_FK'
ALTER TABLE BA_EMPLOYEE ADD CONSTRAINT BAE_R_EP_FK FOREIGN KEY
(
EMPLOYEE_POSITION
)
REFERENCES R_EMPLOYEE_POSITION
(
EMPLOYEE_POSITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAE_R_ES1_FK'
ALTER TABLE BA_EMPLOYEE ADD CONSTRAINT BAE_R_ES1_FK FOREIGN KEY
(
STATUS
)
REFERENCES R_EMPLOYEE_STATUS
(
EMPLOYEE_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALIC_APP_FK'
ALTER TABLE BA_LICENSE ADD CONSTRAINT BALIC_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALIC_BALIC_FK'
ALTER TABLE BA_LICENSE ADD CONSTRAINT BALIC_BALIC_FK FOREIGN KEY
(
REL_LICENSEE_BA_ID,
REL_LICENSE_ID
)
REFERENCES BA_LICENSE
(
LICENSEE_BA_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALIC_BALICT_FK'
ALTER TABLE BA_LICENSE ADD CONSTRAINT BALIC_BALICT_FK FOREIGN KEY
(
GRANTED_BY_BA_ID,
LICENSE_TYPE
)
REFERENCES BA_LICENSE_TYPE
(
GRANTED_BY_BA_ID,
LICENSE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALIC_BA_FK4'
ALTER TABLE BA_LICENSE ADD CONSTRAINT BALIC_BA_FK4 FOREIGN KEY
(
GRANTED_TO_CONTACT_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALIC_BA_FK'
ALTER TABLE BA_LICENSE ADD CONSTRAINT BALIC_BA_FK FOREIGN KEY
(
GRANTED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALIC_BA_FK2'
ALTER TABLE BA_LICENSE ADD CONSTRAINT BALIC_BA_FK2 FOREIGN KEY
(
GRANTED_TO_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALIC_BA_FK3'
ALTER TABLE BA_LICENSE ADD CONSTRAINT BALIC_BA_FK3 FOREIGN KEY
(
GRANTED_BY_CONTACT_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALIC_BA_FK5'
ALTER TABLE BA_LICENSE ADD CONSTRAINT BALIC_BA_FK5 FOREIGN KEY
(
LICENSEE_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALIC_RATE_FK'
ALTER TABLE BA_LICENSE ADD CONSTRAINT BALIC_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICAL_BALIC_FK'
ALTER TABLE BA_LICENSE_ALIAS ADD CONSTRAINT BALICAL_BALIC_FK FOREIGN KEY
(
LICENSEE_BA_ID,
LICENSE_ID
)
REFERENCES BA_LICENSE
(
LICENSEE_BA_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICAL_BA_FK'
ALTER TABLE BA_LICENSE_ALIAS ADD CONSTRAINT BALICAL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICAL_PSWA_FK'
ALTER TABLE BA_LICENSE_ALIAS ADD CONSTRAINT BALICAL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICAL_R_ART_FK'
ALTER TABLE BA_LICENSE_ALIAS ADD CONSTRAINT BALICAL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICAL_R_ATY_FK'
ALTER TABLE BA_LICENSE_ALIAS ADD CONSTRAINT BALICAL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICAL_R_LANG_FK'
ALTER TABLE BA_LICENSE_ALIAS ADD CONSTRAINT BALICAL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICAL_SRCD_FK'
ALTER TABLE BA_LICENSE_ALIAS ADD CONSTRAINT BALICAL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICA_A_FK'
ALTER TABLE BA_LICENSE_AREA ADD CONSTRAINT BALICA_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICA_BALIC_FK'
ALTER TABLE BA_LICENSE_AREA ADD CONSTRAINT BALICA_BALIC_FK FOREIGN KEY
(
LICENSEE_BA_ID,
LICENSE_ID
)
REFERENCES BA_LICENSE
(
LICENSEE_BA_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICC_BALIC_FK'
ALTER TABLE BA_LICENSE_COND ADD CONSTRAINT BALICC_BALIC_FK FOREIGN KEY
(
LICENSEE_BA_ID,
LICENSE_ID
)
REFERENCES BA_LICENSE
(
LICENSEE_BA_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICC_BALICCC_FK'
ALTER TABLE BA_LICENSE_COND ADD CONSTRAINT BALICC_BALICCC_FK FOREIGN KEY
(
GRANTED_BY_BA_ID,
LICENSE_TYPE,
CONDITION_TYPE,
CONDITION_CODE
)
REFERENCES BA_LICENSE_COND_CODE
(
GRANTED_BY_BA_ID,
LICENSE_TYPE,
CONDITION_TYPE,
CONDITION_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICC_BALICCT_FK'
ALTER TABLE BA_LICENSE_COND ADD CONSTRAINT BALICC_BALICCT_FK FOREIGN KEY
(
GRANTED_BY_BA_ID,
LICENSE_TYPE,
CONDITION_TYPE
)
REFERENCES BA_LICENSE_COND_TYPE
(
GRANTED_BY_BA_ID,
LICENSE_TYPE,
CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICC_BA_FK'
ALTER TABLE BA_LICENSE_COND ADD CONSTRAINT BALICC_BA_FK FOREIGN KEY
(
CONTACT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICC_BA_FK2'
ALTER TABLE BA_LICENSE_COND ADD CONSTRAINT BALICC_BA_FK2 FOREIGN KEY
(
FULFILLED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICC_REST_FK'
ALTER TABLE BA_LICENSE_COND ADD CONSTRAINT BALICC_REST_FK FOREIGN KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION
)
REFERENCES RESTRICTION
(
RESTRICTION_ID,
RESTRICTION_VERSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICC_R_BALDC_FK'
ALTER TABLE BA_LICENSE_COND ADD CONSTRAINT BALICC_R_BALDC_FK FOREIGN KEY
(
DUE_CONDITION
)
REFERENCES R_BA_LIC_DUE_CONDITION
(
DUE_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICCC_BALICCT_FK'
ALTER TABLE BA_LICENSE_COND_CODE ADD CONSTRAINT BALICCC_BALICCT_FK FOREIGN KEY
(
GRANTED_BY_BA_ID,
LICENSE_TYPE,
CONDITION_TYPE
)
REFERENCES BA_LICENSE_COND_TYPE
(
GRANTED_BY_BA_ID,
LICENSE_TYPE,
CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICCT_BALICT_FK'
ALTER TABLE BA_LICENSE_COND_TYPE ADD CONSTRAINT BALICCT_BALICT_FK FOREIGN KEY
(
GRANTED_BY_BA_ID,
LICENSE_TYPE
)
REFERENCES BA_LICENSE_TYPE
(
GRANTED_BY_BA_ID,
LICENSE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICCT_PPS_FK'
ALTER TABLE BA_LICENSE_COND_TYPE ADD CONSTRAINT BALICCT_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICR_BALIC_FK'
ALTER TABLE BA_LICENSE_REMARK ADD CONSTRAINT BALICR_BALIC_FK FOREIGN KEY
(
LICENSEE_BA_ID,
LICENSE_ID
)
REFERENCES BA_LICENSE
(
LICENSEE_BA_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICR_R_RT2_FK'
ALTER TABLE BA_LICENSE_REMARK ADD CONSTRAINT BALICR_R_RT2_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_REMARK_TYPE
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICS_BALIC_FK'
ALTER TABLE BA_LICENSE_STATUS ADD CONSTRAINT BALICS_BALIC_FK FOREIGN KEY
(
LICENSEE_BA_ID,
LICENSE_ID
)
REFERENCES BA_LICENSE
(
LICENSEE_BA_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICS_R_LIST_FK'
ALTER TABLE BA_LICENSE_STATUS ADD CONSTRAINT BALICS_R_LIST_FK FOREIGN KEY
(
LICENSE_STATUS_TYPE,
LICENSE_STATUS
)
REFERENCES R_LICENSE_STATUS
(
LICENSE_STATUS_TYPE,
LICENSE_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICT_BA_FK'
ALTER TABLE BA_LICENSE_TYPE ADD CONSTRAINT BALICT_BA_FK FOREIGN KEY
(
GRANTED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICT_RATE_FK'
ALTER TABLE BA_LICENSE_TYPE ADD CONSTRAINT BALICT_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICV_BALIC_FK'
ALTER TABLE BA_LICENSE_VIOLATION ADD CONSTRAINT BALICV_BALIC_FK FOREIGN KEY
(
LICENSEE_BA_ID,
LICENSE_ID
)
REFERENCES BA_LICENSE
(
LICENSEE_BA_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICV_BALICC_FK'
ALTER TABLE BA_LICENSE_VIOLATION ADD CONSTRAINT BALICV_BALICC_FK FOREIGN KEY
(
LICENSEE_BA_ID,
LICENSE_ID,
CONDITION_ID
)
REFERENCES BA_LICENSE_COND
(
LICENSEE_BA_ID,
LICENSE_ID,
CONDITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICV_R_BVT_FK'
ALTER TABLE BA_LICENSE_VIOLATION ADD CONSTRAINT BALICV_R_BVT_FK FOREIGN KEY
(
VIOLATION_TYPE
)
REFERENCES R_BA_LIC_VIOLATION_TYPE
(
VIOLATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BALICV_R_BLVRT_FK'
ALTER TABLE BA_LICENSE_VIOLATION ADD CONSTRAINT BALICV_R_BLVRT_FK FOREIGN KEY
(
RESOLVE_TYPE
)
REFERENCES R_BA_LIC_VIOL_RESOL
(
RESOLVE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAO_A_FK'
ALTER TABLE BA_ORGANIZATION ADD CONSTRAINT BAO_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAO_BAA_FK'
ALTER TABLE BA_ORGANIZATION ADD CONSTRAINT BAO_BAA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
ADDRESS_SOURCE,
ADDRESS_OBS_NO
)
REFERENCES BA_ADDRESS
(
BUSINESS_ASSOCIATE_ID,
SOURCE,
ADDRESS_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAO_BA_FK'
ALTER TABLE BA_ORGANIZATION ADD CONSTRAINT BAO_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAO_R_BAOT_FK'
ALTER TABLE BA_ORGANIZATION ADD CONSTRAINT BAO_R_BAOT_FK FOREIGN KEY
(
ORGANIZATION_TYPE
)
REFERENCES R_BA_ORGANIZATION_TYPE
(
ORGANIZATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_ANLR_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_APP_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_A_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_BAAU_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_BAE_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_BAO_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID2,
ORGANIZATION_SEQ_NO2
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_BAO_FK2'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_BAO_FK2 FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_BA_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_CA_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_CEQ_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_CLSL_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_CON_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_CO_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_COT_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_C_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_EZ_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_ENT_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_EQ_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_FAC_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_FLD_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_FIN_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_FOS_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_HI_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_INS_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_INT_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_LR_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_LS_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_LIL_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_NOTI_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_OB_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_PASU_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_PDE_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_PL_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_PSWA_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_PSYS_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_PT_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_PS_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_PSF_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_PSF_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID,
PR_STR_FORM_OBS_NO
)
REFERENCES PROD_STRING_FORMATION
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_PROJ_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_RATE_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_RSCL_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_RSE_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_RMDSS_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_RMII_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_RMPI_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_RMTW_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_R_BAOCT_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_R_BAOCT_FK FOREIGN KEY
(
BA_ORGANIZATION_COMPONENT_TYPE
)
REFERENCES R_BA_ORGANIZATION_COMP_TYPE
(
BA_ORGANIZATION_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_SS_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_SF_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_SRCD_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_SPD_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_STFST_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_STU_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_SUB_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_W_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_WAC_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_WAC_FK FOREIGN KEY
(
UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_WSET_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAOC_WO_FK'
ALTER TABLE BA_ORGANIZATION_COMP ADD CONSTRAINT BAOC_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAP_BA_FK'
ALTER TABLE BA_PERMIT ADD CONSTRAINT BAP_BA_FK FOREIGN KEY
(
JURISDICTION
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAP_BA_FK2'
ALTER TABLE BA_PERMIT ADD CONSTRAINT BAP_BA_FK2 FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAP_R_BPT_FK'
ALTER TABLE BA_PERMIT ADD CONSTRAINT BAP_R_BPT_FK FOREIGN KEY
(
PERMIT_TYPE
)
REFERENCES R_BA_PERMIT_TYPE
(
PERMIT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAPR_BA_FK'
ALTER TABLE BA_PREFERENCE ADD CONSTRAINT BAPR_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAPR_PSWA_FK'
ALTER TABLE BA_PREFERENCE ADD CONSTRAINT BAPR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAPR_R_BPRT_FK'
ALTER TABLE BA_PREFERENCE ADD CONSTRAINT BAPR_R_BPRT_FK FOREIGN KEY
(
PREFERENCE_TYPE
)
REFERENCES R_BA_PREF_TYPE
(
PREFERENCE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAPR_R_LANG_FK'
ALTER TABLE BA_PREFERENCE ADD CONSTRAINT BAPR_R_LANG_FK FOREIGN KEY
(
LANGUAGE
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAPR_WLCC_FK'
ALTER TABLE BA_PREFERENCE ADD CONSTRAINT BAPR_WLCC_FK FOREIGN KEY
(
WL_CURVE_CLASS_ID
)
REFERENCES WELL_LOG_CURVE_CLASS
(
CURVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAPR_WLPC_FK'
ALTER TABLE BA_PREFERENCE ADD CONSTRAINT BAPR_WLPC_FK FOREIGN KEY
(
WL_PARAMETER_CLASS_ID
)
REFERENCES WELL_LOG_PARM_CLASS
(
PARAMETER_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAPRL_BAPR_FK'
ALTER TABLE BA_PREFERENCE_LEVEL ADD CONSTRAINT BAPRL_BAPR_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
PREFERENCE_TYPE,
PREFERENCE_OBS_NO
)
REFERENCES BA_PREFERENCE
(
BUSINESS_ASSOCIATE_ID,
PREFERENCE_TYPE,
PREFERENCE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAPRL_BA_FK'
ALTER TABLE BA_PREFERENCE_LEVEL ADD CONSTRAINT BAPRL_BA_FK FOREIGN KEY
(
PREFERRED_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAPRL_WLDCV_FK'
ALTER TABLE BA_PREFERENCE_LEVEL ADD CONSTRAINT BAPRL_WLDCV_FK FOREIGN KEY
(
WL_DICTIONARY_ID,
WL_DICT_CURVE_ID
)
REFERENCES WELL_LOG_DICT_CURVE
(
DICTIONARY_ID,
DICT_CURVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAPRL_WLDP_FK'
ALTER TABLE BA_PREFERENCE_LEVEL ADD CONSTRAINT BAPRL_WLDP_FK FOREIGN KEY
(
WL_DICTIONARY_ID,
WL_PARAMETER_ID
)
REFERENCES WELL_LOG_DICT_PARM
(
DICTIONARY_ID,
PARAMETER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAS_BA_FK'
ALTER TABLE BA_SERVICE ADD CONSTRAINT BAS_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAS_R_BST_FK'
ALTER TABLE BA_SERVICE ADD CONSTRAINT BAS_R_BST_FK FOREIGN KEY
(
BA_SERVICE_TYPE
)
REFERENCES R_BA_SERVICE_TYPE
(
BA_SERVICE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAS_R_SQ_FK'
ALTER TABLE BA_SERVICE ADD CONSTRAINT BAS_R_SQ_FK FOREIGN KEY
(
SERVICE_QUALITY
)
REFERENCES R_SERVICE_QUALITY
(
SERVICE_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BASA_BAA_FK'
ALTER TABLE BA_SERVICE_ADDRESS ADD CONSTRAINT BASA_BAA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
ADDRESS_SOURCE,
ADDRESS_OBS_NO
)
REFERENCES BA_ADDRESS
(
BUSINESS_ASSOCIATE_ID,
SOURCE,
ADDRESS_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BASA_BAAL_FK'
ALTER TABLE BA_SERVICE_ADDRESS ADD CONSTRAINT BASA_BAAL_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
ALIAS_SOURCE,
BA_ALIAS_ID
)
REFERENCES BA_ALIAS
(
BUSINESS_ASSOCIATE_ID,
SOURCE,
BA_ALIAS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BASA_BAS_FK'
ALTER TABLE BA_SERVICE_ADDRESS ADD CONSTRAINT BASA_BAS_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_SERVICE_TYPE,
BA_SERVICE_SEQ_NO
)
REFERENCES BA_SERVICE
(
BUSINESS_ASSOCIATE_ID,
BA_SERVICE_TYPE,
BA_SERVICE_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BASA_R_SQ_FK'
ALTER TABLE BA_SERVICE_ADDRESS ADD CONSTRAINT BASA_R_SQ_FK FOREIGN KEY
(
SERVICE_QUALITY
)
REFERENCES R_SERVICE_QUALITY
(
SERVICE_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAX_BA_FK'
ALTER TABLE BA_XREF ADD CONSTRAINT BAX_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAX_BA_FK2'
ALTER TABLE BA_XREF ADD CONSTRAINT BAX_BA_FK2 FOREIGN KEY
(
NEW_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BAX_R_BXT_FK'
ALTER TABLE BA_XREF ADD CONSTRAINT BAX_R_BXT_FK FOREIGN KEY
(
BA_XREF_TYPE
)
REFERENCES R_BA_XREF_TYPE
(
BA_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BA_R_BC_FK'
ALTER TABLE BUSINESS_ASSOCIATE ADD CONSTRAINT BA_R_BC_FK FOREIGN KEY
(
BA_CATEGORY
)
REFERENCES R_BA_CATEGORY
(
BA_CATEGORY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BA_R_BS_FK'
ALTER TABLE BUSINESS_ASSOCIATE ADD CONSTRAINT BA_R_BS_FK FOREIGN KEY
(
CURRENT_STATUS
)
REFERENCES R_BA_STATUS
(
BA_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT BA_R_BT_FK'
ALTER TABLE BUSINESS_ASSOCIATE ADD CONSTRAINT BA_R_BT_FK FOREIGN KEY
(
BA_TYPE
)
REFERENCES R_BA_TYPE
(
BA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CA_BA_FK'
ALTER TABLE CAT_ADDITIVE ADD CONSTRAINT CA_BA_FK FOREIGN KEY
(
MANUFACTURER
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CA_CAT_FK'
ALTER TABLE CAT_ADDITIVE ADD CONSTRAINT CA_CAT_FK FOREIGN KEY
(
ADDITIVE_TYPE
)
REFERENCES CAT_ADDITIVE_TYPE
(
ADDITIVE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CA_R_CAG_FK'
ALTER TABLE CAT_ADDITIVE ADD CONSTRAINT CA_R_CAG_FK FOREIGN KEY
(
ADDITIVE_GROUP
)
REFERENCES R_CAT_ADDITIVE_GROUP
(
ADDITIVE_GROUP
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CA_R_CAQT_FK'
ALTER TABLE CAT_ADDITIVE ADD CONSTRAINT CA_R_CAQT_FK FOREIGN KEY
(
PURCHASE_QUANTITY_TYPE
)
REFERENCES R_CAT_ADDITIVE_QUANTITY
(
QUANTITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAA_BA_FK'
ALTER TABLE CAT_ADDITIVE_ALIAS ADD CONSTRAINT CAA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAA_CA_FK'
ALTER TABLE CAT_ADDITIVE_ALIAS ADD CONSTRAINT CAA_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAA_PSWA_FK'
ALTER TABLE CAT_ADDITIVE_ALIAS ADD CONSTRAINT CAA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAA_R_ATY_FK'
ALTER TABLE CAT_ADDITIVE_ALIAS ADD CONSTRAINT CAA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAA_R_LANG_FK'
ALTER TABLE CAT_ADDITIVE_ALIAS ADD CONSTRAINT CAA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAAL_BA_FK'
ALTER TABLE CAT_ADDITIVE_ALLOWANCE ADD CONSTRAINT CAAL_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAAL_CA_FK'
ALTER TABLE CAT_ADDITIVE_ALLOWANCE ADD CONSTRAINT CAAL_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAAL_CAG_FK'
ALTER TABLE CAT_ADDITIVE_ALLOWANCE ADD CONSTRAINT CAAL_CAG_FK FOREIGN KEY
(
ADDITIVE_GROUP_ID
)
REFERENCES CAT_ADDITIVE_GROUP
(
ADDITIVE_GROUP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAAL_SUB_FK'
ALTER TABLE CAT_ADDITIVE_ALLOWANCE ADD CONSTRAINT CAAL_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAG_BA_FK'
ALTER TABLE CAT_ADDITIVE_GROUP ADD CONSTRAINT CAG_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAG_SUB_FK'
ALTER TABLE CAT_ADDITIVE_GROUP ADD CONSTRAINT CAG_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAGP_CA_FK'
ALTER TABLE CAT_ADDITIVE_GROUP_PART ADD CONSTRAINT CAGP_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAGP_CAG_FK'
ALTER TABLE CAT_ADDITIVE_GROUP_PART ADD CONSTRAINT CAGP_CAG_FK FOREIGN KEY
(
ADDITIVE_GROUP_ID
)
REFERENCES CAT_ADDITIVE_GROUP
(
ADDITIVE_GROUP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAGP_CAT_FK'
ALTER TABLE CAT_ADDITIVE_GROUP_PART ADD CONSTRAINT CAGP_CAT_FK FOREIGN KEY
(
ADDITIVE_TYPE_ID
)
REFERENCES CAT_ADDITIVE_TYPE
(
ADDITIVE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAGP_SUB_FK'
ALTER TABLE CAT_ADDITIVE_GROUP_PART ADD CONSTRAINT CAGP_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAS_CA_FK'
ALTER TABLE CAT_ADDITIVE_SPEC ADD CONSTRAINT CAS_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAS_CA_FK2'
ALTER TABLE CAT_ADDITIVE_SPEC ADD CONSTRAINT CAS_CA_FK2 FOREIGN KEY
(
ADDITIVE_COMPONENT_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAS_R_CAS_FK'
ALTER TABLE CAT_ADDITIVE_SPEC ADD CONSTRAINT CAS_R_CAS_FK FOREIGN KEY
(
ADDITIVE_SPEC_TYPE
)
REFERENCES R_CAT_ADDITIVE_SPEC
(
ADDITIVE_SPEC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAT_R_CAG_FK'
ALTER TABLE CAT_ADDITIVE_TYPE ADD CONSTRAINT CAT_R_CAG_FK FOREIGN KEY
(
ADDITIVE_GROUP
)
REFERENCES R_CAT_ADDITIVE_GROUP
(
ADDITIVE_GROUP
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAX_CA_FK'
ALTER TABLE CAT_ADDITIVE_XREF ADD CONSTRAINT CAX_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAX_CA_FK2'
ALTER TABLE CAT_ADDITIVE_XREF ADD CONSTRAINT CAX_CA_FK2 FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID2
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAX_R_CAX_FK'
ALTER TABLE CAT_ADDITIVE_XREF ADD CONSTRAINT CAX_R_CAX_FK FOREIGN KEY
(
ADDITIVE_XREF_TYPE
)
REFERENCES R_CAT_ADDITIVE_XREF
(
ADDITIVE_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CEQ_BA_FK'
ALTER TABLE CAT_EQUIPMENT ADD CONSTRAINT CEQ_BA_FK FOREIGN KEY
(
MANUFACTURER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CEQ_R_CEG_FK'
ALTER TABLE CAT_EQUIPMENT ADD CONSTRAINT CEQ_R_CEG_FK FOREIGN KEY
(
CAT_EQUIP_GROUP
)
REFERENCES R_CAT_EQUIP_GROUP
(
CAT_EQUIP_GROUP
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CEQ_R_CET_FK'
ALTER TABLE CAT_EQUIPMENT ADD CONSTRAINT CEQ_R_CET_FK FOREIGN KEY
(
CAT_EQUIP_TYPE
)
REFERENCES R_CAT_EQUIP_TYPE
(
CAT_EQUIP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CEQ_R_EIL_FK'
ALTER TABLE CAT_EQUIPMENT ADD CONSTRAINT CEQ_R_EIL_FK FOREIGN KEY
(
INSTALL_LOC_TYPE
)
REFERENCES R_EQUIP_INSTALL_LOC
(
INSTALL_LOC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CEQA_BA_FK'
ALTER TABLE CAT_EQUIP_ALIAS ADD CONSTRAINT CEQA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CEQA_CEQ_FK'
ALTER TABLE CAT_EQUIP_ALIAS ADD CONSTRAINT CEQA_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CEQA_PSWA_FK'
ALTER TABLE CAT_EQUIP_ALIAS ADD CONSTRAINT CEQA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CEQA_R_ART_FK'
ALTER TABLE CAT_EQUIP_ALIAS ADD CONSTRAINT CEQA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CEQA_R_ATY_FK'
ALTER TABLE CAT_EQUIP_ALIAS ADD CONSTRAINT CEQA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CEQA_R_LANG_FK'
ALTER TABLE CAT_EQUIP_ALIAS ADD CONSTRAINT CEQA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CEQA_SRCD_FK'
ALTER TABLE CAT_EQUIP_ALIAS ADD CONSTRAINT CEQA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CEQS_CEQ_FK'
ALTER TABLE CAT_EQUIP_SPEC ADD CONSTRAINT CEQS_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CEQS_R_CES_FK'
ALTER TABLE CAT_EQUIP_SPEC ADD CONSTRAINT CEQS_R_CES_FK FOREIGN KEY
(
SPEC_TYPE
)
REFERENCES R_CAT_EQUIP_SPEC
(
SPEC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CEQS_R_CSC_FK'
ALTER TABLE CAT_EQUIP_SPEC ADD CONSTRAINT CEQS_R_CSC_FK FOREIGN KEY
(
SPEC_TYPE,
SPEC_CODE
)
REFERENCES R_CAT_EQUIP_SPEC_CODE
(
SPEC_TYPE,
SPEC_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CEQS_R_ESRT_FK'
ALTER TABLE CAT_EQUIP_SPEC ADD CONSTRAINT CEQS_R_ESRT_FK FOREIGN KEY
(
REFERENCE_VALUE_TYPE
)
REFERENCES R_EQUIP_SPEC_REF_TYPE
(
REFERENCE_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSL_CLSLT_FK'
ALTER TABLE CLASS_LEVEL ADD CONSTRAINT CLSL_CLSLT_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
LEVEL_TYPE
)
REFERENCES CLASS_LEVEL_TYPE
(
CLASSIFICATION_SYSTEM_ID,
LEVEL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSL_CLSS_FK'
ALTER TABLE CLASS_LEVEL ADD CONSTRAINT CLSL_CLSS_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID
)
REFERENCES CLASS_SYSTEM
(
CLASSIFICATION_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSL_R_RP1_FK'
ALTER TABLE CLASS_LEVEL ADD CONSTRAINT CLSL_R_RP1_FK FOREIGN KEY
(
RETENTION_PERIOD
)
REFERENCES R_RETENTION_PERIOD
(
RETENTION_PERIOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLAL_BA_FK'
ALTER TABLE CLASS_LEVEL_ALIAS ADD CONSTRAINT CLSLAL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLAL_CLSL_FK'
ALTER TABLE CLASS_LEVEL_ALIAS ADD CONSTRAINT CLSLAL_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLAL_PC_FK'
ALTER TABLE CLASS_LEVEL_ALIAS ADD CONSTRAINT CLSLAL_PC_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLAL_PSE_FK'
ALTER TABLE CLASS_LEVEL_ALIAS ADD CONSTRAINT CLSLAL_PSE_FK FOREIGN KEY
(
SYSTEM_ID,
SCHEMA_ENTITY_ID
)
REFERENCES PPDM_SCHEMA_ENTITY
(
SYSTEM_ID,
SCHEMA_ENTITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLAL_PSWA_FK'
ALTER TABLE CLASS_LEVEL_ALIAS ADD CONSTRAINT CLSLAL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLAL_PT_FK'
ALTER TABLE CLASS_LEVEL_ALIAS ADD CONSTRAINT CLSLAL_PT_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLAL_R_ART_FK'
ALTER TABLE CLASS_LEVEL_ALIAS ADD CONSTRAINT CLSLAL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLAL_R_ATY_FK'
ALTER TABLE CLASS_LEVEL_ALIAS ADD CONSTRAINT CLSLAL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLAL_R_LANG_FK'
ALTER TABLE CLASS_LEVEL_ALIAS ADD CONSTRAINT CLSLAL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLAL_SRCD_FK'
ALTER TABLE CLASS_LEVEL_ALIAS ADD CONSTRAINT CLSLAL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_ANLR_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_APP_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_A_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_BAAU_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_BAE_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_BAO_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_BA_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_CA_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_CEQ_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_CLSL_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_CON_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_CO_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_COT_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_C_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_EZ_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_ENT_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_EQ_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_FAC_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_FLD_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_FIN_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_FOS_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_HI_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_HIT_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_HIT_FK FOREIGN KEY
(
INCIDENT_SET_ID,
INCIDENT_TYPE
)
REFERENCES HSE_INCIDENT_TYPE
(
INCIDENT_SET_ID,
INCIDENT_TYPE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_INS_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_INT_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_LR_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_LS_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_LIL_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_NOTI_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_OB_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_PASU_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_PDE_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_PL_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_PSWA_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_PT_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_PT_FK FOREIGN KEY
(
REFERENCED_SYSTEM_ID,
REFERENCED_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_PS_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_PS_FK FOREIGN KEY
(
PR_STR_UWI,
PR_STR_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_PROJ_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_RATE_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_RSCL_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_RSE_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_RMDSS_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_RMII_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_RMPI_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_RMTW_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_R_CLCT_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_R_CLCT_FK FOREIGN KEY
(
CLASS_LEVEL_COMPONENT_TYPE
)
REFERENCES R_CLASS_LEV_COMP_TYPE
(
CLASS_LEVEL_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_R_LANG_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_R_LANG_FK FOREIGN KEY
(
LANGUAGE
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_SS_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_SF_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_SPD_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_STFST_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_STU_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_SUB_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_W_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_WAC_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_WAC_FK FOREIGN KEY
(
WELL_ACTIVITY_UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_WAT_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_WAT_FK FOREIGN KEY
(
WELL_ACTIVITY_SET_ID,
WELL_ACTIVITY_TYPE_ID
)
REFERENCES WELL_ACTIVITY_TYPE
(
ACTIVITY_SET_ID,
ACTIVITY_TYPE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_WSET_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLCOMP_WO_FK'
ALTER TABLE CLASS_LEVEL_COMPONENT ADD CONSTRAINT CLSLCOMP_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLD_CLSL_FK'
ALTER TABLE CLASS_LEVEL_DESC ADD CONSTRAINT CLSLD_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLD_R_CDP_FK'
ALTER TABLE CLASS_LEVEL_DESC ADD CONSTRAINT CLSLD_R_CDP_FK FOREIGN KEY
(
DESC_TYPE
)
REFERENCES R_CLASS_DESC_PROPERTY
(
DESC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLT_CLSS_FK'
ALTER TABLE CLASS_LEVEL_TYPE ADD CONSTRAINT CLSLT_CLSS_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID
)
REFERENCES CLASS_SYSTEM
(
CLASSIFICATION_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLT_PT_FK'
ALTER TABLE CLASS_LEVEL_TYPE ADD CONSTRAINT CLSLT_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLX_CLSL_FK'
ALTER TABLE CLASS_LEVEL_XREF ADD CONSTRAINT CLSLX_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLX_CLSL_FK2'
ALTER TABLE CLASS_LEVEL_XREF ADD CONSTRAINT CLSLX_CLSL_FK2 FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID2,
CLASS_LEVEL_ID2
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLX_R_CLXT_FK'
ALTER TABLE CLASS_LEVEL_XREF ADD CONSTRAINT CLSLX_R_CLXT_FK FOREIGN KEY
(
LEVEL_XREF_TYPE
)
REFERENCES R_CLASS_LEV_XREF_TYPE
(
LEVEL_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSLX_SRCD_FK'
ALTER TABLE CLASS_LEVEL_XREF ADD CONSTRAINT CLSLX_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSS_BA_FK'
ALTER TABLE CLASS_SYSTEM ADD CONSTRAINT CLSS_BA_FK FOREIGN KEY
(
SYSTEM_OWNER
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSS_R_CSD_FK'
ALTER TABLE CLASS_SYSTEM ADD CONSTRAINT CLSS_R_CSD_FK FOREIGN KEY
(
CLASS_DIMENSION
)
REFERENCES R_CLASS_SYSTEM_DIMENSION
(
CLASS_DIMENSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSS_SRCD_FK'
ALTER TABLE CLASS_SYSTEM ADD CONSTRAINT CLSS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSSAL_BA_FK'
ALTER TABLE CLASS_SYSTEM_ALIAS ADD CONSTRAINT CLSSAL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSSAL_CLSS_FK'
ALTER TABLE CLASS_SYSTEM_ALIAS ADD CONSTRAINT CLSSAL_CLSS_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID
)
REFERENCES CLASS_SYSTEM
(
CLASSIFICATION_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSSAL_PSWA_FK'
ALTER TABLE CLASS_SYSTEM_ALIAS ADD CONSTRAINT CLSSAL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSSAL_R_ART_FK'
ALTER TABLE CLASS_SYSTEM_ALIAS ADD CONSTRAINT CLSSAL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSSAL_R_ATY_FK'
ALTER TABLE CLASS_SYSTEM_ALIAS ADD CONSTRAINT CLSSAL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSSAL_R_LANG_FK'
ALTER TABLE CLASS_SYSTEM_ALIAS ADD CONSTRAINT CLSSAL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSSAL_SRCD_FK'
ALTER TABLE CLASS_SYSTEM_ALIAS ADD CONSTRAINT CLSSAL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSSEQ_CLSS_FK'
ALTER TABLE CLASS_SYSTEM_XREF ADD CONSTRAINT CLSSEQ_CLSS_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID
)
REFERENCES CLASS_SYSTEM
(
CLASSIFICATION_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSSEQ_CLSS_FK2'
ALTER TABLE CLASS_SYSTEM_XREF ADD CONSTRAINT CLSSEQ_CLSS_FK2 FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID2
)
REFERENCES CLASS_SYSTEM
(
CLASSIFICATION_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSSEQ_R_CSET_FK'
ALTER TABLE CLASS_SYSTEM_XREF ADD CONSTRAINT CLSSEQ_R_CSET_FK FOREIGN KEY
(
SYSTEM_XREF_TYPE
)
REFERENCES R_CLASS_SYST_XREF_TYPE
(
SYSTEM_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CLSSEQ_SRCD_FK'
ALTER TABLE CLASS_SYSTEM_XREF ADD CONSTRAINT CLSSEQ_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CON_R_CONSS_FK'
ALTER TABLE CONSENT ADD CONSTRAINT CON_R_CONSS_FK FOREIGN KEY
(
CURRENT_STATUS
)
REFERENCES R_CONSENT_STATUS
(
CONSENT_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CON_R_CONST_FK'
ALTER TABLE CONSENT ADD CONSTRAINT CON_R_CONST_FK FOREIGN KEY
(
CONSENT_TYPE
)
REFERENCES R_CONSENT_TYPE
(
CONSENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONB_BA_FK'
ALTER TABLE CONSENT_BA ADD CONSTRAINT CONB_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONB_CON_FK'
ALTER TABLE CONSENT_BA ADD CONSTRAINT CONB_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONB_R_CONSBR_FK'
ALTER TABLE CONSENT_BA ADD CONSTRAINT CONB_R_CONSBR_FK FOREIGN KEY
(
ROLE
)
REFERENCES R_CONSENT_BA_ROLE
(
CONSENT_BA_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_ANLR_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_APP_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_A_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_BAAU_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_BAE_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_BALIC_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_BALIC_FK FOREIGN KEY
(
BA_LICENSEE_BA_ID,
BA_LICENSE_ID
)
REFERENCES BA_LICENSE
(
LICENSEE_BA_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_BAO_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_BA_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_CA_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_CEQ_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_CLSL_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_CON_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_CO_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_COT_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_C_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_EZ_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_ENT_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_EQ_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_FAC_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_FACL_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_FACL_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE,
FACILITY_LICENSE_ID
)
REFERENCES FACILITY_LICENSE
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_FLD_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_FIN_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_FOS_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_HI_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_INS_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_INT_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_LR_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_LS_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_LIL_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_NOTI_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_OB_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_PASU_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_PDE_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_PL_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_PSWA_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_PSYS_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_PT_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_PS_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_PROJ_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_RATE_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_RSCL_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_RSE_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_REST_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_REST_FK FOREIGN KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION
)
REFERENCES RESTRICTION
(
RESTRICTION_ID,
RESTRICTION_VERSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_RMDSS_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_RMII_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_RMPI_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_RMTW_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_R_CONSCT_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_R_CONSCT_FK FOREIGN KEY
(
CONSENT_COMPONENT_TYPE
)
REFERENCES R_CONSENT_COMP_TYPE
(
CONSENT_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_SLIC_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_SLIC_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_LICENSE_ID
)
REFERENCES SEIS_LICENSE
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_SS_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_SF_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_SPD_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_STFST_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_STU_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_SUB_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_W_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_WAC_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_WAC_FK FOREIGN KEY
(
UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_WLIC_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_WLIC_FK FOREIGN KEY
(
UWI,
WELL_LICENSE_SOURCE,
WELL_LICENSE_ID
)
REFERENCES WELL_LICENSE
(
UWI,
SOURCE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_WSET_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONCOM_WO_FK'
ALTER TABLE CONSENT_COMPONENT ADD CONSTRAINT CONCOM_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONC_CON_FK'
ALTER TABLE CONSENT_COND ADD CONSTRAINT CONC_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONC_CONCOM_FK'
ALTER TABLE CONSENT_COND ADD CONSTRAINT CONC_CONCOM_FK FOREIGN KEY
(
CONSENT_ID,
COMPONENT_ID
)
REFERENCES CONSENT_COMPONENT
(
CONSENT_ID,
COMPONENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONC_R_CONSC_FK'
ALTER TABLE CONSENT_COND ADD CONSTRAINT CONC_R_CONSC_FK FOREIGN KEY
(
CONSENT_TYPE,
CONSENT_CONDITION
)
REFERENCES R_CONSENT_CONDITION
(
CONSENT_TYPE,
CONSENT_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONR_BA_FK2'
ALTER TABLE CONSENT_REMARK ADD CONSTRAINT CONR_BA_FK2 FOREIGN KEY
(
MADE_ABOUT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONR_BA_FK'
ALTER TABLE CONSENT_REMARK ADD CONSTRAINT CONR_BA_FK FOREIGN KEY
(
MADE_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONR_BA_FK3'
ALTER TABLE CONSENT_REMARK ADD CONSTRAINT CONR_BA_FK3 FOREIGN KEY
(
MADE_FOR_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONR_CON_FK'
ALTER TABLE CONSENT_REMARK ADD CONSTRAINT CONR_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CONR_R_CONSR_FK'
ALTER TABLE CONSENT_REMARK ADD CONSTRAINT CONR_R_CONSR_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_CONSENT_REMARK
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CO_R_COR_FK'
ALTER TABLE CONSULT ADD CONSTRAINT CO_R_COR_FK FOREIGN KEY
(
CONSULT_REASON
)
REFERENCES R_CONSULT_REASON
(
CONSULT_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CO_R_COTY_FK'
ALTER TABLE CONSULT ADD CONSTRAINT CO_R_COTY_FK FOREIGN KEY
(
CONSULT_TYPE
)
REFERENCES R_CONSULT_TYPE
(
CONSULT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CO_R_PT3_FK'
ALTER TABLE CONSULT ADD CONSTRAINT CO_R_PT3_FK FOREIGN KEY
(
PERIOD_TYPE
)
REFERENCES R_PERIOD_TYPE
(
PERIOD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COB_BA_FK'
ALTER TABLE CONSULT_BA ADD CONSTRAINT COB_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COB_BA_FK2'
ALTER TABLE CONSULT_BA ADD CONSTRAINT COB_BA_FK2 FOREIGN KEY
(
REPRESENTED_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COB_CO_FK'
ALTER TABLE CONSULT_BA ADD CONSTRAINT COB_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COB_R_CORL_FK'
ALTER TABLE CONSULT_BA ADD CONSTRAINT COB_R_CORL_FK FOREIGN KEY
(
CONSULT_ROLE
)
REFERENCES R_CONSULT_ROLE
(
CONSULT_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_ANLR_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_APP_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_A_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_BAAU_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_BAE_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_BALIC_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_BALIC_FK FOREIGN KEY
(
BA_LICENSEE_BA_ID,
BA_LICENSE_ID
)
REFERENCES BA_LICENSE
(
LICENSEE_BA_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_BAO_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_BA_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_CA_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_CEQ_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_CLSL_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_CON_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_CO_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_COT_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_C_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_CP_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_CP_FK FOREIGN KEY
(
CONTRACT_ID,
PROVISION_ID
)
REFERENCES CONT_PROVISION
(
CONTRACT_ID,
PROVISION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_EZ_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_ENT_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_EQ_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_FAC_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_FACL_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_FACL_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE,
FACILITY_LICENSE_ID
)
REFERENCES FACILITY_LICENSE
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_FLD_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_FIN_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_FOS_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_HI_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_HI_FK FOREIGN KEY
(
HSE_INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_INS_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_INT_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_LR_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_LS_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_LS_FK FOREIGN KEY
(
LAND_SALE_JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_LIL_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_NOTI_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_OB_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_PASU_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_PDE_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_PL_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_PSWA_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_PSYS_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_PT_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_PS_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_PROJ_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_RATE_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_RSCL_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_RSE_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_REST_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_REST_FK FOREIGN KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION
)
REFERENCES RESTRICTION
(
RESTRICTION_ID,
RESTRICTION_VERSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_RMDSS_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_RMII_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_RMPI_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_RMTW_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_R_CCT_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_R_CCT_FK FOREIGN KEY
(
COMPONENT_TYPE
)
REFERENCES R_CONSULT_COMP_TYPE
(
COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_SLIC_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_SLIC_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_LICENSE_ID
)
REFERENCES SEIS_LICENSE
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_SS_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_SFPL_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_SFPL_FK FOREIGN KEY
(
SF_SUBTYPE,
PLATFORM_ID
)
REFERENCES SF_PLATFORM
(
SF_SUBTYPE,
PLATFORM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_SF_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_SPD_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_STFST_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_STU_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_SUB_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_W_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_WAC_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_WAC_FK FOREIGN KEY
(
UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_WLIC_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_WLIC_FK FOREIGN KEY
(
UWI,
WELL_LICENSE_SOURCE,
WELL_LICENSE_ID
)
REFERENCES WELL_LICENSE
(
UWI,
SOURCE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_WSET_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COCOM_WO_FK'
ALTER TABLE CONSULT_COMPONENT ADD CONSTRAINT COCOM_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COD_CO_FK'
ALTER TABLE CONSULT_DISC ADD CONSTRAINT COD_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COD_R_CODT_FK'
ALTER TABLE CONSULT_DISC ADD CONSTRAINT COD_R_CODT_FK FOREIGN KEY
(
DISCUSSION_TYPE
)
REFERENCES R_CONSULT_DISC_TYPE
(
DISCUSSION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CODB_COB_FK'
ALTER TABLE CONSULT_DISC_BA ADD CONSTRAINT CODB_COB_FK FOREIGN KEY
(
CONSULT_ID,
BUSINESS_ASSOCIATE_ID
)
REFERENCES CONSULT_BA
(
CONSULT_ID,
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CODB_COD_FK'
ALTER TABLE CONSULT_DISC_BA ADD CONSTRAINT CODB_COD_FK FOREIGN KEY
(
CONSULT_ID,
DISCUSSION_ID
)
REFERENCES CONSULT_DISC
(
CONSULT_ID,
DISCUSSION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CODB_R_COAT_FK'
ALTER TABLE CONSULT_DISC_BA ADD CONSTRAINT CODB_R_COAT_FK FOREIGN KEY
(
ATTEND_TYPE
)
REFERENCES R_CONSULT_ATTEND_TYPE
(
ATTEND_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CODI_COD_FK'
ALTER TABLE CONSULT_DISC_ISSUE ADD CONSTRAINT CODI_COD_FK FOREIGN KEY
(
CONSULT_ID,
DISCUSSION_ID
)
REFERENCES CONSULT_DISC
(
CONSULT_ID,
DISCUSSION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CODI_COI_FK'
ALTER TABLE CONSULT_DISC_ISSUE ADD CONSTRAINT CODI_COI_FK FOREIGN KEY
(
CONSULT_ID,
DETAIL_ID
)
REFERENCES CONSULT_ISSUE
(
CONSULT_ID,
DETAIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COI_CO_FK'
ALTER TABLE CONSULT_ISSUE ADD CONSTRAINT COI_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COI_R_COIT_FK'
ALTER TABLE CONSULT_ISSUE ADD CONSTRAINT COI_R_COIT_FK FOREIGN KEY
(
ISSUE_TYPE
)
REFERENCES R_CONSULT_ISSUE_TYPE
(
CONSULT_ISSUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COI_R_CORE_FK'
ALTER TABLE CONSULT_ISSUE ADD CONSTRAINT COI_R_CORE_FK FOREIGN KEY
(
RESOLUTION
)
REFERENCES R_CONSULT_RESOLUTION
(
CONSULT_RESOLUTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COI_R_RT2_FK'
ALTER TABLE CONSULT_ISSUE ADD CONSTRAINT COI_R_RT2_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_REMARK_TYPE
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COX_CO_FK'
ALTER TABLE CONSULT_XREF ADD CONSTRAINT COX_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COX_CO_FK2'
ALTER TABLE CONSULT_XREF ADD CONSTRAINT COX_CO_FK2 FOREIGN KEY
(
CONSULT_ID2
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COX_R_COX_FK'
ALTER TABLE CONSULT_XREF ADD CONSTRAINT COX_R_COX_FK FOREIGN KEY
(
CONSULT_XREF_TYPE
)
REFERENCES R_CONSULT_XREF_TYPE
(
CONSULT_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COT_R_CRES_FK'
ALTER TABLE CONTEST ADD CONSTRAINT COT_R_CRES_FK FOREIGN KEY
(
RESOLUTION_METHOD
)
REFERENCES R_CONTEST_RESOLUTION
(
RESOLUTION_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COT_R_CTY_FK'
ALTER TABLE CONTEST ADD CONSTRAINT COT_R_CTY_FK FOREIGN KEY
(
LR_CONTEST_TYPE
)
REFERENCES R_CONTEST_TYPE
(
CONTEST_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_ANLR_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_APP_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_A_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_BAAU_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_BAE_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_BAO_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_BA_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_CA_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_CEQ_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_CLSL_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_CON_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_CO_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_COT_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_C_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_EZ_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_ENT_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_EQ_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_FAC_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_FLD_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_FIN_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_FOS_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_HI_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_INS_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_INT_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_LR_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_LS_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_LIL_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_NOTI_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_OB_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_PASU_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_PDE_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_PL_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_PSWA_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_PSYS_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_PT_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_PS_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_PROJ_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_RATE_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_RSCL_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_RSE_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_RMDSS_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_RMII_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_RMPI_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_RMTW_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_R_COTCT_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_R_COTCT_FK FOREIGN KEY
(
CONTEST_COMPONENT_TYPE
)
REFERENCES R_CONTEST_COMP_TYPE
(
CONTEST_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_SS_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_SF_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_SPD_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_STFST_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_STU_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_SUB_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_W_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_WAC_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_WAC_FK FOREIGN KEY
(
UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_WSET_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTCOM_WO_FK'
ALTER TABLE CONTEST_COMPONENT ADD CONSTRAINT COTCOM_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTP_BA_FK'
ALTER TABLE CONTEST_PARTY ADD CONSTRAINT COTP_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTP_COT_FK'
ALTER TABLE CONTEST_PARTY ADD CONSTRAINT COTP_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTP_R_CPR_FK'
ALTER TABLE CONTEST_PARTY ADD CONSTRAINT COTP_R_CPR_FK FOREIGN KEY
(
PARTY_ROLE
)
REFERENCES R_CONTEST_PARTY_ROLE
(
PARTY_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTR_COT_FK'
ALTER TABLE CONTEST_REMARK ADD CONSTRAINT COTR_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COTR_R_RT2_FK'
ALTER TABLE CONTEST_REMARK ADD CONSTRAINT COTR_R_RT2_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_REMARK_TYPE
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT C_CAR_FK'
ALTER TABLE CONTRACT ADD CONSTRAINT C_CAR_FK FOREIGN KEY
(
CONTRACT_ID,
AREA_ID,
AREA_TYPE
)
REFERENCES CONT_AREA
(
CONTRACT_ID,
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT C_R_CXC_FK'
ALTER TABLE CONTRACT ADD CONSTRAINT C_R_CXC_FK FOREIGN KEY
(
EXTENSION_CONDITION
)
REFERENCES R_CONT_EXTEND_COND
(
EXTENSION_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT C_SRCD_FK'
ALTER TABLE CONTRACT ADD CONSTRAINT C_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_ANLR_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_APP_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_A_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_BAAU_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_BAE_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_BAO_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_BA_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_CA_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_CEQ_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_CLSL_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_CON_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_CO_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_COT_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_C_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_CP_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_CP_FK FOREIGN KEY
(
CONTRACT_ID,
PROVISION_ID
)
REFERENCES CONT_PROVISION
(
CONTRACT_ID,
PROVISION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_EZ_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_ENT_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_EQ_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_FAC_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_FLD_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_FIN_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_FOS_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_HI_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_INS_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_INT_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_LRBS_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_LRBS_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
BUSINESS_ASSOCIATE_ID,
BA_SERVICE_SEQ_NO
)
REFERENCES LAND_BA_SERVICE
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
PROVIDED_BY,
SERVICE_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_LR_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_LS_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_LSOB_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_LSOB_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID,
LAND_OFFERING_BID_ID
)
REFERENCES LAND_SALE_BID
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID,
LAND_OFFERING_BID_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_LSRQ_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_LSRQ_FK FOREIGN KEY
(
LAND_REQUEST_ID
)
REFERENCES LAND_SALE_REQUEST
(
LAND_REQUEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_LIL_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_NOTI_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_OB_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_PASU_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_PDE_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_PL_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_PSWA_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_PSYS_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_PT_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_PS_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_PROJ_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_RATE_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_RSCL_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_RSE_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_RMDSS_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_RMII_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_RMPI_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_RMTW_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_R_CCT2_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_R_CCT2_FK FOREIGN KEY
(
CONTRACT_COMPONENT_TYPE
)
REFERENCES R_CONTRACT_COMP_TYPE
(
CONTRACT_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_R_CCR_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_R_CCR_FK FOREIGN KEY
(
REASON_TYPE
)
REFERENCES R_CONT_COMP_REASON
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_SSPPL_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_SSPPL_FK FOREIGN KEY
(
SEIS_PROC_PLAN_ID
)
REFERENCES SEIS_PROC_PLAN
(
SEIS_PROC_PLAN_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_SS_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_SSTR_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_SSTR_FK FOREIGN KEY
(
SEIS_TRANSACTION_ID,
SEIS_TRANSACTION_TYPE
)
REFERENCES SEIS_TRANSACTION
(
SEIS_TRANSACTION_ID,
TRANSACTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_SF_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_SF_FK FOREIGN KEY
(
SUPPORT_FACILITY_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_SPD_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_STFST_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_STU_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_SUB_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_W_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_WAC_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_WAC_FK FOREIGN KEY
(
UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_WSET_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CCOM_WO_FK'
ALTER TABLE CONTRACT_COMPONENT ADD CONSTRAINT CCOM_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAP_C_FK'
ALTER TABLE CONT_ACCOUNT_PROC ADD CONSTRAINT CAP_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAP_R_APT_FK'
ALTER TABLE CONT_ACCOUNT_PROC ADD CONSTRAINT CAP_R_APT_FK FOREIGN KEY
(
ACCOUNT_PROC_TYPE
)
REFERENCES R_ACCOUNT_PROC_TYPE
(
ACCOUNT_PROC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAP_SRCD_FK'
ALTER TABLE CONT_ACCOUNT_PROC ADD CONSTRAINT CAP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAL_BA_FK'
ALTER TABLE CONT_ALIAS ADD CONSTRAINT CAL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAL_C_FK'
ALTER TABLE CONT_ALIAS ADD CONSTRAINT CAL_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAL_PSWA_FK'
ALTER TABLE CONT_ALIAS ADD CONSTRAINT CAL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAL_R_ART_FK'
ALTER TABLE CONT_ALIAS ADD CONSTRAINT CAL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAL_R_ATY_FK'
ALTER TABLE CONT_ALIAS ADD CONSTRAINT CAL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAL_R_LANG_FK'
ALTER TABLE CONT_ALIAS ADD CONSTRAINT CAL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAL_SRCD_FK'
ALTER TABLE CONT_ALIAS ADD CONSTRAINT CAL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAE_C_FK'
ALTER TABLE CONT_ALLOW_EXPENSE ADD CONSTRAINT CAE_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAE_CAP_FK'
ALTER TABLE CONT_ALLOW_EXPENSE ADD CONSTRAINT CAE_CAP_FK FOREIGN KEY
(
CONTRACT_ID,
ACCOUNT_PROC_TYPE,
ACCOUNT_PROC_OBS_NO
)
REFERENCES CONT_ACCOUNT_PROC
(
CONTRACT_ID,
ACCOUNT_PROC_TYPE,
ACCOUNT_PROC_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAE_R_AX_FK'
ALTER TABLE CONT_ALLOW_EXPENSE ADD CONSTRAINT CAE_R_AX_FK FOREIGN KEY
(
ALLOW_EXPENSE_TYPE
)
REFERENCES R_ALLOWABLE_EXPENSE
(
ALLOWABLE_EXPENSE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAR_A_FK'
ALTER TABLE CONT_AREA ADD CONSTRAINT CAR_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CAR_C_FK'
ALTER TABLE CONT_AREA ADD CONSTRAINT CAR_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CBA_BA_FK'
ALTER TABLE CONT_BA ADD CONSTRAINT CBA_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CBA_C_FK'
ALTER TABLE CONT_BA ADD CONSTRAINT CBA_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CBA_R_CBR_FK'
ALTER TABLE CONT_BA ADD CONSTRAINT CBA_R_CBR_FK FOREIGN KEY
(
BA_ROLE
)
REFERENCES R_CONT_BA_ROLE
(
BA_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CBS_BA_FK2'
ALTER TABLE CONT_BA_SERVICE ADD CONSTRAINT CBS_BA_FK2 FOREIGN KEY
(
PROVIDED_BY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CBS_BA_FK'
ALTER TABLE CONT_BA_SERVICE ADD CONSTRAINT CBS_BA_FK FOREIGN KEY
(
CONTACT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CBS_BA_FK3'
ALTER TABLE CONT_BA_SERVICE ADD CONSTRAINT CBS_BA_FK3 FOREIGN KEY
(
REPRESENTED_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CBS_C_FK'
ALTER TABLE CONT_BA_SERVICE ADD CONSTRAINT CBS_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CBS_CP_FK'
ALTER TABLE CONT_BA_SERVICE ADD CONSTRAINT CBS_CP_FK FOREIGN KEY
(
CONTRACT_ID,
PROVISION_ID
)
REFERENCES CONT_PROVISION
(
CONTRACT_ID,
PROVISION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CBS_RATE_FK'
ALTER TABLE CONT_BA_SERVICE ADD CONSTRAINT CBS_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CBS_R_BST_FK'
ALTER TABLE CONT_BA_SERVICE ADD CONSTRAINT CBS_R_BST_FK FOREIGN KEY
(
BA_SERVICE_TYPE
)
REFERENCES R_BA_SERVICE_TYPE
(
BA_SERVICE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CBS_R_SQ_FK'
ALTER TABLE CONT_BA_SERVICE ADD CONSTRAINT CBS_R_SQ_FK FOREIGN KEY
(
SERVICE_QUALITY
)
REFERENCES R_SERVICE_QUALITY
(
SERVICE_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CE_BA_FK'
ALTER TABLE CONT_EXEMPTION ADD CONSTRAINT CE_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CE_C_FK'
ALTER TABLE CONT_EXEMPTION ADD CONSTRAINT CE_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CE_CP_FK'
ALTER TABLE CONT_EXEMPTION ADD CONSTRAINT CE_CP_FK FOREIGN KEY
(
CONTRACT_ID,
PROVISION_ID
)
REFERENCES CONT_PROVISION
(
CONTRACT_ID,
PROVISION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CEX_C_FK'
ALTER TABLE CONT_EXTENSION ADD CONSTRAINT CEX_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CEX_LR_FK'
ALTER TABLE CONT_EXTENSION ADD CONSTRAINT CEX_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CEX_R_CXT_FK'
ALTER TABLE CONT_EXTENSION ADD CONSTRAINT CEX_R_CXT_FK FOREIGN KEY
(
EXTENSION_TYPE
)
REFERENCES R_CONT_EXTEND_TYPE
(
EXTENSION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CJ_BA_FK'
ALTER TABLE CONT_JURISDICTION ADD CONSTRAINT CJ_BA_FK FOREIGN KEY
(
JURISDICTION
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CJ_C_FK'
ALTER TABLE CONT_JURISDICTION ADD CONSTRAINT CJ_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CKW_CP_FK'
ALTER TABLE CONT_KEY_WORD ADD CONSTRAINT CKW_CP_FK FOREIGN KEY
(
CONTRACT_ID,
PROVISION_ID
)
REFERENCES CONT_PROVISION
(
CONTRACT_ID,
PROVISION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CMES_COP_FK'
ALTER TABLE CONT_MKTG_ELECT_SUBST ADD CONSTRAINT CMES_COP_FK FOREIGN KEY
(
CONTRACT_ID,
OPERATING_PROCEDURE_ID
)
REFERENCES CONT_OPER_PROC
(
CONTRACT_ID,
OPERATING_PROCEDURE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CMES_SUB_FK'
ALTER TABLE CONT_MKTG_ELECT_SUBST ADD CONSTRAINT CMES_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COP_C_FK'
ALTER TABLE CONT_OPER_PROC ADD CONSTRAINT COP_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COP_R_CIE_FK'
ALTER TABLE CONT_OPER_PROC ADD CONSTRAINT COP_R_CIE_FK FOREIGN KEY
(
INSURANCE_ELECTION
)
REFERENCES R_CONT_INSUR_ELECT
(
INSURANCE_ELECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COP_R_COP_FK'
ALTER TABLE CONT_OPER_PROC ADD CONSTRAINT COP_R_COP_FK FOREIGN KEY
(
OPERATING_PROCEDURE_TYPE
)
REFERENCES R_CONT_OPERATING_PROC
(
OPERATING_PROCEDURE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT COP_SRCD_FK'
ALTER TABLE CONT_OPER_PROC ADD CONSTRAINT COP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CP_C_FK'
ALTER TABLE CONT_PROVISION ADD CONSTRAINT CP_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CP_R_CPT_FK'
ALTER TABLE CONT_PROVISION ADD CONSTRAINT CP_R_CPT_FK FOREIGN KEY
(
CONT_PROVISION_TYPE
)
REFERENCES R_CONT_PROVISION_TYPE
(
CONT_PROVISION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CP_SRCD_FK'
ALTER TABLE CONT_PROVISION ADD CONSTRAINT CP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CPT_CP_FK'
ALTER TABLE CONT_PROVISION_TEXT ADD CONSTRAINT CPT_CP_FK FOREIGN KEY
(
CONTRACT_ID,
PROVISION_ID
)
REFERENCES CONT_PROVISION
(
CONTRACT_ID,
PROVISION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CPX_CP_FK'
ALTER TABLE CONT_PROVISION_XREF ADD CONSTRAINT CPX_CP_FK FOREIGN KEY
(
CONTRACT_ID,
PROVISION_ID
)
REFERENCES CONT_PROVISION
(
CONTRACT_ID,
PROVISION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CPX_CP_FK2'
ALTER TABLE CONT_PROVISION_XREF ADD CONSTRAINT CPX_CP_FK2 FOREIGN KEY
(
CONTRACT_ID_2,
PROVISION_ID_2
)
REFERENCES CONT_PROVISION
(
CONTRACT_ID,
PROVISION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CPX_R_CPXT_FK'
ALTER TABLE CONT_PROVISION_XREF ADD CONSTRAINT CPX_R_CPXT_FK FOREIGN KEY
(
PROVISION_XREF_TYPE
)
REFERENCES R_CONT_PROV_XREF_TYPE
(
PROVISION_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CR_C_FK'
ALTER TABLE CONT_REMARK ADD CONSTRAINT CR_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CR_R_RT2_FK'
ALTER TABLE CONT_REMARK ADD CONSTRAINT CR_R_RT2_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_REMARK_TYPE
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CST_C_FK'
ALTER TABLE CONT_STATUS ADD CONSTRAINT CST_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CST_R_CSTAT_FK'
ALTER TABLE CONT_STATUS ADD CONSTRAINT CST_R_CSTAT_FK FOREIGN KEY
(
CONTRACT_STATUS
)
REFERENCES R_CONT_STATUS
(
CONTRACT_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CST_R_CST3_FK'
ALTER TABLE CONT_STATUS ADD CONSTRAINT CST_R_CST3_FK FOREIGN KEY
(
CONTRACT_STATUS_TYPE
)
REFERENCES R_CONT_STATUS_TYPE
(
CONTRACT_STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CT_C_FK'
ALTER TABLE CONT_TYPE ADD CONSTRAINT CT_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CT_R_CT8_FK'
ALTER TABLE CONT_TYPE ADD CONSTRAINT CT_R_CT8_FK FOREIGN KEY
(
CONTRACT_TYPE
)
REFERENCES R_CONT_TYPE
(
CONTRACT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CVP_C_FK'
ALTER TABLE CONT_VOTING_PROC ADD CONSTRAINT CVP_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CVP_R_CVR_FK'
ALTER TABLE CONT_VOTING_PROC ADD CONSTRAINT CVP_R_CVR_FK FOREIGN KEY
(
NO_VOTE_RESPONSE
)
REFERENCES R_CONT_VOTE_RESPONSE
(
VOTE_RESPONSE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CVP_R_CVT_FK'
ALTER TABLE CONT_VOTING_PROC ADD CONSTRAINT CVP_R_CVT_FK FOREIGN KEY
(
VOTE_PROCEDURE_TYPE
)
REFERENCES R_CONT_VOTE_TYPE
(
VOTE_PROCEDURE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CVP_SRCD_FK'
ALTER TABLE CONT_VOTING_PROC ADD CONSTRAINT CVP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CX_C_FK'
ALTER TABLE CONT_XREF ADD CONSTRAINT CX_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CX_C_FK2'
ALTER TABLE CONT_XREF ADD CONSTRAINT CX_C_FK2 FOREIGN KEY
(
CONTRACT_ID_2
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CX_R_CXTY_FK'
ALTER TABLE CONT_XREF ADD CONSTRAINT CX_R_CXTY_FK FOREIGN KEY
(
CONTRACT_XREF_TYPE
)
REFERENCES R_CONT_XREF_TYPE
(
CONTRACT_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CSA_BA_FK'
ALTER TABLE CS_ALIAS ADD CONSTRAINT CSA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CSA_CS_FK'
ALTER TABLE CS_ALIAS ADD CONSTRAINT CSA_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CSA_PSWA_FK'
ALTER TABLE CS_ALIAS ADD CONSTRAINT CSA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CSA_R_ART_FK'
ALTER TABLE CS_ALIAS ADD CONSTRAINT CSA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CSA_R_ATY_FK'
ALTER TABLE CS_ALIAS ADD CONSTRAINT CSA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CSA_SRCD_FK'
ALTER TABLE CS_ALIAS ADD CONSTRAINT CSA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CS_BA_FK'
ALTER TABLE CS_COORDINATE_SYSTEM ADD CONSTRAINT CS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CS_CS_FK'
ALTER TABLE CS_COORDINATE_SYSTEM ADD CONSTRAINT CS_CS_FK FOREIGN KEY
(
PARENT_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CS_CSGD_FK'
ALTER TABLE CS_COORDINATE_SYSTEM ADD CONSTRAINT CS_CSGD_FK FOREIGN KEY
(
GEODETIC_DATUM
)
REFERENCES CS_GEODETIC_DATUM
(
GEODETIC_DATUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CS_CSPM_FK'
ALTER TABLE CS_COORDINATE_SYSTEM ADD CONSTRAINT CS_CSPM_FK FOREIGN KEY
(
PRIME_MERIDIAN
)
REFERENCES CS_PRIME_MERIDIAN
(
PRIME_MERIDIAN_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CS_CSPME_FK'
ALTER TABLE CS_COORDINATE_SYSTEM ADD CONSTRAINT CS_CSPME_FK FOREIGN KEY
(
PRINCIPAL_MERIDIAN
)
REFERENCES CS_PRINCIPAL_MERIDIAN
(
PRINCIPAL_MERIDIAN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CS_R_CST1_FK'
ALTER TABLE CS_COORDINATE_SYSTEM ADD CONSTRAINT CS_R_CST1_FK FOREIGN KEY
(
COORDINATE_SYSTEM_TYPE
)
REFERENCES R_COORD_SYSTEM_TYPE
(
COORDINATE_SYSTEM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CS_R_PT10_FK'
ALTER TABLE CS_COORDINATE_SYSTEM ADD CONSTRAINT CS_R_PT10_FK FOREIGN KEY
(
PROJECTION_TYPE
)
REFERENCES R_PROJECTION_TYPE
(
PROJECTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CS_R_VDT_FK'
ALTER TABLE CS_COORDINATE_SYSTEM ADD CONSTRAINT CS_R_VDT_FK FOREIGN KEY
(
VERTICAL_DATUM_TYPE
)
REFERENCES R_VERTICAL_DATUM_TYPE
(
VERTICAL_DATUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CS_SRCD_FK'
ALTER TABLE CS_COORDINATE_SYSTEM ADD CONSTRAINT CS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CSCA_BA_FK'
ALTER TABLE CS_COORD_ACQUISITION ADD CONSTRAINT CSCA_BA_FK FOREIGN KEY
(
ACQUIRED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CSCA_CSCT_FK'
ALTER TABLE CS_COORD_ACQUISITION ADD CONSTRAINT CSCA_CSCT_FK FOREIGN KEY
(
TRANSFORM_ID
)
REFERENCES CS_COORD_TRANSFORM
(
TRANSFORM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CSCA_R_CC_FK'
ALTER TABLE CS_COORD_ACQUISITION ADD CONSTRAINT CSCA_R_CC_FK FOREIGN KEY
(
CAPTURE_METHOD
)
REFERENCES R_COORD_CAPTURE
(
CAPTURE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CSCA_R_CC1_FK'
ALTER TABLE CS_COORD_ACQUISITION ADD CONSTRAINT CSCA_R_CC1_FK FOREIGN KEY
(
COMPUTE_METHOD
)
REFERENCES R_COORD_COMPUTE
(
COMPUTE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CSCA_R_CQ_FK'
ALTER TABLE CS_COORD_ACQUISITION ADD CONSTRAINT CSCA_R_CQ_FK FOREIGN KEY
(
COORDINATE_QUALITY
)
REFERENCES R_COORD_QUALITY
(
COORDINATE_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CSCT_CS_FK'
ALTER TABLE CS_COORD_TRANSFORM ADD CONSTRAINT CSCT_CS_FK FOREIGN KEY
(
SOURCE_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CSCT_CS_FK2'
ALTER TABLE CS_COORD_TRANSFORM ADD CONSTRAINT CSCT_CS_FK2 FOREIGN KEY
(
TARGET_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CSCT_R_CTT_FK'
ALTER TABLE CS_COORD_TRANSFORM ADD CONSTRAINT CSCT_R_CTT_FK FOREIGN KEY
(
TRANSFORM_TYPE
)
REFERENCES R_CS_TRANSFORM_TYPE
(
TRANSFORM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CSCT_SRCD_FK'
ALTER TABLE CS_COORD_TRANSFORM ADD CONSTRAINT CSCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CSCTP_R_CSTP_FK'
ALTER TABLE CS_COORD_TRANS_PARM ADD CONSTRAINT CSCTP_R_CSTP_FK FOREIGN KEY
(
TRANSFORM_PARM
)
REFERENCES R_CS_TRANSFORM_PARM
(
TRANSFORM_PARM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CSCTP_R_CTT_FK'
ALTER TABLE CS_COORD_TRANS_PARM ADD CONSTRAINT CSCTP_R_CTT_FK FOREIGN KEY
(
TRANSFORM_TYPE
)
REFERENCES R_CS_TRANSFORM_TYPE
(
TRANSFORM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CSCTP_R_DO1_FK'
ALTER TABLE CS_COORD_TRANS_PARM ADD CONSTRAINT CSCTP_R_DO1_FK FOREIGN KEY
(
DIGITAL_OUTPUT
)
REFERENCES R_DIGITAL_OUTPUT
(
DIGITAL_OUTPUT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CSCTP_SRCD_FK'
ALTER TABLE CS_COORD_TRANS_PARM ADD CONSTRAINT CSCTP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CSCTV_CSCT_FK'
ALTER TABLE CS_COORD_TRANS_VALUE ADD CONSTRAINT CSCTV_CSCT_FK FOREIGN KEY
(
TRANSFORM_ID
)
REFERENCES CS_COORD_TRANSFORM
(
TRANSFORM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CSCTV_CSCTP_FK'
ALTER TABLE CS_COORD_TRANS_VALUE ADD CONSTRAINT CSCTV_CSCTP_FK FOREIGN KEY
(
TRANSFORM_TYPE,
PARAMETER_ID
)
REFERENCES CS_COORD_TRANS_PARM
(
TRANSFORM_TYPE,
PARAMETER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CSCTV_SRCD_FK'
ALTER TABLE CS_COORD_TRANS_VALUE ADD CONSTRAINT CSCTV_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CSGD_A_FK'
ALTER TABLE CS_GEODETIC_DATUM ADD CONSTRAINT CSGD_A_FK FOREIGN KEY
(
GEODETIC_DATUM_AREA_ID,
GEODETIC_DATUM_AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CSGD_CSE_FK'
ALTER TABLE CS_GEODETIC_DATUM ADD CONSTRAINT CSGD_CSE_FK FOREIGN KEY
(
ELLIPSOID_ID
)
REFERENCES CS_ELLIPSOID
(
ELLIPSOID_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT CSGD_R_DO_FK'
ALTER TABLE CS_GEODETIC_DATUM ADD CONSTRAINT CSGD_R_DO_FK FOREIGN KEY
(
DATUM_ORIGIN
)
REFERENCES R_DATUM_ORIGIN
(
DATUM_ORIGIN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EZ_R_EZT_FK'
ALTER TABLE ECOZONE ADD CONSTRAINT EZ_R_EZT_FK FOREIGN KEY
(
ECOZONE_TYPE
)
REFERENCES R_ECOZONE_TYPE
(
ECOZONE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EZA_BA_FK'
ALTER TABLE ECOZONE_ALIAS ADD CONSTRAINT EZA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EZA_EZ_FK'
ALTER TABLE ECOZONE_ALIAS ADD CONSTRAINT EZA_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EZA_PSWA_FK'
ALTER TABLE ECOZONE_ALIAS ADD CONSTRAINT EZA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EZA_R_ART_FK'
ALTER TABLE ECOZONE_ALIAS ADD CONSTRAINT EZA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EZA_R_ATY_FK'
ALTER TABLE ECOZONE_ALIAS ADD CONSTRAINT EZA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EZA_R_LANG_FK'
ALTER TABLE ECOZONE_ALIAS ADD CONSTRAINT EZA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EZH_EZSP_FK'
ALTER TABLE ECOZONE_HIERARCHY ADD CONSTRAINT EZH_EZSP_FK FOREIGN KEY
(
ECOZONE_SET_ID,
PARENT_ECOZONE_ID
)
REFERENCES ECOZONE_SET_PART
(
ECOZONE_SET_ID,
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EZH_EZSP_FK2'
ALTER TABLE ECOZONE_HIERARCHY ADD CONSTRAINT EZH_EZSP_FK2 FOREIGN KEY
(
ECOZONE_SET_ID,
CHILD_ECOZONE_ID
)
REFERENCES ECOZONE_SET_PART
(
ECOZONE_SET_ID,
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EZH_R_EZHL_FK'
ALTER TABLE ECOZONE_HIERARCHY ADD CONSTRAINT EZH_R_EZHL_FK FOREIGN KEY
(
HIERARCHY_LEVEL
)
REFERENCES R_ECOZONE_HIER_LEVEL
(
HIERARCHY_LEVEL
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EZS_BA_FK'
ALTER TABLE ECOZONE_SET ADD CONSTRAINT EZS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EZS_SRCD_FK'
ALTER TABLE ECOZONE_SET ADD CONSTRAINT EZS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EZSP_EZ_FK'
ALTER TABLE ECOZONE_SET_PART ADD CONSTRAINT EZSP_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EZSP_EZS_FK'
ALTER TABLE ECOZONE_SET_PART ADD CONSTRAINT EZSP_EZS_FK FOREIGN KEY
(
ECOZONE_SET_ID
)
REFERENCES ECOZONE_SET
(
ECOZONE_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EZX_EZ_FK'
ALTER TABLE ECOZONE_XREF ADD CONSTRAINT EZX_EZ_FK FOREIGN KEY
(
ECOZONE_ID1
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EZX_EZ_FK2'
ALTER TABLE ECOZONE_XREF ADD CONSTRAINT EZX_EZ_FK2 FOREIGN KEY
(
ECOZONE_ID2
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EZX_R_EZX_FK'
ALTER TABLE ECOZONE_XREF ADD CONSTRAINT EZX_R_EZX_FK FOREIGN KEY
(
ECOZONE_XREF_TYPE
)
REFERENCES R_ECOZONE_XREF
(
ECOZONE_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENT_R_EAT_FK'
ALTER TABLE ENTITLEMENT ADD CONSTRAINT ENT_R_EAT_FK FOREIGN KEY
(
ACCESS_COND_CODE
)
REFERENCES R_ENT_ACCESS_TYPE
(
ACCESS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENT_R_EEA_FK'
ALTER TABLE ENTITLEMENT ADD CONSTRAINT ENT_R_EEA_FK FOREIGN KEY
(
EXPIRY_ACTION
)
REFERENCES R_ENT_EXPIRY_ACTION
(
EXPIRY_ACTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENT_R_ENT_FK'
ALTER TABLE ENTITLEMENT ADD CONSTRAINT ENT_R_ENT_FK FOREIGN KEY
(
ENTITLEMENT_TYPE
)
REFERENCES R_ENT_TYPE
(
ENTITLEMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_ANLR_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_APP_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_A_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_BAAU_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_BAE_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_BAO_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_BA_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_CA_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_CEQ_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_CLSL_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_CON_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_CO_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_COT_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_C_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_EZ_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_ENT_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_EQ_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_FAC_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_FLD_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_FIN_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_FOS_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_HI_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_INS_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_INT_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_LR_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_LS_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_LIL_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_NOTI_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_OB_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_PASU_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_PDE_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_PL_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_PSWA_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_PSYS_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_PT_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_PS_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_PROJ_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_RATE_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_RPHL_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_RPHL_FK FOREIGN KEY
(
REPORT_HIERARCHY_ID,
REPORT_HIER_COMPONENT_ID
)
REFERENCES REPORT_HIER_LEVEL
(
REPORT_HIERARCHY_ID,
COMPONENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_RSCL_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_RSE_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_RMDSS_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_RMII_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_RMPI_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_RMTW_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_R_ACN_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_R_ACN_FK FOREIGN KEY
(
ACCESS_COND_CODE
)
REFERENCES R_ACCESS_CONDITION
(
ACCESS_CONDITION_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_R_ECT_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_R_ECT_FK FOREIGN KEY
(
ENT_COMP_TYPE
)
REFERENCES R_ENT_COMPONENT_TYPE
(
ENT_COMP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_R_EEA_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_R_EEA_FK FOREIGN KEY
(
EXPIRY_ACTION
)
REFERENCES R_ENT_EXPIRY_ACTION
(
EXPIRY_ACTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_SS_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_SSTR_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_SSTR_FK FOREIGN KEY
(
SEIS_TRANSACTION_ID,
TRANSACTION_TYPE
)
REFERENCES SEIS_TRANSACTION
(
SEIS_TRANSACTION_ID,
TRANSACTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_SF_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_SPD_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_STFST_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_STU_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_SUB_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_W_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_WAC_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_WAC_FK FOREIGN KEY
(
UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_WL_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_WL_FK FOREIGN KEY
(
UWI,
WELL_LOG_ID,
WELL_LOG_SOURCE
)
REFERENCES WELL_LOG
(
UWI,
WELL_LOG_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_WLC_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_WLC_FK FOREIGN KEY
(
UWI,
WELL_LOG_CURVE_ID
)
REFERENCES WELL_LOG_CURVE
(
UWI,
CURVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_WSET_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTCOM_WO_FK'
ALTER TABLE ENT_COMPONENT ADD CONSTRAINT ENTCOM_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTG_ENT_FK'
ALTER TABLE ENT_GROUP ADD CONSTRAINT ENTG_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTG_ENTSG_FK'
ALTER TABLE ENT_GROUP ADD CONSTRAINT ENTG_ENTSG_FK FOREIGN KEY
(
SECURITY_GROUP_ID
)
REFERENCES ENT_SECURITY_GROUP
(
SECURITY_GROUP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTG_R_EAT_FK'
ALTER TABLE ENT_GROUP ADD CONSTRAINT ENTG_R_EAT_FK FOREIGN KEY
(
ACCESS_TYPE
)
REFERENCES R_ENT_ACCESS_TYPE
(
ACCESS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTSB_BA_FK'
ALTER TABLE ENT_SECURITY_BA ADD CONSTRAINT ENTSB_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTSB_ENTSG_FK'
ALTER TABLE ENT_SECURITY_BA ADD CONSTRAINT ENTSB_ENTSG_FK FOREIGN KEY
(
SECURITY_GROUP_ID
)
REFERENCES ENT_SECURITY_GROUP
(
SECURITY_GROUP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTSG_R_ESGT_FK'
ALTER TABLE ENT_SECURITY_GROUP ADD CONSTRAINT ENTSG_R_ESGT_FK FOREIGN KEY
(
GROUP_TYPE
)
REFERENCES R_ENT_SEC_GROUP_TYPE
(
GROUP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTSX_ENTSG_FK'
ALTER TABLE ENT_SECURITY_GROUP_XREF ADD CONSTRAINT ENTSX_ENTSG_FK FOREIGN KEY
(
SECURITY_GROUP_ID1
)
REFERENCES ENT_SECURITY_GROUP
(
SECURITY_GROUP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTSX_ENTSG_FK2'
ALTER TABLE ENT_SECURITY_GROUP_XREF ADD CONSTRAINT ENTSX_ENTSG_FK2 FOREIGN KEY
(
SECURITY_GROUP_ID2
)
REFERENCES ENT_SECURITY_GROUP
(
SECURITY_GROUP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT ENTSX_R_ESGXT_FK'
ALTER TABLE ENT_SECURITY_GROUP_XREF ADD CONSTRAINT ENTSX_R_ESGXT_FK FOREIGN KEY
(
XREF_TYPE
)
REFERENCES R_ENT_SEC_GROUP_XREF
(
XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQ_BA_FK'
ALTER TABLE EQUIPMENT ADD CONSTRAINT EQ_BA_FK FOREIGN KEY
(
CURRENT_OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQ_BA_FK2'
ALTER TABLE EQUIPMENT ADD CONSTRAINT EQ_BA_FK2 FOREIGN KEY
(
MANUFACTURER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQ_CEQ_FK'
ALTER TABLE EQUIPMENT ADD CONSTRAINT EQ_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQ_R_CEG_FK'
ALTER TABLE EQUIPMENT ADD CONSTRAINT EQ_R_CEG_FK FOREIGN KEY
(
EQUIPMENT_GROUP
)
REFERENCES R_CAT_EQUIP_GROUP
(
CAT_EQUIP_GROUP
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQ_R_CET_FK'
ALTER TABLE EQUIPMENT ADD CONSTRAINT EQ_R_CET_FK FOREIGN KEY
(
EQUIPMENT_TYPE
)
REFERENCES R_CAT_EQUIP_TYPE
(
CAT_EQUIP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQA_BA_FK'
ALTER TABLE EQUIPMENT_ALIAS ADD CONSTRAINT EQA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQA_EQ_FK'
ALTER TABLE EQUIPMENT_ALIAS ADD CONSTRAINT EQA_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQA_PSWA_FK'
ALTER TABLE EQUIPMENT_ALIAS ADD CONSTRAINT EQA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQA_R_ART_FK'
ALTER TABLE EQUIPMENT_ALIAS ADD CONSTRAINT EQA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQA_R_ATY_FK'
ALTER TABLE EQUIPMENT_ALIAS ADD CONSTRAINT EQA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQA_R_LANG_FK'
ALTER TABLE EQUIPMENT_ALIAS ADD CONSTRAINT EQA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQA_SRCD_FK'
ALTER TABLE EQUIPMENT_ALIAS ADD CONSTRAINT EQA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQBA_BA_FK'
ALTER TABLE EQUIPMENT_BA ADD CONSTRAINT EQBA_BA_FK FOREIGN KEY
(
EQUIP_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQBA_EQ_FK'
ALTER TABLE EQUIPMENT_BA ADD CONSTRAINT EQBA_EQ_FK FOREIGN KEY
(
EQUIP_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQBA_FIN_FK'
ALTER TABLE EQUIPMENT_BA ADD CONSTRAINT EQBA_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQBA_R_EBART_FK'
ALTER TABLE EQUIPMENT_BA ADD CONSTRAINT EQBA_R_EBART_FK FOREIGN KEY
(
ROLE_TYPE
)
REFERENCES R_EQUIP_BA_ROLE_TYPE
(
ROLE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_ANLR_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_APP_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_A_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_BAAU_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_BAE_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_BAO_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_BA_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_CA_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_CEQ_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_CLSL_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_CON_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_CO_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_COT_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_C_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_EZ_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_ENT_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_EQ_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_FAC_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_FLD_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_FIN_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_FOS_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_HI_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_INS_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_INT_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_LR_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_LS_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_LIL_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_NOTI_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_OB_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_PASU_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_PDE_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_PL_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_PSWA_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_PSYS_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_PT_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_PS_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_PS_FK FOREIGN KEY
(
PR_STR_UWI,
PR_STR_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_PROJ_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_RATE_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_RSCL_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_RSE_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_RMDSS_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_RMII_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_RMPI_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_RMTW_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_R_EQCT_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_R_EQCT_FK FOREIGN KEY
(
EQUIPMENT_COMPONENT_TYPE
)
REFERENCES R_EQUIP_COMPONENT_TYPE
(
EQUIPMENT_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_SS_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_SF_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_SPD_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_STFST_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_STU_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_SUB_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_W_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_WAC_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_WAC_FK FOREIGN KEY
(
WELL_ACTIVITY_UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_WSET_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQCOMP_WO_FK'
ALTER TABLE EQUIPMENT_COMPONENT ADD CONSTRAINT EQCOMP_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQM_BAA_FK'
ALTER TABLE EQUIPMENT_MAINTAIN ADD CONSTRAINT EQM_BAA_FK FOREIGN KEY
(
LOCATION_BA_ID,
LOCATION_BA_SOURCE,
LOCATION_BA_ADDRESS_OBS_NO
)
REFERENCES BA_ADDRESS
(
BUSINESS_ASSOCIATE_ID,
SOURCE,
ADDRESS_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQM_BA_FK'
ALTER TABLE EQUIPMENT_MAINTAIN ADD CONSTRAINT EQM_BA_FK FOREIGN KEY
(
COMPLETED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQM_EQ_FK'
ALTER TABLE EQUIPMENT_MAINTAIN ADD CONSTRAINT EQM_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQM_EQMT_FK'
ALTER TABLE EQUIPMENT_MAINTAIN ADD CONSTRAINT EQM_EQMT_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID,
MAINT_TYPE
)
REFERENCES EQUIPMENT_MAINT_TYPE
(
CATALOGUE_EQUIP_ID,
MAINT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQM_PROJ_FK'
ALTER TABLE EQUIPMENT_MAINTAIN ADD CONSTRAINT EQM_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQM_R_EML_FK'
ALTER TABLE EQUIPMENT_MAINTAIN ADD CONSTRAINT EQM_R_EML_FK FOREIGN KEY
(
MAINT_LOCATION_TYPE
)
REFERENCES R_EQUIP_MAINT_LOC
(
MAINT_LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQM_R_EMR_FK'
ALTER TABLE EQUIPMENT_MAINTAIN ADD CONSTRAINT EQM_R_EMR_FK FOREIGN KEY
(
MAINT_REASON
)
REFERENCES R_EQUIP_MAINT_REASON
(
MAINT_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQM_R_ESC_FK'
ALTER TABLE EQUIPMENT_MAINTAIN ADD CONSTRAINT EQM_R_ESC_FK FOREIGN KEY
(
SYSTEM_CONDITION
)
REFERENCES R_EQUIP_SYSTEM_CONDITION
(
SYSTEM_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQMS_EQM_FK'
ALTER TABLE EQUIPMENT_MAINT_STATUS ADD CONSTRAINT EQMS_EQM_FK FOREIGN KEY
(
EQUIPMENT_ID,
EQUIP_MAINT_ID
)
REFERENCES EQUIPMENT_MAINTAIN
(
EQUIPMENT_ID,
EQUIP_MAINT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQMS_R_EQMS_FK'
ALTER TABLE EQUIPMENT_MAINT_STATUS ADD CONSTRAINT EQMS_R_EQMS_FK FOREIGN KEY
(
MAINTAIN_STATUS_TYPE,
MAINTAIN_STATUS
)
REFERENCES R_EQUIP_MAINT_STATUS
(
MAINTAIN_STATUS_TYPE,
MAINTAIN_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQMT_CEQ_FK'
ALTER TABLE EQUIPMENT_MAINT_TYPE ADD CONSTRAINT EQMT_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQS_EQ_FK'
ALTER TABLE EQUIPMENT_SPEC ADD CONSTRAINT EQS_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQS_EQM_FK'
ALTER TABLE EQUIPMENT_SPEC ADD CONSTRAINT EQS_EQM_FK FOREIGN KEY
(
EQUIPMENT_ID,
EQUIP_MAINT_ID
)
REFERENCES EQUIPMENT_MAINTAIN
(
EQUIPMENT_ID,
EQUIP_MAINT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQS_EQSSS_FK'
ALTER TABLE EQUIPMENT_SPEC ADD CONSTRAINT EQS_EQSSS_FK FOREIGN KEY
(
SPEC_SET_ID,
SPEC_TYPE
)
REFERENCES EQUIPMENT_SPEC_SET_SPEC
(
SPEC_SET_ID,
SPEC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQS_R_ESRT_FK'
ALTER TABLE EQUIPMENT_SPEC ADD CONSTRAINT EQS_R_ESRT_FK FOREIGN KEY
(
REFERENCE_VALUE_TYPE
)
REFERENCES R_EQUIP_SPEC_REF_TYPE
(
REFERENCE_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQSS_BA_FK'
ALTER TABLE EQUIPMENT_SPEC_SET ADD CONSTRAINT EQSS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQSS_R_CET_FK'
ALTER TABLE EQUIPMENT_SPEC_SET ADD CONSTRAINT EQSS_R_CET_FK FOREIGN KEY
(
EQUIPMENT_TYPE
)
REFERENCES R_CAT_EQUIP_TYPE
(
CAT_EQUIP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQSS_R_ESST_FK'
ALTER TABLE EQUIPMENT_SPEC_SET ADD CONSTRAINT EQSS_R_ESST_FK FOREIGN KEY
(
SPEC_SET_TYPE
)
REFERENCES R_EQUIP_SPEC_SET_TYPE
(
SPEC_SET_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQSSS_EQSS_FK'
ALTER TABLE EQUIPMENT_SPEC_SET_SPEC ADD CONSTRAINT EQSSS_EQSS_FK FOREIGN KEY
(
SPEC_SET_ID
)
REFERENCES EQUIPMENT_SPEC_SET
(
SPEC_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQSSS_R_ESP_FK'
ALTER TABLE EQUIPMENT_SPEC_SET_SPEC ADD CONSTRAINT EQSSS_R_ESP_FK FOREIGN KEY
(
SPEC_TYPE
)
REFERENCES R_EQUIP_SPEC
(
SPEC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQSSS_R_ESRT_FK'
ALTER TABLE EQUIPMENT_SPEC_SET_SPEC ADD CONSTRAINT EQSSS_R_ESRT_FK FOREIGN KEY
(
REFERENCE_VALUE_TYPE
)
REFERENCES R_EQUIP_SPEC_REF_TYPE
(
REFERENCE_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQST_EQ_FK'
ALTER TABLE EQUIPMENT_STATUS ADD CONSTRAINT EQST_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQST_R_ESTAT_FK'
ALTER TABLE EQUIPMENT_STATUS ADD CONSTRAINT EQST_R_ESTAT_FK FOREIGN KEY
(
EQUIP_STATUS_TYPE,
EQUIP_STATUS
)
REFERENCES R_EQUIP_STATUS
(
STATUS_TYPE,
EQUIP_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQST_R_TZ_FK'
ALTER TABLE EQUIPMENT_STATUS ADD CONSTRAINT EQST_R_TZ_FK FOREIGN KEY
(
TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQUS_EQ_FK'
ALTER TABLE EQUIPMENT_USE_STAT ADD CONSTRAINT EQUS_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQUS_R_EUST_FK'
ALTER TABLE EQUIPMENT_USE_STAT ADD CONSTRAINT EQUS_R_EUST_FK FOREIGN KEY
(
EQUIP_USE_STAT_TYPE
)
REFERENCES R_EQUIP_USE_STAT_TYPE
(
EQUIP_USE_STAT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQUS_R_TZ_FK'
ALTER TABLE EQUIPMENT_USE_STAT ADD CONSTRAINT EQUS_R_TZ_FK FOREIGN KEY
(
TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQX_EQ_FK'
ALTER TABLE EQUIPMENT_XREF ADD CONSTRAINT EQX_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQX_EQ_FK2'
ALTER TABLE EQUIPMENT_XREF ADD CONSTRAINT EQX_EQ_FK2 FOREIGN KEY
(
EQUIPMENT_PART_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT EQX_R_EXT_FK'
ALTER TABLE EQUIPMENT_XREF ADD CONSTRAINT EQX_R_EXT_FK FOREIGN KEY
(
EQUIP_XREF_TYPE
)
REFERENCES R_EQUIP_XREF_TYPE
(
EQUIP_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FAC_BA_FK'
ALTER TABLE FACILITY ADD CONSTRAINT FAC_BA_FK FOREIGN KEY
(
CURRENT_OPERATOR
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FAC_BA_FK2'
ALTER TABLE FACILITY ADD CONSTRAINT FAC_BA_FK2 FOREIGN KEY
(
MANUFACTURED_BY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FAC_CEQ_FK'
ALTER TABLE FACILITY ADD CONSTRAINT FAC_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FAC_CS_FK'
ALTER TABLE FACILITY ADD CONSTRAINT FAC_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FAC_CS_FK2'
ALTER TABLE FACILITY ADD CONSTRAINT FAC_CS_FK2 FOREIGN KEY
(
LOCAL_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FAC_CSCA_FK'
ALTER TABLE FACILITY ADD CONSTRAINT FAC_CSCA_FK FOREIGN KEY
(
COORD_ACQUISITION_ID
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FAC_FLD_FK'
ALTER TABLE FACILITY ADD CONSTRAINT FAC_FLD_FK FOREIGN KEY
(
PRIMARY_FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FAC_R_FACT_FK'
ALTER TABLE FACILITY ADD CONSTRAINT FAC_R_FACT_FK FOREIGN KEY
(
FACILITY_TYPE
)
REFERENCES R_FACILITY_TYPE
(
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FAC_R_FF_FK'
ALTER TABLE FACILITY ADD CONSTRAINT FAC_R_FF_FK FOREIGN KEY
(
FACILITY_FUNCTION
)
REFERENCES R_FAC_FUNCTION
(
FACILITY_FUNCTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FAC_R_FPC_FK'
ALTER TABLE FACILITY ADD CONSTRAINT FAC_R_FPC_FK FOREIGN KEY
(
PIPE_COVER_TYPE
)
REFERENCES R_FAC_PIPE_COVER
(
COVER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FAC_R_FPM_FK'
ALTER TABLE FACILITY ADD CONSTRAINT FAC_R_FPM_FK FOREIGN KEY
(
PIPELINE_MATERIAL
)
REFERENCES R_FAC_PIPE_MATERIAL
(
PIPELINE_MATERIAL
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FAC_R_FPT_FK'
ALTER TABLE FACILITY ADD CONSTRAINT FAC_R_FPT_FK FOREIGN KEY
(
PIPELINE_TYPE
)
REFERENCES R_FAC_PIPE_TYPE
(
PIPELINE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FAC_R_PS1_FK'
ALTER TABLE FACILITY ADD CONSTRAINT FAC_R_PS1_FK FOREIGN KEY
(
PLOT_SYMBOL
)
REFERENCES R_PLOT_SYMBOL
(
PLOT_SYMBOL
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACA_BA_FK'
ALTER TABLE FACILITY_ALIAS ADD CONSTRAINT FACA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACA_FAC_FK'
ALTER TABLE FACILITY_ALIAS ADD CONSTRAINT FACA_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACA_PSWA_FK'
ALTER TABLE FACILITY_ALIAS ADD CONSTRAINT FACA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACA_R_ART_FK'
ALTER TABLE FACILITY_ALIAS ADD CONSTRAINT FACA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACA_R_ATY_FK'
ALTER TABLE FACILITY_ALIAS ADD CONSTRAINT FACA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACA_R_LANG_FK'
ALTER TABLE FACILITY_ALIAS ADD CONSTRAINT FACA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACA_SRCD_FK'
ALTER TABLE FACILITY_ALIAS ADD CONSTRAINT FACA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACAR_A_FK'
ALTER TABLE FACILITY_AREA ADD CONSTRAINT FACAR_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACAR_FAC_FK'
ALTER TABLE FACILITY_AREA ADD CONSTRAINT FACAR_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACBS_BA_FK'
ALTER TABLE FACILITY_BA_SERVICE ADD CONSTRAINT FACBS_BA_FK FOREIGN KEY
(
CONTACT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACBS_BA_FK2'
ALTER TABLE FACILITY_BA_SERVICE ADD CONSTRAINT FACBS_BA_FK2 FOREIGN KEY
(
PROVIDED_BY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACBS_BA_FK3'
ALTER TABLE FACILITY_BA_SERVICE ADD CONSTRAINT FACBS_BA_FK3 FOREIGN KEY
(
REPRESENTED_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACBS_C_FK'
ALTER TABLE FACILITY_BA_SERVICE ADD CONSTRAINT FACBS_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACBS_CP_FK'
ALTER TABLE FACILITY_BA_SERVICE ADD CONSTRAINT FACBS_CP_FK FOREIGN KEY
(
CONTRACT_ID,
PROVISION_ID
)
REFERENCES CONT_PROVISION
(
CONTRACT_ID,
PROVISION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACBS_FAC_FK'
ALTER TABLE FACILITY_BA_SERVICE ADD CONSTRAINT FACBS_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACBS_RATE_FK'
ALTER TABLE FACILITY_BA_SERVICE ADD CONSTRAINT FACBS_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACBS_R_BST_FK'
ALTER TABLE FACILITY_BA_SERVICE ADD CONSTRAINT FACBS_R_BST_FK FOREIGN KEY
(
BA_SERVICE_TYPE
)
REFERENCES R_BA_SERVICE_TYPE
(
BA_SERVICE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACBS_R_SQ_FK'
ALTER TABLE FACILITY_BA_SERVICE ADD CONSTRAINT FACBS_R_SQ_FK FOREIGN KEY
(
SERVICE_QUALITY
)
REFERENCES R_SERVICE_QUALITY
(
SERVICE_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACC_FAC_FK'
ALTER TABLE FACILITY_CLASS ADD CONSTRAINT FACC_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACC_R_FAC_FK'
ALTER TABLE FACILITY_CLASS ADD CONSTRAINT FACC_R_FAC_FK FOREIGN KEY
(
FACILITY_CLASS_TYPE
)
REFERENCES R_FACILITY_CLASS
(
FACILITY_CLASS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_ANLR_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_APP_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_A_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_BAAU_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_BAE_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_BAO_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_BA_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_CA_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_CEQ_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_CLSL_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_CON_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_CO_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_COT_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_C_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_EZ_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_ENT_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_EQ_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_FAC_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_FLD_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_FIN_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_FOS_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_HI_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_INS_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_INT_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_LR_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_LS_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_LIL_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_NOTI_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_OB_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_PASU_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_PDE_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_PL_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_PSWA_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_PSYS_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_PT_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_PS_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_PS_FK FOREIGN KEY
(
PR_STR_UWI,
PR_STR_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_PROJ_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_RATE_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_RSCL_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_RSE_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_RMDSS_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_RMII_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_RMPI_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_RMTW_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_R_FACT2_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_R_FACT2_FK FOREIGN KEY
(
FACILITY_COMPONENT_TYPE
)
REFERENCES R_FACILITY_COMP_TYPE
(
FACILITY_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_SS_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_SF_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_SPD_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_STFST_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_STU_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_SUB_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_W_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_WAC_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_WAC_FK FOREIGN KEY
(
WELL_ACTIVITY_UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_WSET_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACCMP_WO_FK'
ALTER TABLE FACILITY_COMPONENT ADD CONSTRAINT FACCMP_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACD_FAC_FK'
ALTER TABLE FACILITY_DESCRIPTION ADD CONSTRAINT FACD_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACD_R_FSC_FK'
ALTER TABLE FACILITY_DESCRIPTION ADD CONSTRAINT FACD_R_FSC_FK FOREIGN KEY
(
SPEC_TYPE,
SPEC_CODE
)
REFERENCES R_FACILITY_SPEC_CODE
(
SPEC_TYPE,
SPEC_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACD_R_FST1_FK'
ALTER TABLE FACILITY_DESCRIPTION ADD CONSTRAINT FACD_R_FST1_FK FOREIGN KEY
(
SPEC_TYPE
)
REFERENCES R_FACILITY_SPEC_TYPE
(
SPEC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACD_R_FSRT_FK'
ALTER TABLE FACILITY_DESCRIPTION ADD CONSTRAINT FACD_R_FSRT_FK FOREIGN KEY
(
REFERENCE_VALUE_TYPE
)
REFERENCES R_FAC_SPEC_REFERENCE
(
REFERENCE_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACEQ_EQ_FK'
ALTER TABLE FACILITY_EQUIPMENT ADD CONSTRAINT FACEQ_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACEQ_FAC_FK'
ALTER TABLE FACILITY_EQUIPMENT ADD CONSTRAINT FACEQ_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACEQ_R_ERR_FK'
ALTER TABLE FACILITY_EQUIPMENT ADD CONSTRAINT FACEQ_R_ERR_FK FOREIGN KEY
(
REMOVE_REASON
)
REFERENCES R_EQUIP_REMOVE_REASON
(
REMOVE_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACF_FAC_FK'
ALTER TABLE FACILITY_FIELD ADD CONSTRAINT FACF_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACF_FLD_FK'
ALTER TABLE FACILITY_FIELD ADD CONSTRAINT FACF_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACL_APP_FK'
ALTER TABLE FACILITY_LICENSE ADD CONSTRAINT FACL_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACL_BA_FK2'
ALTER TABLE FACILITY_LICENSE ADD CONSTRAINT FACL_BA_FK2 FOREIGN KEY
(
GRANTED_TO_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACL_BA_FK'
ALTER TABLE FACILITY_LICENSE ADD CONSTRAINT FACL_BA_FK FOREIGN KEY
(
GRANTED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACL_BA_FK3'
ALTER TABLE FACILITY_LICENSE ADD CONSTRAINT FACL_BA_FK3 FOREIGN KEY
(
GRANTED_BY_CONTACT_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACL_BA_FK4'
ALTER TABLE FACILITY_LICENSE ADD CONSTRAINT FACL_BA_FK4 FOREIGN KEY
(
GRANTED_TO_CONTACT_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACL_FAC_FK'
ALTER TABLE FACILITY_LICENSE ADD CONSTRAINT FACL_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACL_FACL_FK'
ALTER TABLE FACILITY_LICENSE ADD CONSTRAINT FACL_FACL_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE,
REL_LICENSE_ID
)
REFERENCES FACILITY_LICENSE
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACL_FACLT_FK'
ALTER TABLE FACILITY_LICENSE ADD CONSTRAINT FACL_FACLT_FK FOREIGN KEY
(
GRANTED_BY_BA_ID,
FACILITY_LICENSE_TYPE
)
REFERENCES FACILITY_LIC_TYPE
(
GRANTED_BY_BA_ID,
FACILITY_LICENSE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACL_FLD_FK'
ALTER TABLE FACILITY_LICENSE ADD CONSTRAINT FACL_FLD_FK FOREIGN KEY
(
ASSIGNED_FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACL_RATE_FK'
ALTER TABLE FACILITY_LICENSE ADD CONSTRAINT FACL_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACL_R_FAC_FK'
ALTER TABLE FACILITY_LICENSE ADD CONSTRAINT FACL_R_FAC_FK FOREIGN KEY
(
APPROVED_FACILITY_CLASS
)
REFERENCES R_FACILITY_CLASS
(
FACILITY_CLASS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACL_R_FLET_FK'
ALTER TABLE FACILITY_LICENSE ADD CONSTRAINT FACL_R_FLET_FK FOREIGN KEY
(
LICENSE_EXTENSION_COND
)
REFERENCES R_FAC_LIC_EXTEND_TYPE
(
LICENSE_EXTENSION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLAL_BA_FK'
ALTER TABLE FACILITY_LIC_ALIAS ADD CONSTRAINT FACLAL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLAL_FACL_FK'
ALTER TABLE FACILITY_LIC_ALIAS ADD CONSTRAINT FACLAL_FACL_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID
)
REFERENCES FACILITY_LICENSE
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLAL_PSWA_FK'
ALTER TABLE FACILITY_LIC_ALIAS ADD CONSTRAINT FACLAL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLAL_R_ART_FK'
ALTER TABLE FACILITY_LIC_ALIAS ADD CONSTRAINT FACLAL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLAL_R_ATY_FK'
ALTER TABLE FACILITY_LIC_ALIAS ADD CONSTRAINT FACLAL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLAL_R_LANG_FK'
ALTER TABLE FACILITY_LIC_ALIAS ADD CONSTRAINT FACLAL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLAL_SRCD_FK'
ALTER TABLE FACILITY_LIC_ALIAS ADD CONSTRAINT FACLAL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLA_A_FK'
ALTER TABLE FACILITY_LIC_AREA ADD CONSTRAINT FACLA_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLA_FACL_FK'
ALTER TABLE FACILITY_LIC_AREA ADD CONSTRAINT FACLA_FACL_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID
)
REFERENCES FACILITY_LICENSE
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLC_BA_FK2'
ALTER TABLE FACILITY_LIC_COND ADD CONSTRAINT FACLC_BA_FK2 FOREIGN KEY
(
FULFILLED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLC_BA_FK'
ALTER TABLE FACILITY_LIC_COND ADD CONSTRAINT FACLC_BA_FK FOREIGN KEY
(
CONTACT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLC_FACL_FK'
ALTER TABLE FACILITY_LIC_COND ADD CONSTRAINT FACLC_FACL_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID
)
REFERENCES FACILITY_LICENSE
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLC_REST_FK'
ALTER TABLE FACILITY_LIC_COND ADD CONSTRAINT FACLC_REST_FK FOREIGN KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION
)
REFERENCES RESTRICTION
(
RESTRICTION_ID,
RESTRICTION_VERSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLC_R_FLC_FK'
ALTER TABLE FACILITY_LIC_COND ADD CONSTRAINT FACLC_R_FLC_FK FOREIGN KEY
(
CONDITION_TYPE
)
REFERENCES R_FAC_LIC_COND
(
CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLC_R_FLCC_FK'
ALTER TABLE FACILITY_LIC_COND ADD CONSTRAINT FACLC_R_FLCC_FK FOREIGN KEY
(
CONDITION_TYPE,
CONDITION_CODE
)
REFERENCES R_FAC_LIC_COND_CODE
(
CONDITION_TYPE,
CONDITION_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLC_R_FLDC_FK'
ALTER TABLE FACILITY_LIC_COND ADD CONSTRAINT FACLC_R_FLDC_FK FOREIGN KEY
(
DUE_CONDITION
)
REFERENCES R_FAC_LIC_DUE_CONDITION
(
DUE_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLC_SUB_FK'
ALTER TABLE FACILITY_LIC_COND ADD CONSTRAINT FACLC_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLR_FACL_FK'
ALTER TABLE FACILITY_LIC_REMARK ADD CONSTRAINT FACLR_FACL_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID
)
REFERENCES FACILITY_LICENSE
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLR_R_RT2_FK'
ALTER TABLE FACILITY_LIC_REMARK ADD CONSTRAINT FACLR_R_RT2_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_REMARK_TYPE
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLS_FACL_FK'
ALTER TABLE FACILITY_LIC_STATUS ADD CONSTRAINT FACLS_FACL_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID
)
REFERENCES FACILITY_LICENSE
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLS_R_LIST_FK'
ALTER TABLE FACILITY_LIC_STATUS ADD CONSTRAINT FACLS_R_LIST_FK FOREIGN KEY
(
LICENSE_STATUS_TYPE,
LICENSE_STATUS
)
REFERENCES R_LICENSE_STATUS
(
LICENSE_STATUS_TYPE,
LICENSE_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLT_BA_FK'
ALTER TABLE FACILITY_LIC_TYPE ADD CONSTRAINT FACLT_BA_FK FOREIGN KEY
(
GRANTED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLT_RATE_FK'
ALTER TABLE FACILITY_LIC_TYPE ADD CONSTRAINT FACLT_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLV_FACL_FK'
ALTER TABLE FACILITY_LIC_VIOLATION ADD CONSTRAINT FACLV_FACL_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID
)
REFERENCES FACILITY_LICENSE
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLV_FACLC_FK'
ALTER TABLE FACILITY_LIC_VIOLATION ADD CONSTRAINT FACLV_FACLC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID,
CONDITION_ID
)
REFERENCES FACILITY_LIC_COND
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID,
CONDITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLV_R_FLVT_FK'
ALTER TABLE FACILITY_LIC_VIOLATION ADD CONSTRAINT FACLV_R_FLVT_FK FOREIGN KEY
(
VIOLATION_TYPE
)
REFERENCES R_FAC_LIC_VIOLATION_TYPE
(
VIOLATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACLV_R_FLVRT_FK'
ALTER TABLE FACILITY_LIC_VIOLATION ADD CONSTRAINT FACLV_R_FLVRT_FK FOREIGN KEY
(
RESOLVE_TYPE
)
REFERENCES R_FAC_LIC_VIOL_RESOL
(
RESOLVE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACM_BA_FK'
ALTER TABLE FACILITY_MAINTAIN ADD CONSTRAINT FACM_BA_FK FOREIGN KEY
(
MAINTAIN_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACM_FAC_FK'
ALTER TABLE FACILITY_MAINTAIN ADD CONSTRAINT FACM_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACM_R_FMT_FK'
ALTER TABLE FACILITY_MAINTAIN ADD CONSTRAINT FACM_R_FMT_FK FOREIGN KEY
(
FACILITY_TYPE,
MAINTAIN_TYPE
)
REFERENCES R_FAC_MAINTAIN_TYPE
(
FACILITY_TYPE,
MAINTAIN_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACMS_FACM_FK'
ALTER TABLE FACILITY_MAINT_STATUS ADD CONSTRAINT FACMS_FACM_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE,
MAINTAIN_ID
)
REFERENCES FACILITY_MAINTAIN
(
FACILITY_ID,
FACILITY_TYPE,
MAINTAIN_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACMS_R_FMS_FK'
ALTER TABLE FACILITY_MAINT_STATUS ADD CONSTRAINT FACMS_R_FMS_FK FOREIGN KEY
(
MAINTAIN_STATUS_TYPE,
MAINTAIN_STATUS
)
REFERENCES R_FAC_MAINT_STATUS
(
MAINTAIN_STATUS_TYPE,
MAINTAIN_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACRT_FAC_FK'
ALTER TABLE FACILITY_RATE ADD CONSTRAINT FACRT_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACRT_RATE_FK'
ALTER TABLE FACILITY_RATE ADD CONSTRAINT FACRT_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACR_FAC_FK'
ALTER TABLE FACILITY_RESTRICTION ADD CONSTRAINT FACR_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACR_REST_FK'
ALTER TABLE FACILITY_RESTRICTION ADD CONSTRAINT FACR_REST_FK FOREIGN KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION
)
REFERENCES RESTRICTION
(
RESTRICTION_ID,
RESTRICTION_VERSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACS_FAC_FK'
ALTER TABLE FACILITY_STATUS ADD CONSTRAINT FACS_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACS_R_FS_FK'
ALTER TABLE FACILITY_STATUS ADD CONSTRAINT FACS_R_FS_FK FOREIGN KEY
(
STATUS_TYPE,
STATUS
)
REFERENCES R_FACILITY_STATUS
(
STATUS_TYPE,
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACS_R_TZ_FK'
ALTER TABLE FACILITY_STATUS ADD CONSTRAINT FACS_R_TZ_FK FOREIGN KEY
(
TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACSU_FAC_FK'
ALTER TABLE FACILITY_SUBSTANCE ADD CONSTRAINT FACSU_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACSU_STU_FK'
ALTER TABLE FACILITY_SUBSTANCE ADD CONSTRAINT FACSU_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACSU_SUB_FK'
ALTER TABLE FACILITY_SUBSTANCE ADD CONSTRAINT FACSU_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACV_BA_FK'
ALTER TABLE FACILITY_VERSION ADD CONSTRAINT FACV_BA_FK FOREIGN KEY
(
CURRENT_OPERATOR
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACV_FAC_FK'
ALTER TABLE FACILITY_VERSION ADD CONSTRAINT FACV_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACV_R_FS_FK'
ALTER TABLE FACILITY_VERSION ADD CONSTRAINT FACV_R_FS_FK FOREIGN KEY
(
STATUS_TYPE,
FACILITY_STATUS_ID
)
REFERENCES R_FACILITY_STATUS
(
STATUS_TYPE,
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACV_R_PS1_FK'
ALTER TABLE FACILITY_VERSION ADD CONSTRAINT FACV_R_PS1_FK FOREIGN KEY
(
PLOT_SYMBOL
)
REFERENCES R_PLOT_SYMBOL
(
PLOT_SYMBOL
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACX_FAC_FK'
ALTER TABLE FACILITY_XREF ADD CONSTRAINT FACX_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACX_FAC_FK2'
ALTER TABLE FACILITY_XREF ADD CONSTRAINT FACX_FAC_FK2 FOREIGN KEY
(
FACILITY_ID_2,
FACILITY_TYPE_2
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FACX_R_FXT1_FK'
ALTER TABLE FACILITY_XREF ADD CONSTRAINT FACX_R_FXT1_FK FOREIGN KEY
(
FACILITY_XREF_TYPE
)
REFERENCES R_FACILITY_XREF_TYPE
(
FACILITY_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLD_FLD_FK'
ALTER TABLE FIELD ADD CONSTRAINT FLD_FLD_FK FOREIGN KEY
(
GROUP_FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLD_FLDAR_FK'
ALTER TABLE FIELD ADD CONSTRAINT FLD_FLDAR_FK FOREIGN KEY
(
FIELD_ID,
AREA_ID,
AREA_TYPE,
FIELD_AREA_OBS_NO
)
REFERENCES FIELD_AREA
(
FIELD_ID,
AREA_ID,
AREA_TYPE,
AREA_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLD_R_FT3_FK'
ALTER TABLE FIELD ADD CONSTRAINT FLD_R_FT3_FK FOREIGN KEY
(
FIELD_TYPE
)
REFERENCES R_FIELD_TYPE
(
FIELD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDA_A_FK'
ALTER TABLE FIELD_ALIAS ADD CONSTRAINT FLDA_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDA_BA_FK'
ALTER TABLE FIELD_ALIAS ADD CONSTRAINT FLDA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDA_FLD_FK'
ALTER TABLE FIELD_ALIAS ADD CONSTRAINT FLDA_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDA_PSWA_FK'
ALTER TABLE FIELD_ALIAS ADD CONSTRAINT FLDA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDA_R_ART_FK'
ALTER TABLE FIELD_ALIAS ADD CONSTRAINT FLDA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDA_R_ATY_FK'
ALTER TABLE FIELD_ALIAS ADD CONSTRAINT FLDA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDA_R_LANG_FK'
ALTER TABLE FIELD_ALIAS ADD CONSTRAINT FLDA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDA_SRCD_FK'
ALTER TABLE FIELD_ALIAS ADD CONSTRAINT FLDA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDAR_A_FK'
ALTER TABLE FIELD_AREA ADD CONSTRAINT FLDAR_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDAR_FLD_FK'
ALTER TABLE FIELD_AREA ADD CONSTRAINT FLDAR_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_ANLR_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_APP_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_A_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_BAAU_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_BAE_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_BAO_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_BA_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_CA_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_CEQ_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_CLSL_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_CON_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_CO_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_COT_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_C_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_EZ_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_ENT_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_EQ_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_FAC_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_FLD_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_FIN_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_FOS_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_HI_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_INS_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_INT_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_LR_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_LS_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_LIL_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_NOTI_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_OB_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_PASU_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_PDE_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_PL_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_PSWA_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_PSYS_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_PT_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_PS_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_PS_FK FOREIGN KEY
(
PR_STR_UWI,
PR_STR_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_PROJ_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_RATE_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_RSCL_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_RSE_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_RMDSS_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_RMII_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_RMPI_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_RMTW_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_R_FLCT_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_R_FLCT_FK FOREIGN KEY
(
FIELD_COMPONENT_TYPE
)
REFERENCES R_FIELD_COMPONENT_TYPE
(
FIELD_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_SS_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_SF_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_SPD_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_STFST_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_STU_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_SUB_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_W_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_WAC_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_WAC_FK FOREIGN KEY
(
WELL_ACTIVITY_UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_WSET_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDC_WO_FK'
ALTER TABLE FIELD_COMPONENT ADD CONSTRAINT FLDC_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDI_FLD_FK'
ALTER TABLE FIELD_INSTRUMENT ADD CONSTRAINT FLDI_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDI_INS_FK'
ALTER TABLE FIELD_INSTRUMENT ADD CONSTRAINT FLDI_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDV_FLD_FK'
ALTER TABLE FIELD_VERSION ADD CONSTRAINT FLDV_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDV_FLDAR_FK'
ALTER TABLE FIELD_VERSION ADD CONSTRAINT FLDV_FLDAR_FK FOREIGN KEY
(
FIELD_ID,
AREA_ID,
AREA_TYPE,
FIELD_AREA_OBS_NO
)
REFERENCES FIELD_AREA
(
FIELD_ID,
AREA_ID,
AREA_TYPE,
AREA_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FLDV_R_FT3_FK'
ALTER TABLE FIELD_VERSION ADD CONSTRAINT FLDV_R_FT3_FK FOREIGN KEY
(
FIELD_TYPE
)
REFERENCES R_FIELD_TYPE
(
FIELD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FIN_BA_FK'
ALTER TABLE FINANCE ADD CONSTRAINT FIN_BA_FK FOREIGN KEY
(
AUTHORIZED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FIN_R_FT_FK'
ALTER TABLE FINANCE ADD CONSTRAINT FIN_R_FT_FK FOREIGN KEY
(
FINANCE_TYPE
)
REFERENCES R_FIN_TYPE
(
FIN_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FIN_R_TCC_FK'
ALTER TABLE FINANCE ADD CONSTRAINT FIN_R_TCC_FK FOREIGN KEY
(
TAX_CREDIT_CODE
)
REFERENCES R_TAX_CREDIT_CODE
(
TAX_CREDIT_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_ANLR_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_APP_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_A_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_BAAU_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_BAE_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_BALIC_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_BALIC_FK FOREIGN KEY
(
BA_LICENSEE_BA_ID,
BA_LICENSE_ID
)
REFERENCES BA_LICENSE
(
LICENSEE_BA_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_BAO_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_BA_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_CA_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_CEQ_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_CLSL_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_CON_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_CO_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_COT_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_C_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_EZ_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_ENT_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_EQ_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_EQBA_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_EQBA_FK FOREIGN KEY
(
EQUIPMENT_ID,
EQUIP_BA_OBS_NO
)
REFERENCES EQUIPMENT_BA
(
EQUIP_ID,
BA_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_EQM_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_EQM_FK FOREIGN KEY
(
EQUIPMENT_ID,
EQUIP_MAINT_ID
)
REFERENCES EQUIPMENT_MAINTAIN
(
EQUIPMENT_ID,
EQUIP_MAINT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_FAC_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_FACL_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_FACL_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE,
FACILITY_LICENSE_ID
)
REFERENCES FACILITY_LICENSE
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_FLD_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_FIN_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_FIN_FK2'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_FIN_FK2 FOREIGN KEY
(
FINANCE_ID2
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_FOS_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_HI_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_INS_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_INT_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_LR_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_LS_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_LS_FK FOREIGN KEY
(
LAND_SALE_JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_LSOB_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_LSOB_FK FOREIGN KEY
(
LAND_SALE_JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID,
LAND_SALE_OFFERING_BID
)
REFERENCES LAND_SALE_BID
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID,
LAND_OFFERING_BID_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_LSBS1_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_LSBS1_FK FOREIGN KEY
(
LAND_SALE_BID_SET_ID
)
REFERENCES LAND_SALE_BID_SET
(
LAND_SALE_BID_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_LIL_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_NOTI_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_OB_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_PASU_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_PDE_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_PL_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_PSWA_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_PSYS_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_PT_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_PS_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_PSF_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_PSF_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID,
PR_STR_FORM_OBS_NO
)
REFERENCES PROD_STRING_FORMATION
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_PROJ_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_RATE_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_RSVR_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_RSVR_FK FOREIGN KEY
(
RESENT_ID,
RESERVE_CLASS_ID,
REVISION_ID,
REVISION_OBS_NO
)
REFERENCES RESENT_VOL_REVISION
(
RESENT_ID,
RESERVE_CLASS_ID,
REVISION_ID,
REVISION_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_RSCL_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_RSE_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_REST_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_REST_FK FOREIGN KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION
)
REFERENCES RESTRICTION
(
RESTRICTION_ID,
RESTRICTION_VERSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_RMDSS_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_RMII_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_RMPI_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_RMTW_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_R_FCT_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_R_FCT_FK FOREIGN KEY
(
FIN_COMPONENT_TYPE
)
REFERENCES R_FIN_COMPONENT_TYPE
(
FIN_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_SLIC_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_SLIC_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_LICENSE_ID
)
REFERENCES SEIS_LICENSE
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_SS_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_SSTR_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_SSTR_FK FOREIGN KEY
(
SEIS_TRANSACTION_ID,
SEIS_TRANSACTION_TYPE
)
REFERENCES SEIS_TRANSACTION
(
SEIS_TRANSACTION_ID,
TRANSACTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_SF_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_SPD_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_STFST_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_STU_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_SUB_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_W_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_WAC_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_WAC_FK FOREIGN KEY
(
UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_WBS_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_WBS_FK FOREIGN KEY
(
UWI,
WELL_SERVICE_PROVIDED_BY,
WELL_SERVICE_SEQ_NO
)
REFERENCES WELL_BA_SERVICE
(
UWI,
PROVIDED_BY,
SERVICE_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_WDPS_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_WDPS_FK FOREIGN KEY
(
UWI,
WELL_DRILL_PERIOD_OBS_NO,
WELL_SERVICE_PROVIDED_BY,
WELL_SERVICE_SEQ_NO,
WELL_SERVICE_SEG_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD_SERV
(
UWI,
PERIOD_OBS_NO,
PROVIDED_BY,
SERVICE_SEQ_NO,
SEGMENT_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_WLIC_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_WLIC_FK FOREIGN KEY
(
UWI,
WELL_LICENSE_SOURCE,
WELL_LICENSE_ID
)
REFERENCES WELL_LICENSE
(
UWI,
SOURCE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_WSET_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINC_WO_FK'
ALTER TABLE FIN_COMPONENT ADD CONSTRAINT FINC_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINCS_FIN_FK'
ALTER TABLE FIN_COST_SUMMARY ADD CONSTRAINT FINCS_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINCS_FINC_FK'
ALTER TABLE FIN_COST_SUMMARY ADD CONSTRAINT FINCS_FINC_FK FOREIGN KEY
(
FINANCE_ID,
FINANCE_COMPONENT_ID
)
REFERENCES FIN_COMPONENT
(
FINANCE_ID,
FINANCE_COMPONENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINCS_FINCS_FK'
ALTER TABLE FIN_COST_SUMMARY ADD CONSTRAINT FINCS_FINCS_FK FOREIGN KEY
(
PARENT_COST_ID
)
REFERENCES FIN_COST_SUMMARY
(
COST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINCS_R_FICT_FK'
ALTER TABLE FIN_COST_SUMMARY ADD CONSTRAINT FINCS_R_FICT_FK FOREIGN KEY
(
COST_TYPE
)
REFERENCES R_FIN_COST_TYPE
(
COST_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINX_FIN_FK'
ALTER TABLE FIN_XREF ADD CONSTRAINT FINX_FIN_FK FOREIGN KEY
(
FINANCE_ID1
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINX_FIN_FK2'
ALTER TABLE FIN_XREF ADD CONSTRAINT FINX_FIN_FK2 FOREIGN KEY
(
FINANCE_ID2
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FINX_R_FXT_FK'
ALTER TABLE FIN_XREF ADD CONSTRAINT FINX_R_FXT_FK FOREIGN KEY
(
FIN_XREF_TYPE
)
REFERENCES R_FIN_XREF_TYPE
(
FIN_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOS_EZ_FK'
ALTER TABLE FOSSIL ADD CONSTRAINT FOS_EZ_FK FOREIGN KEY
(
UPPER_ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOS_EZ_FK2'
ALTER TABLE FOSSIL ADD CONSTRAINT FOS_EZ_FK2 FOREIGN KEY
(
LOWER_ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOS_FOSTL_FK'
ALTER TABLE FOSSIL ADD CONSTRAINT FOS_FOSTL_FK FOREIGN KEY
(
TAXON_LEAF_ID
)
REFERENCES FOSSIL_TAXON_LEAF
(
TAXON_LEAF_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOS_R_CL_FK'
ALTER TABLE FOSSIL ADD CONSTRAINT FOS_R_CL_FK FOREIGN KEY
(
CLIMATE_TYPE
)
REFERENCES R_CLIMATE
(
CLIMATE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOS_R_FLH_FK'
ALTER TABLE FOSSIL ADD CONSTRAINT FOS_R_FLH_FK FOREIGN KEY
(
LIFE_HABIT
)
REFERENCES R_FOS_LIFE_HABIT
(
LIFE_HABIT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOS_R_FTG_FK'
ALTER TABLE FOSSIL ADD CONSTRAINT FOS_R_FTG_FK FOREIGN KEY
(
TAXON_GROUP
)
REFERENCES R_FOS_TAXON_GROUP
(
TAXON_GROUP
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSAG_FOS_FK'
ALTER TABLE FOSSIL_AGE ADD CONSTRAINT FOSAG_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSAG_PACO_FK'
ALTER TABLE FOSSIL_AGE ADD CONSTRAINT FOSAG_PACO_FK FOREIGN KEY
(
AGE_CONFIDENCE_ID
)
REFERENCES PALEO_CONFIDENCE
(
CONFIDENCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSAG_SRCD_FK'
ALTER TABLE FOSSIL_AGE ADD CONSTRAINT FOSAG_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSAG_STU_FK'
ALTER TABLE FOSSIL_AGE ADD CONSTRAINT FOSAG_STU_FK FOREIGN KEY
(
AVERAGE_REL_STRAT_NAME_SET,
AVERAGE_REL_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSAG_STU_FK2'
ALTER TABLE FOSSIL_AGE ADD CONSTRAINT FOSAG_STU_FK2 FOREIGN KEY
(
LOWER_REL_STRAT_NAME_SET,
LOWER_REL_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSAG_STU_FK3'
ALTER TABLE FOSSIL_AGE ADD CONSTRAINT FOSAG_STU_FK3 FOREIGN KEY
(
UPPER_REL_STRAT_NAME_SET,
UPPER_REL_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSAS_FOSTL_FK'
ALTER TABLE FOSSIL_ASSEMBLAGE ADD CONSTRAINT FOSAS_FOSTL_FK FOREIGN KEY
(
TAXON_LEAF_ID
)
REFERENCES FOSSIL_TAXON_LEAF
(
TAXON_LEAF_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSAS_R_FAT_FK'
ALTER TABLE FOSSIL_ASSEMBLAGE ADD CONSTRAINT FOSAS_R_FAT_FK FOREIGN KEY
(
ASSEMBLAGE_TYPE
)
REFERENCES R_FOS_ASSEMBLAGE_TYPE
(
ASSEMBLAGE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSAS_SRCD_FK'
ALTER TABLE FOSSIL_ASSEMBLAGE ADD CONSTRAINT FOSAS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSAS_STU_FK'
ALTER TABLE FOSSIL_ASSEMBLAGE ADD CONSTRAINT FOSAS_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSD_FOS_FK'
ALTER TABLE FOSSIL_DESC ADD CONSTRAINT FOSD_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSD_R_FDC_FK'
ALTER TABLE FOSSIL_DESC ADD CONSTRAINT FOSD_R_FDC_FK FOREIGN KEY
(
DESCRIPTION_TYPE,
DESCRIPTION_CODE
)
REFERENCES R_FOS_DESC_CODE
(
DESCRIPTION_TYPE,
DESCRIPTION_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSD_R_FDT_FK'
ALTER TABLE FOSSIL_DESC ADD CONSTRAINT FOSD_R_FDT_FK FOREIGN KEY
(
DESCRIPTION_TYPE
)
REFERENCES R_FOS_DESC_TYPE
(
DESCRIPTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSD_SRCD_FK'
ALTER TABLE FOSSIL_DESC ADD CONSTRAINT FOSD_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSDO_FOS_FK'
ALTER TABLE FOSSIL_DOCUMENT ADD CONSTRAINT FOSDO_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSDO_SRCD_FK'
ALTER TABLE FOSSIL_DOCUMENT ADD CONSTRAINT FOSDO_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSA_FOS_FK'
ALTER TABLE FOSSIL_EQUIVALENCE ADD CONSTRAINT FOSA_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSA_FOS_FK2'
ALTER TABLE FOSSIL_EQUIVALENCE ADD CONSTRAINT FOSA_FOS_FK2 FOREIGN KEY
(
EQUIV_FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSA_SRCD_FK'
ALTER TABLE FOSSIL_EQUIVALENCE ADD CONSTRAINT FOSA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSNS_A_FK'
ALTER TABLE FOSSIL_NAME_SET ADD CONSTRAINT FOSNS_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSNS_BA_FK'
ALTER TABLE FOSSIL_NAME_SET ADD CONSTRAINT FOSNS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSNS_R_FNST_FK'
ALTER TABLE FOSSIL_NAME_SET ADD CONSTRAINT FOSNS_R_FNST_FK FOREIGN KEY
(
FOSSIL_NAME_SET_TYPE
)
REFERENCES R_FOS_NAME_SET_TYPE
(
FOSSIL_NAME_SET_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSNSF_FOS_FK'
ALTER TABLE FOSSIL_NAME_SET_FOSSIL ADD CONSTRAINT FOSNSF_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSNSF_FOSNS_FK'
ALTER TABLE FOSSIL_NAME_SET_FOSSIL ADD CONSTRAINT FOSNSF_FOSNS_FK FOREIGN KEY
(
FOSSIL_NAME_SET_ID
)
REFERENCES FOSSIL_NAME_SET
(
FOSSIL_NAME_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSAL_BA_FK'
ALTER TABLE FOSSIL_TAXON_ALIAS ADD CONSTRAINT FOSAL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSAL_FOSTL_FK'
ALTER TABLE FOSSIL_TAXON_ALIAS ADD CONSTRAINT FOSAL_FOSTL_FK FOREIGN KEY
(
TAXON_LEAF_ID
)
REFERENCES FOSSIL_TAXON_LEAF
(
TAXON_LEAF_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSAL_PSWA_FK'
ALTER TABLE FOSSIL_TAXON_ALIAS ADD CONSTRAINT FOSAL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSAL_R_ART_FK'
ALTER TABLE FOSSIL_TAXON_ALIAS ADD CONSTRAINT FOSAL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSAL_R_FALT_FK'
ALTER TABLE FOSSIL_TAXON_ALIAS ADD CONSTRAINT FOSAL_R_FALT_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_FOS_ALIAS_TYPE
(
FOS_ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSAL_R_LANG_FK'
ALTER TABLE FOSSIL_TAXON_ALIAS ADD CONSTRAINT FOSAL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSAL_SRCD_FK'
ALTER TABLE FOSSIL_TAXON_ALIAS ADD CONSTRAINT FOSAL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSTH_FOSTL_FK'
ALTER TABLE FOSSIL_TAXON_HIER ADD CONSTRAINT FOSTH_FOSTL_FK FOREIGN KEY
(
PARENT_TAXON_LEAF_ID
)
REFERENCES FOSSIL_TAXON_LEAF
(
TAXON_LEAF_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSTH_FOSTL_FK2'
ALTER TABLE FOSSIL_TAXON_HIER ADD CONSTRAINT FOSTH_FOSTL_FK2 FOREIGN KEY
(
CHILD_TAXON_LEAF_ID
)
REFERENCES FOSSIL_TAXON_LEAF
(
TAXON_LEAF_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSTH_SRCD_FK'
ALTER TABLE FOSSIL_TAXON_HIER ADD CONSTRAINT FOSTH_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSTL_R_FTL_FK'
ALTER TABLE FOSSIL_TAXON_LEAF ADD CONSTRAINT FOSTL_R_FTL_FK FOREIGN KEY
(
TAXON_LEVEL
)
REFERENCES R_FOS_TAXON_LEVEL
(
TAXON_LEVEL
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSTL_SRCD_FK'
ALTER TABLE FOSSIL_TAXON_LEAF ADD CONSTRAINT FOSTL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSX_FOS_FK'
ALTER TABLE FOSSIL_XREF ADD CONSTRAINT FOSX_FOS_FK FOREIGN KEY
(
FOSSIL_ID1
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSX_FOS_FK2'
ALTER TABLE FOSSIL_XREF ADD CONSTRAINT FOSX_FOS_FK2 FOREIGN KEY
(
FOSSIL_ID2
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSX_R_FX_FK'
ALTER TABLE FOSSIL_XREF ADD CONSTRAINT FOSX_R_FX_FK FOREIGN KEY
(
FOSSIL_XREF_TYPE
)
REFERENCES R_FOS_XREF
(
FOSSIL_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT FOSX_SRCD_FK'
ALTER TABLE FOSSIL_XREF ADD CONSTRAINT FOSX_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HI_BA_FK'
ALTER TABLE HSE_INCIDENT ADD CONSTRAINT HI_BA_FK FOREIGN KEY
(
REPORTED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HI_HICL_FK'
ALTER TABLE HSE_INCIDENT ADD CONSTRAINT HI_HICL_FK FOREIGN KEY
(
INCIDENT_CLASS_ID
)
REFERENCES HSE_INCIDENT_CLASS
(
INCIDENT_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HI_R_TZ_FK'
ALTER TABLE HSE_INCIDENT ADD CONSTRAINT HI_R_TZ_FK FOREIGN KEY
(
RECORDED_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIB_BA_FK'
ALTER TABLE HSE_INCIDENT_BA ADD CONSTRAINT HIB_BA_FK FOREIGN KEY
(
INVOLVED_PARTY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIB_HI_FK'
ALTER TABLE HSE_INCIDENT_BA ADD CONSTRAINT HIB_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIB_R_ES1_FK'
ALTER TABLE HSE_INCIDENT_BA ADD CONSTRAINT HIB_R_ES1_FK FOREIGN KEY
(
INVOLVED_BA_STATUS
)
REFERENCES R_EMPLOYEE_STATUS
(
EMPLOYEE_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIB_R_IBR_FK'
ALTER TABLE HSE_INCIDENT_BA ADD CONSTRAINT HIB_R_IBR_FK FOREIGN KEY
(
INVOLVED_BA_ROLE
)
REFERENCES R_INCIDENT_BA_ROLE
(
BA_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIB_WDPC_FK'
ALTER TABLE HSE_INCIDENT_BA ADD CONSTRAINT HIB_WDPC_FK FOREIGN KEY
(
UWI,
PERIOD_OBS_NO,
COMPANY_BA_ID,
DETAIL_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD_CREW
(
UWI,
PERIOD_OBS_NO,
CREW_COMPANY_BA_ID,
DETAIL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIC_HI_FK'
ALTER TABLE HSE_INCIDENT_CAUSE ADD CONSTRAINT HIC_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIC_R_ICC_FK'
ALTER TABLE HSE_INCIDENT_CAUSE ADD CONSTRAINT HIC_R_ICC_FK FOREIGN KEY
(
CAUSE_TYPE,
CAUSE_CODE
)
REFERENCES R_INCIDENT_CAUSE_CODE
(
CAUSE_TYPE,
CAUSE_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIC_R_ICT1_FK'
ALTER TABLE HSE_INCIDENT_CAUSE ADD CONSTRAINT HIC_R_ICT1_FK FOREIGN KEY
(
CAUSE_TYPE
)
REFERENCES R_INCIDENT_CAUSE_TYPE
(
CAUSE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICL_BA_FK'
ALTER TABLE HSE_INCIDENT_CLASS ADD CONSTRAINT HICL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICA_BA_FK'
ALTER TABLE HSE_INCIDENT_CLASS_ALIAS ADD CONSTRAINT HICA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICA_HICL_FK'
ALTER TABLE HSE_INCIDENT_CLASS_ALIAS ADD CONSTRAINT HICA_HICL_FK FOREIGN KEY
(
INCIDENT_CLASS_ID
)
REFERENCES HSE_INCIDENT_CLASS
(
INCIDENT_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICA_PSWA_FK'
ALTER TABLE HSE_INCIDENT_CLASS_ALIAS ADD CONSTRAINT HICA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICA_R_ART_FK'
ALTER TABLE HSE_INCIDENT_CLASS_ALIAS ADD CONSTRAINT HICA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICA_R_ATY_FK'
ALTER TABLE HSE_INCIDENT_CLASS_ALIAS ADD CONSTRAINT HICA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICA_R_LANG_FK'
ALTER TABLE HSE_INCIDENT_CLASS_ALIAS ADD CONSTRAINT HICA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICA_SRCD_FK'
ALTER TABLE HSE_INCIDENT_CLASS_ALIAS ADD CONSTRAINT HICA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_ANLR_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_APP_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_A_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_BAA_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_BAA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
ADDRESS_SOURCE,
ADDRESS_OBS_NO
)
REFERENCES BA_ADDRESS
(
BUSINESS_ASSOCIATE_ID,
SOURCE,
ADDRESS_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_BAAU_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_BAC_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_BAC_FK FOREIGN KEY
(
CREW_COMPANY_BA_ID,
CREW_ID
)
REFERENCES BA_CREW
(
CREW_COMPANY_BA_ID,
CREW_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_BACM_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_BACM_FK FOREIGN KEY
(
CREW_COMPANY_BA_ID,
CREW_ID,
CREW_MEMBER_OBS_NO,
CREW_MEMBER_BA_ID
)
REFERENCES BA_CREW_MEMBER
(
CREW_COMPANY_BA_ID,
CREW_ID,
MEMBER_OBS_NO,
CREW_MEMBER_BA_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_BAE_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_BAO_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_BA_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_CA_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_CEQ_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_CLSL_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_CON_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_CO_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_COT_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_C_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_EZ_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_ENT_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_EQ_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_FAC_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_FLD_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_FIN_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_FOS_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_HI_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_INS_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_INT_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_LR_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_LS_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_LIL_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_NOTI_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_OB_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_PASU_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_PDE_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_PDENVS_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_PDENVS_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_PERIOD_ID,
PDEN_SOURCE,
PDEN_VOLUME_METHOD,
PDEN_ACTIVITY_TYPE,
PDEN_PERIOD_TYPE,
PDEN_AMENDMENT_SEQ_NO
)
REFERENCES PDEN_VOL_SUMMARY
(
PDEN_SUBTYPE,
PDEN_ID,
PERIOD_ID,
PDEN_SOURCE,
VOLUME_METHOD,
ACTIVITY_TYPE,
PERIOD_TYPE,
AMENDMENT_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_PL_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_PSWA_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_PSYS_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_PT_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_PS_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_PSF_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_PSF_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID,
PR_STR_FORM_OBS_NO
)
REFERENCES PROD_STRING_FORMATION
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_PROJ_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_PROJP_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_PROJP_FK FOREIGN KEY
(
PROJECT_PLAN_ID
)
REFERENCES PROJECT_PLAN
(
PROJECT_PLAN_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_RATE_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_RSCL_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_RSE_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_REST_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_REST_FK FOREIGN KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION
)
REFERENCES RESTRICTION
(
RESTRICTION_ID,
RESTRICTION_VERSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_RMDSS_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_RMII_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_RMPI_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_RMTW_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_R_HCR_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_R_HCR_FK FOREIGN KEY
(
COMPONENT_ROLE
)
REFERENCES R_HSE_COMP_ROLE
(
COMPONENT_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_R_HICT_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_R_HICT_FK FOREIGN KEY
(
COMPONENT_TYPE
)
REFERENCES R_HSE_INCIDENT_COMP_TYPE
(
COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_SS_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_SF_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_SPD_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_STFST_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_STU_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_SUB_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_W_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_WAC_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_WAC_FK FOREIGN KEY
(
UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_WDP_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_WDP_FK FOREIGN KEY
(
UWI,
WELL_DRILL_PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_WSET_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HICOM_WO_FK'
ALTER TABLE HSE_INCIDENT_COMPONENT ADD CONSTRAINT HICOM_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HID_HI_FK'
ALTER TABLE HSE_INCIDENT_DETAIL ADD CONSTRAINT HID_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HID_HISV_FK'
ALTER TABLE HSE_INCIDENT_DETAIL ADD CONSTRAINT HID_HISV_FK FOREIGN KEY
(
INCIDENT_SET_ID,
INCIDENT_TYPE_ID,
INCIDENT_SEVERITY_ID
)
REFERENCES HSE_INCIDENT_SEVERITY
(
INCIDENT_SET_ID,
INCIDENT_TYPE_ID,
INCIDENT_SEVERITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HID_HIT_FK'
ALTER TABLE HSE_INCIDENT_DETAIL ADD CONSTRAINT HID_HIT_FK FOREIGN KEY
(
INCIDENT_SET_ID,
INCIDENT_TYPE_ID
)
REFERENCES HSE_INCIDENT_TYPE
(
INCIDENT_SET_ID,
INCIDENT_TYPE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HID_R_HID_FK'
ALTER TABLE HSE_INCIDENT_DETAIL ADD CONSTRAINT HID_R_HID_FK FOREIGN KEY
(
DETAIL_TYPE
)
REFERENCES R_HSE_INCIDENT_DETAIL
(
DETAIL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIE_EQ_FK'
ALTER TABLE HSE_INCIDENT_EQUIP ADD CONSTRAINT HIE_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIE_HI_FK'
ALTER TABLE HSE_INCIDENT_EQUIP ADD CONSTRAINT HIE_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIE_R_CEG_FK'
ALTER TABLE HSE_INCIDENT_EQUIP ADD CONSTRAINT HIE_R_CEG_FK FOREIGN KEY
(
EQUIPMENT_GROUP
)
REFERENCES R_CAT_EQUIP_GROUP
(
CAT_EQUIP_GROUP
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIE_R_CET_FK'
ALTER TABLE HSE_INCIDENT_EQUIP ADD CONSTRAINT HIE_R_CET_FK FOREIGN KEY
(
EQUIPMENT_TYPE
)
REFERENCES R_CAT_EQUIP_TYPE
(
CAT_EQUIP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIE_WDPE_FK'
ALTER TABLE HSE_INCIDENT_EQUIP ADD CONSTRAINT HIE_WDPE_FK FOREIGN KEY
(
UWI,
PERIOD_OBS_NO,
EQUIPMENT_ID
)
REFERENCES WELL_DRILL_PERIOD_EQUIP
(
UWI,
PERIOD_OBS_NO,
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIEQ_HIT_FK'
ALTER TABLE HSE_INCIDENT_EQUIV ADD CONSTRAINT HIEQ_HIT_FK FOREIGN KEY
(
INCIDENT_SET_ID,
INCIDENT_TYPE_ID
)
REFERENCES HSE_INCIDENT_TYPE
(
INCIDENT_SET_ID,
INCIDENT_TYPE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIEQ_HIT_FK2'
ALTER TABLE HSE_INCIDENT_EQUIV ADD CONSTRAINT HIEQ_HIT_FK2 FOREIGN KEY
(
INCIDENT_SET_ID2,
INCIDENT_TYPE_ID2
)
REFERENCES HSE_INCIDENT_TYPE
(
INCIDENT_SET_ID,
INCIDENT_TYPE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIEQ_SRCD_FK'
ALTER TABLE HSE_INCIDENT_EQUIV ADD CONSTRAINT HIEQ_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HII_HI_FK'
ALTER TABLE HSE_INCIDENT_INTERACTION ADD CONSTRAINT HII_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HII_HIB_FK'
ALTER TABLE HSE_INCIDENT_INTERACTION ADD CONSTRAINT HII_HIB_FK FOREIGN KEY
(
INCIDENT_ID,
PARTY_OBS_NO,
PARTY_ROLE_OBS_NO
)
REFERENCES HSE_INCIDENT_BA
(
INCIDENT_ID,
PARTY_OBS_NO,
PARTY_ROLE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HII_HIC_FK'
ALTER TABLE HSE_INCIDENT_INTERACTION ADD CONSTRAINT HII_HIC_FK FOREIGN KEY
(
INCIDENT_ID,
CAUSE_OBS_NO
)
REFERENCES HSE_INCIDENT_CAUSE
(
INCIDENT_ID,
CAUSE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HII_HID_FK'
ALTER TABLE HSE_INCIDENT_INTERACTION ADD CONSTRAINT HII_HID_FK FOREIGN KEY
(
INCIDENT_ID,
DETAIL_OBS_NO
)
REFERENCES HSE_INCIDENT_DETAIL
(
INCIDENT_ID,
DETAIL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HII_HIE_FK'
ALTER TABLE HSE_INCIDENT_INTERACTION ADD CONSTRAINT HII_HIE_FK FOREIGN KEY
(
INCIDENT_ID,
EQUIP_OBS_NO,
EQUIP_ROLE_OBS_NO
)
REFERENCES HSE_INCIDENT_EQUIP
(
INCIDENT_ID,
EQUIP_OBS_NO,
EQUIP_ROLE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HII_HIRE_FK'
ALTER TABLE HSE_INCIDENT_INTERACTION ADD CONSTRAINT HII_HIRE_FK FOREIGN KEY
(
INCIDENT_ID,
RESPONSE_OBS_NO
)
REFERENCES HSE_INCIDENT_RESPONSE
(
INCIDENT_ID,
RESPONSE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HII_HISU_FK'
ALTER TABLE HSE_INCIDENT_INTERACTION ADD CONSTRAINT HII_HISU_FK FOREIGN KEY
(
INCIDENT_ID,
INCIDENT_SUBSTANCE,
SUBSTANCE_SEQ_NO
)
REFERENCES HSE_INCIDENT_SUBSTANCE
(
INCIDENT_ID,
INCIDENT_SUBSTANCE,
SUBSTANCE_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HII_R_IIT_FK'
ALTER TABLE HSE_INCIDENT_INTERACTION ADD CONSTRAINT HII_R_IIT_FK FOREIGN KEY
(
INTERACTION_TYPE
)
REFERENCES R_INCIDENT_INTERACT_TYPE
(
INTERACTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIRK_BA_FK'
ALTER TABLE HSE_INCIDENT_REMARK ADD CONSTRAINT HIRK_BA_FK FOREIGN KEY
(
REMARK_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIRK_HI_FK'
ALTER TABLE HSE_INCIDENT_REMARK ADD CONSTRAINT HIRK_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIRK_R_RT2_FK'
ALTER TABLE HSE_INCIDENT_REMARK ADD CONSTRAINT HIRK_R_RT2_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_REMARK_TYPE
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIRE_HI_FK'
ALTER TABLE HSE_INCIDENT_RESPONSE ADD CONSTRAINT HIRE_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIRE_PROJ_FK'
ALTER TABLE HSE_INCIDENT_RESPONSE ADD CONSTRAINT HIRE_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIRE_R_HRT_FK'
ALTER TABLE HSE_INCIDENT_RESPONSE ADD CONSTRAINT HIRE_R_HRT_FK FOREIGN KEY
(
RESPONSE_TYPE
)
REFERENCES R_HSE_RESPONSE_TYPE
(
ACTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIRE_R_IRR_FK'
ALTER TABLE HSE_INCIDENT_RESPONSE ADD CONSTRAINT HIRE_R_IRR_FK FOREIGN KEY
(
RESPONSE_RESULT
)
REFERENCES R_INCIDENT_RESP_RESULT
(
RESPONSE_RESULT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIS_BA_FK'
ALTER TABLE HSE_INCIDENT_SET ADD CONSTRAINT HIS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HISV_HIT_FK'
ALTER TABLE HSE_INCIDENT_SEVERITY ADD CONSTRAINT HISV_HIT_FK FOREIGN KEY
(
INCIDENT_SET_ID,
INCIDENT_TYPE_ID
)
REFERENCES HSE_INCIDENT_TYPE
(
INCIDENT_SET_ID,
INCIDENT_TYPE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HISV_SRCD_FK'
ALTER TABLE HSE_INCIDENT_SEVERITY ADD CONSTRAINT HISV_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HISA_BA_FK'
ALTER TABLE HSE_INCIDENT_SEV_ALIAS ADD CONSTRAINT HISA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HISA_HISV_FK'
ALTER TABLE HSE_INCIDENT_SEV_ALIAS ADD CONSTRAINT HISA_HISV_FK FOREIGN KEY
(
INCIDENT_SET_ID,
INCIDENT_TYPE_ID,
INCIDENT_SEVERITY_ID
)
REFERENCES HSE_INCIDENT_SEVERITY
(
INCIDENT_SET_ID,
INCIDENT_TYPE_ID,
INCIDENT_SEVERITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HISA_PSWA_FK'
ALTER TABLE HSE_INCIDENT_SEV_ALIAS ADD CONSTRAINT HISA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HISA_R_ART_FK'
ALTER TABLE HSE_INCIDENT_SEV_ALIAS ADD CONSTRAINT HISA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HISA_R_ATY_FK'
ALTER TABLE HSE_INCIDENT_SEV_ALIAS ADD CONSTRAINT HISA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HISA_R_LANG_FK'
ALTER TABLE HSE_INCIDENT_SEV_ALIAS ADD CONSTRAINT HISA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HISA_SRCD_FK'
ALTER TABLE HSE_INCIDENT_SEV_ALIAS ADD CONSTRAINT HISA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HISU_HI_FK'
ALTER TABLE HSE_INCIDENT_SUBSTANCE ADD CONSTRAINT HISU_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HISU_R_ISUB_FK'
ALTER TABLE HSE_INCIDENT_SUBSTANCE ADD CONSTRAINT HISU_R_ISUB_FK FOREIGN KEY
(
INCIDENT_SUBSTANCE
)
REFERENCES R_INCIDENT_SUBSTANCE
(
INCIDENT_SUBSTANCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HISU_R_ISRL_FK'
ALTER TABLE HSE_INCIDENT_SUBSTANCE ADD CONSTRAINT HISU_R_ISRL_FK FOREIGN KEY
(
SUBSTANCE_ROLE
)
REFERENCES R_INCIDENT_SUBST_ROLE
(
SUBSTANCE_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIT_HIS_FK'
ALTER TABLE HSE_INCIDENT_TYPE ADD CONSTRAINT HIT_HIS_FK FOREIGN KEY
(
INCIDENT_SET_ID
)
REFERENCES HSE_INCIDENT_SET
(
INCIDENT_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIT_PROJP_FK'
ALTER TABLE HSE_INCIDENT_TYPE ADD CONSTRAINT HIT_PROJP_FK FOREIGN KEY
(
PROJECT_PLAN_ID
)
REFERENCES PROJECT_PLAN
(
PROJECT_PLAN_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIT_SRCD_FK'
ALTER TABLE HSE_INCIDENT_TYPE ADD CONSTRAINT HIT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HITA_BA_FK'
ALTER TABLE HSE_INCIDENT_TYPE_ALIAS ADD CONSTRAINT HITA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HITA_HIT_FK'
ALTER TABLE HSE_INCIDENT_TYPE_ALIAS ADD CONSTRAINT HITA_HIT_FK FOREIGN KEY
(
INCIDENT_SET_ID,
INCIDENT_TYPE_ID
)
REFERENCES HSE_INCIDENT_TYPE
(
INCIDENT_SET_ID,
INCIDENT_TYPE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HITA_PSWA_FK'
ALTER TABLE HSE_INCIDENT_TYPE_ALIAS ADD CONSTRAINT HITA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HITA_R_ART_FK'
ALTER TABLE HSE_INCIDENT_TYPE_ALIAS ADD CONSTRAINT HITA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HITA_R_ATY_FK'
ALTER TABLE HSE_INCIDENT_TYPE_ALIAS ADD CONSTRAINT HITA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HITA_R_LANG_FK'
ALTER TABLE HSE_INCIDENT_TYPE_ALIAS ADD CONSTRAINT HITA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HITA_SRCD_FK'
ALTER TABLE HSE_INCIDENT_TYPE_ALIAS ADD CONSTRAINT HITA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIW_HI_FK'
ALTER TABLE HSE_INCIDENT_WEATHER ADD CONSTRAINT HIW_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIW_R_DIR_FK'
ALTER TABLE HSE_INCIDENT_WEATHER ADD CONSTRAINT HIW_R_DIR_FK FOREIGN KEY
(
WIND_DIRECTION
)
REFERENCES R_DIRECTION
(
DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIW_R_RCOND_FK'
ALTER TABLE HSE_INCIDENT_WEATHER ADD CONSTRAINT HIW_R_RCOND_FK FOREIGN KEY
(
ROAD_CONDITION
)
REFERENCES R_ROAD_CONDITION
(
ROAD_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIW_R_TZ_FK'
ALTER TABLE HSE_INCIDENT_WEATHER ADD CONSTRAINT HIW_R_TZ_FK FOREIGN KEY
(
RECORDED_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIW_R_WATC_FK'
ALTER TABLE HSE_INCIDENT_WEATHER ADD CONSTRAINT HIW_R_WATC_FK FOREIGN KEY
(
WATER_CONDITION
)
REFERENCES R_WATER_CONDITION
(
WATER_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIW_R_WCOND_FK'
ALTER TABLE HSE_INCIDENT_WEATHER ADD CONSTRAINT HIW_R_WCOND_FK FOREIGN KEY
(
WEATHER_CONDITION
)
REFERENCES R_WEATHER_CONDITION
(
WEATHER_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT HIW_R_WWIND_FK'
ALTER TABLE HSE_INCIDENT_WEATHER ADD CONSTRAINT HIW_R_WWIND_FK FOREIGN KEY
(
WIND_STRENGTH
)
REFERENCES R_WIND_STRENGTH
(
WIND_STRENGTH
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INS_BAA_FK'
ALTER TABLE INSTRUMENT ADD CONSTRAINT INS_BAA_FK FOREIGN KEY
(
JURISDICTION,
JURISDICTION_ADD_SOURCE,
JURISDICTION_ADD_OBS_NO
)
REFERENCES BA_ADDRESS
(
BUSINESS_ASSOCIATE_ID,
SOURCE,
ADDRESS_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INS_BA_FK4'
ALTER TABLE INSTRUMENT ADD CONSTRAINT INS_BA_FK4 FOREIGN KEY
(
REGISTERED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INS_BA_FK'
ALTER TABLE INSTRUMENT ADD CONSTRAINT INS_BA_FK FOREIGN KEY
(
ADD_FOR_SERVICE_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INS_BA_FK2'
ALTER TABLE INSTRUMENT ADD CONSTRAINT INS_BA_FK2 FOREIGN KEY
(
CAVEATOR_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INS_BA_FK3'
ALTER TABLE INSTRUMENT ADD CONSTRAINT INS_BA_FK3 FOREIGN KEY
(
JURISDICTION
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INS_INSA_FK'
ALTER TABLE INSTRUMENT ADD CONSTRAINT INS_INSA_FK FOREIGN KEY
(
INSTRUMENT_ID,
AREA_ID,
AREA_TYPE
)
REFERENCES INSTRUMENT_AREA
(
INSTRUMENT_ID,
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INS_R_INST_FK'
ALTER TABLE INSTRUMENT ADD CONSTRAINT INS_R_INST_FK FOREIGN KEY
(
INSTRUMENT_TYPE
)
REFERENCES R_INSTRUMENT_TYPE
(
LAND_INSTRUMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSA_A_FK'
ALTER TABLE INSTRUMENT_AREA ADD CONSTRAINT INSA_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSA_INS_FK'
ALTER TABLE INSTRUMENT_AREA ADD CONSTRAINT INSA_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_ANLR_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_APP_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_A_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_BAAU_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_BAE_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_BAO_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_BA_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_CA_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_CEQ_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_CLSL_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_CON_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_CO_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_COT_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_C_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_EZ_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_ENT_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_EQ_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_FAC_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_FLD_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_FIN_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_FOS_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_HI_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_INS_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_INT_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_LR_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_LS_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_LIL_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_NOTI_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_OB_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_PASU_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_PDE_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_PL_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_PSWA_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_PT_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_PS_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_PS_FK FOREIGN KEY
(
PR_STR_UWI,
PR_STR_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_PROJ_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_RATE_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_RSCL_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_RSE_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_RMDSS_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_RMII_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_RMPI_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_RMTW_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_R_ICT2_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_R_ICT2_FK FOREIGN KEY
(
INSTRUMENT_COMPONENT_TYPE
)
REFERENCES R_INSTRUMENT_COMP_TYPE
(
INSTRUMENT_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_SS_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_SF_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_SPD_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_STFST_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_STU_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_SUB_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_W_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_WAC_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_WAC_FK FOREIGN KEY
(
WELL_ACTIVITY_UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_WSET_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSCOMP_WO_FK'
ALTER TABLE INSTRUMENT_COMPONENT ADD CONSTRAINT INSCOMP_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSD_INS_FK'
ALTER TABLE INSTRUMENT_DETAIL ADD CONSTRAINT INSD_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSD_R_INSDTC_FK'
ALTER TABLE INSTRUMENT_DETAIL ADD CONSTRAINT INSD_R_INSDTC_FK FOREIGN KEY
(
INSTRUMENT_DETAIL_TYPE,
INSTRUMENT_DETAIL_CODE
)
REFERENCES R_INST_DETAIL_CODE
(
INSTRUMENT_DETAIL_TYPE,
INSTRUMENT_DETAIL_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSD_R_INSDRVT_FK'
ALTER TABLE INSTRUMENT_DETAIL ADD CONSTRAINT INSD_R_INSDRVT_FK FOREIGN KEY
(
REFERENCE_VALUE_TYPE
)
REFERENCES R_INST_DETAIL_REF_VALUE
(
REFERENCE_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSD_R_INSDT_FK'
ALTER TABLE INSTRUMENT_DETAIL ADD CONSTRAINT INSD_R_INSDT_FK FOREIGN KEY
(
INSTRUMENT_DETAIL_TYPE
)
REFERENCES R_INST_DETAIL_TYPE
(
INSTRUMENT_DETAIL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSX_INS_FK'
ALTER TABLE INSTRUMENT_XREF ADD CONSTRAINT INSX_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INSX_INS_FK2'
ALTER TABLE INSTRUMENT_XREF ADD CONSTRAINT INSX_INS_FK2 FOREIGN KEY
(
PARENT_INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INT_R_IST_FK'
ALTER TABLE INTEREST_SET ADD CONSTRAINT INT_R_IST_FK FOREIGN KEY
(
INTEREST_SET_TYPE
)
REFERENCES R_INT_SET_TYPE
(
INTEREST_SET_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_ANLR_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_APP_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_A_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_BAAU_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_BAE_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_BAO_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_BA_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_CA_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_CEQ_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_CLSL_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_CON_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_CO_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_COT_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_C_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_CP_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_CP_FK FOREIGN KEY
(
CONTRACT_ID,
PROVISION_ID
)
REFERENCES CONT_PROVISION
(
CONTRACT_ID,
PROVISION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_EZ_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_ENT_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_EQ_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_FAC_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_FLD_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_FIN_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_FOS_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_HI_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_INS_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_INT_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_LR_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_LS_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_LSOB_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_LSOB_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID,
LAND_OFFERING_BID
)
REFERENCES LAND_SALE_BID
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID,
LAND_OFFERING_BID_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_LIL_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_NOTI_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_OB_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_PASU_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_PDE_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_PDENVD_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_PDENVD_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
PDEN_VOLUME_METHOD,
PDEN_ACTIVITY_TYPE,
PDEN_PRODUCT_TYPE,
PDEN_PERIOD_TYPE,
PDEN_DISPOSITION_OBS_NO,
PDEN_AMENDMENT_SEQ_NO
)
REFERENCES PDEN_VOL_DISPOSITION
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
VOLUME_METHOD,
ACTIVITY_TYPE,
PRODUCT_TYPE,
PERIOD_TYPE,
DISPOSITION_OBS_NO,
AMENDMENT_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_PDENVS_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_PDENVS_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
PDEN_VOLUME_METHOD,
PDEN_ACTIVITY_TYPE,
PDEN_PERIOD_TYPE,
PDEN_PERIOD_ID,
PDEN_AMENDMENT_SEQ_NO
)
REFERENCES PDEN_VOL_SUMMARY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
VOLUME_METHOD,
ACTIVITY_TYPE,
PERIOD_TYPE,
PERIOD_ID,
AMENDMENT_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_PL_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_PSWA_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_PSYS_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_PT_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_PS_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_PSF_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_PSF_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID,
PR_STR_FORM_OBS_NO
)
REFERENCES PROD_STRING_FORMATION
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_PROJ_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_RATE_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_RSC_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_RSC_FK FOREIGN KEY
(
RESENT_ID,
RESERVE_CLASS_ID
)
REFERENCES RESENT_CLASS
(
RESENT_ID,
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_RSCL_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_RSE_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_RMDSS_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_RMII_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_RMPI_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_RMTW_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_R_ISC_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_R_ISC_FK FOREIGN KEY
(
COMPONENT_TYPE
)
REFERENCES R_INT_SET_COMPONENT
(
COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_R_ISTR_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_R_ISTR_FK FOREIGN KEY
(
TRIGGER_EVENT
)
REFERENCES R_INT_SET_TRIGGER
(
TRIGGER_EVENT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_SS_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_SF_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_SPD_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_STFST_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_STU_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_SUB_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_W_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_WAC_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_WAC_FK FOREIGN KEY
(
UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_WL_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_WL_FK FOREIGN KEY
(
UWI,
WELL_LOG_ID,
WELL_LOG_SOURCE
)
REFERENCES WELL_LOG
(
UWI,
WELL_LOG_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_WLC_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_WLC_FK FOREIGN KEY
(
UWI,
WELL_LOG_CURVE_ID
)
REFERENCES WELL_LOG_CURVE
(
UWI,
CURVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_WSET_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTCOM_WO_FK'
ALTER TABLE INT_SET_COMPONENT ADD CONSTRAINT INTCOM_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTP_BAA_FK'
ALTER TABLE INT_SET_PARTNER ADD CONSTRAINT INTP_BAA_FK FOREIGN KEY
(
PARTNER_BA_ID,
ADDRESS_SOURCE,
ADDRESS_OBS_NO
)
REFERENCES BA_ADDRESS
(
BUSINESS_ASSOCIATE_ID,
SOURCE,
ADDRESS_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTP_BA_FK'
ALTER TABLE INT_SET_PARTNER ADD CONSTRAINT INTP_BA_FK FOREIGN KEY
(
PARTNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTP_C_FK'
ALTER TABLE INT_SET_PARTNER ADD CONSTRAINT INTP_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTP_CP_FK'
ALTER TABLE INT_SET_PARTNER ADD CONSTRAINT INTP_CP_FK FOREIGN KEY
(
CONTRACT_ID,
PROVISION_ID
)
REFERENCES CONT_PROVISION
(
CONTRACT_ID,
PROVISION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTP_INS_FK'
ALTER TABLE INT_SET_PARTNER ADD CONSTRAINT INTP_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTP_INT_FK'
ALTER TABLE INT_SET_PARTNER ADD CONSTRAINT INTP_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTP_R_ISR_FK'
ALTER TABLE INT_SET_PARTNER ADD CONSTRAINT INTP_R_ISR_FK FOREIGN KEY
(
INTEREST_SET_ROLE
)
REFERENCES R_INT_SET_ROLE
(
INTEREST_SET_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTP_R_TOT_FK'
ALTER TABLE INT_SET_PARTNER ADD CONSTRAINT INTP_R_TOT_FK FOREIGN KEY
(
TITLE_OWN_TYPE
)
REFERENCES R_TITLE_OWN_TYPE
(
TITLE_OWN_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTPC_BAA_FK'
ALTER TABLE INT_SET_PARTNER_CONT ADD CONSTRAINT INTPC_BAA_FK FOREIGN KEY
(
CONTACT_BA_ID,
ADDRESS_SOURCE,
ADDRESS_OBS_NO
)
REFERENCES BA_ADDRESS
(
BUSINESS_ASSOCIATE_ID,
SOURCE,
ADDRESS_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTPC_BAO_FK'
ALTER TABLE INT_SET_PARTNER_CONT ADD CONSTRAINT INTPC_BAO_FK FOREIGN KEY
(
CONTACT_ORG_BA_ID,
CONTACT_ORG_ORGANIZATION_ID,
CONTACT_ORG_BA_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTPC_BA_FK'
ALTER TABLE INT_SET_PARTNER_CONT ADD CONSTRAINT INTPC_BA_FK FOREIGN KEY
(
CONTACT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTPC_C_FK'
ALTER TABLE INT_SET_PARTNER_CONT ADD CONSTRAINT INTPC_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTPC_CP_FK'
ALTER TABLE INT_SET_PARTNER_CONT ADD CONSTRAINT INTPC_CP_FK FOREIGN KEY
(
CONTRACT_ID,
PROVISION_ID
)
REFERENCES CONT_PROVISION
(
CONTRACT_ID,
PROVISION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTPC_INTP_FK'
ALTER TABLE INT_SET_PARTNER_CONT ADD CONSTRAINT INTPC_INTP_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO,
PARTNER_BA_ID,
PARTNER_OBS_NO
)
REFERENCES INT_SET_PARTNER
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO,
PARTNER_BA_ID,
PARTNER_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTPC_R_CR_FK'
ALTER TABLE INT_SET_PARTNER_CONT ADD CONSTRAINT INTPC_R_CR_FK FOREIGN KEY
(
CONTACT_ROLE
)
REFERENCES R_CONTACT_ROLE
(
CONTACT_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTS_INT_FK'
ALTER TABLE INT_SET_STATUS ADD CONSTRAINT INTS_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTS_R_ISS_FK'
ALTER TABLE INT_SET_STATUS ADD CONSTRAINT INTS_R_ISS_FK FOREIGN KEY
(
STATUS_TYPE,
STATUS
)
REFERENCES R_INT_SET_STATUS
(
STATUS_TYPE,
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTX_C_FK'
ALTER TABLE INT_SET_XREF ADD CONSTRAINT INTX_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTX_CP_FK'
ALTER TABLE INT_SET_XREF ADD CONSTRAINT INTX_CP_FK FOREIGN KEY
(
CONTRACT_ID,
PROVISION_ID
)
REFERENCES CONT_PROVISION
(
CONTRACT_ID,
PROVISION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTX_INT_FK'
ALTER TABLE INT_SET_XREF ADD CONSTRAINT INTX_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTX_INT_FK2'
ALTER TABLE INT_SET_XREF ADD CONSTRAINT INTX_INT_FK2 FOREIGN KEY
(
INTEREST_SET_ID_2,
INTEREST_SET_SEQ_NO_2
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTX_INTP_FK2'
ALTER TABLE INT_SET_XREF ADD CONSTRAINT INTX_INTP_FK2 FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO,
PARTNER_BA_ID,
PARTNER_OBS_NO
)
REFERENCES INT_SET_PARTNER
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO,
PARTNER_BA_ID,
PARTNER_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTX_INTP_FK'
ALTER TABLE INT_SET_XREF ADD CONSTRAINT INTX_INTP_FK FOREIGN KEY
(
PARTNER_OBS_NO_2,
INTEREST_SET_ID_2,
INTEREST_SET_SEQ_NO_2,
PARTNER_BA_ID_2
)
REFERENCES INT_SET_PARTNER
(
PARTNER_OBS_NO,
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO,
PARTNER_BA_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT INTX_R_ISXT_FK'
ALTER TABLE INT_SET_XREF ADD CONSTRAINT INTX_R_ISXT_FK FOREIGN KEY
(
INT_SET_XREF_TYPE
)
REFERENCES R_INT_SET_XREF_TYPE
(
INT_SET_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRAG_LR_FK'
ALTER TABLE LAND_AGREEMENT ADD CONSTRAINT LRAG_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRAG_R_LAT_FK'
ALTER TABLE LAND_AGREEMENT ADD CONSTRAINT LRAG_R_LAT_FK FOREIGN KEY
(
LAND_AGREE_TYPE
)
REFERENCES R_LAND_AGREE_TYPE
(
LAND_AGREE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRAP_LR_FK'
ALTER TABLE LAND_AGREE_PART ADD CONSTRAINT LRAP_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRAP_R_LAT_FK'
ALTER TABLE LAND_AGREE_PART ADD CONSTRAINT LRAP_R_LAT_FK FOREIGN KEY
(
LAND_AGREE_TYPE
)
REFERENCES R_LAND_AGREE_TYPE
(
LAND_AGREE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRAL_BA_FK'
ALTER TABLE LAND_ALIAS ADD CONSTRAINT LRAL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRAL_LR_FK'
ALTER TABLE LAND_ALIAS ADD CONSTRAINT LRAL_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRAL_PSWA_FK'
ALTER TABLE LAND_ALIAS ADD CONSTRAINT LRAL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRAL_R_ART_FK'
ALTER TABLE LAND_ALIAS ADD CONSTRAINT LRAL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRAL_R_ATY_FK'
ALTER TABLE LAND_ALIAS ADD CONSTRAINT LRAL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRAL_R_LRNT_FK'
ALTER TABLE LAND_ALIAS ADD CONSTRAINT LRAL_R_LRNT_FK FOREIGN KEY
(
LAND_REF_NUM_TYPE
)
REFERENCES R_LAND_REF_NUM_TYPE
(
LAND_REF_NUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRAL_R_LANG_FK'
ALTER TABLE LAND_ALIAS ADD CONSTRAINT LRAL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRAL_SRCD_FK'
ALTER TABLE LAND_ALIAS ADD CONSTRAINT LRAL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRAR_A_FK'
ALTER TABLE LAND_AREA ADD CONSTRAINT LRAR_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRAR_LR_FK'
ALTER TABLE LAND_AREA ADD CONSTRAINT LRAR_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRBS_BAO_FK'
ALTER TABLE LAND_BA_SERVICE ADD CONSTRAINT LRBS_BAO_FK FOREIGN KEY
(
CONTACT_BA_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRBS_BA_FK'
ALTER TABLE LAND_BA_SERVICE ADD CONSTRAINT LRBS_BA_FK FOREIGN KEY
(
CONTACT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRBS_BA_FK2'
ALTER TABLE LAND_BA_SERVICE ADD CONSTRAINT LRBS_BA_FK2 FOREIGN KEY
(
PROVIDED_BY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRBS_BA_FK3'
ALTER TABLE LAND_BA_SERVICE ADD CONSTRAINT LRBS_BA_FK3 FOREIGN KEY
(
REPRESENTED_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRBS_C_FK'
ALTER TABLE LAND_BA_SERVICE ADD CONSTRAINT LRBS_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRBS_CP_FK'
ALTER TABLE LAND_BA_SERVICE ADD CONSTRAINT LRBS_CP_FK FOREIGN KEY
(
CONTRACT_ID,
PROVISION_ID
)
REFERENCES CONT_PROVISION
(
CONTRACT_ID,
PROVISION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRBS_LR_FK'
ALTER TABLE LAND_BA_SERVICE ADD CONSTRAINT LRBS_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRBS_RATE_FK'
ALTER TABLE LAND_BA_SERVICE ADD CONSTRAINT LRBS_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRBS_R_BST_FK'
ALTER TABLE LAND_BA_SERVICE ADD CONSTRAINT LRBS_R_BST_FK FOREIGN KEY
(
BA_SERVICE_TYPE
)
REFERENCES R_BA_SERVICE_TYPE
(
BA_SERVICE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRBS_R_SQ_FK'
ALTER TABLE LAND_BA_SERVICE ADD CONSTRAINT LRBS_R_SQ_FK FOREIGN KEY
(
SERVICE_QUALITY
)
REFERENCES R_SERVICE_QUALITY
(
SERVICE_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRO_BA_FK'
ALTER TABLE LAND_OCCUPANT ADD CONSTRAINT LRO_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRO_LR_FK'
ALTER TABLE LAND_OCCUPANT ADD CONSTRAINT LRO_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRRM_BA_FK'
ALTER TABLE LAND_REMARK ADD CONSTRAINT LRRM_BA_FK FOREIGN KEY
(
REMARK_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRRM_LR_FK'
ALTER TABLE LAND_REMARK ADD CONSTRAINT LRRM_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRRM_R_RT2_FK'
ALTER TABLE LAND_REMARK ADD CONSTRAINT LRRM_R_RT2_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_REMARK_TYPE
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LR_LRAR_FK'
ALTER TABLE LAND_RIGHT ADD CONSTRAINT LR_LRAR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
AREA_ID,
AREA_TYPE
)
REFERENCES LAND_AREA
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LR_LSO_FK'
ALTER TABLE LAND_RIGHT ADD CONSTRAINT LR_LSO_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID
)
REFERENCES LAND_SALE_OFFERING
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LR_R_GRT_FK'
ALTER TABLE LAND_RIGHT ADD CONSTRAINT LR_R_GRT_FK FOREIGN KEY
(
GRANTED_RIGHT_TYPE
)
REFERENCES R_GRANTED_RIGHT_TYPE
(
GRANTED_RIGHT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LR_R_LAM_FK'
ALTER TABLE LAND_RIGHT ADD CONSTRAINT LR_R_LAM_FK FOREIGN KEY
(
LAND_ACQTN_METHOD
)
REFERENCES R_LAND_ACQTN_METHOD
(
LAND_ACQTN_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LR_R_LCA_FK'
ALTER TABLE LAND_RIGHT ADD CONSTRAINT LR_R_LCA_FK FOREIGN KEY
(
LAND_CASE_ACTION
)
REFERENCES R_LAND_CASE_ACTION
(
LAND_CASE_ACTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LR_R_LCT_FK'
ALTER TABLE LAND_RIGHT ADD CONSTRAINT LR_R_LCT_FK FOREIGN KEY
(
LAND_CASE_TYPE
)
REFERENCES R_LAND_CASE_TYPE
(
LAND_CASE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LR_R_LLT_FK'
ALTER TABLE LAND_RIGHT ADD CONSTRAINT LR_R_LLT_FK FOREIGN KEY
(
LESSOR_TYPE
)
REFERENCES R_LAND_LESSOR_TYPE
(
LAND_LESSOR_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LR_R_LPT1_FK'
ALTER TABLE LAND_RIGHT ADD CONSTRAINT LR_R_LPT1_FK FOREIGN KEY
(
LAND_PROPERTY_TYPE
)
REFERENCES R_LAND_PROPERTY_TYPE
(
LAND_PROPERTY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LR_R_LRC_FK'
ALTER TABLE LAND_RIGHT ADD CONSTRAINT LR_R_LRC_FK FOREIGN KEY
(
LAND_RIGHT_CATEGORY
)
REFERENCES R_LAND_RIGHT_CATEGORY
(
LAND_RIGHT_CATEGORY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LR_R_M_FK'
ALTER TABLE LAND_RIGHT ADD CONSTRAINT LR_R_M_FK FOREIGN KEY
(
MUNICIPALITY
)
REFERENCES R_MUNICIPALITY
(
MUNICIPALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LR_R_WQT_FK'
ALTER TABLE LAND_RIGHT ADD CONSTRAINT LR_R_WQT_FK FOREIGN KEY
(
WELL_QUALIFIC_TYPE
)
REFERENCES R_WELL_QUALIFIC_TYPE
(
WELL_QUALIFIC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRAPP_APP_FK'
ALTER TABLE LAND_RIGHT_APPLIC ADD CONSTRAINT LRAPP_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRAPP_LR_FK'
ALTER TABLE LAND_RIGHT_APPLIC ADD CONSTRAINT LRAPP_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRBAL_BALIC_FK'
ALTER TABLE LAND_RIGHT_BA_LIC ADD CONSTRAINT LRBAL_BALIC_FK FOREIGN KEY
(
LICENSEE_BA_ID,
LICENSE_ID
)
REFERENCES BA_LICENSE
(
LICENSEE_BA_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRBAL_LR_FK'
ALTER TABLE LAND_RIGHT_BA_LIC ADD CONSTRAINT LRBAL_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_ANLR_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_APP_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_A_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_BAAU_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_BAE_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_BAO_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_BA_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_CA_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_CEQ_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_CLSL_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_CON_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_CO_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_COT_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_C_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_EZ_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_ENT_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_EQ_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_FAC_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_FLD_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_FIN_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_FOS_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_HI_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_INS_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_INT_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_LR_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_LS_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_LIL_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_NOTI_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_OB_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_PASU_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_PDE_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_PL_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_PSWA_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_PSYS_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_PT_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_PS_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_PROJ_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_RATE_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_RSCL_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_RSE_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_RMDSS_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_RMII_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_RMPI_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_RMTW_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_R_LCT1_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_R_LCT1_FK FOREIGN KEY
(
LAND_COMPONENT_TYPE
)
REFERENCES R_LAND_COMPONENT_TYPE
(
LAND_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_R_LANG_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_R_LANG_FK FOREIGN KEY
(
LANGUAGE
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_SS_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_SF_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_SPD_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_STFST_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_STU_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_SUB_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_W_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_WAC_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_WAC_FK FOREIGN KEY
(
UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_WSET_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRCOMP_WO_FK'
ALTER TABLE LAND_RIGHT_COMPONENT ADD CONSTRAINT LRCOMP_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRFAC_FAC_FK'
ALTER TABLE LAND_RIGHT_FACILITY ADD CONSTRAINT LRFAC_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRFAC_LR_FK'
ALTER TABLE LAND_RIGHT_FACILITY ADD CONSTRAINT LRFAC_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRFAC_R_LFX_FK'
ALTER TABLE LAND_RIGHT_FACILITY ADD CONSTRAINT LRFAC_R_LFX_FK FOREIGN KEY
(
XREF_TYPE
)
REFERENCES R_LR_FACILITY_XREF
(
XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRFLD_FLD_FK'
ALTER TABLE LAND_RIGHT_FIELD ADD CONSTRAINT LRFLD_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRFLD_LR_FK'
ALTER TABLE LAND_RIGHT_FIELD ADD CONSTRAINT LRFLD_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRFLD_R_LFX1_FK'
ALTER TABLE LAND_RIGHT_FIELD ADD CONSTRAINT LRFLD_R_LFX1_FK FOREIGN KEY
(
XREF_TYPE
)
REFERENCES R_LR_FIELD_XREF
(
XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRI_INS_FK'
ALTER TABLE LAND_RIGHT_INSTRUMENT ADD CONSTRAINT LRI_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRI_INS_FK2'
ALTER TABLE LAND_RIGHT_INSTRUMENT ADD CONSTRAINT LRI_INS_FK2 FOREIGN KEY
(
DISCHARGE_INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRI_LR_FK'
ALTER TABLE LAND_RIGHT_INSTRUMENT ADD CONSTRAINT LRI_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRP_LR_FK'
ALTER TABLE LAND_RIGHT_POOL ADD CONSTRAINT LRP_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRP_PL_FK'
ALTER TABLE LAND_RIGHT_POOL ADD CONSTRAINT LRP_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRR_LR_FK'
ALTER TABLE LAND_RIGHT_REST ADD CONSTRAINT LRR_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRR_REST_FK'
ALTER TABLE LAND_RIGHT_REST ADD CONSTRAINT LRR_REST_FK FOREIGN KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION
)
REFERENCES RESTRICTION
(
RESTRICTION_ID,
RESTRICTION_VERSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRRR_LRR_FK'
ALTER TABLE LAND_RIGHT_REST_REM ADD CONSTRAINT LRRR_LRR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
RESTRICTION_ID,
RESTRICTION_VERSION
)
REFERENCES LAND_RIGHT_REST
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
RESTRICTION_ID,
RESTRICTION_VERSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRRR_R_RT2_FK'
ALTER TABLE LAND_RIGHT_REST_REM ADD CONSTRAINT LRRR_R_RT2_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_REMARK_TYPE
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRRR_R_RR_FK'
ALTER TABLE LAND_RIGHT_REST_REM ADD CONSTRAINT LRRR_R_RR_FK FOREIGN KEY
(
RESTRICTION_REMARK_TYPE
)
REFERENCES R_REST_REMARK
(
RESTRICTION_REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRW_LR_FK'
ALTER TABLE LAND_RIGHT_WELL ADD CONSTRAINT LRW_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRW_PS_FK'
ALTER TABLE LAND_RIGHT_WELL ADD CONSTRAINT LRW_PS_FK FOREIGN KEY
(
UWI,
PR_STR_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRW_PSF_FK'
ALTER TABLE LAND_RIGHT_WELL ADD CONSTRAINT LRW_PSF_FK FOREIGN KEY
(
UWI,
PR_STR_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
)
REFERENCES PROD_STRING_FORMATION
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRW_R_LWRT_FK'
ALTER TABLE LAND_RIGHT_WELL ADD CONSTRAINT LRW_R_LWRT_FK FOREIGN KEY
(
WELL_RELATIONSHIP_TYPE
)
REFERENCES R_LAND_WELL_REL_TYPE
(
WELL_RELATIONSHIP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRW_SU_FK'
ALTER TABLE LAND_RIGHT_WELL ADD CONSTRAINT LRW_SU_FK FOREIGN KEY
(
SPACING_UNIT_ID
)
REFERENCES SPACING_UNIT
(
SPACING_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRW_W_FK'
ALTER TABLE LAND_RIGHT_WELL ADD CONSTRAINT LRW_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRWS_LRW_FK'
ALTER TABLE LAND_RIGHT_WELL_SUBST ADD CONSTRAINT LRWS_LRW_FK FOREIGN KEY
(
UWI,
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
LR_WELL_SEQ_NO
)
REFERENCES LAND_RIGHT_WELL
(
UWI,
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
LR_WELL_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRWS_SUB_FK'
ALTER TABLE LAND_RIGHT_WELL_SUBST ADD CONSTRAINT LRWS_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LS_BA_FK'
ALTER TABLE LAND_SALE ADD CONSTRAINT LS_BA_FK FOREIGN KEY
(
JURISDICTION
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSBS_BAO_FK'
ALTER TABLE LAND_SALE_BA_SERVICE ADD CONSTRAINT LSBS_BAO_FK FOREIGN KEY
(
CONTACT_BA_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSBS_BA_FK'
ALTER TABLE LAND_SALE_BA_SERVICE ADD CONSTRAINT LSBS_BA_FK FOREIGN KEY
(
CONTACT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSBS_BA_FK2'
ALTER TABLE LAND_SALE_BA_SERVICE ADD CONSTRAINT LSBS_BA_FK2 FOREIGN KEY
(
REPRESENTED_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSBS_BA_FK3'
ALTER TABLE LAND_SALE_BA_SERVICE ADD CONSTRAINT LSBS_BA_FK3 FOREIGN KEY
(
PROVIDED_BY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSBS_LSO_FK'
ALTER TABLE LAND_SALE_BA_SERVICE ADD CONSTRAINT LSBS_LSO_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID
)
REFERENCES LAND_SALE_OFFERING
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSBS_RATE_FK'
ALTER TABLE LAND_SALE_BA_SERVICE ADD CONSTRAINT LSBS_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSBS_R_BST_FK'
ALTER TABLE LAND_SALE_BA_SERVICE ADD CONSTRAINT LSBS_R_BST_FK FOREIGN KEY
(
BA_SERVICE_TYPE
)
REFERENCES R_BA_SERVICE_TYPE
(
BA_SERVICE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSBS_R_SQ_FK'
ALTER TABLE LAND_SALE_BA_SERVICE ADD CONSTRAINT LSBS_R_SQ_FK FOREIGN KEY
(
SERVICE_QUALITY
)
REFERENCES R_SERVICE_QUALITY
(
SERVICE_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSOB_BAA_FK'
ALTER TABLE LAND_SALE_BID ADD CONSTRAINT LSOB_BAA_FK FOREIGN KEY
(
ADDRESS_FOR_SERVICE,
ADDRESS_SOURCE,
ADDRESS_OBS_NO
)
REFERENCES BA_ADDRESS
(
BUSINESS_ASSOCIATE_ID,
SOURCE,
ADDRESS_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSOB_BA_FK'
ALTER TABLE LAND_SALE_BID ADD CONSTRAINT LSOB_BA_FK FOREIGN KEY
(
BIDDER
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSOB_LSO_FK'
ALTER TABLE LAND_SALE_BID ADD CONSTRAINT LSOB_LSO_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID
)
REFERENCES LAND_SALE_OFFERING
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSOB_OBPI_FK'
ALTER TABLE LAND_SALE_BID ADD CONSTRAINT LSOB_OBPI_FK FOREIGN KEY
(
BIDDER,
PAYMENT_INSTRUCTION_ID
)
REFERENCES OBLIG_PAYMENT_INSTR
(
PAYEE_BA_ID,
PAYMENT_INSTRUCTION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSOB_R_LBT1_FK'
ALTER TABLE LAND_SALE_BID ADD CONSTRAINT LSOB_R_LBT1_FK FOREIGN KEY
(
BIDDER_TYPE
)
REFERENCES R_LAND_BIDDER_TYPE
(
LAND_BIDDER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSOB_R_LBS_FK'
ALTER TABLE LAND_SALE_BID ADD CONSTRAINT LSOB_R_LBS_FK FOREIGN KEY
(
BID_STATUS
)
REFERENCES R_LAND_BID_STATUS
(
LAND_BID_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSOB_R_LBT_FK'
ALTER TABLE LAND_SALE_BID ADD CONSTRAINT LSOB_R_LBT_FK FOREIGN KEY
(
BID_TYPE
)
REFERENCES R_LAND_BID_TYPE
(
LAND_BID_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSOB_R_LCBT_FK'
ALTER TABLE LAND_SALE_BID ADD CONSTRAINT LSOB_R_LCBT_FK FOREIGN KEY
(
CASH_BID_TYPE
)
REFERENCES R_LAND_CASH_BID_TYPE
(
CASH_BID_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSBS1_BA_FK'
ALTER TABLE LAND_SALE_BID_SET ADD CONSTRAINT LSBS1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSBSB_LSOB_FK'
ALTER TABLE LAND_SALE_BID_SET_BID ADD CONSTRAINT LSBSB_LSOB_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID,
LAND_OFFERING_BID_ID
)
REFERENCES LAND_SALE_BID
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID,
LAND_OFFERING_BID_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSBSB_LSBS1_FK'
ALTER TABLE LAND_SALE_BID_SET_BID ADD CONSTRAINT LSBSB_LSBS1_FK FOREIGN KEY
(
LAND_SALE_BID_SET_ID
)
REFERENCES LAND_SALE_BID_SET
(
LAND_SALE_BID_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSF_LS_FK'
ALTER TABLE LAND_SALE_FEE ADD CONSTRAINT LSF_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSF_RATE_FK'
ALTER TABLE LAND_SALE_FEE ADD CONSTRAINT LSF_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSO_LS_FK'
ALTER TABLE LAND_SALE_OFFERING ADD CONSTRAINT LSO_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSO_R_LOS_FK'
ALTER TABLE LAND_SALE_OFFERING ADD CONSTRAINT LSO_R_LOS_FK FOREIGN KEY
(
LAND_OFFERING_STATUS
)
REFERENCES R_LAND_OFFRING_STATUS
(
LAND_OFFRING_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSO_R_LOT1_FK'
ALTER TABLE LAND_SALE_OFFERING ADD CONSTRAINT LSO_R_LOT1_FK FOREIGN KEY
(
LAND_OFFERING_TYPE
)
REFERENCES R_LAND_OFFRING_TYPE
(
LAND_OFFRING_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSO_R_LOCR_FK'
ALTER TABLE LAND_SALE_OFFERING ADD CONSTRAINT LSO_R_LOCR_FK FOREIGN KEY
(
CANCEL_REASON
)
REFERENCES R_L_OFFR_CANCEL_RSN
(
LAND_OFFR_CANCEL_RSN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSOA_A_FK'
ALTER TABLE LAND_SALE_OFFERING_AREA ADD CONSTRAINT LSOA_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSOA_LSO_FK'
ALTER TABLE LAND_SALE_OFFERING_AREA ADD CONSTRAINT LSOA_LSO_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID
)
REFERENCES LAND_SALE_OFFERING
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSRQ_A_FK'
ALTER TABLE LAND_SALE_REQUEST ADD CONSTRAINT LSRQ_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSRQ_BA_FK'
ALTER TABLE LAND_SALE_REQUEST ADD CONSTRAINT LSRQ_BA_FK FOREIGN KEY
(
BROKER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSRQ_BA_FK2'
ALTER TABLE LAND_SALE_REQUEST ADD CONSTRAINT LSRQ_BA_FK2 FOREIGN KEY
(
ORIGINATOR_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSRQ_BA_FK3'
ALTER TABLE LAND_SALE_REQUEST ADD CONSTRAINT LSRQ_BA_FK3 FOREIGN KEY
(
CONTACT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSRQ_BA_FK4'
ALTER TABLE LAND_SALE_REQUEST ADD CONSTRAINT LSRQ_BA_FK4 FOREIGN KEY
(
JURISDICTION
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSRQ_LR_FK'
ALTER TABLE LAND_SALE_REQUEST ADD CONSTRAINT LSRQ_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSRQ_LSO_FK'
ALTER TABLE LAND_SALE_REQUEST ADD CONSTRAINT LSRQ_LSO_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID
)
REFERENCES LAND_SALE_OFFERING
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSRQ_LSRQ_FK'
ALTER TABLE LAND_SALE_REQUEST ADD CONSTRAINT LSRQ_LSRQ_FK FOREIGN KEY
(
PREVIOUS_REQUEST_ID
)
REFERENCES LAND_SALE_REQUEST
(
LAND_REQUEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSRQ_R_GRT_FK'
ALTER TABLE LAND_SALE_REQUEST ADD CONSTRAINT LSRQ_R_GRT_FK FOREIGN KEY
(
GRANTED_RIGHT_TYPE
)
REFERENCES R_GRANTED_RIGHT_TYPE
(
GRANTED_RIGHT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSRQ_R_LRT2_FK'
ALTER TABLE LAND_SALE_REQUEST ADD CONSTRAINT LSRQ_R_LRT2_FK FOREIGN KEY
(
REQUEST_TYPE
)
REFERENCES R_LAND_REQUEST_TYPE
(
LAND_REQUEST_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSRQ_R_LRS_FK'
ALTER TABLE LAND_SALE_REQUEST ADD CONSTRAINT LSRQ_R_LRS_FK FOREIGN KEY
(
LAND_REQ_STATUS
)
REFERENCES R_LAND_REQ_STATUS
(
LAND_REQ_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSRQ_W_FK'
ALTER TABLE LAND_SALE_REQUEST ADD CONSTRAINT LSRQ_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSRQ_WLIC_FK'
ALTER TABLE LAND_SALE_REQUEST ADD CONSTRAINT LSRQ_WLIC_FK FOREIGN KEY
(
UWI,
WELL_SOURCE,
WELL_LICENSE_ID
)
REFERENCES WELL_LICENSE
(
UWI,
SOURCE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSOR_LSO_FK'
ALTER TABLE LAND_SALE_RESTRICTION ADD CONSTRAINT LSOR_LSO_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID
)
REFERENCES LAND_SALE_OFFERING
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSOR_REST_FK'
ALTER TABLE LAND_SALE_RESTRICTION ADD CONSTRAINT LSOR_REST_FK FOREIGN KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION
)
REFERENCES RESTRICTION
(
RESTRICTION_ID,
RESTRICTION_VERSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSRR_LSOR_FK'
ALTER TABLE LAND_SALE_REST_REMARK ADD CONSTRAINT LSRR_LSOR_FK FOREIGN KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION,
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID
)
REFERENCES LAND_SALE_RESTRICTION
(
RESTRICTION_ID,
RESTRICTION_VERSION,
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSRR_R_RR_FK'
ALTER TABLE LAND_SALE_REST_REMARK ADD CONSTRAINT LSRR_R_RR_FK FOREIGN KEY
(
RESTRICTION_REMARK_TYPE
)
REFERENCES R_REST_REMARK
(
RESTRICTION_REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSWB_LSOB_FK'
ALTER TABLE LAND_SALE_WORK_BID ADD CONSTRAINT LSWB_LSOB_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID,
LAND_OFFERING_BID_ID
)
REFERENCES LAND_SALE_BID
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID,
LAND_OFFERING_BID_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LSWB_R_WBT_FK'
ALTER TABLE LAND_SALE_WORK_BID ADD CONSTRAINT LSWB_R_WBT_FK FOREIGN KEY
(
WORK_BID_TYPE
)
REFERENCES R_WORK_BID_TYPE
(
WORK_BID_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRSZ_INTP_FK'
ALTER TABLE LAND_SIZE ADD CONSTRAINT LRSZ_INTP_FK FOREIGN KEY
(
PARTNER_OBS_NO,
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO,
BUSINESS_ASSOCIATE_ID
)
REFERENCES INT_SET_PARTNER
(
PARTNER_OBS_NO,
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO,
PARTNER_BA_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRSZ_LR_FK'
ALTER TABLE LAND_SIZE ADD CONSTRAINT LRSZ_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRSZ_R_LST2_FK'
ALTER TABLE LAND_SIZE ADD CONSTRAINT LRSZ_R_LST2_FK FOREIGN KEY
(
SIZE_TYPE
)
REFERENCES R_LR_SIZE_TYPE
(
SIZE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRST_LR_FK'
ALTER TABLE LAND_STATUS ADD CONSTRAINT LRST_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRST_R_LRS1_FK'
ALTER TABLE LAND_STATUS ADD CONSTRAINT LRST_R_LRS1_FK FOREIGN KEY
(
STATUS_TYPE,
LAND_RIGHT_STATUS
)
REFERENCES R_LAND_RIGHT_STATUS
(
STATUS_TYPE,
LAND_RIGHT_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRTM_BA_FK'
ALTER TABLE LAND_TERMINATION ADD CONSTRAINT LRTM_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRTM_LR_FK'
ALTER TABLE LAND_TERMINATION ADD CONSTRAINT LRTM_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRTM_LSO_FK'
ALTER TABLE LAND_TERMINATION ADD CONSTRAINT LRTM_LSO_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID
)
REFERENCES LAND_SALE_OFFERING
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRTM_LSRQ_FK'
ALTER TABLE LAND_TERMINATION ADD CONSTRAINT LRTM_LSRQ_FK FOREIGN KEY
(
LAND_REQUEST_ID
)
REFERENCES LAND_SALE_REQUEST
(
LAND_REQUEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRTM_NOTI_FK'
ALTER TABLE LAND_TERMINATION ADD CONSTRAINT LRTM_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRTM_R_LTR_FK'
ALTER TABLE LAND_TERMINATION ADD CONSTRAINT LRTM_R_LTR_FK FOREIGN KEY
(
TERMINATION_REQMT
)
REFERENCES R_LR_TERMIN_REQMT
(
TERMINATION_REQMT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRTM_R_LTT1_FK'
ALTER TABLE LAND_TERMINATION ADD CONSTRAINT LRTM_R_LTT1_FK FOREIGN KEY
(
TERMINATION_TYPE
)
REFERENCES R_LR_TERMIN_TYPE
(
TERMINATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRTM_SPD_FK'
ALTER TABLE LAND_TERMINATION ADD CONSTRAINT LRTM_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRTM_SPMZ_FK'
ALTER TABLE LAND_TERMINATION ADD CONSTRAINT LRTM_SPMZ_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO,
MINERAL_ZONE_ID
)
REFERENCES SP_MINERAL_ZONE
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO,
MINERAL_ZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRT_LR_FK'
ALTER TABLE LAND_TITLE ADD CONSTRAINT LRT_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRT_R_LTCR_FK'
ALTER TABLE LAND_TITLE ADD CONSTRAINT LRT_R_LTCR_FK FOREIGN KEY
(
TITLE_CHANGE_REASON
)
REFERENCES R_LAND_TITLE_CHG_RSN
(
LAND_TITLE_CHANGE_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRT_R_LTT2_FK'
ALTER TABLE LAND_TITLE ADD CONSTRAINT LRT_R_LTT2_FK FOREIGN KEY
(
TITLE_TYPE
)
REFERENCES R_LAND_TITLE_TYPE
(
LAND_TITLE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRTF_LRUT_FK'
ALTER TABLE LAND_TRACT_FACTOR ADD CONSTRAINT LRTF_LRUT_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_UNIT_TRACT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRTF_SUB_FK'
ALTER TABLE LAND_TRACT_FACTOR ADD CONSTRAINT LRTF_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRU_LR_FK'
ALTER TABLE LAND_UNIT ADD CONSTRAINT LRU_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRU_R_LUT1_FK'
ALTER TABLE LAND_UNIT ADD CONSTRAINT LRU_R_LUT1_FK FOREIGN KEY
(
LAND_UNIT_TYPE
)
REFERENCES R_LAND_UNIT_TYPE
(
LAND_UNIT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRUT_LR_FK'
ALTER TABLE LAND_UNIT_TRACT ADD CONSTRAINT LRUT_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRUT_R_LTT3_FK'
ALTER TABLE LAND_UNIT_TRACT ADD CONSTRAINT LRUT_R_LTT3_FK FOREIGN KEY
(
LAND_TRACT_TYPE
)
REFERENCES R_LAND_TRACT_TYPE
(
LAND_TRACT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRX_LR_FK'
ALTER TABLE LAND_XREF ADD CONSTRAINT LRX_LR_FK FOREIGN KEY
(
PARENT_LAND_RIGHT_SUBTYPE,
PARENT_LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRX_LR_FK2'
ALTER TABLE LAND_XREF ADD CONSTRAINT LRX_LR_FK2 FOREIGN KEY
(
CHILD_LAND_RIGHT_SUBTYPE,
CHILD_LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LRX_R_LXT_FK'
ALTER TABLE LAND_XREF ADD CONSTRAINT LRX_R_LXT_FK FOREIGN KEY
(
LAND_XREF_TYPE
)
REFERENCES R_LR_XREF_TYPE
(
LR_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LECTR_CS_FK'
ALTER TABLE LEGAL_CARTER_LOC ADD CONSTRAINT LECTR_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LECTR_LELA_FK'
ALTER TABLE LEGAL_CARTER_LOC ADD CONSTRAINT LECTR_LELA_FK FOREIGN KEY
(
LEGAL_CARTER_LOC_ID,
LOCATION_TYPE,
AREA_ID,
AREA_TYPE
)
REFERENCES LEGAL_LOC_AREA
(
LEGAL_LOC_ID,
LOCATION_TYPE,
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LECTR_R_ED_FK'
ALTER TABLE LEGAL_CARTER_LOC ADD CONSTRAINT LECTR_R_ED_FK FOREIGN KEY
(
EW_DIRECTION
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LECTR_R_ESL_FK'
ALTER TABLE LEGAL_CARTER_LOC ADD CONSTRAINT LECTR_R_ESL_FK FOREIGN KEY
(
EW_START_LINE
)
REFERENCES R_EW_START_LINE
(
EW_START_LINE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LECTR_R_FO_FK'
ALTER TABLE LEGAL_CARTER_LOC ADD CONSTRAINT LECTR_R_FO_FK FOREIGN KEY
(
FOOTAGE_ORIGIN
)
REFERENCES R_FOOTAGE_ORIGIN
(
FOOTAGE_ORIGIN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LECTR_R_LT1_FK'
ALTER TABLE LEGAL_CARTER_LOC ADD CONSTRAINT LECTR_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LECTR_R_ND_FK'
ALTER TABLE LEGAL_CARTER_LOC ADD CONSTRAINT LECTR_R_ND_FK FOREIGN KEY
(
NS_DIRECTION
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LECTR_R_NSL_FK'
ALTER TABLE LEGAL_CARTER_LOC ADD CONSTRAINT LECTR_R_NSL_FK FOREIGN KEY
(
NS_START_LINE
)
REFERENCES R_NS_START_LINE
(
NS_START_LINE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LECTR_W_FK'
ALTER TABLE LEGAL_CARTER_LOC ADD CONSTRAINT LECTR_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LECTR_WN_FK'
ALTER TABLE LEGAL_CARTER_LOC ADD CONSTRAINT LECTR_WN_FK FOREIGN KEY
(
WELL_NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LECON_CS_FK'
ALTER TABLE LEGAL_CONGRESS_LOC ADD CONSTRAINT LECON_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LECON_CSPME_FK'
ALTER TABLE LEGAL_CONGRESS_LOC ADD CONSTRAINT LECON_CSPME_FK FOREIGN KEY
(
PRINCIPAL_MERIDIAN
)
REFERENCES CS_PRINCIPAL_MERIDIAN
(
PRINCIPAL_MERIDIAN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LECON_LELA_FK'
ALTER TABLE LEGAL_CONGRESS_LOC ADD CONSTRAINT LECON_LELA_FK FOREIGN KEY
(
LEGAL_CONGRESS_LOC_ID,
LOCATION_TYPE,
AREA_ID,
AREA_TYPE
)
REFERENCES LEGAL_LOC_AREA
(
LEGAL_LOC_ID,
LOCATION_TYPE,
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LECON_R_ED_FK'
ALTER TABLE LEGAL_CONGRESS_LOC ADD CONSTRAINT LECON_R_ED_FK FOREIGN KEY
(
EW_DIRECTION
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LECON_R_ESL_FK'
ALTER TABLE LEGAL_CONGRESS_LOC ADD CONSTRAINT LECON_R_ESL_FK FOREIGN KEY
(
EW_START_LINE
)
REFERENCES R_EW_START_LINE
(
EW_START_LINE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LECON_R_FO_FK'
ALTER TABLE LEGAL_CONGRESS_LOC ADD CONSTRAINT LECON_R_FO_FK FOREIGN KEY
(
FOOTAGE_ORIGIN
)
REFERENCES R_FOOTAGE_ORIGIN
(
FOOTAGE_ORIGIN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LECON_R_LT1_FK'
ALTER TABLE LEGAL_CONGRESS_LOC ADD CONSTRAINT LECON_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LECON_R_ND_FK'
ALTER TABLE LEGAL_CONGRESS_LOC ADD CONSTRAINT LECON_R_ND_FK FOREIGN KEY
(
NS_DIRECTION
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LECON_R_NSL_FK'
ALTER TABLE LEGAL_CONGRESS_LOC ADD CONSTRAINT LECON_R_NSL_FK FOREIGN KEY
(
NS_START_LINE
)
REFERENCES R_NS_START_LINE
(
NS_START_LINE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LECON_R_ST3_FK'
ALTER TABLE LEGAL_CONGRESS_LOC ADD CONSTRAINT LECON_R_ST3_FK FOREIGN KEY
(
SECTION_TYPE
)
REFERENCES R_SECTION_TYPE
(
SECTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LECON_W_FK'
ALTER TABLE LEGAL_CONGRESS_LOC ADD CONSTRAINT LECON_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LECON_WN_FK'
ALTER TABLE LEGAL_CONGRESS_LOC ADD CONSTRAINT LECON_WN_FK FOREIGN KEY
(
WELL_NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEDLS_CS_FK'
ALTER TABLE LEGAL_DLS_LOC ADD CONSTRAINT LEDLS_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEDLS_R_LT1_FK'
ALTER TABLE LEGAL_DLS_LOC ADD CONSTRAINT LEDLS_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEDLS_W_FK'
ALTER TABLE LEGAL_DLS_LOC ADD CONSTRAINT LEDLS_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEDLS_WN_FK'
ALTER TABLE LEGAL_DLS_LOC ADD CONSTRAINT LEDLS_WN_FK FOREIGN KEY
(
WELL_NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEFPS_CS_FK'
ALTER TABLE LEGAL_FPS_LOC ADD CONSTRAINT LEFPS_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEFPS_R_LT1_FK'
ALTER TABLE LEGAL_FPS_LOC ADD CONSTRAINT LEFPS_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEFPS_W_FK'
ALTER TABLE LEGAL_FPS_LOC ADD CONSTRAINT LEFPS_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEFPS_WN_FK'
ALTER TABLE LEGAL_FPS_LOC ADD CONSTRAINT LEFPS_WN_FK FOREIGN KEY
(
WELL_NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEGEO_CS_FK'
ALTER TABLE LEGAL_GEODETIC_LOC ADD CONSTRAINT LEGEO_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEGEO_R_LT1_FK'
ALTER TABLE LEGAL_GEODETIC_LOC ADD CONSTRAINT LEGEO_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEGEO_W_FK'
ALTER TABLE LEGAL_GEODETIC_LOC ADD CONSTRAINT LEGEO_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEGEO_WN_FK'
ALTER TABLE LEGAL_GEODETIC_LOC ADD CONSTRAINT LEGEO_WN_FK FOREIGN KEY
(
NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LELA_A_FK'
ALTER TABLE LEGAL_LOC_AREA ADD CONSTRAINT LELA_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LELA_R_LT1_FK'
ALTER TABLE LEGAL_LOC_AREA ADD CONSTRAINT LELA_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LELR_LECTR_FK'
ALTER TABLE LEGAL_LOC_REMARK ADD CONSTRAINT LELR_LECTR_FK FOREIGN KEY
(
LEGAL_CARTER_LOC_ID,
LOCATION_TYPE,
SOURCE
)
REFERENCES LEGAL_CARTER_LOC
(
LEGAL_CARTER_LOC_ID,
LOCATION_TYPE,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LELR_LECON_FK'
ALTER TABLE LEGAL_LOC_REMARK ADD CONSTRAINT LELR_LECON_FK FOREIGN KEY
(
LEGAL_CONGRESS_LOC_ID,
LOCATION_TYPE,
SOURCE
)
REFERENCES LEGAL_CONGRESS_LOC
(
LEGAL_CONGRESS_LOC_ID,
LOCATION_TYPE,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LELR_LEDLS_FK'
ALTER TABLE LEGAL_LOC_REMARK ADD CONSTRAINT LELR_LEDLS_FK FOREIGN KEY
(
LEGAL_DLS_LOC_ID,
LOCATION_TYPE,
SOURCE
)
REFERENCES LEGAL_DLS_LOC
(
LEGAL_DLS_LOC_ID,
LOCATION_TYPE,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LELR_LEFPS_FK'
ALTER TABLE LEGAL_LOC_REMARK ADD CONSTRAINT LELR_LEFPS_FK FOREIGN KEY
(
LEGAL_FPS_LOC_ID,
LOCATION_TYPE,
SOURCE
)
REFERENCES LEGAL_FPS_LOC
(
LEGAL_FPS_LOC_ID,
LOCATION_TYPE,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LELR_LEGEO_FK'
ALTER TABLE LEGAL_LOC_REMARK ADD CONSTRAINT LELR_LEGEO_FK FOREIGN KEY
(
LEGAL_GEODETIC_LOC_ID,
LOCATION_TYPE,
SOURCE
)
REFERENCES LEGAL_GEODETIC_LOC
(
LEGAL_GEODETIC_LOC_ID,
LOCATION_TYPE,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LELR_LENE_FK'
ALTER TABLE LEGAL_LOC_REMARK ADD CONSTRAINT LELR_LENE_FK FOREIGN KEY
(
LEGAL_NE_LOC_ID,
LOCATION_TYPE,
SOURCE
)
REFERENCES LEGAL_NE_LOC
(
LEGAL_NE_LOC_ID,
LOCATION_TYPE,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LELR_LENSEA_FK'
ALTER TABLE LEGAL_LOC_REMARK ADD CONSTRAINT LELR_LENSEA_FK FOREIGN KEY
(
LEGAL_NORTH_SEA_LOC_ID,
LOCATION_TYPE,
SOURCE
)
REFERENCES LEGAL_NORTH_SEA_LOC
(
LEGAL_NORTH_SEA_LOC_ID,
LOCATION_TYPE,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LELR_LENTS_FK'
ALTER TABLE LEGAL_LOC_REMARK ADD CONSTRAINT LELR_LENTS_FK FOREIGN KEY
(
LEGAL_NTS_LOC_ID,
LOCATION_TYPE,
SOURCE
)
REFERENCES LEGAL_NTS_LOC
(
LEGAL_NTS_LOC_ID,
LOCATION_TYPE,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LELR_LEOFF_FK'
ALTER TABLE LEGAL_LOC_REMARK ADD CONSTRAINT LELR_LEOFF_FK FOREIGN KEY
(
LEGAL_OFFSHORE_LOC_ID,
LOCATION_TYPE,
SOURCE
)
REFERENCES LEGAL_OFFSHORE_LOC
(
LEGAL_OFFSHORE_LOC_ID,
LOCATION_TYPE,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LELR_LEOH_FK'
ALTER TABLE LEGAL_LOC_REMARK ADD CONSTRAINT LELR_LEOH_FK FOREIGN KEY
(
LEGAL_OHIO_LOC_ID,
LOCATION_TYPE,
SOURCE
)
REFERENCES LEGAL_OHIO_LOC
(
LEGAL_OHIO_LOC_ID,
LOCATION_TYPE,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LELR_LETX_FK'
ALTER TABLE LEGAL_LOC_REMARK ADD CONSTRAINT LELR_LETX_FK FOREIGN KEY
(
LEGAL_TEXAS_LOC_ID,
LOCATION_TYPE,
SOURCE
)
REFERENCES LEGAL_TEXAS_LOC
(
LEGAL_TEXAS_LOC_ID,
LOCATION_TYPE,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LELR_R_LT1_FK'
ALTER TABLE LEGAL_LOC_REMARK ADD CONSTRAINT LELR_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LELR_R_PT_FK'
ALTER TABLE LEGAL_LOC_REMARK ADD CONSTRAINT LELR_R_PT_FK FOREIGN KEY
(
LAND_PARCEL_TYPE
)
REFERENCES R_PARCEL_TYPE
(
PARCEL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LELR_R_RT2_FK'
ALTER TABLE LEGAL_LOC_REMARK ADD CONSTRAINT LELR_R_RT2_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_REMARK_TYPE
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LELR_WN_FK'
ALTER TABLE LEGAL_LOC_REMARK ADD CONSTRAINT LELR_WN_FK FOREIGN KEY
(
WELL_NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LENE_CS_FK'
ALTER TABLE LEGAL_NE_LOC ADD CONSTRAINT LENE_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LENE_LELA_FK'
ALTER TABLE LEGAL_NE_LOC ADD CONSTRAINT LENE_LELA_FK FOREIGN KEY
(
LEGAL_NE_LOC_ID,
LOCATION_TYPE,
AREA_ID,
AREA_TYPE
)
REFERENCES LEGAL_LOC_AREA
(
LEGAL_LOC_ID,
LOCATION_TYPE,
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LENE_R_ESL_FK'
ALTER TABLE LEGAL_NE_LOC ADD CONSTRAINT LENE_R_ESL_FK FOREIGN KEY
(
EW_START_LINE
)
REFERENCES R_EW_START_LINE
(
EW_START_LINE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LENE_R_FO_FK'
ALTER TABLE LEGAL_NE_LOC ADD CONSTRAINT LENE_R_FO_FK FOREIGN KEY
(
FOOTAGE_ORIGIN
)
REFERENCES R_FOOTAGE_ORIGIN
(
FOOTAGE_ORIGIN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LENE_R_LT1_FK'
ALTER TABLE LEGAL_NE_LOC ADD CONSTRAINT LENE_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LENE_R_NSL_FK'
ALTER TABLE LEGAL_NE_LOC ADD CONSTRAINT LENE_R_NSL_FK FOREIGN KEY
(
NS_START_LINE
)
REFERENCES R_NS_START_LINE
(
NS_START_LINE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LENE_W_FK'
ALTER TABLE LEGAL_NE_LOC ADD CONSTRAINT LENE_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LENE_WN_FK'
ALTER TABLE LEGAL_NE_LOC ADD CONSTRAINT LENE_WN_FK FOREIGN KEY
(
WELL_NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LENSEA_CS_FK'
ALTER TABLE LEGAL_NORTH_SEA_LOC ADD CONSTRAINT LENSEA_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LENSEA_CSPME_FK'
ALTER TABLE LEGAL_NORTH_SEA_LOC ADD CONSTRAINT LENSEA_CSPME_FK FOREIGN KEY
(
PRINCIPAL_MERIDIAN
)
REFERENCES CS_PRINCIPAL_MERIDIAN
(
PRINCIPAL_MERIDIAN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LENSEA_R_LT1_FK'
ALTER TABLE LEGAL_NORTH_SEA_LOC ADD CONSTRAINT LENSEA_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LENSEA_W_FK'
ALTER TABLE LEGAL_NORTH_SEA_LOC ADD CONSTRAINT LENSEA_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LENSEA_WN_FK'
ALTER TABLE LEGAL_NORTH_SEA_LOC ADD CONSTRAINT LENSEA_WN_FK FOREIGN KEY
(
WELL_NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LENTS_CS_FK'
ALTER TABLE LEGAL_NTS_LOC ADD CONSTRAINT LENTS_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LENTS_R_LT1_FK'
ALTER TABLE LEGAL_NTS_LOC ADD CONSTRAINT LENTS_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LENTS_W_FK'
ALTER TABLE LEGAL_NTS_LOC ADD CONSTRAINT LENTS_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LENTS_WN_FK'
ALTER TABLE LEGAL_NTS_LOC ADD CONSTRAINT LENTS_WN_FK FOREIGN KEY
(
WELL_NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOFF_BA_FK'
ALTER TABLE LEGAL_OFFSHORE_LOC ADD CONSTRAINT LEOFF_BA_FK FOREIGN KEY
(
GOVERNING_AGENCY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOFF_CS_FK'
ALTER TABLE LEGAL_OFFSHORE_LOC ADD CONSTRAINT LEOFF_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOFF_CSPME_FK'
ALTER TABLE LEGAL_OFFSHORE_LOC ADD CONSTRAINT LEOFF_CSPME_FK FOREIGN KEY
(
PROJECTED_MERIDIAN
)
REFERENCES CS_PRINCIPAL_MERIDIAN
(
PRINCIPAL_MERIDIAN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOFF_LELA_FK'
ALTER TABLE LEGAL_OFFSHORE_LOC ADD CONSTRAINT LEOFF_LELA_FK FOREIGN KEY
(
LEGAL_OFFSHORE_LOC_ID,
LOCATION_TYPE,
AREA_ID,
AREA_TYPE
)
REFERENCES LEGAL_LOC_AREA
(
LEGAL_LOC_ID,
LOCATION_TYPE,
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOFF_R_ED_FK'
ALTER TABLE LEGAL_OFFSHORE_LOC ADD CONSTRAINT LEOFF_R_ED_FK FOREIGN KEY
(
GRID_BLOCK_EW
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOFF_R_ED_FK2'
ALTER TABLE LEGAL_OFFSHORE_LOC ADD CONSTRAINT LEOFF_R_ED_FK2 FOREIGN KEY
(
PROJECTED_EW_DIRECTION
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOFF_R_ESL_FK'
ALTER TABLE LEGAL_OFFSHORE_LOC ADD CONSTRAINT LEOFF_R_ESL_FK FOREIGN KEY
(
EW_START_LINE
)
REFERENCES R_EW_START_LINE
(
EW_START_LINE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOFF_R_FO_FK'
ALTER TABLE LEGAL_OFFSHORE_LOC ADD CONSTRAINT LEOFF_R_FO_FK FOREIGN KEY
(
FOOTAGE_ORIGIN
)
REFERENCES R_FOOTAGE_ORIGIN
(
FOOTAGE_ORIGIN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOFF_R_LT1_FK'
ALTER TABLE LEGAL_OFFSHORE_LOC ADD CONSTRAINT LEOFF_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOFF_R_ND_FK'
ALTER TABLE LEGAL_OFFSHORE_LOC ADD CONSTRAINT LEOFF_R_ND_FK FOREIGN KEY
(
GRID_BLOCK_NS
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOFF_R_ND_FK2'
ALTER TABLE LEGAL_OFFSHORE_LOC ADD CONSTRAINT LEOFF_R_ND_FK2 FOREIGN KEY
(
PROJECTED_NS_DIRECTION
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOFF_R_NSL_FK'
ALTER TABLE LEGAL_OFFSHORE_LOC ADD CONSTRAINT LEOFF_R_NSL_FK FOREIGN KEY
(
NS_START_LINE
)
REFERENCES R_NS_START_LINE
(
NS_START_LINE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOFF_R_OAC_FK'
ALTER TABLE LEGAL_OFFSHORE_LOC ADD CONSTRAINT LEOFF_R_OAC_FK FOREIGN KEY
(
OFFSHORE_AREA_CODE
)
REFERENCES R_OFFSHORE_AREA_CODE
(
OFFSHORE_AREA_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOFF_R_WBZ_FK'
ALTER TABLE LEGAL_OFFSHORE_LOC ADD CONSTRAINT LEOFF_R_WBZ_FK FOREIGN KEY
(
WATER_BOTTOM_ZONE
)
REFERENCES R_WATER_BOTTOM_ZONE
(
WATER_BOTTOM_ZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOFF_W_FK'
ALTER TABLE LEGAL_OFFSHORE_LOC ADD CONSTRAINT LEOFF_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOFF_WN_FK'
ALTER TABLE LEGAL_OFFSHORE_LOC ADD CONSTRAINT LEOFF_WN_FK FOREIGN KEY
(
WELL_NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOH_CS_FK'
ALTER TABLE LEGAL_OHIO_LOC ADD CONSTRAINT LEOH_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOH_CSPME_FK'
ALTER TABLE LEGAL_OHIO_LOC ADD CONSTRAINT LEOH_CSPME_FK FOREIGN KEY
(
PRINCIPAL_MERIDIAN
)
REFERENCES CS_PRINCIPAL_MERIDIAN
(
PRINCIPAL_MERIDIAN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOH_LELA_FK'
ALTER TABLE LEGAL_OHIO_LOC ADD CONSTRAINT LEOH_LELA_FK FOREIGN KEY
(
LEGAL_OHIO_LOC_ID,
LOCATION_TYPE,
AREA_ID,
AREA_TYPE
)
REFERENCES LEGAL_LOC_AREA
(
LEGAL_LOC_ID,
LOCATION_TYPE,
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOH_R_ED_FK'
ALTER TABLE LEGAL_OHIO_LOC ADD CONSTRAINT LEOH_R_ED_FK FOREIGN KEY
(
OHIO_RANGE_DIR
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOH_R_ESL_FK'
ALTER TABLE LEGAL_OHIO_LOC ADD CONSTRAINT LEOH_R_ESL_FK FOREIGN KEY
(
EW_START_LINE
)
REFERENCES R_EW_START_LINE
(
EW_START_LINE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOH_R_FO_FK'
ALTER TABLE LEGAL_OHIO_LOC ADD CONSTRAINT LEOH_R_FO_FK FOREIGN KEY
(
FOOTAGE_ORIGIN
)
REFERENCES R_FOOTAGE_ORIGIN
(
FOOTAGE_ORIGIN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOH_R_LT1_FK'
ALTER TABLE LEGAL_OHIO_LOC ADD CONSTRAINT LEOH_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOH_R_ND_FK'
ALTER TABLE LEGAL_OHIO_LOC ADD CONSTRAINT LEOH_R_ND_FK FOREIGN KEY
(
OHIO_TOWNSHIP_DIR
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOH_R_NSL_FK'
ALTER TABLE LEGAL_OHIO_LOC ADD CONSTRAINT LEOH_R_NSL_FK FOREIGN KEY
(
NS_START_LINE
)
REFERENCES R_NS_START_LINE
(
NS_START_LINE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOH_W_FK'
ALTER TABLE LEGAL_OHIO_LOC ADD CONSTRAINT LEOH_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LEOH_WN_FK'
ALTER TABLE LEGAL_OHIO_LOC ADD CONSTRAINT LEOH_WN_FK FOREIGN KEY
(
WELL_NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LETX_CS_FK'
ALTER TABLE LEGAL_TEXAS_LOC ADD CONSTRAINT LETX_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LETX_LELA_FK'
ALTER TABLE LEGAL_TEXAS_LOC ADD CONSTRAINT LETX_LELA_FK FOREIGN KEY
(
LEGAL_TEXAS_LOC_ID,
LOCATION_TYPE,
AREA_ID,
AREA_TYPE
)
REFERENCES LEGAL_LOC_AREA
(
LEGAL_LOC_ID,
LOCATION_TYPE,
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LETX_R_ED_FK'
ALTER TABLE LEGAL_TEXAS_LOC ADD CONSTRAINT LETX_R_ED_FK FOREIGN KEY
(
EW_DIRECTION
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LETX_R_ESL_FK'
ALTER TABLE LEGAL_TEXAS_LOC ADD CONSTRAINT LETX_R_ESL_FK FOREIGN KEY
(
EW_START_LINE
)
REFERENCES R_EW_START_LINE
(
EW_START_LINE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LETX_R_FO_FK'
ALTER TABLE LEGAL_TEXAS_LOC ADD CONSTRAINT LETX_R_FO_FK FOREIGN KEY
(
FOOTAGE_ORIGIN
)
REFERENCES R_FOOTAGE_ORIGIN
(
FOOTAGE_ORIGIN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LETX_R_LT1_FK'
ALTER TABLE LEGAL_TEXAS_LOC ADD CONSTRAINT LETX_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LETX_R_ND_FK'
ALTER TABLE LEGAL_TEXAS_LOC ADD CONSTRAINT LETX_R_ND_FK FOREIGN KEY
(
NS_DIRECTION
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LETX_R_NSL_FK'
ALTER TABLE LEGAL_TEXAS_LOC ADD CONSTRAINT LETX_R_NSL_FK FOREIGN KEY
(
NS_START_LINE
)
REFERENCES R_NS_START_LINE
(
NS_START_LINE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LETX_W_FK'
ALTER TABLE LEGAL_TEXAS_LOC ADD CONSTRAINT LETX_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LETX_WN_FK'
ALTER TABLE LEGAL_TEXAS_LOC ADD CONSTRAINT LETX_WN_FK FOREIGN KEY
(
WELL_NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIDEI_LIL_FK'
ALTER TABLE LITH_DEP_ENV_INT ADD CONSTRAINT LIDEI_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIDEI_R_LDE_FK'
ALTER TABLE LITH_DEP_ENV_INT ADD CONSTRAINT LIDEI_R_LDE_FK FOREIGN KEY
(
DEPOSITIONAL_ENVIRONMENT
)
REFERENCES R_LITH_DEP_ENV
(
DEPOSITIONAL_ENVIRONMENT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LID_LIRT_FK'
ALTER TABLE LITH_DIAGENESIS ADD CONSTRAINT LID_LIRT_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
ROCK_TYPE,
ROCK_TYPE_OBS_NO
)
REFERENCES LITH_ROCK_TYPE
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
ROCK_TYPE,
ROCK_TYPE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LID_R_LD1_FK'
ALTER TABLE LITH_DIAGENESIS ADD CONSTRAINT LID_R_LD1_FK FOREIGN KEY
(
DIAGENESIS_TYPE
)
REFERENCES R_LITH_DIAGENESIS
(
DIAGENESIS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIGS_LIRT_FK'
ALTER TABLE LITH_GRAIN_SIZE ADD CONSTRAINT LIGS_LIRT_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
ROCK_TYPE,
ROCK_TYPE_OBS_NO
)
REFERENCES LITH_ROCK_TYPE
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
ROCK_TYPE,
ROCK_TYPE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIGS_R_LSS_FK'
ALTER TABLE LITH_GRAIN_SIZE ADD CONSTRAINT LIGS_R_LSS_FK FOREIGN KEY
(
SCALE_SCHEME
)
REFERENCES R_LITH_SCALE_SCHEME
(
SCALE_SCHEME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LII_LII_FK'
ALTER TABLE LITH_INTERVAL ADD CONSTRAINT LII_LII_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
PARENT_DEPTH_OBS_NO
)
REFERENCES LITH_INTERVAL
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LII_LIL_FK'
ALTER TABLE LITH_INTERVAL ADD CONSTRAINT LII_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LII_R_LCB_FK'
ALTER TABLE LITH_INTERVAL ADD CONSTRAINT LII_R_LCB_FK FOREIGN KEY
(
CYCLE_BED
)
REFERENCES R_LITH_CYCLE_BED
(
CYCLE_BED
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIL_LIMS_FK'
ALTER TABLE LITH_LOG ADD CONSTRAINT LIL_LIMS_FK FOREIGN KEY
(
MEAS_SECTION_ID,
MEAS_SECTION_SOURCE
)
REFERENCES LITH_MEASURED_SEC
(
MEAS_SECTION_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIL_R_LLT1_FK'
ALTER TABLE LITH_LOG ADD CONSTRAINT LIL_R_LLT1_FK FOREIGN KEY
(
LITH_LOG_TYPE
)
REFERENCES R_LITH_LOG_TYPE
(
LITH_LOG_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIL_W_FK'
ALTER TABLE LITH_LOG ADD CONSTRAINT LIL_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LITHBS_BA_FK3'
ALTER TABLE LITH_LOG_BA_SERVICE ADD CONSTRAINT LITHBS_BA_FK3 FOREIGN KEY
(
CONTACT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LITHBS_BA_FK'
ALTER TABLE LITH_LOG_BA_SERVICE ADD CONSTRAINT LITHBS_BA_FK FOREIGN KEY
(
PROVIDED_BY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LITHBS_BA_FK2'
ALTER TABLE LITH_LOG_BA_SERVICE ADD CONSTRAINT LITHBS_BA_FK2 FOREIGN KEY
(
REPRESENTED_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LITHBS_C_FK'
ALTER TABLE LITH_LOG_BA_SERVICE ADD CONSTRAINT LITHBS_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LITHBS_CP_FK'
ALTER TABLE LITH_LOG_BA_SERVICE ADD CONSTRAINT LITHBS_CP_FK FOREIGN KEY
(
CONTRACT_ID,
CONTRACT_PROVISION_ID
)
REFERENCES CONT_PROVISION
(
CONTRACT_ID,
PROVISION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LITHBS_LIL_FK'
ALTER TABLE LITH_LOG_BA_SERVICE ADD CONSTRAINT LITHBS_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LITHBS_RATE_FK'
ALTER TABLE LITH_LOG_BA_SERVICE ADD CONSTRAINT LITHBS_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LITHBS_R_BST_FK'
ALTER TABLE LITH_LOG_BA_SERVICE ADD CONSTRAINT LITHBS_R_BST_FK FOREIGN KEY
(
BA_SERVICE_TYPE
)
REFERENCES R_BA_SERVICE_TYPE
(
BA_SERVICE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LITHBS_R_SQ_FK'
ALTER TABLE LITH_LOG_BA_SERVICE ADD CONSTRAINT LITHBS_R_SQ_FK FOREIGN KEY
(
SERVICE_QUALITY
)
REFERENCES R_SERVICE_QUALITY
(
SERVICE_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_ANLR_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_APP_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_A_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_BAAU_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_BAE_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_BAO_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_BA_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_CA_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_CEQ_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_CLSL_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_CON_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_CO_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_COT_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_C_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_EZ_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_ENT_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_EQ_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_FAC_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_FLD_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_FIN_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_FOS_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_HI_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_INS_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_INT_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_LR_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_LS_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_LIL_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_NOTI_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_OB_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_PASU_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_PDE_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_PL_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_PSWA_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_PSYS_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_PT_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_PS_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_PS_FK FOREIGN KEY
(
PR_STR_UWI,
PR_STR_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_PROJ_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_RATE_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_RSCL_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_RSE_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_RMDSS_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_RMII_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_RMPI_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_RMTW_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_R_LLCT_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_R_LLCT_FK FOREIGN KEY
(
LITH_LOG_COMPONENT_TYPE
)
REFERENCES R_LITH_LOG_COMP_TYPE
(
LITH_LOG_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_SS_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_SF_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_SPD_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_STFST_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_STU_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_SUB_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_W_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_WAC_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_WAC_FK FOREIGN KEY
(
WELL_ACTIVITY_UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_WSET_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILC_WO_FK'
ALTER TABLE LITH_LOG_COMPONENT ADD CONSTRAINT LILC_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILR_BA_FK'
ALTER TABLE LITH_LOG_REMARK ADD CONSTRAINT LILR_BA_FK FOREIGN KEY
(
REMARK_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LILR_LIL_FK'
ALTER TABLE LITH_LOG_REMARK ADD CONSTRAINT LILR_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIMS_SRCD_FK'
ALTER TABLE LITH_MEASURED_SEC ADD CONSTRAINT LIMS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIMS_STU_FK'
ALTER TABLE LITH_MEASURED_SEC ADD CONSTRAINT LIMS_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIMS_WN_FK'
ALTER TABLE LITH_MEASURED_SEC ADD CONSTRAINT LIMS_WN_FK FOREIGN KEY
(
NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIP_LIRT_FK'
ALTER TABLE LITH_POROSITY ADD CONSTRAINT LIP_LIRT_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
ROCK_TYPE,
ROCK_TYPE_OBS_NO
)
REFERENCES LITH_ROCK_TYPE
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
ROCK_TYPE,
ROCK_TYPE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIP_R_PORT_FK'
ALTER TABLE LITH_POROSITY ADD CONSTRAINT LIP_R_PORT_FK FOREIGN KEY
(
POROSITY_TYPE
)
REFERENCES R_POROSITY_TYPE
(
POROSITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIR_LIRT_FK'
ALTER TABLE LITH_ROCKPART ADD CONSTRAINT LIR_LIRT_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
ROCK_TYPE,
ROCK_TYPE_OBS_NO
)
REFERENCES LITH_ROCK_TYPE
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
ROCK_TYPE,
ROCK_TYPE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIR_R_LPC_FK'
ALTER TABLE LITH_ROCKPART ADD CONSTRAINT LIR_R_LPC_FK FOREIGN KEY
(
LITH_PATTERN_CODE
)
REFERENCES R_LITH_PATTERN_CODE
(
LITH_PATTERN_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIR_R_LR1_FK'
ALTER TABLE LITH_ROCKPART ADD CONSTRAINT LIR_R_LR1_FK FOREIGN KEY
(
ROCKPART_TYPE
)
REFERENCES R_LITH_ROCKPART
(
ROCKPART_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRPC_LIR_FK'
ALTER TABLE LITH_ROCKPART_COLOR ADD CONSTRAINT LIRPC_LIR_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
ROCK_TYPE,
ROCK_TYPE_OBS_NO,
ROCKPART_NAME
)
REFERENCES LITH_ROCKPART
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
ROCK_TYPE,
ROCK_TYPE_OBS_NO,
ROCKPART_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRPC_R_LC_FK'
ALTER TABLE LITH_ROCKPART_COLOR ADD CONSTRAINT LIRPC_R_LC_FK FOREIGN KEY
(
COLOR_ADJECTIVE
)
REFERENCES R_LITH_COLOR
(
COLOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRPC_R_LC_FK2'
ALTER TABLE LITH_ROCKPART_COLOR ADD CONSTRAINT LIRPC_R_LC_FK2 FOREIGN KEY
(
BASIC_COLOR
)
REFERENCES R_LITH_COLOR
(
COLOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRPC_R_LD2_FK'
ALTER TABLE LITH_ROCKPART_COLOR ADD CONSTRAINT LIRPC_R_LD2_FK FOREIGN KEY
(
COLOR_DISTRIBUTION
)
REFERENCES R_LITH_DISTRIBUTION
(
DISTRIBUTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRPC_R_LI_FK'
ALTER TABLE LITH_ROCKPART_COLOR ADD CONSTRAINT LIRPC_R_LI_FK FOREIGN KEY
(
INTENSITY
)
REFERENCES R_LITH_INTENSITY
(
INTENSITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRGS_LIR_FK'
ALTER TABLE LITH_ROCKPART_GRAIN_SIZE ADD CONSTRAINT LIRGS_LIR_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
ROCK_TYPE,
ROCK_TYPE_OBS_NO,
ROCKPART_NAME
)
REFERENCES LITH_ROCKPART
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
ROCK_TYPE,
ROCK_TYPE_OBS_NO,
ROCKPART_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRGS_R_LSS_FK'
ALTER TABLE LITH_ROCKPART_GRAIN_SIZE ADD CONSTRAINT LIRGS_R_LSS_FK FOREIGN KEY
(
SCALE_SCHEME
)
REFERENCES R_LITH_SCALE_SCHEME
(
SCALE_SCHEME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRC_LIRT_FK'
ALTER TABLE LITH_ROCK_COLOR ADD CONSTRAINT LIRC_LIRT_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
ROCK_TYPE,
ROCK_TYPE_OBS_NO
)
REFERENCES LITH_ROCK_TYPE
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
ROCK_TYPE,
ROCK_TYPE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRC_R_LC_FK'
ALTER TABLE LITH_ROCK_COLOR ADD CONSTRAINT LIRC_R_LC_FK FOREIGN KEY
(
BASIC_COLOR
)
REFERENCES R_LITH_COLOR
(
COLOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRC_R_LC_FK2'
ALTER TABLE LITH_ROCK_COLOR ADD CONSTRAINT LIRC_R_LC_FK2 FOREIGN KEY
(
COLOR_ADJECTIVE
)
REFERENCES R_LITH_COLOR
(
COLOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRC_R_LD2_FK'
ALTER TABLE LITH_ROCK_COLOR ADD CONSTRAINT LIRC_R_LD2_FK FOREIGN KEY
(
COLOR_DISTRIBUTION
)
REFERENCES R_LITH_DISTRIBUTION
(
DISTRIBUTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRC_R_LI_FK'
ALTER TABLE LITH_ROCK_COLOR ADD CONSTRAINT LIRC_R_LI_FK FOREIGN KEY
(
INTENSITY
)
REFERENCES R_LITH_INTENSITY
(
INTENSITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRS_LIRT_FK'
ALTER TABLE LITH_ROCK_STRUCTURE ADD CONSTRAINT LIRS_LIRT_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
ROCK_TYPE,
ROCK_TYPE_OBS_NO
)
REFERENCES LITH_ROCK_TYPE
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO,
ROCK_TYPE,
ROCK_TYPE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRS_R_LS1_FK'
ALTER TABLE LITH_ROCK_STRUCTURE ADD CONSTRAINT LIRS_R_LS1_FK FOREIGN KEY
(
STRUCTURE_TYPE
)
REFERENCES R_LITH_STRUCTURE
(
STRUCTURE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRT_LII_FK'
ALTER TABLE LITH_ROCK_TYPE ADD CONSTRAINT LIRT_LII_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO
)
REFERENCES LITH_INTERVAL
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRT_R_LC_FK'
ALTER TABLE LITH_ROCK_TYPE ADD CONSTRAINT LIRT_R_LC_FK FOREIGN KEY
(
RESIDUE_COLOR
)
REFERENCES R_LITH_COLOR
(
COLOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRT_R_L2_FK'
ALTER TABLE LITH_ROCK_TYPE ADD CONSTRAINT LIRT_R_L2_FK FOREIGN KEY
(
CONSOLIDATION
)
REFERENCES R_LITH_CONSOLIDATION
(
CONSOLIDATION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRT_R_LOS1_FK'
ALTER TABLE LITH_ROCK_TYPE ADD CONSTRAINT LIRT_R_LOS1_FK FOREIGN KEY
(
OIL_STAIN
)
REFERENCES R_LITH_OIL_STAIN
(
OIL_STAIN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRT_R_LRM_FK'
ALTER TABLE LITH_ROCK_TYPE ADD CONSTRAINT LIRT_R_LRM_FK FOREIGN KEY
(
ROCK_MATRIX
)
REFERENCES R_LITH_ROCK_MATRIX
(
ROCK_MATRIX
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRT_R_LRP_FK'
ALTER TABLE LITH_ROCK_TYPE ADD CONSTRAINT LIRT_R_LRP_FK FOREIGN KEY
(
ROCK_PROFILE
)
REFERENCES R_LITH_ROCK_PROFILE
(
ROCK_PROFILE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRT_R_LRT1_FK'
ALTER TABLE LITH_ROCK_TYPE ADD CONSTRAINT LIRT_R_LRT1_FK FOREIGN KEY
(
ROCK_TYPE
)
REFERENCES R_LITH_ROCK_TYPE
(
ROCK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRT_R_LR_FK'
ALTER TABLE LITH_ROCK_TYPE ADD CONSTRAINT LIRT_R_LR_FK FOREIGN KEY
(
ROUNDING
)
REFERENCES R_LITH_ROUNDING
(
ROUNDING
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRT_R_LS_FK'
ALTER TABLE LITH_ROCK_TYPE ADD CONSTRAINT LIRT_R_LS_FK FOREIGN KEY
(
SORTING
)
REFERENCES R_LITH_SORTING
(
SORTING
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRT_R_MLC_FK'
ALTER TABLE LITH_ROCK_TYPE ADD CONSTRAINT LIRT_R_MLC_FK FOREIGN KEY
(
FLUORESCENCE_COLOR
)
REFERENCES R_MUD_LOG_COLOR
(
MUD_LOG_COLOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRT_R_MLC_FK2'
ALTER TABLE LITH_ROCK_TYPE ADD CONSTRAINT LIRT_R_MLC_FK2 FOREIGN KEY
(
CUT_COLOR
)
REFERENCES R_MUD_LOG_COLOR
(
MUD_LOG_COLOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIRT_R_RCS_FK'
ALTER TABLE LITH_ROCK_TYPE ADD CONSTRAINT LIRT_R_RCS_FK FOREIGN KEY
(
ROCK_CLASS_SCHEME
)
REFERENCES R_ROCK_CLASS_SCHEME
(
ROCK_CLASS_SCHEME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIS_LII_FK'
ALTER TABLE LITH_STRUCTURE ADD CONSTRAINT LIS_LII_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO
)
REFERENCES LITH_INTERVAL
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE,
DEPTH_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIS_R_LA_FK'
ALTER TABLE LITH_STRUCTURE ADD CONSTRAINT LIS_R_LA_FK FOREIGN KEY
(
STRUCTURE_REL_ABUND
)
REFERENCES R_LITH_ABUNDANCE
(
ABUNDANCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIS_R_LBT2_FK'
ALTER TABLE LITH_STRUCTURE ADD CONSTRAINT LIS_R_LBT2_FK FOREIGN KEY
(
BOUNDARY_TYPE
)
REFERENCES R_LITH_BOUNDARY_TYPE
(
BOUNDARY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT LIS_R_LS1_FK'
ALTER TABLE LITH_STRUCTURE ADD CONSTRAINT LIS_R_LS1_FK FOREIGN KEY
(
STRUCTURE_TYPE
)
REFERENCES R_LITH_STRUCTURE
(
STRUCTURE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTI_BA_FK'
ALTER TABLE NOTIFICATION ADD CONSTRAINT NOTI_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTI_LR_FK'
ALTER TABLE NOTIFICATION ADD CONSTRAINT NOTI_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTI_OB_FK'
ALTER TABLE NOTIFICATION ADD CONSTRAINT NOTI_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTI_R_NT_FK'
ALTER TABLE NOTIFICATION ADD CONSTRAINT NOTI_R_NT_FK FOREIGN KEY
(
NOTIFICATION_TYPE
)
REFERENCES R_NOTIFICATION_TYPE
(
NOTIFICATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_ANLR_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_APP_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_A_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_BAAU_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_BAE_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_BAO_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_BA_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_CA_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_CEQ_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_CLSL_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_CON_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_CO_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_COT_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_C_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_EZ_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_ENT_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_EQ_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_FAC_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_FLD_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_FIN_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_FOS_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_HI_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_INS_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_INT_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_LR_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_LS_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_LIL_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_NOTI_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_OB_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_PASU_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_PDE_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_PL_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_PSWA_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_PSYS_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_PT_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_PS_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_PS_FK FOREIGN KEY
(
PR_STR_UWI,
PR_STR_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_PROJ_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_RATE_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_RSCL_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_RSE_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_RMDSS_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_RMII_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_RMPI_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_RMTW_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_R_NCT_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_R_NCT_FK FOREIGN KEY
(
NOTIFICATION_COMPONENT_TYPE
)
REFERENCES R_NOTIFICATION_COMP_TYPE
(
NOTIFICATION_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_SS_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_SF_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_SPD_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_STFST_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_STU_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_SUB_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_W_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_WAC_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_WAC_FK FOREIGN KEY
(
WELL_ACTIVITY_UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_WSET_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTC_WO_FK'
ALTER TABLE NOTIFICATION_COMPONENT ADD CONSTRAINT NOTC_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTB_BA_FK'
ALTER TABLE NOTIF_BA ADD CONSTRAINT NOTB_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT NOTB_NOTI_FK'
ALTER TABLE NOTIF_BA ADD CONSTRAINT NOTB_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OB_BA_FK'
ALTER TABLE OBLIGATION ADD CONSTRAINT OB_BA_FK FOREIGN KEY
(
RESP_PARTY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OB_BA_FK2'
ALTER TABLE OBLIGATION ADD CONSTRAINT OB_BA_FK2 FOREIGN KEY
(
ROYALTY_PAYOR_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OB_BA_FK3'
ALTER TABLE OBLIGATION ADD CONSTRAINT OB_BA_FK3 FOREIGN KEY
(
ROYALTY_OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OB_INS_FK'
ALTER TABLE OBLIGATION ADD CONSTRAINT OB_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OB_R_OCM_FK'
ALTER TABLE OBLIGATION ADD CONSTRAINT OB_R_OCM_FK FOREIGN KEY
(
CALCULATION_METHOD
)
REFERENCES R_OBLIG_CALC_METHOD
(
CALCULATION_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OB_R_OC_FK'
ALTER TABLE OBLIGATION ADD CONSTRAINT OB_R_OC_FK FOREIGN KEY
(
OBLIGATION_CATEGORY
)
REFERENCES R_OBLIG_CATEGORY
(
LAND_OBLIG_CATEGORY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OB_R_OPR_FK'
ALTER TABLE OBLIGATION ADD CONSTRAINT OB_R_OPR_FK FOREIGN KEY
(
PAYMENT_RESPONSIBILITY
)
REFERENCES R_OBLIG_PAY_RESP
(
PAYMENT_RESPONSIBILITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OB_R_OT1_FK'
ALTER TABLE OBLIGATION ADD CONSTRAINT OB_R_OT1_FK FOREIGN KEY
(
TRIGGER_METHOD
)
REFERENCES R_OBLIG_TRIGGER
(
TRIGGER_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OB_R_OT_FK'
ALTER TABLE OBLIGATION ADD CONSTRAINT OB_R_OT_FK FOREIGN KEY
(
OBLIGATION_TYPE
)
REFERENCES R_OBLIG_TYPE
(
LAND_OBLIG_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OB_R_RT5_FK'
ALTER TABLE OBLIGATION ADD CONSTRAINT OB_R_RT5_FK FOREIGN KEY
(
ROYALTY_TYPE
)
REFERENCES R_ROYALTY_TYPE
(
ROYALTY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OB_SUB_FK'
ALTER TABLE OBLIGATION ADD CONSTRAINT OB_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_ANLR_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_APP_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_A_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_BAAU_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_BACS_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_BACS_FK FOREIGN KEY
(
BA_SERVICE_BA_ID,
BA_SERVICE_PROVIDER,
BA_SERVICE_SEQ_NO
)
REFERENCES BA_CONSORTIUM_SERVICE
(
CONSORTIUM_BA_ID,
PROVIDED_BY,
SERVICE_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_BAE_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_BALIC_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_BALIC_FK FOREIGN KEY
(
BA_LICENSEE_BA_ID,
BA_LICENSE_ID
)
REFERENCES BA_LICENSE
(
LICENSEE_BA_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_BAO_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_BA_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_CA_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_CEQ_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_CLSL_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_CON_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_CO_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_COT_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_C_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_CBS_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_CBS_FK FOREIGN KEY
(
CONTRACT_ID,
CONT_SERVICE_BA_ID,
CONT_SERVICE_SEQ_NO
)
REFERENCES CONT_BA_SERVICE
(
CONTRACT_ID,
PROVIDED_BY,
SERVICE_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_CEX_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_CEX_FK FOREIGN KEY
(
CONTRACT_ID,
CONTRACT_EXTENSION_ID
)
REFERENCES CONT_EXTENSION
(
CONTRACT_ID,
EXTENSION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_CP_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_CP_FK FOREIGN KEY
(
CONTRACT_ID,
CONTRACT_PROVISION_ID
)
REFERENCES CONT_PROVISION
(
CONTRACT_ID,
PROVISION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_EZ_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_ENT_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_EQ_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_FAC_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_FACBS_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_FACBS_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE,
FACILITY_SERVICE_BA_ID,
FACILITY_SERVICE_SEQ_NO
)
REFERENCES FACILITY_BA_SERVICE
(
FACILITY_ID,
FACILITY_TYPE,
PROVIDED_BY,
SERVICE_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_FACL_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_FACL_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE,
FACILITY_LICENSE_ID
)
REFERENCES FACILITY_LICENSE
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_FLD_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_FIN_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_FOS_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_HI_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_HI_FK FOREIGN KEY
(
HSE_INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_INS_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_INT_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_LRBS_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_LRBS_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
LAND_SERVICE_PROVIDED_BY,
LAND_SERVICE_SEQ_NO
)
REFERENCES LAND_BA_SERVICE
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
PROVIDED_BY,
SERVICE_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_LR_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_LS_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_LS_FK FOREIGN KEY
(
LAND_SALE_JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_LSOB_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_LSOB_FK FOREIGN KEY
(
LAND_SALE_JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID,
LAND_OFFERING_BID_ID
)
REFERENCES LAND_SALE_BID
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID,
LAND_OFFERING_BID_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_LSBS1_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_LSBS1_FK FOREIGN KEY
(
LAND_SALE_BID_SET_ID
)
REFERENCES LAND_SALE_BID_SET
(
LAND_SALE_BID_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_LSRQ_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_LSRQ_FK FOREIGN KEY
(
LAND_REQUEST_ID
)
REFERENCES LAND_SALE_REQUEST
(
LAND_REQUEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_LRTM_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_LRTM_FK FOREIGN KEY
(
LR_TERMINATION_ID,
LR_TERMINATION_SEQ_NO
)
REFERENCES LAND_TERMINATION
(
LR_TERMINATION_ID,
LR_TERMINATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_LIL_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_NOTI_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_OB_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_PASU_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_PDE_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_PL_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_PSWA_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_PSYS_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_PT_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_PS_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_PROJ_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_RATE_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_RSCL_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_RSE_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_RMDSS_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_RMII_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_RMPI_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_RMTW_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_R_OCM_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_R_OCM_FK FOREIGN KEY
(
CALCULATION_METHOD
)
REFERENCES R_OBLIG_CALC_METHOD
(
CALCULATION_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_R_OCT2_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_R_OCT2_FK FOREIGN KEY
(
OBLIGATION_COMPONENT_TYPE
)
REFERENCES R_OBLIG_COMPONENT_TYPE
(
OBLIGATION_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_R_OCR_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_R_OCR_FK FOREIGN KEY
(
COMPONENT_REASON
)
REFERENCES R_OBLIG_COMP_REASON
(
COMPONENT_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_SSBS_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_SSBS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_SERVICE_BA_ID,
SEIS_SERVICE_SEQ_NO
)
REFERENCES SEIS_BA_SERVICE
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
PROVIDED_BY,
SERVICE_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_SLIC_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_SLIC_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_LICENSE_ID
)
REFERENCES SEIS_LICENSE
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_SSPF_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_SSPF_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_POINT_ID,
SEIS_POINT_FLOW_ID
)
REFERENCES SEIS_POINT_FLOW
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_POINT_ID,
FLOW_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_SS_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_SSTR_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_SSTR_FK FOREIGN KEY
(
SEIS_TRANSACTION_ID,
SEIS_TRANSACTION_TYPE
)
REFERENCES SEIS_TRANSACTION
(
SEIS_TRANSACTION_ID,
TRANSACTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_SF_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_SPD_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_STFST_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_STU_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_SUB_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_W_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_WAC_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_WAC_FK FOREIGN KEY
(
UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_WBS_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_WBS_FK FOREIGN KEY
(
UWI,
WELL_SERVICE_BA_ID,
WELL_SERVICE_SEQ_NO
)
REFERENCES WELL_BA_SERVICE
(
UWI,
PROVIDED_BY,
SERVICE_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_WLIC_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_WLIC_FK FOREIGN KEY
(
UWI,
WELL_LICENSE_SOURCE,
WELL_LICENSE_ID
)
REFERENCES WELL_LICENSE
(
UWI,
SOURCE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_WSET_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_WO_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBCOM_WOD_FK'
ALTER TABLE OBLIGATION_COMPONENT ADD CONSTRAINT OBCOM_WOD_FK FOREIGN KEY
(
WORK_ORDER_ID,
WORK_ORDER_DELIVERY_ID
)
REFERENCES WORK_ORDER_DELIVERY
(
WORK_ORDER_ID,
DELIVERY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBAD_C_FK'
ALTER TABLE OBLIG_ALLOW_DEDUCTION ADD CONSTRAINT OBAD_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBAD_OB_FK'
ALTER TABLE OBLIG_ALLOW_DEDUCTION ADD CONSTRAINT OBAD_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBAD_R_DT1_FK'
ALTER TABLE OBLIG_ALLOW_DEDUCTION ADD CONSTRAINT OBAD_R_DT1_FK FOREIGN KEY
(
ALLOW_DEDUCTION_TYPE
)
REFERENCES R_DEDUCT_TYPE
(
DEDUCT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBBS_BA_FK'
ALTER TABLE OBLIG_BA_SERVICE ADD CONSTRAINT OBBS_BA_FK FOREIGN KEY
(
PROVIDED_BY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBBS_BA_FK2'
ALTER TABLE OBLIG_BA_SERVICE ADD CONSTRAINT OBBS_BA_FK2 FOREIGN KEY
(
PROVIDED_FOR
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBBS_BA_FK3'
ALTER TABLE OBLIG_BA_SERVICE ADD CONSTRAINT OBBS_BA_FK3 FOREIGN KEY
(
CONTACT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBBS_C_FK'
ALTER TABLE OBLIG_BA_SERVICE ADD CONSTRAINT OBBS_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBBS_CP_FK'
ALTER TABLE OBLIG_BA_SERVICE ADD CONSTRAINT OBBS_CP_FK FOREIGN KEY
(
CONTRACT_ID,
PROVISION_ID
)
REFERENCES CONT_PROVISION
(
CONTRACT_ID,
PROVISION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBBS_OB_FK'
ALTER TABLE OBLIG_BA_SERVICE ADD CONSTRAINT OBBS_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBBS_RATE_FK'
ALTER TABLE OBLIG_BA_SERVICE ADD CONSTRAINT OBBS_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBBS_R_BST_FK'
ALTER TABLE OBLIG_BA_SERVICE ADD CONSTRAINT OBBS_R_BST_FK FOREIGN KEY
(
SERVICE_TYPE
)
REFERENCES R_BA_SERVICE_TYPE
(
BA_SERVICE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBBS_R_SQ_FK'
ALTER TABLE OBLIG_BA_SERVICE ADD CONSTRAINT OBBS_R_SQ_FK FOREIGN KEY
(
SERVICE_QUALITY
)
REFERENCES R_SERVICE_QUALITY
(
SERVICE_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBC_OB_FK'
ALTER TABLE OBLIG_CALC ADD CONSTRAINT OBC_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBC_R_OCM_FK'
ALTER TABLE OBLIG_CALC ADD CONSTRAINT OBC_R_OCM_FK FOREIGN KEY
(
CALCULATION_METHOD
)
REFERENCES R_OBLIG_CALC_METHOD
(
CALCULATION_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBC_R_OCP_FK'
ALTER TABLE OBLIG_CALC ADD CONSTRAINT OBC_R_OCP_FK FOREIGN KEY
(
CALCULATION_POINT
)
REFERENCES R_OBLIG_CALC_POINT
(
CALCULATION_POINT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBC_SUB_FK'
ALTER TABLE OBLIG_CALC ADD CONSTRAINT OBC_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBD_OB_FK'
ALTER TABLE OBLIG_DEDUCTION ADD CONSTRAINT OBD_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBD_OBAD_FK'
ALTER TABLE OBLIG_DEDUCTION ADD CONSTRAINT OBD_OBAD_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO,
ALLOW_DEDUCTION_ID
)
REFERENCES OBLIG_ALLOW_DEDUCTION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO,
ALLOW_DEDUCTION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBD_R_DT1_FK'
ALTER TABLE OBLIG_DEDUCTION ADD CONSTRAINT OBD_R_DT1_FK FOREIGN KEY
(
DEDUCT_TYPE
)
REFERENCES R_DEDUCT_TYPE
(
DEDUCT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBDC_C_FK'
ALTER TABLE OBLIG_DEDUCT_CALC ADD CONSTRAINT OBDC_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBDC_OBD_FK'
ALTER TABLE OBLIG_DEDUCT_CALC ADD CONSTRAINT OBDC_OBD_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO,
DEDUCTION_ID
)
REFERENCES OBLIG_DEDUCTION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO,
DEDUCTION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBDC_R_OCP_FK'
ALTER TABLE OBLIG_DEDUCT_CALC ADD CONSTRAINT OBDC_R_OCP_FK FOREIGN KEY
(
CALCULATION_POINT
)
REFERENCES R_OBLIG_CALC_POINT
(
CALCULATION_POINT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBDC_R_ODC_FK'
ALTER TABLE OBLIG_DEDUCT_CALC ADD CONSTRAINT OBDC_R_ODC_FK FOREIGN KEY
(
CALCULATION_METHOD
)
REFERENCES R_OBLIG_DEDUCT_CALC
(
CALCULATION_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBDC_SUB_FK'
ALTER TABLE OBLIG_DEDUCT_CALC ADD CONSTRAINT OBDC_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBP_BA_FK'
ALTER TABLE OBLIG_PAYMENT ADD CONSTRAINT OBP_BA_FK FOREIGN KEY
(
PAYEE_PAYOR_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBP_C_FK'
ALTER TABLE OBLIG_PAYMENT ADD CONSTRAINT OBP_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBP_CP_FK'
ALTER TABLE OBLIG_PAYMENT ADD CONSTRAINT OBP_CP_FK FOREIGN KEY
(
CONTRACT_ID,
PROVISION_ID
)
REFERENCES CONT_PROVISION
(
CONTRACT_ID,
PROVISION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBP_OB_FK'
ALTER TABLE OBLIG_PAYMENT ADD CONSTRAINT OBP_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBP_OBP_FK'
ALTER TABLE OBLIG_PAYMENT ADD CONSTRAINT OBP_OBP_FK FOREIGN KEY
(
RELATED_OBLIGATION_ID,
RELATED_OBLIGATION_SEQ_NO,
RELATED_OBLIG_BA_ID,
RELATED_OBLIG_PAYEE_PAYOR
)
REFERENCES OBLIG_PAYMENT
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO,
PAYEE_PAYOR_BA_ID,
PAYEE_PAYOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBP_OBPI_FK'
ALTER TABLE OBLIG_PAYMENT ADD CONSTRAINT OBP_OBPI_FK FOREIGN KEY
(
PAYEE_PAYOR_BA_ID,
PAYMENT_INSTRUCTION_ID
)
REFERENCES OBLIG_PAYMENT_INSTR
(
PAYEE_BA_ID,
PAYMENT_INSTRUCTION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBP_OBS_FK'
ALTER TABLE OBLIG_PAYMENT ADD CONSTRAINT OBP_OBS_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO,
SUBSTANCE_ID,
SUBSTANCE_SEQ_NO
)
REFERENCES OBLIG_SUBSTANCE
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO,
SUBSTANCE_ID,
SUBSTANCE_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBP_RATESD_FK'
ALTER TABLE OBLIG_PAYMENT ADD CONSTRAINT OBP_RATESD_FK FOREIGN KEY
(
RATE_SCHEDULE_ID,
RATE_TYPE
)
REFERENCES RATE_SCHED_DETAIL
(
RATE_SCHEDULE_ID,
RATE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBP_R_LRT_FK'
ALTER TABLE OBLIG_PAYMENT ADD CONSTRAINT OBP_R_LRT_FK FOREIGN KEY
(
LAND_RENTAL_TYPE
)
REFERENCES R_LAND_RENTAL_TYPE
(
LAND_RENTAL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBP_R_OPT_FK'
ALTER TABLE OBLIG_PAYMENT ADD CONSTRAINT OBP_R_OPT_FK FOREIGN KEY
(
PAYEE_PAYOR
)
REFERENCES R_OBLIG_PARTY_TYPE
(
PARTY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBP_R_PT1_FK'
ALTER TABLE OBLIG_PAYMENT ADD CONSTRAINT OBP_R_PT1_FK FOREIGN KEY
(
PAYMENT_TYPE
)
REFERENCES R_PAYMENT_TYPE
(
PAYMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBP_R_PM_FK'
ALTER TABLE OBLIG_PAYMENT ADD CONSTRAINT OBP_R_PM_FK FOREIGN KEY
(
PAY_METHOD
)
REFERENCES R_PAY_METHOD
(
PAY_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBP_R_RT5_FK'
ALTER TABLE OBLIG_PAYMENT ADD CONSTRAINT OBP_R_RT5_FK FOREIGN KEY
(
ROYALTY_TYPE
)
REFERENCES R_ROYALTY_TYPE
(
ROYALTY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBP_SUB_FK'
ALTER TABLE OBLIG_PAYMENT ADD CONSTRAINT OBP_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBPI_BAA_FK'
ALTER TABLE OBLIG_PAYMENT_INSTR ADD CONSTRAINT OBPI_BAA_FK FOREIGN KEY
(
BANK_BA_ID,
BANK_ADDRESS_SOURCE,
BANK_ADDRESS_OBS_NO
)
REFERENCES BA_ADDRESS
(
BUSINESS_ASSOCIATE_ID,
SOURCE,
ADDRESS_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBPI_BA_FK'
ALTER TABLE OBLIG_PAYMENT_INSTR ADD CONSTRAINT OBPI_BA_FK FOREIGN KEY
(
PAYEE_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBPI_R_OSP_FK'
ALTER TABLE OBLIG_PAYMENT_INSTR ADD CONSTRAINT OBPI_R_OSP_FK FOREIGN KEY
(
SUSPEND_PAYMENT_REASON
)
REFERENCES R_OBLIG_SUSPEND_PAY
(
SUSPEND_PAYMENT_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBPI_R_PM_FK'
ALTER TABLE OBLIG_PAYMENT_INSTR ADD CONSTRAINT OBPI_R_PM_FK FOREIGN KEY
(
PAY_METHOD
)
REFERENCES R_PAY_METHOD
(
PAY_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBPR_BA_FK'
ALTER TABLE OBLIG_PAYMENT_RATE ADD CONSTRAINT OBPR_BA_FK FOREIGN KEY
(
JURISDICTION
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBPR_C_FK'
ALTER TABLE OBLIG_PAYMENT_RATE ADD CONSTRAINT OBPR_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBPR_R_PRT_FK'
ALTER TABLE OBLIG_PAYMENT_RATE ADD CONSTRAINT OBPR_R_PRT_FK FOREIGN KEY
(
PAY_RATE_TYPE
)
REFERENCES R_PAY_RATE_TYPE
(
PAY_RATE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBPD_BA_FK'
ALTER TABLE OBLIG_PAY_DETAIL ADD CONSTRAINT OBPD_BA_FK FOREIGN KEY
(
PAYEE_PAYOR_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBPD_OBP_FK'
ALTER TABLE OBLIG_PAY_DETAIL ADD CONSTRAINT OBPD_OBP_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO,
PAYEE_PAYOR_BA_ID,
PAYEE_PAYOR
)
REFERENCES OBLIG_PAYMENT
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO,
PAYEE_PAYOR_BA_ID,
PAYEE_PAYOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBPD_R_PDT_FK'
ALTER TABLE OBLIG_PAY_DETAIL ADD CONSTRAINT OBPD_R_PDT_FK FOREIGN KEY
(
PAY_DETAIL_TYPE
)
REFERENCES R_PAY_DETAIL_TYPE
(
PAY_DETAIL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBR_BA_FK'
ALTER TABLE OBLIG_REMARK ADD CONSTRAINT OBR_BA_FK FOREIGN KEY
(
MADE_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBR_OB_FK'
ALTER TABLE OBLIG_REMARK ADD CONSTRAINT OBR_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBR_R_ORT_FK'
ALTER TABLE OBLIG_REMARK ADD CONSTRAINT OBR_R_ORT_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_OBLIG_REMARK_TYPE
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBS_C_FK'
ALTER TABLE OBLIG_SUBSTANCE ADD CONSTRAINT OBS_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBS_OB_FK'
ALTER TABLE OBLIG_SUBSTANCE ADD CONSTRAINT OBS_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBS_SUB_FK'
ALTER TABLE OBLIG_SUBSTANCE ADD CONSTRAINT OBS_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBT_OB_FK'
ALTER TABLE OBLIG_TYPE ADD CONSTRAINT OBT_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBT_R_OC_FK'
ALTER TABLE OBLIG_TYPE ADD CONSTRAINT OBT_R_OC_FK FOREIGN KEY
(
LAND_OBLIG_CATEGORY
)
REFERENCES R_OBLIG_CATEGORY
(
LAND_OBLIG_CATEGORY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBT_R_OT_FK'
ALTER TABLE OBLIG_TYPE ADD CONSTRAINT OBT_R_OT_FK FOREIGN KEY
(
LAND_OBLIG_TYPE
)
REFERENCES R_OBLIG_TYPE
(
LAND_OBLIG_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBX_OB_FK'
ALTER TABLE OBLIG_XREF ADD CONSTRAINT OBX_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBX_OB_FK2'
ALTER TABLE OBLIG_XREF ADD CONSTRAINT OBX_OB_FK2 FOREIGN KEY
(
OBLIGATION_ID_2,
OBLIGATION_SEQ_NO_2
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT OBX_R_OXT_FK'
ALTER TABLE OBLIG_XREF ADD CONSTRAINT OBX_R_OXT_FK FOREIGN KEY
(
OBLIG_XREF_TYPE
)
REFERENCES R_OBLIG_XREF_TYPE
(
OBLIG_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAAS_BA_FK'
ALTER TABLE PALEO_ABUND_SCHEME ADD CONSTRAINT PAAS_BA_FK FOREIGN KEY
(
SCHEME_OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAAS_PAAQ_FK'
ALTER TABLE PALEO_ABUND_SCHEME ADD CONSTRAINT PAAS_PAAQ_FK FOREIGN KEY
(
ABUND_QUALIFIER_ID
)
REFERENCES PALEO_ABUND_QUALIFIER
(
QUALIFIER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PACL_R_CL_FK'
ALTER TABLE PALEO_CLIMATE ADD CONSTRAINT PACL_R_CL_FK FOREIGN KEY
(
CLIMATE_TYPE
)
REFERENCES R_CLIMATE
(
CLIMATE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PACO_R_CONT_FK'
ALTER TABLE PALEO_CONFIDENCE ADD CONSTRAINT PACO_R_CONT_FK FOREIGN KEY
(
CONFIDENCE_TYPE
)
REFERENCES R_CONFIDENCE_TYPE
(
CONFIDENCE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAFI_PAFL_FK'
ALTER TABLE PALEO_FOSSIL_IND ADD CONSTRAINT PAFI_PAFL_FK FOREIGN KEY
(
PALEO_SUMMARY_ID,
FOSSIL_DETAIL_ID,
FOSSIL_ID
)
REFERENCES PALEO_FOSSIL_LIST
(
PALEO_SUMMARY_ID,
FOSSIL_DETAIL_ID,
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAFI_R_PIT_FK'
ALTER TABLE PALEO_FOSSIL_IND ADD CONSTRAINT PAFI_R_PIT_FK FOREIGN KEY
(
INDICATOR_TYPE
)
REFERENCES R_PALEO_IND_TYPE
(
INDICATOR_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAFIN_PAFL_FK'
ALTER TABLE PALEO_FOSSIL_INTERP ADD CONSTRAINT PAFIN_PAFL_FK FOREIGN KEY
(
PALEO_SUMMARY_ID,
FOSSIL_DETAIL_ID,
FOSSIL_ID
)
REFERENCES PALEO_FOSSIL_LIST
(
PALEO_SUMMARY_ID,
FOSSIL_DETAIL_ID,
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAFIN_PAI_FK'
ALTER TABLE PALEO_FOSSIL_INTERP ADD CONSTRAINT PAFIN_PAI_FK FOREIGN KEY
(
PALEO_SUMMARY_ID,
DETAIL_ID
)
REFERENCES PALEO_INTERP
(
PALEO_SUMMARY_ID,
DETAIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAFL_ANLPM_FK'
ALTER TABLE PALEO_FOSSIL_LIST ADD CONSTRAINT PAFL_ANLPM_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
MATURATION_OBS_NO
)
REFERENCES ANL_PALEO_MATURITY
(
ANALYSIS_ID,
ANL_SOURCE,
MATURATION_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAFL_BA_FK'
ALTER TABLE PALEO_FOSSIL_LIST ADD CONSTRAINT PAFL_BA_FK FOREIGN KEY
(
PALEO_ANALYST_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAFL_FOS_FK'
ALTER TABLE PALEO_FOSSIL_LIST ADD CONSTRAINT PAFL_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAFL_PACO_FK'
ALTER TABLE PALEO_FOSSIL_LIST ADD CONSTRAINT PAFL_PACO_FK FOREIGN KEY
(
CONFIDENCE_ID
)
REFERENCES PALEO_CONFIDENCE
(
CONFIDENCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAFL_PASU_FK'
ALTER TABLE PALEO_FOSSIL_LIST ADD CONSTRAINT PAFL_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAFL_RMPI_FK'
ALTER TABLE PALEO_FOSSIL_LIST ADD CONSTRAINT PAFL_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAFL_R_COL_FK'
ALTER TABLE PALEO_FOSSIL_LIST ADD CONSTRAINT PAFL_R_COL_FK FOREIGN KEY
(
FOSSIL_COLOR
)
REFERENCES R_COLOR
(
COLOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAFL_R_COL_FK2'
ALTER TABLE PALEO_FOSSIL_LIST ADD CONSTRAINT PAFL_R_COL_FK2 FOREIGN KEY
(
TAI_COLOR
)
REFERENCES R_COLOR
(
COLOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAFL_R_OT4_FK'
ALTER TABLE PALEO_FOSSIL_LIST ADD CONSTRAINT PAFL_R_OT4_FK FOREIGN KEY
(
ONTOGENY_TYPE
)
REFERENCES R_ONTOGENY_TYPE
(
ONTOGENY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAFL_R_PTF_FK'
ALTER TABLE PALEO_FOSSIL_LIST ADD CONSTRAINT PAFL_R_PTF_FK FOREIGN KEY
(
TYPE_FOSSIL_TYPE
)
REFERENCES R_PALEO_TYPE_FOSSIL
(
TYPE_FOSSIL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAFL_R_PQ2_FK'
ALTER TABLE PALEO_FOSSIL_LIST ADD CONSTRAINT PAFL_R_PQ2_FK FOREIGN KEY
(
PRESERVATION_QUALITY
)
REFERENCES R_PRESERVE_QUALITY
(
PRESERVATION_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAFL_R_P4_FK'
ALTER TABLE PALEO_FOSSIL_LIST ADD CONSTRAINT PAFL_R_P4_FK FOREIGN KEY
(
PRESERVATION_TYPE
)
REFERENCES R_PRESERVE_TYPE
(
PRESERVATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAFL_SM_FK'
ALTER TABLE PALEO_FOSSIL_LIST ADD CONSTRAINT PAFL_SM_FK FOREIGN KEY
(
LITH_SAMPLE_ID
)
REFERENCES SAMPLE
(
SAMPLE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAFO_PAFL_FK'
ALTER TABLE PALEO_FOSSIL_OBS ADD CONSTRAINT PAFO_PAFL_FK FOREIGN KEY
(
PALEO_SUMMARY_ID,
FOSSIL_DETAIL_ID,
FOSSIL_ID
)
REFERENCES PALEO_FOSSIL_LIST
(
PALEO_SUMMARY_ID,
FOSSIL_DETAIL_ID,
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAFO_R_FOT_FK'
ALTER TABLE PALEO_FOSSIL_OBS ADD CONSTRAINT PAFO_R_FOT_FK FOREIGN KEY
(
FOSSIL_OBS_TYPE
)
REFERENCES R_FOS_OBS_TYPE
(
FOSSIL_OBS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAI_ANLPM_FK'
ALTER TABLE PALEO_INTERP ADD CONSTRAINT PAI_ANLPM_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
MATURATION_OBS_NO
)
REFERENCES ANL_PALEO_MATURITY
(
ANALYSIS_ID,
ANL_SOURCE,
MATURATION_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAI_EZ_FK'
ALTER TABLE PALEO_INTERP ADD CONSTRAINT PAI_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAI_PACL_FK'
ALTER TABLE PALEO_INTERP ADD CONSTRAINT PAI_PACL_FK FOREIGN KEY
(
CLIMATE_ID
)
REFERENCES PALEO_CLIMATE
(
CLIMATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAI_PACO_FK'
ALTER TABLE PALEO_INTERP ADD CONSTRAINT PAI_PACO_FK FOREIGN KEY
(
ECOZONE_CONFIDENCE_ID
)
REFERENCES PALEO_CONFIDENCE
(
CONFIDENCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAI_PACO_FK2'
ALTER TABLE PALEO_INTERP ADD CONSTRAINT PAI_PACO_FK2 FOREIGN KEY
(
PALEO_CONFIDENCE_ID
)
REFERENCES PALEO_CONFIDENCE
(
CONFIDENCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAI_PAOQ_FK2'
ALTER TABLE PALEO_INTERP ADD CONSTRAINT PAI_PAOQ_FK2 FOREIGN KEY
(
PALEO_QUALIFIER_ID
)
REFERENCES PALEO_OBS_QUALIFIER
(
QUALIFIER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAI_PAOQ_FK'
ALTER TABLE PALEO_INTERP ADD CONSTRAINT PAI_PAOQ_FK FOREIGN KEY
(
ECOZONE_QUALIFIER_ID
)
REFERENCES PALEO_OBS_QUALIFIER
(
QUALIFIER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAI_PASU_FK'
ALTER TABLE PALEO_INTERP ADD CONSTRAINT PAI_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAI_R_COL_FK'
ALTER TABLE PALEO_INTERP ADD CONSTRAINT PAI_R_COL_FK FOREIGN KEY
(
TAI_COLOR
)
REFERENCES R_COLOR
(
COLOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAI_R_L_FK'
ALTER TABLE PALEO_INTERP ADD CONSTRAINT PAI_R_L_FK FOREIGN KEY
(
LITHOLOGY_TYPE
)
REFERENCES R_LITHOLOGY
(
LITHOLOGY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAI_R_LS1_FK'
ALTER TABLE PALEO_INTERP ADD CONSTRAINT PAI_R_LS1_FK FOREIGN KEY
(
LITH_STRUCTURE_ID
)
REFERENCES R_LITH_STRUCTURE
(
STRUCTURE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAI_R_PIT1_FK'
ALTER TABLE PALEO_INTERP ADD CONSTRAINT PAI_R_PIT1_FK FOREIGN KEY
(
INTERP_TYPE
)
REFERENCES R_PALEO_INTERP_TYPE
(
INTERP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAI_STU_FK3'
ALTER TABLE PALEO_INTERP ADD CONSTRAINT PAI_STU_FK3 FOREIGN KEY
(
TO_REL_STRAT_NAME_SET_ID,
TO_REL_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAI_STU_FK2'
ALTER TABLE PALEO_INTERP ADD CONSTRAINT PAI_STU_FK2 FOREIGN KEY
(
FROM_STRAT_NAME_SET_ID,
FROM_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAI_STU_FK'
ALTER TABLE PALEO_INTERP ADD CONSTRAINT PAI_STU_FK FOREIGN KEY
(
TO_STRAT_NAME_SET_ID,
TO_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAI_STU_FK4'
ALTER TABLE PALEO_INTERP ADD CONSTRAINT PAI_STU_FK4 FOREIGN KEY
(
FROM_REL_STRAT_NAME_SET_ID,
FROM_REL_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAOQ_BA_FK'
ALTER TABLE PALEO_OBS_QUALIFIER ADD CONSTRAINT PAOQ_BA_FK FOREIGN KEY
(
QUALIFIER_OWNER
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAOQ_R_QT_FK'
ALTER TABLE PALEO_OBS_QUALIFIER ADD CONSTRAINT PAOQ_R_QT_FK FOREIGN KEY
(
QUALIFIER_TYPE
)
REFERENCES R_QUALIFIER_TYPE
(
QUALIFIER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASU_R_ACN_FK'
ALTER TABLE PALEO_SUMMARY ADD CONSTRAINT PASU_R_ACN_FK FOREIGN KEY
(
ACCESS_CONDITION
)
REFERENCES R_ACCESS_CONDITION
(
ACCESS_CONDITION_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASU_R_CR2_FK'
ALTER TABLE PALEO_SUMMARY ADD CONSTRAINT PASU_R_CR2_FK FOREIGN KEY
(
CONFIDENTIAL_REASON
)
REFERENCES R_CONFIDENTIAL_REASON
(
CONFIDENTIAL_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASU_R_CT3_FK'
ALTER TABLE PALEO_SUMMARY ADD CONSTRAINT PASU_R_CT3_FK FOREIGN KEY
(
CONFIDENTIAL_TYPE
)
REFERENCES R_CONFIDENTIAL_TYPE
(
CONFIDENTIAL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASU_R_PQ2_FK'
ALTER TABLE PALEO_SUMMARY ADD CONSTRAINT PASU_R_PQ2_FK FOREIGN KEY
(
PRESERVATION_QUALITY
)
REFERENCES R_PRESERVE_QUALITY
(
PRESERVATION_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASA_BA_FK'
ALTER TABLE PALEO_SUM_AUTHOR ADD CONSTRAINT PASA_BA_FK FOREIGN KEY
(
AUTHOR_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASA_PASU_FK'
ALTER TABLE PALEO_SUM_AUTHOR ADD CONSTRAINT PASA_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASA_R_AUTH_FK'
ALTER TABLE PALEO_SUM_AUTHOR ADD CONSTRAINT PASA_R_AUTH_FK FOREIGN KEY
(
AUTHOR_TYPE
)
REFERENCES R_AUTHOR_TYPE
(
AUTHOR_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_ANLR_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_APP_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_A_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_BAAU_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_BAE_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_BAO_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_BA_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_CA_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_CEQ_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_CLSL_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_CON_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_CO_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_COT_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_C_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_EZ_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_EZS_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_EZS_FK FOREIGN KEY
(
ECOZONE_SET_ID
)
REFERENCES ECOZONE_SET
(
ECOZONE_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_ENT_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_EQ_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_FAC_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_FLD_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_FIN_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_FOS_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_HI_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_INS_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_INT_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_LR_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_LS_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_LIL_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_LIMS_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_LIMS_FK FOREIGN KEY
(
MEAS_SECTION_ID,
MEAS_SECTION_SOURCE
)
REFERENCES LITH_MEASURED_SEC
(
MEAS_SECTION_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_NOTI_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_OB_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_PASU_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_PDE_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_PL_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_PSWA_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_PSYS_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_PT_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_PS_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_PROJ_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_RATE_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_RSCL_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_RSE_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_RMDSS_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_RMII_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_RMPI_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_RMTW_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_R_PSCT_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_R_PSCT_FK FOREIGN KEY
(
PALEO_SUMMARY_COMPONENT_TYPE
)
REFERENCES R_PAL_SUM_COMP_TYPE
(
PALEO_SUMMARY_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_SS_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_SF_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_SRCD_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_SPD_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_STFST_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_STU_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_SUB_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_W_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_WAC_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_WAC_FK FOREIGN KEY
(
UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_WSET_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASCOM_WO_FK'
ALTER TABLE PALEO_SUM_COMP ADD CONSTRAINT PASCOM_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASI_PASU_FK'
ALTER TABLE PALEO_SUM_INTERVAL ADD CONSTRAINT PASI_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASS_PASU_FK'
ALTER TABLE PALEO_SUM_SAMPLE ADD CONSTRAINT PASS_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASS_SM_FK'
ALTER TABLE PALEO_SUM_SAMPLE ADD CONSTRAINT PASS_SM_FK FOREIGN KEY
(
LITH_SAMPLE_ID
)
REFERENCES SAMPLE
(
SAMPLE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASX_PASU_FK'
ALTER TABLE PALEO_SUM_XREF ADD CONSTRAINT PASX_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID1
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASX_PASU_FK2'
ALTER TABLE PALEO_SUM_XREF ADD CONSTRAINT PASX_PASU_FK2 FOREIGN KEY
(
PALEO_SUMMARY_ID2
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PASX_R_PSXT_FK'
ALTER TABLE PALEO_SUM_XREF ADD CONSTRAINT PASX_R_PSXT_FK FOREIGN KEY
(
PALEO_XREF_TYPE
)
REFERENCES R_PAL_SUM_XREF_TYPE
(
PALEO_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDE_BA_FK'
ALTER TABLE PDEN ADD CONSTRAINT PDE_BA_FK FOREIGN KEY
(
CURRENT_OPERATOR
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDE_FLD_FK'
ALTER TABLE PDEN ADD CONSTRAINT PDE_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDE_PDENAR_FK'
ALTER TABLE PDEN ADD CONSTRAINT PDE_PDENAR_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE,
AREA_ID,
AREA_TYPE
)
REFERENCES PDEN_AREA
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDE_PL_FK'
ALTER TABLE PDEN ADD CONSTRAINT PDE_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDE_R_ERT_FK'
ALTER TABLE PDEN ADD CONSTRAINT PDE_R_ERT_FK FOREIGN KEY
(
ENHANCED_RECOVERY_TYPE
)
REFERENCES R_ENHANCED_REC_TYPE
(
ENHANCED_RECOVERY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDE_R_LDT_FK'
ALTER TABLE PDEN ADD CONSTRAINT PDE_R_LDT_FK FOREIGN KEY
(
LOCATION_DESC_TYPE
)
REFERENCES R_LOCATION_DESC_TYPE
(
LOCATION_DESC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDE_R_PS_FK'
ALTER TABLE PDEN ADD CONSTRAINT PDE_R_PS_FK FOREIGN KEY
(
PDEN_STATUS_TYPE,
PDEN_STATUS
)
REFERENCES R_PDEN_STATUS
(
PDEN_STATUS_TYPE,
PDEN_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDE_R_PS1_FK'
ALTER TABLE PDEN ADD CONSTRAINT PDE_R_PS1_FK FOREIGN KEY
(
PLOT_SYMBOL
)
REFERENCES R_PLOT_SYMBOL
(
PLOT_SYMBOL
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDE_R_PM1_FK'
ALTER TABLE PDEN ADD CONSTRAINT PDE_R_PM1_FK FOREIGN KEY
(
PRODUCTION_METHOD
)
REFERENCES R_PRODUCTION_METHOD
(
PRODUCTION_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDE_STU_FK'
ALTER TABLE PDEN ADD CONSTRAINT PDE_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDE_SUB_FK'
ALTER TABLE PDEN ADD CONSTRAINT PDE_SUB_FK FOREIGN KEY
(
PRIMARY_PRODUCT
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENAF_PDE_FK'
ALTER TABLE PDEN_ALLOC_FACTOR ADD CONSTRAINT PDENAF_PDE_FK FOREIGN KEY
(
FROM_PDEN_SUBTYPE,
FROM_PDEN_ID,
FROM_PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENAF_PDE_FK2'
ALTER TABLE PDEN_ALLOC_FACTOR ADD CONSTRAINT PDENAF_PDE_FK2 FOREIGN KEY
(
TO_PDEN_SUBTYPE,
TO_PDEN_ID,
TO_PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENAF_R_AT_FK'
ALTER TABLE PDEN_ALLOC_FACTOR ADD CONSTRAINT PDENAF_R_AT_FK FOREIGN KEY
(
ACTIVITY_TYPE
)
REFERENCES R_ACTIVITY_TYPE
(
ACTIVITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENAF_R_ALT_FK'
ALTER TABLE PDEN_ALLOC_FACTOR ADD CONSTRAINT PDENAF_R_ALT_FK FOREIGN KEY
(
ALLOCATION_TYPE
)
REFERENCES R_ALLOCATION_TYPE
(
ALLOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENAF_R_PT3_FK'
ALTER TABLE PDEN_ALLOC_FACTOR ADD CONSTRAINT PDENAF_R_PT3_FK FOREIGN KEY
(
PERIOD_TYPE
)
REFERENCES R_PERIOD_TYPE
(
PERIOD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENAF_R_VM_FK'
ALTER TABLE PDEN_ALLOC_FACTOR ADD CONSTRAINT PDENAF_R_VM_FK FOREIGN KEY
(
VOLUME_METHOD
)
REFERENCES R_VOLUME_METHOD
(
VOLUME_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENAF_SUB_FK'
ALTER TABLE PDEN_ALLOC_FACTOR ADD CONSTRAINT PDENAF_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENAR_A_FK'
ALTER TABLE PDEN_AREA ADD CONSTRAINT PDENAR_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENAR_PDE_FK'
ALTER TABLE PDEN_AREA ADD CONSTRAINT PDENAR_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENBA_BA_FK'
ALTER TABLE PDEN_BUSINESS_ASSOC ADD CONSTRAINT PDENBA_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENBA_PDE_FK'
ALTER TABLE PDEN_BUSINESS_ASSOC ADD CONSTRAINT PDENBA_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_ANLR_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_APP_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_A_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_BAAU_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_BAE_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_BAO_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_BA_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_CA_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_CEQ_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_CLSL_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_CON_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_CO_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_COT_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_C_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_EZ_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_ENT_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_EQ_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_FAC_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_FLD_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_FIN_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_FOS_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_HI_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_INS_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_INT_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_LR_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_LS_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_LIL_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_NOTI_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_OB_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_PASU_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_PDE_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_PL_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_PSWA_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_PSYS_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_PT_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_PS_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_PS_FK FOREIGN KEY
(
PR_STR_UWI,
PR_STR_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_PSF_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_PSF_FK FOREIGN KEY
(
PR_STR_UWI,
PR_STR_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
)
REFERENCES PROD_STRING_FORMATION
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_PROJ_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_RATE_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_RSCL_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_RSE_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_RMDSS_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_RMII_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_RMPI_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_RMTW_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_R_PCT2_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_R_PCT2_FK FOREIGN KEY
(
PDEN_COMPONENT_TYPE
)
REFERENCES R_PDEN_COMPONENT_TYPE
(
PDEN_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_SS_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_SF_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_SPD_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_STFST_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_STU_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_SUB_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_W_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_WAC_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_WAC_FK FOREIGN KEY
(
WELL_ACTIVITY_UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_WSET_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENC_WO_FK'
ALTER TABLE PDEN_COMPONENT ADD CONSTRAINT PDENC_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENDFC_PDE_FK'
ALTER TABLE PDEN_DECLINE_CASE ADD CONSTRAINT PDENDFC_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENDFC_PROJ_FK'
ALTER TABLE PDEN_DECLINE_CASE ADD CONSTRAINT PDENDFC_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENDFC_R_DCT_FK'
ALTER TABLE PDEN_DECLINE_CASE ADD CONSTRAINT PDENDFC_R_DCT_FK FOREIGN KEY
(
DECLINE_CURVE_TYPE
)
REFERENCES R_DECLINE_CURVE_TYPE
(
DECLINE_CURVE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENDFC_R_DT_FK'
ALTER TABLE PDEN_DECLINE_CASE ADD CONSTRAINT PDENDFC_R_DT_FK FOREIGN KEY
(
DECLINE_TYPE
)
REFERENCES R_DECLINE_TYPE
(
DECLINE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENDFC_SUB_FK'
ALTER TABLE PDEN_DECLINE_CASE ADD CONSTRAINT PDENDFC_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENDCO_PDENDFC_FK'
ALTER TABLE PDEN_DECLINE_CONDITION ADD CONSTRAINT PDENDCO_PDENDFC_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
PRODUCT_TYPE,
CASE_ID
)
REFERENCES PDEN_DECLINE_CASE
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
PRODUCT_TYPE,
CASE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENDCO_R_DCC_FK'
ALTER TABLE PDEN_DECLINE_CONDITION ADD CONSTRAINT PDENDCO_R_DCC_FK FOREIGN KEY
(
CONDITION_TYPE,
CONDITION_CODE
)
REFERENCES R_DECLINE_COND_CODE
(
CONDITION_TYPE,
CONDITION_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENDCO_R_DCT1_FK'
ALTER TABLE PDEN_DECLINE_CONDITION ADD CONSTRAINT PDENDCO_R_DCT1_FK FOREIGN KEY
(
CONDITION_TYPE
)
REFERENCES R_DECLINE_COND_TYPE
(
CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENDCO_R_PT3_FK'
ALTER TABLE PDEN_DECLINE_CONDITION ADD CONSTRAINT PDENDCO_R_PT3_FK FOREIGN KEY
(
PERIOD_TYPE
)
REFERENCES R_PERIOD_TYPE
(
PERIOD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENDCO_SUB_FK'
ALTER TABLE PDEN_DECLINE_CONDITION ADD CONSTRAINT PDENDCO_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENDF_PDENDFC_FK'
ALTER TABLE PDEN_DECLINE_SEGMENT ADD CONSTRAINT PDENDF_PDENDFC_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
PRODUCT_TYPE,
CASE_ID
)
REFERENCES PDEN_DECLINE_CASE
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
PRODUCT_TYPE,
CASE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENDF_R_DCT_FK'
ALTER TABLE PDEN_DECLINE_SEGMENT ADD CONSTRAINT PDENDF_R_DCT_FK FOREIGN KEY
(
DECLINE_CURVE_TYPE
)
REFERENCES R_DECLINE_CURVE_TYPE
(
DECLINE_CURVE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENDF_R_DT_FK'
ALTER TABLE PDEN_DECLINE_SEGMENT ADD CONSTRAINT PDENDF_R_DT_FK FOREIGN KEY
(
DECLINE_TYPE
)
REFERENCES R_DECLINE_TYPE
(
DECLINE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENDF_R_RCT_FK'
ALTER TABLE PDEN_DECLINE_SEGMENT ADD CONSTRAINT PDENDF_R_RCT_FK FOREIGN KEY
(
RATIO_CURVE_TYPE
)
REFERENCES R_RATIO_CURVE_TYPE
(
RATIO_CURVE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENDF_R_RFT_FK'
ALTER TABLE PDEN_DECLINE_SEGMENT ADD CONSTRAINT PDENDF_R_RFT_FK FOREIGN KEY
(
RATIO_FLUID_TYPE
)
REFERENCES R_RATIO_FLUID_TYPE
(
RATIO_FLUID_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENDF_SUB_FK'
ALTER TABLE PDEN_DECLINE_SEGMENT ADD CONSTRAINT PDENDF_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENFAC_FAC_FK'
ALTER TABLE PDEN_FACILITY ADD CONSTRAINT PDENFAC_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENFAC_PDE_FK'
ALTER TABLE PDEN_FACILITY ADD CONSTRAINT PDENFAC_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENFLD_FLD_FK'
ALTER TABLE PDEN_FIELD ADD CONSTRAINT PDENFLD_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENFLD_PDE_FK'
ALTER TABLE PDEN_FIELD ADD CONSTRAINT PDENFLD_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENFM_PDE_FK'
ALTER TABLE PDEN_FLOW_MEASUREMENT ADD CONSTRAINT PDENFM_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENFM_R_MT1_FK'
ALTER TABLE PDEN_FLOW_MEASUREMENT ADD CONSTRAINT PDENFM_R_MT1_FK FOREIGN KEY
(
MEASUREMENT_TYPE
)
REFERENCES R_MEASUREMENT_TYPE
(
MEASUREMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENFM_R_PAR_FK'
ALTER TABLE PDEN_FLOW_MEASUREMENT ADD CONSTRAINT PDENFM_R_PAR_FK FOREIGN KEY
(
AMEND_REASON
)
REFERENCES R_PDEN_AMEND_REASON
(
AMEND_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENFM_R_PT3_FK'
ALTER TABLE PDEN_FLOW_MEASUREMENT ADD CONSTRAINT PDENFM_R_PT3_FK FOREIGN KEY
(
PERIOD_TYPE
)
REFERENCES R_PERIOD_TYPE
(
PERIOD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENFM_R_TZ_FK'
ALTER TABLE PDEN_FLOW_MEASUREMENT ADD CONSTRAINT PDENFM_R_TZ_FK FOREIGN KEY
(
MEASUREMENT_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENFM_SUB_FK'
ALTER TABLE PDEN_FLOW_MEASUREMENT ADD CONSTRAINT PDENFM_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENIA_A_FK'
ALTER TABLE PDEN_IN_AREA ADD CONSTRAINT PDENIA_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENIA_PDE_FK'
ALTER TABLE PDEN_IN_AREA ADD CONSTRAINT PDENIA_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENLR_FAC_FK'
ALTER TABLE PDEN_LAND_RIGHT ADD CONSTRAINT PDENLR_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENLR_LR_FK'
ALTER TABLE PDEN_LAND_RIGHT ADD CONSTRAINT PDENLR_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENLR_PDE_FK'
ALTER TABLE PDEN_LAND_RIGHT ADD CONSTRAINT PDENLR_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENLU_FAC_FK'
ALTER TABLE PDEN_LEASE_UNIT ADD CONSTRAINT PDENLU_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENLU_PDE_FK'
ALTER TABLE PDEN_LEASE_UNIT ADD CONSTRAINT PDENLU_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENLU_PLU_FK'
ALTER TABLE PDEN_LEASE_UNIT ADD CONSTRAINT PDENLU_PLU_FK FOREIGN KEY
(
LEASE_UNIT_ID
)
REFERENCES PROD_LEASE_UNIT
(
LEASE_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENMB_PDE_FK'
ALTER TABLE PDEN_MATERIAL_BAL ADD CONSTRAINT PDENMB_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENMB_PROJ_FK'
ALTER TABLE PDEN_MATERIAL_BAL ADD CONSTRAINT PDENMB_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENMB_R_MBCM_FK'
ALTER TABLE PDEN_MATERIAL_BAL ADD CONSTRAINT PDENMB_R_MBCM_FK FOREIGN KEY
(
Z_FACTOR_METHOD
)
REFERENCES R_MBAL_COMPRESS_TYPE
(
Z_FACTOR_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENMB_R_MBCT_FK'
ALTER TABLE PDEN_MATERIAL_BAL ADD CONSTRAINT PDENMB_R_MBCT_FK FOREIGN KEY
(
CURVE_FIT_TYPE
)
REFERENCES R_MBAL_CURVE_TYPE
(
CURVE_FIT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENMB_R_MO_FK'
ALTER TABLE PDEN_MATERIAL_BAL ADD CONSTRAINT PDENMB_R_MO_FK FOREIGN KEY
(
CLOSE_MONTH
)
REFERENCES R_MONTH
(
MONTH
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENMB_SUB_FK'
ALTER TABLE PDEN_MATERIAL_BAL ADD CONSTRAINT PDENMB_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENOH_BA_FK'
ALTER TABLE PDEN_OPER_HIST ADD CONSTRAINT PDENOH_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENOH_PDE_FK'
ALTER TABLE PDEN_OPER_HIST ADD CONSTRAINT PDENOH_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENO_PDE_FK'
ALTER TABLE PDEN_OTHER ADD CONSTRAINT PDENO_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENP_FAC_FK'
ALTER TABLE PDEN_POOL ADD CONSTRAINT PDENP_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENP_PDE_FK'
ALTER TABLE PDEN_POOL ADD CONSTRAINT PDENP_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENP_PL_FK'
ALTER TABLE PDEN_POOL ADD CONSTRAINT PDENP_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENPS_FAC_FK'
ALTER TABLE PDEN_PROD_STRING ADD CONSTRAINT PDENPS_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENPS_PDE_FK'
ALTER TABLE PDEN_PROD_STRING ADD CONSTRAINT PDENPS_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENPS_PLU_FK'
ALTER TABLE PDEN_PROD_STRING ADD CONSTRAINT PDENPS_PLU_FK FOREIGN KEY
(
LEASE_UNIT_ID
)
REFERENCES PROD_LEASE_UNIT
(
LEASE_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENPS_PS_FK'
ALTER TABLE PDEN_PROD_STRING ADD CONSTRAINT PDENPS_PS_FK FOREIGN KEY
(
UWI,
STRING_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENPS_W_FK'
ALTER TABLE PDEN_PROD_STRING ADD CONSTRAINT PDENPS_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENPSX_PDE_FK'
ALTER TABLE PDEN_PROD_STRING_XREF ADD CONSTRAINT PDENPSX_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENPSX_PS_FK'
ALTER TABLE PDEN_PROD_STRING_XREF ADD CONSTRAINT PDENPSX_PS_FK FOREIGN KEY
(
UWI,
STRING_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENPSA_PDENPSX_FK'
ALTER TABLE PDEN_PR_STR_ALLOWABLE ADD CONSTRAINT PDENPSA_PDENPSX_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
UWI,
STRING_SOURCE,
STRING_ID,
PDEN_PRS_XREF_SEQ_NO
)
REFERENCES PDEN_PROD_STRING_XREF
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
UWI,
STRING_SOURCE,
STRING_ID,
PDEN_PRS_XREF_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENPSA_R_PT3_FK'
ALTER TABLE PDEN_PR_STR_ALLOWABLE ADD CONSTRAINT PDENPSA_R_PT3_FK FOREIGN KEY
(
PERIOD_TYPE
)
REFERENCES R_PERIOD_TYPE
(
PERIOD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENPSA_SUB_FK'
ALTER TABLE PDEN_PR_STR_ALLOWABLE ADD CONSTRAINT PDENPSA_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENPSF_PDE_FK'
ALTER TABLE PDEN_PR_STR_FORM ADD CONSTRAINT PDENPSF_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENPSF_PS_FK'
ALTER TABLE PDEN_PR_STR_FORM ADD CONSTRAINT PDENPSF_PS_FK FOREIGN KEY
(
UWI,
STRING_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENPSF_PSF_FK'
ALTER TABLE PDEN_PR_STR_FORM ADD CONSTRAINT PDENPSF_PSF_FK FOREIGN KEY
(
UWI,
STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
)
REFERENCES PROD_STRING_FORMATION
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENPSF_STU_FK'
ALTER TABLE PDEN_PR_STR_FORM ADD CONSTRAINT PDENPSF_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENR_PDE_FK'
ALTER TABLE PDEN_RESENT ADD CONSTRAINT PDENR_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENR_RSE_FK'
ALTER TABLE PDEN_RESENT ADD CONSTRAINT PDENR_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENRC_PDE_FK'
ALTER TABLE PDEN_RESENT_CLASS ADD CONSTRAINT PDENRC_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENRC_RSC_FK'
ALTER TABLE PDEN_RESENT_CLASS ADD CONSTRAINT PDENRC_RSC_FK FOREIGN KEY
(
RESENT_ID,
RESERVE_CLASS_ID
)
REFERENCES RESENT_CLASS
(
RESENT_ID,
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENSH_PDE_FK'
ALTER TABLE PDEN_STATUS_HIST ADD CONSTRAINT PDENSH_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENSH_R_PS_FK'
ALTER TABLE PDEN_STATUS_HIST ADD CONSTRAINT PDENSH_R_PS_FK FOREIGN KEY
(
STATUS_TYPE,
STATUS
)
REFERENCES R_PDEN_STATUS
(
PDEN_STATUS_TYPE,
PDEN_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENSH_R_TZ_FK'
ALTER TABLE PDEN_STATUS_HIST ADD CONSTRAINT PDENSH_R_TZ_FK FOREIGN KEY
(
TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENVA_PDE_FK'
ALTER TABLE PDEN_VOLUME_ANALYSIS ADD CONSTRAINT PDENVA_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENVA_PROJ_FK'
ALTER TABLE PDEN_VOLUME_ANALYSIS ADD CONSTRAINT PDENVA_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENVA_SUB_FK'
ALTER TABLE PDEN_VOLUME_ANALYSIS ADD CONSTRAINT PDENVA_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENVD_BA_FK'
ALTER TABLE PDEN_VOL_DISPOSITION ADD CONSTRAINT PDENVD_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENVD_PDE_FK'
ALTER TABLE PDEN_VOL_DISPOSITION ADD CONSTRAINT PDENVD_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENVD_PDE_FK2'
ALTER TABLE PDEN_VOL_DISPOSITION ADD CONSTRAINT PDENVD_PDE_FK2 FOREIGN KEY
(
RECEIVING_PDEN_SUBTYPE,
RECEIVING_PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENVD_R_AT_FK'
ALTER TABLE PDEN_VOL_DISPOSITION ADD CONSTRAINT PDENVD_R_AT_FK FOREIGN KEY
(
ACTIVITY_TYPE
)
REFERENCES R_ACTIVITY_TYPE
(
ACTIVITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENVD_R_PAR_FK'
ALTER TABLE PDEN_VOL_DISPOSITION ADD CONSTRAINT PDENVD_R_PAR_FK FOREIGN KEY
(
AMEND_REASON
)
REFERENCES R_PDEN_AMEND_REASON
(
AMEND_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENVD_R_PT3_FK'
ALTER TABLE PDEN_VOL_DISPOSITION ADD CONSTRAINT PDENVD_R_PT3_FK FOREIGN KEY
(
PERIOD_TYPE
)
REFERENCES R_PERIOD_TYPE
(
PERIOD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENVD_R_VM_FK'
ALTER TABLE PDEN_VOL_DISPOSITION ADD CONSTRAINT PDENVD_R_VM_FK FOREIGN KEY
(
VOLUME_METHOD
)
REFERENCES R_VOLUME_METHOD
(
VOLUME_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENVD_SUB_FK'
ALTER TABLE PDEN_VOL_DISPOSITION ADD CONSTRAINT PDENVD_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENVR_PDE_FK'
ALTER TABLE PDEN_VOL_REGIME ADD CONSTRAINT PDENVR_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENVR_PVMR_FK'
ALTER TABLE PDEN_VOL_REGIME ADD CONSTRAINT PDENVR_PVMR_FK FOREIGN KEY
(
VOLUME_REGIME_ID
)
REFERENCES PPDM_VOL_MEAS_REGIME
(
VOLUME_REGIME_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENVS_PDE_FK'
ALTER TABLE PDEN_VOL_SUMMARY ADD CONSTRAINT PDENVS_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENVS_PROJ_FK'
ALTER TABLE PDEN_VOL_SUMMARY ADD CONSTRAINT PDENVS_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENVS_R_AT_FK'
ALTER TABLE PDEN_VOL_SUMMARY ADD CONSTRAINT PDENVS_R_AT_FK FOREIGN KEY
(
ACTIVITY_TYPE
)
REFERENCES R_ACTIVITY_TYPE
(
ACTIVITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENVS_R_PAR_FK'
ALTER TABLE PDEN_VOL_SUMMARY ADD CONSTRAINT PDENVS_R_PAR_FK FOREIGN KEY
(
AMEND_REASON
)
REFERENCES R_PDEN_AMEND_REASON
(
AMEND_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENVS_R_PT3_FK'
ALTER TABLE PDEN_VOL_SUMMARY ADD CONSTRAINT PDENVS_R_PT3_FK FOREIGN KEY
(
PERIOD_TYPE
)
REFERENCES R_PERIOD_TYPE
(
PERIOD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENVS_R_VM_FK'
ALTER TABLE PDEN_VOL_SUMMARY ADD CONSTRAINT PDENVS_R_VM_FK FOREIGN KEY
(
VOLUME_METHOD
)
REFERENCES R_VOLUME_METHOD
(
VOLUME_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENVS_SUB_FK'
ALTER TABLE PDEN_VOL_SUMMARY ADD CONSTRAINT PDENVS_SUB_FK FOREIGN KEY
(
INVENTORY_PRODUCT
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENVS_SUB_FK1'
ALTER TABLE PDEN_VOL_SUMMARY ADD CONSTRAINT PDENVS_SUB_FK1 FOREIGN KEY
(
PRIMARY_PRODUCT
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENVSO_PDENVS_FK'
ALTER TABLE PDEN_VOL_SUMM_OTHER ADD CONSTRAINT PDENVSO_PDENVS_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
VOLUME_METHOD,
ACTIVITY_TYPE,
PERIOD_TYPE,
PDEN_PERIOD_ID,
AMENDMENT_SEQ_NO
)
REFERENCES PDEN_VOL_SUMMARY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
VOLUME_METHOD,
ACTIVITY_TYPE,
PERIOD_TYPE,
PERIOD_ID,
AMENDMENT_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENVSO_SUB_FK'
ALTER TABLE PDEN_VOL_SUMM_OTHER ADD CONSTRAINT PDENVSO_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENW_PDE_FK'
ALTER TABLE PDEN_WELL ADD CONSTRAINT PDENW_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENW_W_FK'
ALTER TABLE PDEN_WELL ADD CONSTRAINT PDENW_W_FK FOREIGN KEY
(
PRIMARY_UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENWRS_PDENW_FK'
ALTER TABLE PDEN_WELL_REPORT_STREAM ADD CONSTRAINT PDENWRS_PDENW_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN_WELL
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENWRS_SUB_FK'
ALTER TABLE PDEN_WELL_REPORT_STREAM ADD CONSTRAINT PDENWRS_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENWRS_W_FK'
ALTER TABLE PDEN_WELL_REPORT_STREAM ADD CONSTRAINT PDENWRS_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENX_PDE_FK'
ALTER TABLE PDEN_XREF ADD CONSTRAINT PDENX_PDE_FK FOREIGN KEY
(
FROM_PDEN_SUBTYPE,
FROM_PDEN_ID,
FROM_PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENX_PDE_FK2'
ALTER TABLE PDEN_XREF ADD CONSTRAINT PDENX_PDE_FK2 FOREIGN KEY
(
TO_PDEN_SUBTYPE,
TO_PDEN_ID,
TO_PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDENX_R_PXT_FK'
ALTER TABLE PDEN_XREF ADD CONSTRAINT PDENX_R_PXT_FK FOREIGN KEY
(
PDEN_XREF_TYPE
)
REFERENCES R_PDEN_XREF_TYPE
(
PDEN_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PL_BA_FK'
ALTER TABLE POOL ADD CONSTRAINT PL_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PL_FLD_FK'
ALTER TABLE POOL ADD CONSTRAINT PL_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PL_R_PS2_FK'
ALTER TABLE POOL ADD CONSTRAINT PL_R_PS2_FK FOREIGN KEY
(
POOL_STATUS
)
REFERENCES R_POOL_STATUS
(
POOL_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PL_R_PT7_FK'
ALTER TABLE POOL ADD CONSTRAINT PL_R_PT7_FK FOREIGN KEY
(
POOL_TYPE
)
REFERENCES R_POOL_TYPE
(
POOL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PL_STU_FK'
ALTER TABLE POOL ADD CONSTRAINT PL_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLA_BA_FK'
ALTER TABLE POOL_ALIAS ADD CONSTRAINT PLA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLA_PL_FK'
ALTER TABLE POOL_ALIAS ADD CONSTRAINT PLA_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLA_PSWA_FK'
ALTER TABLE POOL_ALIAS ADD CONSTRAINT PLA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLA_R_ART_FK'
ALTER TABLE POOL_ALIAS ADD CONSTRAINT PLA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLA_R_ATY_FK'
ALTER TABLE POOL_ALIAS ADD CONSTRAINT PLA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLA_R_LANG_FK'
ALTER TABLE POOL_ALIAS ADD CONSTRAINT PLA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLA_SRCD_FK'
ALTER TABLE POOL_ALIAS ADD CONSTRAINT PLA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLAR_A_FK'
ALTER TABLE POOL_AREA ADD CONSTRAINT PLAR_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLAR_PL_FK'
ALTER TABLE POOL_AREA ADD CONSTRAINT PLAR_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_ANLR_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_APP_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_A_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_BAAU_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_BAE_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_BAO_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_BA_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_CA_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_CEQ_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_CLSL_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_CON_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_CO_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_COT_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_C_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_EZ_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_ENT_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_EQ_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_FAC_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_FLD_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_FIN_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_FOS_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_HI_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_INS_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_INT_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_LR_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_LS_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_LIL_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_NOTI_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_OB_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_PASU_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_PDE_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_PL_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_PSWA_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_PSYS_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_PT_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_PS_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_PS_FK FOREIGN KEY
(
PR_STR_UWI,
PR_STR_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_PSF_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_PSF_FK FOREIGN KEY
(
PR_STR_UWI,
PR_STR_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
)
REFERENCES PROD_STRING_FORMATION
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_PROJ_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_RATE_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_RSCL_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_RSE_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_RMDSS_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_RMII_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_RMPI_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_RMTW_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_R_PCT3_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_R_PCT3_FK FOREIGN KEY
(
POOL_COMPONENT_TYPE
)
REFERENCES R_POOL_COMPONENT_TYPE
(
POOL_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_SS_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_SF_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_SPD_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_STFST_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_STU_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_SUB_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_W_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_WAC_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_WAC_FK FOREIGN KEY
(
WELL_ACTIVITY_UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_WSET_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLC_WO_FK'
ALTER TABLE POOL_COMPONENT ADD CONSTRAINT PLC_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLI_INS_FK'
ALTER TABLE POOL_INSTRUMENT ADD CONSTRAINT PLI_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLI_PL_FK'
ALTER TABLE POOL_INSTRUMENT ADD CONSTRAINT PLI_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLV_BA_FK'
ALTER TABLE POOL_VERSION ADD CONSTRAINT PLV_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLV_FLD_FK'
ALTER TABLE POOL_VERSION ADD CONSTRAINT PLV_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLV_PL_FK'
ALTER TABLE POOL_VERSION ADD CONSTRAINT PLV_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLV_R_PS2_FK'
ALTER TABLE POOL_VERSION ADD CONSTRAINT PLV_R_PS2_FK FOREIGN KEY
(
POOL_STATUS
)
REFERENCES R_POOL_STATUS
(
POOL_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLV_R_PT7_FK'
ALTER TABLE POOL_VERSION ADD CONSTRAINT PLV_R_PT7_FK FOREIGN KEY
(
POOL_TYPE
)
REFERENCES R_POOL_TYPE
(
POOL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLV_STU_FK'
ALTER TABLE POOL_VERSION ADD CONSTRAINT PLV_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLVAR_A_FK'
ALTER TABLE POOL_VERSION_AREA ADD CONSTRAINT PLVAR_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLVAR_PLV_FK'
ALTER TABLE POOL_VERSION_AREA ADD CONSTRAINT PLVAR_PLV_FK FOREIGN KEY
(
POOL_ID,
POOL_SOURCE
)
REFERENCES POOL_VERSION
(
POOL_ID,
POOL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAH_BA_FK'
ALTER TABLE PPDM_AUDIT_HISTORY ADD CONSTRAINT PAH_BA_FK FOREIGN KEY
(
AUDIT_AUTHORIZED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAH_BA_FK2'
ALTER TABLE PPDM_AUDIT_HISTORY ADD CONSTRAINT PAH_BA_FK2 FOREIGN KEY
(
AUDIT_CREATED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAH_BA_FK3'
ALTER TABLE PPDM_AUDIT_HISTORY ADD CONSTRAINT PAH_BA_FK3 FOREIGN KEY
(
AUDIT_VERIFIED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAH_PC_FK'
ALTER TABLE PPDM_AUDIT_HISTORY ADD CONSTRAINT PAH_PC_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAH_R_PAR1_FK'
ALTER TABLE PPDM_AUDIT_HISTORY ADD CONSTRAINT PAH_R_PAR1_FK FOREIGN KEY
(
AUDIT_REASON
)
REFERENCES R_PPDM_AUDIT_REASON
(
AUDIT_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAH_R_PAUT_FK'
ALTER TABLE PPDM_AUDIT_HISTORY ADD CONSTRAINT PAH_R_PAUT_FK FOREIGN KEY
(
AUDIT_TYPE
)
REFERENCES R_PPDM_AUDIT_TYPE
(
AUDIT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAH_R_PDT1_FK'
ALTER TABLE PPDM_AUDIT_HISTORY ADD CONSTRAINT PAH_R_PDT1_FK FOREIGN KEY
(
DATA_TYPE
)
REFERENCES R_PPDM_DATA_TYPE
(
DATA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAH_R_RP1_FK'
ALTER TABLE PPDM_AUDIT_HISTORY ADD CONSTRAINT PAH_R_RP1_FK FOREIGN KEY
(
RETENTION_PERIOD
)
REFERENCES R_RETENTION_PERIOD
(
RETENTION_PERIOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAHR_BA_FK2'
ALTER TABLE PPDM_AUDIT_HISTORY_REM ADD CONSTRAINT PAHR_BA_FK2 FOREIGN KEY
(
REMARK_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAHR_BA_FK'
ALTER TABLE PPDM_AUDIT_HISTORY_REM ADD CONSTRAINT PAHR_BA_FK FOREIGN KEY
(
REMARK_ABOUT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAHR_BA_FK3'
ALTER TABLE PPDM_AUDIT_HISTORY_REM ADD CONSTRAINT PAHR_BA_FK3 FOREIGN KEY
(
REMARK_FOR_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAHR_PAH_FK'
ALTER TABLE PPDM_AUDIT_HISTORY_REM ADD CONSTRAINT PAHR_PAH_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME,
AUDIT_ROW_GUID,
AUDIT_SEQ_NO
)
REFERENCES PPDM_AUDIT_HISTORY
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME,
AUDIT_ROW_GUID,
AUDIT_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAHR_R_RT2_FK'
ALTER TABLE PPDM_AUDIT_HISTORY_REM ADD CONSTRAINT PAHR_R_RT2_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_REMARK_TYPE
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PAHR_R_RUT1_FK'
ALTER TABLE PPDM_AUDIT_HISTORY_REM ADD CONSTRAINT PAHR_R_RUT1_FK FOREIGN KEY
(
REMARK_USE_TYPE
)
REFERENCES R_REMARK_USE_TYPE
(
REMARK_USE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCCV_PC_FK'
ALTER TABLE PPDM_CHECK_CONS_VALUE ADD CONSTRAINT PCCV_PC_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCCV_PCON_FK'
ALTER TABLE PPDM_CHECK_CONS_VALUE ADD CONSTRAINT PCCV_PCON_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
CONSTRAINT_NAME
)
REFERENCES PPDM_CONSTRAINT
(
SYSTEM_ID,
TABLE_NAME,
CONSTRAINT_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCV_BA_FK'
ALTER TABLE PPDM_CODE_VERSION ADD CONSTRAINT PCV_BA_FK FOREIGN KEY
(
VERSION_OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCV_PT_FK'
ALTER TABLE PPDM_CODE_VERSION ADD CONSTRAINT PCV_PT_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCV_SRCD_FK'
ALTER TABLE PPDM_CODE_VERSION ADD CONSTRAINT PCV_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCVC_PCV_FK'
ALTER TABLE PPDM_CODE_VERSION_COLUMN ADD CONSTRAINT PCVC_PCV_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
SOURCE,
VERSION_OBS_NO
)
REFERENCES PPDM_CODE_VERSION
(
SYSTEM_ID,
TABLE_NAME,
SOURCE,
VERSION_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCVC_PC_FK'
ALTER TABLE PPDM_CODE_VERSION_COLUMN ADD CONSTRAINT PCVC_PC_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCVC_R_LANG_FK'
ALTER TABLE PPDM_CODE_VERSION_COLUMN ADD CONSTRAINT PCVC_R_LANG_FK FOREIGN KEY
(
LANGUAGE
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCVU_BA_FK'
ALTER TABLE PPDM_CODE_VERSION_USE ADD CONSTRAINT PCVU_BA_FK FOREIGN KEY
(
USE_OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCVU_PCV_FK'
ALTER TABLE PPDM_CODE_VERSION_USE ADD CONSTRAINT PCVU_PCV_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
SOURCE,
VERSION_OBS_NO
)
REFERENCES PPDM_CODE_VERSION
(
SYSTEM_ID,
TABLE_NAME,
SOURCE,
VERSION_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCVU_PG_FK'
ALTER TABLE PPDM_CODE_VERSION_USE ADD CONSTRAINT PCVU_PG_FK FOREIGN KEY
(
GROUP_ID
)
REFERENCES PPDM_GROUP
(
GROUP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCVU_PP_FK'
ALTER TABLE PPDM_CODE_VERSION_USE ADD CONSTRAINT PCVU_PP_FK FOREIGN KEY
(
SYSTEM_ID,
PROCEDURE_ID
)
REFERENCES PPDM_PROCEDURE
(
SYSTEM_ID,
PROCEDURE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCVU_PSWA_FK'
ALTER TABLE PPDM_CODE_VERSION_USE ADD CONSTRAINT PCVU_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCVU_SRCD_FK'
ALTER TABLE PPDM_CODE_VERSION_USE ADD CONSTRAINT PCVU_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCVX_PCV_FK'
ALTER TABLE PPDM_CODE_VERSION_XREF ADD CONSTRAINT PCVX_PCV_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
SOURCE,
VERSION_OBS_NO
)
REFERENCES PPDM_CODE_VERSION
(
SYSTEM_ID,
TABLE_NAME,
SOURCE,
VERSION_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCVX_PCV_FK2'
ALTER TABLE PPDM_CODE_VERSION_XREF ADD CONSTRAINT PCVX_PCV_FK2 FOREIGN KEY
(
SYSTEM_ID2,
TABLE_NAME2,
SOURCE2,
VERSION_OBS_NO2
)
REFERENCES PPDM_CODE_VERSION
(
SYSTEM_ID,
TABLE_NAME,
SOURCE,
VERSION_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCVX_R_PCVX_FK'
ALTER TABLE PPDM_CODE_VERSION_XREF ADD CONSTRAINT PCVX_R_PCVX_FK FOREIGN KEY
(
CODE_XREF_TYPE
)
REFERENCES R_CODE_VERSION_XREF_TYPE
(
CODE_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCVX_SRCD_FK'
ALTER TABLE PPDM_CODE_VERSION_XREF ADD CONSTRAINT PCVX_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PC_PC_FK3'
ALTER TABLE PPDM_COLUMN ADD CONSTRAINT PC_PC_FK3 FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
CONTROL_COLUMN_NAME
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PC_PC_FK'
ALTER TABLE PPDM_COLUMN ADD CONSTRAINT PC_PC_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
UOM_COLUMN_NAME
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PC_PC_FK2'
ALTER TABLE PPDM_COLUMN ADD CONSTRAINT PC_PC_FK2 FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
OUOM_COLUMN_NAME
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PC_PD_FK'
ALTER TABLE PPDM_COLUMN ADD CONSTRAINT PC_PD_FK FOREIGN KEY
(
DOMAIN
)
REFERENCES PPDM_DOMAIN
(
DOMAIN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PC_PT_FK'
ALTER TABLE PPDM_COLUMN ADD CONSTRAINT PC_PT_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PC_R_PCM_FK'
ALTER TABLE PPDM_COLUMN ADD CONSTRAINT PC_R_PCM_FK FOREIGN KEY
(
COLUMN_KEY_METHOD
)
REFERENCES R_PPDM_CREATE_METHOD
(
CREATE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PC_R_PDT1_FK'
ALTER TABLE PPDM_COLUMN ADD CONSTRAINT PC_R_PDT1_FK FOREIGN KEY
(
DATA_TYPE
)
REFERENCES R_PPDM_DATA_TYPE
(
DATA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PC_R_PDV_FK'
ALTER TABLE PPDM_COLUMN ADD CONSTRAINT PC_R_PDV_FK FOREIGN KEY
(
DEFAULT_VALUE_METHOD
)
REFERENCES R_PPDM_DEFAULT_VALUE
(
DEFAULT_VALUE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCAL_BA_FK'
ALTER TABLE PPDM_COLUMN_ALIAS ADD CONSTRAINT PCAL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCAL_PC_FK'
ALTER TABLE PPDM_COLUMN_ALIAS ADD CONSTRAINT PCAL_PC_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCAL_PSWA_FK'
ALTER TABLE PPDM_COLUMN_ALIAS ADD CONSTRAINT PCAL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCAL_R_ART_FK'
ALTER TABLE PPDM_COLUMN_ALIAS ADD CONSTRAINT PCAL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCAL_R_ATY_FK'
ALTER TABLE PPDM_COLUMN_ALIAS ADD CONSTRAINT PCAL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCAL_R_LANG_FK'
ALTER TABLE PPDM_COLUMN_ALIAS ADD CONSTRAINT PCAL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCAL_SRCD_FK'
ALTER TABLE PPDM_COLUMN_ALIAS ADD CONSTRAINT PCAL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCON_PCON_FK'
ALTER TABLE PPDM_CONSTRAINT ADD CONSTRAINT PCON_PCON_FK FOREIGN KEY
(
REFERENCED_SYSTEM_ID,
REFERENCED_TABLE_NAME,
REFERENCED_CONSTRAINT_NAME
)
REFERENCES PPDM_CONSTRAINT
(
SYSTEM_ID,
TABLE_NAME,
CONSTRAINT_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCON_PT_FK'
ALTER TABLE PPDM_CONSTRAINT ADD CONSTRAINT PCON_PT_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCC_PC_FK'
ALTER TABLE PPDM_CONS_COLUMN ADD CONSTRAINT PCC_PC_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCC_PCON_FK'
ALTER TABLE PPDM_CONS_COLUMN ADD CONSTRAINT PCC_PCON_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
CONSTRAINT_NAME
)
REFERENCES PPDM_CONSTRAINT
(
SYSTEM_ID,
TABLE_NAME,
CONSTRAINT_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PCC_PCC_FK'
ALTER TABLE PPDM_CONS_COLUMN ADD CONSTRAINT PCC_PCC_FK FOREIGN KEY
(
REFERENCED_SYSTEM_ID,
REFERENCED_TABLE_NAME,
REFERENCED_CONSTRAINT_NAME,
REFERENCED_COLUMN_NAME
)
REFERENCES PPDM_CONS_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
CONSTRAINT_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDS_PMS_FK'
ALTER TABLE PPDM_DATA_STORE ADD CONSTRAINT PDS_PMS_FK FOREIGN KEY
(
UOM_SYSTEM
)
REFERENCES PPDM_MEASUREMENT_SYSTEM
(
UOM_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PD_PQ_FK'
ALTER TABLE PPDM_DOMAIN ADD CONSTRAINT PD_PQ_FK FOREIGN KEY
(
DOMAIN_QUANTITY_TYPE
)
REFERENCES PPDM_QUANTITY
(
QUANTITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PE_PT_FK'
ALTER TABLE PPDM_EXCEPTION ADD CONSTRAINT PE_PT_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PG_PMS_FK'
ALTER TABLE PPDM_GROUP ADD CONSTRAINT PG_PMS_FK FOREIGN KEY
(
DEFAULT_UNIT_SYSTEM_ID
)
REFERENCES PPDM_MEASUREMENT_SYSTEM
(
UOM_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PG_PSWA_FK'
ALTER TABLE PPDM_GROUP ADD CONSTRAINT PG_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PG_R_PPGT_FK'
ALTER TABLE PPDM_GROUP ADD CONSTRAINT PG_R_PPGT_FK FOREIGN KEY
(
GROUP_TYPE
)
REFERENCES R_PPDM_GROUP_TYPE
(
GROUP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGOB_PCV_FK'
ALTER TABLE PPDM_GROUP_OBJECT ADD CONSTRAINT PGOB_PCV_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
CODE_VERSION_SOURCE,
CODE_VERSION_OBS_NO
)
REFERENCES PPDM_CODE_VERSION
(
SYSTEM_ID,
TABLE_NAME,
SOURCE,
VERSION_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGOB_PC_FK'
ALTER TABLE PPDM_GROUP_OBJECT ADD CONSTRAINT PGOB_PC_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGOB_PCAL_FK'
ALTER TABLE PPDM_GROUP_OBJECT ADD CONSTRAINT PGOB_PCAL_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME,
COLUMN_ALIAS_ID
)
REFERENCES PPDM_COLUMN_ALIAS
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME,
COLUMN_ALIAS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGOB_PCON_FK'
ALTER TABLE PPDM_GROUP_OBJECT ADD CONSTRAINT PGOB_PCON_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
CONSTRAINT_NAME
)
REFERENCES PPDM_CONSTRAINT
(
SYSTEM_ID,
TABLE_NAME,
CONSTRAINT_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGOB_PG_FK'
ALTER TABLE PPDM_GROUP_OBJECT ADD CONSTRAINT PGOB_PG_FK FOREIGN KEY
(
GROUP_ID
)
REFERENCES PPDM_GROUP
(
GROUP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGOB_PI_FK'
ALTER TABLE PPDM_GROUP_OBJECT ADD CONSTRAINT PGOB_PI_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
INDEX_ID
)
REFERENCES PPDM_INDEX
(
SYSTEM_ID,
TABLE_NAME,
INDEX_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGOB_PP_FK'
ALTER TABLE PPDM_GROUP_OBJECT ADD CONSTRAINT PGOB_PP_FK FOREIGN KEY
(
SYSTEM_ID,
PROCEDURE_ID
)
REFERENCES PPDM_PROCEDURE
(
SYSTEM_ID,
PROCEDURE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGOB_PPS_FK'
ALTER TABLE PPDM_GROUP_OBJECT ADD CONSTRAINT PGOB_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGOB_PR_FK'
ALTER TABLE PPDM_GROUP_OBJECT ADD CONSTRAINT PGOB_PR_FK FOREIGN KEY
(
RULE_ID
)
REFERENCES PPDM_RULE
(
RULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGOB_PSWA_FK'
ALTER TABLE PPDM_GROUP_OBJECT ADD CONSTRAINT PGOB_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGOB_PSYS_FK'
ALTER TABLE PPDM_GROUP_OBJECT ADD CONSTRAINT PGOB_PSYS_FK FOREIGN KEY
(
SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGOB_PT_FK'
ALTER TABLE PPDM_GROUP_OBJECT ADD CONSTRAINT PGOB_PT_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGOB_PTA_FK'
ALTER TABLE PPDM_GROUP_OBJECT ADD CONSTRAINT PGOB_PTA_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
TABLE_ALIAS
)
REFERENCES PPDM_TABLE_ALIAS
(
SYSTEM_ID,
TABLE_NAME,
TABLE_ALIAS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGOB_R_COL_FK2'
ALTER TABLE PPDM_GROUP_OBJECT ADD CONSTRAINT PGOB_R_COL_FK2 FOREIGN KEY
(
OUTPUT_FONT_COLOR
)
REFERENCES R_COLOR
(
COLOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGOB_R_COL_FK'
ALTER TABLE PPDM_GROUP_OBJECT ADD CONSTRAINT PGOB_R_COL_FK FOREIGN KEY
(
OUTPUT_FONT_BACKGR_COLOR
)
REFERENCES R_COLOR
(
COLOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGOB_R_F_FK'
ALTER TABLE PPDM_GROUP_OBJECT ADD CONSTRAINT PGOB_R_F_FK FOREIGN KEY
(
OUTPUT_FONT
)
REFERENCES R_FONT
(
FONT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGOB_R_FE_FK'
ALTER TABLE PPDM_GROUP_OBJECT ADD CONSTRAINT PGOB_R_FE_FK FOREIGN KEY
(
OUTPUT_FONT_EFFECT
)
REFERENCES R_FONT_EFFECT
(
FONT_EFFECT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGOB_R_PPGU_FK'
ALTER TABLE PPDM_GROUP_OBJECT ADD CONSTRAINT PGOB_R_PPGU_FK FOREIGN KEY
(
GROUP_USE
)
REFERENCES R_PPDM_GROUP_USE
(
GROUP_USE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGOB_R_POBT_FK'
ALTER TABLE PPDM_GROUP_OBJECT ADD CONSTRAINT PGOB_R_POBT_FK FOREIGN KEY
(
OBJECT_TYPE
)
REFERENCES R_PPDM_OBJECT_TYPE
(
OBJECT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGO_BAO_FK'
ALTER TABLE PPDM_GROUP_OWNER ADD CONSTRAINT PGO_BAO_FK FOREIGN KEY
(
OWNER_BA_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGO_BA_FK'
ALTER TABLE PPDM_GROUP_OWNER ADD CONSTRAINT PGO_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGO_PG_FK'
ALTER TABLE PPDM_GROUP_OWNER ADD CONSTRAINT PGO_PG_FK FOREIGN KEY
(
GROUP_ID
)
REFERENCES PPDM_GROUP
(
GROUP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGO_PMS_FK'
ALTER TABLE PPDM_GROUP_OWNER ADD CONSTRAINT PGO_PMS_FK FOREIGN KEY
(
DEFAULT_UNIT_SYSTEM_ID
)
REFERENCES PPDM_MEASUREMENT_SYSTEM
(
UOM_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGO_PSWA_FK'
ALTER TABLE PPDM_GROUP_OWNER ADD CONSTRAINT PGO_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGO_R_POR_FK'
ALTER TABLE PPDM_GROUP_OWNER ADD CONSTRAINT PGO_R_POR_FK FOREIGN KEY
(
OWNER_ROLE
)
REFERENCES R_PPDM_OWNER_ROLE
(
OWNER_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGR_BAO_FK'
ALTER TABLE PPDM_GROUP_REMARK ADD CONSTRAINT PGR_BAO_FK FOREIGN KEY
(
MADE_BY_BA_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGR_BA_FK'
ALTER TABLE PPDM_GROUP_REMARK ADD CONSTRAINT PGR_BA_FK FOREIGN KEY
(
MADE_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGR_PG_FK'
ALTER TABLE PPDM_GROUP_REMARK ADD CONSTRAINT PGR_PG_FK FOREIGN KEY
(
GROUP_ID
)
REFERENCES PPDM_GROUP
(
GROUP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGR_R_RT2_FK'
ALTER TABLE PPDM_GROUP_REMARK ADD CONSTRAINT PGR_R_RT2_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_REMARK_TYPE
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGX_BA_FK'
ALTER TABLE PPDM_GROUP_XREF ADD CONSTRAINT PGX_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGX_PG_FK'
ALTER TABLE PPDM_GROUP_XREF ADD CONSTRAINT PGX_PG_FK FOREIGN KEY
(
CHILD_GROUP_ID
)
REFERENCES PPDM_GROUP
(
GROUP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGX_PG_FK2'
ALTER TABLE PPDM_GROUP_XREF ADD CONSTRAINT PGX_PG_FK2 FOREIGN KEY
(
PARENT_GROUP_ID
)
REFERENCES PPDM_GROUP
(
GROUP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGX_PSWA_FK'
ALTER TABLE PPDM_GROUP_XREF ADD CONSTRAINT PGX_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PGX_R_PGXT_FK'
ALTER TABLE PPDM_GROUP_XREF ADD CONSTRAINT PGX_R_PGXT_FK FOREIGN KEY
(
GROUP_XREF_TYPE
)
REFERENCES R_PPDM_GROUP_XREF_TYPE
(
GROUP_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PI_PT_FK'
ALTER TABLE PPDM_INDEX ADD CONSTRAINT PI_PT_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PI_R_PIC_FK'
ALTER TABLE PPDM_INDEX ADD CONSTRAINT PI_R_PIC_FK FOREIGN KEY
(
INDEX_CATEGORY
)
REFERENCES R_PPDM_INDEX_CATEGORY
(
INDEX_CATEGORY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PIC_PC_FK'
ALTER TABLE PPDM_INDEX_COLUMN ADD CONSTRAINT PIC_PC_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PIC_PI_FK'
ALTER TABLE PPDM_INDEX_COLUMN ADD CONSTRAINT PIC_PI_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
INDEX_ID
)
REFERENCES PPDM_INDEX
(
SYSTEM_ID,
TABLE_NAME,
INDEX_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDM_BA_FK'
ALTER TABLE PPDM_MAP_DETAIL ADD CONSTRAINT PDM_BA_FK FOREIGN KEY
(
MAP_OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDM_PC_FK2'
ALTER TABLE PPDM_MAP_DETAIL ADD CONSTRAINT PDM_PC_FK2 FOREIGN KEY
(
SYSTEM_ID2,
TABLE_NAME2,
COLUMN_NAME2
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDM_PC_FK'
ALTER TABLE PPDM_MAP_DETAIL ADD CONSTRAINT PDM_PC_FK FOREIGN KEY
(
SYSTEM_ID1,
TABLE_NAME1,
COLUMN_NAME1
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDM_PSE_FK'
ALTER TABLE PPDM_MAP_DETAIL ADD CONSTRAINT PDM_PSE_FK FOREIGN KEY
(
SYSTEM_ID1,
SCHEMA_ENTITY_ID1
)
REFERENCES PPDM_SCHEMA_ENTITY
(
SYSTEM_ID,
SCHEMA_ENTITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDM_PSE_FK2'
ALTER TABLE PPDM_MAP_DETAIL ADD CONSTRAINT PDM_PSE_FK2 FOREIGN KEY
(
SYSTEM_ID2,
SCHEMA_ENTITY_ID2
)
REFERENCES PPDM_SCHEMA_ENTITY
(
SYSTEM_ID,
SCHEMA_ENTITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDM_PSWA_FK'
ALTER TABLE PPDM_MAP_DETAIL ADD CONSTRAINT PDM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDM_PSM_FK'
ALTER TABLE PPDM_MAP_DETAIL ADD CONSTRAINT PDM_PSM_FK FOREIGN KEY
(
MAP_ID
)
REFERENCES PPDM_SYSTEM_MAP
(
MAP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDM_PT_FK2'
ALTER TABLE PPDM_MAP_DETAIL ADD CONSTRAINT PDM_PT_FK2 FOREIGN KEY
(
SYSTEM_ID2,
TABLE_NAME2
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDM_PT_FK'
ALTER TABLE PPDM_MAP_DETAIL ADD CONSTRAINT PDM_PT_FK FOREIGN KEY
(
SYSTEM_ID1,
TABLE_NAME1
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDM_R_PCM_FK'
ALTER TABLE PPDM_MAP_DETAIL ADD CONSTRAINT PDM_R_PCM_FK FOREIGN KEY
(
CREATE_METHOD
)
REFERENCES R_PPDM_CREATE_METHOD
(
CREATE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PDM_R_PMT_FK'
ALTER TABLE PPDM_MAP_DETAIL ADD CONSTRAINT PDM_R_PMT_FK FOREIGN KEY
(
MAP_TYPE
)
REFERENCES R_PPDM_MAP_TYPE
(
MAP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMLD_PG_FK'
ALTER TABLE PPDM_MAP_LOAD ADD CONSTRAINT PMLD_PG_FK FOREIGN KEY
(
PPDM_GROUP_ID
)
REFERENCES PPDM_GROUP
(
GROUP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMLD_PP_FK'
ALTER TABLE PPDM_MAP_LOAD ADD CONSTRAINT PMLD_PP_FK FOREIGN KEY
(
SOURCE_SYSTEM_ID,
PROCEDURE_ID
)
REFERENCES PPDM_PROCEDURE
(
SYSTEM_ID,
PROCEDURE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMLD_PSWA_FK'
ALTER TABLE PPDM_MAP_LOAD ADD CONSTRAINT PMLD_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMLD_PSYS_FK2'
ALTER TABLE PPDM_MAP_LOAD ADD CONSTRAINT PMLD_PSYS_FK2 FOREIGN KEY
(
TARGET_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMLD_PSYS_FK'
ALTER TABLE PPDM_MAP_LOAD ADD CONSTRAINT PMLD_PSYS_FK FOREIGN KEY
(
SOURCE_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMLD_PSM_FK'
ALTER TABLE PPDM_MAP_LOAD ADD CONSTRAINT PMLD_PSM_FK FOREIGN KEY
(
MAP_ID
)
REFERENCES PPDM_SYSTEM_MAP
(
MAP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMLDE_PDM_FK'
ALTER TABLE PPDM_MAP_LOAD_ERROR ADD CONSTRAINT PMLDE_PDM_FK FOREIGN KEY
(
MAP_ID,
REF_MAP_DETAIL_OBS_NO
)
REFERENCES PPDM_MAP_DETAIL
(
MAP_ID,
MAP_DETAIL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMLDE_PSM_FK'
ALTER TABLE PPDM_MAP_LOAD_ERROR ADD CONSTRAINT PMLDE_PSM_FK FOREIGN KEY
(
MAP_ID
)
REFERENCES PPDM_SYSTEM_MAP
(
MAP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMR_BA_FK'
ALTER TABLE PPDM_MAP_RULE ADD CONSTRAINT PMR_BA_FK FOREIGN KEY
(
RULE_OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMR_PC_FK'
ALTER TABLE PPDM_MAP_RULE ADD CONSTRAINT PMR_PC_FK FOREIGN KEY
(
DEP_SYSTEM_ID,
DEP_TABLE_NAME,
DEP_COLUMN_NAME
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMR_PDM_FK'
ALTER TABLE PPDM_MAP_RULE ADD CONSTRAINT PMR_PDM_FK FOREIGN KEY
(
MAP_ID,
MAP_DETAIL_OBS_NO
)
REFERENCES PPDM_MAP_DETAIL
(
MAP_ID,
MAP_DETAIL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMR_PP_FK'
ALTER TABLE PPDM_MAP_RULE ADD CONSTRAINT PMR_PP_FK FOREIGN KEY
(
PROCEDURE_SYSTEM_ID,
PROCEDURE_ID
)
REFERENCES PPDM_PROCEDURE
(
SYSTEM_ID,
PROCEDURE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMR_PSE_FK'
ALTER TABLE PPDM_MAP_RULE ADD CONSTRAINT PMR_PSE_FK FOREIGN KEY
(
DEP_SYSTEM_ID,
DEP_SCHEMA_ENTITY_ID
)
REFERENCES PPDM_SCHEMA_ENTITY
(
SYSTEM_ID,
SCHEMA_ENTITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMR_PSWA_FK'
ALTER TABLE PPDM_MAP_RULE ADD CONSTRAINT PMR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMR_PT_FK'
ALTER TABLE PPDM_MAP_RULE ADD CONSTRAINT PMR_PT_FK FOREIGN KEY
(
DEP_SYSTEM_ID,
DEP_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMR_R_PCM_FK'
ALTER TABLE PPDM_MAP_RULE ADD CONSTRAINT PMR_R_PCM_FK FOREIGN KEY
(
CREATE_METHOD
)
REFERENCES R_PPDM_CREATE_METHOD
(
CREATE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMR_R_PMRT_FK'
ALTER TABLE PPDM_MAP_RULE ADD CONSTRAINT PMR_R_PMRT_FK FOREIGN KEY
(
MAP_RULE_TYPE
)
REFERENCES R_PPDM_MAP_RULE_TYPE
(
MAP_RULE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMS_SRCD_FK'
ALTER TABLE PPDM_MEASUREMENT_SYSTEM ADD CONSTRAINT PMS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PM_BAO_FK'
ALTER TABLE PPDM_METRIC ADD CONSTRAINT PM_BAO_FK FOREIGN KEY
(
OWNER_BA_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PM_BA_FK'
ALTER TABLE PPDM_METRIC ADD CONSTRAINT PM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PM_PP_FK'
ALTER TABLE PPDM_METRIC ADD CONSTRAINT PM_PP_FK FOREIGN KEY
(
PROCEDURE_SYSTEM_ID,
PROCEDURE_ID
)
REFERENCES PPDM_PROCEDURE
(
SYSTEM_ID,
PROCEDURE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PM_R_PMT1_FK'
ALTER TABLE PPDM_METRIC ADD CONSTRAINT PM_R_PMT1_FK FOREIGN KEY
(
METRIC_TYPE
)
REFERENCES R_PPDM_METRIC_TYPE
(
METRIC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_ANLR_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_APP_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_A_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_BAAU_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_BAE_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_BALIC_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_BALIC_FK FOREIGN KEY
(
BA_LICENSEE_BA_ID,
BA_LICENSE_ID
)
REFERENCES BA_LICENSE
(
LICENSEE_BA_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_BAO_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_BA_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_CA_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_CEQ_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_CLSL_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_CON_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_CO_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_COT_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_C_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_EZ_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_ENT_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_EQ_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_FAC_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_FACL_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_FACL_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE,
FACILITY_LICENSE_ID
)
REFERENCES FACILITY_LICENSE
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_FLD_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_FIN_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_FOS_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_HI_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_INS_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_INT_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_LR_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_LS_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_LIL_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_NOTI_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_OB_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_PASU_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_PDE_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_PL_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_PC_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_PC_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME,
PPDM_COLUMN_NAME
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_PM_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_PM_FK FOREIGN KEY
(
METRIC_ID
)
REFERENCES PPDM_METRIC
(
METRIC_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_PMV_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_PMV_FK FOREIGN KEY
(
METRIC_ID,
METRIC_OBS_NO
)
REFERENCES PPDM_METRIC_VALUE
(
METRIC_ID,
METRIC_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_PSE_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_PSE_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
SCHEMA_ENTITY_ID
)
REFERENCES PPDM_SCHEMA_ENTITY
(
SYSTEM_ID,
SCHEMA_ENTITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_PSWA_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_PSYS_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_PT_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_PS_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_PS_FK FOREIGN KEY
(
PR_STR_UWI,
PR_STR_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_PROJ_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_RATE_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_RSCL_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_RSE_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_REST_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_REST_FK FOREIGN KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION
)
REFERENCES RESTRICTION
(
RESTRICTION_ID,
RESTRICTION_VERSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_RMDSS_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_RMII_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_RMPI_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_RMTW_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_R_PMCT_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_R_PMCT_FK FOREIGN KEY
(
METRIC_COMPONENT_TYPE
)
REFERENCES R_PPDM_METRIC_COMP_TYPE
(
METRIC_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_SLIC_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_SLIC_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_LICENSE_ID
)
REFERENCES SEIS_LICENSE
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_SS_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_SF_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_SPD_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_STFST_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_STU_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_SUB_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_W_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_WAC_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_WAC_FK FOREIGN KEY
(
WELL_ACTIVITY_UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_WLIC_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_WLIC_FK FOREIGN KEY
(
UWI,
WELL_LICENSE_SOURCE,
WELL_LICENSE_ID
)
REFERENCES WELL_LICENSE
(
UWI,
SOURCE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_WSET_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMC_WO_FK'
ALTER TABLE PPDM_METRIC_COMPONENT ADD CONSTRAINT PMC_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMV_PM_FK'
ALTER TABLE PPDM_METRIC_VALUE ADD CONSTRAINT PMV_PM_FK FOREIGN KEY
(
METRIC_ID
)
REFERENCES PPDM_METRIC
(
METRIC_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMV_R_PMC_FK'
ALTER TABLE PPDM_METRIC_VALUE ADD CONSTRAINT PMV_R_PMC_FK FOREIGN KEY
(
METRIC_TYPE,
METRIC_CODE
)
REFERENCES R_PPDM_METRIC_CODE
(
METRIC_TYPE,
METRIC_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMV_R_PMRV_FK'
ALTER TABLE PPDM_METRIC_VALUE ADD CONSTRAINT PMV_R_PMRV_FK FOREIGN KEY
(
REFERENCE_VALUE_TYPE
)
REFERENCES R_PPDM_METRIC_REF_VALUE
(
REFERENCE_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PMV_R_PMT1_FK'
ALTER TABLE PPDM_METRIC_VALUE ADD CONSTRAINT PMV_R_PMT1_FK FOREIGN KEY
(
METRIC_TYPE
)
REFERENCES R_PPDM_METRIC_TYPE
(
METRIC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT POS_PCV_FK'
ALTER TABLE PPDM_OBJECT_STATUS ADD CONSTRAINT POS_PCV_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
CODE_VERSION_SOURCE,
CODE_VERSION_OBS_NO
)
REFERENCES PPDM_CODE_VERSION
(
SYSTEM_ID,
TABLE_NAME,
SOURCE,
VERSION_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT POS_PC_FK'
ALTER TABLE PPDM_OBJECT_STATUS ADD CONSTRAINT POS_PC_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT POS_PCON_FK'
ALTER TABLE PPDM_OBJECT_STATUS ADD CONSTRAINT POS_PCON_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
CONSTRAINT_NAME
)
REFERENCES PPDM_CONSTRAINT
(
SYSTEM_ID,
TABLE_NAME,
CONSTRAINT_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT POS_PI_FK'
ALTER TABLE PPDM_OBJECT_STATUS ADD CONSTRAINT POS_PI_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
INDEX_ID
)
REFERENCES PPDM_INDEX
(
SYSTEM_ID,
TABLE_NAME,
INDEX_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT POS_PP_FK'
ALTER TABLE PPDM_OBJECT_STATUS ADD CONSTRAINT POS_PP_FK FOREIGN KEY
(
SYSTEM_ID,
PROCEDURE_ID
)
REFERENCES PPDM_PROCEDURE
(
SYSTEM_ID,
PROCEDURE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT POS_PPS_FK'
ALTER TABLE PPDM_OBJECT_STATUS ADD CONSTRAINT POS_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT POS_PR_FK'
ALTER TABLE PPDM_OBJECT_STATUS ADD CONSTRAINT POS_PR_FK FOREIGN KEY
(
RULE_ID
)
REFERENCES PPDM_RULE
(
RULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT POS_PSYS_FK'
ALTER TABLE PPDM_OBJECT_STATUS ADD CONSTRAINT POS_PSYS_FK FOREIGN KEY
(
SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT POS_PT_FK'
ALTER TABLE PPDM_OBJECT_STATUS ADD CONSTRAINT POS_PT_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT POS_R_POBS_FK'
ALTER TABLE PPDM_OBJECT_STATUS ADD CONSTRAINT POS_R_POBS_FK FOREIGN KEY
(
OBJECT_STATUS
)
REFERENCES R_PPDM_OBJECT_STATUS
(
OBJECT_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT POS_R_POBT_FK'
ALTER TABLE PPDM_OBJECT_STATUS ADD CONSTRAINT POS_R_POBT_FK FOREIGN KEY
(
OBJECT_TYPE
)
REFERENCES R_PPDM_OBJECT_TYPE
(
OBJECT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PP_PSYS_FK'
ALTER TABLE PPDM_PROCEDURE ADD CONSTRAINT PP_PSYS_FK FOREIGN KEY
(
SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PP_PT_FK'
ALTER TABLE PPDM_PROCEDURE ADD CONSTRAINT PP_PT_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PP_R_PPT_FK'
ALTER TABLE PPDM_PROCEDURE ADD CONSTRAINT PP_R_PPT_FK FOREIGN KEY
(
PROCEDURE_TYPE
)
REFERENCES R_PPDM_PROC_TYPE
(
PROCEDURE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PPCOL_PC_FK'
ALTER TABLE PPDM_PROPERTY_COLUMN ADD CONSTRAINT PPCOL_PC_FK FOREIGN KEY
(
USE_SYSTEM_ID,
USE_TABLE_NAME,
USE_COLUMN_NAME
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PPCOL_PD_FK'
ALTER TABLE PPDM_PROPERTY_COLUMN ADD CONSTRAINT PPCOL_PD_FK FOREIGN KEY
(
DOMAIN
)
REFERENCES PPDM_DOMAIN
(
DOMAIN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PPCOL_PPS_FK'
ALTER TABLE PPDM_PROPERTY_COLUMN ADD CONSTRAINT PPCOL_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PPCOL_PQ_FK'
ALTER TABLE PPDM_PROPERTY_COLUMN ADD CONSTRAINT PPCOL_PQ_FK FOREIGN KEY
(
QUANTITY_TYPE
)
REFERENCES PPDM_QUANTITY
(
QUANTITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PPCOL_PT_FK'
ALTER TABLE PPDM_PROPERTY_COLUMN ADD CONSTRAINT PPCOL_PT_FK FOREIGN KEY
(
REFERENCED_SYSTEM_ID,
REFERENCED_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PPCOL_R_PDT1_FK'
ALTER TABLE PPDM_PROPERTY_COLUMN ADD CONSTRAINT PPCOL_R_PDT1_FK FOREIGN KEY
(
DATA_TYPE
)
REFERENCES R_PPDM_DATA_TYPE
(
DATA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PPS_PT_FK'
ALTER TABLE PPDM_PROPERTY_SET ADD CONSTRAINT PPS_PT_FK FOREIGN KEY
(
USE_SYSTEM_ID,
USE_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PQC_BA_FK'
ALTER TABLE PPDM_QUALITY_CONTROL ADD CONSTRAINT PQC_BA_FK FOREIGN KEY
(
CHECKED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PQC_BA_FK2'
ALTER TABLE PPDM_QUALITY_CONTROL ADD CONSTRAINT PQC_BA_FK2 FOREIGN KEY
(
DONE_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PQC_PC_FK'
ALTER TABLE PPDM_QUALITY_CONTROL ADD CONSTRAINT PQC_PC_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PQC_PT_FK'
ALTER TABLE PPDM_QUALITY_CONTROL ADD CONSTRAINT PQC_PT_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PQC_R_PDT1_FK'
ALTER TABLE PPDM_QUALITY_CONTROL ADD CONSTRAINT PQC_R_PDT1_FK FOREIGN KEY
(
DATA_TYPE
)
REFERENCES R_PPDM_DATA_TYPE
(
DATA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PQC_R_PQCS_FK'
ALTER TABLE PPDM_QUALITY_CONTROL ADD CONSTRAINT PQC_R_PQCS_FK FOREIGN KEY
(
QC_STATUS
)
REFERENCES R_PPDM_QC_STATUS
(
QC_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PQC_R_PQCT_FK'
ALTER TABLE PPDM_QUALITY_CONTROL ADD CONSTRAINT PQC_R_PQCT_FK FOREIGN KEY
(
QC_TYPE
)
REFERENCES R_PPDM_QC_TYPE
(
QC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PQC_R_RP1_FK'
ALTER TABLE PPDM_QUALITY_CONTROL ADD CONSTRAINT PQC_R_RP1_FK FOREIGN KEY
(
RETENTION_PERIOD
)
REFERENCES R_RETENTION_PERIOD
(
RETENTION_PERIOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PQ_SRCD_FK'
ALTER TABLE PPDM_QUANTITY ADD CONSTRAINT PQ_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PQA_BA_FK'
ALTER TABLE PPDM_QUANTITY_ALIAS ADD CONSTRAINT PQA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PQA_PQ_FK'
ALTER TABLE PPDM_QUANTITY_ALIAS ADD CONSTRAINT PQA_PQ_FK FOREIGN KEY
(
QUANTITY_TYPE
)
REFERENCES PPDM_QUANTITY
(
QUANTITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PQA_PSWA_FK'
ALTER TABLE PPDM_QUANTITY_ALIAS ADD CONSTRAINT PQA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PQA_R_ART_FK'
ALTER TABLE PPDM_QUANTITY_ALIAS ADD CONSTRAINT PQA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PQA_R_ATY_FK'
ALTER TABLE PPDM_QUANTITY_ALIAS ADD CONSTRAINT PQA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PQA_R_LANG_FK'
ALTER TABLE PPDM_QUANTITY_ALIAS ADD CONSTRAINT PQA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PQA_SRCD_FK'
ALTER TABLE PPDM_QUANTITY_ALIAS ADD CONSTRAINT PQA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PR_R_PRC_FK'
ALTER TABLE PPDM_RULE ADD CONSTRAINT PR_R_PRC_FK FOREIGN KEY
(
RULE_CLASS
)
REFERENCES R_PPDM_RULE_CLASS
(
RULE_CLASS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PR_R_PRP_FK'
ALTER TABLE PPDM_RULE ADD CONSTRAINT PR_R_PRP_FK FOREIGN KEY
(
RULE_PURPOSE
)
REFERENCES R_PPDM_RULE_PURPOSE
(
RULE_PURPOSE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PR_R_PRS_FK'
ALTER TABLE PPDM_RULE ADD CONSTRAINT PR_R_PRS_FK FOREIGN KEY
(
CURRENT_STATUS
)
REFERENCES R_PPDM_RULE_STATUS
(
RULE_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PR_R_PRUC_FK'
ALTER TABLE PPDM_RULE ADD CONSTRAINT PR_R_PRUC_FK FOREIGN KEY
(
USE_CONDITION_TYPE
)
REFERENCES R_PPDM_RULE_USE_COND
(
USE_CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRA_BA_FK'
ALTER TABLE PPDM_RULE_ALIAS ADD CONSTRAINT PRA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRA_PR_FK'
ALTER TABLE PPDM_RULE_ALIAS ADD CONSTRAINT PRA_PR_FK FOREIGN KEY
(
RULE_ID
)
REFERENCES PPDM_RULE
(
RULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRA_PSWA_FK'
ALTER TABLE PPDM_RULE_ALIAS ADD CONSTRAINT PRA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRA_R_ART_FK'
ALTER TABLE PPDM_RULE_ALIAS ADD CONSTRAINT PRA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRA_R_ATY_FK'
ALTER TABLE PPDM_RULE_ALIAS ADD CONSTRAINT PRA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRA_R_LANG_FK'
ALTER TABLE PPDM_RULE_ALIAS ADD CONSTRAINT PRA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRA_SRCD_FK'
ALTER TABLE PPDM_RULE_ALIAS ADD CONSTRAINT PRA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_ANLR_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_APP_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_A_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_BAAU_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_BAE_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_BALIC_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_BALIC_FK FOREIGN KEY
(
BA_LICENSEE_BA_ID,
BA_LICENSE_ID
)
REFERENCES BA_LICENSE
(
LICENSEE_BA_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_BAO_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_BA_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_CA_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_CEQ_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_CLSL_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_CON_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_CO_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_COT_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_C_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_EZ_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_ENT_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_EQ_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_FAC_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_FACL_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_FACL_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE,
FACILITY_LICENSE_ID
)
REFERENCES FACILITY_LICENSE
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_FLD_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_FIN_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_FOS_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_HI_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_INS_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_INT_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_LR_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_LS_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_LIL_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_NOTI_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_OB_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_PASU_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_PDE_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_PL_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_PC_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_PC_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME,
PPDM_COLUMN_NAME
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_PR_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_PR_FK FOREIGN KEY
(
RULE_ID
)
REFERENCES PPDM_RULE
(
RULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_PSE_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_PSE_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
SCHEMA_ENTITY_ID
)
REFERENCES PPDM_SCHEMA_ENTITY
(
SYSTEM_ID,
SCHEMA_ENTITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_PSWA_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_PSYS_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_PT_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_PS_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_PS_FK FOREIGN KEY
(
PR_STR_UWI,
PR_STR_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_PROJ_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_RATE_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_RSCL_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_RSE_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_REST_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_REST_FK FOREIGN KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION
)
REFERENCES RESTRICTION
(
RESTRICTION_ID,
RESTRICTION_VERSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_RMDSS_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_RMII_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_RMPI_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_RMTW_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_R_PRCT1_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_R_PRCT1_FK FOREIGN KEY
(
RULE_COMPONENT_TYPE
)
REFERENCES R_PPDM_RULE_COMP_TYPE
(
RULE_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_SLIC_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_SLIC_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_LICENSE_ID
)
REFERENCES SEIS_LICENSE
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_SS_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_SF_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_SPD_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_STFST_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_STU_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_SUB_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_W_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_WAC_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_WAC_FK FOREIGN KEY
(
WELL_ACTIVITY_UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_WLIC_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_WLIC_FK FOREIGN KEY
(
UWI,
WELL_LICENSE_SOURCE,
WELL_LICENSE_ID
)
REFERENCES WELL_LICENSE
(
UWI,
SOURCE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_WSET_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRC_WO_FK'
ALTER TABLE PPDM_RULE_COMPONENT ADD CONSTRAINT PRC_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRD_PC_FK'
ALTER TABLE PPDM_RULE_DETAIL ADD CONSTRAINT PRD_PC_FK FOREIGN KEY
(
REFERENCE_SYSTEM_ID,
REFERENCE_TABLE_NAME,
REFERENCED_COLUMN_NAME
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRD_PC_FK2'
ALTER TABLE PPDM_RULE_DETAIL ADD CONSTRAINT PRD_PC_FK2 FOREIGN KEY
(
REFERENCE_SYSTEM_ID,
REFERENCE_TABLE_NAME2,
REFERENCE_COLUMN_NAME2
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRD_PR_FK'
ALTER TABLE PPDM_RULE_DETAIL ADD CONSTRAINT PRD_PR_FK FOREIGN KEY
(
RULE_ID
)
REFERENCES PPDM_RULE
(
RULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRD_PT_FK'
ALTER TABLE PPDM_RULE_DETAIL ADD CONSTRAINT PRD_PT_FK FOREIGN KEY
(
REFERENCE_SYSTEM_ID,
REFERENCE_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRD_R_PBRL_FK'
ALTER TABLE PPDM_RULE_DETAIL ADD CONSTRAINT PRD_R_PBRL_FK FOREIGN KEY
(
BOOLEAN_RULE
)
REFERENCES R_PPDM_BOOLEAN_RULE
(
BOOLEAN_RULE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRD_R_PRVT_FK'
ALTER TABLE PPDM_RULE_DETAIL ADD CONSTRAINT PRD_R_PRVT_FK FOREIGN KEY
(
REFERENCE_VALUE_TYPE
)
REFERENCES R_PPDM_REF_VALUE_TYPE
(
REFERENCE_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRD_R_PRDT_FK'
ALTER TABLE PPDM_RULE_DETAIL ADD CONSTRAINT PRD_R_PRDT_FK FOREIGN KEY
(
RULE_DETAIL_TYPE
)
REFERENCES R_PPDM_RULE_DETAIL_TYPE
(
RULE_DETAIL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRE_BA_FK'
ALTER TABLE PPDM_RULE_ENFORCEMENT ADD CONSTRAINT PRE_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRE_PR_FK'
ALTER TABLE PPDM_RULE_ENFORCEMENT ADD CONSTRAINT PRE_PR_FK FOREIGN KEY
(
RULE_ID
)
REFERENCES PPDM_RULE
(
RULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRE_PSWA_FK'
ALTER TABLE PPDM_RULE_ENFORCEMENT ADD CONSTRAINT PRE_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRE_R_PEM_FK'
ALTER TABLE PPDM_RULE_ENFORCEMENT ADD CONSTRAINT PRE_R_PEM_FK FOREIGN KEY
(
ENFORCE_METHOD
)
REFERENCES R_PPDM_ENFORCE_METHOD
(
ENFORCE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRE_R_PFR_FK'
ALTER TABLE PPDM_RULE_ENFORCEMENT ADD CONSTRAINT PRE_R_PFR_FK FOREIGN KEY
(
RULE_FAIL_RESULT
)
REFERENCES R_PPDM_FAIL_RESULT
(
RULE_FAIL_RESULT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRR_BA_FK'
ALTER TABLE PPDM_RULE_REMARK ADD CONSTRAINT PRR_BA_FK FOREIGN KEY
(
REMARK_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRR_PR_FK'
ALTER TABLE PPDM_RULE_REMARK ADD CONSTRAINT PRR_PR_FK FOREIGN KEY
(
RULE_ID
)
REFERENCES PPDM_RULE
(
RULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRR_R_RT2_FK'
ALTER TABLE PPDM_RULE_REMARK ADD CONSTRAINT PRR_R_RT2_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_REMARK_TYPE
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRX_PR_FK'
ALTER TABLE PPDM_RULE_XREF ADD CONSTRAINT PRX_PR_FK FOREIGN KEY
(
RULE_ID
)
REFERENCES PPDM_RULE
(
RULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRX_PR_FK2'
ALTER TABLE PPDM_RULE_XREF ADD CONSTRAINT PRX_PR_FK2 FOREIGN KEY
(
RULE_ID2
)
REFERENCES PPDM_RULE
(
RULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRX_R_PRXC_FK'
ALTER TABLE PPDM_RULE_XREF ADD CONSTRAINT PRX_R_PRXC_FK FOREIGN KEY
(
RULE_XREF_CONDITION
)
REFERENCES R_PPDM_RULE_XREF_COND
(
RULE_XREF_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PRX_R_PRXT_FK'
ALTER TABLE PPDM_RULE_XREF ADD CONSTRAINT PRX_R_PRXT_FK FOREIGN KEY
(
RULE_XREF_TYPE
)
REFERENCES R_PPDM_RULE_XREF_TYPE
(
RULE_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSE_PD_FK'
ALTER TABLE PPDM_SCHEMA_ENTITY ADD CONSTRAINT PSE_PD_FK FOREIGN KEY
(
DOMAIN
)
REFERENCES PPDM_DOMAIN
(
DOMAIN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSE_PSYS_FK'
ALTER TABLE PPDM_SCHEMA_ENTITY ADD CONSTRAINT PSE_PSYS_FK FOREIGN KEY
(
SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSE_R_PDT1_FK'
ALTER TABLE PPDM_SCHEMA_ENTITY ADD CONSTRAINT PSE_R_PDT1_FK FOREIGN KEY
(
DATA_TYPE
)
REFERENCES R_PPDM_DATA_TYPE
(
DATA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSE_R_PSET_FK'
ALTER TABLE PPDM_SCHEMA_ENTITY ADD CONSTRAINT PSE_R_PSET_FK FOREIGN KEY
(
ELEMENT_TYPE
)
REFERENCES R_PPDM_SCHEMA_ENTITY
(
ELEMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSEA_BA_FK'
ALTER TABLE PPDM_SCHEMA_ENTITY_ALIAS ADD CONSTRAINT PSEA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSEA_PSE_FK'
ALTER TABLE PPDM_SCHEMA_ENTITY_ALIAS ADD CONSTRAINT PSEA_PSE_FK FOREIGN KEY
(
SYSTEM_ID,
SCHEMA_ENTITY_ID
)
REFERENCES PPDM_SCHEMA_ENTITY
(
SYSTEM_ID,
SCHEMA_ENTITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSEA_PSWA_FK'
ALTER TABLE PPDM_SCHEMA_ENTITY_ALIAS ADD CONSTRAINT PSEA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSEA_R_ART_FK'
ALTER TABLE PPDM_SCHEMA_ENTITY_ALIAS ADD CONSTRAINT PSEA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSEA_R_ATY_FK'
ALTER TABLE PPDM_SCHEMA_ENTITY_ALIAS ADD CONSTRAINT PSEA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSEA_R_LANG_FK'
ALTER TABLE PPDM_SCHEMA_ENTITY_ALIAS ADD CONSTRAINT PSEA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSEA_SRCD_FK'
ALTER TABLE PPDM_SCHEMA_ENTITY_ALIAS ADD CONSTRAINT PSEA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSG_PSE_FK'
ALTER TABLE PPDM_SCHEMA_GROUP ADD CONSTRAINT PSG_PSE_FK FOREIGN KEY
(
GROUP_SYSTEM_ID,
GROUP_SCHEMA_ENTITY_ID
)
REFERENCES PPDM_SCHEMA_ENTITY
(
SYSTEM_ID,
SCHEMA_ENTITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSG_PSE_FK2'
ALTER TABLE PPDM_SCHEMA_GROUP ADD CONSTRAINT PSG_PSE_FK2 FOREIGN KEY
(
GROUP_SYSTEM_ID,
COMP_SCHEMA_ENTITY_ID
)
REFERENCES PPDM_SCHEMA_ENTITY
(
SYSTEM_ID,
SCHEMA_ENTITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSG_R_PSGT_FK'
ALTER TABLE PPDM_SCHEMA_GROUP ADD CONSTRAINT PSG_R_PSGT_FK FOREIGN KEY
(
SCHEMA_GROUP_TYPE
)
REFERENCES R_PPDM_SCHEMA_GROUP
(
SCHEMA_GROUP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSWA_BA_FK'
ALTER TABLE PPDM_SW_APPLICATION ADD CONSTRAINT PSWA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSWA_PMS_FK'
ALTER TABLE PPDM_SW_APPLICATION ADD CONSTRAINT PSWA_PMS_FK FOREIGN KEY
(
PREFERRED_UOM_SYSTEM_ID
)
REFERENCES PPDM_MEASUREMENT_SYSTEM
(
UOM_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSWAA_BA_FK'
ALTER TABLE PPDM_SW_APPLIC_ALIAS ADD CONSTRAINT PSWAA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSWAA_PSWA_FK2'
ALTER TABLE PPDM_SW_APPLIC_ALIAS ADD CONSTRAINT PSWAA_PSWA_FK2 FOREIGN KEY
(
USED_BY_SW_APP_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSWAA_PSWA_FK'
ALTER TABLE PPDM_SW_APPLIC_ALIAS ADD CONSTRAINT PSWAA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSWAA_R_ART_FK'
ALTER TABLE PPDM_SW_APPLIC_ALIAS ADD CONSTRAINT PSWAA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSWAA_R_ATY_FK'
ALTER TABLE PPDM_SW_APPLIC_ALIAS ADD CONSTRAINT PSWAA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSWAA_R_LANG_FK'
ALTER TABLE PPDM_SW_APPLIC_ALIAS ADD CONSTRAINT PSWAA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSWAA_SRCD_FK'
ALTER TABLE PPDM_SW_APPLIC_ALIAS ADD CONSTRAINT PSWAA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_ANLR_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_ANLAS_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_APP_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_A_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_BAAU_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_BAE_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_BAO_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_BA_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_CA_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_CEQ_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_CLSL_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_CON_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_CO_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_COT_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_C_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_EZ_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_ENT_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_EQ_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_FAC_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_FLD_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_FIN_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_FOS_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_HI_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_INS_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_INT_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_LR_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_LS_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_LIL_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_NOTI_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_OB_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_PASU_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_PDE_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_PL_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_PSWA_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_PSYS_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_PT_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_PS_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_PSF_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_PSF_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
)
REFERENCES PROD_STRING_FORMATION
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_PROJ_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_RATE_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_RSCL_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_RSE_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_RMDSS_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_RMII_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_RMPI_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_RMTW_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_R_ANLCMPT_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_R_ANLCMPT_FK FOREIGN KEY
(
COMPONENT_TYPE
)
REFERENCES R_ANL_COMP_TYPE
(
ANL_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_R_WTT_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_R_WTT_FK FOREIGN KEY
(
WELL_TEST_TYPE
)
REFERENCES R_WELL_TEST_TYPE
(
WELL_TEST_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_SM_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_SM_FK FOREIGN KEY
(
SAMPLE_ID
)
REFERENCES SAMPLE
(
SAMPLE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_SS_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_SF_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_SPD_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_STFST_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_STU_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_SUB_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_W_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_WAC_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_WAC_FK FOREIGN KEY
(
UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_WCRD_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_WCRD_FK FOREIGN KEY
(
UWI,
SOURCE,
WELL_CORE_DESC_ID,
DESCRIPTION_OBS_NO
)
REFERENCES WELL_CORE_DESCRIPTION
(
UWI,
SOURCE,
CORE_ID,
DESCRIPTION_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_WT_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_WT_FK FOREIGN KEY
(
UWI,
WELL_TEST_SOURCE,
WELL_TEST_TYPE,
RUN_NUM,
TEST_NUM
)
REFERENCES WELL_TEST
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_WTRCV_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_WTRCV_FK FOREIGN KEY
(
UWI,
TEST_SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
RECOVERY_OBS_NO
)
REFERENCES WELL_TEST_RECOVERY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
RECOVERY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAC_WO_FK'
ALTER TABLE PPDM_SW_APPLIC_COMP ADD CONSTRAINT PSAC_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSWAB_BA_FK'
ALTER TABLE PPDM_SW_APP_BA ADD CONSTRAINT PSWAB_BA_FK FOREIGN KEY
(
BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSWAB_PSWA_FK'
ALTER TABLE PPDM_SW_APP_BA ADD CONSTRAINT PSWAB_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSWAB_R_SWABR_FK'
ALTER TABLE PPDM_SW_APP_BA ADD CONSTRAINT PSWAB_R_SWABR_FK FOREIGN KEY
(
SW_APP_BA_ROLE
)
REFERENCES R_SW_APP_BA_ROLE
(
SW_APP_BA_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSWAF_PSWA_FK'
ALTER TABLE PPDM_SW_APP_FUNCTION ADD CONSTRAINT PSWAF_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSWAF_R_SWAF_FK'
ALTER TABLE PPDM_SW_APP_FUNCTION ADD CONSTRAINT PSWAF_R_SWAF_FK FOREIGN KEY
(
SW_APP_FUNCTION,
SW_APP_FUNCTION_TYPE
)
REFERENCES R_SW_APP_FUNCTION
(
SW_APP_FUNCTION,
SW_APP_FUNCTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSWAX_PSWA_FK'
ALTER TABLE PPDM_SW_APP_XREF ADD CONSTRAINT PSWAX_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSWAX_PSWA_FK2'
ALTER TABLE PPDM_SW_APP_XREF ADD CONSTRAINT PSWAX_PSWA_FK2 FOREIGN KEY
(
SW_APPLICATION_ID2
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSWAX_R_SWAX_FK'
ALTER TABLE PPDM_SW_APP_XREF ADD CONSTRAINT PSWAX_R_SWAX_FK FOREIGN KEY
(
SW_APP_XREF_TYPE
)
REFERENCES R_SW_APP_XREF_TYPE
(
SW_APP_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSYS_BA_FK'
ALTER TABLE PPDM_SYSTEM ADD CONSTRAINT PSYS_BA_FK FOREIGN KEY
(
CREATOR_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSYS_BA_FK3'
ALTER TABLE PPDM_SYSTEM ADD CONSTRAINT PSYS_BA_FK3 FOREIGN KEY
(
BUSINESS_OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSYS_BA_FK2'
ALTER TABLE PPDM_SYSTEM ADD CONSTRAINT PSYS_BA_FK2 FOREIGN KEY
(
TECHNICAL_OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSYS_R_POS_FK'
ALTER TABLE PPDM_SYSTEM ADD CONSTRAINT PSYS_R_POS_FK FOREIGN KEY
(
OPERATING_SYSTEM
)
REFERENCES R_PPDM_OPERATING_SYSTEM
(
OPERATING_SYSTEM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSYS_R_PRDB_FK'
ALTER TABLE PPDM_SYSTEM ADD CONSTRAINT PSYS_R_PRDB_FK FOREIGN KEY
(
RDBMS_ID
)
REFERENCES R_PPDM_RDBMS
(
RDBMS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSYS_R_PPST_FK'
ALTER TABLE PPDM_SYSTEM ADD CONSTRAINT PSYS_R_PPST_FK FOREIGN KEY
(
PPDM_SYSTEM_TYPE
)
REFERENCES R_PPDM_SYSTEM_TYPE
(
PPDM_SYSTEM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSA_BA_FK'
ALTER TABLE PPDM_SYSTEM_ALIAS ADD CONSTRAINT PSA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSA_PSWA_FK'
ALTER TABLE PPDM_SYSTEM_ALIAS ADD CONSTRAINT PSA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSA_PSYS_FK'
ALTER TABLE PPDM_SYSTEM_ALIAS ADD CONSTRAINT PSA_PSYS_FK FOREIGN KEY
(
SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSA_R_ART_FK'
ALTER TABLE PPDM_SYSTEM_ALIAS ADD CONSTRAINT PSA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSA_R_ATY_FK'
ALTER TABLE PPDM_SYSTEM_ALIAS ADD CONSTRAINT PSA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSA_R_LANG_FK'
ALTER TABLE PPDM_SYSTEM_ALIAS ADD CONSTRAINT PSA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSA_SRCD_FK'
ALTER TABLE PPDM_SYSTEM_ALIAS ADD CONSTRAINT PSA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAP_PSWA_FK'
ALTER TABLE PPDM_SYSTEM_APPLICATION ADD CONSTRAINT PSAP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAP_PSYS_FK'
ALTER TABLE PPDM_SYSTEM_APPLICATION ADD CONSTRAINT PSAP_PSYS_FK FOREIGN KEY
(
SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAP_R_LANG_FK'
ALTER TABLE PPDM_SYSTEM_APPLICATION ADD CONSTRAINT PSAP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSM_BA_FK'
ALTER TABLE PPDM_SYSTEM_MAP ADD CONSTRAINT PSM_BA_FK FOREIGN KEY
(
MAP_OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSM_PSWA_FK'
ALTER TABLE PPDM_SYSTEM_MAP ADD CONSTRAINT PSM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSM_PSYS_FK2'
ALTER TABLE PPDM_SYSTEM_MAP ADD CONSTRAINT PSM_PSYS_FK2 FOREIGN KEY
(
SYSTEM_ID2
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSM_PSYS_FK'
ALTER TABLE PPDM_SYSTEM_MAP ADD CONSTRAINT PSM_PSYS_FK FOREIGN KEY
(
SYSTEM_ID1
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PT_PSYS_FK'
ALTER TABLE PPDM_TABLE ADD CONSTRAINT PT_PSYS_FK FOREIGN KEY
(
SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PT_R_PTT_FK'
ALTER TABLE PPDM_TABLE ADD CONSTRAINT PT_R_PTT_FK FOREIGN KEY
(
TABLE_TYPE
)
REFERENCES R_PPDM_TABLE_TYPE
(
TABLE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PTA_BA_FK'
ALTER TABLE PPDM_TABLE_ALIAS ADD CONSTRAINT PTA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PTA_PSWA_FK'
ALTER TABLE PPDM_TABLE_ALIAS ADD CONSTRAINT PTA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PTA_PT_FK'
ALTER TABLE PPDM_TABLE_ALIAS ADD CONSTRAINT PTA_PT_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PTA_R_ART_FK'
ALTER TABLE PPDM_TABLE_ALIAS ADD CONSTRAINT PTA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PTA_R_ATY_FK'
ALTER TABLE PPDM_TABLE_ALIAS ADD CONSTRAINT PTA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PTA_R_LANG_FK'
ALTER TABLE PPDM_TABLE_ALIAS ADD CONSTRAINT PTA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PTA_SRCD_FK'
ALTER TABLE PPDM_TABLE_ALIAS ADD CONSTRAINT PTA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PTDH_PSYS_FK'
ALTER TABLE PPDM_TABLE_HISTORY ADD CONSTRAINT PTDH_PSYS_FK FOREIGN KEY
(
SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PTDH_PT_FK'
ALTER TABLE PPDM_TABLE_HISTORY ADD CONSTRAINT PTDH_PT_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PTDH_R_PAR1_FK'
ALTER TABLE PPDM_TABLE_HISTORY ADD CONSTRAINT PTDH_R_PAR1_FK FOREIGN KEY
(
AUDIT_REASON
)
REFERENCES R_PPDM_AUDIT_REASON
(
AUDIT_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PTDH_R_RP1_FK'
ALTER TABLE PPDM_TABLE_HISTORY ADD CONSTRAINT PTDH_R_RP1_FK FOREIGN KEY
(
RETENTION_PERIOD
)
REFERENCES R_RETENTION_PERIOD
(
RETENTION_PERIOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PUC_PQ_FK'
ALTER TABLE PPDM_UNIT_CONVERSION ADD CONSTRAINT PUC_PQ_FK FOREIGN KEY
(
UNIT_QUANTITY_TYPE
)
REFERENCES PPDM_QUANTITY
(
QUANTITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PUC_SRCD_FK'
ALTER TABLE PPDM_UNIT_CONVERSION ADD CONSTRAINT PUC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PUOM_PMS_FK'
ALTER TABLE PPDM_UNIT_OF_MEASURE ADD CONSTRAINT PUOM_PMS_FK FOREIGN KEY
(
UOM_SYSTEM_ID
)
REFERENCES PPDM_MEASUREMENT_SYSTEM
(
UOM_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PUOM_PQ_FK'
ALTER TABLE PPDM_UNIT_OF_MEASURE ADD CONSTRAINT PUOM_PQ_FK FOREIGN KEY
(
UOM_QUANTITY_TYPE
)
REFERENCES PPDM_QUANTITY
(
QUANTITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PUOM_R_PUU_FK'
ALTER TABLE PPDM_UNIT_OF_MEASURE ADD CONSTRAINT PUOM_R_PUU_FK FOREIGN KEY
(
UOM_USAGE_TYPE
)
REFERENCES R_PPDM_UOM_USAGE
(
UOM_USAGE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PUOM_SRCD_FK'
ALTER TABLE PPDM_UNIT_OF_MEASURE ADD CONSTRAINT PUOM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PUA_BA_FK'
ALTER TABLE PPDM_UOM_ALIAS ADD CONSTRAINT PUA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PUA_PSWA_FK'
ALTER TABLE PPDM_UOM_ALIAS ADD CONSTRAINT PUA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PUA_R_ART_FK'
ALTER TABLE PPDM_UOM_ALIAS ADD CONSTRAINT PUA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PUA_R_LANG_FK'
ALTER TABLE PPDM_UOM_ALIAS ADD CONSTRAINT PUA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PUA_R_PUAT_FK'
ALTER TABLE PPDM_UOM_ALIAS ADD CONSTRAINT PUA_R_PUAT_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_PPDM_UOM_ALIAS_TYPE
(
UOM_ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PUA_SRCD_FK'
ALTER TABLE PPDM_UOM_ALIAS ADD CONSTRAINT PUA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PVMC_PQ_FK'
ALTER TABLE PPDM_VOL_MEAS_CONV ADD CONSTRAINT PVMC_PQ_FK FOREIGN KEY
(
CONVERSION_QUANTITY
)
REFERENCES PPDM_QUANTITY
(
QUANTITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PVMC_PVMR_FK'
ALTER TABLE PPDM_VOL_MEAS_CONV ADD CONSTRAINT PVMC_PVMR_FK FOREIGN KEY
(
VOLUME_REGIME_ID
)
REFERENCES PPDM_VOL_MEAS_REGIME
(
VOLUME_REGIME_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PVMR_BA_FK'
ALTER TABLE PPDM_VOL_MEAS_REGIME ADD CONSTRAINT PVMR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PVMU_A_FK'
ALTER TABLE PPDM_VOL_MEAS_USE ADD CONSTRAINT PVMU_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PVMU_BA_FK'
ALTER TABLE PPDM_VOL_MEAS_USE ADD CONSTRAINT PVMU_BA_FK FOREIGN KEY
(
JURISDICTION
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PVMU_PVMR_FK'
ALTER TABLE PPDM_VOL_MEAS_USE ADD CONSTRAINT PVMU_PVMR_FK FOREIGN KEY
(
VOLUME_REGIME_ID
)
REFERENCES PPDM_VOL_MEAS_REGIME
(
VOLUME_REGIME_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLU_BA_FK'
ALTER TABLE PROD_LEASE_UNIT ADD CONSTRAINT PLU_BA_FK FOREIGN KEY
(
CURRENT_OPERATOR
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLU_FLD_FK'
ALTER TABLE PROD_LEASE_UNIT ADD CONSTRAINT PLU_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLU_LR_FK'
ALTER TABLE PROD_LEASE_UNIT ADD CONSTRAINT PLU_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLU_PL_FK'
ALTER TABLE PROD_LEASE_UNIT ADD CONSTRAINT PLU_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLU_PLUAR_FK'
ALTER TABLE PROD_LEASE_UNIT ADD CONSTRAINT PLU_PLUAR_FK FOREIGN KEY
(
LEASE_UNIT_ID,
SOURCE,
AREA_ID,
AREA_TYPE
)
REFERENCES PROD_LEASE_UNIT_AREA
(
LEASE_UNIT_ID,
SOURCE,
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLU_R_LUS_FK'
ALTER TABLE PROD_LEASE_UNIT ADD CONSTRAINT PLU_R_LUS_FK FOREIGN KEY
(
LEASE_UNIT_STATUS
)
REFERENCES R_LEASE_UNIT_STATUS
(
LEASE_UNIT_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLU_R_LUT_FK'
ALTER TABLE PROD_LEASE_UNIT ADD CONSTRAINT PLU_R_LUT_FK FOREIGN KEY
(
LEASE_UNIT_TYPE
)
REFERENCES R_LEASE_UNIT_TYPE
(
LEASE_UNIT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLU_STU_FK'
ALTER TABLE PROD_LEASE_UNIT ADD CONSTRAINT PLU_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLUA_BA_FK'
ALTER TABLE PROD_LEASE_UNIT_ALIAS ADD CONSTRAINT PLUA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLUA_PSWA_FK'
ALTER TABLE PROD_LEASE_UNIT_ALIAS ADD CONSTRAINT PLUA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLUA_PLU_FK'
ALTER TABLE PROD_LEASE_UNIT_ALIAS ADD CONSTRAINT PLUA_PLU_FK FOREIGN KEY
(
LEASE_UNIT_ID
)
REFERENCES PROD_LEASE_UNIT
(
LEASE_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLUA_R_ART_FK'
ALTER TABLE PROD_LEASE_UNIT_ALIAS ADD CONSTRAINT PLUA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLUA_R_ATY_FK'
ALTER TABLE PROD_LEASE_UNIT_ALIAS ADD CONSTRAINT PLUA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLUA_R_LANG_FK'
ALTER TABLE PROD_LEASE_UNIT_ALIAS ADD CONSTRAINT PLUA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLUA_SRCD_FK'
ALTER TABLE PROD_LEASE_UNIT_ALIAS ADD CONSTRAINT PLUA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLUAR_A_FK'
ALTER TABLE PROD_LEASE_UNIT_AREA ADD CONSTRAINT PLUAR_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLUAR_PLU_FK'
ALTER TABLE PROD_LEASE_UNIT_AREA ADD CONSTRAINT PLUAR_PLU_FK FOREIGN KEY
(
LEASE_UNIT_ID
)
REFERENCES PROD_LEASE_UNIT
(
LEASE_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLUV_BA_FK'
ALTER TABLE PROD_LEASE_UNIT_VERSION ADD CONSTRAINT PLUV_BA_FK FOREIGN KEY
(
CURRENT_OPERATOR
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLUV_FLD_FK'
ALTER TABLE PROD_LEASE_UNIT_VERSION ADD CONSTRAINT PLUV_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLUV_LR_FK'
ALTER TABLE PROD_LEASE_UNIT_VERSION ADD CONSTRAINT PLUV_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLUV_PL_FK'
ALTER TABLE PROD_LEASE_UNIT_VERSION ADD CONSTRAINT PLUV_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLUV_PLU_FK'
ALTER TABLE PROD_LEASE_UNIT_VERSION ADD CONSTRAINT PLUV_PLU_FK FOREIGN KEY
(
LEASE_UNIT_ID
)
REFERENCES PROD_LEASE_UNIT
(
LEASE_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLUV_R_LUS_FK'
ALTER TABLE PROD_LEASE_UNIT_VERSION ADD CONSTRAINT PLUV_R_LUS_FK FOREIGN KEY
(
LEASE_UNIT_STATUS
)
REFERENCES R_LEASE_UNIT_STATUS
(
LEASE_UNIT_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLUV_R_LUT_FK'
ALTER TABLE PROD_LEASE_UNIT_VERSION ADD CONSTRAINT PLUV_R_LUT_FK FOREIGN KEY
(
LEASE_UNIT_TYPE
)
REFERENCES R_LEASE_UNIT_TYPE
(
LEASE_UNIT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLUV_STU_FK'
ALTER TABLE PROD_LEASE_UNIT_VERSION ADD CONSTRAINT PLUV_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLUVAR_A_FK'
ALTER TABLE PROD_LEASE_UNIT_VER_AREA ADD CONSTRAINT PLUVAR_A_FK FOREIGN KEY
(
AREA_TYPE,
AREA_ID
)
REFERENCES AREA
(
AREA_TYPE,
AREA_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLUVAR_PLUV_FK'
ALTER TABLE PROD_LEASE_UNIT_VER_AREA ADD CONSTRAINT PLUVAR_PLUV_FK FOREIGN KEY
(
LEASE_UNIT_ID,
SOURCE
)
REFERENCES PROD_LEASE_UNIT_VERSION
(
LEASE_UNIT_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PS_BA_FK'
ALTER TABLE PROD_STRING ADD CONSTRAINT PS_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PS_FAC_FK'
ALTER TABLE PROD_STRING ADD CONSTRAINT PS_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PS_FLD_FK'
ALTER TABLE PROD_STRING ADD CONSTRAINT PS_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PS_PL_FK'
ALTER TABLE PROD_STRING ADD CONSTRAINT PS_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PS_PLU_FK'
ALTER TABLE PROD_STRING ADD CONSTRAINT PS_PLU_FK FOREIGN KEY
(
LEASE_UNIT_ID
)
REFERENCES PROD_LEASE_UNIT
(
LEASE_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PS_R_PS1_FK'
ALTER TABLE PROD_STRING ADD CONSTRAINT PS_R_PS1_FK FOREIGN KEY
(
PLOT_SYMBOL
)
REFERENCES R_PLOT_SYMBOL
(
PLOT_SYMBOL
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PS_R_PST_FK'
ALTER TABLE PROD_STRING ADD CONSTRAINT PS_R_PST_FK FOREIGN KEY
(
PROD_STRING_TYPE
)
REFERENCES R_PROD_STRING_TYPE
(
PROD_STRING_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PS_R_TCC_FK'
ALTER TABLE PROD_STRING ADD CONSTRAINT PS_R_TCC_FK FOREIGN KEY
(
TAX_CREDIT_CODE
)
REFERENCES R_TAX_CREDIT_CODE
(
TAX_CREDIT_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PS_R_WPT_FK'
ALTER TABLE PROD_STRING ADD CONSTRAINT PS_R_WPT_FK FOREIGN KEY
(
PROFILE_TYPE
)
REFERENCES R_WELL_PROFILE_TYPE
(
WELL_PROFILE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PS_R_WS_FK'
ALTER TABLE PROD_STRING ADD CONSTRAINT PS_R_WS_FK FOREIGN KEY
(
STATUS_TYPE,
CURRENT_STATUS
)
REFERENCES R_WELL_STATUS
(
STATUS_TYPE,
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PS_STU_FK'
ALTER TABLE PROD_STRING ADD CONSTRAINT PS_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PS_W_FK'
ALTER TABLE PROD_STRING ADD CONSTRAINT PS_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAL_BA_FK'
ALTER TABLE PROD_STRING_ALIAS ADD CONSTRAINT PSAL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAL_PSWA_FK'
ALTER TABLE PROD_STRING_ALIAS ADD CONSTRAINT PSAL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAL_PS_FK'
ALTER TABLE PROD_STRING_ALIAS ADD CONSTRAINT PSAL_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAL_R_ART_FK'
ALTER TABLE PROD_STRING_ALIAS ADD CONSTRAINT PSAL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAL_R_ATY_FK'
ALTER TABLE PROD_STRING_ALIAS ADD CONSTRAINT PSAL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAL_R_LANG_FK'
ALTER TABLE PROD_STRING_ALIAS ADD CONSTRAINT PSAL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAL_R_WAL_FK'
ALTER TABLE PROD_STRING_ALIAS ADD CONSTRAINT PSAL_R_WAL_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_WELL_ALIAS_LOCATION
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSAL_SRCD_FK'
ALTER TABLE PROD_STRING_ALIAS ADD CONSTRAINT PSAL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_ANLR_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_APP_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_A_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_BAAU_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_BAE_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_BAO_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_BA_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_CA_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_CEQ_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_CLSL_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_CON_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_CO_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_COT_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_C_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_EZ_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_ENT_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_EQ_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_FAC_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_FLD_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_FIN_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_FOS_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_HI_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_INS_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_INT_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_LR_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_LS_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_LIL_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_NOTI_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_OB_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_PASU_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_PDE_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_PL_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_PSWA_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_PSYS_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_PT_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_PS_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_PS_FK FOREIGN KEY
(
UWI,
PR_STR_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_PROJ_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_RATE_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_RSCL_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_RSE_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_RMDSS_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_RMII_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_RMPI_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_RMTW_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_R_PSC_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_R_PSC_FK FOREIGN KEY
(
PROD_STRING_COMPONENT_TYPE
)
REFERENCES R_PROD_STRING_COMP_TYPE
(
PROD_STRING_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_SS_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_SF_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_SPD_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_STFST_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_STU_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_SUB_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_W_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_WAC_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_WAC_FK FOREIGN KEY
(
WELL_ACTIVITY_UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_WSET_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSCMP_WO_FK'
ALTER TABLE PROD_STRING_COMPONENT ADD CONSTRAINT PSCMP_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSF_PL_FK'
ALTER TABLE PROD_STRING_FORMATION ADD CONSTRAINT PSF_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSF_PS_FK'
ALTER TABLE PROD_STRING_FORMATION ADD CONSTRAINT PSF_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSF_R_ALT_FK'
ALTER TABLE PROD_STRING_FORMATION ADD CONSTRAINT PSF_R_ALT_FK FOREIGN KEY
(
ALLOCATION_TYPE
)
REFERENCES R_ALLOCATION_TYPE
(
ALLOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSF_R_WS_FK'
ALTER TABLE PROD_STRING_FORMATION ADD CONSTRAINT PSF_R_WS_FK FOREIGN KEY
(
STATUS_TYPE,
CURRENT_STATUS
)
REFERENCES R_WELL_STATUS
(
STATUS_TYPE,
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSF_STU_FK'
ALTER TABLE PROD_STRING_FORMATION ADD CONSTRAINT PSF_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSFAL_BA_FK'
ALTER TABLE PROD_STRING_FORM_ALIAS ADD CONSTRAINT PSFAL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSFAL_PSWA_FK'
ALTER TABLE PROD_STRING_FORM_ALIAS ADD CONSTRAINT PSFAL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSFAL_PSF_FK'
ALTER TABLE PROD_STRING_FORM_ALIAS ADD CONSTRAINT PSFAL_PSF_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
)
REFERENCES PROD_STRING_FORMATION
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSFAL_R_ART_FK'
ALTER TABLE PROD_STRING_FORM_ALIAS ADD CONSTRAINT PSFAL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSFAL_R_ATY_FK'
ALTER TABLE PROD_STRING_FORM_ALIAS ADD CONSTRAINT PSFAL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSFAL_R_LANG_FK'
ALTER TABLE PROD_STRING_FORM_ALIAS ADD CONSTRAINT PSFAL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSFAL_R_WAL_FK'
ALTER TABLE PROD_STRING_FORM_ALIAS ADD CONSTRAINT PSFAL_R_WAL_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_WELL_ALIAS_LOCATION
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSFAL_SRCD_FK'
ALTER TABLE PROD_STRING_FORM_ALIAS ADD CONSTRAINT PSFAL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSSH_PS_FK'
ALTER TABLE PROD_STR_STAT_HIST ADD CONSTRAINT PSSH_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSSH_R_PSS_FK'
ALTER TABLE PROD_STR_STAT_HIST ADD CONSTRAINT PSSH_R_PSS_FK FOREIGN KEY
(
STATUS_TYPE,
STATUS
)
REFERENCES R_PROD_STRING_STATUS
(
STATUS_TYPE,
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSSH_R_TZ_FK'
ALTER TABLE PROD_STR_STAT_HIST ADD CONSTRAINT PSSH_R_TZ_FK FOREIGN KEY
(
TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJ_R_PRT1_FK'
ALTER TABLE PROJECT ADD CONSTRAINT PROJ_R_PRT1_FK FOREIGN KEY
(
PROJECT_TYPE
)
REFERENCES R_PROJECT_TYPE
(
PROJECT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJA_BA_FK'
ALTER TABLE PROJECT_ALIAS ADD CONSTRAINT PROJA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJA_PSWA_FK'
ALTER TABLE PROJECT_ALIAS ADD CONSTRAINT PROJA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJA_PROJ_FK'
ALTER TABLE PROJECT_ALIAS ADD CONSTRAINT PROJA_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJA_R_ART_FK'
ALTER TABLE PROJECT_ALIAS ADD CONSTRAINT PROJA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJA_R_LANG_FK'
ALTER TABLE PROJECT_ALIAS ADD CONSTRAINT PROJA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJA_R_PRAT_FK'
ALTER TABLE PROJECT_ALIAS ADD CONSTRAINT PROJA_R_PRAT_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_PROJECT_ALIAS_TYPE
(
PROJ_ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJA_SRCD_FK'
ALTER TABLE PROJECT_ALIAS ADD CONSTRAINT PROJA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJB_BA_FK'
ALTER TABLE PROJECT_BA ADD CONSTRAINT PROJB_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJB_PROJ_FK'
ALTER TABLE PROJECT_BA ADD CONSTRAINT PROJB_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJBR_PROJB_FK'
ALTER TABLE PROJECT_BA_ROLE ADD CONSTRAINT PROJBR_PROJB_FK FOREIGN KEY
(
PROJECT_ID,
BUSINESS_ASSOCIATE_ID
)
REFERENCES PROJECT_BA
(
PROJECT_ID,
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJBR_R_PBR_FK'
ALTER TABLE PROJECT_BA_ROLE ADD CONSTRAINT PROJBR_R_PBR_FK FOREIGN KEY
(
ROLE
)
REFERENCES R_PROJECT_BA_ROLE
(
ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_ANLR_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_APP_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_A_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_BAAU_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_BAE_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_BALIC_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_BALIC_FK FOREIGN KEY
(
BA_LICENSEE_BA_ID,
BA_LICENSE_ID
)
REFERENCES BA_LICENSE
(
LICENSEE_BA_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_BAO_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_BA_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_CA_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_CEQ_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_CLSL_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_CON_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_CONC_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_CONC_FK FOREIGN KEY
(
CONSENT_ID,
CONDITION_ID
)
REFERENCES CONSENT_COND
(
CONSENT_ID,
CONDITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_CO_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_COT_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_C_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_CP_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_CP_FK FOREIGN KEY
(
CONTRACT_ID,
PROVISION_ID
)
REFERENCES CONT_PROVISION
(
CONTRACT_ID,
PROVISION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_EZ_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_ENT_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_EQ_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_FAC_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_FACL_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_FACL_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE,
FACILITY_LICENSE_ID
)
REFERENCES FACILITY_LICENSE
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_FLD_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_FIN_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_FOS_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_HI_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_HI_FK FOREIGN KEY
(
HSE_INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_INS_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_INT_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_LR_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_LS_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_LIL_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_NOTI_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_OB_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_PASU_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_PDE_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_PL_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_PSWA_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_PSYS_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_PT_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_PS_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_PROJ_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_PROJ_FK2'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_PROJ_FK2 FOREIGN KEY
(
OTHER_PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_PROJP_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_PROJP_FK FOREIGN KEY
(
PROJECT_PLAN_ID
)
REFERENCES PROJECT_PLAN
(
PROJECT_PLAN_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_PROJS_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_PROJS_FK FOREIGN KEY
(
PROJECT_ID,
PROJECT_STEP_ID
)
REFERENCES PROJECT_STEP
(
PROJECT_ID,
STEP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_RATE_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_RSVR_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_RSVR_FK FOREIGN KEY
(
RESENT_ID,
RESERVE_CLASS_ID,
RESERVE_REVISION_ID,
RESERVE_REVISION_OBS_NO
)
REFERENCES RESENT_VOL_REVISION
(
RESENT_ID,
RESERVE_CLASS_ID,
REVISION_ID,
REVISION_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_RSVS_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_RSVS_FK FOREIGN KEY
(
RESENT_ID,
RESERVE_CLASS_ID,
RESERVE_PRODUCT_TYPE,
RESERVE_SUMMARY_ID,
RESERVE_SUMMARY_OBS_NO
)
REFERENCES RESENT_VOL_SUMMARY
(
RESENT_ID,
RESERVE_CLASS_ID,
PRODUCT_TYPE,
SUMMARY_ID,
SUMMARY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_RSCL_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_RSE_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_RMDSS_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_RMII_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_RMPI_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_RMTW_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_R_PCR_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_R_PCR_FK FOREIGN KEY
(
COMPONENT_REASON
)
REFERENCES R_PROJECT_COMP_REASON
(
COMPONENT_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_R_PCT_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_R_PCT_FK FOREIGN KEY
(
COMPONENT_TYPE
)
REFERENCES R_PROJECT_COMP_TYPE
(
COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_SM_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_SM_FK FOREIGN KEY
(
LITH_SAMPLE_ID
)
REFERENCES SAMPLE
(
SAMPLE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_SLIC_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_SLIC_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_LICENSE_ID
)
REFERENCES SEIS_LICENSE
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_SSPPL_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_SSPPL_FK FOREIGN KEY
(
SEIS_PROC_PLAN_ID
)
REFERENCES SEIS_PROC_PLAN
(
SEIS_PROC_PLAN_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_SS_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_SF_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_SPD_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_STCOL_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_STCOL_FK FOREIGN KEY
(
STRAT_COLUMN_ID,
STRAT_COLUMN_SOURCE
)
REFERENCES STRAT_COLUMN
(
STRAT_COLUMN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_STFS_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_STFS_FK FOREIGN KEY
(
FIELD_STATION_ID,
STRAT_NAME_SET_ID,
FIELD_STRAT_UNIT_ID,
FIELD_STRAT_INTERP_ID
)
REFERENCES STRAT_FIELD_SECTION
(
FIELD_STATION_ID,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_STFST_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_STNS_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_STNS_FK FOREIGN KEY
(
STRAT_NAME_SET_ID
)
REFERENCES STRAT_NAME_SET
(
STRAT_NAME_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_STU_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_STWS_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_STWS_FK FOREIGN KEY
(
WELL_INT_UWI,
STRAT_NAME_SET_ID,
WELL_INT_STRAT_UNIT_ID,
WELL_INT_INTERP_ID
)
REFERENCES STRAT_WELL_SECTION
(
UWI,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_SUB_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_W_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_WAC_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_WAC_FK FOREIGN KEY
(
UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_WAT_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_WAT_FK FOREIGN KEY
(
WELL_ACTIVITY_SET_ID,
WELL_ACTIVITY_TYPE_ID
)
REFERENCES WELL_ACTIVITY_TYPE
(
ACTIVITY_SET_ID,
ACTIVITY_TYPE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_WLIC_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_WLIC_FK FOREIGN KEY
(
UWI,
WELL_LICENSE_SOURCE,
WELL_LICENSE_ID
)
REFERENCES WELL_LICENSE
(
UWI,
SOURCE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_WSET_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJCOM_WO_FK'
ALTER TABLE PROJECT_COMPONENT ADD CONSTRAINT PROJCOM_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJC_PROJ_FK'
ALTER TABLE PROJECT_CONDITION ADD CONSTRAINT PROJC_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJC_R_PCO_FK'
ALTER TABLE PROJECT_CONDITION ADD CONSTRAINT PROJC_R_PCO_FK FOREIGN KEY
(
PROJECT_TYPE,
CONDITION_TYPE
)
REFERENCES R_PROJECT_CONDITION
(
PROJECT_TYPE,
CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJE_BA_FK'
ALTER TABLE PROJECT_EQUIPMENT ADD CONSTRAINT PROJE_BA_FK FOREIGN KEY
(
OPERATED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJE_CEQ_FK'
ALTER TABLE PROJECT_EQUIPMENT ADD CONSTRAINT PROJE_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJE_EQ_FK'
ALTER TABLE PROJECT_EQUIPMENT ADD CONSTRAINT PROJE_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJE_PROJ_FK'
ALTER TABLE PROJECT_EQUIPMENT ADD CONSTRAINT PROJE_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJER_PROJE_FK'
ALTER TABLE PROJECT_EQUIP_ROLE ADD CONSTRAINT PROJER_PROJE_FK FOREIGN KEY
(
PROJECT_ID,
EQUIPMENT_OBS_NO
)
REFERENCES PROJECT_EQUIPMENT
(
PROJECT_ID,
EQUIPMENT_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJER_R_PER_FK'
ALTER TABLE PROJECT_EQUIP_ROLE ADD CONSTRAINT PROJER_R_PER_FK FOREIGN KEY
(
EQUIPMENT_ROLE
)
REFERENCES R_PROJECT_EQUIP_ROLE
(
EQUIP_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJP_R_PRT1_FK'
ALTER TABLE PROJECT_PLAN ADD CONSTRAINT PROJP_R_PRT1_FK FOREIGN KEY
(
PROJECT_TYPE
)
REFERENCES R_PROJECT_TYPE
(
PROJECT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJPS_PROJP_FK'
ALTER TABLE PROJECT_PLAN_STEP ADD CONSTRAINT PROJPS_PROJP_FK FOREIGN KEY
(
PROJECT_PLAN_ID
)
REFERENCES PROJECT_PLAN
(
PROJECT_PLAN_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJPS_R_PJST_FK'
ALTER TABLE PROJECT_PLAN_STEP ADD CONSTRAINT PROJPS_R_PJST_FK FOREIGN KEY
(
STEP_TYPE
)
REFERENCES R_PROJ_STEP_TYPE
(
STEP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJPSX_PROJPS_FK'
ALTER TABLE PROJECT_PLAN_STEP_XREF ADD CONSTRAINT PROJPSX_PROJPS_FK FOREIGN KEY
(
PROJECT_PLAN_ID,
PLAN_STEP_ID
)
REFERENCES PROJECT_PLAN_STEP
(
PROJECT_PLAN_ID,
PLAN_STEP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJPSX_PROJPS_FK2'
ALTER TABLE PROJECT_PLAN_STEP_XREF ADD CONSTRAINT PROJPSX_PROJPS_FK2 FOREIGN KEY
(
PROJECT_PLAN_ID,
PLAN_STEP_ID2
)
REFERENCES PROJECT_PLAN_STEP
(
PROJECT_PLAN_ID,
PLAN_STEP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJPSX_R_PJSXT_FK'
ALTER TABLE PROJECT_PLAN_STEP_XREF ADD CONSTRAINT PROJPSX_R_PJSXT_FK FOREIGN KEY
(
STEP_XREF_TYPE
)
REFERENCES R_PROJ_STEP_XREF_TYPE
(
PROJECT_STEP_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJST_BA_FK'
ALTER TABLE PROJECT_STATUS ADD CONSTRAINT PROJST_BA_FK FOREIGN KEY
(
DEFINED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJST_PROJ_FK'
ALTER TABLE PROJECT_STATUS ADD CONSTRAINT PROJST_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJST_PROJS_FK'
ALTER TABLE PROJECT_STATUS ADD CONSTRAINT PROJST_PROJS_FK FOREIGN KEY
(
PROJECT_ID,
STEP_ID
)
REFERENCES PROJECT_STEP
(
PROJECT_ID,
STEP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJST_R_PSTA_FK'
ALTER TABLE PROJECT_STATUS ADD CONSTRAINT PROJST_R_PSTA_FK FOREIGN KEY
(
STATUS_TYPE,
STATUS
)
REFERENCES R_PROJECT_STATUS
(
STATUS_TYPE,
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJST_R_PSTT_FK'
ALTER TABLE PROJECT_STATUS ADD CONSTRAINT PROJST_R_PSTT_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_PROJECT_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJS_PROJ_FK'
ALTER TABLE PROJECT_STEP ADD CONSTRAINT PROJS_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJS_PROJPS_FK'
ALTER TABLE PROJECT_STEP ADD CONSTRAINT PROJS_PROJPS_FK FOREIGN KEY
(
PROJECT_PLAN_ID,
PLAN_STEP_ID
)
REFERENCES PROJECT_PLAN_STEP
(
PROJECT_PLAN_ID,
PLAN_STEP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJS_R_PJST_FK'
ALTER TABLE PROJECT_STEP ADD CONSTRAINT PROJS_R_PJST_FK FOREIGN KEY
(
STEP_TYPE
)
REFERENCES R_PROJ_STEP_TYPE
(
STEP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJSB_PROJBR_FK'
ALTER TABLE PROJECT_STEP_BA ADD CONSTRAINT PROJSB_PROJBR_FK FOREIGN KEY
(
PROJECT_ID,
BUSINESS_ASSOCIATE_ID,
ROLE,
ROLE_SEQ_NO
)
REFERENCES PROJECT_BA_ROLE
(
PROJECT_ID,
BUSINESS_ASSOCIATE_ID,
ROLE,
ROLE_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJSB_PROJS_FK'
ALTER TABLE PROJECT_STEP_BA ADD CONSTRAINT PROJSB_PROJS_FK FOREIGN KEY
(
PROJECT_ID,
STEP_ID
)
REFERENCES PROJECT_STEP
(
PROJECT_ID,
STEP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJSE_PROJER_FK'
ALTER TABLE PROJECT_STEP_EQUIP ADD CONSTRAINT PROJSE_PROJER_FK FOREIGN KEY
(
PROJECT_ID,
EQUIPMENT_OBS_NO,
EQUIPMENT_ROLE,
ROLE_SEQ_NO
)
REFERENCES PROJECT_EQUIP_ROLE
(
PROJECT_ID,
EQUIPMENT_OBS_NO,
EQUIPMENT_ROLE,
ROLE_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJSE_PROJS_FK'
ALTER TABLE PROJECT_STEP_EQUIP ADD CONSTRAINT PROJSE_PROJS_FK FOREIGN KEY
(
PROJECT_ID,
STEP_ID
)
REFERENCES PROJECT_STEP
(
PROJECT_ID,
STEP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJSTI_BA_FK'
ALTER TABLE PROJECT_STEP_TIME ADD CONSTRAINT PROJSTI_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJSTI_PROJS_FK'
ALTER TABLE PROJECT_STEP_TIME ADD CONSTRAINT PROJSTI_PROJS_FK FOREIGN KEY
(
PROJECT_ID,
STEP_ID
)
REFERENCES PROJECT_STEP
(
PROJECT_ID,
STEP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJSTI_R_TZ_FK'
ALTER TABLE PROJECT_STEP_TIME ADD CONSTRAINT PROJSTI_R_TZ_FK FOREIGN KEY
(
END_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJSTI_R_TZ_FK1'
ALTER TABLE PROJECT_STEP_TIME ADD CONSTRAINT PROJSTI_R_TZ_FK1 FOREIGN KEY
(
START_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJSX_PROJS_FK'
ALTER TABLE PROJECT_STEP_XREF ADD CONSTRAINT PROJSX_PROJS_FK FOREIGN KEY
(
PROJECT_ID,
STEP_ID1
)
REFERENCES PROJECT_STEP
(
PROJECT_ID,
STEP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJSX_PROJS_FK2'
ALTER TABLE PROJECT_STEP_XREF ADD CONSTRAINT PROJSX_PROJS_FK2 FOREIGN KEY
(
PROJECT_ID,
STEP_ID2
)
REFERENCES PROJECT_STEP
(
PROJECT_ID,
STEP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJSX_R_PJSXT_FK'
ALTER TABLE PROJECT_STEP_XREF ADD CONSTRAINT PROJSX_R_PJSXT_FK FOREIGN KEY
(
STEP_XREF_TYPE
)
REFERENCES R_PROJ_STEP_XREF_TYPE
(
PROJECT_STEP_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJSC_PROJS_FK'
ALTER TABLE PROJ_STEP_CONDITION ADD CONSTRAINT PROJSC_PROJS_FK FOREIGN KEY
(
PROJECT_ID,
PROJECT_STEP_ID
)
REFERENCES PROJECT_STEP
(
PROJECT_ID,
STEP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJSC_PROJS_FK2'
ALTER TABLE PROJ_STEP_CONDITION ADD CONSTRAINT PROJSC_PROJS_FK2 FOREIGN KEY
(
PROJECT_ID,
REQUIRED_STEP_ID
)
REFERENCES PROJECT_STEP
(
PROJECT_ID,
STEP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PROJSC_R_PCO_FK'
ALTER TABLE PROJ_STEP_CONDITION ADD CONSTRAINT PROJSC_R_PCO_FK FOREIGN KEY
(
PROJECT_TYPE,
PROJECT_CONDITION_ID
)
REFERENCES R_PROJECT_CONDITION
(
PROJECT_TYPE,
CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLUSH_PLU_FK'
ALTER TABLE PR_LSE_UNIT_STR_HIST ADD CONSTRAINT PLUSH_PLU_FK FOREIGN KEY
(
LEASE_UNIT_ID
)
REFERENCES PROD_LEASE_UNIT
(
LEASE_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PLUSH_PS_FK'
ALTER TABLE PR_LSE_UNIT_STR_HIST ADD CONSTRAINT PLUSH_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSFC_PSF_FK'
ALTER TABLE PR_STR_FORM_COMPLETION ADD CONSTRAINT PSFC_PSF_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
)
REFERENCES PROD_STRING_FORMATION
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSFC_R_CS_FK'
ALTER TABLE PR_STR_FORM_COMPLETION ADD CONSTRAINT PSFC_R_CS_FK FOREIGN KEY
(
STATUS_TYPE,
COMPLETION_STATUS
)
REFERENCES R_COMPLETION_STATUS
(
STATUS_TYPE,
COMPLETION_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSFC_WCO_FK'
ALTER TABLE PR_STR_FORM_COMPLETION ADD CONSTRAINT PSFC_WCO_FK FOREIGN KEY
(
UWI,
COMPLETION_SOURCE,
COMPLETION_OBS_NO
)
REFERENCES WELL_COMPLETION
(
UWI,
SOURCE,
COMPLETION_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSFSH_PSF_FK'
ALTER TABLE PR_STR_FORM_STAT_HIST ADD CONSTRAINT PSFSH_PSF_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
)
REFERENCES PROD_STRING_FORMATION
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSFSH_R_PSFS_FK'
ALTER TABLE PR_STR_FORM_STAT_HIST ADD CONSTRAINT PSFSH_R_PSFS_FK FOREIGN KEY
(
STATUS_TYPE,
STATUS
)
REFERENCES R_PROD_STR_FM_STATUS
(
STATUS_TYPE,
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT PSFSH_R_TZ_FK'
ALTER TABLE PR_STR_FORM_STAT_HIST ADD CONSTRAINT PSFSH_R_TZ_FK FOREIGN KEY
(
TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEA_A_FK'
ALTER TABLE RATE_AREA ADD CONSTRAINT RATEA_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEA_RATE_FK'
ALTER TABLE RATE_AREA ADD CONSTRAINT RATEA_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATE_BAA_FK'
ALTER TABLE RATE_SCHEDULE ADD CONSTRAINT RATE_BAA_FK FOREIGN KEY
(
OWNER_BA_ID,
OWNER_BA_ADD_SOURCE,
OWNER_BA_ADD_OBS_NO
)
REFERENCES BA_ADDRESS
(
BUSINESS_ASSOCIATE_ID,
SOURCE,
ADDRESS_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATE_BA_FK'
ALTER TABLE RATE_SCHEDULE ADD CONSTRAINT RATE_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATE_C_FK'
ALTER TABLE RATE_SCHEDULE ADD CONSTRAINT RATE_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATE_CP_FK'
ALTER TABLE RATE_SCHEDULE ADD CONSTRAINT RATE_CP_FK FOREIGN KEY
(
CONTRACT_ID,
PROVISION_ID
)
REFERENCES CONT_PROVISION
(
CONTRACT_ID,
PROVISION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATE_RATEA_FK'
ALTER TABLE RATE_SCHEDULE ADD CONSTRAINT RATE_RATEA_FK FOREIGN KEY
(
RATE_SCHEDULE_ID,
AREA_ID,
AREA_TYPE
)
REFERENCES RATE_AREA
(
RATE_SCHEDULE_ID,
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATE_R_PM_FK'
ALTER TABLE RATE_SCHEDULE ADD CONSTRAINT RATE_R_PM_FK FOREIGN KEY
(
PAY_METHOD
)
REFERENCES R_PAY_METHOD
(
PAY_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATE_R_RSC_FK'
ALTER TABLE RATE_SCHEDULE ADD CONSTRAINT RATE_R_RSC_FK FOREIGN KEY
(
RATE_SCHEDULE_TYPE
)
REFERENCES R_RATE_SCHEDULE
(
RATE_SCHEDULE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATE_SRCD_FK'
ALTER TABLE RATE_SCHEDULE ADD CONSTRAINT RATE_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATE_SPD_FK'
ALTER TABLE RATE_SCHEDULE ADD CONSTRAINT RATE_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_ANLR_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_APP_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_A_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_BAAU_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_BAE_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_BAO_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_BA_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_CA_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_CEQ_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_CLSL_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_CON_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_CO_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_COT_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_C_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_EZ_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_ENT_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_EQ_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_FAC_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_FLD_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_FIN_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_FOS_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_HI_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_INS_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_INT_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_LR_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_LS_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_LIL_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_NOTI_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_OB_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_PASU_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_PDE_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_PL_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_PSWA_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_PSYS_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_PT_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_PS_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_PS_FK FOREIGN KEY
(
PR_STR_UWI,
PR_STR_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_PROJ_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_RATE_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_RSCL_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_RSE_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_RMDSS_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_RMII_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_RMPI_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_RMTW_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_R_RC2_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_R_RC2_FK FOREIGN KEY
(
RATE_SCHEDULE_COMPONENT_TYPE
)
REFERENCES R_RATE_SCHEDULE_COMP_TYPE
(
RATE_SCHEDULE_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_SS_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_SF_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_SPD_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_STFST_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_STU_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_SUB_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_W_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_WAC_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_WAC_FK FOREIGN KEY
(
WELL_ACTIVITY_UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_WSET_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATEC_WO_FK'
ALTER TABLE RATE_SCHEDULE_COMPONENT ADD CONSTRAINT RATEC_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATESX_RATE_FK'
ALTER TABLE RATE_SCHEDULE_XREF ADD CONSTRAINT RATESX_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID_1
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATESX_RATE_FK2'
ALTER TABLE RATE_SCHEDULE_XREF ADD CONSTRAINT RATESX_RATE_FK2 FOREIGN KEY
(
RATE_SCHEDULE_ID_2
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATESX_R_RSX_FK'
ALTER TABLE RATE_SCHEDULE_XREF ADD CONSTRAINT RATESX_R_RSX_FK FOREIGN KEY
(
RATE_SCHEDULE_XREF_TYPE
)
REFERENCES R_RATE_SCHED_XREF
(
RATE_SCHEDULE_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATESD_RATE_FK'
ALTER TABLE RATE_SCHED_DETAIL ADD CONSTRAINT RATESD_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATESD_R_PT3_FK'
ALTER TABLE RATE_SCHED_DETAIL ADD CONSTRAINT RATESD_R_PT3_FK FOREIGN KEY
(
PERIOD_TYPE
)
REFERENCES R_PERIOD_TYPE
(
PERIOD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATESD_R_RC1_FK'
ALTER TABLE RATE_SCHED_DETAIL ADD CONSTRAINT RATESD_R_RC1_FK FOREIGN KEY
(
RATE_CONDITION
)
REFERENCES R_RATE_CONDITION
(
RATE_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RATESD_R_RTY_FK'
ALTER TABLE RATE_SCHED_DETAIL ADD CONSTRAINT RATESD_R_RTY_FK FOREIGN KEY
(
RATE_TYPE
)
REFERENCES R_RATE_TYPE
(
RATE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACN_BA_FK'
ALTER TABLE RA_ACCESS_CONDITION ADD CONSTRAINT RA_ACN_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACN_PSWA_FK'
ALTER TABLE RA_ACCESS_CONDITION ADD CONSTRAINT RA_ACN_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACN_R_ACN_FK'
ALTER TABLE RA_ACCESS_CONDITION ADD CONSTRAINT RA_ACN_R_ACN_FK FOREIGN KEY
(
ACCESS_CONDITION_CODE
)
REFERENCES R_ACCESS_CONDITION
(
ACCESS_CONDITION_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACN_R_ART_FK'
ALTER TABLE RA_ACCESS_CONDITION ADD CONSTRAINT RA_ACN_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACN_R_ATY_FK'
ALTER TABLE RA_ACCESS_CONDITION ADD CONSTRAINT RA_ACN_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACN_R_LANG_FK'
ALTER TABLE RA_ACCESS_CONDITION ADD CONSTRAINT RA_ACN_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACN_SRCD_FK'
ALTER TABLE RA_ACCESS_CONDITION ADD CONSTRAINT RA_ACN_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APT_BA_FK'
ALTER TABLE RA_ACCOUNT_PROC_TYPE ADD CONSTRAINT RA_APT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APT_PSWA_FK'
ALTER TABLE RA_ACCOUNT_PROC_TYPE ADD CONSTRAINT RA_APT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APT_R_APT_FK'
ALTER TABLE RA_ACCOUNT_PROC_TYPE ADD CONSTRAINT RA_APT_R_APT_FK FOREIGN KEY
(
ACCOUNT_PROC_TYPE
)
REFERENCES R_ACCOUNT_PROC_TYPE
(
ACCOUNT_PROC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APT_R_ART_FK'
ALTER TABLE RA_ACCOUNT_PROC_TYPE ADD CONSTRAINT RA_APT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APT_R_ATY_FK'
ALTER TABLE RA_ACCOUNT_PROC_TYPE ADD CONSTRAINT RA_APT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APT_R_LANG_FK'
ALTER TABLE RA_ACCOUNT_PROC_TYPE ADD CONSTRAINT RA_APT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APT_SRCD_FK'
ALTER TABLE RA_ACCOUNT_PROC_TYPE ADD CONSTRAINT RA_APT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACTST_BA_FK'
ALTER TABLE RA_ACTIVITY_SET_TYPE ADD CONSTRAINT RA_ACTST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACTST_PSWA_FK'
ALTER TABLE RA_ACTIVITY_SET_TYPE ADD CONSTRAINT RA_ACTST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACTST_R_ACTST_FK'
ALTER TABLE RA_ACTIVITY_SET_TYPE ADD CONSTRAINT RA_ACTST_R_ACTST_FK FOREIGN KEY
(
ACTIVITY_SET_TYPE
)
REFERENCES R_ACTIVITY_SET_TYPE
(
ACTIVITY_SET_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACTST_R_ART_FK'
ALTER TABLE RA_ACTIVITY_SET_TYPE ADD CONSTRAINT RA_ACTST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACTST_R_ATY_FK'
ALTER TABLE RA_ACTIVITY_SET_TYPE ADD CONSTRAINT RA_ACTST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACTST_R_LANG_FK'
ALTER TABLE RA_ACTIVITY_SET_TYPE ADD CONSTRAINT RA_ACTST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACTST_SRCD_FK'
ALTER TABLE RA_ACTIVITY_SET_TYPE ADD CONSTRAINT RA_ACTST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AT_BA_FK'
ALTER TABLE RA_ACTIVITY_TYPE ADD CONSTRAINT RA_AT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AT_PSWA_FK'
ALTER TABLE RA_ACTIVITY_TYPE ADD CONSTRAINT RA_AT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AT_R_AT_FK'
ALTER TABLE RA_ACTIVITY_TYPE ADD CONSTRAINT RA_AT_R_AT_FK FOREIGN KEY
(
ACTIVITY_TYPE
)
REFERENCES R_ACTIVITY_TYPE
(
ACTIVITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AT_R_ART_FK'
ALTER TABLE RA_ACTIVITY_TYPE ADD CONSTRAINT RA_AT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AT_R_ATY_FK'
ALTER TABLE RA_ACTIVITY_TYPE ADD CONSTRAINT RA_AT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AT_R_LANG_FK'
ALTER TABLE RA_ACTIVITY_TYPE ADD CONSTRAINT RA_AT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AT_SRCD_FK'
ALTER TABLE RA_ACTIVITY_TYPE ADD CONSTRAINT RA_AT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AM_BA_FK'
ALTER TABLE RA_ADDITIVE_METHOD ADD CONSTRAINT RA_AM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AM_PSWA_FK'
ALTER TABLE RA_ADDITIVE_METHOD ADD CONSTRAINT RA_AM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AM_R_AM_FK'
ALTER TABLE RA_ADDITIVE_METHOD ADD CONSTRAINT RA_AM_R_AM_FK FOREIGN KEY
(
ADDITIVE_METHOD
)
REFERENCES R_ADDITIVE_METHOD
(
ADDITIVE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AM_R_ART_FK'
ALTER TABLE RA_ADDITIVE_METHOD ADD CONSTRAINT RA_AM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AM_R_ATY_FK'
ALTER TABLE RA_ADDITIVE_METHOD ADD CONSTRAINT RA_AM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AM_R_LANG_FK'
ALTER TABLE RA_ADDITIVE_METHOD ADD CONSTRAINT RA_AM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AM_SRCD_FK'
ALTER TABLE RA_ADDITIVE_METHOD ADD CONSTRAINT RA_AM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADT_BA_FK'
ALTER TABLE RA_ADDITIVE_TYPE ADD CONSTRAINT RA_ADT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADT_PSWA_FK'
ALTER TABLE RA_ADDITIVE_TYPE ADD CONSTRAINT RA_ADT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADT_R_ADT_FK'
ALTER TABLE RA_ADDITIVE_TYPE ADD CONSTRAINT RA_ADT_R_ADT_FK FOREIGN KEY
(
ADDITIVE_TYPE
)
REFERENCES R_ADDITIVE_TYPE
(
ADDITIVE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADT_R_ART_FK'
ALTER TABLE RA_ADDITIVE_TYPE ADD CONSTRAINT RA_ADT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADT_R_ATY_FK'
ALTER TABLE RA_ADDITIVE_TYPE ADD CONSTRAINT RA_ADT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADT_R_LANG_FK'
ALTER TABLE RA_ADDITIVE_TYPE ADD CONSTRAINT RA_ADT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADT_SRCD_FK'
ALTER TABLE RA_ADDITIVE_TYPE ADD CONSTRAINT RA_ADT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADDT_BA_FK'
ALTER TABLE RA_ADDRESS_TYPE ADD CONSTRAINT RA_ADDT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADDT_PSWA_FK'
ALTER TABLE RA_ADDRESS_TYPE ADD CONSTRAINT RA_ADDT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADDT_R_ADDT_FK'
ALTER TABLE RA_ADDRESS_TYPE ADD CONSTRAINT RA_ADDT_R_ADDT_FK FOREIGN KEY
(
ADDRESS_TYPE
)
REFERENCES R_ADDRESS_TYPE
(
ADDRESS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADDT_R_ART_FK'
ALTER TABLE RA_ADDRESS_TYPE ADD CONSTRAINT RA_ADDT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADDT_R_ATY_FK'
ALTER TABLE RA_ADDRESS_TYPE ADD CONSTRAINT RA_ADDT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADDT_R_LANG_FK'
ALTER TABLE RA_ADDRESS_TYPE ADD CONSTRAINT RA_ADDT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADDT_SRCD_FK'
ALTER TABLE RA_ADDRESS_TYPE ADD CONSTRAINT RA_ADDT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACT1_BA_FK'
ALTER TABLE RA_AIRCRAFT_TYPE ADD CONSTRAINT RA_ACT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACT1_PSWA_FK'
ALTER TABLE RA_AIRCRAFT_TYPE ADD CONSTRAINT RA_ACT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACT1_R_ACT1_FK'
ALTER TABLE RA_AIRCRAFT_TYPE ADD CONSTRAINT RA_ACT1_R_ACT1_FK FOREIGN KEY
(
AIRCRAFT_TYPE
)
REFERENCES R_AIRCRAFT_TYPE
(
AIRCRAFT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACT1_R_ART_FK'
ALTER TABLE RA_AIRCRAFT_TYPE ADD CONSTRAINT RA_ACT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACT1_R_ATY_FK'
ALTER TABLE RA_AIRCRAFT_TYPE ADD CONSTRAINT RA_ACT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACT1_R_LANG_FK'
ALTER TABLE RA_AIRCRAFT_TYPE ADD CONSTRAINT RA_ACT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACT1_SRCD_FK'
ALTER TABLE RA_AIRCRAFT_TYPE ADD CONSTRAINT RA_ACT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AGC_BA_FK'
ALTER TABLE RA_AIR_GAS_CODE ADD CONSTRAINT RA_AGC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AGC_PSWA_FK'
ALTER TABLE RA_AIR_GAS_CODE ADD CONSTRAINT RA_AGC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AGC_R_AGC_FK'
ALTER TABLE RA_AIR_GAS_CODE ADD CONSTRAINT RA_AGC_R_AGC_FK FOREIGN KEY
(
AIR_GAS_CODE
)
REFERENCES R_AIR_GAS_CODE
(
AIR_GAS_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AGC_R_ART_FK'
ALTER TABLE RA_AIR_GAS_CODE ADD CONSTRAINT RA_AGC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AGC_R_ATY_FK'
ALTER TABLE RA_AIR_GAS_CODE ADD CONSTRAINT RA_AGC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AGC_R_LANG_FK'
ALTER TABLE RA_AIR_GAS_CODE ADD CONSTRAINT RA_AGC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AGC_SRCD_FK'
ALTER TABLE RA_AIR_GAS_CODE ADD CONSTRAINT RA_AGC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ART_BA_FK'
ALTER TABLE RA_ALIAS_REASON_TYPE ADD CONSTRAINT RA_ART_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ART_PSWA_FK'
ALTER TABLE RA_ALIAS_REASON_TYPE ADD CONSTRAINT RA_ART_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ART_R_ART_FK'
ALTER TABLE RA_ALIAS_REASON_TYPE ADD CONSTRAINT RA_ART_R_ART_FK FOREIGN KEY
(
REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ART_R_ATY_FK'
ALTER TABLE RA_ALIAS_REASON_TYPE ADD CONSTRAINT RA_ART_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ART_R_LANG_FK'
ALTER TABLE RA_ALIAS_REASON_TYPE ADD CONSTRAINT RA_ART_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ART_SRCD_FK'
ALTER TABLE RA_ALIAS_REASON_TYPE ADD CONSTRAINT RA_ART_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ATY_BA_FK'
ALTER TABLE RA_ALIAS_TYPE ADD CONSTRAINT RA_ATY_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ATY_PSWA_FK'
ALTER TABLE RA_ALIAS_TYPE ADD CONSTRAINT RA_ATY_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ATY_R_ART_FK'
ALTER TABLE RA_ALIAS_TYPE ADD CONSTRAINT RA_ATY_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ATY_R_ATY_FK'
ALTER TABLE RA_ALIAS_TYPE ADD CONSTRAINT RA_ATY_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ATY_R_LANG_FK'
ALTER TABLE RA_ALIAS_TYPE ADD CONSTRAINT RA_ATY_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ATY_SRCD_FK'
ALTER TABLE RA_ALIAS_TYPE ADD CONSTRAINT RA_ATY_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ALT_BA_FK'
ALTER TABLE RA_ALLOCATION_TYPE ADD CONSTRAINT RA_ALT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ALT_PSWA_FK'
ALTER TABLE RA_ALLOCATION_TYPE ADD CONSTRAINT RA_ALT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ALT_R_ART_FK'
ALTER TABLE RA_ALLOCATION_TYPE ADD CONSTRAINT RA_ALT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ALT_R_ATY_FK'
ALTER TABLE RA_ALLOCATION_TYPE ADD CONSTRAINT RA_ALT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ALT_R_ALT_FK'
ALTER TABLE RA_ALLOCATION_TYPE ADD CONSTRAINT RA_ALT_R_ALT_FK FOREIGN KEY
(
ALLOCATION_TYPE
)
REFERENCES R_ALLOCATION_TYPE
(
ALLOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ALT_R_LANG_FK'
ALTER TABLE RA_ALLOCATION_TYPE ADD CONSTRAINT RA_ALT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ALT_SRCD_FK'
ALTER TABLE RA_ALLOCATION_TYPE ADD CONSTRAINT RA_ALT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AX_BA_FK'
ALTER TABLE RA_ALLOWABLE_EXPENSE ADD CONSTRAINT RA_AX_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AX_PSWA_FK'
ALTER TABLE RA_ALLOWABLE_EXPENSE ADD CONSTRAINT RA_AX_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AX_R_ART_FK'
ALTER TABLE RA_ALLOWABLE_EXPENSE ADD CONSTRAINT RA_AX_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AX_R_ATY_FK'
ALTER TABLE RA_ALLOWABLE_EXPENSE ADD CONSTRAINT RA_AX_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AX_R_AX_FK'
ALTER TABLE RA_ALLOWABLE_EXPENSE ADD CONSTRAINT RA_AX_R_AX_FK FOREIGN KEY
(
ALLOWABLE_EXPENSE_TYPE
)
REFERENCES R_ALLOWABLE_EXPENSE
(
ALLOWABLE_EXPENSE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AX_R_LANG_FK'
ALTER TABLE RA_ALLOWABLE_EXPENSE ADD CONSTRAINT RA_AX_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AX_SRCD_FK'
ALTER TABLE RA_ALLOWABLE_EXPENSE ADD CONSTRAINT RA_AX_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AP_BA_FK'
ALTER TABLE RA_ANALYSIS_PROPERTY ADD CONSTRAINT RA_AP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AP_PSWA_FK'
ALTER TABLE RA_ANALYSIS_PROPERTY ADD CONSTRAINT RA_AP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AP_R_ART_FK'
ALTER TABLE RA_ANALYSIS_PROPERTY ADD CONSTRAINT RA_AP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AP_R_ATY_FK'
ALTER TABLE RA_ANALYSIS_PROPERTY ADD CONSTRAINT RA_AP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AP_R_AP_FK'
ALTER TABLE RA_ANALYSIS_PROPERTY ADD CONSTRAINT RA_AP_R_AP_FK FOREIGN KEY
(
ANALYSIS_PROPERTY
)
REFERENCES R_ANALYSIS_PROPERTY
(
ANALYSIS_PROPERTY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AP_R_LANG_FK'
ALTER TABLE RA_ANALYSIS_PROPERTY ADD CONSTRAINT RA_AP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AP_SRCD_FK'
ALTER TABLE RA_ANALYSIS_PROPERTY ADD CONSTRAINT RA_AP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLAT_BA_FK'
ALTER TABLE RA_ANL_ACCURACY_TYPE ADD CONSTRAINT RA_ANLAT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLAT_PSWA_FK'
ALTER TABLE RA_ANL_ACCURACY_TYPE ADD CONSTRAINT RA_ANLAT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLAT_R_ART_FK'
ALTER TABLE RA_ANL_ACCURACY_TYPE ADD CONSTRAINT RA_ANLAT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLAT_R_ATY_FK'
ALTER TABLE RA_ANL_ACCURACY_TYPE ADD CONSTRAINT RA_ANLAT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLAT_R_ANLAT_FK'
ALTER TABLE RA_ANL_ACCURACY_TYPE ADD CONSTRAINT RA_ANLAT_R_ANLAT_FK FOREIGN KEY
(
ACCURACY_TYPE
)
REFERENCES R_ANL_ACCURACY_TYPE
(
ACCURACY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLAT_R_LANG_FK'
ALTER TABLE RA_ANL_ACCURACY_TYPE ADD CONSTRAINT RA_ANLAT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLAT_SRCD_FK'
ALTER TABLE RA_ANL_ACCURACY_TYPE ADD CONSTRAINT RA_ANLAT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ABRT_BA_FK'
ALTER TABLE RA_ANL_BA_ROLE_TYPE ADD CONSTRAINT RA_ABRT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ABRT_PSWA_FK'
ALTER TABLE RA_ANL_BA_ROLE_TYPE ADD CONSTRAINT RA_ABRT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ABRT_R_ART_FK'
ALTER TABLE RA_ANL_BA_ROLE_TYPE ADD CONSTRAINT RA_ABRT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ABRT_R_ATY_FK'
ALTER TABLE RA_ANL_BA_ROLE_TYPE ADD CONSTRAINT RA_ABRT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ABRT_R_ABRT_FK'
ALTER TABLE RA_ANL_BA_ROLE_TYPE ADD CONSTRAINT RA_ABRT_R_ABRT_FK FOREIGN KEY
(
BA_ROLE_TYPE
)
REFERENCES R_ANL_BA_ROLE_TYPE
(
BA_ROLE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ABRT_R_LANG_FK'
ALTER TABLE RA_ANL_BA_ROLE_TYPE ADD CONSTRAINT RA_ABRT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ABRT_SRCD_FK'
ALTER TABLE RA_ANL_BA_ROLE_TYPE ADD CONSTRAINT RA_ABRT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCET_BA_FK'
ALTER TABLE RA_ANL_CALC_EQUIV_TYPE ADD CONSTRAINT RA_ANLCET_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCET_PSWA_FK'
ALTER TABLE RA_ANL_CALC_EQUIV_TYPE ADD CONSTRAINT RA_ANLCET_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCET_R_ART_FK'
ALTER TABLE RA_ANL_CALC_EQUIV_TYPE ADD CONSTRAINT RA_ANLCET_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCET_R_ATY_FK'
ALTER TABLE RA_ANL_CALC_EQUIV_TYPE ADD CONSTRAINT RA_ANLCET_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCET_R_ANLCET_FK'
ALTER TABLE RA_ANL_CALC_EQUIV_TYPE ADD CONSTRAINT RA_ANLCET_R_ANLCET_FK FOREIGN KEY
(
CALCULATION_EQUIV_TYPE
)
REFERENCES R_ANL_CALC_EQUIV_TYPE
(
CALCULATION_EQUIV_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCET_R_LANG_FK'
ALTER TABLE RA_ANL_CALC_EQUIV_TYPE ADD CONSTRAINT RA_ANLCET_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCET_SRCD_FK'
ALTER TABLE RA_ANL_CALC_EQUIV_TYPE ADD CONSTRAINT RA_ANLCET_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCP_BA_FK'
ALTER TABLE RA_ANL_CHRO_PROPERTY ADD CONSTRAINT RA_ANLCP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCP_PSWA_FK'
ALTER TABLE RA_ANL_CHRO_PROPERTY ADD CONSTRAINT RA_ANLCP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCP_R_ART_FK'
ALTER TABLE RA_ANL_CHRO_PROPERTY ADD CONSTRAINT RA_ANLCP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCP_R_ATY_FK'
ALTER TABLE RA_ANL_CHRO_PROPERTY ADD CONSTRAINT RA_ANLCP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCP_R_ANLCP_FK'
ALTER TABLE RA_ANL_CHRO_PROPERTY ADD CONSTRAINT RA_ANLCP_R_ANLCP_FK FOREIGN KEY
(
CHRO_PROPERTY_TYPE
)
REFERENCES R_ANL_CHRO_PROPERTY
(
CHRO_PROPERTY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCP_R_LANG_FK'
ALTER TABLE RA_ANL_CHRO_PROPERTY ADD CONSTRAINT RA_ANLCP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCP_SRCD_FK'
ALTER TABLE RA_ANL_CHRO_PROPERTY ADD CONSTRAINT RA_ANLCP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCMPT_BA_FK'
ALTER TABLE RA_ANL_COMP_TYPE ADD CONSTRAINT RA_ANLCMPT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCMPT_PSWA_FK'
ALTER TABLE RA_ANL_COMP_TYPE ADD CONSTRAINT RA_ANLCMPT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCMPT_R_ART_FK'
ALTER TABLE RA_ANL_COMP_TYPE ADD CONSTRAINT RA_ANLCMPT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCMPT_R_ATY_FK'
ALTER TABLE RA_ANL_COMP_TYPE ADD CONSTRAINT RA_ANLCMPT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCMPT_R_ANLCMPT_FK1'
ALTER TABLE RA_ANL_COMP_TYPE ADD CONSTRAINT RA_ANLCMPT_R_ANLCMPT_FK1 FOREIGN KEY
(
ANL_COMPONENT_TYPE
)
REFERENCES R_ANL_COMP_TYPE
(
ANL_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCMPT_R_LANG_FK'
ALTER TABLE RA_ANL_COMP_TYPE ADD CONSTRAINT RA_ANLCMPT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCMPT_SRCD_FK'
ALTER TABLE RA_ANL_COMP_TYPE ADD CONSTRAINT RA_ANLCMPT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCT_BA_FK'
ALTER TABLE RA_ANL_CONFIDENCE_TYPE ADD CONSTRAINT RA_ANLCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCT_PSWA_FK'
ALTER TABLE RA_ANL_CONFIDENCE_TYPE ADD CONSTRAINT RA_ANLCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCT_R_ART_FK'
ALTER TABLE RA_ANL_CONFIDENCE_TYPE ADD CONSTRAINT RA_ANLCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCT_R_ATY_FK'
ALTER TABLE RA_ANL_CONFIDENCE_TYPE ADD CONSTRAINT RA_ANLCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCT_R_ANLCT_FK'
ALTER TABLE RA_ANL_CONFIDENCE_TYPE ADD CONSTRAINT RA_ANLCT_R_ANLCT_FK FOREIGN KEY
(
CONFIDENCE_TYPE
)
REFERENCES R_ANL_CONFIDENCE_TYPE
(
CONFIDENCE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCT_R_LANG_FK'
ALTER TABLE RA_ANL_CONFIDENCE_TYPE ADD CONSTRAINT RA_ANLCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLCT_SRCD_FK'
ALTER TABLE RA_ANL_CONFIDENCE_TYPE ADD CONSTRAINT RA_ANLCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLDRV_BA_FK'
ALTER TABLE RA_ANL_DETAIL_REF_VALUE ADD CONSTRAINT RA_ANLDRV_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLDRV_PSWA_FK'
ALTER TABLE RA_ANL_DETAIL_REF_VALUE ADD CONSTRAINT RA_ANLDRV_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLDRV_R_ART_FK'
ALTER TABLE RA_ANL_DETAIL_REF_VALUE ADD CONSTRAINT RA_ANLDRV_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLDRV_R_ATY_FK'
ALTER TABLE RA_ANL_DETAIL_REF_VALUE ADD CONSTRAINT RA_ANLDRV_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLDRV_R_ANLDRV_FK'
ALTER TABLE RA_ANL_DETAIL_REF_VALUE ADD CONSTRAINT RA_ANLDRV_R_ANLDRV_FK FOREIGN KEY
(
REFERENCE_VALUE_TYPE
)
REFERENCES R_ANL_DETAIL_REF_VALUE
(
REFERENCE_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLDRV_R_LANG_FK'
ALTER TABLE RA_ANL_DETAIL_REF_VALUE ADD CONSTRAINT RA_ANLDRV_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLDRV_SRCD_FK'
ALTER TABLE RA_ANL_DETAIL_REF_VALUE ADD CONSTRAINT RA_ANLDRV_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLDT_BA_FK'
ALTER TABLE RA_ANL_DETAIL_TYPE ADD CONSTRAINT RA_ANLDT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLDT_PSWA_FK'
ALTER TABLE RA_ANL_DETAIL_TYPE ADD CONSTRAINT RA_ANLDT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLDT_R_ART_FK'
ALTER TABLE RA_ANL_DETAIL_TYPE ADD CONSTRAINT RA_ANLDT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLDT_R_ATY_FK'
ALTER TABLE RA_ANL_DETAIL_TYPE ADD CONSTRAINT RA_ANLDT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLDT_R_ANLDT_FK'
ALTER TABLE RA_ANL_DETAIL_TYPE ADD CONSTRAINT RA_ANLDT_R_ANLDT_FK FOREIGN KEY
(
ANL_DETAIL_TYPE
)
REFERENCES R_ANL_DETAIL_TYPE
(
ANL_DETAIL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLDT_R_LANG_FK'
ALTER TABLE RA_ANL_DETAIL_TYPE ADD CONSTRAINT RA_ANLDT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLDT_SRCD_FK'
ALTER TABLE RA_ANL_DETAIL_TYPE ADD CONSTRAINT RA_ANLDT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLEVC_BA_FK'
ALTER TABLE RA_ANL_ELEMENT_VALUE_CODE ADD CONSTRAINT RA_ANLEVC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLEVC_PSWA_FK'
ALTER TABLE RA_ANL_ELEMENT_VALUE_CODE ADD CONSTRAINT RA_ANLEVC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLEVC_R_ART_FK'
ALTER TABLE RA_ANL_ELEMENT_VALUE_CODE ADD CONSTRAINT RA_ANLEVC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLEVC_R_ATY_FK'
ALTER TABLE RA_ANL_ELEMENT_VALUE_CODE ADD CONSTRAINT RA_ANLEVC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLEVC_R_ANLEVC_FK'
ALTER TABLE RA_ANL_ELEMENT_VALUE_CODE ADD CONSTRAINT RA_ANLEVC_R_ANLEVC_FK FOREIGN KEY
(
VALUE_CODE
)
REFERENCES R_ANL_ELEMENT_VALUE_CODE
(
VALUE_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLEVC_R_LANG_FK'
ALTER TABLE RA_ANL_ELEMENT_VALUE_CODE ADD CONSTRAINT RA_ANLEVC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLEVC_SRCD_FK'
ALTER TABLE RA_ANL_ELEMENT_VALUE_CODE ADD CONSTRAINT RA_ANLEVC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLEVT_BA_FK'
ALTER TABLE RA_ANL_ELEMENT_VALUE_TYPE ADD CONSTRAINT RA_ANLEVT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLEVT_PSWA_FK'
ALTER TABLE RA_ANL_ELEMENT_VALUE_TYPE ADD CONSTRAINT RA_ANLEVT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLEVT_R_ART_FK'
ALTER TABLE RA_ANL_ELEMENT_VALUE_TYPE ADD CONSTRAINT RA_ANLEVT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLEVT_R_ATY_FK'
ALTER TABLE RA_ANL_ELEMENT_VALUE_TYPE ADD CONSTRAINT RA_ANLEVT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLEVT_R_ANLEVT_FK'
ALTER TABLE RA_ANL_ELEMENT_VALUE_TYPE ADD CONSTRAINT RA_ANLEVT_R_ANLEVT_FK FOREIGN KEY
(
ANL_VALUE_TYPE
)
REFERENCES R_ANL_ELEMENT_VALUE_TYPE
(
ANL_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLEVT_R_LANG_FK'
ALTER TABLE RA_ANL_ELEMENT_VALUE_TYPE ADD CONSTRAINT RA_ANLEVT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLEVT_SRCD_FK'
ALTER TABLE RA_ANL_ELEMENT_VALUE_TYPE ADD CONSTRAINT RA_ANLEVT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLER_BA_FK'
ALTER TABLE RA_ANL_EQUIP_ROLE ADD CONSTRAINT RA_ANLER_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLER_PSWA_FK'
ALTER TABLE RA_ANL_EQUIP_ROLE ADD CONSTRAINT RA_ANLER_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLER_R_ART_FK'
ALTER TABLE RA_ANL_EQUIP_ROLE ADD CONSTRAINT RA_ANLER_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLER_R_ATY_FK'
ALTER TABLE RA_ANL_EQUIP_ROLE ADD CONSTRAINT RA_ANLER_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLER_R_ANLER_FK'
ALTER TABLE RA_ANL_EQUIP_ROLE ADD CONSTRAINT RA_ANLER_R_ANLER_FK FOREIGN KEY
(
ANL_EQUIP_ROLE
)
REFERENCES R_ANL_EQUIP_ROLE
(
ANL_EQUIP_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLER_R_LANG_FK'
ALTER TABLE RA_ANL_EQUIP_ROLE ADD CONSTRAINT RA_ANLER_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLER_SRCD_FK'
ALTER TABLE RA_ANL_EQUIP_ROLE ADD CONSTRAINT RA_ANLER_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLFT_BA_FK'
ALTER TABLE RA_ANL_FORMULA_TYPE ADD CONSTRAINT RA_ANLFT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLFT_PSWA_FK'
ALTER TABLE RA_ANL_FORMULA_TYPE ADD CONSTRAINT RA_ANLFT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLFT_R_ART_FK'
ALTER TABLE RA_ANL_FORMULA_TYPE ADD CONSTRAINT RA_ANLFT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLFT_R_ATY_FK'
ALTER TABLE RA_ANL_FORMULA_TYPE ADD CONSTRAINT RA_ANLFT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLFT_R_ANLFT_FK'
ALTER TABLE RA_ANL_FORMULA_TYPE ADD CONSTRAINT RA_ANLFT_R_ANLFT_FK FOREIGN KEY
(
FORMULA_TYPE
)
REFERENCES R_ANL_FORMULA_TYPE
(
FORMULA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLFT_R_LANG_FK'
ALTER TABLE RA_ANL_FORMULA_TYPE ADD CONSTRAINT RA_ANLFT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLFT_SRCD_FK'
ALTER TABLE RA_ANL_FORMULA_TYPE ADD CONSTRAINT RA_ANLFT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLGCV_BA_FK'
ALTER TABLE RA_ANL_GAS_CHRO_VALUE ADD CONSTRAINT RA_ANLGCV_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLGCV_PSWA_FK'
ALTER TABLE RA_ANL_GAS_CHRO_VALUE ADD CONSTRAINT RA_ANLGCV_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLGCV_R_ART_FK'
ALTER TABLE RA_ANL_GAS_CHRO_VALUE ADD CONSTRAINT RA_ANLGCV_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLGCV_R_ATY_FK'
ALTER TABLE RA_ANL_GAS_CHRO_VALUE ADD CONSTRAINT RA_ANLGCV_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLGCV_R_ANLGCV_FK'
ALTER TABLE RA_ANL_GAS_CHRO_VALUE ADD CONSTRAINT RA_ANLGCV_R_ANLGCV_FK FOREIGN KEY
(
ANL_VALUE_TYPE
)
REFERENCES R_ANL_GAS_CHRO_VALUE
(
ANL_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLGCV_R_LANG_FK'
ALTER TABLE RA_ANL_GAS_CHRO_VALUE ADD CONSTRAINT RA_ANLGCV_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLGCV_SRCD_FK'
ALTER TABLE RA_ANL_GAS_CHRO_VALUE ADD CONSTRAINT RA_ANLGCV_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLGP_BA_FK'
ALTER TABLE RA_ANL_GAS_PROPERTY ADD CONSTRAINT RA_ANLGP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLGP_PSWA_FK'
ALTER TABLE RA_ANL_GAS_PROPERTY ADD CONSTRAINT RA_ANLGP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLGP_R_ART_FK'
ALTER TABLE RA_ANL_GAS_PROPERTY ADD CONSTRAINT RA_ANLGP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLGP_R_ATY_FK'
ALTER TABLE RA_ANL_GAS_PROPERTY ADD CONSTRAINT RA_ANLGP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLGP_R_ANLGP_FK'
ALTER TABLE RA_ANL_GAS_PROPERTY ADD CONSTRAINT RA_ANLGP_R_ANLGP_FK FOREIGN KEY
(
ANALYSIS_PROPERTY
)
REFERENCES R_ANL_GAS_PROPERTY
(
ANALYSIS_PROPERTY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLGP_R_LANG_FK'
ALTER TABLE RA_ANL_GAS_PROPERTY ADD CONSTRAINT RA_ANLGP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLGP_SRCD_FK'
ALTER TABLE RA_ANL_GAS_PROPERTY ADD CONSTRAINT RA_ANLGP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLGPC_BA_FK'
ALTER TABLE RA_ANL_GAS_PROPERTY_CODE ADD CONSTRAINT RA_ANLGPC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLGPC_PSWA_FK'
ALTER TABLE RA_ANL_GAS_PROPERTY_CODE ADD CONSTRAINT RA_ANLGPC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLGPC_R_ART_FK'
ALTER TABLE RA_ANL_GAS_PROPERTY_CODE ADD CONSTRAINT RA_ANLGPC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLGPC_R_ATY_FK'
ALTER TABLE RA_ANL_GAS_PROPERTY_CODE ADD CONSTRAINT RA_ANLGPC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLGPC_R_ANLGP_FK'
ALTER TABLE RA_ANL_GAS_PROPERTY_CODE ADD CONSTRAINT RA_ANLGPC_R_ANLGP_FK FOREIGN KEY
(
ANALYSIS_PROPERTY
)
REFERENCES R_ANL_GAS_PROPERTY
(
ANALYSIS_PROPERTY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLGPC_R_ANLGPC_FK'
ALTER TABLE RA_ANL_GAS_PROPERTY_CODE ADD CONSTRAINT RA_ANLGPC_R_ANLGPC_FK FOREIGN KEY
(
ANALYSIS_PROPERTY,
PROPERTY_VALUE_CODE
)
REFERENCES R_ANL_GAS_PROPERTY_CODE
(
ANALYSIS_PROPERTY,
PROPERTY_VALUE_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLGPC_R_LANG_FK'
ALTER TABLE RA_ANL_GAS_PROPERTY_CODE ADD CONSTRAINT RA_ANLGPC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLGPC_SRCD_FK'
ALTER TABLE RA_ANL_GAS_PROPERTY_CODE ADD CONSTRAINT RA_ANLGPC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLME_BA_FK'
ALTER TABLE RA_ANL_METHOD_EQUIV_TYPE ADD CONSTRAINT RA_ANLME_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLME_PSWA_FK'
ALTER TABLE RA_ANL_METHOD_EQUIV_TYPE ADD CONSTRAINT RA_ANLME_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLME_R_ART_FK'
ALTER TABLE RA_ANL_METHOD_EQUIV_TYPE ADD CONSTRAINT RA_ANLME_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLME_R_ATY_FK'
ALTER TABLE RA_ANL_METHOD_EQUIV_TYPE ADD CONSTRAINT RA_ANLME_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLME_R_ANLME_FK'
ALTER TABLE RA_ANL_METHOD_EQUIV_TYPE ADD CONSTRAINT RA_ANLME_R_ANLME_FK FOREIGN KEY
(
METHOD_EQUIV_TYPE
)
REFERENCES R_ANL_METHOD_EQUIV_TYPE
(
METHOD_EQUIV_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLME_R_LANG_FK'
ALTER TABLE RA_ANL_METHOD_EQUIV_TYPE ADD CONSTRAINT RA_ANLME_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLME_SRCD_FK'
ALTER TABLE RA_ANL_METHOD_EQUIV_TYPE ADD CONSTRAINT RA_ANLME_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLMST_BA_FK'
ALTER TABLE RA_ANL_METHOD_SET_TYPE ADD CONSTRAINT RA_ANLMST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLMST_PSWA_FK'
ALTER TABLE RA_ANL_METHOD_SET_TYPE ADD CONSTRAINT RA_ANLMST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLMST_R_ART_FK'
ALTER TABLE RA_ANL_METHOD_SET_TYPE ADD CONSTRAINT RA_ANLMST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLMST_R_ATY_FK'
ALTER TABLE RA_ANL_METHOD_SET_TYPE ADD CONSTRAINT RA_ANLMST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLMST_R_ANLMST_FK'
ALTER TABLE RA_ANL_METHOD_SET_TYPE ADD CONSTRAINT RA_ANLMST_R_ANLMST_FK FOREIGN KEY
(
METHOD_SET_TYPE
)
REFERENCES R_ANL_METHOD_SET_TYPE
(
METHOD_SET_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLMST_R_LANG_FK'
ALTER TABLE RA_ANL_METHOD_SET_TYPE ADD CONSTRAINT RA_ANLMST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLMST_SRCD_FK'
ALTER TABLE RA_ANL_METHOD_SET_TYPE ADD CONSTRAINT RA_ANLMST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLMR_BA_FK'
ALTER TABLE RA_ANL_MISSING_REP ADD CONSTRAINT RA_ANLMR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLMR_PSWA_FK'
ALTER TABLE RA_ANL_MISSING_REP ADD CONSTRAINT RA_ANLMR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLMR_R_ART_FK'
ALTER TABLE RA_ANL_MISSING_REP ADD CONSTRAINT RA_ANLMR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLMR_R_ATY_FK'
ALTER TABLE RA_ANL_MISSING_REP ADD CONSTRAINT RA_ANLMR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLMR_R_ANLMR_FK'
ALTER TABLE RA_ANL_MISSING_REP ADD CONSTRAINT RA_ANLMR_R_ANLMR_FK FOREIGN KEY
(
MISSING_REPRESENTATION
)
REFERENCES R_ANL_MISSING_REP
(
MISSING_REPRESENTATION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLMR_R_LANG_FK'
ALTER TABLE RA_ANL_MISSING_REP ADD CONSTRAINT RA_ANLMR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLMR_SRCD_FK'
ALTER TABLE RA_ANL_MISSING_REP ADD CONSTRAINT RA_ANLMR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLNR_BA_FK'
ALTER TABLE RA_ANL_NULL_REP ADD CONSTRAINT RA_ANLNR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLNR_PSWA_FK'
ALTER TABLE RA_ANL_NULL_REP ADD CONSTRAINT RA_ANLNR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLNR_R_ART_FK'
ALTER TABLE RA_ANL_NULL_REP ADD CONSTRAINT RA_ANLNR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLNR_R_ATY_FK'
ALTER TABLE RA_ANL_NULL_REP ADD CONSTRAINT RA_ANLNR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLNR_R_ANLNR_FK'
ALTER TABLE RA_ANL_NULL_REP ADD CONSTRAINT RA_ANLNR_R_ANLNR_FK FOREIGN KEY
(
NULL_REPRESENTATION
)
REFERENCES R_ANL_NULL_REP
(
NULL_REPRESENTATION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLNR_R_LANG_FK'
ALTER TABLE RA_ANL_NULL_REP ADD CONSTRAINT RA_ANLNR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLNR_SRCD_FK'
ALTER TABLE RA_ANL_NULL_REP ADD CONSTRAINT RA_ANLNR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLOPC_BA_FK'
ALTER TABLE RA_ANL_OIL_PROPERTY_CODE ADD CONSTRAINT RA_ANLOPC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLOPC_PSWA_FK'
ALTER TABLE RA_ANL_OIL_PROPERTY_CODE ADD CONSTRAINT RA_ANLOPC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLOPC_R_ART_FK'
ALTER TABLE RA_ANL_OIL_PROPERTY_CODE ADD CONSTRAINT RA_ANLOPC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLOPC_R_ATY_FK'
ALTER TABLE RA_ANL_OIL_PROPERTY_CODE ADD CONSTRAINT RA_ANLOPC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLOPC_R_AP_FK'
ALTER TABLE RA_ANL_OIL_PROPERTY_CODE ADD CONSTRAINT RA_ANLOPC_R_AP_FK FOREIGN KEY
(
ANALYSIS_PROPERTY
)
REFERENCES R_ANALYSIS_PROPERTY
(
ANALYSIS_PROPERTY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLOPC_R_ANLOPC_FK'
ALTER TABLE RA_ANL_OIL_PROPERTY_CODE ADD CONSTRAINT RA_ANLOPC_R_ANLOPC_FK FOREIGN KEY
(
ANALYSIS_PROPERTY,
PROPERTY_VALUE_CODE
)
REFERENCES R_ANL_OIL_PROPERTY_CODE
(
ANALYSIS_PROPERTY,
PROPERTY_VALUE_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLOPC_R_LANG_FK'
ALTER TABLE RA_ANL_OIL_PROPERTY_CODE ADD CONSTRAINT RA_ANLOPC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLOPC_SRCD_FK'
ALTER TABLE RA_ANL_OIL_PROPERTY_CODE ADD CONSTRAINT RA_ANLOPC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPT_BA_FK'
ALTER TABLE RA_ANL_PARAMETER_TYPE ADD CONSTRAINT RA_ANLPT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPT_PSWA_FK'
ALTER TABLE RA_ANL_PARAMETER_TYPE ADD CONSTRAINT RA_ANLPT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPT_R_ART_FK'
ALTER TABLE RA_ANL_PARAMETER_TYPE ADD CONSTRAINT RA_ANLPT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPT_R_ATY_FK'
ALTER TABLE RA_ANL_PARAMETER_TYPE ADD CONSTRAINT RA_ANLPT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPT_R_ANLPT_FK'
ALTER TABLE RA_ANL_PARAMETER_TYPE ADD CONSTRAINT RA_ANLPT_R_ANLPT_FK FOREIGN KEY
(
PARAMETER_TYPE
)
REFERENCES R_ANL_PARAMETER_TYPE
(
PARAMETER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPT_R_LANG_FK'
ALTER TABLE RA_ANL_PARAMETER_TYPE ADD CONSTRAINT RA_ANLPT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPT_SRCD_FK'
ALTER TABLE RA_ANL_PARAMETER_TYPE ADD CONSTRAINT RA_ANLPT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPBR_BA_FK'
ALTER TABLE RA_ANL_PROBLEM_RESOLUTION ADD CONSTRAINT RA_ANLPBR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPBR_PSWA_FK'
ALTER TABLE RA_ANL_PROBLEM_RESOLUTION ADD CONSTRAINT RA_ANLPBR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPBR_R_ART_FK'
ALTER TABLE RA_ANL_PROBLEM_RESOLUTION ADD CONSTRAINT RA_ANLPBR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPBR_R_ATY_FK'
ALTER TABLE RA_ANL_PROBLEM_RESOLUTION ADD CONSTRAINT RA_ANLPBR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPBR_R_ANLPBR_FK'
ALTER TABLE RA_ANL_PROBLEM_RESOLUTION ADD CONSTRAINT RA_ANLPBR_R_ANLPBR_FK FOREIGN KEY
(
RESOLUTION_METHOD
)
REFERENCES R_ANL_PROBLEM_RESOLUTION
(
RESOLUTION_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPBR_R_LANG_FK'
ALTER TABLE RA_ANL_PROBLEM_RESOLUTION ADD CONSTRAINT RA_ANLPBR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPBR_SRCD_FK'
ALTER TABLE RA_ANL_PROBLEM_RESOLUTION ADD CONSTRAINT RA_ANLPBR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPR_BA_FK'
ALTER TABLE RA_ANL_PROBLEM_RESULT ADD CONSTRAINT RA_ANLPR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPR_PSWA_FK'
ALTER TABLE RA_ANL_PROBLEM_RESULT ADD CONSTRAINT RA_ANLPR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPR_R_ART_FK'
ALTER TABLE RA_ANL_PROBLEM_RESULT ADD CONSTRAINT RA_ANLPR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPR_R_ATY_FK'
ALTER TABLE RA_ANL_PROBLEM_RESULT ADD CONSTRAINT RA_ANLPR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPR_R_ANLPR_FK'
ALTER TABLE RA_ANL_PROBLEM_RESULT ADD CONSTRAINT RA_ANLPR_R_ANLPR_FK FOREIGN KEY
(
PROBLEM_RESULT
)
REFERENCES R_ANL_PROBLEM_RESULT
(
PROBLEM_RESULT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPR_R_LANG_FK'
ALTER TABLE RA_ANL_PROBLEM_RESULT ADD CONSTRAINT RA_ANLPR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPR_SRCD_FK'
ALTER TABLE RA_ANL_PROBLEM_RESULT ADD CONSTRAINT RA_ANLPR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPS_BA_FK'
ALTER TABLE RA_ANL_PROBLEM_SEVERITY ADD CONSTRAINT RA_ANLPS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPS_PSWA_FK'
ALTER TABLE RA_ANL_PROBLEM_SEVERITY ADD CONSTRAINT RA_ANLPS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPS_R_ART_FK'
ALTER TABLE RA_ANL_PROBLEM_SEVERITY ADD CONSTRAINT RA_ANLPS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPS_R_ATY_FK'
ALTER TABLE RA_ANL_PROBLEM_SEVERITY ADD CONSTRAINT RA_ANLPS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPS_R_ANLPS_FK'
ALTER TABLE RA_ANL_PROBLEM_SEVERITY ADD CONSTRAINT RA_ANLPS_R_ANLPS_FK FOREIGN KEY
(
PROBLEM_SEVERITY
)
REFERENCES R_ANL_PROBLEM_SEVERITY
(
PROBLEM_SEVERITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPS_R_LANG_FK'
ALTER TABLE RA_ANL_PROBLEM_SEVERITY ADD CONSTRAINT RA_ANLPS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPS_SRCD_FK'
ALTER TABLE RA_ANL_PROBLEM_SEVERITY ADD CONSTRAINT RA_ANLPS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPRBT_BA_FK'
ALTER TABLE RA_ANL_PROBLEM_TYPE ADD CONSTRAINT RA_ANLPRBT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPRBT_PSWA_FK'
ALTER TABLE RA_ANL_PROBLEM_TYPE ADD CONSTRAINT RA_ANLPRBT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPRBT_R_ART_FK'
ALTER TABLE RA_ANL_PROBLEM_TYPE ADD CONSTRAINT RA_ANLPRBT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPRBT_R_ATY_FK'
ALTER TABLE RA_ANL_PROBLEM_TYPE ADD CONSTRAINT RA_ANLPRBT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPRBT_R_ANLPRBT_FK1'
ALTER TABLE RA_ANL_PROBLEM_TYPE ADD CONSTRAINT RA_ANLPRBT_R_ANLPRBT_FK1 FOREIGN KEY
(
PROBLEM_TYPE
)
REFERENCES R_ANL_PROBLEM_TYPE
(
PROBLEM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPRBT_R_LANG_FK'
ALTER TABLE RA_ANL_PROBLEM_TYPE ADD CONSTRAINT RA_ANLPRBT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLPRBT_SRCD_FK'
ALTER TABLE RA_ANL_PROBLEM_TYPE ADD CONSTRAINT RA_ANLPRBT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLRV_BA_FK'
ALTER TABLE RA_ANL_REF_VALUE ADD CONSTRAINT RA_ANLRV_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLRV_PSWA_FK'
ALTER TABLE RA_ANL_REF_VALUE ADD CONSTRAINT RA_ANLRV_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLRV_R_ART_FK'
ALTER TABLE RA_ANL_REF_VALUE ADD CONSTRAINT RA_ANLRV_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLRV_R_ATY_FK'
ALTER TABLE RA_ANL_REF_VALUE ADD CONSTRAINT RA_ANLRV_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLRV_R_ANLRV_FK'
ALTER TABLE RA_ANL_REF_VALUE ADD CONSTRAINT RA_ANLRV_R_ANLRV_FK FOREIGN KEY
(
REFERENCE_VALUE_TYPE
)
REFERENCES R_ANL_REF_VALUE
(
REFERENCE_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLRV_R_LANG_FK'
ALTER TABLE RA_ANL_REF_VALUE ADD CONSTRAINT RA_ANLRV_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLRV_SRCD_FK'
ALTER TABLE RA_ANL_REF_VALUE ADD CONSTRAINT RA_ANLRV_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLRT_BA_FK'
ALTER TABLE RA_ANL_REMARK_TYPE ADD CONSTRAINT RA_ANLRT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLRT_PSWA_FK'
ALTER TABLE RA_ANL_REMARK_TYPE ADD CONSTRAINT RA_ANLRT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLRT_R_ART_FK'
ALTER TABLE RA_ANL_REMARK_TYPE ADD CONSTRAINT RA_ANLRT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLRT_R_ATY_FK'
ALTER TABLE RA_ANL_REMARK_TYPE ADD CONSTRAINT RA_ANLRT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLRT_R_ANLRT_FK'
ALTER TABLE RA_ANL_REMARK_TYPE ADD CONSTRAINT RA_ANLRT_R_ANLRT_FK FOREIGN KEY
(
ANL_REMARK_TYPE
)
REFERENCES R_ANL_REMARK_TYPE
(
ANL_REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLRT_R_LANG_FK'
ALTER TABLE RA_ANL_REMARK_TYPE ADD CONSTRAINT RA_ANLRT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLRT_SRCD_FK'
ALTER TABLE RA_ANL_REMARK_TYPE ADD CONSTRAINT RA_ANLRT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLR_BA_FK'
ALTER TABLE RA_ANL_REPEATABILITY ADD CONSTRAINT RA_ANLR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLR_PSWA_FK'
ALTER TABLE RA_ANL_REPEATABILITY ADD CONSTRAINT RA_ANLR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLR_R_ART_FK'
ALTER TABLE RA_ANL_REPEATABILITY ADD CONSTRAINT RA_ANLR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLR_R_ATY_FK'
ALTER TABLE RA_ANL_REPEATABILITY ADD CONSTRAINT RA_ANLR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLR_R_ANLR_FK'
ALTER TABLE RA_ANL_REPEATABILITY ADD CONSTRAINT RA_ANLR_R_ANLR_FK FOREIGN KEY
(
REPEATABILITY_TYPE
)
REFERENCES R_ANL_REPEATABILITY
(
REPEATABILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLR_R_LANG_FK'
ALTER TABLE RA_ANL_REPEATABILITY ADD CONSTRAINT RA_ANLR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLR_SRCD_FK'
ALTER TABLE RA_ANL_REPEATABILITY ADD CONSTRAINT RA_ANLR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLSX_BA_FK'
ALTER TABLE RA_ANL_STEP_XREF ADD CONSTRAINT RA_ANLSX_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLSX_PSWA_FK'
ALTER TABLE RA_ANL_STEP_XREF ADD CONSTRAINT RA_ANLSX_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLSX_R_ART_FK'
ALTER TABLE RA_ANL_STEP_XREF ADD CONSTRAINT RA_ANLSX_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLSX_R_ATY_FK'
ALTER TABLE RA_ANL_STEP_XREF ADD CONSTRAINT RA_ANLSX_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLSX_R_ANLSX_FK'
ALTER TABLE RA_ANL_STEP_XREF ADD CONSTRAINT RA_ANLSX_R_ANLSX_FK FOREIGN KEY
(
STEP_XREF_REASON
)
REFERENCES R_ANL_STEP_XREF
(
STEP_XREF_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLSX_R_LANG_FK'
ALTER TABLE RA_ANL_STEP_XREF ADD CONSTRAINT RA_ANLSX_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLSX_SRCD_FK'
ALTER TABLE RA_ANL_STEP_XREF ADD CONSTRAINT RA_ANLSX_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLTT_BA_FK'
ALTER TABLE RA_ANL_TOLERANCE_TYPE ADD CONSTRAINT RA_ANLTT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLTT_PSWA_FK'
ALTER TABLE RA_ANL_TOLERANCE_TYPE ADD CONSTRAINT RA_ANLTT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLTT_R_ART_FK'
ALTER TABLE RA_ANL_TOLERANCE_TYPE ADD CONSTRAINT RA_ANLTT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLTT_R_ATY_FK'
ALTER TABLE RA_ANL_TOLERANCE_TYPE ADD CONSTRAINT RA_ANLTT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLTT_R_ANLTT_FK'
ALTER TABLE RA_ANL_TOLERANCE_TYPE ADD CONSTRAINT RA_ANLTT_R_ANLTT_FK FOREIGN KEY
(
TOLERANCE_TYPE
)
REFERENCES R_ANL_TOLERANCE_TYPE
(
TOLERANCE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLTT_R_LANG_FK'
ALTER TABLE RA_ANL_TOLERANCE_TYPE ADD CONSTRAINT RA_ANLTT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLTT_SRCD_FK'
ALTER TABLE RA_ANL_TOLERANCE_TYPE ADD CONSTRAINT RA_ANLTT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLVM_BA_FK'
ALTER TABLE RA_ANL_VALID_MEASUREMENT ADD CONSTRAINT RA_ANLVM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLVM_PSWA_FK'
ALTER TABLE RA_ANL_VALID_MEASUREMENT ADD CONSTRAINT RA_ANLVM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLVM_R_ART_FK'
ALTER TABLE RA_ANL_VALID_MEASUREMENT ADD CONSTRAINT RA_ANLVM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLVM_R_ATY_FK'
ALTER TABLE RA_ANL_VALID_MEASUREMENT ADD CONSTRAINT RA_ANLVM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLVM_R_ANLVM_FK'
ALTER TABLE RA_ANL_VALID_MEASUREMENT ADD CONSTRAINT RA_ANLVM_R_ANLVM_FK FOREIGN KEY
(
MEASUREMENT_TYPE
)
REFERENCES R_ANL_VALID_MEASUREMENT
(
MEASUREMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLVM_R_LANG_FK'
ALTER TABLE RA_ANL_VALID_MEASUREMENT ADD CONSTRAINT RA_ANLVM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLVM_SRCD_FK'
ALTER TABLE RA_ANL_VALID_MEASUREMENT ADD CONSTRAINT RA_ANLVM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLVMV_BA_FK'
ALTER TABLE RA_ANL_VALID_MEAS_VALUE ADD CONSTRAINT RA_ANLVMV_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLVMV_PSWA_FK'
ALTER TABLE RA_ANL_VALID_MEAS_VALUE ADD CONSTRAINT RA_ANLVMV_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLVMV_R_ART_FK'
ALTER TABLE RA_ANL_VALID_MEAS_VALUE ADD CONSTRAINT RA_ANLVMV_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLVMV_R_ATY_FK'
ALTER TABLE RA_ANL_VALID_MEAS_VALUE ADD CONSTRAINT RA_ANLVMV_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLVMV_R_ANLVM_FK'
ALTER TABLE RA_ANL_VALID_MEAS_VALUE ADD CONSTRAINT RA_ANLVMV_R_ANLVM_FK FOREIGN KEY
(
MEASUREMENT_TYPE
)
REFERENCES R_ANL_VALID_MEASUREMENT
(
MEASUREMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLVMV_R_ANLVMV_FK'
ALTER TABLE RA_ANL_VALID_MEAS_VALUE ADD CONSTRAINT RA_ANLVMV_R_ANLVMV_FK FOREIGN KEY
(
MEASUREMENT_TYPE,
VALID_VALUE_TEXT
)
REFERENCES R_ANL_VALID_MEAS_VALUE
(
MEASUREMENT_TYPE,
VALID_VALUE_TEXT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLVMV_R_LANG_FK'
ALTER TABLE RA_ANL_VALID_MEAS_VALUE ADD CONSTRAINT RA_ANLVMV_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLVMV_SRCD_FK'
ALTER TABLE RA_ANL_VALID_MEAS_VALUE ADD CONSTRAINT RA_ANLVMV_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLVP_BA_FK'
ALTER TABLE RA_ANL_VALID_PROBLEM ADD CONSTRAINT RA_ANLVP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLVP_PSWA_FK'
ALTER TABLE RA_ANL_VALID_PROBLEM ADD CONSTRAINT RA_ANLVP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLVP_R_ART_FK'
ALTER TABLE RA_ANL_VALID_PROBLEM ADD CONSTRAINT RA_ANLVP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLVP_R_ATY_FK'
ALTER TABLE RA_ANL_VALID_PROBLEM ADD CONSTRAINT RA_ANLVP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLVP_R_ANLVP_FK'
ALTER TABLE RA_ANL_VALID_PROBLEM ADD CONSTRAINT RA_ANLVP_R_ANLVP_FK FOREIGN KEY
(
PROBLEM_RESULT_TYPE
)
REFERENCES R_ANL_VALID_PROBLEM
(
PROBLEM_RESULT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLVP_R_LANG_FK'
ALTER TABLE RA_ANL_VALID_PROBLEM ADD CONSTRAINT RA_ANLVP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLVP_SRCD_FK'
ALTER TABLE RA_ANL_VALID_PROBLEM ADD CONSTRAINT RA_ANLVP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLWP_BA_FK'
ALTER TABLE RA_ANL_WATER_PROPERTY ADD CONSTRAINT RA_ANLWP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLWP_PSWA_FK'
ALTER TABLE RA_ANL_WATER_PROPERTY ADD CONSTRAINT RA_ANLWP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLWP_R_ART_FK'
ALTER TABLE RA_ANL_WATER_PROPERTY ADD CONSTRAINT RA_ANLWP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLWP_R_ATY_FK'
ALTER TABLE RA_ANL_WATER_PROPERTY ADD CONSTRAINT RA_ANLWP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLWP_R_ANLWP_FK'
ALTER TABLE RA_ANL_WATER_PROPERTY ADD CONSTRAINT RA_ANLWP_R_ANLWP_FK FOREIGN KEY
(
WATER_PROPERTY
)
REFERENCES R_ANL_WATER_PROPERTY
(
WATER_PROPERTY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLWP_R_LANG_FK'
ALTER TABLE RA_ANL_WATER_PROPERTY ADD CONSTRAINT RA_ANLWP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ANLWP_SRCD_FK'
ALTER TABLE RA_ANL_WATER_PROPERTY ADD CONSTRAINT RA_ANLWP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AAT_BA_FK'
ALTER TABLE RA_AOF_ANALYSIS_TYPE ADD CONSTRAINT RA_AAT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AAT_PSWA_FK'
ALTER TABLE RA_AOF_ANALYSIS_TYPE ADD CONSTRAINT RA_AAT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AAT_R_ART_FK'
ALTER TABLE RA_AOF_ANALYSIS_TYPE ADD CONSTRAINT RA_AAT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AAT_R_ATY_FK'
ALTER TABLE RA_AOF_ANALYSIS_TYPE ADD CONSTRAINT RA_AAT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AAT_R_AAT_FK'
ALTER TABLE RA_AOF_ANALYSIS_TYPE ADD CONSTRAINT RA_AAT_R_AAT_FK FOREIGN KEY
(
AOF_ANALYSIS_TYPE
)
REFERENCES R_AOF_ANALYSIS_TYPE
(
AOF_ANALYSIS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AAT_R_LANG_FK'
ALTER TABLE RA_AOF_ANALYSIS_TYPE ADD CONSTRAINT RA_AAT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AAT_SRCD_FK'
ALTER TABLE RA_AOF_ANALYSIS_TYPE ADD CONSTRAINT RA_AAT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACM_BA_FK'
ALTER TABLE RA_AOF_CALC_METHOD ADD CONSTRAINT RA_ACM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACM_PSWA_FK'
ALTER TABLE RA_AOF_CALC_METHOD ADD CONSTRAINT RA_ACM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACM_R_ART_FK'
ALTER TABLE RA_AOF_CALC_METHOD ADD CONSTRAINT RA_ACM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACM_R_ATY_FK'
ALTER TABLE RA_AOF_CALC_METHOD ADD CONSTRAINT RA_ACM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACM_R_ACM_FK'
ALTER TABLE RA_AOF_CALC_METHOD ADD CONSTRAINT RA_ACM_R_ACM_FK FOREIGN KEY
(
AOF_CALCULATE_METHOD
)
REFERENCES R_AOF_CALC_METHOD
(
AOF_CALCULATE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACM_R_LANG_FK'
ALTER TABLE RA_AOF_CALC_METHOD ADD CONSTRAINT RA_ACM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACM_SRCD_FK'
ALTER TABLE RA_AOF_CALC_METHOD ADD CONSTRAINT RA_ACM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ALS_BA_FK'
ALTER TABLE RA_API_LOG_SYSTEM ADD CONSTRAINT RA_ALS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ALS_PSWA_FK'
ALTER TABLE RA_API_LOG_SYSTEM ADD CONSTRAINT RA_ALS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ALS_R_ART_FK'
ALTER TABLE RA_API_LOG_SYSTEM ADD CONSTRAINT RA_ALS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ALS_R_ATY_FK'
ALTER TABLE RA_API_LOG_SYSTEM ADD CONSTRAINT RA_ALS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ALS_R_ALS_FK'
ALTER TABLE RA_API_LOG_SYSTEM ADD CONSTRAINT RA_ALS_R_ALS_FK FOREIGN KEY
(
API_CODE_SYSTEM
)
REFERENCES R_API_LOG_SYSTEM
(
API_CODE_SYSTEM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ALS_R_LANG_FK'
ALTER TABLE RA_API_LOG_SYSTEM ADD CONSTRAINT RA_ALS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ALS_SRCD_FK'
ALTER TABLE RA_API_LOG_SYSTEM ADD CONSTRAINT RA_ALS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APPCT_BA_FK'
ALTER TABLE RA_APPLICATION_COMP_TYPE ADD CONSTRAINT RA_APPCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APPCT_PSWA_FK'
ALTER TABLE RA_APPLICATION_COMP_TYPE ADD CONSTRAINT RA_APPCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APPCT_R_ART_FK'
ALTER TABLE RA_APPLICATION_COMP_TYPE ADD CONSTRAINT RA_APPCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APPCT_R_ATY_FK'
ALTER TABLE RA_APPLICATION_COMP_TYPE ADD CONSTRAINT RA_APPCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APPCT_R_APPCT_FK'
ALTER TABLE RA_APPLICATION_COMP_TYPE ADD CONSTRAINT RA_APPCT_R_APPCT_FK FOREIGN KEY
(
APPLICATION_COMPONENT_TYPE
)
REFERENCES R_APPLICATION_COMP_TYPE
(
APPLICATION_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APPCT_R_LANG_FK'
ALTER TABLE RA_APPLICATION_COMP_TYPE ADD CONSTRAINT RA_APPCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APPCT_SRCD_FK'
ALTER TABLE RA_APPLICATION_COMP_TYPE ADD CONSTRAINT RA_APPCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AA_BA_FK'
ALTER TABLE RA_APPLIC_ATTACHMENT ADD CONSTRAINT RA_AA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AA_PSWA_FK'
ALTER TABLE RA_APPLIC_ATTACHMENT ADD CONSTRAINT RA_AA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AA_R_ART_FK'
ALTER TABLE RA_APPLIC_ATTACHMENT ADD CONSTRAINT RA_AA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AA_R_ATY_FK'
ALTER TABLE RA_APPLIC_ATTACHMENT ADD CONSTRAINT RA_AA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AA_R_AA_FK'
ALTER TABLE RA_APPLIC_ATTACHMENT ADD CONSTRAINT RA_AA_R_AA_FK FOREIGN KEY
(
ATTACHMENT_TYPE
)
REFERENCES R_APPLIC_ATTACHMENT
(
ATTACHMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AA_R_LANG_FK'
ALTER TABLE RA_APPLIC_ATTACHMENT ADD CONSTRAINT RA_AA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AA_SRCD_FK'
ALTER TABLE RA_APPLIC_ATTACHMENT ADD CONSTRAINT RA_AA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ABR_BA_FK'
ALTER TABLE RA_APPLIC_BA_ROLE ADD CONSTRAINT RA_ABR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ABR_PSWA_FK'
ALTER TABLE RA_APPLIC_BA_ROLE ADD CONSTRAINT RA_ABR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ABR_R_ART_FK'
ALTER TABLE RA_APPLIC_BA_ROLE ADD CONSTRAINT RA_ABR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ABR_R_ATY_FK'
ALTER TABLE RA_APPLIC_BA_ROLE ADD CONSTRAINT RA_ABR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ABR_R_ABR_FK'
ALTER TABLE RA_APPLIC_BA_ROLE ADD CONSTRAINT RA_ABR_R_ABR_FK FOREIGN KEY
(
APPLICATION_BA_ROLE
)
REFERENCES R_APPLIC_BA_ROLE
(
APPLICATION_BA_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ABR_R_LANG_FK'
ALTER TABLE RA_APPLIC_BA_ROLE ADD CONSTRAINT RA_ABR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ABR_SRCD_FK'
ALTER TABLE RA_APPLIC_BA_ROLE ADD CONSTRAINT RA_ABR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AD_BA_FK'
ALTER TABLE RA_APPLIC_DECISION ADD CONSTRAINT RA_AD_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AD_PSWA_FK'
ALTER TABLE RA_APPLIC_DECISION ADD CONSTRAINT RA_AD_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AD_R_ART_FK'
ALTER TABLE RA_APPLIC_DECISION ADD CONSTRAINT RA_AD_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AD_R_ATY_FK'
ALTER TABLE RA_APPLIC_DECISION ADD CONSTRAINT RA_AD_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AD_R_AD_FK'
ALTER TABLE RA_APPLIC_DECISION ADD CONSTRAINT RA_AD_R_AD_FK FOREIGN KEY
(
APPLICATION_DECISION
)
REFERENCES R_APPLIC_DECISION
(
APPLICATION_DECISION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AD_R_LANG_FK'
ALTER TABLE RA_APPLIC_DECISION ADD CONSTRAINT RA_AD_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AD_SRCD_FK'
ALTER TABLE RA_APPLIC_DECISION ADD CONSTRAINT RA_AD_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADE_BA_FK'
ALTER TABLE RA_APPLIC_DESC ADD CONSTRAINT RA_ADE_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADE_PSWA_FK'
ALTER TABLE RA_APPLIC_DESC ADD CONSTRAINT RA_ADE_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADE_R_ART_FK'
ALTER TABLE RA_APPLIC_DESC ADD CONSTRAINT RA_ADE_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADE_R_ATY_FK'
ALTER TABLE RA_APPLIC_DESC ADD CONSTRAINT RA_ADE_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADE_R_ADE_FK'
ALTER TABLE RA_APPLIC_DESC ADD CONSTRAINT RA_ADE_R_ADE_FK FOREIGN KEY
(
APPLICATION_TYPE,
APPLIC_DESC_TYPE
)
REFERENCES R_APPLIC_DESC
(
APPLICATION_TYPE,
APPLIC_DESC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADE_R_APPT_FK'
ALTER TABLE RA_APPLIC_DESC ADD CONSTRAINT RA_ADE_R_APPT_FK FOREIGN KEY
(
APPLICATION_TYPE
)
REFERENCES R_APPLIC_TYPE
(
APPLICATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADE_R_LANG_FK'
ALTER TABLE RA_APPLIC_DESC ADD CONSTRAINT RA_ADE_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADE_SRCD_FK'
ALTER TABLE RA_APPLIC_DESC ADD CONSTRAINT RA_ADE_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ARMT_BA_FK'
ALTER TABLE RA_APPLIC_REMARK_TYPE ADD CONSTRAINT RA_ARMT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ARMT_PSWA_FK'
ALTER TABLE RA_APPLIC_REMARK_TYPE ADD CONSTRAINT RA_ARMT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ARMT_R_ART_FK'
ALTER TABLE RA_APPLIC_REMARK_TYPE ADD CONSTRAINT RA_ARMT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ARMT_R_ATY_FK'
ALTER TABLE RA_APPLIC_REMARK_TYPE ADD CONSTRAINT RA_ARMT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ARMT_R_ARMT_FK'
ALTER TABLE RA_APPLIC_REMARK_TYPE ADD CONSTRAINT RA_ARMT_R_ARMT_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_APPLIC_REMARK_TYPE
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ARMT_R_LANG_FK'
ALTER TABLE RA_APPLIC_REMARK_TYPE ADD CONSTRAINT RA_ARMT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ARMT_SRCD_FK'
ALTER TABLE RA_APPLIC_REMARK_TYPE ADD CONSTRAINT RA_ARMT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AST_BA_FK'
ALTER TABLE RA_APPLIC_STATUS ADD CONSTRAINT RA_AST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AST_PSWA_FK'
ALTER TABLE RA_APPLIC_STATUS ADD CONSTRAINT RA_AST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AST_R_ART_FK'
ALTER TABLE RA_APPLIC_STATUS ADD CONSTRAINT RA_AST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AST_R_ATY_FK'
ALTER TABLE RA_APPLIC_STATUS ADD CONSTRAINT RA_AST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AST_R_AST_FK'
ALTER TABLE RA_APPLIC_STATUS ADD CONSTRAINT RA_AST_R_AST_FK FOREIGN KEY
(
APPLICATION_STATUS
)
REFERENCES R_APPLIC_STATUS
(
APPLICATION_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AST_R_LANG_FK'
ALTER TABLE RA_APPLIC_STATUS ADD CONSTRAINT RA_AST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AST_SRCD_FK'
ALTER TABLE RA_APPLIC_STATUS ADD CONSTRAINT RA_AST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APPT_BA_FK'
ALTER TABLE RA_APPLIC_TYPE ADD CONSTRAINT RA_APPT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APPT_PSWA_FK'
ALTER TABLE RA_APPLIC_TYPE ADD CONSTRAINT RA_APPT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APPT_R_ART_FK'
ALTER TABLE RA_APPLIC_TYPE ADD CONSTRAINT RA_APPT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APPT_R_ATY_FK'
ALTER TABLE RA_APPLIC_TYPE ADD CONSTRAINT RA_APPT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APPT_R_APPT_FK'
ALTER TABLE RA_APPLIC_TYPE ADD CONSTRAINT RA_APPT_R_APPT_FK FOREIGN KEY
(
APPLICATION_TYPE
)
REFERENCES R_APPLIC_TYPE
(
APPLICATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APPT_R_LANG_FK'
ALTER TABLE RA_APPLIC_TYPE ADD CONSTRAINT RA_APPT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APPT_SRCD_FK'
ALTER TABLE RA_APPLIC_TYPE ADD CONSTRAINT RA_APPT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACMPT_BA_FK'
ALTER TABLE RA_AREA_COMPONENT_TYPE ADD CONSTRAINT RA_ACMPT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACMPT_PSWA_FK'
ALTER TABLE RA_AREA_COMPONENT_TYPE ADD CONSTRAINT RA_ACMPT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACMPT_R_ART_FK'
ALTER TABLE RA_AREA_COMPONENT_TYPE ADD CONSTRAINT RA_ACMPT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACMPT_R_ATY_FK'
ALTER TABLE RA_AREA_COMPONENT_TYPE ADD CONSTRAINT RA_ACMPT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACMPT_R_ACMPT_FK'
ALTER TABLE RA_AREA_COMPONENT_TYPE ADD CONSTRAINT RA_ACMPT_R_ACMPT_FK FOREIGN KEY
(
AREA_COMPONENT_TYPE
)
REFERENCES R_AREA_COMPONENT_TYPE
(
AREA_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACMPT_R_LANG_FK'
ALTER TABLE RA_AREA_COMPONENT_TYPE ADD CONSTRAINT RA_ACMPT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACMPT_SRCD_FK'
ALTER TABLE RA_AREA_COMPONENT_TYPE ADD CONSTRAINT RA_ACMPT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACT_BA_FK'
ALTER TABLE RA_AREA_CONTAIN_TYPE ADD CONSTRAINT RA_ACT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACT_PSWA_FK'
ALTER TABLE RA_AREA_CONTAIN_TYPE ADD CONSTRAINT RA_ACT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACT_R_ART_FK'
ALTER TABLE RA_AREA_CONTAIN_TYPE ADD CONSTRAINT RA_ACT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACT_R_ATY_FK'
ALTER TABLE RA_AREA_CONTAIN_TYPE ADD CONSTRAINT RA_ACT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACT_R_ACT_FK'
ALTER TABLE RA_AREA_CONTAIN_TYPE ADD CONSTRAINT RA_ACT_R_ACT_FK FOREIGN KEY
(
CONTAIN_TYPE
)
REFERENCES R_AREA_CONTAIN_TYPE
(
CONTAIN_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACT_R_LANG_FK'
ALTER TABLE RA_AREA_CONTAIN_TYPE ADD CONSTRAINT RA_ACT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ACT_SRCD_FK'
ALTER TABLE RA_AREA_CONTAIN_TYPE ADD CONSTRAINT RA_ACT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADC_BA_FK'
ALTER TABLE RA_AREA_DESC_CODE ADD CONSTRAINT RA_ADC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADC_PSWA_FK'
ALTER TABLE RA_AREA_DESC_CODE ADD CONSTRAINT RA_ADC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADC_R_ART_FK'
ALTER TABLE RA_AREA_DESC_CODE ADD CONSTRAINT RA_ADC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADC_R_ATY_FK'
ALTER TABLE RA_AREA_DESC_CODE ADD CONSTRAINT RA_ADC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADC_R_ADC_FK'
ALTER TABLE RA_AREA_DESC_CODE ADD CONSTRAINT RA_ADC_R_ADC_FK FOREIGN KEY
(
AREA_DESC_TYPE,
AREA_DESC_CODE
)
REFERENCES R_AREA_DESC_CODE
(
AREA_DESC_TYPE,
AREA_DESC_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADC_R_ADT1_FK'
ALTER TABLE RA_AREA_DESC_CODE ADD CONSTRAINT RA_ADC_R_ADT1_FK FOREIGN KEY
(
AREA_DESC_TYPE
)
REFERENCES R_AREA_DESC_TYPE
(
AREA_DESC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADC_R_LANG_FK'
ALTER TABLE RA_AREA_DESC_CODE ADD CONSTRAINT RA_ADC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADC_SRCD_FK'
ALTER TABLE RA_AREA_DESC_CODE ADD CONSTRAINT RA_ADC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADT1_BA_FK'
ALTER TABLE RA_AREA_DESC_TYPE ADD CONSTRAINT RA_ADT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADT1_PSWA_FK'
ALTER TABLE RA_AREA_DESC_TYPE ADD CONSTRAINT RA_ADT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADT1_R_ART_FK'
ALTER TABLE RA_AREA_DESC_TYPE ADD CONSTRAINT RA_ADT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADT1_R_ATY_FK'
ALTER TABLE RA_AREA_DESC_TYPE ADD CONSTRAINT RA_ADT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADT1_R_ADT1_FK'
ALTER TABLE RA_AREA_DESC_TYPE ADD CONSTRAINT RA_ADT1_R_ADT1_FK FOREIGN KEY
(
AREA_DESC_TYPE
)
REFERENCES R_AREA_DESC_TYPE
(
AREA_DESC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADT1_R_LANG_FK'
ALTER TABLE RA_AREA_DESC_TYPE ADD CONSTRAINT RA_ADT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ADT1_SRCD_FK'
ALTER TABLE RA_AREA_DESC_TYPE ADD CONSTRAINT RA_ADT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ARTY_BA_FK'
ALTER TABLE RA_AREA_TYPE ADD CONSTRAINT RA_ARTY_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ARTY_PSWA_FK'
ALTER TABLE RA_AREA_TYPE ADD CONSTRAINT RA_ARTY_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ARTY_R_ART_FK'
ALTER TABLE RA_AREA_TYPE ADD CONSTRAINT RA_ARTY_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ARTY_R_ATY_FK'
ALTER TABLE RA_AREA_TYPE ADD CONSTRAINT RA_ARTY_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ARTY_R_ARTY_FK'
ALTER TABLE RA_AREA_TYPE ADD CONSTRAINT RA_ARTY_R_ARTY_FK FOREIGN KEY
(
AREA_TYPE
)
REFERENCES R_AREA_TYPE
(
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ARTY_R_LANG_FK'
ALTER TABLE RA_AREA_TYPE ADD CONSTRAINT RA_ARTY_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ARTY_SRCD_FK'
ALTER TABLE RA_AREA_TYPE ADD CONSTRAINT RA_ARTY_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AXT_BA_FK'
ALTER TABLE RA_AREA_XREF_TYPE ADD CONSTRAINT RA_AXT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AXT_PSWA_FK'
ALTER TABLE RA_AREA_XREF_TYPE ADD CONSTRAINT RA_AXT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AXT_R_ART_FK'
ALTER TABLE RA_AREA_XREF_TYPE ADD CONSTRAINT RA_AXT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AXT_R_ATY_FK'
ALTER TABLE RA_AREA_XREF_TYPE ADD CONSTRAINT RA_AXT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AXT_R_AXT_FK'
ALTER TABLE RA_AREA_XREF_TYPE ADD CONSTRAINT RA_AXT_R_AXT_FK FOREIGN KEY
(
AREA_XREF_TYPE
)
REFERENCES R_AREA_XREF_TYPE
(
AREA_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AXT_R_LANG_FK'
ALTER TABLE RA_AREA_XREF_TYPE ADD CONSTRAINT RA_AXT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AXT_SRCD_FK'
ALTER TABLE RA_AREA_XREF_TYPE ADD CONSTRAINT RA_AXT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AUT_BA_FK'
ALTER TABLE RA_AUTHORITY_TYPE ADD CONSTRAINT RA_AUT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AUT_PSWA_FK'
ALTER TABLE RA_AUTHORITY_TYPE ADD CONSTRAINT RA_AUT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AUT_R_ART_FK'
ALTER TABLE RA_AUTHORITY_TYPE ADD CONSTRAINT RA_AUT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AUT_R_ATY_FK'
ALTER TABLE RA_AUTHORITY_TYPE ADD CONSTRAINT RA_AUT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AUT_R_AUT_FK'
ALTER TABLE RA_AUTHORITY_TYPE ADD CONSTRAINT RA_AUT_R_AUT_FK FOREIGN KEY
(
AUTHORITY_TYPE
)
REFERENCES R_AUTHORITY_TYPE
(
AUTHORITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AUT_R_LANG_FK'
ALTER TABLE RA_AUTHORITY_TYPE ADD CONSTRAINT RA_AUT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AUT_SRCD_FK'
ALTER TABLE RA_AUTHORITY_TYPE ADD CONSTRAINT RA_AUT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AUTH_BA_FK'
ALTER TABLE RA_AUTHOR_TYPE ADD CONSTRAINT RA_AUTH_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AUTH_PSWA_FK'
ALTER TABLE RA_AUTHOR_TYPE ADD CONSTRAINT RA_AUTH_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AUTH_R_ART_FK'
ALTER TABLE RA_AUTHOR_TYPE ADD CONSTRAINT RA_AUTH_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AUTH_R_ATY_FK'
ALTER TABLE RA_AUTHOR_TYPE ADD CONSTRAINT RA_AUTH_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AUTH_R_AUTH_FK'
ALTER TABLE RA_AUTHOR_TYPE ADD CONSTRAINT RA_AUTH_R_AUTH_FK FOREIGN KEY
(
AUTHOR_TYPE
)
REFERENCES R_AUTHOR_TYPE
(
AUTHOR_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AUTH_R_LANG_FK'
ALTER TABLE RA_AUTHOR_TYPE ADD CONSTRAINT RA_AUTH_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_AUTH_SRCD_FK'
ALTER TABLE RA_AUTHOR_TYPE ADD CONSTRAINT RA_AUTH_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BAAUCT_BA_FK'
ALTER TABLE RA_BA_AUTHORITY_COMP_TYPE ADD CONSTRAINT RA_BAAUCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BAAUCT_PSWA_FK'
ALTER TABLE RA_BA_AUTHORITY_COMP_TYPE ADD CONSTRAINT RA_BAAUCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BAAUCT_R_ART_FK'
ALTER TABLE RA_BA_AUTHORITY_COMP_TYPE ADD CONSTRAINT RA_BAAUCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BAAUCT_R_ATY_FK'
ALTER TABLE RA_BA_AUTHORITY_COMP_TYPE ADD CONSTRAINT RA_BAAUCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BAAUCT_R_BAAUCT_FK'
ALTER TABLE RA_BA_AUTHORITY_COMP_TYPE ADD CONSTRAINT RA_BAAUCT_R_BAAUCT_FK FOREIGN KEY
(
BA_AUTHORITY_COMPONENT_TYPE
)
REFERENCES R_BA_AUTHORITY_COMP_TYPE
(
BA_AUTHORITY_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BAAUCT_R_LANG_FK'
ALTER TABLE RA_BA_AUTHORITY_COMP_TYPE ADD CONSTRAINT RA_BAAUCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BAAUCT_SRCD_FK'
ALTER TABLE RA_BA_AUTHORITY_COMP_TYPE ADD CONSTRAINT RA_BAAUCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BC_BA_FK'
ALTER TABLE RA_BA_CATEGORY ADD CONSTRAINT RA_BC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BC_PSWA_FK'
ALTER TABLE RA_BA_CATEGORY ADD CONSTRAINT RA_BC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BC_R_ART_FK'
ALTER TABLE RA_BA_CATEGORY ADD CONSTRAINT RA_BC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BC_R_ATY_FK'
ALTER TABLE RA_BA_CATEGORY ADD CONSTRAINT RA_BC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BC_R_BC_FK'
ALTER TABLE RA_BA_CATEGORY ADD CONSTRAINT RA_BC_R_BC_FK FOREIGN KEY
(
BA_CATEGORY
)
REFERENCES R_BA_CATEGORY
(
BA_CATEGORY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BC_R_LANG_FK'
ALTER TABLE RA_BA_CATEGORY ADD CONSTRAINT RA_BC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BC_SRCD_FK'
ALTER TABLE RA_BA_CATEGORY ADD CONSTRAINT RA_BC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BACT_BA_FK'
ALTER TABLE RA_BA_COMPONENT_TYPE ADD CONSTRAINT RA_BACT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BACT_PSWA_FK'
ALTER TABLE RA_BA_COMPONENT_TYPE ADD CONSTRAINT RA_BACT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BACT_R_ART_FK'
ALTER TABLE RA_BA_COMPONENT_TYPE ADD CONSTRAINT RA_BACT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BACT_R_ATY_FK'
ALTER TABLE RA_BA_COMPONENT_TYPE ADD CONSTRAINT RA_BACT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BACT_R_BACT_FK'
ALTER TABLE RA_BA_COMPONENT_TYPE ADD CONSTRAINT RA_BACT_R_BACT_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_COMP_TYPE
)
REFERENCES R_BA_COMPONENT_TYPE
(
BUSINESS_ASSOCIATE_COMP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BACT_R_LANG_FK'
ALTER TABLE RA_BA_COMPONENT_TYPE ADD CONSTRAINT RA_BACT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BACT_SRCD_FK'
ALTER TABLE RA_BA_COMPONENT_TYPE ADD CONSTRAINT RA_BACT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCLT_BA_FK'
ALTER TABLE RA_BA_CONTACT_LOC_TYPE ADD CONSTRAINT RA_BCLT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCLT_PSWA_FK'
ALTER TABLE RA_BA_CONTACT_LOC_TYPE ADD CONSTRAINT RA_BCLT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCLT_R_ART_FK'
ALTER TABLE RA_BA_CONTACT_LOC_TYPE ADD CONSTRAINT RA_BCLT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCLT_R_ATY_FK'
ALTER TABLE RA_BA_CONTACT_LOC_TYPE ADD CONSTRAINT RA_BCLT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCLT_R_BCLT_FK'
ALTER TABLE RA_BA_CONTACT_LOC_TYPE ADD CONSTRAINT RA_BCLT_R_BCLT_FK FOREIGN KEY
(
CONTACT_LOC_TYPE
)
REFERENCES R_BA_CONTACT_LOC_TYPE
(
CONTACT_LOC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCLT_R_LANG_FK'
ALTER TABLE RA_BA_CONTACT_LOC_TYPE ADD CONSTRAINT RA_BCLT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCLT_SRCD_FK'
ALTER TABLE RA_BA_CONTACT_LOC_TYPE ADD CONSTRAINT RA_BCLT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCOT_BA_FK'
ALTER TABLE RA_BA_CREW_OVERHEAD_TYPE ADD CONSTRAINT RA_BCOT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCOT_PSWA_FK'
ALTER TABLE RA_BA_CREW_OVERHEAD_TYPE ADD CONSTRAINT RA_BCOT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCOT_R_ART_FK'
ALTER TABLE RA_BA_CREW_OVERHEAD_TYPE ADD CONSTRAINT RA_BCOT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCOT_R_ATY_FK'
ALTER TABLE RA_BA_CREW_OVERHEAD_TYPE ADD CONSTRAINT RA_BCOT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCOT_R_BCOT_FK'
ALTER TABLE RA_BA_CREW_OVERHEAD_TYPE ADD CONSTRAINT RA_BCOT_R_BCOT_FK FOREIGN KEY
(
OVERHEAD_TYPE
)
REFERENCES R_BA_CREW_OVERHEAD_TYPE
(
OVERHEAD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCOT_R_LANG_FK'
ALTER TABLE RA_BA_CREW_OVERHEAD_TYPE ADD CONSTRAINT RA_BCOT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCOT_SRCD_FK'
ALTER TABLE RA_BA_CREW_OVERHEAD_TYPE ADD CONSTRAINT RA_BCOT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCT_BA_FK'
ALTER TABLE RA_BA_CREW_TYPE ADD CONSTRAINT RA_BCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCT_PSWA_FK'
ALTER TABLE RA_BA_CREW_TYPE ADD CONSTRAINT RA_BCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCT_R_ART_FK'
ALTER TABLE RA_BA_CREW_TYPE ADD CONSTRAINT RA_BCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCT_R_ATY_FK'
ALTER TABLE RA_BA_CREW_TYPE ADD CONSTRAINT RA_BCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCT_R_BCT_FK'
ALTER TABLE RA_BA_CREW_TYPE ADD CONSTRAINT RA_BCT_R_BCT_FK FOREIGN KEY
(
CREW_TYPE
)
REFERENCES R_BA_CREW_TYPE
(
CREW_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCT_R_LANG_FK'
ALTER TABLE RA_BA_CREW_TYPE ADD CONSTRAINT RA_BCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCT_SRCD_FK'
ALTER TABLE RA_BA_CREW_TYPE ADD CONSTRAINT RA_BCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BADC_BA_FK'
ALTER TABLE RA_BA_DESC_CODE ADD CONSTRAINT RA_BADC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BADC_PSWA_FK'
ALTER TABLE RA_BA_DESC_CODE ADD CONSTRAINT RA_BADC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BADC_R_ART_FK'
ALTER TABLE RA_BA_DESC_CODE ADD CONSTRAINT RA_BADC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BADC_R_ATY_FK'
ALTER TABLE RA_BA_DESC_CODE ADD CONSTRAINT RA_BADC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BADC_R_BADC_FK'
ALTER TABLE RA_BA_DESC_CODE ADD CONSTRAINT RA_BADC_R_BADC_FK FOREIGN KEY
(
BA_DESC_TYPE,
BA_DESC_CODE
)
REFERENCES R_BA_DESC_CODE
(
BA_DESC_TYPE,
BA_DESC_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BADC_R_BADT_FK'
ALTER TABLE RA_BA_DESC_CODE ADD CONSTRAINT RA_BADC_R_BADT_FK FOREIGN KEY
(
BA_DESC_TYPE
)
REFERENCES R_BA_DESC_TYPE
(
BA_DESC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BADC_R_LANG_FK'
ALTER TABLE RA_BA_DESC_CODE ADD CONSTRAINT RA_BADC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BADC_SRCD_FK'
ALTER TABLE RA_BA_DESC_CODE ADD CONSTRAINT RA_BADC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BADRVT_BA_FK'
ALTER TABLE RA_BA_DESC_REF_VALUE ADD CONSTRAINT RA_BADRVT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BADRVT_PSWA_FK'
ALTER TABLE RA_BA_DESC_REF_VALUE ADD CONSTRAINT RA_BADRVT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BADRVT_R_ART_FK'
ALTER TABLE RA_BA_DESC_REF_VALUE ADD CONSTRAINT RA_BADRVT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BADRVT_R_ATY_FK'
ALTER TABLE RA_BA_DESC_REF_VALUE ADD CONSTRAINT RA_BADRVT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BADRVT_R_BADRVT_FK'
ALTER TABLE RA_BA_DESC_REF_VALUE ADD CONSTRAINT RA_BADRVT_R_BADRVT_FK FOREIGN KEY
(
REFERENCE_VALUE_TYPE
)
REFERENCES R_BA_DESC_REF_VALUE
(
REFERENCE_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BADRVT_R_LANG_FK'
ALTER TABLE RA_BA_DESC_REF_VALUE ADD CONSTRAINT RA_BADRVT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BADRVT_SRCD_FK'
ALTER TABLE RA_BA_DESC_REF_VALUE ADD CONSTRAINT RA_BADRVT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BADT_BA_FK'
ALTER TABLE RA_BA_DESC_TYPE ADD CONSTRAINT RA_BADT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BADT_PSWA_FK'
ALTER TABLE RA_BA_DESC_TYPE ADD CONSTRAINT RA_BADT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BADT_R_ART_FK'
ALTER TABLE RA_BA_DESC_TYPE ADD CONSTRAINT RA_BADT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BADT_R_ATY_FK'
ALTER TABLE RA_BA_DESC_TYPE ADD CONSTRAINT RA_BADT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BADT_R_BADT_FK'
ALTER TABLE RA_BA_DESC_TYPE ADD CONSTRAINT RA_BADT_R_BADT_FK FOREIGN KEY
(
BA_DESC_TYPE
)
REFERENCES R_BA_DESC_TYPE
(
BA_DESC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BADT_R_LANG_FK'
ALTER TABLE RA_BA_DESC_TYPE ADD CONSTRAINT RA_BADT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BADT_SRCD_FK'
ALTER TABLE RA_BA_DESC_TYPE ADD CONSTRAINT RA_BADT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BALDC_BA_FK'
ALTER TABLE RA_BA_LIC_DUE_CONDITION ADD CONSTRAINT RA_BALDC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BALDC_PSWA_FK'
ALTER TABLE RA_BA_LIC_DUE_CONDITION ADD CONSTRAINT RA_BALDC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BALDC_R_ART_FK'
ALTER TABLE RA_BA_LIC_DUE_CONDITION ADD CONSTRAINT RA_BALDC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BALDC_R_ATY_FK'
ALTER TABLE RA_BA_LIC_DUE_CONDITION ADD CONSTRAINT RA_BALDC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BALDC_R_BALDC_FK'
ALTER TABLE RA_BA_LIC_DUE_CONDITION ADD CONSTRAINT RA_BALDC_R_BALDC_FK FOREIGN KEY
(
DUE_CONDITION
)
REFERENCES R_BA_LIC_DUE_CONDITION
(
DUE_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BALDC_R_LANG_FK'
ALTER TABLE RA_BA_LIC_DUE_CONDITION ADD CONSTRAINT RA_BALDC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BALDC_SRCD_FK'
ALTER TABLE RA_BA_LIC_DUE_CONDITION ADD CONSTRAINT RA_BALDC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BVT_BA_FK'
ALTER TABLE RA_BA_LIC_VIOLATION_TYPE ADD CONSTRAINT RA_BVT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BVT_PSWA_FK'
ALTER TABLE RA_BA_LIC_VIOLATION_TYPE ADD CONSTRAINT RA_BVT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BVT_R_ART_FK'
ALTER TABLE RA_BA_LIC_VIOLATION_TYPE ADD CONSTRAINT RA_BVT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BVT_R_ATY_FK'
ALTER TABLE RA_BA_LIC_VIOLATION_TYPE ADD CONSTRAINT RA_BVT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BVT_R_BVT_FK'
ALTER TABLE RA_BA_LIC_VIOLATION_TYPE ADD CONSTRAINT RA_BVT_R_BVT_FK FOREIGN KEY
(
VIOLATION_TYPE
)
REFERENCES R_BA_LIC_VIOLATION_TYPE
(
VIOLATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BVT_R_LANG_FK'
ALTER TABLE RA_BA_LIC_VIOLATION_TYPE ADD CONSTRAINT RA_BVT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BVT_SRCD_FK'
ALTER TABLE RA_BA_LIC_VIOLATION_TYPE ADD CONSTRAINT RA_BVT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BLVRT_BA_FK'
ALTER TABLE RA_BA_LIC_VIOL_RESOL ADD CONSTRAINT RA_BLVRT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BLVRT_PSWA_FK'
ALTER TABLE RA_BA_LIC_VIOL_RESOL ADD CONSTRAINT RA_BLVRT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BLVRT_R_ART_FK'
ALTER TABLE RA_BA_LIC_VIOL_RESOL ADD CONSTRAINT RA_BLVRT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BLVRT_R_ATY_FK'
ALTER TABLE RA_BA_LIC_VIOL_RESOL ADD CONSTRAINT RA_BLVRT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BLVRT_R_BLVRT_FK'
ALTER TABLE RA_BA_LIC_VIOL_RESOL ADD CONSTRAINT RA_BLVRT_R_BLVRT_FK FOREIGN KEY
(
RESOLVE_TYPE
)
REFERENCES R_BA_LIC_VIOL_RESOL
(
RESOLVE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BLVRT_R_LANG_FK'
ALTER TABLE RA_BA_LIC_VIOL_RESOL ADD CONSTRAINT RA_BLVRT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BLVRT_SRCD_FK'
ALTER TABLE RA_BA_LIC_VIOL_RESOL ADD CONSTRAINT RA_BLVRT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BAOCT_BA_FK'
ALTER TABLE RA_BA_ORGANIZATION_COMP_TYPE ADD CONSTRAINT RA_BAOCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BAOCT_PSWA_FK'
ALTER TABLE RA_BA_ORGANIZATION_COMP_TYPE ADD CONSTRAINT RA_BAOCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BAOCT_R_ART_FK'
ALTER TABLE RA_BA_ORGANIZATION_COMP_TYPE ADD CONSTRAINT RA_BAOCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BAOCT_R_ATY_FK'
ALTER TABLE RA_BA_ORGANIZATION_COMP_TYPE ADD CONSTRAINT RA_BAOCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BAOCT_R_BAOCT_FK'
ALTER TABLE RA_BA_ORGANIZATION_COMP_TYPE ADD CONSTRAINT RA_BAOCT_R_BAOCT_FK FOREIGN KEY
(
BA_ORGANIZATION_COMPONENT_TYPE
)
REFERENCES R_BA_ORGANIZATION_COMP_TYPE
(
BA_ORGANIZATION_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BAOCT_R_LANG_FK'
ALTER TABLE RA_BA_ORGANIZATION_COMP_TYPE ADD CONSTRAINT RA_BAOCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BAOCT_SRCD_FK'
ALTER TABLE RA_BA_ORGANIZATION_COMP_TYPE ADD CONSTRAINT RA_BAOCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BAOT_BA_FK'
ALTER TABLE RA_BA_ORGANIZATION_TYPE ADD CONSTRAINT RA_BAOT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BAOT_PSWA_FK'
ALTER TABLE RA_BA_ORGANIZATION_TYPE ADD CONSTRAINT RA_BAOT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BAOT_R_ART_FK'
ALTER TABLE RA_BA_ORGANIZATION_TYPE ADD CONSTRAINT RA_BAOT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BAOT_R_ATY_FK'
ALTER TABLE RA_BA_ORGANIZATION_TYPE ADD CONSTRAINT RA_BAOT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BAOT_R_BAOT_FK'
ALTER TABLE RA_BA_ORGANIZATION_TYPE ADD CONSTRAINT RA_BAOT_R_BAOT_FK FOREIGN KEY
(
ORGANIZATION_TYPE
)
REFERENCES R_BA_ORGANIZATION_TYPE
(
ORGANIZATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BAOT_R_LANG_FK'
ALTER TABLE RA_BA_ORGANIZATION_TYPE ADD CONSTRAINT RA_BAOT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BAOT_SRCD_FK'
ALTER TABLE RA_BA_ORGANIZATION_TYPE ADD CONSTRAINT RA_BAOT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BPT_BA_FK'
ALTER TABLE RA_BA_PERMIT_TYPE ADD CONSTRAINT RA_BPT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BPT_PSWA_FK'
ALTER TABLE RA_BA_PERMIT_TYPE ADD CONSTRAINT RA_BPT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BPT_R_ART_FK'
ALTER TABLE RA_BA_PERMIT_TYPE ADD CONSTRAINT RA_BPT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BPT_R_ATY_FK'
ALTER TABLE RA_BA_PERMIT_TYPE ADD CONSTRAINT RA_BPT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BPT_R_BPT_FK'
ALTER TABLE RA_BA_PERMIT_TYPE ADD CONSTRAINT RA_BPT_R_BPT_FK FOREIGN KEY
(
PERMIT_TYPE
)
REFERENCES R_BA_PERMIT_TYPE
(
PERMIT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BPT_R_LANG_FK'
ALTER TABLE RA_BA_PERMIT_TYPE ADD CONSTRAINT RA_BPT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BPT_SRCD_FK'
ALTER TABLE RA_BA_PERMIT_TYPE ADD CONSTRAINT RA_BPT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BPRT_BA_FK'
ALTER TABLE RA_BA_PREF_TYPE ADD CONSTRAINT RA_BPRT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BPRT_PSWA_FK'
ALTER TABLE RA_BA_PREF_TYPE ADD CONSTRAINT RA_BPRT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BPRT_R_ART_FK'
ALTER TABLE RA_BA_PREF_TYPE ADD CONSTRAINT RA_BPRT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BPRT_R_ATY_FK'
ALTER TABLE RA_BA_PREF_TYPE ADD CONSTRAINT RA_BPRT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BPRT_R_BPRT_FK'
ALTER TABLE RA_BA_PREF_TYPE ADD CONSTRAINT RA_BPRT_R_BPRT_FK FOREIGN KEY
(
PREFERENCE_TYPE
)
REFERENCES R_BA_PREF_TYPE
(
PREFERENCE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BPRT_R_LANG_FK'
ALTER TABLE RA_BA_PREF_TYPE ADD CONSTRAINT RA_BPRT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BPRT_SRCD_FK'
ALTER TABLE RA_BA_PREF_TYPE ADD CONSTRAINT RA_BPRT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BST_BA_FK'
ALTER TABLE RA_BA_SERVICE_TYPE ADD CONSTRAINT RA_BST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BST_PSWA_FK'
ALTER TABLE RA_BA_SERVICE_TYPE ADD CONSTRAINT RA_BST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BST_R_ART_FK'
ALTER TABLE RA_BA_SERVICE_TYPE ADD CONSTRAINT RA_BST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BST_R_ATY_FK'
ALTER TABLE RA_BA_SERVICE_TYPE ADD CONSTRAINT RA_BST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BST_R_BST_FK'
ALTER TABLE RA_BA_SERVICE_TYPE ADD CONSTRAINT RA_BST_R_BST_FK FOREIGN KEY
(
BA_SERVICE_TYPE
)
REFERENCES R_BA_SERVICE_TYPE
(
BA_SERVICE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BST_R_LANG_FK'
ALTER TABLE RA_BA_SERVICE_TYPE ADD CONSTRAINT RA_BST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BST_SRCD_FK'
ALTER TABLE RA_BA_SERVICE_TYPE ADD CONSTRAINT RA_BST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BS_BA_FK'
ALTER TABLE RA_BA_STATUS ADD CONSTRAINT RA_BS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BS_PSWA_FK'
ALTER TABLE RA_BA_STATUS ADD CONSTRAINT RA_BS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BS_R_ART_FK'
ALTER TABLE RA_BA_STATUS ADD CONSTRAINT RA_BS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BS_R_ATY_FK'
ALTER TABLE RA_BA_STATUS ADD CONSTRAINT RA_BS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BS_R_BS_FK'
ALTER TABLE RA_BA_STATUS ADD CONSTRAINT RA_BS_R_BS_FK FOREIGN KEY
(
BA_STATUS
)
REFERENCES R_BA_STATUS
(
BA_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BS_R_LANG_FK'
ALTER TABLE RA_BA_STATUS ADD CONSTRAINT RA_BS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BS_SRCD_FK'
ALTER TABLE RA_BA_STATUS ADD CONSTRAINT RA_BS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BT_BA_FK'
ALTER TABLE RA_BA_TYPE ADD CONSTRAINT RA_BT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BT_PSWA_FK'
ALTER TABLE RA_BA_TYPE ADD CONSTRAINT RA_BT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BT_R_ART_FK'
ALTER TABLE RA_BA_TYPE ADD CONSTRAINT RA_BT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BT_R_ATY_FK'
ALTER TABLE RA_BA_TYPE ADD CONSTRAINT RA_BT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BT_R_BT_FK'
ALTER TABLE RA_BA_TYPE ADD CONSTRAINT RA_BT_R_BT_FK FOREIGN KEY
(
BA_TYPE
)
REFERENCES R_BA_TYPE
(
BA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BT_R_LANG_FK'
ALTER TABLE RA_BA_TYPE ADD CONSTRAINT RA_BT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BT_SRCD_FK'
ALTER TABLE RA_BA_TYPE ADD CONSTRAINT RA_BT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BXT_BA_FK'
ALTER TABLE RA_BA_XREF_TYPE ADD CONSTRAINT RA_BXT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BXT_PSWA_FK'
ALTER TABLE RA_BA_XREF_TYPE ADD CONSTRAINT RA_BXT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BXT_R_ART_FK'
ALTER TABLE RA_BA_XREF_TYPE ADD CONSTRAINT RA_BXT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BXT_R_ATY_FK'
ALTER TABLE RA_BA_XREF_TYPE ADD CONSTRAINT RA_BXT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BXT_R_BXT_FK'
ALTER TABLE RA_BA_XREF_TYPE ADD CONSTRAINT RA_BXT_R_BXT_FK FOREIGN KEY
(
BA_XREF_TYPE
)
REFERENCES R_BA_XREF_TYPE
(
BA_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BXT_R_LANG_FK'
ALTER TABLE RA_BA_XREF_TYPE ADD CONSTRAINT RA_BXT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BXT_SRCD_FK'
ALTER TABLE RA_BA_XREF_TYPE ADD CONSTRAINT RA_BXT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BM_BA_FK'
ALTER TABLE RA_BHP_METHOD ADD CONSTRAINT RA_BM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BM_PSWA_FK'
ALTER TABLE RA_BHP_METHOD ADD CONSTRAINT RA_BM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BM_R_ART_FK'
ALTER TABLE RA_BHP_METHOD ADD CONSTRAINT RA_BM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BM_R_ATY_FK'
ALTER TABLE RA_BHP_METHOD ADD CONSTRAINT RA_BM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BM_R_BM_FK'
ALTER TABLE RA_BHP_METHOD ADD CONSTRAINT RA_BM_R_BM_FK FOREIGN KEY
(
BHP_METHOD
)
REFERENCES R_BHP_METHOD
(
BHP_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BM_R_LANG_FK'
ALTER TABLE RA_BHP_METHOD ADD CONSTRAINT RA_BM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BM_SRCD_FK'
ALTER TABLE RA_BHP_METHOD ADD CONSTRAINT RA_BM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BPTT_BA_FK'
ALTER TABLE RA_BH_PRESS_TEST_TYPE ADD CONSTRAINT RA_BPTT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BPTT_PSWA_FK'
ALTER TABLE RA_BH_PRESS_TEST_TYPE ADD CONSTRAINT RA_BPTT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BPTT_R_ART_FK'
ALTER TABLE RA_BH_PRESS_TEST_TYPE ADD CONSTRAINT RA_BPTT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BPTT_R_ATY_FK'
ALTER TABLE RA_BH_PRESS_TEST_TYPE ADD CONSTRAINT RA_BPTT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BPTT_R_BPTT_FK'
ALTER TABLE RA_BH_PRESS_TEST_TYPE ADD CONSTRAINT RA_BPTT_R_BPTT_FK FOREIGN KEY
(
BH_PRESSURE_TEST_TYPE
)
REFERENCES R_BH_PRESS_TEST_TYPE
(
BH_PRESSURE_TEST_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BPTT_R_LANG_FK'
ALTER TABLE RA_BH_PRESS_TEST_TYPE ADD CONSTRAINT RA_BPTT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BPTT_SRCD_FK'
ALTER TABLE RA_BH_PRESS_TEST_TYPE ADD CONSTRAINT RA_BPTT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BBC_BA_FK'
ALTER TABLE RA_BIT_BEARING_CONDITION ADD CONSTRAINT RA_BBC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BBC_PSWA_FK'
ALTER TABLE RA_BIT_BEARING_CONDITION ADD CONSTRAINT RA_BBC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BBC_R_ART_FK'
ALTER TABLE RA_BIT_BEARING_CONDITION ADD CONSTRAINT RA_BBC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BBC_R_ATY_FK'
ALTER TABLE RA_BIT_BEARING_CONDITION ADD CONSTRAINT RA_BBC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BBC_R_BBC_FK'
ALTER TABLE RA_BIT_BEARING_CONDITION ADD CONSTRAINT RA_BBC_R_BBC_FK FOREIGN KEY
(
BEARING_CONDITION
)
REFERENCES R_BIT_BEARING_CONDITION
(
BEARING_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BBC_R_LANG_FK'
ALTER TABLE RA_BIT_BEARING_CONDITION ADD CONSTRAINT RA_BBC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BBC_SRCD_FK'
ALTER TABLE RA_BIT_BEARING_CONDITION ADD CONSTRAINT RA_BBC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSD_BA_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_DULL ADD CONSTRAINT RA_BCSD_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSD_PSWA_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_DULL ADD CONSTRAINT RA_BCSD_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSD_R_ART_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_DULL ADD CONSTRAINT RA_BCSD_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSD_R_ATY_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_DULL ADD CONSTRAINT RA_BCSD_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSD_R_BCSD_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_DULL ADD CONSTRAINT RA_BCSD_R_BCSD_FK FOREIGN KEY
(
CUTTING_STRUCTURE_MDC
)
REFERENCES R_BIT_CUT_STRUCT_DULL
(
CUTTING_STRUCTURE_MDC
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSD_R_LANG_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_DULL ADD CONSTRAINT RA_BCSD_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSD_SRCD_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_DULL ADD CONSTRAINT RA_BCSD_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSI_BA_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_INNER ADD CONSTRAINT RA_BCSI_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSI_PSWA_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_INNER ADD CONSTRAINT RA_BCSI_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSI_R_ART_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_INNER ADD CONSTRAINT RA_BCSI_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSI_R_ATY_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_INNER ADD CONSTRAINT RA_BCSI_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSI_R_BCSI_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_INNER ADD CONSTRAINT RA_BCSI_R_BCSI_FK FOREIGN KEY
(
CUTTING_STRUCTURE_T1
)
REFERENCES R_BIT_CUT_STRUCT_INNER
(
CUTTING_STRUCTURE_T1
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSI_R_LANG_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_INNER ADD CONSTRAINT RA_BCSI_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSI_SRCD_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_INNER ADD CONSTRAINT RA_BCSI_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSL_BA_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_LOC ADD CONSTRAINT RA_BCSL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSL_PSWA_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_LOC ADD CONSTRAINT RA_BCSL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSL_R_ART_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_LOC ADD CONSTRAINT RA_BCSL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSL_R_ATY_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_LOC ADD CONSTRAINT RA_BCSL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSL_R_BCSL_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_LOC ADD CONSTRAINT RA_BCSL_R_BCSL_FK FOREIGN KEY
(
CUTTING_STRUCTURE_LOC
)
REFERENCES R_BIT_CUT_STRUCT_LOC
(
CUTTING_STRUCTURE_LOC
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSL_R_LANG_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_LOC ADD CONSTRAINT RA_BCSL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSL_SRCD_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_LOC ADD CONSTRAINT RA_BCSL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSO_BA_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_OUTER ADD CONSTRAINT RA_BCSO_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSO_PSWA_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_OUTER ADD CONSTRAINT RA_BCSO_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSO_R_ART_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_OUTER ADD CONSTRAINT RA_BCSO_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSO_R_ATY_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_OUTER ADD CONSTRAINT RA_BCSO_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSO_R_BCSO_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_OUTER ADD CONSTRAINT RA_BCSO_R_BCSO_FK FOREIGN KEY
(
CUTTING_STRUCTURE_TO
)
REFERENCES R_BIT_CUT_STRUCT_OUTER
(
CUTTING_STRUCTURE_TO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSO_R_LANG_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_OUTER ADD CONSTRAINT RA_BCSO_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BCSO_SRCD_FK'
ALTER TABLE RA_BIT_CUT_STRUCT_OUTER ADD CONSTRAINT RA_BCSO_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BRP_BA_FK'
ALTER TABLE RA_BIT_REASON_PULLED ADD CONSTRAINT RA_BRP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BRP_PSWA_FK'
ALTER TABLE RA_BIT_REASON_PULLED ADD CONSTRAINT RA_BRP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BRP_R_ART_FK'
ALTER TABLE RA_BIT_REASON_PULLED ADD CONSTRAINT RA_BRP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BRP_R_ATY_FK'
ALTER TABLE RA_BIT_REASON_PULLED ADD CONSTRAINT RA_BRP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BRP_R_BRP_FK'
ALTER TABLE RA_BIT_REASON_PULLED ADD CONSTRAINT RA_BRP_R_BRP_FK FOREIGN KEY
(
REASON_PULLED
)
REFERENCES R_BIT_REASON_PULLED
(
REASON_PULLED
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BRP_R_LANG_FK'
ALTER TABLE RA_BIT_REASON_PULLED ADD CONSTRAINT RA_BRP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BRP_SRCD_FK'
ALTER TABLE RA_BIT_REASON_PULLED ADD CONSTRAINT RA_BRP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BF_BA_FK'
ALTER TABLE RA_BLOWOUT_FLUID ADD CONSTRAINT RA_BF_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BF_PSWA_FK'
ALTER TABLE RA_BLOWOUT_FLUID ADD CONSTRAINT RA_BF_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BF_R_ART_FK'
ALTER TABLE RA_BLOWOUT_FLUID ADD CONSTRAINT RA_BF_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BF_R_ATY_FK'
ALTER TABLE RA_BLOWOUT_FLUID ADD CONSTRAINT RA_BF_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BF_R_BF_FK'
ALTER TABLE RA_BLOWOUT_FLUID ADD CONSTRAINT RA_BF_R_BF_FK FOREIGN KEY
(
BLOWOUT_FLUID
)
REFERENCES R_BLOWOUT_FLUID
(
BLOWOUT_FLUID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BF_R_LANG_FK'
ALTER TABLE RA_BLOWOUT_FLUID ADD CONSTRAINT RA_BF_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BF_SRCD_FK'
ALTER TABLE RA_BLOWOUT_FLUID ADD CONSTRAINT RA_BF_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BRT_BA_FK'
ALTER TABLE RA_BUILDUP_RADIUS_TYPE ADD CONSTRAINT RA_BRT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BRT_PSWA_FK'
ALTER TABLE RA_BUILDUP_RADIUS_TYPE ADD CONSTRAINT RA_BRT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BRT_R_ART_FK'
ALTER TABLE RA_BUILDUP_RADIUS_TYPE ADD CONSTRAINT RA_BRT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BRT_R_ATY_FK'
ALTER TABLE RA_BUILDUP_RADIUS_TYPE ADD CONSTRAINT RA_BRT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BRT_R_BRT_FK'
ALTER TABLE RA_BUILDUP_RADIUS_TYPE ADD CONSTRAINT RA_BRT_R_BRT_FK FOREIGN KEY
(
BUILDUP_RADIUS
)
REFERENCES R_BUILDUP_RADIUS_TYPE
(
BUILDUP_RADIUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BRT_R_LANG_FK'
ALTER TABLE RA_BUILDUP_RADIUS_TYPE ADD CONSTRAINT RA_BRT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_BRT_SRCD_FK'
ALTER TABLE RA_BUILDUP_RADIUS_TYPE ADD CONSTRAINT RA_BRT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAG_BA_FK'
ALTER TABLE RA_CAT_ADDITIVE_GROUP ADD CONSTRAINT RA_CAG_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAG_PSWA_FK'
ALTER TABLE RA_CAT_ADDITIVE_GROUP ADD CONSTRAINT RA_CAG_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAG_R_ART_FK'
ALTER TABLE RA_CAT_ADDITIVE_GROUP ADD CONSTRAINT RA_CAG_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAG_R_ATY_FK'
ALTER TABLE RA_CAT_ADDITIVE_GROUP ADD CONSTRAINT RA_CAG_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAG_R_CAG_FK'
ALTER TABLE RA_CAT_ADDITIVE_GROUP ADD CONSTRAINT RA_CAG_R_CAG_FK FOREIGN KEY
(
ADDITIVE_GROUP
)
REFERENCES R_CAT_ADDITIVE_GROUP
(
ADDITIVE_GROUP
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAG_R_LANG_FK'
ALTER TABLE RA_CAT_ADDITIVE_GROUP ADD CONSTRAINT RA_CAG_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAG_SRCD_FK'
ALTER TABLE RA_CAT_ADDITIVE_GROUP ADD CONSTRAINT RA_CAG_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAQT_BA_FK'
ALTER TABLE RA_CAT_ADDITIVE_QUANTITY ADD CONSTRAINT RA_CAQT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAQT_PSWA_FK'
ALTER TABLE RA_CAT_ADDITIVE_QUANTITY ADD CONSTRAINT RA_CAQT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAQT_R_ART_FK'
ALTER TABLE RA_CAT_ADDITIVE_QUANTITY ADD CONSTRAINT RA_CAQT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAQT_R_ATY_FK'
ALTER TABLE RA_CAT_ADDITIVE_QUANTITY ADD CONSTRAINT RA_CAQT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAQT_R_CAQT_FK'
ALTER TABLE RA_CAT_ADDITIVE_QUANTITY ADD CONSTRAINT RA_CAQT_R_CAQT_FK FOREIGN KEY
(
QUANTITY_TYPE
)
REFERENCES R_CAT_ADDITIVE_QUANTITY
(
QUANTITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAQT_R_LANG_FK'
ALTER TABLE RA_CAT_ADDITIVE_QUANTITY ADD CONSTRAINT RA_CAQT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAQT_SRCD_FK'
ALTER TABLE RA_CAT_ADDITIVE_QUANTITY ADD CONSTRAINT RA_CAQT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAS_BA_FK'
ALTER TABLE RA_CAT_ADDITIVE_SPEC ADD CONSTRAINT RA_CAS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAS_PSWA_FK'
ALTER TABLE RA_CAT_ADDITIVE_SPEC ADD CONSTRAINT RA_CAS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAS_R_ART_FK'
ALTER TABLE RA_CAT_ADDITIVE_SPEC ADD CONSTRAINT RA_CAS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAS_R_ATY_FK'
ALTER TABLE RA_CAT_ADDITIVE_SPEC ADD CONSTRAINT RA_CAS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAS_R_CAS_FK'
ALTER TABLE RA_CAT_ADDITIVE_SPEC ADD CONSTRAINT RA_CAS_R_CAS_FK FOREIGN KEY
(
ADDITIVE_SPEC_TYPE
)
REFERENCES R_CAT_ADDITIVE_SPEC
(
ADDITIVE_SPEC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAS_R_LANG_FK'
ALTER TABLE RA_CAT_ADDITIVE_SPEC ADD CONSTRAINT RA_CAS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAS_SRCD_FK'
ALTER TABLE RA_CAT_ADDITIVE_SPEC ADD CONSTRAINT RA_CAS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAX_BA_FK'
ALTER TABLE RA_CAT_ADDITIVE_XREF ADD CONSTRAINT RA_CAX_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAX_PSWA_FK'
ALTER TABLE RA_CAT_ADDITIVE_XREF ADD CONSTRAINT RA_CAX_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAX_R_ART_FK'
ALTER TABLE RA_CAT_ADDITIVE_XREF ADD CONSTRAINT RA_CAX_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAX_R_ATY_FK'
ALTER TABLE RA_CAT_ADDITIVE_XREF ADD CONSTRAINT RA_CAX_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAX_R_CAX_FK'
ALTER TABLE RA_CAT_ADDITIVE_XREF ADD CONSTRAINT RA_CAX_R_CAX_FK FOREIGN KEY
(
ADDITIVE_XREF_TYPE
)
REFERENCES R_CAT_ADDITIVE_XREF
(
ADDITIVE_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAX_R_LANG_FK'
ALTER TABLE RA_CAT_ADDITIVE_XREF ADD CONSTRAINT RA_CAX_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CAX_SRCD_FK'
ALTER TABLE RA_CAT_ADDITIVE_XREF ADD CONSTRAINT RA_CAX_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CEG_BA_FK'
ALTER TABLE RA_CAT_EQUIP_GROUP ADD CONSTRAINT RA_CEG_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CEG_PSWA_FK'
ALTER TABLE RA_CAT_EQUIP_GROUP ADD CONSTRAINT RA_CEG_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CEG_R_ART_FK'
ALTER TABLE RA_CAT_EQUIP_GROUP ADD CONSTRAINT RA_CEG_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CEG_R_ATY_FK'
ALTER TABLE RA_CAT_EQUIP_GROUP ADD CONSTRAINT RA_CEG_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CEG_R_CEG_FK'
ALTER TABLE RA_CAT_EQUIP_GROUP ADD CONSTRAINT RA_CEG_R_CEG_FK FOREIGN KEY
(
CAT_EQUIP_GROUP
)
REFERENCES R_CAT_EQUIP_GROUP
(
CAT_EQUIP_GROUP
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CEG_R_LANG_FK'
ALTER TABLE RA_CAT_EQUIP_GROUP ADD CONSTRAINT RA_CEG_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CEG_SRCD_FK'
ALTER TABLE RA_CAT_EQUIP_GROUP ADD CONSTRAINT RA_CEG_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CES_BA_FK'
ALTER TABLE RA_CAT_EQUIP_SPEC ADD CONSTRAINT RA_CES_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CES_PSWA_FK'
ALTER TABLE RA_CAT_EQUIP_SPEC ADD CONSTRAINT RA_CES_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CES_R_ART_FK'
ALTER TABLE RA_CAT_EQUIP_SPEC ADD CONSTRAINT RA_CES_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CES_R_ATY_FK'
ALTER TABLE RA_CAT_EQUIP_SPEC ADD CONSTRAINT RA_CES_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CES_R_CES_FK'
ALTER TABLE RA_CAT_EQUIP_SPEC ADD CONSTRAINT RA_CES_R_CES_FK FOREIGN KEY
(
SPEC_TYPE
)
REFERENCES R_CAT_EQUIP_SPEC
(
SPEC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CES_R_LANG_FK'
ALTER TABLE RA_CAT_EQUIP_SPEC ADD CONSTRAINT RA_CES_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CES_SRCD_FK'
ALTER TABLE RA_CAT_EQUIP_SPEC ADD CONSTRAINT RA_CES_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSC_BA_FK'
ALTER TABLE RA_CAT_EQUIP_SPEC_CODE ADD CONSTRAINT RA_CSC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSC_PSWA_FK'
ALTER TABLE RA_CAT_EQUIP_SPEC_CODE ADD CONSTRAINT RA_CSC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSC_R_ART_FK'
ALTER TABLE RA_CAT_EQUIP_SPEC_CODE ADD CONSTRAINT RA_CSC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSC_R_ATY_FK'
ALTER TABLE RA_CAT_EQUIP_SPEC_CODE ADD CONSTRAINT RA_CSC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSC_R_CSC_FK'
ALTER TABLE RA_CAT_EQUIP_SPEC_CODE ADD CONSTRAINT RA_CSC_R_CSC_FK FOREIGN KEY
(
SPEC_TYPE,
SPEC_CODE
)
REFERENCES R_CAT_EQUIP_SPEC_CODE
(
SPEC_TYPE,
SPEC_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSC_R_LANG_FK'
ALTER TABLE RA_CAT_EQUIP_SPEC_CODE ADD CONSTRAINT RA_CSC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSC_SRCD_FK'
ALTER TABLE RA_CAT_EQUIP_SPEC_CODE ADD CONSTRAINT RA_CSC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CET_BA_FK'
ALTER TABLE RA_CAT_EQUIP_TYPE ADD CONSTRAINT RA_CET_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CET_PSWA_FK'
ALTER TABLE RA_CAT_EQUIP_TYPE ADD CONSTRAINT RA_CET_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CET_R_ART_FK'
ALTER TABLE RA_CAT_EQUIP_TYPE ADD CONSTRAINT RA_CET_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CET_R_ATY_FK'
ALTER TABLE RA_CAT_EQUIP_TYPE ADD CONSTRAINT RA_CET_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CET_R_CET_FK'
ALTER TABLE RA_CAT_EQUIP_TYPE ADD CONSTRAINT RA_CET_R_CET_FK FOREIGN KEY
(
CAT_EQUIP_TYPE
)
REFERENCES R_CAT_EQUIP_TYPE
(
CAT_EQUIP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CET_R_LANG_FK'
ALTER TABLE RA_CAT_EQUIP_TYPE ADD CONSTRAINT RA_CET_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CET_SRCD_FK'
ALTER TABLE RA_CAT_EQUIP_TYPE ADD CONSTRAINT RA_CET_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT_BA_FK'
ALTER TABLE RA_CEMENT_TYPE ADD CONSTRAINT RA_CT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT_PSWA_FK'
ALTER TABLE RA_CEMENT_TYPE ADD CONSTRAINT RA_CT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT_R_ART_FK'
ALTER TABLE RA_CEMENT_TYPE ADD CONSTRAINT RA_CT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT_R_ATY_FK'
ALTER TABLE RA_CEMENT_TYPE ADD CONSTRAINT RA_CT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT_R_CT_FK'
ALTER TABLE RA_CEMENT_TYPE ADD CONSTRAINT RA_CT_R_CT_FK FOREIGN KEY
(
CEMENT_TYPE
)
REFERENCES R_CEMENT_TYPE
(
CEMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT_R_LANG_FK'
ALTER TABLE RA_CEMENT_TYPE ADD CONSTRAINT RA_CT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT_SRCD_FK'
ALTER TABLE RA_CEMENT_TYPE ADD CONSTRAINT RA_CT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST_BA_FK'
ALTER TABLE RA_CHECKSHOT_SRVY_TYPE ADD CONSTRAINT RA_CST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST_PSWA_FK'
ALTER TABLE RA_CHECKSHOT_SRVY_TYPE ADD CONSTRAINT RA_CST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST_R_ART_FK'
ALTER TABLE RA_CHECKSHOT_SRVY_TYPE ADD CONSTRAINT RA_CST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST_R_ATY_FK'
ALTER TABLE RA_CHECKSHOT_SRVY_TYPE ADD CONSTRAINT RA_CST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST_R_CST_FK'
ALTER TABLE RA_CHECKSHOT_SRVY_TYPE ADD CONSTRAINT RA_CST_R_CST_FK FOREIGN KEY
(
CHECKSHOT_SURVEY_TYPE
)
REFERENCES R_CHECKSHOT_SRVY_TYPE
(
CHECKSHOT_SURVEY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST_R_LANG_FK'
ALTER TABLE RA_CHECKSHOT_SRVY_TYPE ADD CONSTRAINT RA_CST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST_SRCD_FK'
ALTER TABLE RA_CHECKSHOT_SRVY_TYPE ADD CONSTRAINT RA_CST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CDP_BA_FK'
ALTER TABLE RA_CLASS_DESC_PROPERTY ADD CONSTRAINT RA_CDP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CDP_PSWA_FK'
ALTER TABLE RA_CLASS_DESC_PROPERTY ADD CONSTRAINT RA_CDP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CDP_R_ART_FK'
ALTER TABLE RA_CLASS_DESC_PROPERTY ADD CONSTRAINT RA_CDP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CDP_R_ATY_FK'
ALTER TABLE RA_CLASS_DESC_PROPERTY ADD CONSTRAINT RA_CDP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CDP_R_CDP_FK'
ALTER TABLE RA_CLASS_DESC_PROPERTY ADD CONSTRAINT RA_CDP_R_CDP_FK FOREIGN KEY
(
DESC_TYPE
)
REFERENCES R_CLASS_DESC_PROPERTY
(
DESC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CDP_R_LANG_FK'
ALTER TABLE RA_CLASS_DESC_PROPERTY ADD CONSTRAINT RA_CDP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CDP_SRCD_FK'
ALTER TABLE RA_CLASS_DESC_PROPERTY ADD CONSTRAINT RA_CDP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CLCT_BA_FK'
ALTER TABLE RA_CLASS_LEV_COMP_TYPE ADD CONSTRAINT RA_CLCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CLCT_PSWA_FK'
ALTER TABLE RA_CLASS_LEV_COMP_TYPE ADD CONSTRAINT RA_CLCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CLCT_R_ART_FK'
ALTER TABLE RA_CLASS_LEV_COMP_TYPE ADD CONSTRAINT RA_CLCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CLCT_R_ATY_FK'
ALTER TABLE RA_CLASS_LEV_COMP_TYPE ADD CONSTRAINT RA_CLCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CLCT_R_CLCT_FK'
ALTER TABLE RA_CLASS_LEV_COMP_TYPE ADD CONSTRAINT RA_CLCT_R_CLCT_FK FOREIGN KEY
(
CLASS_LEVEL_COMPONENT_TYPE
)
REFERENCES R_CLASS_LEV_COMP_TYPE
(
CLASS_LEVEL_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CLCT_R_LANG_FK'
ALTER TABLE RA_CLASS_LEV_COMP_TYPE ADD CONSTRAINT RA_CLCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CLCT_SRCD_FK'
ALTER TABLE RA_CLASS_LEV_COMP_TYPE ADD CONSTRAINT RA_CLCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CLXT_BA_FK'
ALTER TABLE RA_CLASS_LEV_XREF_TYPE ADD CONSTRAINT RA_CLXT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CLXT_PSWA_FK'
ALTER TABLE RA_CLASS_LEV_XREF_TYPE ADD CONSTRAINT RA_CLXT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CLXT_R_ART_FK'
ALTER TABLE RA_CLASS_LEV_XREF_TYPE ADD CONSTRAINT RA_CLXT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CLXT_R_ATY_FK'
ALTER TABLE RA_CLASS_LEV_XREF_TYPE ADD CONSTRAINT RA_CLXT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CLXT_R_CLXT_FK'
ALTER TABLE RA_CLASS_LEV_XREF_TYPE ADD CONSTRAINT RA_CLXT_R_CLXT_FK FOREIGN KEY
(
LEVEL_XREF_TYPE
)
REFERENCES R_CLASS_LEV_XREF_TYPE
(
LEVEL_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CLXT_R_LANG_FK'
ALTER TABLE RA_CLASS_LEV_XREF_TYPE ADD CONSTRAINT RA_CLXT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CLXT_SRCD_FK'
ALTER TABLE RA_CLASS_LEV_XREF_TYPE ADD CONSTRAINT RA_CLXT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSD_BA_FK'
ALTER TABLE RA_CLASS_SYSTEM_DIMENSION ADD CONSTRAINT RA_CSD_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSD_PSWA_FK'
ALTER TABLE RA_CLASS_SYSTEM_DIMENSION ADD CONSTRAINT RA_CSD_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSD_R_ART_FK'
ALTER TABLE RA_CLASS_SYSTEM_DIMENSION ADD CONSTRAINT RA_CSD_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSD_R_ATY_FK'
ALTER TABLE RA_CLASS_SYSTEM_DIMENSION ADD CONSTRAINT RA_CSD_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSD_R_CSD_FK'
ALTER TABLE RA_CLASS_SYSTEM_DIMENSION ADD CONSTRAINT RA_CSD_R_CSD_FK FOREIGN KEY
(
CLASS_DIMENSION
)
REFERENCES R_CLASS_SYSTEM_DIMENSION
(
CLASS_DIMENSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSD_R_LANG_FK'
ALTER TABLE RA_CLASS_SYSTEM_DIMENSION ADD CONSTRAINT RA_CSD_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSD_SRCD_FK'
ALTER TABLE RA_CLASS_SYSTEM_DIMENSION ADD CONSTRAINT RA_CSD_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSET_BA_FK'
ALTER TABLE RA_CLASS_SYST_XREF_TYPE ADD CONSTRAINT RA_CSET_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSET_PSWA_FK'
ALTER TABLE RA_CLASS_SYST_XREF_TYPE ADD CONSTRAINT RA_CSET_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSET_R_ART_FK'
ALTER TABLE RA_CLASS_SYST_XREF_TYPE ADD CONSTRAINT RA_CSET_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSET_R_ATY_FK'
ALTER TABLE RA_CLASS_SYST_XREF_TYPE ADD CONSTRAINT RA_CSET_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSET_R_CSET_FK'
ALTER TABLE RA_CLASS_SYST_XREF_TYPE ADD CONSTRAINT RA_CSET_R_CSET_FK FOREIGN KEY
(
SYSTEM_XREF_TYPE
)
REFERENCES R_CLASS_SYST_XREF_TYPE
(
SYSTEM_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSET_R_LANG_FK'
ALTER TABLE RA_CLASS_SYST_XREF_TYPE ADD CONSTRAINT RA_CSET_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSET_SRCD_FK'
ALTER TABLE RA_CLASS_SYST_XREF_TYPE ADD CONSTRAINT RA_CSET_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CL_BA_FK'
ALTER TABLE RA_CLIMATE ADD CONSTRAINT RA_CL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CL_PSWA_FK'
ALTER TABLE RA_CLIMATE ADD CONSTRAINT RA_CL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CL_R_ART_FK'
ALTER TABLE RA_CLIMATE ADD CONSTRAINT RA_CL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CL_R_ATY_FK'
ALTER TABLE RA_CLIMATE ADD CONSTRAINT RA_CL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CL_R_CL_FK'
ALTER TABLE RA_CLIMATE ADD CONSTRAINT RA_CL_R_CL_FK FOREIGN KEY
(
CLIMATE_TYPE
)
REFERENCES R_CLIMATE
(
CLIMATE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CL_R_LANG_FK'
ALTER TABLE RA_CLIMATE ADD CONSTRAINT RA_CL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CL_SRCD_FK'
ALTER TABLE RA_CLIMATE ADD CONSTRAINT RA_CL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRST_BA_FK'
ALTER TABLE RA_COAL_RANK_SCHEME_TYPE ADD CONSTRAINT RA_CRST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRST_PSWA_FK'
ALTER TABLE RA_COAL_RANK_SCHEME_TYPE ADD CONSTRAINT RA_CRST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRST_R_ART_FK'
ALTER TABLE RA_COAL_RANK_SCHEME_TYPE ADD CONSTRAINT RA_CRST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRST_R_ATY_FK'
ALTER TABLE RA_COAL_RANK_SCHEME_TYPE ADD CONSTRAINT RA_CRST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRST_R_CRST_FK'
ALTER TABLE RA_COAL_RANK_SCHEME_TYPE ADD CONSTRAINT RA_CRST_R_CRST_FK FOREIGN KEY
(
COAL_RANK_SCHEME_TYPE
)
REFERENCES R_COAL_RANK_SCHEME_TYPE
(
COAL_RANK_SCHEME_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRST_R_LANG_FK'
ALTER TABLE RA_COAL_RANK_SCHEME_TYPE ADD CONSTRAINT RA_CRST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRST_SRCD_FK'
ALTER TABLE RA_COAL_RANK_SCHEME_TYPE ADD CONSTRAINT RA_CRST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCVX_BA_FK'
ALTER TABLE RA_CODE_VERSION_XREF_TYPE ADD CONSTRAINT RA_PCVX_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCVX_PSWA_FK'
ALTER TABLE RA_CODE_VERSION_XREF_TYPE ADD CONSTRAINT RA_PCVX_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCVX_R_ART_FK'
ALTER TABLE RA_CODE_VERSION_XREF_TYPE ADD CONSTRAINT RA_PCVX_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCVX_R_ATY_FK'
ALTER TABLE RA_CODE_VERSION_XREF_TYPE ADD CONSTRAINT RA_PCVX_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCVX_R_PCVX_FK'
ALTER TABLE RA_CODE_VERSION_XREF_TYPE ADD CONSTRAINT RA_PCVX_R_PCVX_FK FOREIGN KEY
(
CODE_XREF_TYPE
)
REFERENCES R_CODE_VERSION_XREF_TYPE
(
CODE_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCVX_R_LANG_FK'
ALTER TABLE RA_CODE_VERSION_XREF_TYPE ADD CONSTRAINT RA_PCVX_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCVX_SRCD_FK'
ALTER TABLE RA_CODE_VERSION_XREF_TYPE ADD CONSTRAINT RA_PCVX_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COT_BA_FK'
ALTER TABLE RA_COLLAR_TYPE ADD CONSTRAINT RA_COT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COT_PSWA_FK'
ALTER TABLE RA_COLLAR_TYPE ADD CONSTRAINT RA_COT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COT_R_ART_FK'
ALTER TABLE RA_COLLAR_TYPE ADD CONSTRAINT RA_COT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COT_R_ATY_FK'
ALTER TABLE RA_COLLAR_TYPE ADD CONSTRAINT RA_COT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COT_R_COT_FK'
ALTER TABLE RA_COLLAR_TYPE ADD CONSTRAINT RA_COT_R_COT_FK FOREIGN KEY
(
COLLAR_TYPE
)
REFERENCES R_COLLAR_TYPE
(
COLLAR_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COT_R_LANG_FK'
ALTER TABLE RA_COLLAR_TYPE ADD CONSTRAINT RA_COT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COT_SRCD_FK'
ALTER TABLE RA_COLLAR_TYPE ADD CONSTRAINT RA_COT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COL_BA_FK'
ALTER TABLE RA_COLOR ADD CONSTRAINT RA_COL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COL_PSWA_FK'
ALTER TABLE RA_COLOR ADD CONSTRAINT RA_COL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COL_R_ART_FK'
ALTER TABLE RA_COLOR ADD CONSTRAINT RA_COL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COL_R_ATY_FK'
ALTER TABLE RA_COLOR ADD CONSTRAINT RA_COL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COL_R_COL_FK'
ALTER TABLE RA_COLOR ADD CONSTRAINT RA_COL_R_COL_FK FOREIGN KEY
(
COLOR
)
REFERENCES R_COLOR
(
COLOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COL_R_LANG_FK'
ALTER TABLE RA_COLOR ADD CONSTRAINT RA_COL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COL_SRCD_FK'
ALTER TABLE RA_COLOR ADD CONSTRAINT RA_COL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COLE_BA_FK'
ALTER TABLE RA_COLOR_EQUIV ADD CONSTRAINT RA_COLE_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COLE_PSWA_FK'
ALTER TABLE RA_COLOR_EQUIV ADD CONSTRAINT RA_COLE_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COLE_R_ART_FK'
ALTER TABLE RA_COLOR_EQUIV ADD CONSTRAINT RA_COLE_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COLE_R_ATY_FK'
ALTER TABLE RA_COLOR_EQUIV ADD CONSTRAINT RA_COLE_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COLE_R_COLE_FK'
ALTER TABLE RA_COLOR_EQUIV ADD CONSTRAINT RA_COLE_R_COLE_FK FOREIGN KEY
(
COLOR_1,
COLOR_2
)
REFERENCES R_COLOR_EQUIV
(
COLOR_1,
COLOR_2
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COLE_R_LANG_FK'
ALTER TABLE RA_COLOR_EQUIV ADD CONSTRAINT RA_COLE_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COLE_SRCD_FK'
ALTER TABLE RA_COLOR_EQUIV ADD CONSTRAINT RA_COLE_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CFMT_BA_FK'
ALTER TABLE RA_COLOR_FORMAT ADD CONSTRAINT RA_CFMT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CFMT_PSWA_FK'
ALTER TABLE RA_COLOR_FORMAT ADD CONSTRAINT RA_CFMT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CFMT_R_ART_FK'
ALTER TABLE RA_COLOR_FORMAT ADD CONSTRAINT RA_CFMT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CFMT_R_ATY_FK'
ALTER TABLE RA_COLOR_FORMAT ADD CONSTRAINT RA_CFMT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CFMT_R_CFMT_FK'
ALTER TABLE RA_COLOR_FORMAT ADD CONSTRAINT RA_CFMT_R_CFMT_FK FOREIGN KEY
(
COLOR_FORMAT
)
REFERENCES R_COLOR_FORMAT
(
COLOR_FORMAT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CFMT_R_LANG_FK'
ALTER TABLE RA_COLOR_FORMAT ADD CONSTRAINT RA_CFMT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CFMT_SRCD_FK'
ALTER TABLE RA_COLOR_FORMAT ADD CONSTRAINT RA_CFMT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COLP_BA_FK'
ALTER TABLE RA_COLOR_PALETTE ADD CONSTRAINT RA_COLP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COLP_PSWA_FK'
ALTER TABLE RA_COLOR_PALETTE ADD CONSTRAINT RA_COLP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COLP_R_ART_FK'
ALTER TABLE RA_COLOR_PALETTE ADD CONSTRAINT RA_COLP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COLP_R_ATY_FK'
ALTER TABLE RA_COLOR_PALETTE ADD CONSTRAINT RA_COLP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COLP_R_COLP_FK'
ALTER TABLE RA_COLOR_PALETTE ADD CONSTRAINT RA_COLP_R_COLP_FK FOREIGN KEY
(
COLOR_PALETTE
)
REFERENCES R_COLOR_PALETTE
(
COLOR_PALETTE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COLP_R_LANG_FK'
ALTER TABLE RA_COLOR_PALETTE ADD CONSTRAINT RA_COLP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COLP_SRCD_FK'
ALTER TABLE RA_COLOR_PALETTE ADD CONSTRAINT RA_COLP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CM_BA_FK'
ALTER TABLE RA_COMPLETION_METHOD ADD CONSTRAINT RA_CM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CM_PSWA_FK'
ALTER TABLE RA_COMPLETION_METHOD ADD CONSTRAINT RA_CM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CM_R_ART_FK'
ALTER TABLE RA_COMPLETION_METHOD ADD CONSTRAINT RA_CM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CM_R_ATY_FK'
ALTER TABLE RA_COMPLETION_METHOD ADD CONSTRAINT RA_CM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CM_R_CM_FK'
ALTER TABLE RA_COMPLETION_METHOD ADD CONSTRAINT RA_CM_R_CM_FK FOREIGN KEY
(
COMPLETION_METHOD
)
REFERENCES R_COMPLETION_METHOD
(
COMPLETION_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CM_R_LANG_FK'
ALTER TABLE RA_COMPLETION_METHOD ADD CONSTRAINT RA_CM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CM_SRCD_FK'
ALTER TABLE RA_COMPLETION_METHOD ADD CONSTRAINT RA_CM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CS_BA_FK'
ALTER TABLE RA_COMPLETION_STATUS ADD CONSTRAINT RA_CS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CS_PSWA_FK'
ALTER TABLE RA_COMPLETION_STATUS ADD CONSTRAINT RA_CS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CS_R_ART_FK'
ALTER TABLE RA_COMPLETION_STATUS ADD CONSTRAINT RA_CS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CS_R_ATY_FK'
ALTER TABLE RA_COMPLETION_STATUS ADD CONSTRAINT RA_CS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CS_R_CS_FK'
ALTER TABLE RA_COMPLETION_STATUS ADD CONSTRAINT RA_CS_R_CS_FK FOREIGN KEY
(
STATUS_TYPE,
COMPLETION_STATUS
)
REFERENCES R_COMPLETION_STATUS
(
STATUS_TYPE,
COMPLETION_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CS_R_CSTT_FK'
ALTER TABLE RA_COMPLETION_STATUS ADD CONSTRAINT RA_CS_R_CSTT_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_COMPLETION_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CS_R_LANG_FK'
ALTER TABLE RA_COMPLETION_STATUS ADD CONSTRAINT RA_CS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CS_SRCD_FK'
ALTER TABLE RA_COMPLETION_STATUS ADD CONSTRAINT RA_CS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSTT_BA_FK'
ALTER TABLE RA_COMPLETION_STATUS_TYPE ADD CONSTRAINT RA_CSTT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSTT_PSWA_FK'
ALTER TABLE RA_COMPLETION_STATUS_TYPE ADD CONSTRAINT RA_CSTT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSTT_R_ART_FK'
ALTER TABLE RA_COMPLETION_STATUS_TYPE ADD CONSTRAINT RA_CSTT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSTT_R_ATY_FK'
ALTER TABLE RA_COMPLETION_STATUS_TYPE ADD CONSTRAINT RA_CSTT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSTT_R_CSTT_FK'
ALTER TABLE RA_COMPLETION_STATUS_TYPE ADD CONSTRAINT RA_CSTT_R_CSTT_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_COMPLETION_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSTT_R_LANG_FK'
ALTER TABLE RA_COMPLETION_STATUS_TYPE ADD CONSTRAINT RA_CSTT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSTT_SRCD_FK'
ALTER TABLE RA_COMPLETION_STATUS_TYPE ADD CONSTRAINT RA_CSTT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT2_BA_FK'
ALTER TABLE RA_COMPLETION_TYPE ADD CONSTRAINT RA_CT2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT2_PSWA_FK'
ALTER TABLE RA_COMPLETION_TYPE ADD CONSTRAINT RA_CT2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT2_R_ART_FK'
ALTER TABLE RA_COMPLETION_TYPE ADD CONSTRAINT RA_CT2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT2_R_ATY_FK'
ALTER TABLE RA_COMPLETION_TYPE ADD CONSTRAINT RA_CT2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT2_R_CT2_FK'
ALTER TABLE RA_COMPLETION_TYPE ADD CONSTRAINT RA_CT2_R_CT2_FK FOREIGN KEY
(
COMPLETION_TYPE
)
REFERENCES R_COMPLETION_TYPE
(
COMPLETION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT2_R_LANG_FK'
ALTER TABLE RA_COMPLETION_TYPE ADD CONSTRAINT RA_CT2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT2_SRCD_FK'
ALTER TABLE RA_COMPLETION_TYPE ADD CONSTRAINT RA_CT2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COT2_BA_FK'
ALTER TABLE RA_CONDITION_TYPE ADD CONSTRAINT RA_COT2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COT2_PSWA_FK'
ALTER TABLE RA_CONDITION_TYPE ADD CONSTRAINT RA_COT2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COT2_R_ART_FK'
ALTER TABLE RA_CONDITION_TYPE ADD CONSTRAINT RA_COT2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COT2_R_ATY_FK'
ALTER TABLE RA_CONDITION_TYPE ADD CONSTRAINT RA_COT2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COT2_R_COT2_FK'
ALTER TABLE RA_CONDITION_TYPE ADD CONSTRAINT RA_COT2_R_COT2_FK FOREIGN KEY
(
CONDITION_TYPE
)
REFERENCES R_CONDITION_TYPE
(
CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COT2_R_LANG_FK'
ALTER TABLE RA_CONDITION_TYPE ADD CONSTRAINT RA_COT2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COT2_SRCD_FK'
ALTER TABLE RA_CONDITION_TYPE ADD CONSTRAINT RA_COT2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONT_BA_FK'
ALTER TABLE RA_CONFIDENCE_TYPE ADD CONSTRAINT RA_CONT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONT_PSWA_FK'
ALTER TABLE RA_CONFIDENCE_TYPE ADD CONSTRAINT RA_CONT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONT_R_ART_FK'
ALTER TABLE RA_CONFIDENCE_TYPE ADD CONSTRAINT RA_CONT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONT_R_ATY_FK'
ALTER TABLE RA_CONFIDENCE_TYPE ADD CONSTRAINT RA_CONT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONT_R_CONT_FK'
ALTER TABLE RA_CONFIDENCE_TYPE ADD CONSTRAINT RA_CONT_R_CONT_FK FOREIGN KEY
(
CONFIDENCE_TYPE
)
REFERENCES R_CONFIDENCE_TYPE
(
CONFIDENCE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONT_R_LANG_FK'
ALTER TABLE RA_CONFIDENCE_TYPE ADD CONSTRAINT RA_CONT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONT_SRCD_FK'
ALTER TABLE RA_CONFIDENCE_TYPE ADD CONSTRAINT RA_CONT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CR2_BA_FK'
ALTER TABLE RA_CONFIDENTIAL_REASON ADD CONSTRAINT RA_CR2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CR2_PSWA_FK'
ALTER TABLE RA_CONFIDENTIAL_REASON ADD CONSTRAINT RA_CR2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CR2_R_ART_FK'
ALTER TABLE RA_CONFIDENTIAL_REASON ADD CONSTRAINT RA_CR2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CR2_R_ATY_FK'
ALTER TABLE RA_CONFIDENTIAL_REASON ADD CONSTRAINT RA_CR2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CR2_R_CR2_FK'
ALTER TABLE RA_CONFIDENTIAL_REASON ADD CONSTRAINT RA_CR2_R_CR2_FK FOREIGN KEY
(
CONFIDENTIAL_REASON
)
REFERENCES R_CONFIDENTIAL_REASON
(
CONFIDENTIAL_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CR2_R_LANG_FK'
ALTER TABLE RA_CONFIDENTIAL_REASON ADD CONSTRAINT RA_CR2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CR2_SRCD_FK'
ALTER TABLE RA_CONFIDENTIAL_REASON ADD CONSTRAINT RA_CR2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT3_BA_FK'
ALTER TABLE RA_CONFIDENTIAL_TYPE ADD CONSTRAINT RA_CT3_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT3_PSWA_FK'
ALTER TABLE RA_CONFIDENTIAL_TYPE ADD CONSTRAINT RA_CT3_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT3_R_ART_FK'
ALTER TABLE RA_CONFIDENTIAL_TYPE ADD CONSTRAINT RA_CT3_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT3_R_ATY_FK'
ALTER TABLE RA_CONFIDENTIAL_TYPE ADD CONSTRAINT RA_CT3_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT3_R_CT3_FK'
ALTER TABLE RA_CONFIDENTIAL_TYPE ADD CONSTRAINT RA_CT3_R_CT3_FK FOREIGN KEY
(
CONFIDENTIAL_TYPE
)
REFERENCES R_CONFIDENTIAL_TYPE
(
CONFIDENTIAL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT3_R_LANG_FK'
ALTER TABLE RA_CONFIDENTIAL_TYPE ADD CONSTRAINT RA_CT3_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT3_SRCD_FK'
ALTER TABLE RA_CONFIDENTIAL_TYPE ADD CONSTRAINT RA_CT3_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONR_BA_FK'
ALTER TABLE RA_CONFORMITY_RELATION ADD CONSTRAINT RA_CONR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONR_PSWA_FK'
ALTER TABLE RA_CONFORMITY_RELATION ADD CONSTRAINT RA_CONR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONR_R_ART_FK'
ALTER TABLE RA_CONFORMITY_RELATION ADD CONSTRAINT RA_CONR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONR_R_ATY_FK'
ALTER TABLE RA_CONFORMITY_RELATION ADD CONSTRAINT RA_CONR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONR_R_CONR_FK'
ALTER TABLE RA_CONFORMITY_RELATION ADD CONSTRAINT RA_CONR_R_CONR_FK FOREIGN KEY
(
CONFORMITY_RELATIONSHIP
)
REFERENCES R_CONFORMITY_RELATION
(
CONFORMITY_RELATIONSHIP
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONR_R_LANG_FK'
ALTER TABLE RA_CONFORMITY_RELATION ADD CONSTRAINT RA_CONR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONR_SRCD_FK'
ALTER TABLE RA_CONFORMITY_RELATION ADD CONSTRAINT RA_CONR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSBR_BA_FK'
ALTER TABLE RA_CONSENT_BA_ROLE ADD CONSTRAINT RA_CONSBR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSBR_PSWA_FK'
ALTER TABLE RA_CONSENT_BA_ROLE ADD CONSTRAINT RA_CONSBR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSBR_R_ART_FK'
ALTER TABLE RA_CONSENT_BA_ROLE ADD CONSTRAINT RA_CONSBR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSBR_R_ATY_FK'
ALTER TABLE RA_CONSENT_BA_ROLE ADD CONSTRAINT RA_CONSBR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSBR_R_CONSBR_FK'
ALTER TABLE RA_CONSENT_BA_ROLE ADD CONSTRAINT RA_CONSBR_R_CONSBR_FK FOREIGN KEY
(
CONSENT_BA_ROLE
)
REFERENCES R_CONSENT_BA_ROLE
(
CONSENT_BA_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSBR_R_LANG_FK'
ALTER TABLE RA_CONSENT_BA_ROLE ADD CONSTRAINT RA_CONSBR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSBR_SRCD_FK'
ALTER TABLE RA_CONSENT_BA_ROLE ADD CONSTRAINT RA_CONSBR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSCT_BA_FK'
ALTER TABLE RA_CONSENT_COMP_TYPE ADD CONSTRAINT RA_CONSCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSCT_PSWA_FK'
ALTER TABLE RA_CONSENT_COMP_TYPE ADD CONSTRAINT RA_CONSCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSCT_R_ART_FK'
ALTER TABLE RA_CONSENT_COMP_TYPE ADD CONSTRAINT RA_CONSCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSCT_R_ATY_FK'
ALTER TABLE RA_CONSENT_COMP_TYPE ADD CONSTRAINT RA_CONSCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSCT_R_CONSCT_FK'
ALTER TABLE RA_CONSENT_COMP_TYPE ADD CONSTRAINT RA_CONSCT_R_CONSCT_FK FOREIGN KEY
(
CONSENT_COMPONENT_TYPE
)
REFERENCES R_CONSENT_COMP_TYPE
(
CONSENT_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSCT_R_LANG_FK'
ALTER TABLE RA_CONSENT_COMP_TYPE ADD CONSTRAINT RA_CONSCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSCT_SRCD_FK'
ALTER TABLE RA_CONSENT_COMP_TYPE ADD CONSTRAINT RA_CONSCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSC_BA_FK'
ALTER TABLE RA_CONSENT_CONDITION ADD CONSTRAINT RA_CONSC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSC_PSWA_FK'
ALTER TABLE RA_CONSENT_CONDITION ADD CONSTRAINT RA_CONSC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSC_R_ART_FK'
ALTER TABLE RA_CONSENT_CONDITION ADD CONSTRAINT RA_CONSC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSC_R_ATY_FK'
ALTER TABLE RA_CONSENT_CONDITION ADD CONSTRAINT RA_CONSC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSC_R_CONSC_FK'
ALTER TABLE RA_CONSENT_CONDITION ADD CONSTRAINT RA_CONSC_R_CONSC_FK FOREIGN KEY
(
CONSENT_TYPE,
CONSENT_CONDITION
)
REFERENCES R_CONSENT_CONDITION
(
CONSENT_TYPE,
CONSENT_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSC_R_LANG_FK'
ALTER TABLE RA_CONSENT_CONDITION ADD CONSTRAINT RA_CONSC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSC_SRCD_FK'
ALTER TABLE RA_CONSENT_CONDITION ADD CONSTRAINT RA_CONSC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSR_BA_FK'
ALTER TABLE RA_CONSENT_REMARK ADD CONSTRAINT RA_CONSR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSR_PSWA_FK'
ALTER TABLE RA_CONSENT_REMARK ADD CONSTRAINT RA_CONSR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSR_R_ART_FK'
ALTER TABLE RA_CONSENT_REMARK ADD CONSTRAINT RA_CONSR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSR_R_ATY_FK'
ALTER TABLE RA_CONSENT_REMARK ADD CONSTRAINT RA_CONSR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSR_R_CONSR_FK'
ALTER TABLE RA_CONSENT_REMARK ADD CONSTRAINT RA_CONSR_R_CONSR_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_CONSENT_REMARK
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSR_R_LANG_FK'
ALTER TABLE RA_CONSENT_REMARK ADD CONSTRAINT RA_CONSR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSR_SRCD_FK'
ALTER TABLE RA_CONSENT_REMARK ADD CONSTRAINT RA_CONSR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSS_BA_FK'
ALTER TABLE RA_CONSENT_STATUS ADD CONSTRAINT RA_CONSS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSS_PSWA_FK'
ALTER TABLE RA_CONSENT_STATUS ADD CONSTRAINT RA_CONSS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSS_R_ART_FK'
ALTER TABLE RA_CONSENT_STATUS ADD CONSTRAINT RA_CONSS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSS_R_ATY_FK'
ALTER TABLE RA_CONSENT_STATUS ADD CONSTRAINT RA_CONSS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSS_R_CONSS_FK'
ALTER TABLE RA_CONSENT_STATUS ADD CONSTRAINT RA_CONSS_R_CONSS_FK FOREIGN KEY
(
CONSENT_STATUS
)
REFERENCES R_CONSENT_STATUS
(
CONSENT_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSS_R_LANG_FK'
ALTER TABLE RA_CONSENT_STATUS ADD CONSTRAINT RA_CONSS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONSS_SRCD_FK'
ALTER TABLE RA_CONSENT_STATUS ADD CONSTRAINT RA_CONSS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONST_BA_FK'
ALTER TABLE RA_CONSENT_TYPE ADD CONSTRAINT RA_CONST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONST_PSWA_FK'
ALTER TABLE RA_CONSENT_TYPE ADD CONSTRAINT RA_CONST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONST_R_ART_FK'
ALTER TABLE RA_CONSENT_TYPE ADD CONSTRAINT RA_CONST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONST_R_ATY_FK'
ALTER TABLE RA_CONSENT_TYPE ADD CONSTRAINT RA_CONST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONST_R_CONST_FK'
ALTER TABLE RA_CONSENT_TYPE ADD CONSTRAINT RA_CONST_R_CONST_FK FOREIGN KEY
(
CONSENT_TYPE
)
REFERENCES R_CONSENT_TYPE
(
CONSENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONST_R_LANG_FK'
ALTER TABLE RA_CONSENT_TYPE ADD CONSTRAINT RA_CONST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONST_SRCD_FK'
ALTER TABLE RA_CONSENT_TYPE ADD CONSTRAINT RA_CONST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COAT_BA_FK'
ALTER TABLE RA_CONSULT_ATTEND_TYPE ADD CONSTRAINT RA_COAT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COAT_PSWA_FK'
ALTER TABLE RA_CONSULT_ATTEND_TYPE ADD CONSTRAINT RA_COAT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COAT_R_ART_FK'
ALTER TABLE RA_CONSULT_ATTEND_TYPE ADD CONSTRAINT RA_COAT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COAT_R_ATY_FK'
ALTER TABLE RA_CONSULT_ATTEND_TYPE ADD CONSTRAINT RA_COAT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COAT_R_COAT_FK'
ALTER TABLE RA_CONSULT_ATTEND_TYPE ADD CONSTRAINT RA_COAT_R_COAT_FK FOREIGN KEY
(
ATTEND_TYPE
)
REFERENCES R_CONSULT_ATTEND_TYPE
(
ATTEND_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COAT_R_LANG_FK'
ALTER TABLE RA_CONSULT_ATTEND_TYPE ADD CONSTRAINT RA_COAT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COAT_SRCD_FK'
ALTER TABLE RA_CONSULT_ATTEND_TYPE ADD CONSTRAINT RA_COAT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CCT_BA_FK'
ALTER TABLE RA_CONSULT_COMP_TYPE ADD CONSTRAINT RA_CCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CCT_PSWA_FK'
ALTER TABLE RA_CONSULT_COMP_TYPE ADD CONSTRAINT RA_CCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CCT_R_ART_FK'
ALTER TABLE RA_CONSULT_COMP_TYPE ADD CONSTRAINT RA_CCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CCT_R_ATY_FK'
ALTER TABLE RA_CONSULT_COMP_TYPE ADD CONSTRAINT RA_CCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CCT_R_CCT_FK'
ALTER TABLE RA_CONSULT_COMP_TYPE ADD CONSTRAINT RA_CCT_R_CCT_FK FOREIGN KEY
(
COMPONENT_TYPE
)
REFERENCES R_CONSULT_COMP_TYPE
(
COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CCT_R_LANG_FK'
ALTER TABLE RA_CONSULT_COMP_TYPE ADD CONSTRAINT RA_CCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CCT_SRCD_FK'
ALTER TABLE RA_CONSULT_COMP_TYPE ADD CONSTRAINT RA_CCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CODT_BA_FK'
ALTER TABLE RA_CONSULT_DISC_TYPE ADD CONSTRAINT RA_CODT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CODT_PSWA_FK'
ALTER TABLE RA_CONSULT_DISC_TYPE ADD CONSTRAINT RA_CODT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CODT_R_ART_FK'
ALTER TABLE RA_CONSULT_DISC_TYPE ADD CONSTRAINT RA_CODT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CODT_R_ATY_FK'
ALTER TABLE RA_CONSULT_DISC_TYPE ADD CONSTRAINT RA_CODT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CODT_R_CODT_FK'
ALTER TABLE RA_CONSULT_DISC_TYPE ADD CONSTRAINT RA_CODT_R_CODT_FK FOREIGN KEY
(
DISCUSSION_TYPE
)
REFERENCES R_CONSULT_DISC_TYPE
(
DISCUSSION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CODT_R_LANG_FK'
ALTER TABLE RA_CONSULT_DISC_TYPE ADD CONSTRAINT RA_CODT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CODT_SRCD_FK'
ALTER TABLE RA_CONSULT_DISC_TYPE ADD CONSTRAINT RA_CODT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COIT_BA_FK'
ALTER TABLE RA_CONSULT_ISSUE_TYPE ADD CONSTRAINT RA_COIT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COIT_PSWA_FK'
ALTER TABLE RA_CONSULT_ISSUE_TYPE ADD CONSTRAINT RA_COIT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COIT_R_ART_FK'
ALTER TABLE RA_CONSULT_ISSUE_TYPE ADD CONSTRAINT RA_COIT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COIT_R_ATY_FK'
ALTER TABLE RA_CONSULT_ISSUE_TYPE ADD CONSTRAINT RA_COIT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COIT_R_COIT_FK'
ALTER TABLE RA_CONSULT_ISSUE_TYPE ADD CONSTRAINT RA_COIT_R_COIT_FK FOREIGN KEY
(
CONSULT_ISSUE_TYPE
)
REFERENCES R_CONSULT_ISSUE_TYPE
(
CONSULT_ISSUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COIT_R_LANG_FK'
ALTER TABLE RA_CONSULT_ISSUE_TYPE ADD CONSTRAINT RA_COIT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COIT_SRCD_FK'
ALTER TABLE RA_CONSULT_ISSUE_TYPE ADD CONSTRAINT RA_COIT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COR_BA_FK'
ALTER TABLE RA_CONSULT_REASON ADD CONSTRAINT RA_COR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COR_PSWA_FK'
ALTER TABLE RA_CONSULT_REASON ADD CONSTRAINT RA_COR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COR_R_ART_FK'
ALTER TABLE RA_CONSULT_REASON ADD CONSTRAINT RA_COR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COR_R_ATY_FK'
ALTER TABLE RA_CONSULT_REASON ADD CONSTRAINT RA_COR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COR_R_COR_FK'
ALTER TABLE RA_CONSULT_REASON ADD CONSTRAINT RA_COR_R_COR_FK FOREIGN KEY
(
CONSULT_REASON
)
REFERENCES R_CONSULT_REASON
(
CONSULT_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COR_R_LANG_FK'
ALTER TABLE RA_CONSULT_REASON ADD CONSTRAINT RA_COR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COR_SRCD_FK'
ALTER TABLE RA_CONSULT_REASON ADD CONSTRAINT RA_COR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CORE_BA_FK'
ALTER TABLE RA_CONSULT_RESOLUTION ADD CONSTRAINT RA_CORE_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CORE_PSWA_FK'
ALTER TABLE RA_CONSULT_RESOLUTION ADD CONSTRAINT RA_CORE_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CORE_R_ART_FK'
ALTER TABLE RA_CONSULT_RESOLUTION ADD CONSTRAINT RA_CORE_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CORE_R_ATY_FK'
ALTER TABLE RA_CONSULT_RESOLUTION ADD CONSTRAINT RA_CORE_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CORE_R_CORE_FK'
ALTER TABLE RA_CONSULT_RESOLUTION ADD CONSTRAINT RA_CORE_R_CORE_FK FOREIGN KEY
(
CONSULT_RESOLUTION
)
REFERENCES R_CONSULT_RESOLUTION
(
CONSULT_RESOLUTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CORE_R_LANG_FK'
ALTER TABLE RA_CONSULT_RESOLUTION ADD CONSTRAINT RA_CORE_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CORE_SRCD_FK'
ALTER TABLE RA_CONSULT_RESOLUTION ADD CONSTRAINT RA_CORE_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CORL_BA_FK'
ALTER TABLE RA_CONSULT_ROLE ADD CONSTRAINT RA_CORL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CORL_PSWA_FK'
ALTER TABLE RA_CONSULT_ROLE ADD CONSTRAINT RA_CORL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CORL_R_ART_FK'
ALTER TABLE RA_CONSULT_ROLE ADD CONSTRAINT RA_CORL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CORL_R_ATY_FK'
ALTER TABLE RA_CONSULT_ROLE ADD CONSTRAINT RA_CORL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CORL_R_CORL_FK'
ALTER TABLE RA_CONSULT_ROLE ADD CONSTRAINT RA_CORL_R_CORL_FK FOREIGN KEY
(
CONSULT_ROLE
)
REFERENCES R_CONSULT_ROLE
(
CONSULT_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CORL_R_LANG_FK'
ALTER TABLE RA_CONSULT_ROLE ADD CONSTRAINT RA_CORL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CORL_SRCD_FK'
ALTER TABLE RA_CONSULT_ROLE ADD CONSTRAINT RA_CORL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COTY_BA_FK'
ALTER TABLE RA_CONSULT_TYPE ADD CONSTRAINT RA_COTY_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COTY_PSWA_FK'
ALTER TABLE RA_CONSULT_TYPE ADD CONSTRAINT RA_COTY_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COTY_R_ART_FK'
ALTER TABLE RA_CONSULT_TYPE ADD CONSTRAINT RA_COTY_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COTY_R_ATY_FK'
ALTER TABLE RA_CONSULT_TYPE ADD CONSTRAINT RA_COTY_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COTY_R_COTY_FK'
ALTER TABLE RA_CONSULT_TYPE ADD CONSTRAINT RA_COTY_R_COTY_FK FOREIGN KEY
(
CONSULT_TYPE
)
REFERENCES R_CONSULT_TYPE
(
CONSULT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COTY_R_LANG_FK'
ALTER TABLE RA_CONSULT_TYPE ADD CONSTRAINT RA_COTY_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COTY_SRCD_FK'
ALTER TABLE RA_CONSULT_TYPE ADD CONSTRAINT RA_COTY_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COX_BA_FK'
ALTER TABLE RA_CONSULT_XREF_TYPE ADD CONSTRAINT RA_COX_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COX_PSWA_FK'
ALTER TABLE RA_CONSULT_XREF_TYPE ADD CONSTRAINT RA_COX_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COX_R_ART_FK'
ALTER TABLE RA_CONSULT_XREF_TYPE ADD CONSTRAINT RA_COX_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COX_R_ATY_FK'
ALTER TABLE RA_CONSULT_XREF_TYPE ADD CONSTRAINT RA_COX_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COX_R_COX_FK'
ALTER TABLE RA_CONSULT_XREF_TYPE ADD CONSTRAINT RA_COX_R_COX_FK FOREIGN KEY
(
CONSULT_XREF_TYPE
)
REFERENCES R_CONSULT_XREF_TYPE
(
CONSULT_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COX_R_LANG_FK'
ALTER TABLE RA_CONSULT_XREF_TYPE ADD CONSTRAINT RA_COX_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COX_SRCD_FK'
ALTER TABLE RA_CONSULT_XREF_TYPE ADD CONSTRAINT RA_COX_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CR_BA_FK'
ALTER TABLE RA_CONTACT_ROLE ADD CONSTRAINT RA_CR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CR_PSWA_FK'
ALTER TABLE RA_CONTACT_ROLE ADD CONSTRAINT RA_CR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CR_R_ART_FK'
ALTER TABLE RA_CONTACT_ROLE ADD CONSTRAINT RA_CR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CR_R_ATY_FK'
ALTER TABLE RA_CONTACT_ROLE ADD CONSTRAINT RA_CR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CR_R_CR_FK'
ALTER TABLE RA_CONTACT_ROLE ADD CONSTRAINT RA_CR_R_CR_FK FOREIGN KEY
(
CONTACT_ROLE
)
REFERENCES R_CONTACT_ROLE
(
CONTACT_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CR_R_LANG_FK'
ALTER TABLE RA_CONTACT_ROLE ADD CONSTRAINT RA_CR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CR_SRCD_FK'
ALTER TABLE RA_CONTACT_ROLE ADD CONSTRAINT RA_CR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONTY_BA_FK'
ALTER TABLE RA_CONTAMINANT_TYPE ADD CONSTRAINT RA_CONTY_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONTY_PSWA_FK'
ALTER TABLE RA_CONTAMINANT_TYPE ADD CONSTRAINT RA_CONTY_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONTY_R_ART_FK'
ALTER TABLE RA_CONTAMINANT_TYPE ADD CONSTRAINT RA_CONTY_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONTY_R_ATY_FK'
ALTER TABLE RA_CONTAMINANT_TYPE ADD CONSTRAINT RA_CONTY_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONTY_R_CONTY_FK'
ALTER TABLE RA_CONTAMINANT_TYPE ADD CONSTRAINT RA_CONTY_R_CONTY_FK FOREIGN KEY
(
CONTAMINANT_TYPE
)
REFERENCES R_CONTAMINANT_TYPE
(
CONTAMINANT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONTY_R_LANG_FK'
ALTER TABLE RA_CONTAMINANT_TYPE ADD CONSTRAINT RA_CONTY_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CONTY_SRCD_FK'
ALTER TABLE RA_CONTAMINANT_TYPE ADD CONSTRAINT RA_CONTY_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COTCT_BA_FK'
ALTER TABLE RA_CONTEST_COMP_TYPE ADD CONSTRAINT RA_COTCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COTCT_PSWA_FK'
ALTER TABLE RA_CONTEST_COMP_TYPE ADD CONSTRAINT RA_COTCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COTCT_R_ART_FK'
ALTER TABLE RA_CONTEST_COMP_TYPE ADD CONSTRAINT RA_COTCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COTCT_R_ATY_FK'
ALTER TABLE RA_CONTEST_COMP_TYPE ADD CONSTRAINT RA_COTCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COTCT_R_COTCT_FK'
ALTER TABLE RA_CONTEST_COMP_TYPE ADD CONSTRAINT RA_COTCT_R_COTCT_FK FOREIGN KEY
(
CONTEST_COMPONENT_TYPE
)
REFERENCES R_CONTEST_COMP_TYPE
(
CONTEST_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COTCT_R_LANG_FK'
ALTER TABLE RA_CONTEST_COMP_TYPE ADD CONSTRAINT RA_COTCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COTCT_SRCD_FK'
ALTER TABLE RA_CONTEST_COMP_TYPE ADD CONSTRAINT RA_COTCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CPR_BA_FK'
ALTER TABLE RA_CONTEST_PARTY_ROLE ADD CONSTRAINT RA_CPR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CPR_PSWA_FK'
ALTER TABLE RA_CONTEST_PARTY_ROLE ADD CONSTRAINT RA_CPR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CPR_R_ART_FK'
ALTER TABLE RA_CONTEST_PARTY_ROLE ADD CONSTRAINT RA_CPR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CPR_R_ATY_FK'
ALTER TABLE RA_CONTEST_PARTY_ROLE ADD CONSTRAINT RA_CPR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CPR_R_CPR_FK'
ALTER TABLE RA_CONTEST_PARTY_ROLE ADD CONSTRAINT RA_CPR_R_CPR_FK FOREIGN KEY
(
PARTY_ROLE
)
REFERENCES R_CONTEST_PARTY_ROLE
(
PARTY_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CPR_R_LANG_FK'
ALTER TABLE RA_CONTEST_PARTY_ROLE ADD CONSTRAINT RA_CPR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CPR_SRCD_FK'
ALTER TABLE RA_CONTEST_PARTY_ROLE ADD CONSTRAINT RA_CPR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRES_BA_FK'
ALTER TABLE RA_CONTEST_RESOLUTION ADD CONSTRAINT RA_CRES_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRES_PSWA_FK'
ALTER TABLE RA_CONTEST_RESOLUTION ADD CONSTRAINT RA_CRES_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRES_R_ART_FK'
ALTER TABLE RA_CONTEST_RESOLUTION ADD CONSTRAINT RA_CRES_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRES_R_ATY_FK'
ALTER TABLE RA_CONTEST_RESOLUTION ADD CONSTRAINT RA_CRES_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRES_R_CRES_FK'
ALTER TABLE RA_CONTEST_RESOLUTION ADD CONSTRAINT RA_CRES_R_CRES_FK FOREIGN KEY
(
RESOLUTION_METHOD
)
REFERENCES R_CONTEST_RESOLUTION
(
RESOLUTION_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRES_R_LANG_FK'
ALTER TABLE RA_CONTEST_RESOLUTION ADD CONSTRAINT RA_CRES_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRES_SRCD_FK'
ALTER TABLE RA_CONTEST_RESOLUTION ADD CONSTRAINT RA_CRES_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CTY_BA_FK'
ALTER TABLE RA_CONTEST_TYPE ADD CONSTRAINT RA_CTY_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CTY_PSWA_FK'
ALTER TABLE RA_CONTEST_TYPE ADD CONSTRAINT RA_CTY_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CTY_R_ART_FK'
ALTER TABLE RA_CONTEST_TYPE ADD CONSTRAINT RA_CTY_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CTY_R_ATY_FK'
ALTER TABLE RA_CONTEST_TYPE ADD CONSTRAINT RA_CTY_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CTY_R_CTY_FK'
ALTER TABLE RA_CONTEST_TYPE ADD CONSTRAINT RA_CTY_R_CTY_FK FOREIGN KEY
(
CONTEST_TYPE
)
REFERENCES R_CONTEST_TYPE
(
CONTEST_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CTY_R_LANG_FK'
ALTER TABLE RA_CONTEST_TYPE ADD CONSTRAINT RA_CTY_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CTY_SRCD_FK'
ALTER TABLE RA_CONTEST_TYPE ADD CONSTRAINT RA_CTY_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CCT2_BA_FK'
ALTER TABLE RA_CONTRACT_COMP_TYPE ADD CONSTRAINT RA_CCT2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CCT2_PSWA_FK'
ALTER TABLE RA_CONTRACT_COMP_TYPE ADD CONSTRAINT RA_CCT2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CCT2_R_ART_FK'
ALTER TABLE RA_CONTRACT_COMP_TYPE ADD CONSTRAINT RA_CCT2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CCT2_R_ATY_FK'
ALTER TABLE RA_CONTRACT_COMP_TYPE ADD CONSTRAINT RA_CCT2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CCT2_R_CCT2_FK'
ALTER TABLE RA_CONTRACT_COMP_TYPE ADD CONSTRAINT RA_CCT2_R_CCT2_FK FOREIGN KEY
(
CONTRACT_COMPONENT_TYPE
)
REFERENCES R_CONTRACT_COMP_TYPE
(
CONTRACT_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CCT2_R_LANG_FK'
ALTER TABLE RA_CONTRACT_COMP_TYPE ADD CONSTRAINT RA_CCT2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CCT2_SRCD_FK'
ALTER TABLE RA_CONTRACT_COMP_TYPE ADD CONSTRAINT RA_CCT2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CBR_BA_FK'
ALTER TABLE RA_CONT_BA_ROLE ADD CONSTRAINT RA_CBR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CBR_PSWA_FK'
ALTER TABLE RA_CONT_BA_ROLE ADD CONSTRAINT RA_CBR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CBR_R_ART_FK'
ALTER TABLE RA_CONT_BA_ROLE ADD CONSTRAINT RA_CBR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CBR_R_ATY_FK'
ALTER TABLE RA_CONT_BA_ROLE ADD CONSTRAINT RA_CBR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CBR_R_CBR_FK'
ALTER TABLE RA_CONT_BA_ROLE ADD CONSTRAINT RA_CBR_R_CBR_FK FOREIGN KEY
(
BA_ROLE
)
REFERENCES R_CONT_BA_ROLE
(
BA_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CBR_R_LANG_FK'
ALTER TABLE RA_CONT_BA_ROLE ADD CONSTRAINT RA_CBR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CBR_SRCD_FK'
ALTER TABLE RA_CONT_BA_ROLE ADD CONSTRAINT RA_CBR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CCR_BA_FK'
ALTER TABLE RA_CONT_COMP_REASON ADD CONSTRAINT RA_CCR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CCR_PSWA_FK'
ALTER TABLE RA_CONT_COMP_REASON ADD CONSTRAINT RA_CCR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CCR_R_ART_FK'
ALTER TABLE RA_CONT_COMP_REASON ADD CONSTRAINT RA_CCR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CCR_R_ATY_FK'
ALTER TABLE RA_CONT_COMP_REASON ADD CONSTRAINT RA_CCR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CCR_R_CCR_FK'
ALTER TABLE RA_CONT_COMP_REASON ADD CONSTRAINT RA_CCR_R_CCR_FK FOREIGN KEY
(
REASON_TYPE
)
REFERENCES R_CONT_COMP_REASON
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CCR_R_LANG_FK'
ALTER TABLE RA_CONT_COMP_REASON ADD CONSTRAINT RA_CCR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CCR_SRCD_FK'
ALTER TABLE RA_CONT_COMP_REASON ADD CONSTRAINT RA_CCR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CXC_BA_FK'
ALTER TABLE RA_CONT_EXTEND_COND ADD CONSTRAINT RA_CXC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CXC_PSWA_FK'
ALTER TABLE RA_CONT_EXTEND_COND ADD CONSTRAINT RA_CXC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CXC_R_ART_FK'
ALTER TABLE RA_CONT_EXTEND_COND ADD CONSTRAINT RA_CXC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CXC_R_ATY_FK'
ALTER TABLE RA_CONT_EXTEND_COND ADD CONSTRAINT RA_CXC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CXC_R_CXC_FK'
ALTER TABLE RA_CONT_EXTEND_COND ADD CONSTRAINT RA_CXC_R_CXC_FK FOREIGN KEY
(
EXTENSION_CONDITION
)
REFERENCES R_CONT_EXTEND_COND
(
EXTENSION_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CXC_R_LANG_FK'
ALTER TABLE RA_CONT_EXTEND_COND ADD CONSTRAINT RA_CXC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CXC_SRCD_FK'
ALTER TABLE RA_CONT_EXTEND_COND ADD CONSTRAINT RA_CXC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CXT_BA_FK'
ALTER TABLE RA_CONT_EXTEND_TYPE ADD CONSTRAINT RA_CXT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CXT_PSWA_FK'
ALTER TABLE RA_CONT_EXTEND_TYPE ADD CONSTRAINT RA_CXT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CXT_R_ART_FK'
ALTER TABLE RA_CONT_EXTEND_TYPE ADD CONSTRAINT RA_CXT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CXT_R_ATY_FK'
ALTER TABLE RA_CONT_EXTEND_TYPE ADD CONSTRAINT RA_CXT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CXT_R_CXT_FK'
ALTER TABLE RA_CONT_EXTEND_TYPE ADD CONSTRAINT RA_CXT_R_CXT_FK FOREIGN KEY
(
EXTENSION_TYPE
)
REFERENCES R_CONT_EXTEND_TYPE
(
EXTENSION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CXT_R_LANG_FK'
ALTER TABLE RA_CONT_EXTEND_TYPE ADD CONSTRAINT RA_CXT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CXT_SRCD_FK'
ALTER TABLE RA_CONT_EXTEND_TYPE ADD CONSTRAINT RA_CXT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CIE_BA_FK'
ALTER TABLE RA_CONT_INSUR_ELECT ADD CONSTRAINT RA_CIE_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CIE_PSWA_FK'
ALTER TABLE RA_CONT_INSUR_ELECT ADD CONSTRAINT RA_CIE_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CIE_R_ART_FK'
ALTER TABLE RA_CONT_INSUR_ELECT ADD CONSTRAINT RA_CIE_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CIE_R_ATY_FK'
ALTER TABLE RA_CONT_INSUR_ELECT ADD CONSTRAINT RA_CIE_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CIE_R_CIE_FK'
ALTER TABLE RA_CONT_INSUR_ELECT ADD CONSTRAINT RA_CIE_R_CIE_FK FOREIGN KEY
(
INSURANCE_ELECTION
)
REFERENCES R_CONT_INSUR_ELECT
(
INSURANCE_ELECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CIE_R_LANG_FK'
ALTER TABLE RA_CONT_INSUR_ELECT ADD CONSTRAINT RA_CIE_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CIE_SRCD_FK'
ALTER TABLE RA_CONT_INSUR_ELECT ADD CONSTRAINT RA_CIE_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COP_BA_FK'
ALTER TABLE RA_CONT_OPERATING_PROC ADD CONSTRAINT RA_COP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COP_PSWA_FK'
ALTER TABLE RA_CONT_OPERATING_PROC ADD CONSTRAINT RA_COP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COP_R_ART_FK'
ALTER TABLE RA_CONT_OPERATING_PROC ADD CONSTRAINT RA_COP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COP_R_ATY_FK'
ALTER TABLE RA_CONT_OPERATING_PROC ADD CONSTRAINT RA_COP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COP_R_COP_FK'
ALTER TABLE RA_CONT_OPERATING_PROC ADD CONSTRAINT RA_COP_R_COP_FK FOREIGN KEY
(
OPERATING_PROCEDURE
)
REFERENCES R_CONT_OPERATING_PROC
(
OPERATING_PROCEDURE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COP_R_LANG_FK'
ALTER TABLE RA_CONT_OPERATING_PROC ADD CONSTRAINT RA_COP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_COP_SRCD_FK'
ALTER TABLE RA_CONT_OPERATING_PROC ADD CONSTRAINT RA_COP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CPT_BA_FK'
ALTER TABLE RA_CONT_PROVISION_TYPE ADD CONSTRAINT RA_CPT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CPT_PSWA_FK'
ALTER TABLE RA_CONT_PROVISION_TYPE ADD CONSTRAINT RA_CPT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CPT_R_ART_FK'
ALTER TABLE RA_CONT_PROVISION_TYPE ADD CONSTRAINT RA_CPT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CPT_R_ATY_FK'
ALTER TABLE RA_CONT_PROVISION_TYPE ADD CONSTRAINT RA_CPT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CPT_R_CPT_FK'
ALTER TABLE RA_CONT_PROVISION_TYPE ADD CONSTRAINT RA_CPT_R_CPT_FK FOREIGN KEY
(
CONT_PROVISION_TYPE
)
REFERENCES R_CONT_PROVISION_TYPE
(
CONT_PROVISION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CPT_R_LANG_FK'
ALTER TABLE RA_CONT_PROVISION_TYPE ADD CONSTRAINT RA_CPT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CPT_SRCD_FK'
ALTER TABLE RA_CONT_PROVISION_TYPE ADD CONSTRAINT RA_CPT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CPXT_BA_FK'
ALTER TABLE RA_CONT_PROV_XREF_TYPE ADD CONSTRAINT RA_CPXT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CPXT_PSWA_FK'
ALTER TABLE RA_CONT_PROV_XREF_TYPE ADD CONSTRAINT RA_CPXT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CPXT_R_ART_FK'
ALTER TABLE RA_CONT_PROV_XREF_TYPE ADD CONSTRAINT RA_CPXT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CPXT_R_ATY_FK'
ALTER TABLE RA_CONT_PROV_XREF_TYPE ADD CONSTRAINT RA_CPXT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CPXT_R_CPXT_FK'
ALTER TABLE RA_CONT_PROV_XREF_TYPE ADD CONSTRAINT RA_CPXT_R_CPXT_FK FOREIGN KEY
(
PROVISION_XREF_TYPE
)
REFERENCES R_CONT_PROV_XREF_TYPE
(
PROVISION_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CPXT_R_LANG_FK'
ALTER TABLE RA_CONT_PROV_XREF_TYPE ADD CONSTRAINT RA_CPXT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CPXT_SRCD_FK'
ALTER TABLE RA_CONT_PROV_XREF_TYPE ADD CONSTRAINT RA_CPXT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSTAT_BA_FK'
ALTER TABLE RA_CONT_STATUS ADD CONSTRAINT RA_CSTAT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSTAT_PSWA_FK'
ALTER TABLE RA_CONT_STATUS ADD CONSTRAINT RA_CSTAT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSTAT_R_ART_FK'
ALTER TABLE RA_CONT_STATUS ADD CONSTRAINT RA_CSTAT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSTAT_R_ATY_FK'
ALTER TABLE RA_CONT_STATUS ADD CONSTRAINT RA_CSTAT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSTAT_R_CSTAT_FK'
ALTER TABLE RA_CONT_STATUS ADD CONSTRAINT RA_CSTAT_R_CSTAT_FK FOREIGN KEY
(
CONTRACT_STATUS
)
REFERENCES R_CONT_STATUS
(
CONTRACT_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSTAT_R_LANG_FK'
ALTER TABLE RA_CONT_STATUS ADD CONSTRAINT RA_CSTAT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSTAT_SRCD_FK'
ALTER TABLE RA_CONT_STATUS ADD CONSTRAINT RA_CSTAT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST3_BA_FK'
ALTER TABLE RA_CONT_STATUS_TYPE ADD CONSTRAINT RA_CST3_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST3_PSWA_FK'
ALTER TABLE RA_CONT_STATUS_TYPE ADD CONSTRAINT RA_CST3_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST3_R_ART_FK'
ALTER TABLE RA_CONT_STATUS_TYPE ADD CONSTRAINT RA_CST3_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST3_R_ATY_FK'
ALTER TABLE RA_CONT_STATUS_TYPE ADD CONSTRAINT RA_CST3_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST3_R_CST3_FK'
ALTER TABLE RA_CONT_STATUS_TYPE ADD CONSTRAINT RA_CST3_R_CST3_FK FOREIGN KEY
(
CONTRACT_STATUS_TYPE
)
REFERENCES R_CONT_STATUS_TYPE
(
CONTRACT_STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST3_R_LANG_FK'
ALTER TABLE RA_CONT_STATUS_TYPE ADD CONSTRAINT RA_CST3_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST3_SRCD_FK'
ALTER TABLE RA_CONT_STATUS_TYPE ADD CONSTRAINT RA_CST3_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT8_BA_FK'
ALTER TABLE RA_CONT_TYPE ADD CONSTRAINT RA_CT8_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT8_PSWA_FK'
ALTER TABLE RA_CONT_TYPE ADD CONSTRAINT RA_CT8_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT8_R_ART_FK'
ALTER TABLE RA_CONT_TYPE ADD CONSTRAINT RA_CT8_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT8_R_ATY_FK'
ALTER TABLE RA_CONT_TYPE ADD CONSTRAINT RA_CT8_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT8_R_CT8_FK'
ALTER TABLE RA_CONT_TYPE ADD CONSTRAINT RA_CT8_R_CT8_FK FOREIGN KEY
(
CONTRACT_TYPE
)
REFERENCES R_CONT_TYPE
(
CONTRACT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT8_R_LANG_FK'
ALTER TABLE RA_CONT_TYPE ADD CONSTRAINT RA_CT8_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT8_SRCD_FK'
ALTER TABLE RA_CONT_TYPE ADD CONSTRAINT RA_CT8_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CVR_BA_FK'
ALTER TABLE RA_CONT_VOTE_RESPONSE ADD CONSTRAINT RA_CVR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CVR_PSWA_FK'
ALTER TABLE RA_CONT_VOTE_RESPONSE ADD CONSTRAINT RA_CVR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CVR_R_ART_FK'
ALTER TABLE RA_CONT_VOTE_RESPONSE ADD CONSTRAINT RA_CVR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CVR_R_ATY_FK'
ALTER TABLE RA_CONT_VOTE_RESPONSE ADD CONSTRAINT RA_CVR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CVR_R_CVR_FK'
ALTER TABLE RA_CONT_VOTE_RESPONSE ADD CONSTRAINT RA_CVR_R_CVR_FK FOREIGN KEY
(
VOTE_RESPONSE
)
REFERENCES R_CONT_VOTE_RESPONSE
(
VOTE_RESPONSE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CVR_R_LANG_FK'
ALTER TABLE RA_CONT_VOTE_RESPONSE ADD CONSTRAINT RA_CVR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CVR_SRCD_FK'
ALTER TABLE RA_CONT_VOTE_RESPONSE ADD CONSTRAINT RA_CVR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CVT_BA_FK'
ALTER TABLE RA_CONT_VOTE_TYPE ADD CONSTRAINT RA_CVT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CVT_PSWA_FK'
ALTER TABLE RA_CONT_VOTE_TYPE ADD CONSTRAINT RA_CVT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CVT_R_ART_FK'
ALTER TABLE RA_CONT_VOTE_TYPE ADD CONSTRAINT RA_CVT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CVT_R_ATY_FK'
ALTER TABLE RA_CONT_VOTE_TYPE ADD CONSTRAINT RA_CVT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CVT_R_CVT_FK'
ALTER TABLE RA_CONT_VOTE_TYPE ADD CONSTRAINT RA_CVT_R_CVT_FK FOREIGN KEY
(
VOTE_PROCEDURE_TYPE
)
REFERENCES R_CONT_VOTE_TYPE
(
VOTE_PROCEDURE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CVT_R_LANG_FK'
ALTER TABLE RA_CONT_VOTE_TYPE ADD CONSTRAINT RA_CVT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CVT_SRCD_FK'
ALTER TABLE RA_CONT_VOTE_TYPE ADD CONSTRAINT RA_CVT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CXTY_BA_FK'
ALTER TABLE RA_CONT_XREF_TYPE ADD CONSTRAINT RA_CXTY_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CXTY_PSWA_FK'
ALTER TABLE RA_CONT_XREF_TYPE ADD CONSTRAINT RA_CXTY_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CXTY_R_ART_FK'
ALTER TABLE RA_CONT_XREF_TYPE ADD CONSTRAINT RA_CXTY_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CXTY_R_ATY_FK'
ALTER TABLE RA_CONT_XREF_TYPE ADD CONSTRAINT RA_CXTY_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CXTY_R_CXTY_FK'
ALTER TABLE RA_CONT_XREF_TYPE ADD CONSTRAINT RA_CXTY_R_CXTY_FK FOREIGN KEY
(
CONTRACT_XREF_TYPE
)
REFERENCES R_CONT_XREF_TYPE
(
CONTRACT_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CXTY_R_LANG_FK'
ALTER TABLE RA_CONT_XREF_TYPE ADD CONSTRAINT RA_CXTY_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CXTY_SRCD_FK'
ALTER TABLE RA_CONT_XREF_TYPE ADD CONSTRAINT RA_CXTY_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CC_BA_FK'
ALTER TABLE RA_COORD_CAPTURE ADD CONSTRAINT RA_CC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CC_PSWA_FK'
ALTER TABLE RA_COORD_CAPTURE ADD CONSTRAINT RA_CC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CC_R_ART_FK'
ALTER TABLE RA_COORD_CAPTURE ADD CONSTRAINT RA_CC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CC_R_ATY_FK'
ALTER TABLE RA_COORD_CAPTURE ADD CONSTRAINT RA_CC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CC_R_CC_FK'
ALTER TABLE RA_COORD_CAPTURE ADD CONSTRAINT RA_CC_R_CC_FK FOREIGN KEY
(
CAPTURE_METHOD
)
REFERENCES R_COORD_CAPTURE
(
CAPTURE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CC_R_LANG_FK'
ALTER TABLE RA_COORD_CAPTURE ADD CONSTRAINT RA_CC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CC_SRCD_FK'
ALTER TABLE RA_COORD_CAPTURE ADD CONSTRAINT RA_CC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CC1_BA_FK'
ALTER TABLE RA_COORD_COMPUTE ADD CONSTRAINT RA_CC1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CC1_PSWA_FK'
ALTER TABLE RA_COORD_COMPUTE ADD CONSTRAINT RA_CC1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CC1_R_ART_FK'
ALTER TABLE RA_COORD_COMPUTE ADD CONSTRAINT RA_CC1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CC1_R_ATY_FK'
ALTER TABLE RA_COORD_COMPUTE ADD CONSTRAINT RA_CC1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CC1_R_CC1_FK'
ALTER TABLE RA_COORD_COMPUTE ADD CONSTRAINT RA_CC1_R_CC1_FK FOREIGN KEY
(
COMPUTE_METHOD
)
REFERENCES R_COORD_COMPUTE
(
COMPUTE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CC1_R_LANG_FK'
ALTER TABLE RA_COORD_COMPUTE ADD CONSTRAINT RA_CC1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CC1_SRCD_FK'
ALTER TABLE RA_COORD_COMPUTE ADD CONSTRAINT RA_CC1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CQ_BA_FK'
ALTER TABLE RA_COORD_QUALITY ADD CONSTRAINT RA_CQ_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CQ_PSWA_FK'
ALTER TABLE RA_COORD_QUALITY ADD CONSTRAINT RA_CQ_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CQ_R_ART_FK'
ALTER TABLE RA_COORD_QUALITY ADD CONSTRAINT RA_CQ_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CQ_R_ATY_FK'
ALTER TABLE RA_COORD_QUALITY ADD CONSTRAINT RA_CQ_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CQ_R_CQ_FK'
ALTER TABLE RA_COORD_QUALITY ADD CONSTRAINT RA_CQ_R_CQ_FK FOREIGN KEY
(
COORDINATE_QUALITY
)
REFERENCES R_COORD_QUALITY
(
COORDINATE_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CQ_R_LANG_FK'
ALTER TABLE RA_COORD_QUALITY ADD CONSTRAINT RA_CQ_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CQ_SRCD_FK'
ALTER TABLE RA_COORD_QUALITY ADD CONSTRAINT RA_CQ_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST1_BA_FK'
ALTER TABLE RA_COORD_SYSTEM_TYPE ADD CONSTRAINT RA_CST1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST1_PSWA_FK'
ALTER TABLE RA_COORD_SYSTEM_TYPE ADD CONSTRAINT RA_CST1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST1_R_ART_FK'
ALTER TABLE RA_COORD_SYSTEM_TYPE ADD CONSTRAINT RA_CST1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST1_R_ATY_FK'
ALTER TABLE RA_COORD_SYSTEM_TYPE ADD CONSTRAINT RA_CST1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST1_R_CST1_FK'
ALTER TABLE RA_COORD_SYSTEM_TYPE ADD CONSTRAINT RA_CST1_R_CST1_FK FOREIGN KEY
(
COORDINATE_SYSTEM_TYPE
)
REFERENCES R_COORD_SYSTEM_TYPE
(
COORDINATE_SYSTEM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST1_R_LANG_FK'
ALTER TABLE RA_COORD_SYSTEM_TYPE ADD CONSTRAINT RA_CST1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST1_SRCD_FK'
ALTER TABLE RA_COORD_SYSTEM_TYPE ADD CONSTRAINT RA_CST1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CH_BA_FK'
ALTER TABLE RA_CORE_HANDLING ADD CONSTRAINT RA_CH_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CH_PSWA_FK'
ALTER TABLE RA_CORE_HANDLING ADD CONSTRAINT RA_CH_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CH_R_ART_FK'
ALTER TABLE RA_CORE_HANDLING ADD CONSTRAINT RA_CH_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CH_R_ATY_FK'
ALTER TABLE RA_CORE_HANDLING ADD CONSTRAINT RA_CH_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CH_R_CH_FK'
ALTER TABLE RA_CORE_HANDLING ADD CONSTRAINT RA_CH_R_CH_FK FOREIGN KEY
(
CORE_HANDLING
)
REFERENCES R_CORE_HANDLING
(
CORE_HANDLING
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CH_R_LANG_FK'
ALTER TABLE RA_CORE_HANDLING ADD CONSTRAINT RA_CH_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CH_SRCD_FK'
ALTER TABLE RA_CORE_HANDLING ADD CONSTRAINT RA_CH_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRT_BA_FK'
ALTER TABLE RA_CORE_RECOVERY_TYPE ADD CONSTRAINT RA_CRT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRT_PSWA_FK'
ALTER TABLE RA_CORE_RECOVERY_TYPE ADD CONSTRAINT RA_CRT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRT_R_ART_FK'
ALTER TABLE RA_CORE_RECOVERY_TYPE ADD CONSTRAINT RA_CRT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRT_R_ATY_FK'
ALTER TABLE RA_CORE_RECOVERY_TYPE ADD CONSTRAINT RA_CRT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRT_R_CRT_FK'
ALTER TABLE RA_CORE_RECOVERY_TYPE ADD CONSTRAINT RA_CRT_R_CRT_FK FOREIGN KEY
(
CORE_RECOVERY_TYPE
)
REFERENCES R_CORE_RECOVERY_TYPE
(
CORE_RECOVERY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRT_R_LANG_FK'
ALTER TABLE RA_CORE_RECOVERY_TYPE ADD CONSTRAINT RA_CRT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRT_SRCD_FK'
ALTER TABLE RA_CORE_RECOVERY_TYPE ADD CONSTRAINT RA_CRT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST2_BA_FK'
ALTER TABLE RA_CORE_SAMPLE_TYPE ADD CONSTRAINT RA_CST2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST2_PSWA_FK'
ALTER TABLE RA_CORE_SAMPLE_TYPE ADD CONSTRAINT RA_CST2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST2_R_ART_FK'
ALTER TABLE RA_CORE_SAMPLE_TYPE ADD CONSTRAINT RA_CST2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST2_R_ATY_FK'
ALTER TABLE RA_CORE_SAMPLE_TYPE ADD CONSTRAINT RA_CST2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST2_R_CST2_FK'
ALTER TABLE RA_CORE_SAMPLE_TYPE ADD CONSTRAINT RA_CST2_R_CST2_FK FOREIGN KEY
(
CORE_SAMPLE
)
REFERENCES R_CORE_SAMPLE_TYPE
(
CORE_SAMPLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST2_R_LANG_FK'
ALTER TABLE RA_CORE_SAMPLE_TYPE ADD CONSTRAINT RA_CST2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CST2_SRCD_FK'
ALTER TABLE RA_CORE_SAMPLE_TYPE ADD CONSTRAINT RA_CST2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSM_BA_FK'
ALTER TABLE RA_CORE_SHIFT_METHOD ADD CONSTRAINT RA_CSM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSM_PSWA_FK'
ALTER TABLE RA_CORE_SHIFT_METHOD ADD CONSTRAINT RA_CSM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSM_R_ART_FK'
ALTER TABLE RA_CORE_SHIFT_METHOD ADD CONSTRAINT RA_CSM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSM_R_ATY_FK'
ALTER TABLE RA_CORE_SHIFT_METHOD ADD CONSTRAINT RA_CSM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSM_R_CSM_FK'
ALTER TABLE RA_CORE_SHIFT_METHOD ADD CONSTRAINT RA_CSM_R_CSM_FK FOREIGN KEY
(
CORE_SHIFT_METHOD
)
REFERENCES R_CORE_SHIFT_METHOD
(
CORE_SHIFT_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSM_R_LANG_FK'
ALTER TABLE RA_CORE_SHIFT_METHOD ADD CONSTRAINT RA_CSM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSM_SRCD_FK'
ALTER TABLE RA_CORE_SHIFT_METHOD ADD CONSTRAINT RA_CSM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CS1_BA_FK'
ALTER TABLE RA_CORE_SOLVENT ADD CONSTRAINT RA_CS1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CS1_PSWA_FK'
ALTER TABLE RA_CORE_SOLVENT ADD CONSTRAINT RA_CS1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CS1_R_ART_FK'
ALTER TABLE RA_CORE_SOLVENT ADD CONSTRAINT RA_CS1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CS1_R_ATY_FK'
ALTER TABLE RA_CORE_SOLVENT ADD CONSTRAINT RA_CS1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CS1_R_CS1_FK'
ALTER TABLE RA_CORE_SOLVENT ADD CONSTRAINT RA_CS1_R_CS1_FK FOREIGN KEY
(
CORE_SOLVENT
)
REFERENCES R_CORE_SOLVENT
(
CORE_SOLVENT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CS1_R_LANG_FK'
ALTER TABLE RA_CORE_SOLVENT ADD CONSTRAINT RA_CS1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CS1_SRCD_FK'
ALTER TABLE RA_CORE_SOLVENT ADD CONSTRAINT RA_CS1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT5_BA_FK'
ALTER TABLE RA_CORE_TYPE ADD CONSTRAINT RA_CT5_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT5_PSWA_FK'
ALTER TABLE RA_CORE_TYPE ADD CONSTRAINT RA_CT5_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT5_R_ART_FK'
ALTER TABLE RA_CORE_TYPE ADD CONSTRAINT RA_CT5_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT5_R_ATY_FK'
ALTER TABLE RA_CORE_TYPE ADD CONSTRAINT RA_CT5_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT5_R_CT5_FK'
ALTER TABLE RA_CORE_TYPE ADD CONSTRAINT RA_CT5_R_CT5_FK FOREIGN KEY
(
CORE_TYPE
)
REFERENCES R_CORE_TYPE
(
CORE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT5_R_LANG_FK'
ALTER TABLE RA_CORE_TYPE ADD CONSTRAINT RA_CT5_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT5_SRCD_FK'
ALTER TABLE RA_CORE_TYPE ADD CONSTRAINT RA_CT5_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CM1_BA_FK'
ALTER TABLE RA_CORRECTION_METHOD ADD CONSTRAINT RA_CM1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CM1_PSWA_FK'
ALTER TABLE RA_CORRECTION_METHOD ADD CONSTRAINT RA_CM1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CM1_R_ART_FK'
ALTER TABLE RA_CORRECTION_METHOD ADD CONSTRAINT RA_CM1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CM1_R_ATY_FK'
ALTER TABLE RA_CORRECTION_METHOD ADD CONSTRAINT RA_CM1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CM1_R_CM1_FK'
ALTER TABLE RA_CORRECTION_METHOD ADD CONSTRAINT RA_CM1_R_CM1_FK FOREIGN KEY
(
CORRECTION_METHOD
)
REFERENCES R_CORRECTION_METHOD
(
CORRECTION_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CM1_R_LANG_FK'
ALTER TABLE RA_CORRECTION_METHOD ADD CONSTRAINT RA_CM1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CM1_SRCD_FK'
ALTER TABLE RA_CORRECTION_METHOD ADD CONSTRAINT RA_CM1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT1_BA_FK'
ALTER TABLE RA_COUPLING_TYPE ADD CONSTRAINT RA_CT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT1_PSWA_FK'
ALTER TABLE RA_COUPLING_TYPE ADD CONSTRAINT RA_CT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT1_R_ART_FK'
ALTER TABLE RA_COUPLING_TYPE ADD CONSTRAINT RA_CT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT1_R_ATY_FK'
ALTER TABLE RA_COUPLING_TYPE ADD CONSTRAINT RA_CT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT1_R_CT1_FK'
ALTER TABLE RA_COUPLING_TYPE ADD CONSTRAINT RA_CT1_R_CT1_FK FOREIGN KEY
(
COUPLING_TYPE
)
REFERENCES R_COUPLING_TYPE
(
COUPLING_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT1_R_LANG_FK'
ALTER TABLE RA_COUPLING_TYPE ADD CONSTRAINT RA_CT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT1_SRCD_FK'
ALTER TABLE RA_COUPLING_TYPE ADD CONSTRAINT RA_CT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRTY_BA_FK'
ALTER TABLE RA_CREATOR_TYPE ADD CONSTRAINT RA_CRTY_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRTY_PSWA_FK'
ALTER TABLE RA_CREATOR_TYPE ADD CONSTRAINT RA_CRTY_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRTY_R_ART_FK'
ALTER TABLE RA_CREATOR_TYPE ADD CONSTRAINT RA_CRTY_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRTY_R_ATY_FK'
ALTER TABLE RA_CREATOR_TYPE ADD CONSTRAINT RA_CRTY_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRTY_R_CRTY_FK'
ALTER TABLE RA_CREATOR_TYPE ADD CONSTRAINT RA_CRTY_R_CRTY_FK FOREIGN KEY
(
CREATOR_TYPE
)
REFERENCES R_CREATOR_TYPE
(
CREATOR_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRTY_R_LANG_FK'
ALTER TABLE RA_CREATOR_TYPE ADD CONSTRAINT RA_CRTY_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CRTY_SRCD_FK'
ALTER TABLE RA_CREATOR_TYPE ADD CONSTRAINT RA_CRTY_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSTP_BA_FK'
ALTER TABLE RA_CS_TRANSFORM_PARM ADD CONSTRAINT RA_CSTP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSTP_PSWA_FK'
ALTER TABLE RA_CS_TRANSFORM_PARM ADD CONSTRAINT RA_CSTP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSTP_R_ART_FK'
ALTER TABLE RA_CS_TRANSFORM_PARM ADD CONSTRAINT RA_CSTP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSTP_R_ATY_FK'
ALTER TABLE RA_CS_TRANSFORM_PARM ADD CONSTRAINT RA_CSTP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSTP_R_CSTP_FK'
ALTER TABLE RA_CS_TRANSFORM_PARM ADD CONSTRAINT RA_CSTP_R_CSTP_FK FOREIGN KEY
(
TRANSFORM_PARM
)
REFERENCES R_CS_TRANSFORM_PARM
(
TRANSFORM_PARM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSTP_R_LANG_FK'
ALTER TABLE RA_CS_TRANSFORM_PARM ADD CONSTRAINT RA_CSTP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CSTP_SRCD_FK'
ALTER TABLE RA_CS_TRANSFORM_PARM ADD CONSTRAINT RA_CSTP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CTT_BA_FK'
ALTER TABLE RA_CS_TRANSFORM_TYPE ADD CONSTRAINT RA_CTT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CTT_PSWA_FK'
ALTER TABLE RA_CS_TRANSFORM_TYPE ADD CONSTRAINT RA_CTT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CTT_R_ART_FK'
ALTER TABLE RA_CS_TRANSFORM_TYPE ADD CONSTRAINT RA_CTT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CTT_R_ATY_FK'
ALTER TABLE RA_CS_TRANSFORM_TYPE ADD CONSTRAINT RA_CTT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CTT_R_CTT_FK'
ALTER TABLE RA_CS_TRANSFORM_TYPE ADD CONSTRAINT RA_CTT_R_CTT_FK FOREIGN KEY
(
TRANSFORM_TYPE
)
REFERENCES R_CS_TRANSFORM_TYPE
(
TRANSFORM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CTT_R_LANG_FK'
ALTER TABLE RA_CS_TRANSFORM_TYPE ADD CONSTRAINT RA_CTT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CTT_SRCD_FK'
ALTER TABLE RA_CS_TRANSFORM_TYPE ADD CONSTRAINT RA_CTT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CS2_BA_FK'
ALTER TABLE RA_CURVE_SCALE ADD CONSTRAINT RA_CS2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CS2_PSWA_FK'
ALTER TABLE RA_CURVE_SCALE ADD CONSTRAINT RA_CS2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CS2_R_ART_FK'
ALTER TABLE RA_CURVE_SCALE ADD CONSTRAINT RA_CS2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CS2_R_ATY_FK'
ALTER TABLE RA_CURVE_SCALE ADD CONSTRAINT RA_CS2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CS2_R_CS2_FK'
ALTER TABLE RA_CURVE_SCALE ADD CONSTRAINT RA_CS2_R_CS2_FK FOREIGN KEY
(
CURVE_SCALE_TYPE
)
REFERENCES R_CURVE_SCALE
(
CURVE_SCALE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CS2_R_LANG_FK'
ALTER TABLE RA_CURVE_SCALE ADD CONSTRAINT RA_CS2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CS2_SRCD_FK'
ALTER TABLE RA_CURVE_SCALE ADD CONSTRAINT RA_CS2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT6_BA_FK'
ALTER TABLE RA_CURVE_TYPE ADD CONSTRAINT RA_CT6_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT6_PSWA_FK'
ALTER TABLE RA_CURVE_TYPE ADD CONSTRAINT RA_CT6_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT6_R_ART_FK'
ALTER TABLE RA_CURVE_TYPE ADD CONSTRAINT RA_CT6_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT6_R_ATY_FK'
ALTER TABLE RA_CURVE_TYPE ADD CONSTRAINT RA_CT6_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT6_R_CT6_FK'
ALTER TABLE RA_CURVE_TYPE ADD CONSTRAINT RA_CT6_R_CT6_FK FOREIGN KEY
(
CURVE_TYPE
)
REFERENCES R_CURVE_TYPE
(
CURVE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT6_R_LANG_FK'
ALTER TABLE RA_CURVE_TYPE ADD CONSTRAINT RA_CT6_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT6_SRCD_FK'
ALTER TABLE RA_CURVE_TYPE ADD CONSTRAINT RA_CT6_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CX_BA_FK'
ALTER TABLE RA_CURVE_XREF_TYPE ADD CONSTRAINT RA_CX_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CX_PSWA_FK'
ALTER TABLE RA_CURVE_XREF_TYPE ADD CONSTRAINT RA_CX_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CX_R_ART_FK'
ALTER TABLE RA_CURVE_XREF_TYPE ADD CONSTRAINT RA_CX_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CX_R_ATY_FK'
ALTER TABLE RA_CURVE_XREF_TYPE ADD CONSTRAINT RA_CX_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CX_R_CX_FK'
ALTER TABLE RA_CURVE_XREF_TYPE ADD CONSTRAINT RA_CX_R_CX_FK FOREIGN KEY
(
XREF_TYPE
)
REFERENCES R_CURVE_XREF_TYPE
(
XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CX_R_LANG_FK'
ALTER TABLE RA_CURVE_XREF_TYPE ADD CONSTRAINT RA_CX_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CX_SRCD_FK'
ALTER TABLE RA_CURVE_XREF_TYPE ADD CONSTRAINT RA_CX_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT7_BA_FK'
ALTER TABLE RA_CUSHION_TYPE ADD CONSTRAINT RA_CT7_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT7_PSWA_FK'
ALTER TABLE RA_CUSHION_TYPE ADD CONSTRAINT RA_CT7_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT7_R_ART_FK'
ALTER TABLE RA_CUSHION_TYPE ADD CONSTRAINT RA_CT7_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT7_R_ATY_FK'
ALTER TABLE RA_CUSHION_TYPE ADD CONSTRAINT RA_CT7_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT7_R_CT7_FK'
ALTER TABLE RA_CUSHION_TYPE ADD CONSTRAINT RA_CT7_R_CT7_FK FOREIGN KEY
(
CUSHION_TYPE
)
REFERENCES R_CUSHION_TYPE
(
CUSHION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT7_R_LANG_FK'
ALTER TABLE RA_CUSHION_TYPE ADD CONSTRAINT RA_CT7_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CT7_SRCD_FK'
ALTER TABLE RA_CUSHION_TYPE ADD CONSTRAINT RA_CT7_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CF_BA_FK'
ALTER TABLE RA_CUTTING_FLUID ADD CONSTRAINT RA_CF_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CF_PSWA_FK'
ALTER TABLE RA_CUTTING_FLUID ADD CONSTRAINT RA_CF_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CF_R_ART_FK'
ALTER TABLE RA_CUTTING_FLUID ADD CONSTRAINT RA_CF_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CF_R_ATY_FK'
ALTER TABLE RA_CUTTING_FLUID ADD CONSTRAINT RA_CF_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CF_R_CF_FK'
ALTER TABLE RA_CUTTING_FLUID ADD CONSTRAINT RA_CF_R_CF_FK FOREIGN KEY
(
CUTTING_FLUID
)
REFERENCES R_CUTTING_FLUID
(
CUTTING_FLUID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CF_R_LANG_FK'
ALTER TABLE RA_CUTTING_FLUID ADD CONSTRAINT RA_CF_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_CF_SRCD_FK'
ALTER TABLE RA_CUTTING_FLUID ADD CONSTRAINT RA_CF_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCP_BA_FK'
ALTER TABLE RA_DATA_CIRC_PROCESS ADD CONSTRAINT RA_DCP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCP_PSWA_FK'
ALTER TABLE RA_DATA_CIRC_PROCESS ADD CONSTRAINT RA_DCP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCP_R_ART_FK'
ALTER TABLE RA_DATA_CIRC_PROCESS ADD CONSTRAINT RA_DCP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCP_R_ATY_FK'
ALTER TABLE RA_DATA_CIRC_PROCESS ADD CONSTRAINT RA_DCP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCP_R_DCP_FK'
ALTER TABLE RA_DATA_CIRC_PROCESS ADD CONSTRAINT RA_DCP_R_DCP_FK FOREIGN KEY
(
DATA_CIRC_PROCESS
)
REFERENCES R_DATA_CIRC_PROCESS
(
DATA_CIRC_PROCESS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCP_R_LANG_FK'
ALTER TABLE RA_DATA_CIRC_PROCESS ADD CONSTRAINT RA_DCP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCP_SRCD_FK'
ALTER TABLE RA_DATA_CIRC_PROCESS ADD CONSTRAINT RA_DCP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCS_BA_FK'
ALTER TABLE RA_DATA_CIRC_STATUS ADD CONSTRAINT RA_DCS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCS_PSWA_FK'
ALTER TABLE RA_DATA_CIRC_STATUS ADD CONSTRAINT RA_DCS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCS_R_ART_FK'
ALTER TABLE RA_DATA_CIRC_STATUS ADD CONSTRAINT RA_DCS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCS_R_ATY_FK'
ALTER TABLE RA_DATA_CIRC_STATUS ADD CONSTRAINT RA_DCS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCS_R_DCS_FK'
ALTER TABLE RA_DATA_CIRC_STATUS ADD CONSTRAINT RA_DCS_R_DCS_FK FOREIGN KEY
(
DATA_CIRC_STATUS
)
REFERENCES R_DATA_CIRC_STATUS
(
DATA_CIRC_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCS_R_LANG_FK'
ALTER TABLE RA_DATA_CIRC_STATUS ADD CONSTRAINT RA_DCS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCS_SRCD_FK'
ALTER TABLE RA_DATA_CIRC_STATUS ADD CONSTRAINT RA_DCS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DST_BA_FK'
ALTER TABLE RA_DATA_STORE_TYPE ADD CONSTRAINT RA_DST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DST_PSWA_FK'
ALTER TABLE RA_DATA_STORE_TYPE ADD CONSTRAINT RA_DST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DST_R_ART_FK'
ALTER TABLE RA_DATA_STORE_TYPE ADD CONSTRAINT RA_DST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DST_R_ATY_FK'
ALTER TABLE RA_DATA_STORE_TYPE ADD CONSTRAINT RA_DST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DST_R_DST_FK'
ALTER TABLE RA_DATA_STORE_TYPE ADD CONSTRAINT RA_DST_R_DST_FK FOREIGN KEY
(
DATA_STORE_TYPE
)
REFERENCES R_DATA_STORE_TYPE
(
DATA_STORE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DST_R_LANG_FK'
ALTER TABLE RA_DATA_STORE_TYPE ADD CONSTRAINT RA_DST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DST_SRCD_FK'
ALTER TABLE RA_DATA_STORE_TYPE ADD CONSTRAINT RA_DST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DFT_BA_FK'
ALTER TABLE RA_DATE_FORMAT_TYPE ADD CONSTRAINT RA_DFT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DFT_PSWA_FK'
ALTER TABLE RA_DATE_FORMAT_TYPE ADD CONSTRAINT RA_DFT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DFT_R_ART_FK'
ALTER TABLE RA_DATE_FORMAT_TYPE ADD CONSTRAINT RA_DFT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DFT_R_ATY_FK'
ALTER TABLE RA_DATE_FORMAT_TYPE ADD CONSTRAINT RA_DFT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DFT_R_DFT_FK'
ALTER TABLE RA_DATE_FORMAT_TYPE ADD CONSTRAINT RA_DFT_R_DFT_FK FOREIGN KEY
(
DATA_STORE_TYPE
)
REFERENCES R_DATE_FORMAT_TYPE
(
DATA_STORE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DFT_R_LANG_FK'
ALTER TABLE RA_DATE_FORMAT_TYPE ADD CONSTRAINT RA_DFT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DFT_SRCD_FK'
ALTER TABLE RA_DATE_FORMAT_TYPE ADD CONSTRAINT RA_DFT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DO_BA_FK'
ALTER TABLE RA_DATUM_ORIGIN ADD CONSTRAINT RA_DO_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DO_PSWA_FK'
ALTER TABLE RA_DATUM_ORIGIN ADD CONSTRAINT RA_DO_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DO_R_ART_FK'
ALTER TABLE RA_DATUM_ORIGIN ADD CONSTRAINT RA_DO_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DO_R_ATY_FK'
ALTER TABLE RA_DATUM_ORIGIN ADD CONSTRAINT RA_DO_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DO_R_DO_FK'
ALTER TABLE RA_DATUM_ORIGIN ADD CONSTRAINT RA_DO_R_DO_FK FOREIGN KEY
(
DATUM_ORIGIN
)
REFERENCES R_DATUM_ORIGIN
(
DATUM_ORIGIN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DO_R_LANG_FK'
ALTER TABLE RA_DATUM_ORIGIN ADD CONSTRAINT RA_DO_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DO_SRCD_FK'
ALTER TABLE RA_DATUM_ORIGIN ADD CONSTRAINT RA_DO_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCC_BA_FK'
ALTER TABLE RA_DECLINE_COND_CODE ADD CONSTRAINT RA_DCC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCC_PSWA_FK'
ALTER TABLE RA_DECLINE_COND_CODE ADD CONSTRAINT RA_DCC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCC_R_ART_FK'
ALTER TABLE RA_DECLINE_COND_CODE ADD CONSTRAINT RA_DCC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCC_R_ATY_FK'
ALTER TABLE RA_DECLINE_COND_CODE ADD CONSTRAINT RA_DCC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCC_R_DCC_FK'
ALTER TABLE RA_DECLINE_COND_CODE ADD CONSTRAINT RA_DCC_R_DCC_FK FOREIGN KEY
(
CONDITION_TYPE,
CONDITION_CODE
)
REFERENCES R_DECLINE_COND_CODE
(
CONDITION_TYPE,
CONDITION_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCC_R_DCT1_FK'
ALTER TABLE RA_DECLINE_COND_CODE ADD CONSTRAINT RA_DCC_R_DCT1_FK FOREIGN KEY
(
CONDITION_TYPE
)
REFERENCES R_DECLINE_COND_TYPE
(
CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCC_R_LANG_FK'
ALTER TABLE RA_DECLINE_COND_CODE ADD CONSTRAINT RA_DCC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCC_SRCD_FK'
ALTER TABLE RA_DECLINE_COND_CODE ADD CONSTRAINT RA_DCC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCT1_BA_FK'
ALTER TABLE RA_DECLINE_COND_TYPE ADD CONSTRAINT RA_DCT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCT1_PSWA_FK'
ALTER TABLE RA_DECLINE_COND_TYPE ADD CONSTRAINT RA_DCT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCT1_R_ART_FK'
ALTER TABLE RA_DECLINE_COND_TYPE ADD CONSTRAINT RA_DCT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCT1_R_ATY_FK'
ALTER TABLE RA_DECLINE_COND_TYPE ADD CONSTRAINT RA_DCT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCT1_R_DCT1_FK'
ALTER TABLE RA_DECLINE_COND_TYPE ADD CONSTRAINT RA_DCT1_R_DCT1_FK FOREIGN KEY
(
CONDITION_TYPE
)
REFERENCES R_DECLINE_COND_TYPE
(
CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCT1_R_LANG_FK'
ALTER TABLE RA_DECLINE_COND_TYPE ADD CONSTRAINT RA_DCT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCT1_SRCD_FK'
ALTER TABLE RA_DECLINE_COND_TYPE ADD CONSTRAINT RA_DCT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCT_BA_FK'
ALTER TABLE RA_DECLINE_CURVE_TYPE ADD CONSTRAINT RA_DCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCT_PSWA_FK'
ALTER TABLE RA_DECLINE_CURVE_TYPE ADD CONSTRAINT RA_DCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCT_R_ART_FK'
ALTER TABLE RA_DECLINE_CURVE_TYPE ADD CONSTRAINT RA_DCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCT_R_ATY_FK'
ALTER TABLE RA_DECLINE_CURVE_TYPE ADD CONSTRAINT RA_DCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCT_R_DCT_FK'
ALTER TABLE RA_DECLINE_CURVE_TYPE ADD CONSTRAINT RA_DCT_R_DCT_FK FOREIGN KEY
(
DECLINE_CURVE_TYPE
)
REFERENCES R_DECLINE_CURVE_TYPE
(
DECLINE_CURVE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCT_R_LANG_FK'
ALTER TABLE RA_DECLINE_CURVE_TYPE ADD CONSTRAINT RA_DCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DCT_SRCD_FK'
ALTER TABLE RA_DECLINE_CURVE_TYPE ADD CONSTRAINT RA_DCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DT_BA_FK'
ALTER TABLE RA_DECLINE_TYPE ADD CONSTRAINT RA_DT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DT_PSWA_FK'
ALTER TABLE RA_DECLINE_TYPE ADD CONSTRAINT RA_DT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DT_R_ART_FK'
ALTER TABLE RA_DECLINE_TYPE ADD CONSTRAINT RA_DT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DT_R_ATY_FK'
ALTER TABLE RA_DECLINE_TYPE ADD CONSTRAINT RA_DT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DT_R_DT_FK'
ALTER TABLE RA_DECLINE_TYPE ADD CONSTRAINT RA_DT_R_DT_FK FOREIGN KEY
(
DECLINE_TYPE
)
REFERENCES R_DECLINE_TYPE
(
DECLINE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DT_R_LANG_FK'
ALTER TABLE RA_DECLINE_TYPE ADD CONSTRAINT RA_DT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DT_SRCD_FK'
ALTER TABLE RA_DECLINE_TYPE ADD CONSTRAINT RA_DT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DET_BA_FK'
ALTER TABLE RA_DECRYPT_TYPE ADD CONSTRAINT RA_DET_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DET_PSWA_FK'
ALTER TABLE RA_DECRYPT_TYPE ADD CONSTRAINT RA_DET_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DET_R_ART_FK'
ALTER TABLE RA_DECRYPT_TYPE ADD CONSTRAINT RA_DET_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DET_R_ATY_FK'
ALTER TABLE RA_DECRYPT_TYPE ADD CONSTRAINT RA_DET_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DET_R_DET_FK'
ALTER TABLE RA_DECRYPT_TYPE ADD CONSTRAINT RA_DET_R_DET_FK FOREIGN KEY
(
DECRYPTION_TYPE
)
REFERENCES R_DECRYPT_TYPE
(
DECRYPTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DET_R_LANG_FK'
ALTER TABLE RA_DECRYPT_TYPE ADD CONSTRAINT RA_DET_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DET_SRCD_FK'
ALTER TABLE RA_DECRYPT_TYPE ADD CONSTRAINT RA_DET_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DT1_BA_FK'
ALTER TABLE RA_DEDUCT_TYPE ADD CONSTRAINT RA_DT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DT1_PSWA_FK'
ALTER TABLE RA_DEDUCT_TYPE ADD CONSTRAINT RA_DT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DT1_R_ART_FK'
ALTER TABLE RA_DEDUCT_TYPE ADD CONSTRAINT RA_DT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DT1_R_ATY_FK'
ALTER TABLE RA_DEDUCT_TYPE ADD CONSTRAINT RA_DT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DT1_R_DT1_FK'
ALTER TABLE RA_DEDUCT_TYPE ADD CONSTRAINT RA_DT1_R_DT1_FK FOREIGN KEY
(
DEDUCT_TYPE
)
REFERENCES R_DEDUCT_TYPE
(
DEDUCT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DT1_R_LANG_FK'
ALTER TABLE RA_DEDUCT_TYPE ADD CONSTRAINT RA_DT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DT1_SRCD_FK'
ALTER TABLE RA_DEDUCT_TYPE ADD CONSTRAINT RA_DT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DF_BA_FK'
ALTER TABLE RA_DIGITAL_FORMAT ADD CONSTRAINT RA_DF_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DF_PSWA_FK'
ALTER TABLE RA_DIGITAL_FORMAT ADD CONSTRAINT RA_DF_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DF_R_ART_FK'
ALTER TABLE RA_DIGITAL_FORMAT ADD CONSTRAINT RA_DF_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DF_R_ATY_FK'
ALTER TABLE RA_DIGITAL_FORMAT ADD CONSTRAINT RA_DF_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DF_R_DF_FK'
ALTER TABLE RA_DIGITAL_FORMAT ADD CONSTRAINT RA_DF_R_DF_FK FOREIGN KEY
(
DIGITAL_FORMAT
)
REFERENCES R_DIGITAL_FORMAT
(
DIGITAL_FORMAT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DF_R_LANG_FK'
ALTER TABLE RA_DIGITAL_FORMAT ADD CONSTRAINT RA_DF_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DF_SRCD_FK'
ALTER TABLE RA_DIGITAL_FORMAT ADD CONSTRAINT RA_DF_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DO1_BA_FK'
ALTER TABLE RA_DIGITAL_OUTPUT ADD CONSTRAINT RA_DO1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DO1_PSWA_FK'
ALTER TABLE RA_DIGITAL_OUTPUT ADD CONSTRAINT RA_DO1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DO1_R_ART_FK'
ALTER TABLE RA_DIGITAL_OUTPUT ADD CONSTRAINT RA_DO1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DO1_R_ATY_FK'
ALTER TABLE RA_DIGITAL_OUTPUT ADD CONSTRAINT RA_DO1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DO1_R_DO1_FK'
ALTER TABLE RA_DIGITAL_OUTPUT ADD CONSTRAINT RA_DO1_R_DO1_FK FOREIGN KEY
(
DIGITAL_OUTPUT
)
REFERENCES R_DIGITAL_OUTPUT
(
DIGITAL_OUTPUT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DO1_R_LANG_FK'
ALTER TABLE RA_DIGITAL_OUTPUT ADD CONSTRAINT RA_DO1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DO1_SRCD_FK'
ALTER TABLE RA_DIGITAL_OUTPUT ADD CONSTRAINT RA_DO1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DIR_BA_FK'
ALTER TABLE RA_DIRECTION ADD CONSTRAINT RA_DIR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DIR_PSWA_FK'
ALTER TABLE RA_DIRECTION ADD CONSTRAINT RA_DIR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DIR_R_ART_FK'
ALTER TABLE RA_DIRECTION ADD CONSTRAINT RA_DIR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DIR_R_ATY_FK'
ALTER TABLE RA_DIRECTION ADD CONSTRAINT RA_DIR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DIR_R_DIR_FK'
ALTER TABLE RA_DIRECTION ADD CONSTRAINT RA_DIR_R_DIR_FK FOREIGN KEY
(
DIRECTION
)
REFERENCES R_DIRECTION
(
DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DIR_R_LANG_FK'
ALTER TABLE RA_DIRECTION ADD CONSTRAINT RA_DIR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DIR_SRCD_FK'
ALTER TABLE RA_DIRECTION ADD CONSTRAINT RA_DIR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSAR_BA_FK'
ALTER TABLE RA_DIR_SRVY_ACC_REASON ADD CONSTRAINT RA_DSAR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSAR_PSWA_FK'
ALTER TABLE RA_DIR_SRVY_ACC_REASON ADD CONSTRAINT RA_DSAR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSAR_R_ART_FK'
ALTER TABLE RA_DIR_SRVY_ACC_REASON ADD CONSTRAINT RA_DSAR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSAR_R_ATY_FK'
ALTER TABLE RA_DIR_SRVY_ACC_REASON ADD CONSTRAINT RA_DSAR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSAR_R_DSAR_FK'
ALTER TABLE RA_DIR_SRVY_ACC_REASON ADD CONSTRAINT RA_DSAR_R_DSAR_FK FOREIGN KEY
(
ACCURACY_PROBLEM_REASON
)
REFERENCES R_DIR_SRVY_ACC_REASON
(
ACCURACY_PROBLEM_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSAR_R_LANG_FK'
ALTER TABLE RA_DIR_SRVY_ACC_REASON ADD CONSTRAINT RA_DSAR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSAR_SRCD_FK'
ALTER TABLE RA_DIR_SRVY_ACC_REASON ADD CONSTRAINT RA_DSAR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSC_BA_FK'
ALTER TABLE RA_DIR_SRVY_CLASS ADD CONSTRAINT RA_DSC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSC_PSWA_FK'
ALTER TABLE RA_DIR_SRVY_CLASS ADD CONSTRAINT RA_DSC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSC_R_ART_FK'
ALTER TABLE RA_DIR_SRVY_CLASS ADD CONSTRAINT RA_DSC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSC_R_ATY_FK'
ALTER TABLE RA_DIR_SRVY_CLASS ADD CONSTRAINT RA_DSC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSC_R_DSC_FK'
ALTER TABLE RA_DIR_SRVY_CLASS ADD CONSTRAINT RA_DSC_R_DSC_FK FOREIGN KEY
(
DIR_SURVEY_CLASS
)
REFERENCES R_DIR_SRVY_CLASS
(
DIR_SURVEY_CLASS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSC_R_LANG_FK'
ALTER TABLE RA_DIR_SRVY_CLASS ADD CONSTRAINT RA_DSC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSC_SRCD_FK'
ALTER TABLE RA_DIR_SRVY_CLASS ADD CONSTRAINT RA_DSC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSC1_BA_FK'
ALTER TABLE RA_DIR_SRVY_COMPUTE ADD CONSTRAINT RA_DSC1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSC1_PSWA_FK'
ALTER TABLE RA_DIR_SRVY_COMPUTE ADD CONSTRAINT RA_DSC1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSC1_R_ART_FK'
ALTER TABLE RA_DIR_SRVY_COMPUTE ADD CONSTRAINT RA_DSC1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSC1_R_ATY_FK'
ALTER TABLE RA_DIR_SRVY_COMPUTE ADD CONSTRAINT RA_DSC1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSC1_R_DSC1_FK'
ALTER TABLE RA_DIR_SRVY_COMPUTE ADD CONSTRAINT RA_DSC1_R_DSC1_FK FOREIGN KEY
(
COMPUTE_METHOD
)
REFERENCES R_DIR_SRVY_COMPUTE
(
COMPUTE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSC1_R_LANG_FK'
ALTER TABLE RA_DIR_SRVY_COMPUTE ADD CONSTRAINT RA_DSC1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSC1_SRCD_FK'
ALTER TABLE RA_DIR_SRVY_COMPUTE ADD CONSTRAINT RA_DSC1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSCAT_BA_FK'
ALTER TABLE RA_DIR_SRVY_CORR_ANGLE_TYPE ADD CONSTRAINT RA_DSCAT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSCAT_PSWA_FK'
ALTER TABLE RA_DIR_SRVY_CORR_ANGLE_TYPE ADD CONSTRAINT RA_DSCAT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSCAT_R_ART_FK'
ALTER TABLE RA_DIR_SRVY_CORR_ANGLE_TYPE ADD CONSTRAINT RA_DSCAT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSCAT_R_ATY_FK'
ALTER TABLE RA_DIR_SRVY_CORR_ANGLE_TYPE ADD CONSTRAINT RA_DSCAT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSCAT_R_DSCAT_FK'
ALTER TABLE RA_DIR_SRVY_CORR_ANGLE_TYPE ADD CONSTRAINT RA_DSCAT_R_DSCAT_FK FOREIGN KEY
(
CORR_ANGLE_TYPE
)
REFERENCES R_DIR_SRVY_CORR_ANGLE_TYPE
(
CORR_ANGLE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSCAT_R_LANG_FK'
ALTER TABLE RA_DIR_SRVY_CORR_ANGLE_TYPE ADD CONSTRAINT RA_DSCAT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSCAT_SRCD_FK'
ALTER TABLE RA_DIR_SRVY_CORR_ANGLE_TYPE ADD CONSTRAINT RA_DSCAT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSPT_BA_FK'
ALTER TABLE RA_DIR_SRVY_POINT_TYPE ADD CONSTRAINT RA_DSPT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSPT_PSWA_FK'
ALTER TABLE RA_DIR_SRVY_POINT_TYPE ADD CONSTRAINT RA_DSPT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSPT_R_ART_FK'
ALTER TABLE RA_DIR_SRVY_POINT_TYPE ADD CONSTRAINT RA_DSPT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSPT_R_ATY_FK'
ALTER TABLE RA_DIR_SRVY_POINT_TYPE ADD CONSTRAINT RA_DSPT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSPT_R_DSPT_FK'
ALTER TABLE RA_DIR_SRVY_POINT_TYPE ADD CONSTRAINT RA_DSPT_R_DSPT_FK FOREIGN KEY
(
POINT_TYPE
)
REFERENCES R_DIR_SRVY_POINT_TYPE
(
POINT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSPT_R_LANG_FK'
ALTER TABLE RA_DIR_SRVY_POINT_TYPE ADD CONSTRAINT RA_DSPT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSPT_SRCD_FK'
ALTER TABLE RA_DIR_SRVY_POINT_TYPE ADD CONSTRAINT RA_DSPT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSPM_BA_FK'
ALTER TABLE RA_DIR_SRVY_PROCESS_METH ADD CONSTRAINT RA_DSPM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSPM_PSWA_FK'
ALTER TABLE RA_DIR_SRVY_PROCESS_METH ADD CONSTRAINT RA_DSPM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSPM_R_ART_FK'
ALTER TABLE RA_DIR_SRVY_PROCESS_METH ADD CONSTRAINT RA_DSPM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSPM_R_ATY_FK'
ALTER TABLE RA_DIR_SRVY_PROCESS_METH ADD CONSTRAINT RA_DSPM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSPM_R_DSPM_FK'
ALTER TABLE RA_DIR_SRVY_PROCESS_METH ADD CONSTRAINT RA_DSPM_R_DSPM_FK FOREIGN KEY
(
PROCESS_METHOD
)
REFERENCES R_DIR_SRVY_PROCESS_METH
(
PROCESS_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSPM_R_LANG_FK'
ALTER TABLE RA_DIR_SRVY_PROCESS_METH ADD CONSTRAINT RA_DSPM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSPM_SRCD_FK'
ALTER TABLE RA_DIR_SRVY_PROCESS_METH ADD CONSTRAINT RA_DSPM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSRU_BA_FK'
ALTER TABLE RA_DIR_SRVY_RAD_UNCERT ADD CONSTRAINT RA_DSRU_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSRU_PSWA_FK'
ALTER TABLE RA_DIR_SRVY_RAD_UNCERT ADD CONSTRAINT RA_DSRU_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSRU_R_ART_FK'
ALTER TABLE RA_DIR_SRVY_RAD_UNCERT ADD CONSTRAINT RA_DSRU_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSRU_R_ATY_FK'
ALTER TABLE RA_DIR_SRVY_RAD_UNCERT ADD CONSTRAINT RA_DSRU_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSRU_R_DSRU_FK'
ALTER TABLE RA_DIR_SRVY_RAD_UNCERT ADD CONSTRAINT RA_DSRU_R_DSRU_FK FOREIGN KEY
(
RAD_UNCERT_DIST_REASON
)
REFERENCES R_DIR_SRVY_RAD_UNCERT
(
RAD_UNCERT_DIST_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSRU_R_LANG_FK'
ALTER TABLE RA_DIR_SRVY_RAD_UNCERT ADD CONSTRAINT RA_DSRU_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSRU_SRCD_FK'
ALTER TABLE RA_DIR_SRVY_RAD_UNCERT ADD CONSTRAINT RA_DSRU_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSR_BA_FK'
ALTER TABLE RA_DIR_SRVY_RECORD ADD CONSTRAINT RA_DSR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSR_PSWA_FK'
ALTER TABLE RA_DIR_SRVY_RECORD ADD CONSTRAINT RA_DSR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSR_R_ART_FK'
ALTER TABLE RA_DIR_SRVY_RECORD ADD CONSTRAINT RA_DSR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSR_R_ATY_FK'
ALTER TABLE RA_DIR_SRVY_RECORD ADD CONSTRAINT RA_DSR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSR_R_DSR_FK'
ALTER TABLE RA_DIR_SRVY_RECORD ADD CONSTRAINT RA_DSR_R_DSR_FK FOREIGN KEY
(
RECORD_MODE
)
REFERENCES R_DIR_SRVY_RECORD
(
RECORD_MODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSR_R_LANG_FK'
ALTER TABLE RA_DIR_SRVY_RECORD ADD CONSTRAINT RA_DSR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSR_SRCD_FK'
ALTER TABLE RA_DIR_SRVY_RECORD ADD CONSTRAINT RA_DSR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSRT_BA_FK'
ALTER TABLE RA_DIR_SRVY_REPORT_TYPE ADD CONSTRAINT RA_DSRT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSRT_PSWA_FK'
ALTER TABLE RA_DIR_SRVY_REPORT_TYPE ADD CONSTRAINT RA_DSRT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSRT_R_ART_FK'
ALTER TABLE RA_DIR_SRVY_REPORT_TYPE ADD CONSTRAINT RA_DSRT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSRT_R_ATY_FK'
ALTER TABLE RA_DIR_SRVY_REPORT_TYPE ADD CONSTRAINT RA_DSRT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSRT_R_DSRT_FK'
ALTER TABLE RA_DIR_SRVY_REPORT_TYPE ADD CONSTRAINT RA_DSRT_R_DSRT_FK FOREIGN KEY
(
REPORT_TYPE
)
REFERENCES R_DIR_SRVY_REPORT_TYPE
(
REPORT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSRT_R_LANG_FK'
ALTER TABLE RA_DIR_SRVY_REPORT_TYPE ADD CONSTRAINT RA_DSRT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSRT_SRCD_FK'
ALTER TABLE RA_DIR_SRVY_REPORT_TYPE ADD CONSTRAINT RA_DSRT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DST1_BA_FK'
ALTER TABLE RA_DIR_SRVY_TYPE ADD CONSTRAINT RA_DST1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DST1_PSWA_FK'
ALTER TABLE RA_DIR_SRVY_TYPE ADD CONSTRAINT RA_DST1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DST1_R_ART_FK'
ALTER TABLE RA_DIR_SRVY_TYPE ADD CONSTRAINT RA_DST1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DST1_R_ATY_FK'
ALTER TABLE RA_DIR_SRVY_TYPE ADD CONSTRAINT RA_DST1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DST1_R_DST1_FK'
ALTER TABLE RA_DIR_SRVY_TYPE ADD CONSTRAINT RA_DST1_R_DST1_FK FOREIGN KEY
(
SURVEY_TYPE
)
REFERENCES R_DIR_SRVY_TYPE
(
SURVEY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DST1_R_LANG_FK'
ALTER TABLE RA_DIR_SRVY_TYPE ADD CONSTRAINT RA_DST1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DST1_SRCD_FK'
ALTER TABLE RA_DIR_SRVY_TYPE ADD CONSTRAINT RA_DST1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DRP_BA_FK'
ALTER TABLE RA_DIST_REF_PT ADD CONSTRAINT RA_DRP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DRP_PSWA_FK'
ALTER TABLE RA_DIST_REF_PT ADD CONSTRAINT RA_DRP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DRP_R_ART_FK'
ALTER TABLE RA_DIST_REF_PT ADD CONSTRAINT RA_DRP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DRP_R_ATY_FK'
ALTER TABLE RA_DIST_REF_PT ADD CONSTRAINT RA_DRP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DRP_R_DRP_FK'
ALTER TABLE RA_DIST_REF_PT ADD CONSTRAINT RA_DRP_R_DRP_FK FOREIGN KEY
(
DISTANCE_REF_POINT
)
REFERENCES R_DIST_REF_PT
(
DISTANCE_REF_POINT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DRP_R_LANG_FK'
ALTER TABLE RA_DIST_REF_PT ADD CONSTRAINT RA_DRP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DRP_SRCD_FK'
ALTER TABLE RA_DIST_REF_PT ADD CONSTRAINT RA_DRP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DOC_BA_FK'
ALTER TABLE RA_DOCUMENT_TYPE ADD CONSTRAINT RA_DOC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DOC_PSWA_FK'
ALTER TABLE RA_DOCUMENT_TYPE ADD CONSTRAINT RA_DOC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DOC_R_ART_FK'
ALTER TABLE RA_DOCUMENT_TYPE ADD CONSTRAINT RA_DOC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DOC_R_ATY_FK'
ALTER TABLE RA_DOCUMENT_TYPE ADD CONSTRAINT RA_DOC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DOC_R_DOC_FK'
ALTER TABLE RA_DOCUMENT_TYPE ADD CONSTRAINT RA_DOC_R_DOC_FK FOREIGN KEY
(
DOCUMENT_TYPE
)
REFERENCES R_DOCUMENT_TYPE
(
DOCUMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DOC_R_LANG_FK'
ALTER TABLE RA_DOCUMENT_TYPE ADD CONSTRAINT RA_DOC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DOC_SRCD_FK'
ALTER TABLE RA_DOCUMENT_TYPE ADD CONSTRAINT RA_DOC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DS_BA_FK'
ALTER TABLE RA_DOC_STATUS ADD CONSTRAINT RA_DS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DS_PSWA_FK'
ALTER TABLE RA_DOC_STATUS ADD CONSTRAINT RA_DS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DS_R_ART_FK'
ALTER TABLE RA_DOC_STATUS ADD CONSTRAINT RA_DS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DS_R_ATY_FK'
ALTER TABLE RA_DOC_STATUS ADD CONSTRAINT RA_DS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DS_R_DS_FK'
ALTER TABLE RA_DOC_STATUS ADD CONSTRAINT RA_DS_R_DS_FK FOREIGN KEY
(
DOCUMENT_STATUS
)
REFERENCES R_DOC_STATUS
(
DOCUMENT_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DS_R_LANG_FK'
ALTER TABLE RA_DOC_STATUS ADD CONSTRAINT RA_DS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DS_SRCD_FK'
ALTER TABLE RA_DOC_STATUS ADD CONSTRAINT RA_DS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DM_BA_FK'
ALTER TABLE RA_DRILLING_MEDIA ADD CONSTRAINT RA_DM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DM_PSWA_FK'
ALTER TABLE RA_DRILLING_MEDIA ADD CONSTRAINT RA_DM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DM_R_ART_FK'
ALTER TABLE RA_DRILLING_MEDIA ADD CONSTRAINT RA_DM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DM_R_ATY_FK'
ALTER TABLE RA_DRILLING_MEDIA ADD CONSTRAINT RA_DM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DM_R_DM_FK'
ALTER TABLE RA_DRILLING_MEDIA ADD CONSTRAINT RA_DM_R_DM_FK FOREIGN KEY
(
DRILLING_MEDIA
)
REFERENCES R_DRILLING_MEDIA
(
DRILLING_MEDIA
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DM_R_LANG_FK'
ALTER TABLE RA_DRILLING_MEDIA ADD CONSTRAINT RA_DM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DM_SRCD_FK'
ALTER TABLE RA_DRILLING_MEDIA ADD CONSTRAINT RA_DM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DAC_BA_FK'
ALTER TABLE RA_DRILL_ASSEMBLY_COMP ADD CONSTRAINT RA_DAC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DAC_PSWA_FK'
ALTER TABLE RA_DRILL_ASSEMBLY_COMP ADD CONSTRAINT RA_DAC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DAC_R_ART_FK'
ALTER TABLE RA_DRILL_ASSEMBLY_COMP ADD CONSTRAINT RA_DAC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DAC_R_ATY_FK'
ALTER TABLE RA_DRILL_ASSEMBLY_COMP ADD CONSTRAINT RA_DAC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DAC_R_DAC_FK'
ALTER TABLE RA_DRILL_ASSEMBLY_COMP ADD CONSTRAINT RA_DAC_R_DAC_FK FOREIGN KEY
(
COMPONENT_TYPE
)
REFERENCES R_DRILL_ASSEMBLY_COMP
(
COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DAC_R_LANG_FK'
ALTER TABLE RA_DRILL_ASSEMBLY_COMP ADD CONSTRAINT RA_DAC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DAC_SRCD_FK'
ALTER TABLE RA_DRILL_ASSEMBLY_COMP ADD CONSTRAINT RA_DAC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBC_BA_FK'
ALTER TABLE RA_DRILL_BIT_CONDITION ADD CONSTRAINT RA_DBC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBC_PSWA_FK'
ALTER TABLE RA_DRILL_BIT_CONDITION ADD CONSTRAINT RA_DBC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBC_R_ART_FK'
ALTER TABLE RA_DRILL_BIT_CONDITION ADD CONSTRAINT RA_DBC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBC_R_ATY_FK'
ALTER TABLE RA_DRILL_BIT_CONDITION ADD CONSTRAINT RA_DBC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBC_R_DBC_FK'
ALTER TABLE RA_DRILL_BIT_CONDITION ADD CONSTRAINT RA_DBC_R_DBC_FK FOREIGN KEY
(
DRILL_BIT_CONDITION
)
REFERENCES R_DRILL_BIT_CONDITION
(
DRILL_BIT_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBC_R_LANG_FK'
ALTER TABLE RA_DRILL_BIT_CONDITION ADD CONSTRAINT RA_DBC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBC_SRCD_FK'
ALTER TABLE RA_DRILL_BIT_CONDITION ADD CONSTRAINT RA_DBC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBDC_BA_FK'
ALTER TABLE RA_DRILL_BIT_DETAIL_CODE ADD CONSTRAINT RA_DBDC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBDC_PSWA_FK'
ALTER TABLE RA_DRILL_BIT_DETAIL_CODE ADD CONSTRAINT RA_DBDC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBDC_R_ART_FK'
ALTER TABLE RA_DRILL_BIT_DETAIL_CODE ADD CONSTRAINT RA_DBDC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBDC_R_ATY_FK'
ALTER TABLE RA_DRILL_BIT_DETAIL_CODE ADD CONSTRAINT RA_DBDC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBDC_R_DBDC_FK'
ALTER TABLE RA_DRILL_BIT_DETAIL_CODE ADD CONSTRAINT RA_DBDC_R_DBDC_FK FOREIGN KEY
(
BIT_DETAIL_TYPE,
BIT_DETAIL_CODE
)
REFERENCES R_DRILL_BIT_DETAIL_CODE
(
BIT_DETAIL_TYPE,
BIT_DETAIL_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBDC_R_DBD_FK'
ALTER TABLE RA_DRILL_BIT_DETAIL_CODE ADD CONSTRAINT RA_DBDC_R_DBD_FK FOREIGN KEY
(
BIT_DETAIL_TYPE
)
REFERENCES R_DRILL_BIT_DETAIL_TYPE
(
BIT_DETAIL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBDC_R_LANG_FK'
ALTER TABLE RA_DRILL_BIT_DETAIL_CODE ADD CONSTRAINT RA_DBDC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBDC_SRCD_FK'
ALTER TABLE RA_DRILL_BIT_DETAIL_CODE ADD CONSTRAINT RA_DBDC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBD_BA_FK'
ALTER TABLE RA_DRILL_BIT_DETAIL_TYPE ADD CONSTRAINT RA_DBD_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBD_PSWA_FK'
ALTER TABLE RA_DRILL_BIT_DETAIL_TYPE ADD CONSTRAINT RA_DBD_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBD_R_ART_FK'
ALTER TABLE RA_DRILL_BIT_DETAIL_TYPE ADD CONSTRAINT RA_DBD_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBD_R_ATY_FK'
ALTER TABLE RA_DRILL_BIT_DETAIL_TYPE ADD CONSTRAINT RA_DBD_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBD_R_DBD_FK'
ALTER TABLE RA_DRILL_BIT_DETAIL_TYPE ADD CONSTRAINT RA_DBD_R_DBD_FK FOREIGN KEY
(
BIT_DETAIL_TYPE
)
REFERENCES R_DRILL_BIT_DETAIL_TYPE
(
BIT_DETAIL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBD_R_LANG_FK'
ALTER TABLE RA_DRILL_BIT_DETAIL_TYPE ADD CONSTRAINT RA_DBD_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBD_SRCD_FK'
ALTER TABLE RA_DRILL_BIT_DETAIL_TYPE ADD CONSTRAINT RA_DBD_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBJT_BA_FK'
ALTER TABLE RA_DRILL_BIT_JET_TYPE ADD CONSTRAINT RA_DBJT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBJT_PSWA_FK'
ALTER TABLE RA_DRILL_BIT_JET_TYPE ADD CONSTRAINT RA_DBJT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBJT_R_ART_FK'
ALTER TABLE RA_DRILL_BIT_JET_TYPE ADD CONSTRAINT RA_DBJT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBJT_R_ATY_FK'
ALTER TABLE RA_DRILL_BIT_JET_TYPE ADD CONSTRAINT RA_DBJT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBJT_R_DBJT_FK'
ALTER TABLE RA_DRILL_BIT_JET_TYPE ADD CONSTRAINT RA_DBJT_R_DBJT_FK FOREIGN KEY
(
JET_TYPE
)
REFERENCES R_DRILL_BIT_JET_TYPE
(
JET_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBJT_R_LANG_FK'
ALTER TABLE RA_DRILL_BIT_JET_TYPE ADD CONSTRAINT RA_DBJT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBJT_SRCD_FK'
ALTER TABLE RA_DRILL_BIT_JET_TYPE ADD CONSTRAINT RA_DBJT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBT_BA_FK'
ALTER TABLE RA_DRILL_BIT_TYPE ADD CONSTRAINT RA_DBT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBT_PSWA_FK'
ALTER TABLE RA_DRILL_BIT_TYPE ADD CONSTRAINT RA_DBT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBT_R_ART_FK'
ALTER TABLE RA_DRILL_BIT_TYPE ADD CONSTRAINT RA_DBT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBT_R_ATY_FK'
ALTER TABLE RA_DRILL_BIT_TYPE ADD CONSTRAINT RA_DBT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBT_R_DBT_FK'
ALTER TABLE RA_DRILL_BIT_TYPE ADD CONSTRAINT RA_DBT_R_DBT_FK FOREIGN KEY
(
DRILL_BIT_TYPE
)
REFERENCES R_DRILL_BIT_TYPE
(
DRILL_BIT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBT_R_LANG_FK'
ALTER TABLE RA_DRILL_BIT_TYPE ADD CONSTRAINT RA_DBT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DBT_SRCD_FK'
ALTER TABLE RA_DRILL_BIT_TYPE ADD CONSTRAINT RA_DBT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DHP_BA_FK'
ALTER TABLE RA_DRILL_HOLE_POSITION ADD CONSTRAINT RA_DHP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DHP_PSWA_FK'
ALTER TABLE RA_DRILL_HOLE_POSITION ADD CONSTRAINT RA_DHP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DHP_R_ART_FK'
ALTER TABLE RA_DRILL_HOLE_POSITION ADD CONSTRAINT RA_DHP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DHP_R_ATY_FK'
ALTER TABLE RA_DRILL_HOLE_POSITION ADD CONSTRAINT RA_DHP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DHP_R_DHP_FK'
ALTER TABLE RA_DRILL_HOLE_POSITION ADD CONSTRAINT RA_DHP_R_DHP_FK FOREIGN KEY
(
DRILL_HOLE_POSITION
)
REFERENCES R_DRILL_HOLE_POSITION
(
DRILL_HOLE_POSITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DHP_R_LANG_FK'
ALTER TABLE RA_DRILL_HOLE_POSITION ADD CONSTRAINT RA_DHP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DHP_SRCD_FK'
ALTER TABLE RA_DRILL_HOLE_POSITION ADD CONSTRAINT RA_DHP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DRT_BA_FK'
ALTER TABLE RA_DRILL_REPORT_TIME ADD CONSTRAINT RA_DRT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DRT_PSWA_FK'
ALTER TABLE RA_DRILL_REPORT_TIME ADD CONSTRAINT RA_DRT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DRT_R_ART_FK'
ALTER TABLE RA_DRILL_REPORT_TIME ADD CONSTRAINT RA_DRT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DRT_R_ATY_FK'
ALTER TABLE RA_DRILL_REPORT_TIME ADD CONSTRAINT RA_DRT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DRT_R_DRT_FK'
ALTER TABLE RA_DRILL_REPORT_TIME ADD CONSTRAINT RA_DRT_R_DRT_FK FOREIGN KEY
(
REPORT_TIME_TYPE
)
REFERENCES R_DRILL_REPORT_TIME
(
REPORT_TIME_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DRT_R_LANG_FK'
ALTER TABLE RA_DRILL_REPORT_TIME ADD CONSTRAINT RA_DRT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DRT_SRCD_FK'
ALTER TABLE RA_DRILL_REPORT_TIME ADD CONSTRAINT RA_DRT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSTC_BA_FK'
ALTER TABLE RA_DRILL_STAT_CODE ADD CONSTRAINT RA_DSTC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSTC_PSWA_FK'
ALTER TABLE RA_DRILL_STAT_CODE ADD CONSTRAINT RA_DSTC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSTC_R_ART_FK'
ALTER TABLE RA_DRILL_STAT_CODE ADD CONSTRAINT RA_DSTC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSTC_R_ATY_FK'
ALTER TABLE RA_DRILL_STAT_CODE ADD CONSTRAINT RA_DSTC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSTC_R_DSTC_FK'
ALTER TABLE RA_DRILL_STAT_CODE ADD CONSTRAINT RA_DSTC_R_DSTC_FK FOREIGN KEY
(
STATISTIC_TYPE,
STATISTIC_CODE
)
REFERENCES R_DRILL_STAT_CODE
(
STATISTIC_TYPE,
STATISTIC_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSTC_R_DSTAT_FK'
ALTER TABLE RA_DRILL_STAT_CODE ADD CONSTRAINT RA_DSTC_R_DSTAT_FK FOREIGN KEY
(
STATISTIC_TYPE
)
REFERENCES R_DRILL_STAT_TYPE
(
STATISTIC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSTC_R_LANG_FK'
ALTER TABLE RA_DRILL_STAT_CODE ADD CONSTRAINT RA_DSTC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSTC_SRCD_FK'
ALTER TABLE RA_DRILL_STAT_CODE ADD CONSTRAINT RA_DSTC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSTAT_BA_FK'
ALTER TABLE RA_DRILL_STAT_TYPE ADD CONSTRAINT RA_DSTAT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSTAT_PSWA_FK'
ALTER TABLE RA_DRILL_STAT_TYPE ADD CONSTRAINT RA_DSTAT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSTAT_R_ART_FK'
ALTER TABLE RA_DRILL_STAT_TYPE ADD CONSTRAINT RA_DSTAT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSTAT_R_ATY_FK'
ALTER TABLE RA_DRILL_STAT_TYPE ADD CONSTRAINT RA_DSTAT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSTAT_R_DSTAT_FK'
ALTER TABLE RA_DRILL_STAT_TYPE ADD CONSTRAINT RA_DSTAT_R_DSTAT_FK FOREIGN KEY
(
STATISTIC_TYPE
)
REFERENCES R_DRILL_STAT_TYPE
(
STATISTIC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSTAT_R_LANG_FK'
ALTER TABLE RA_DRILL_STAT_TYPE ADD CONSTRAINT RA_DSTAT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DSTAT_SRCD_FK'
ALTER TABLE RA_DRILL_STAT_TYPE ADD CONSTRAINT RA_DSTAT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DTT_BA_FK'
ALTER TABLE RA_DRILL_TOOL_TYPE ADD CONSTRAINT RA_DTT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DTT_PSWA_FK'
ALTER TABLE RA_DRILL_TOOL_TYPE ADD CONSTRAINT RA_DTT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DTT_R_ART_FK'
ALTER TABLE RA_DRILL_TOOL_TYPE ADD CONSTRAINT RA_DTT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DTT_R_ATY_FK'
ALTER TABLE RA_DRILL_TOOL_TYPE ADD CONSTRAINT RA_DTT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DTT_R_DTT_FK'
ALTER TABLE RA_DRILL_TOOL_TYPE ADD CONSTRAINT RA_DTT_R_DTT_FK FOREIGN KEY
(
DRILL_TOOL_TYPE
)
REFERENCES R_DRILL_TOOL_TYPE
(
DRILL_TOOL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DTT_R_LANG_FK'
ALTER TABLE RA_DRILL_TOOL_TYPE ADD CONSTRAINT RA_DTT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_DTT_SRCD_FK'
ALTER TABLE RA_DRILL_TOOL_TYPE ADD CONSTRAINT RA_DTT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ES_BA_FK'
ALTER TABLE RA_ECONOMIC_SCENARIO ADD CONSTRAINT RA_ES_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ES_PSWA_FK'
ALTER TABLE RA_ECONOMIC_SCENARIO ADD CONSTRAINT RA_ES_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ES_R_ART_FK'
ALTER TABLE RA_ECONOMIC_SCENARIO ADD CONSTRAINT RA_ES_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ES_R_ATY_FK'
ALTER TABLE RA_ECONOMIC_SCENARIO ADD CONSTRAINT RA_ES_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ES_R_ES_FK'
ALTER TABLE RA_ECONOMIC_SCENARIO ADD CONSTRAINT RA_ES_R_ES_FK FOREIGN KEY
(
ECONOMIC_SCENARIO
)
REFERENCES R_ECONOMIC_SCENARIO
(
ECONOMIC_SCENARIO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ES_R_LANG_FK'
ALTER TABLE RA_ECONOMIC_SCENARIO ADD CONSTRAINT RA_ES_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ES_SRCD_FK'
ALTER TABLE RA_ECONOMIC_SCENARIO ADD CONSTRAINT RA_ES_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EST_BA_FK'
ALTER TABLE RA_ECONOMIC_SCHEDULE ADD CONSTRAINT RA_EST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EST_PSWA_FK'
ALTER TABLE RA_ECONOMIC_SCHEDULE ADD CONSTRAINT RA_EST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EST_R_ART_FK'
ALTER TABLE RA_ECONOMIC_SCHEDULE ADD CONSTRAINT RA_EST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EST_R_ATY_FK'
ALTER TABLE RA_ECONOMIC_SCHEDULE ADD CONSTRAINT RA_EST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EST_R_EST_FK'
ALTER TABLE RA_ECONOMIC_SCHEDULE ADD CONSTRAINT RA_EST_R_EST_FK FOREIGN KEY
(
ECONOMIC_SCHEDULE
)
REFERENCES R_ECONOMIC_SCHEDULE
(
ECONOMIC_SCHEDULE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EST_R_LANG_FK'
ALTER TABLE RA_ECONOMIC_SCHEDULE ADD CONSTRAINT RA_EST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EST_SRCD_FK'
ALTER TABLE RA_ECONOMIC_SCHEDULE ADD CONSTRAINT RA_EST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EZHL_BA_FK'
ALTER TABLE RA_ECOZONE_HIER_LEVEL ADD CONSTRAINT RA_EZHL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EZHL_PSWA_FK'
ALTER TABLE RA_ECOZONE_HIER_LEVEL ADD CONSTRAINT RA_EZHL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EZHL_R_ART_FK'
ALTER TABLE RA_ECOZONE_HIER_LEVEL ADD CONSTRAINT RA_EZHL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EZHL_R_ATY_FK'
ALTER TABLE RA_ECOZONE_HIER_LEVEL ADD CONSTRAINT RA_EZHL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EZHL_R_EZHL_FK'
ALTER TABLE RA_ECOZONE_HIER_LEVEL ADD CONSTRAINT RA_EZHL_R_EZHL_FK FOREIGN KEY
(
HIERARCHY_LEVEL
)
REFERENCES R_ECOZONE_HIER_LEVEL
(
HIERARCHY_LEVEL
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EZHL_R_LANG_FK'
ALTER TABLE RA_ECOZONE_HIER_LEVEL ADD CONSTRAINT RA_EZHL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EZHL_SRCD_FK'
ALTER TABLE RA_ECOZONE_HIER_LEVEL ADD CONSTRAINT RA_EZHL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EZT_BA_FK'
ALTER TABLE RA_ECOZONE_TYPE ADD CONSTRAINT RA_EZT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EZT_PSWA_FK'
ALTER TABLE RA_ECOZONE_TYPE ADD CONSTRAINT RA_EZT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EZT_R_ART_FK'
ALTER TABLE RA_ECOZONE_TYPE ADD CONSTRAINT RA_EZT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EZT_R_ATY_FK'
ALTER TABLE RA_ECOZONE_TYPE ADD CONSTRAINT RA_EZT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EZT_R_EZT_FK'
ALTER TABLE RA_ECOZONE_TYPE ADD CONSTRAINT RA_EZT_R_EZT_FK FOREIGN KEY
(
ECOZONE_TYPE
)
REFERENCES R_ECOZONE_TYPE
(
ECOZONE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EZT_R_LANG_FK'
ALTER TABLE RA_ECOZONE_TYPE ADD CONSTRAINT RA_EZT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EZT_SRCD_FK'
ALTER TABLE RA_ECOZONE_TYPE ADD CONSTRAINT RA_EZT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EZX_BA_FK'
ALTER TABLE RA_ECOZONE_XREF ADD CONSTRAINT RA_EZX_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EZX_PSWA_FK'
ALTER TABLE RA_ECOZONE_XREF ADD CONSTRAINT RA_EZX_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EZX_R_ART_FK'
ALTER TABLE RA_ECOZONE_XREF ADD CONSTRAINT RA_EZX_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EZX_R_ATY_FK'
ALTER TABLE RA_ECOZONE_XREF ADD CONSTRAINT RA_EZX_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EZX_R_EZX_FK'
ALTER TABLE RA_ECOZONE_XREF ADD CONSTRAINT RA_EZX_R_EZX_FK FOREIGN KEY
(
ECOZONE_XREF_TYPE
)
REFERENCES R_ECOZONE_XREF
(
ECOZONE_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EZX_R_LANG_FK'
ALTER TABLE RA_ECOZONE_XREF ADD CONSTRAINT RA_EZX_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EZX_SRCD_FK'
ALTER TABLE RA_ECOZONE_XREF ADD CONSTRAINT RA_EZX_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EP_BA_FK'
ALTER TABLE RA_EMPLOYEE_POSITION ADD CONSTRAINT RA_EP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EP_PSWA_FK'
ALTER TABLE RA_EMPLOYEE_POSITION ADD CONSTRAINT RA_EP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EP_R_ART_FK'
ALTER TABLE RA_EMPLOYEE_POSITION ADD CONSTRAINT RA_EP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EP_R_ATY_FK'
ALTER TABLE RA_EMPLOYEE_POSITION ADD CONSTRAINT RA_EP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EP_R_EP_FK'
ALTER TABLE RA_EMPLOYEE_POSITION ADD CONSTRAINT RA_EP_R_EP_FK FOREIGN KEY
(
EMPLOYEE_POSITION
)
REFERENCES R_EMPLOYEE_POSITION
(
EMPLOYEE_POSITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EP_R_LANG_FK'
ALTER TABLE RA_EMPLOYEE_POSITION ADD CONSTRAINT RA_EP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EP_SRCD_FK'
ALTER TABLE RA_EMPLOYEE_POSITION ADD CONSTRAINT RA_EP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ES1_BA_FK'
ALTER TABLE RA_EMPLOYEE_STATUS ADD CONSTRAINT RA_ES1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ES1_PSWA_FK'
ALTER TABLE RA_EMPLOYEE_STATUS ADD CONSTRAINT RA_ES1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ES1_R_ART_FK'
ALTER TABLE RA_EMPLOYEE_STATUS ADD CONSTRAINT RA_ES1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ES1_R_ATY_FK'
ALTER TABLE RA_EMPLOYEE_STATUS ADD CONSTRAINT RA_ES1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ES1_R_ES1_FK'
ALTER TABLE RA_EMPLOYEE_STATUS ADD CONSTRAINT RA_ES1_R_ES1_FK FOREIGN KEY
(
EMPLOYEE_STATUS
)
REFERENCES R_EMPLOYEE_STATUS
(
EMPLOYEE_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ES1_R_LANG_FK'
ALTER TABLE RA_EMPLOYEE_STATUS ADD CONSTRAINT RA_ES1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ES1_SRCD_FK'
ALTER TABLE RA_EMPLOYEE_STATUS ADD CONSTRAINT RA_ES1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ET_BA_FK'
ALTER TABLE RA_ENCODING_TYPE ADD CONSTRAINT RA_ET_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ET_PSWA_FK'
ALTER TABLE RA_ENCODING_TYPE ADD CONSTRAINT RA_ET_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ET_R_ART_FK'
ALTER TABLE RA_ENCODING_TYPE ADD CONSTRAINT RA_ET_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ET_R_ATY_FK'
ALTER TABLE RA_ENCODING_TYPE ADD CONSTRAINT RA_ET_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ET_R_ET_FK'
ALTER TABLE RA_ENCODING_TYPE ADD CONSTRAINT RA_ET_R_ET_FK FOREIGN KEY
(
ENCODING_TYPE
)
REFERENCES R_ENCODING_TYPE
(
ENCODING_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ET_R_LANG_FK'
ALTER TABLE RA_ENCODING_TYPE ADD CONSTRAINT RA_ET_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ET_SRCD_FK'
ALTER TABLE RA_ENCODING_TYPE ADD CONSTRAINT RA_ET_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ERT_BA_FK'
ALTER TABLE RA_ENHANCED_REC_TYPE ADD CONSTRAINT RA_ERT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ERT_PSWA_FK'
ALTER TABLE RA_ENHANCED_REC_TYPE ADD CONSTRAINT RA_ERT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ERT_R_ART_FK'
ALTER TABLE RA_ENHANCED_REC_TYPE ADD CONSTRAINT RA_ERT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ERT_R_ATY_FK'
ALTER TABLE RA_ENHANCED_REC_TYPE ADD CONSTRAINT RA_ERT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ERT_R_ERT_FK'
ALTER TABLE RA_ENHANCED_REC_TYPE ADD CONSTRAINT RA_ERT_R_ERT_FK FOREIGN KEY
(
ENHANCED_RECOVERY_TYPE
)
REFERENCES R_ENHANCED_REC_TYPE
(
ENHANCED_RECOVERY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ERT_R_LANG_FK'
ALTER TABLE RA_ENHANCED_REC_TYPE ADD CONSTRAINT RA_ERT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ERT_SRCD_FK'
ALTER TABLE RA_ENHANCED_REC_TYPE ADD CONSTRAINT RA_ERT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EAT_BA_FK'
ALTER TABLE RA_ENT_ACCESS_TYPE ADD CONSTRAINT RA_EAT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EAT_PSWA_FK'
ALTER TABLE RA_ENT_ACCESS_TYPE ADD CONSTRAINT RA_EAT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EAT_R_ART_FK'
ALTER TABLE RA_ENT_ACCESS_TYPE ADD CONSTRAINT RA_EAT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EAT_R_ATY_FK'
ALTER TABLE RA_ENT_ACCESS_TYPE ADD CONSTRAINT RA_EAT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EAT_R_EAT_FK'
ALTER TABLE RA_ENT_ACCESS_TYPE ADD CONSTRAINT RA_EAT_R_EAT_FK FOREIGN KEY
(
ACCESS_TYPE
)
REFERENCES R_ENT_ACCESS_TYPE
(
ACCESS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EAT_R_LANG_FK'
ALTER TABLE RA_ENT_ACCESS_TYPE ADD CONSTRAINT RA_EAT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EAT_SRCD_FK'
ALTER TABLE RA_ENT_ACCESS_TYPE ADD CONSTRAINT RA_EAT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ECT_BA_FK'
ALTER TABLE RA_ENT_COMPONENT_TYPE ADD CONSTRAINT RA_ECT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ECT_PSWA_FK'
ALTER TABLE RA_ENT_COMPONENT_TYPE ADD CONSTRAINT RA_ECT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ECT_R_ART_FK'
ALTER TABLE RA_ENT_COMPONENT_TYPE ADD CONSTRAINT RA_ECT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ECT_R_ATY_FK'
ALTER TABLE RA_ENT_COMPONENT_TYPE ADD CONSTRAINT RA_ECT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ECT_R_ECT_FK'
ALTER TABLE RA_ENT_COMPONENT_TYPE ADD CONSTRAINT RA_ECT_R_ECT_FK FOREIGN KEY
(
ENT_COMP_TYPE
)
REFERENCES R_ENT_COMPONENT_TYPE
(
ENT_COMP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ECT_R_LANG_FK'
ALTER TABLE RA_ENT_COMPONENT_TYPE ADD CONSTRAINT RA_ECT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ECT_SRCD_FK'
ALTER TABLE RA_ENT_COMPONENT_TYPE ADD CONSTRAINT RA_ECT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EEA_BA_FK'
ALTER TABLE RA_ENT_EXPIRY_ACTION ADD CONSTRAINT RA_EEA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EEA_PSWA_FK'
ALTER TABLE RA_ENT_EXPIRY_ACTION ADD CONSTRAINT RA_EEA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EEA_R_ART_FK'
ALTER TABLE RA_ENT_EXPIRY_ACTION ADD CONSTRAINT RA_EEA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EEA_R_ATY_FK'
ALTER TABLE RA_ENT_EXPIRY_ACTION ADD CONSTRAINT RA_EEA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EEA_R_EEA_FK'
ALTER TABLE RA_ENT_EXPIRY_ACTION ADD CONSTRAINT RA_EEA_R_EEA_FK FOREIGN KEY
(
EXPIRY_ACTION
)
REFERENCES R_ENT_EXPIRY_ACTION
(
EXPIRY_ACTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EEA_R_LANG_FK'
ALTER TABLE RA_ENT_EXPIRY_ACTION ADD CONSTRAINT RA_EEA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EEA_SRCD_FK'
ALTER TABLE RA_ENT_EXPIRY_ACTION ADD CONSTRAINT RA_EEA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESGT_BA_FK'
ALTER TABLE RA_ENT_SEC_GROUP_TYPE ADD CONSTRAINT RA_ESGT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESGT_PSWA_FK'
ALTER TABLE RA_ENT_SEC_GROUP_TYPE ADD CONSTRAINT RA_ESGT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESGT_R_ART_FK'
ALTER TABLE RA_ENT_SEC_GROUP_TYPE ADD CONSTRAINT RA_ESGT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESGT_R_ATY_FK'
ALTER TABLE RA_ENT_SEC_GROUP_TYPE ADD CONSTRAINT RA_ESGT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESGT_R_ESGT_FK'
ALTER TABLE RA_ENT_SEC_GROUP_TYPE ADD CONSTRAINT RA_ESGT_R_ESGT_FK FOREIGN KEY
(
GROUP_TYPE
)
REFERENCES R_ENT_SEC_GROUP_TYPE
(
GROUP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESGT_R_LANG_FK'
ALTER TABLE RA_ENT_SEC_GROUP_TYPE ADD CONSTRAINT RA_ESGT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESGT_SRCD_FK'
ALTER TABLE RA_ENT_SEC_GROUP_TYPE ADD CONSTRAINT RA_ESGT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESGXT_BA_FK'
ALTER TABLE RA_ENT_SEC_GROUP_XREF ADD CONSTRAINT RA_ESGXT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESGXT_PSWA_FK'
ALTER TABLE RA_ENT_SEC_GROUP_XREF ADD CONSTRAINT RA_ESGXT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESGXT_R_ART_FK'
ALTER TABLE RA_ENT_SEC_GROUP_XREF ADD CONSTRAINT RA_ESGXT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESGXT_R_ATY_FK'
ALTER TABLE RA_ENT_SEC_GROUP_XREF ADD CONSTRAINT RA_ESGXT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESGXT_R_ESGXT_FK'
ALTER TABLE RA_ENT_SEC_GROUP_XREF ADD CONSTRAINT RA_ESGXT_R_ESGXT_FK FOREIGN KEY
(
XREF_TYPE
)
REFERENCES R_ENT_SEC_GROUP_XREF
(
XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESGXT_R_LANG_FK'
ALTER TABLE RA_ENT_SEC_GROUP_XREF ADD CONSTRAINT RA_ESGXT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESGXT_SRCD_FK'
ALTER TABLE RA_ENT_SEC_GROUP_XREF ADD CONSTRAINT RA_ESGXT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ENT_BA_FK'
ALTER TABLE RA_ENT_TYPE ADD CONSTRAINT RA_ENT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ENT_PSWA_FK'
ALTER TABLE RA_ENT_TYPE ADD CONSTRAINT RA_ENT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ENT_R_ART_FK'
ALTER TABLE RA_ENT_TYPE ADD CONSTRAINT RA_ENT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ENT_R_ATY_FK'
ALTER TABLE RA_ENT_TYPE ADD CONSTRAINT RA_ENT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ENT_R_ENT_FK'
ALTER TABLE RA_ENT_TYPE ADD CONSTRAINT RA_ENT_R_ENT_FK FOREIGN KEY
(
ENTITLEMENT_TYPE
)
REFERENCES R_ENT_TYPE
(
ENTITLEMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ENT_R_LANG_FK'
ALTER TABLE RA_ENT_TYPE ADD CONSTRAINT RA_ENT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ENT_SRCD_FK'
ALTER TABLE RA_ENT_TYPE ADD CONSTRAINT RA_ENT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_E_BA_FK'
ALTER TABLE RA_ENVIRONMENT ADD CONSTRAINT RA_E_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_E_PSWA_FK'
ALTER TABLE RA_ENVIRONMENT ADD CONSTRAINT RA_E_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_E_R_ART_FK'
ALTER TABLE RA_ENVIRONMENT ADD CONSTRAINT RA_E_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_E_R_ATY_FK'
ALTER TABLE RA_ENVIRONMENT ADD CONSTRAINT RA_E_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_E_R_E_FK'
ALTER TABLE RA_ENVIRONMENT ADD CONSTRAINT RA_E_R_E_FK FOREIGN KEY
(
ENVIRONMENT_TYPE
)
REFERENCES R_ENVIRONMENT
(
ENVIRONMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_E_R_LANG_FK'
ALTER TABLE RA_ENVIRONMENT ADD CONSTRAINT RA_E_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_E_SRCD_FK'
ALTER TABLE RA_ENVIRONMENT ADD CONSTRAINT RA_E_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EBART_BA_FK'
ALTER TABLE RA_EQUIP_BA_ROLE_TYPE ADD CONSTRAINT RA_EBART_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EBART_PSWA_FK'
ALTER TABLE RA_EQUIP_BA_ROLE_TYPE ADD CONSTRAINT RA_EBART_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EBART_R_ART_FK'
ALTER TABLE RA_EQUIP_BA_ROLE_TYPE ADD CONSTRAINT RA_EBART_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EBART_R_ATY_FK'
ALTER TABLE RA_EQUIP_BA_ROLE_TYPE ADD CONSTRAINT RA_EBART_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EBART_R_EBART_FK'
ALTER TABLE RA_EQUIP_BA_ROLE_TYPE ADD CONSTRAINT RA_EBART_R_EBART_FK FOREIGN KEY
(
ROLE_TYPE
)
REFERENCES R_EQUIP_BA_ROLE_TYPE
(
ROLE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EBART_R_LANG_FK'
ALTER TABLE RA_EQUIP_BA_ROLE_TYPE ADD CONSTRAINT RA_EBART_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EBART_SRCD_FK'
ALTER TABLE RA_EQUIP_BA_ROLE_TYPE ADD CONSTRAINT RA_EBART_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EQCT_BA_FK'
ALTER TABLE RA_EQUIP_COMPONENT_TYPE ADD CONSTRAINT RA_EQCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EQCT_PSWA_FK'
ALTER TABLE RA_EQUIP_COMPONENT_TYPE ADD CONSTRAINT RA_EQCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EQCT_R_ART_FK'
ALTER TABLE RA_EQUIP_COMPONENT_TYPE ADD CONSTRAINT RA_EQCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EQCT_R_ATY_FK'
ALTER TABLE RA_EQUIP_COMPONENT_TYPE ADD CONSTRAINT RA_EQCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EQCT_R_EQCT_FK'
ALTER TABLE RA_EQUIP_COMPONENT_TYPE ADD CONSTRAINT RA_EQCT_R_EQCT_FK FOREIGN KEY
(
EQUIPMENT_COMPONENT_TYPE
)
REFERENCES R_EQUIP_COMPONENT_TYPE
(
EQUIPMENT_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EQCT_R_LANG_FK'
ALTER TABLE RA_EQUIP_COMPONENT_TYPE ADD CONSTRAINT RA_EQCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EQCT_SRCD_FK'
ALTER TABLE RA_EQUIP_COMPONENT_TYPE ADD CONSTRAINT RA_EQCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EIL_BA_FK'
ALTER TABLE RA_EQUIP_INSTALL_LOC ADD CONSTRAINT RA_EIL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EIL_PSWA_FK'
ALTER TABLE RA_EQUIP_INSTALL_LOC ADD CONSTRAINT RA_EIL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EIL_R_ART_FK'
ALTER TABLE RA_EQUIP_INSTALL_LOC ADD CONSTRAINT RA_EIL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EIL_R_ATY_FK'
ALTER TABLE RA_EQUIP_INSTALL_LOC ADD CONSTRAINT RA_EIL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EIL_R_EIL_FK'
ALTER TABLE RA_EQUIP_INSTALL_LOC ADD CONSTRAINT RA_EIL_R_EIL_FK FOREIGN KEY
(
INSTALL_LOC_TYPE
)
REFERENCES R_EQUIP_INSTALL_LOC
(
INSTALL_LOC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EIL_R_LANG_FK'
ALTER TABLE RA_EQUIP_INSTALL_LOC ADD CONSTRAINT RA_EIL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EIL_SRCD_FK'
ALTER TABLE RA_EQUIP_INSTALL_LOC ADD CONSTRAINT RA_EIL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EML_BA_FK'
ALTER TABLE RA_EQUIP_MAINT_LOC ADD CONSTRAINT RA_EML_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EML_PSWA_FK'
ALTER TABLE RA_EQUIP_MAINT_LOC ADD CONSTRAINT RA_EML_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EML_R_ART_FK'
ALTER TABLE RA_EQUIP_MAINT_LOC ADD CONSTRAINT RA_EML_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EML_R_ATY_FK'
ALTER TABLE RA_EQUIP_MAINT_LOC ADD CONSTRAINT RA_EML_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EML_R_EML_FK'
ALTER TABLE RA_EQUIP_MAINT_LOC ADD CONSTRAINT RA_EML_R_EML_FK FOREIGN KEY
(
MAINT_LOCATION_TYPE
)
REFERENCES R_EQUIP_MAINT_LOC
(
MAINT_LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EML_R_LANG_FK'
ALTER TABLE RA_EQUIP_MAINT_LOC ADD CONSTRAINT RA_EML_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EML_SRCD_FK'
ALTER TABLE RA_EQUIP_MAINT_LOC ADD CONSTRAINT RA_EML_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EMR_BA_FK'
ALTER TABLE RA_EQUIP_MAINT_REASON ADD CONSTRAINT RA_EMR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EMR_PSWA_FK'
ALTER TABLE RA_EQUIP_MAINT_REASON ADD CONSTRAINT RA_EMR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EMR_R_ART_FK'
ALTER TABLE RA_EQUIP_MAINT_REASON ADD CONSTRAINT RA_EMR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EMR_R_ATY_FK'
ALTER TABLE RA_EQUIP_MAINT_REASON ADD CONSTRAINT RA_EMR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EMR_R_EMR_FK'
ALTER TABLE RA_EQUIP_MAINT_REASON ADD CONSTRAINT RA_EMR_R_EMR_FK FOREIGN KEY
(
MAINT_REASON
)
REFERENCES R_EQUIP_MAINT_REASON
(
MAINT_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EMR_R_LANG_FK'
ALTER TABLE RA_EQUIP_MAINT_REASON ADD CONSTRAINT RA_EMR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EMR_SRCD_FK'
ALTER TABLE RA_EQUIP_MAINT_REASON ADD CONSTRAINT RA_EMR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EQMS_BA_FK'
ALTER TABLE RA_EQUIP_MAINT_STATUS ADD CONSTRAINT RA_EQMS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EQMS_PSWA_FK'
ALTER TABLE RA_EQUIP_MAINT_STATUS ADD CONSTRAINT RA_EQMS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EQMS_R_ART_FK'
ALTER TABLE RA_EQUIP_MAINT_STATUS ADD CONSTRAINT RA_EQMS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EQMS_R_ATY_FK'
ALTER TABLE RA_EQUIP_MAINT_STATUS ADD CONSTRAINT RA_EQMS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EQMS_R_EQMS_FK'
ALTER TABLE RA_EQUIP_MAINT_STATUS ADD CONSTRAINT RA_EQMS_R_EQMS_FK FOREIGN KEY
(
MAINTAIN_STATUS_TYPE,
MAINTAIN_STATUS
)
REFERENCES R_EQUIP_MAINT_STATUS
(
MAINTAIN_STATUS_TYPE,
MAINTAIN_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EQMS_R_EQST_FK'
ALTER TABLE RA_EQUIP_MAINT_STATUS ADD CONSTRAINT RA_EQMS_R_EQST_FK FOREIGN KEY
(
MAINTAIN_STATUS_TYPE
)
REFERENCES R_EQUIP_MAINT_STAT_TYPE
(
MAINTAIN_STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EQMS_R_LANG_FK'
ALTER TABLE RA_EQUIP_MAINT_STATUS ADD CONSTRAINT RA_EQMS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EQMS_SRCD_FK'
ALTER TABLE RA_EQUIP_MAINT_STATUS ADD CONSTRAINT RA_EQMS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EQST_BA_FK'
ALTER TABLE RA_EQUIP_MAINT_STAT_TYPE ADD CONSTRAINT RA_EQST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EQST_PSWA_FK'
ALTER TABLE RA_EQUIP_MAINT_STAT_TYPE ADD CONSTRAINT RA_EQST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EQST_R_ART_FK'
ALTER TABLE RA_EQUIP_MAINT_STAT_TYPE ADD CONSTRAINT RA_EQST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EQST_R_ATY_FK'
ALTER TABLE RA_EQUIP_MAINT_STAT_TYPE ADD CONSTRAINT RA_EQST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EQST_R_EQST_FK'
ALTER TABLE RA_EQUIP_MAINT_STAT_TYPE ADD CONSTRAINT RA_EQST_R_EQST_FK FOREIGN KEY
(
MAINTAIN_STATUS_TYPE
)
REFERENCES R_EQUIP_MAINT_STAT_TYPE
(
MAINTAIN_STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EQST_R_LANG_FK'
ALTER TABLE RA_EQUIP_MAINT_STAT_TYPE ADD CONSTRAINT RA_EQST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EQST_SRCD_FK'
ALTER TABLE RA_EQUIP_MAINT_STAT_TYPE ADD CONSTRAINT RA_EQST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ERR_BA_FK'
ALTER TABLE RA_EQUIP_REMOVE_REASON ADD CONSTRAINT RA_ERR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ERR_PSWA_FK'
ALTER TABLE RA_EQUIP_REMOVE_REASON ADD CONSTRAINT RA_ERR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ERR_R_ART_FK'
ALTER TABLE RA_EQUIP_REMOVE_REASON ADD CONSTRAINT RA_ERR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ERR_R_ATY_FK'
ALTER TABLE RA_EQUIP_REMOVE_REASON ADD CONSTRAINT RA_ERR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ERR_R_ERR_FK'
ALTER TABLE RA_EQUIP_REMOVE_REASON ADD CONSTRAINT RA_ERR_R_ERR_FK FOREIGN KEY
(
REMOVE_REASON
)
REFERENCES R_EQUIP_REMOVE_REASON
(
REMOVE_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ERR_R_LANG_FK'
ALTER TABLE RA_EQUIP_REMOVE_REASON ADD CONSTRAINT RA_ERR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ERR_SRCD_FK'
ALTER TABLE RA_EQUIP_REMOVE_REASON ADD CONSTRAINT RA_ERR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESP_BA_FK'
ALTER TABLE RA_EQUIP_SPEC ADD CONSTRAINT RA_ESP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESP_PSWA_FK'
ALTER TABLE RA_EQUIP_SPEC ADD CONSTRAINT RA_ESP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESP_R_ART_FK'
ALTER TABLE RA_EQUIP_SPEC ADD CONSTRAINT RA_ESP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESP_R_ATY_FK'
ALTER TABLE RA_EQUIP_SPEC ADD CONSTRAINT RA_ESP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESP_R_ESP_FK'
ALTER TABLE RA_EQUIP_SPEC ADD CONSTRAINT RA_ESP_R_ESP_FK FOREIGN KEY
(
SPEC_TYPE
)
REFERENCES R_EQUIP_SPEC
(
SPEC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESP_R_LANG_FK'
ALTER TABLE RA_EQUIP_SPEC ADD CONSTRAINT RA_ESP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESP_SRCD_FK'
ALTER TABLE RA_EQUIP_SPEC ADD CONSTRAINT RA_ESP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESRT_BA_FK'
ALTER TABLE RA_EQUIP_SPEC_REF_TYPE ADD CONSTRAINT RA_ESRT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESRT_PSWA_FK'
ALTER TABLE RA_EQUIP_SPEC_REF_TYPE ADD CONSTRAINT RA_ESRT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESRT_R_ART_FK'
ALTER TABLE RA_EQUIP_SPEC_REF_TYPE ADD CONSTRAINT RA_ESRT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESRT_R_ATY_FK'
ALTER TABLE RA_EQUIP_SPEC_REF_TYPE ADD CONSTRAINT RA_ESRT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESRT_R_ESRT_FK'
ALTER TABLE RA_EQUIP_SPEC_REF_TYPE ADD CONSTRAINT RA_ESRT_R_ESRT_FK FOREIGN KEY
(
REFERENCE_VALUE_TYPE
)
REFERENCES R_EQUIP_SPEC_REF_TYPE
(
REFERENCE_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESRT_R_LANG_FK'
ALTER TABLE RA_EQUIP_SPEC_REF_TYPE ADD CONSTRAINT RA_ESRT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESRT_SRCD_FK'
ALTER TABLE RA_EQUIP_SPEC_REF_TYPE ADD CONSTRAINT RA_ESRT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESST_BA_FK'
ALTER TABLE RA_EQUIP_SPEC_SET_TYPE ADD CONSTRAINT RA_ESST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESST_PSWA_FK'
ALTER TABLE RA_EQUIP_SPEC_SET_TYPE ADD CONSTRAINT RA_ESST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESST_R_ART_FK'
ALTER TABLE RA_EQUIP_SPEC_SET_TYPE ADD CONSTRAINT RA_ESST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESST_R_ATY_FK'
ALTER TABLE RA_EQUIP_SPEC_SET_TYPE ADD CONSTRAINT RA_ESST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESST_R_ESST_FK'
ALTER TABLE RA_EQUIP_SPEC_SET_TYPE ADD CONSTRAINT RA_ESST_R_ESST_FK FOREIGN KEY
(
SPEC_SET_TYPE
)
REFERENCES R_EQUIP_SPEC_SET_TYPE
(
SPEC_SET_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESST_R_LANG_FK'
ALTER TABLE RA_EQUIP_SPEC_SET_TYPE ADD CONSTRAINT RA_ESST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESST_SRCD_FK'
ALTER TABLE RA_EQUIP_SPEC_SET_TYPE ADD CONSTRAINT RA_ESST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESTAT_BA_FK'
ALTER TABLE RA_EQUIP_STATUS ADD CONSTRAINT RA_ESTAT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESTAT_PSWA_FK'
ALTER TABLE RA_EQUIP_STATUS ADD CONSTRAINT RA_ESTAT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESTAT_R_ART_FK'
ALTER TABLE RA_EQUIP_STATUS ADD CONSTRAINT RA_ESTAT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESTAT_R_ATY_FK'
ALTER TABLE RA_EQUIP_STATUS ADD CONSTRAINT RA_ESTAT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESTAT_R_ESTAT_FK'
ALTER TABLE RA_EQUIP_STATUS ADD CONSTRAINT RA_ESTAT_R_ESTAT_FK FOREIGN KEY
(
STATUS_TYPE,
EQUIP_STATUS
)
REFERENCES R_EQUIP_STATUS
(
STATUS_TYPE,
EQUIP_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESTAT_R_ESTA_FK'
ALTER TABLE RA_EQUIP_STATUS ADD CONSTRAINT RA_ESTAT_R_ESTA_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_EQUIP_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESTAT_R_LANG_FK'
ALTER TABLE RA_EQUIP_STATUS ADD CONSTRAINT RA_ESTAT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESTAT_SRCD_FK'
ALTER TABLE RA_EQUIP_STATUS ADD CONSTRAINT RA_ESTAT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESTA_BA_FK'
ALTER TABLE RA_EQUIP_STATUS_TYPE ADD CONSTRAINT RA_ESTA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESTA_PSWA_FK'
ALTER TABLE RA_EQUIP_STATUS_TYPE ADD CONSTRAINT RA_ESTA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESTA_R_ART_FK'
ALTER TABLE RA_EQUIP_STATUS_TYPE ADD CONSTRAINT RA_ESTA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESTA_R_ATY_FK'
ALTER TABLE RA_EQUIP_STATUS_TYPE ADD CONSTRAINT RA_ESTA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESTA_R_ESTA_FK'
ALTER TABLE RA_EQUIP_STATUS_TYPE ADD CONSTRAINT RA_ESTA_R_ESTA_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_EQUIP_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESTA_R_LANG_FK'
ALTER TABLE RA_EQUIP_STATUS_TYPE ADD CONSTRAINT RA_ESTA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESTA_SRCD_FK'
ALTER TABLE RA_EQUIP_STATUS_TYPE ADD CONSTRAINT RA_ESTA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESC_BA_FK'
ALTER TABLE RA_EQUIP_SYSTEM_CONDITION ADD CONSTRAINT RA_ESC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESC_PSWA_FK'
ALTER TABLE RA_EQUIP_SYSTEM_CONDITION ADD CONSTRAINT RA_ESC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESC_R_ART_FK'
ALTER TABLE RA_EQUIP_SYSTEM_CONDITION ADD CONSTRAINT RA_ESC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESC_R_ATY_FK'
ALTER TABLE RA_EQUIP_SYSTEM_CONDITION ADD CONSTRAINT RA_ESC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESC_R_ESC_FK'
ALTER TABLE RA_EQUIP_SYSTEM_CONDITION ADD CONSTRAINT RA_ESC_R_ESC_FK FOREIGN KEY
(
SYSTEM_CONDITION
)
REFERENCES R_EQUIP_SYSTEM_CONDITION
(
SYSTEM_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESC_R_LANG_FK'
ALTER TABLE RA_EQUIP_SYSTEM_CONDITION ADD CONSTRAINT RA_ESC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESC_SRCD_FK'
ALTER TABLE RA_EQUIP_SYSTEM_CONDITION ADD CONSTRAINT RA_ESC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EUST_BA_FK'
ALTER TABLE RA_EQUIP_USE_STAT_TYPE ADD CONSTRAINT RA_EUST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EUST_PSWA_FK'
ALTER TABLE RA_EQUIP_USE_STAT_TYPE ADD CONSTRAINT RA_EUST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EUST_R_ART_FK'
ALTER TABLE RA_EQUIP_USE_STAT_TYPE ADD CONSTRAINT RA_EUST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EUST_R_ATY_FK'
ALTER TABLE RA_EQUIP_USE_STAT_TYPE ADD CONSTRAINT RA_EUST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EUST_R_EUST_FK'
ALTER TABLE RA_EQUIP_USE_STAT_TYPE ADD CONSTRAINT RA_EUST_R_EUST_FK FOREIGN KEY
(
EQUIP_USE_STAT_TYPE
)
REFERENCES R_EQUIP_USE_STAT_TYPE
(
EQUIP_USE_STAT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EUST_R_LANG_FK'
ALTER TABLE RA_EQUIP_USE_STAT_TYPE ADD CONSTRAINT RA_EUST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EUST_SRCD_FK'
ALTER TABLE RA_EQUIP_USE_STAT_TYPE ADD CONSTRAINT RA_EUST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EXT_BA_FK'
ALTER TABLE RA_EQUIP_XREF_TYPE ADD CONSTRAINT RA_EXT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EXT_PSWA_FK'
ALTER TABLE RA_EQUIP_XREF_TYPE ADD CONSTRAINT RA_EXT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EXT_R_ART_FK'
ALTER TABLE RA_EQUIP_XREF_TYPE ADD CONSTRAINT RA_EXT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EXT_R_ATY_FK'
ALTER TABLE RA_EQUIP_XREF_TYPE ADD CONSTRAINT RA_EXT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EXT_R_EXT_FK'
ALTER TABLE RA_EQUIP_XREF_TYPE ADD CONSTRAINT RA_EXT_R_EXT_FK FOREIGN KEY
(
EQUIP_XREF_TYPE
)
REFERENCES R_EQUIP_XREF_TYPE
(
EQUIP_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EXT_R_LANG_FK'
ALTER TABLE RA_EQUIP_XREF_TYPE ADD CONSTRAINT RA_EXT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_EXT_SRCD_FK'
ALTER TABLE RA_EQUIP_XREF_TYPE ADD CONSTRAINT RA_EXT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ED_BA_FK'
ALTER TABLE RA_EW_DIRECTION ADD CONSTRAINT RA_ED_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ED_PSWA_FK'
ALTER TABLE RA_EW_DIRECTION ADD CONSTRAINT RA_ED_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ED_R_ART_FK'
ALTER TABLE RA_EW_DIRECTION ADD CONSTRAINT RA_ED_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ED_R_ATY_FK'
ALTER TABLE RA_EW_DIRECTION ADD CONSTRAINT RA_ED_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ED_R_ED_FK'
ALTER TABLE RA_EW_DIRECTION ADD CONSTRAINT RA_ED_R_ED_FK FOREIGN KEY
(
EW_DIRECTION
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ED_R_LANG_FK'
ALTER TABLE RA_EW_DIRECTION ADD CONSTRAINT RA_ED_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ED_SRCD_FK'
ALTER TABLE RA_EW_DIRECTION ADD CONSTRAINT RA_ED_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESL_BA_FK'
ALTER TABLE RA_EW_START_LINE ADD CONSTRAINT RA_ESL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESL_PSWA_FK'
ALTER TABLE RA_EW_START_LINE ADD CONSTRAINT RA_ESL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESL_R_ART_FK'
ALTER TABLE RA_EW_START_LINE ADD CONSTRAINT RA_ESL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESL_R_ATY_FK'
ALTER TABLE RA_EW_START_LINE ADD CONSTRAINT RA_ESL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESL_R_ESL_FK'
ALTER TABLE RA_EW_START_LINE ADD CONSTRAINT RA_ESL_R_ESL_FK FOREIGN KEY
(
EW_START_LINE
)
REFERENCES R_EW_START_LINE
(
EW_START_LINE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESL_R_LANG_FK'
ALTER TABLE RA_EW_START_LINE ADD CONSTRAINT RA_ESL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ESL_SRCD_FK'
ALTER TABLE RA_EW_START_LINE ADD CONSTRAINT RA_ESL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FAC_BA_FK'
ALTER TABLE RA_FACILITY_CLASS ADD CONSTRAINT RA_FAC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FAC_PSWA_FK'
ALTER TABLE RA_FACILITY_CLASS ADD CONSTRAINT RA_FAC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FAC_R_ART_FK'
ALTER TABLE RA_FACILITY_CLASS ADD CONSTRAINT RA_FAC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FAC_R_ATY_FK'
ALTER TABLE RA_FACILITY_CLASS ADD CONSTRAINT RA_FAC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FAC_R_FAC_FK'
ALTER TABLE RA_FACILITY_CLASS ADD CONSTRAINT RA_FAC_R_FAC_FK FOREIGN KEY
(
FACILITY_CLASS_TYPE
)
REFERENCES R_FACILITY_CLASS
(
FACILITY_CLASS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FAC_R_LANG_FK'
ALTER TABLE RA_FACILITY_CLASS ADD CONSTRAINT RA_FAC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FAC_SRCD_FK'
ALTER TABLE RA_FACILITY_CLASS ADD CONSTRAINT RA_FAC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FACT2_BA_FK'
ALTER TABLE RA_FACILITY_COMP_TYPE ADD CONSTRAINT RA_FACT2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FACT2_PSWA_FK'
ALTER TABLE RA_FACILITY_COMP_TYPE ADD CONSTRAINT RA_FACT2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FACT2_R_ART_FK'
ALTER TABLE RA_FACILITY_COMP_TYPE ADD CONSTRAINT RA_FACT2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FACT2_R_ATY_FK'
ALTER TABLE RA_FACILITY_COMP_TYPE ADD CONSTRAINT RA_FACT2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FACT2_R_FACT2_FK'
ALTER TABLE RA_FACILITY_COMP_TYPE ADD CONSTRAINT RA_FACT2_R_FACT2_FK FOREIGN KEY
(
FACILITY_COMPONENT_TYPE
)
REFERENCES R_FACILITY_COMP_TYPE
(
FACILITY_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FACT2_R_LANG_FK'
ALTER TABLE RA_FACILITY_COMP_TYPE ADD CONSTRAINT RA_FACT2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FACT2_SRCD_FK'
ALTER TABLE RA_FACILITY_COMP_TYPE ADD CONSTRAINT RA_FACT2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FSC_BA_FK'
ALTER TABLE RA_FACILITY_SPEC_CODE ADD CONSTRAINT RA_FSC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FSC_PSWA_FK'
ALTER TABLE RA_FACILITY_SPEC_CODE ADD CONSTRAINT RA_FSC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FSC_R_ART_FK'
ALTER TABLE RA_FACILITY_SPEC_CODE ADD CONSTRAINT RA_FSC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FSC_R_ATY_FK'
ALTER TABLE RA_FACILITY_SPEC_CODE ADD CONSTRAINT RA_FSC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FSC_R_FSC_FK'
ALTER TABLE RA_FACILITY_SPEC_CODE ADD CONSTRAINT RA_FSC_R_FSC_FK FOREIGN KEY
(
SPEC_TYPE,
SPEC_CODE
)
REFERENCES R_FACILITY_SPEC_CODE
(
SPEC_TYPE,
SPEC_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FSC_R_FST1_FK'
ALTER TABLE RA_FACILITY_SPEC_CODE ADD CONSTRAINT RA_FSC_R_FST1_FK FOREIGN KEY
(
SPEC_TYPE
)
REFERENCES R_FACILITY_SPEC_TYPE
(
SPEC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FSC_R_LANG_FK'
ALTER TABLE RA_FACILITY_SPEC_CODE ADD CONSTRAINT RA_FSC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FSC_SRCD_FK'
ALTER TABLE RA_FACILITY_SPEC_CODE ADD CONSTRAINT RA_FSC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FST1_BA_FK'
ALTER TABLE RA_FACILITY_SPEC_TYPE ADD CONSTRAINT RA_FST1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FST1_PSWA_FK'
ALTER TABLE RA_FACILITY_SPEC_TYPE ADD CONSTRAINT RA_FST1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FST1_R_ART_FK'
ALTER TABLE RA_FACILITY_SPEC_TYPE ADD CONSTRAINT RA_FST1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FST1_R_ATY_FK'
ALTER TABLE RA_FACILITY_SPEC_TYPE ADD CONSTRAINT RA_FST1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FST1_R_FST1_FK'
ALTER TABLE RA_FACILITY_SPEC_TYPE ADD CONSTRAINT RA_FST1_R_FST1_FK FOREIGN KEY
(
SPEC_TYPE
)
REFERENCES R_FACILITY_SPEC_TYPE
(
SPEC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FST1_R_LANG_FK'
ALTER TABLE RA_FACILITY_SPEC_TYPE ADD CONSTRAINT RA_FST1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FST1_SRCD_FK'
ALTER TABLE RA_FACILITY_SPEC_TYPE ADD CONSTRAINT RA_FST1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FS_BA_FK'
ALTER TABLE RA_FACILITY_STATUS ADD CONSTRAINT RA_FS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FS_PSWA_FK'
ALTER TABLE RA_FACILITY_STATUS ADD CONSTRAINT RA_FS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FS_R_ART_FK'
ALTER TABLE RA_FACILITY_STATUS ADD CONSTRAINT RA_FS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FS_R_ATY_FK'
ALTER TABLE RA_FACILITY_STATUS ADD CONSTRAINT RA_FS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FS_R_FS_FK'
ALTER TABLE RA_FACILITY_STATUS ADD CONSTRAINT RA_FS_R_FS_FK FOREIGN KEY
(
STATUS_TYPE,
STATUS
)
REFERENCES R_FACILITY_STATUS
(
STATUS_TYPE,
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FS_R_FAST_FK'
ALTER TABLE RA_FACILITY_STATUS ADD CONSTRAINT RA_FS_R_FAST_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_FAC_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FS_R_LANG_FK'
ALTER TABLE RA_FACILITY_STATUS ADD CONSTRAINT RA_FS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FS_SRCD_FK'
ALTER TABLE RA_FACILITY_STATUS ADD CONSTRAINT RA_FS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FACT_BA_FK'
ALTER TABLE RA_FACILITY_TYPE ADD CONSTRAINT RA_FACT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FACT_PSWA_FK'
ALTER TABLE RA_FACILITY_TYPE ADD CONSTRAINT RA_FACT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FACT_R_ART_FK'
ALTER TABLE RA_FACILITY_TYPE ADD CONSTRAINT RA_FACT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FACT_R_ATY_FK'
ALTER TABLE RA_FACILITY_TYPE ADD CONSTRAINT RA_FACT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FACT_R_FACT_FK'
ALTER TABLE RA_FACILITY_TYPE ADD CONSTRAINT RA_FACT_R_FACT_FK FOREIGN KEY
(
FACILITY_TYPE
)
REFERENCES R_FACILITY_TYPE
(
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FACT_R_LANG_FK'
ALTER TABLE RA_FACILITY_TYPE ADD CONSTRAINT RA_FACT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FACT_SRCD_FK'
ALTER TABLE RA_FACILITY_TYPE ADD CONSTRAINT RA_FACT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FXT1_BA_FK'
ALTER TABLE RA_FACILITY_XREF_TYPE ADD CONSTRAINT RA_FXT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FXT1_PSWA_FK'
ALTER TABLE RA_FACILITY_XREF_TYPE ADD CONSTRAINT RA_FXT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FXT1_R_ART_FK'
ALTER TABLE RA_FACILITY_XREF_TYPE ADD CONSTRAINT RA_FXT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FXT1_R_ATY_FK'
ALTER TABLE RA_FACILITY_XREF_TYPE ADD CONSTRAINT RA_FXT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FXT1_R_FXT1_FK'
ALTER TABLE RA_FACILITY_XREF_TYPE ADD CONSTRAINT RA_FXT1_R_FXT1_FK FOREIGN KEY
(
FACILITY_XREF_TYPE
)
REFERENCES R_FACILITY_XREF_TYPE
(
FACILITY_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FXT1_R_LANG_FK'
ALTER TABLE RA_FACILITY_XREF_TYPE ADD CONSTRAINT RA_FXT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FXT1_SRCD_FK'
ALTER TABLE RA_FACILITY_XREF_TYPE ADD CONSTRAINT RA_FXT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FF_BA_FK'
ALTER TABLE RA_FAC_FUNCTION ADD CONSTRAINT RA_FF_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FF_PSWA_FK'
ALTER TABLE RA_FAC_FUNCTION ADD CONSTRAINT RA_FF_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FF_R_ART_FK'
ALTER TABLE RA_FAC_FUNCTION ADD CONSTRAINT RA_FF_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FF_R_ATY_FK'
ALTER TABLE RA_FAC_FUNCTION ADD CONSTRAINT RA_FF_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FF_R_FF_FK'
ALTER TABLE RA_FAC_FUNCTION ADD CONSTRAINT RA_FF_R_FF_FK FOREIGN KEY
(
FACILITY_FUNCTION
)
REFERENCES R_FAC_FUNCTION
(
FACILITY_FUNCTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FF_R_LANG_FK'
ALTER TABLE RA_FAC_FUNCTION ADD CONSTRAINT RA_FF_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FF_SRCD_FK'
ALTER TABLE RA_FAC_FUNCTION ADD CONSTRAINT RA_FF_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLC_BA_FK'
ALTER TABLE RA_FAC_LIC_COND ADD CONSTRAINT RA_FLC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLC_PSWA_FK'
ALTER TABLE RA_FAC_LIC_COND ADD CONSTRAINT RA_FLC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLC_R_ART_FK'
ALTER TABLE RA_FAC_LIC_COND ADD CONSTRAINT RA_FLC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLC_R_ATY_FK'
ALTER TABLE RA_FAC_LIC_COND ADD CONSTRAINT RA_FLC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLC_R_FLC_FK'
ALTER TABLE RA_FAC_LIC_COND ADD CONSTRAINT RA_FLC_R_FLC_FK FOREIGN KEY
(
CONDITION_TYPE
)
REFERENCES R_FAC_LIC_COND
(
CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLC_R_LANG_FK'
ALTER TABLE RA_FAC_LIC_COND ADD CONSTRAINT RA_FLC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLC_SRCD_FK'
ALTER TABLE RA_FAC_LIC_COND ADD CONSTRAINT RA_FLC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLCC_BA_FK'
ALTER TABLE RA_FAC_LIC_COND_CODE ADD CONSTRAINT RA_FLCC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLCC_PSWA_FK'
ALTER TABLE RA_FAC_LIC_COND_CODE ADD CONSTRAINT RA_FLCC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLCC_R_ART_FK'
ALTER TABLE RA_FAC_LIC_COND_CODE ADD CONSTRAINT RA_FLCC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLCC_R_ATY_FK'
ALTER TABLE RA_FAC_LIC_COND_CODE ADD CONSTRAINT RA_FLCC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLCC_R_FLC_FK'
ALTER TABLE RA_FAC_LIC_COND_CODE ADD CONSTRAINT RA_FLCC_R_FLC_FK FOREIGN KEY
(
CONDITION_TYPE
)
REFERENCES R_FAC_LIC_COND
(
CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLCC_R_FLCC_FK'
ALTER TABLE RA_FAC_LIC_COND_CODE ADD CONSTRAINT RA_FLCC_R_FLCC_FK FOREIGN KEY
(
CONDITION_TYPE,
CONDITION_CODE
)
REFERENCES R_FAC_LIC_COND_CODE
(
CONDITION_TYPE,
CONDITION_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLCC_R_LANG_FK'
ALTER TABLE RA_FAC_LIC_COND_CODE ADD CONSTRAINT RA_FLCC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLCC_SRCD_FK'
ALTER TABLE RA_FAC_LIC_COND_CODE ADD CONSTRAINT RA_FLCC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLDC_BA_FK'
ALTER TABLE RA_FAC_LIC_DUE_CONDITION ADD CONSTRAINT RA_FLDC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLDC_PSWA_FK'
ALTER TABLE RA_FAC_LIC_DUE_CONDITION ADD CONSTRAINT RA_FLDC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLDC_R_ART_FK'
ALTER TABLE RA_FAC_LIC_DUE_CONDITION ADD CONSTRAINT RA_FLDC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLDC_R_ATY_FK'
ALTER TABLE RA_FAC_LIC_DUE_CONDITION ADD CONSTRAINT RA_FLDC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLDC_R_FLDC_FK'
ALTER TABLE RA_FAC_LIC_DUE_CONDITION ADD CONSTRAINT RA_FLDC_R_FLDC_FK FOREIGN KEY
(
DUE_CONDITION
)
REFERENCES R_FAC_LIC_DUE_CONDITION
(
DUE_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLDC_R_LANG_FK'
ALTER TABLE RA_FAC_LIC_DUE_CONDITION ADD CONSTRAINT RA_FLDC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLDC_SRCD_FK'
ALTER TABLE RA_FAC_LIC_DUE_CONDITION ADD CONSTRAINT RA_FLDC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLET_BA_FK'
ALTER TABLE RA_FAC_LIC_EXTEND_TYPE ADD CONSTRAINT RA_FLET_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLET_PSWA_FK'
ALTER TABLE RA_FAC_LIC_EXTEND_TYPE ADD CONSTRAINT RA_FLET_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLET_R_ART_FK'
ALTER TABLE RA_FAC_LIC_EXTEND_TYPE ADD CONSTRAINT RA_FLET_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLET_R_ATY_FK'
ALTER TABLE RA_FAC_LIC_EXTEND_TYPE ADD CONSTRAINT RA_FLET_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLET_R_FLET_FK'
ALTER TABLE RA_FAC_LIC_EXTEND_TYPE ADD CONSTRAINT RA_FLET_R_FLET_FK FOREIGN KEY
(
LICENSE_EXTENSION_TYPE
)
REFERENCES R_FAC_LIC_EXTEND_TYPE
(
LICENSE_EXTENSION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLET_R_LANG_FK'
ALTER TABLE RA_FAC_LIC_EXTEND_TYPE ADD CONSTRAINT RA_FLET_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLET_SRCD_FK'
ALTER TABLE RA_FAC_LIC_EXTEND_TYPE ADD CONSTRAINT RA_FLET_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLVT_BA_FK'
ALTER TABLE RA_FAC_LIC_VIOLATION_TYPE ADD CONSTRAINT RA_FLVT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLVT_PSWA_FK'
ALTER TABLE RA_FAC_LIC_VIOLATION_TYPE ADD CONSTRAINT RA_FLVT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLVT_R_ART_FK'
ALTER TABLE RA_FAC_LIC_VIOLATION_TYPE ADD CONSTRAINT RA_FLVT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLVT_R_ATY_FK'
ALTER TABLE RA_FAC_LIC_VIOLATION_TYPE ADD CONSTRAINT RA_FLVT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLVT_R_FLVT_FK'
ALTER TABLE RA_FAC_LIC_VIOLATION_TYPE ADD CONSTRAINT RA_FLVT_R_FLVT_FK FOREIGN KEY
(
VIOLATION_TYPE
)
REFERENCES R_FAC_LIC_VIOLATION_TYPE
(
VIOLATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLVT_R_LANG_FK'
ALTER TABLE RA_FAC_LIC_VIOLATION_TYPE ADD CONSTRAINT RA_FLVT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLVT_SRCD_FK'
ALTER TABLE RA_FAC_LIC_VIOLATION_TYPE ADD CONSTRAINT RA_FLVT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLVRT_BA_FK'
ALTER TABLE RA_FAC_LIC_VIOL_RESOL ADD CONSTRAINT RA_FLVRT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLVRT_PSWA_FK'
ALTER TABLE RA_FAC_LIC_VIOL_RESOL ADD CONSTRAINT RA_FLVRT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLVRT_R_ART_FK'
ALTER TABLE RA_FAC_LIC_VIOL_RESOL ADD CONSTRAINT RA_FLVRT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLVRT_R_ATY_FK'
ALTER TABLE RA_FAC_LIC_VIOL_RESOL ADD CONSTRAINT RA_FLVRT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLVRT_R_FLVRT_FK'
ALTER TABLE RA_FAC_LIC_VIOL_RESOL ADD CONSTRAINT RA_FLVRT_R_FLVRT_FK FOREIGN KEY
(
RESOLVE_TYPE
)
REFERENCES R_FAC_LIC_VIOL_RESOL
(
RESOLVE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLVRT_R_LANG_FK'
ALTER TABLE RA_FAC_LIC_VIOL_RESOL ADD CONSTRAINT RA_FLVRT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLVRT_SRCD_FK'
ALTER TABLE RA_FAC_LIC_VIOL_RESOL ADD CONSTRAINT RA_FLVRT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FMT_BA_FK'
ALTER TABLE RA_FAC_MAINTAIN_TYPE ADD CONSTRAINT RA_FMT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FMT_PSWA_FK'
ALTER TABLE RA_FAC_MAINTAIN_TYPE ADD CONSTRAINT RA_FMT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FMT_R_ART_FK'
ALTER TABLE RA_FAC_MAINTAIN_TYPE ADD CONSTRAINT RA_FMT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FMT_R_ATY_FK'
ALTER TABLE RA_FAC_MAINTAIN_TYPE ADD CONSTRAINT RA_FMT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FMT_R_FACT_FK'
ALTER TABLE RA_FAC_MAINTAIN_TYPE ADD CONSTRAINT RA_FMT_R_FACT_FK FOREIGN KEY
(
FACILITY_TYPE
)
REFERENCES R_FACILITY_TYPE
(
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FMT_R_FMT_FK'
ALTER TABLE RA_FAC_MAINTAIN_TYPE ADD CONSTRAINT RA_FMT_R_FMT_FK FOREIGN KEY
(
FACILITY_TYPE,
MAINTAIN_TYPE
)
REFERENCES R_FAC_MAINTAIN_TYPE
(
FACILITY_TYPE,
MAINTAIN_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FMT_R_LANG_FK'
ALTER TABLE RA_FAC_MAINTAIN_TYPE ADD CONSTRAINT RA_FMT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FMT_SRCD_FK'
ALTER TABLE RA_FAC_MAINTAIN_TYPE ADD CONSTRAINT RA_FMT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FMS_BA_FK'
ALTER TABLE RA_FAC_MAINT_STATUS ADD CONSTRAINT RA_FMS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FMS_PSWA_FK'
ALTER TABLE RA_FAC_MAINT_STATUS ADD CONSTRAINT RA_FMS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FMS_R_ART_FK'
ALTER TABLE RA_FAC_MAINT_STATUS ADD CONSTRAINT RA_FMS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FMS_R_ATY_FK'
ALTER TABLE RA_FAC_MAINT_STATUS ADD CONSTRAINT RA_FMS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FMS_R_FMS_FK'
ALTER TABLE RA_FAC_MAINT_STATUS ADD CONSTRAINT RA_FMS_R_FMS_FK FOREIGN KEY
(
MAINTAIN_STATUS_TYPE,
MAINTAIN_STATUS
)
REFERENCES R_FAC_MAINT_STATUS
(
MAINTAIN_STATUS_TYPE,
MAINTAIN_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FMS_R_FMST_FK'
ALTER TABLE RA_FAC_MAINT_STATUS ADD CONSTRAINT RA_FMS_R_FMST_FK FOREIGN KEY
(
MAINTAIN_STATUS_TYPE
)
REFERENCES R_FAC_MAINT_STATUS_TYPE
(
MAINTAIN_STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FMS_R_LANG_FK'
ALTER TABLE RA_FAC_MAINT_STATUS ADD CONSTRAINT RA_FMS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FMS_SRCD_FK'
ALTER TABLE RA_FAC_MAINT_STATUS ADD CONSTRAINT RA_FMS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FMST_BA_FK'
ALTER TABLE RA_FAC_MAINT_STATUS_TYPE ADD CONSTRAINT RA_FMST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FMST_PSWA_FK'
ALTER TABLE RA_FAC_MAINT_STATUS_TYPE ADD CONSTRAINT RA_FMST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FMST_R_ART_FK'
ALTER TABLE RA_FAC_MAINT_STATUS_TYPE ADD CONSTRAINT RA_FMST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FMST_R_ATY_FK'
ALTER TABLE RA_FAC_MAINT_STATUS_TYPE ADD CONSTRAINT RA_FMST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FMST_R_FMST_FK'
ALTER TABLE RA_FAC_MAINT_STATUS_TYPE ADD CONSTRAINT RA_FMST_R_FMST_FK FOREIGN KEY
(
MAINTAIN_STATUS_TYPE
)
REFERENCES R_FAC_MAINT_STATUS_TYPE
(
MAINTAIN_STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FMST_R_LANG_FK'
ALTER TABLE RA_FAC_MAINT_STATUS_TYPE ADD CONSTRAINT RA_FMST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FMST_SRCD_FK'
ALTER TABLE RA_FAC_MAINT_STATUS_TYPE ADD CONSTRAINT RA_FMST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FPC_BA_FK'
ALTER TABLE RA_FAC_PIPE_COVER ADD CONSTRAINT RA_FPC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FPC_PSWA_FK'
ALTER TABLE RA_FAC_PIPE_COVER ADD CONSTRAINT RA_FPC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FPC_R_ART_FK'
ALTER TABLE RA_FAC_PIPE_COVER ADD CONSTRAINT RA_FPC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FPC_R_ATY_FK'
ALTER TABLE RA_FAC_PIPE_COVER ADD CONSTRAINT RA_FPC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FPC_R_FPC_FK'
ALTER TABLE RA_FAC_PIPE_COVER ADD CONSTRAINT RA_FPC_R_FPC_FK FOREIGN KEY
(
COVER_TYPE
)
REFERENCES R_FAC_PIPE_COVER
(
COVER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FPC_R_LANG_FK'
ALTER TABLE RA_FAC_PIPE_COVER ADD CONSTRAINT RA_FPC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FPC_SRCD_FK'
ALTER TABLE RA_FAC_PIPE_COVER ADD CONSTRAINT RA_FPC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FPM_BA_FK'
ALTER TABLE RA_FAC_PIPE_MATERIAL ADD CONSTRAINT RA_FPM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FPM_PSWA_FK'
ALTER TABLE RA_FAC_PIPE_MATERIAL ADD CONSTRAINT RA_FPM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FPM_R_ART_FK'
ALTER TABLE RA_FAC_PIPE_MATERIAL ADD CONSTRAINT RA_FPM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FPM_R_ATY_FK'
ALTER TABLE RA_FAC_PIPE_MATERIAL ADD CONSTRAINT RA_FPM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FPM_R_FPM_FK'
ALTER TABLE RA_FAC_PIPE_MATERIAL ADD CONSTRAINT RA_FPM_R_FPM_FK FOREIGN KEY
(
PIPELINE_MATERIAL
)
REFERENCES R_FAC_PIPE_MATERIAL
(
PIPELINE_MATERIAL
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FPM_R_LANG_FK'
ALTER TABLE RA_FAC_PIPE_MATERIAL ADD CONSTRAINT RA_FPM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FPM_SRCD_FK'
ALTER TABLE RA_FAC_PIPE_MATERIAL ADD CONSTRAINT RA_FPM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FPT_BA_FK'
ALTER TABLE RA_FAC_PIPE_TYPE ADD CONSTRAINT RA_FPT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FPT_PSWA_FK'
ALTER TABLE RA_FAC_PIPE_TYPE ADD CONSTRAINT RA_FPT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FPT_R_ART_FK'
ALTER TABLE RA_FAC_PIPE_TYPE ADD CONSTRAINT RA_FPT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FPT_R_ATY_FK'
ALTER TABLE RA_FAC_PIPE_TYPE ADD CONSTRAINT RA_FPT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FPT_R_FPT_FK'
ALTER TABLE RA_FAC_PIPE_TYPE ADD CONSTRAINT RA_FPT_R_FPT_FK FOREIGN KEY
(
PIPELINE_TYPE
)
REFERENCES R_FAC_PIPE_TYPE
(
PIPELINE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FPT_R_LANG_FK'
ALTER TABLE RA_FAC_PIPE_TYPE ADD CONSTRAINT RA_FPT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FPT_SRCD_FK'
ALTER TABLE RA_FAC_PIPE_TYPE ADD CONSTRAINT RA_FPT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FSRT_BA_FK'
ALTER TABLE RA_FAC_SPEC_REFERENCE ADD CONSTRAINT RA_FSRT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FSRT_PSWA_FK'
ALTER TABLE RA_FAC_SPEC_REFERENCE ADD CONSTRAINT RA_FSRT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FSRT_R_ART_FK'
ALTER TABLE RA_FAC_SPEC_REFERENCE ADD CONSTRAINT RA_FSRT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FSRT_R_ATY_FK'
ALTER TABLE RA_FAC_SPEC_REFERENCE ADD CONSTRAINT RA_FSRT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FSRT_R_FSRT_FK'
ALTER TABLE RA_FAC_SPEC_REFERENCE ADD CONSTRAINT RA_FSRT_R_FSRT_FK FOREIGN KEY
(
REFERENCE_VALUE_TYPE
)
REFERENCES R_FAC_SPEC_REFERENCE
(
REFERENCE_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FSRT_R_LANG_FK'
ALTER TABLE RA_FAC_SPEC_REFERENCE ADD CONSTRAINT RA_FSRT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FSRT_SRCD_FK'
ALTER TABLE RA_FAC_SPEC_REFERENCE ADD CONSTRAINT RA_FSRT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FAST_BA_FK'
ALTER TABLE RA_FAC_STATUS_TYPE ADD CONSTRAINT RA_FAST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FAST_PSWA_FK'
ALTER TABLE RA_FAC_STATUS_TYPE ADD CONSTRAINT RA_FAST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FAST_R_ART_FK'
ALTER TABLE RA_FAC_STATUS_TYPE ADD CONSTRAINT RA_FAST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FAST_R_ATY_FK'
ALTER TABLE RA_FAC_STATUS_TYPE ADD CONSTRAINT RA_FAST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FAST_R_FAST_FK'
ALTER TABLE RA_FAC_STATUS_TYPE ADD CONSTRAINT RA_FAST_R_FAST_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_FAC_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FAST_R_LANG_FK'
ALTER TABLE RA_FAC_STATUS_TYPE ADD CONSTRAINT RA_FAST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FAST_SRCD_FK'
ALTER TABLE RA_FAC_STATUS_TYPE ADD CONSTRAINT RA_FAST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT1_BA_FK'
ALTER TABLE RA_FAULT_TYPE ADD CONSTRAINT RA_FT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT1_PSWA_FK'
ALTER TABLE RA_FAULT_TYPE ADD CONSTRAINT RA_FT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT1_R_ART_FK'
ALTER TABLE RA_FAULT_TYPE ADD CONSTRAINT RA_FT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT1_R_ATY_FK'
ALTER TABLE RA_FAULT_TYPE ADD CONSTRAINT RA_FT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT1_R_FT1_FK'
ALTER TABLE RA_FAULT_TYPE ADD CONSTRAINT RA_FT1_R_FT1_FK FOREIGN KEY
(
FAULT_TYPE
)
REFERENCES R_FAULT_TYPE
(
FAULT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT1_R_LANG_FK'
ALTER TABLE RA_FAULT_TYPE ADD CONSTRAINT RA_FT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT1_SRCD_FK'
ALTER TABLE RA_FAULT_TYPE ADD CONSTRAINT RA_FT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLCT_BA_FK'
ALTER TABLE RA_FIELD_COMPONENT_TYPE ADD CONSTRAINT RA_FLCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLCT_PSWA_FK'
ALTER TABLE RA_FIELD_COMPONENT_TYPE ADD CONSTRAINT RA_FLCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLCT_R_ART_FK'
ALTER TABLE RA_FIELD_COMPONENT_TYPE ADD CONSTRAINT RA_FLCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLCT_R_ATY_FK'
ALTER TABLE RA_FIELD_COMPONENT_TYPE ADD CONSTRAINT RA_FLCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLCT_R_FLCT_FK'
ALTER TABLE RA_FIELD_COMPONENT_TYPE ADD CONSTRAINT RA_FLCT_R_FLCT_FK FOREIGN KEY
(
FIELD_COMPONENT_TYPE
)
REFERENCES R_FIELD_COMPONENT_TYPE
(
FIELD_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLCT_R_LANG_FK'
ALTER TABLE RA_FIELD_COMPONENT_TYPE ADD CONSTRAINT RA_FLCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLCT_SRCD_FK'
ALTER TABLE RA_FIELD_COMPONENT_TYPE ADD CONSTRAINT RA_FLCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FST_BA_FK'
ALTER TABLE RA_FIELD_STATION_TYPE ADD CONSTRAINT RA_FST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FST_PSWA_FK'
ALTER TABLE RA_FIELD_STATION_TYPE ADD CONSTRAINT RA_FST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FST_R_ART_FK'
ALTER TABLE RA_FIELD_STATION_TYPE ADD CONSTRAINT RA_FST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FST_R_ATY_FK'
ALTER TABLE RA_FIELD_STATION_TYPE ADD CONSTRAINT RA_FST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FST_R_FST_FK'
ALTER TABLE RA_FIELD_STATION_TYPE ADD CONSTRAINT RA_FST_R_FST_FK FOREIGN KEY
(
FIELD_STATION_TYPE
)
REFERENCES R_FIELD_STATION_TYPE
(
FIELD_STATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FST_R_LANG_FK'
ALTER TABLE RA_FIELD_STATION_TYPE ADD CONSTRAINT RA_FST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FST_SRCD_FK'
ALTER TABLE RA_FIELD_STATION_TYPE ADD CONSTRAINT RA_FST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT3_BA_FK'
ALTER TABLE RA_FIELD_TYPE ADD CONSTRAINT RA_FT3_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT3_PSWA_FK'
ALTER TABLE RA_FIELD_TYPE ADD CONSTRAINT RA_FT3_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT3_R_ART_FK'
ALTER TABLE RA_FIELD_TYPE ADD CONSTRAINT RA_FT3_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT3_R_ATY_FK'
ALTER TABLE RA_FIELD_TYPE ADD CONSTRAINT RA_FT3_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT3_R_FT3_FK'
ALTER TABLE RA_FIELD_TYPE ADD CONSTRAINT RA_FT3_R_FT3_FK FOREIGN KEY
(
FIELD_TYPE
)
REFERENCES R_FIELD_TYPE
(
FIELD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT3_R_LANG_FK'
ALTER TABLE RA_FIELD_TYPE ADD CONSTRAINT RA_FT3_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT3_SRCD_FK'
ALTER TABLE RA_FIELD_TYPE ADD CONSTRAINT RA_FT3_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FCT_BA_FK'
ALTER TABLE RA_FIN_COMPONENT_TYPE ADD CONSTRAINT RA_FCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FCT_PSWA_FK'
ALTER TABLE RA_FIN_COMPONENT_TYPE ADD CONSTRAINT RA_FCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FCT_R_ART_FK'
ALTER TABLE RA_FIN_COMPONENT_TYPE ADD CONSTRAINT RA_FCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FCT_R_ATY_FK'
ALTER TABLE RA_FIN_COMPONENT_TYPE ADD CONSTRAINT RA_FCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FCT_R_FCT_FK'
ALTER TABLE RA_FIN_COMPONENT_TYPE ADD CONSTRAINT RA_FCT_R_FCT_FK FOREIGN KEY
(
FIN_COMPONENT_TYPE
)
REFERENCES R_FIN_COMPONENT_TYPE
(
FIN_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FCT_R_LANG_FK'
ALTER TABLE RA_FIN_COMPONENT_TYPE ADD CONSTRAINT RA_FCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FCT_SRCD_FK'
ALTER TABLE RA_FIN_COMPONENT_TYPE ADD CONSTRAINT RA_FCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FICT_BA_FK'
ALTER TABLE RA_FIN_COST_TYPE ADD CONSTRAINT RA_FICT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FICT_PSWA_FK'
ALTER TABLE RA_FIN_COST_TYPE ADD CONSTRAINT RA_FICT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FICT_R_ART_FK'
ALTER TABLE RA_FIN_COST_TYPE ADD CONSTRAINT RA_FICT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FICT_R_ATY_FK'
ALTER TABLE RA_FIN_COST_TYPE ADD CONSTRAINT RA_FICT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FICT_R_FICT_FK'
ALTER TABLE RA_FIN_COST_TYPE ADD CONSTRAINT RA_FICT_R_FICT_FK FOREIGN KEY
(
COST_TYPE
)
REFERENCES R_FIN_COST_TYPE
(
COST_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FICT_R_LANG_FK'
ALTER TABLE RA_FIN_COST_TYPE ADD CONSTRAINT RA_FICT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FICT_SRCD_FK'
ALTER TABLE RA_FIN_COST_TYPE ADD CONSTRAINT RA_FICT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FIS_BA_FK'
ALTER TABLE RA_FIN_STATUS ADD CONSTRAINT RA_FIS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FIS_PSWA_FK'
ALTER TABLE RA_FIN_STATUS ADD CONSTRAINT RA_FIS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FIS_R_ART_FK'
ALTER TABLE RA_FIN_STATUS ADD CONSTRAINT RA_FIS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FIS_R_ATY_FK'
ALTER TABLE RA_FIN_STATUS ADD CONSTRAINT RA_FIS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FIS_R_FIS_FK'
ALTER TABLE RA_FIN_STATUS ADD CONSTRAINT RA_FIS_R_FIS_FK FOREIGN KEY
(
FIN_STATUS
)
REFERENCES R_FIN_STATUS
(
FIN_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FIS_R_LANG_FK'
ALTER TABLE RA_FIN_STATUS ADD CONSTRAINT RA_FIS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FIS_SRCD_FK'
ALTER TABLE RA_FIN_STATUS ADD CONSTRAINT RA_FIS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT_BA_FK'
ALTER TABLE RA_FIN_TYPE ADD CONSTRAINT RA_FT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT_PSWA_FK'
ALTER TABLE RA_FIN_TYPE ADD CONSTRAINT RA_FT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT_R_ART_FK'
ALTER TABLE RA_FIN_TYPE ADD CONSTRAINT RA_FT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT_R_ATY_FK'
ALTER TABLE RA_FIN_TYPE ADD CONSTRAINT RA_FT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT_R_FT_FK'
ALTER TABLE RA_FIN_TYPE ADD CONSTRAINT RA_FT_R_FT_FK FOREIGN KEY
(
FIN_TYPE
)
REFERENCES R_FIN_TYPE
(
FIN_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT_R_LANG_FK'
ALTER TABLE RA_FIN_TYPE ADD CONSTRAINT RA_FT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT_SRCD_FK'
ALTER TABLE RA_FIN_TYPE ADD CONSTRAINT RA_FT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FXT_BA_FK'
ALTER TABLE RA_FIN_XREF_TYPE ADD CONSTRAINT RA_FXT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FXT_PSWA_FK'
ALTER TABLE RA_FIN_XREF_TYPE ADD CONSTRAINT RA_FXT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FXT_R_ART_FK'
ALTER TABLE RA_FIN_XREF_TYPE ADD CONSTRAINT RA_FXT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FXT_R_ATY_FK'
ALTER TABLE RA_FIN_XREF_TYPE ADD CONSTRAINT RA_FXT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FXT_R_FXT_FK'
ALTER TABLE RA_FIN_XREF_TYPE ADD CONSTRAINT RA_FXT_R_FXT_FK FOREIGN KEY
(
FIN_XREF_TYPE
)
REFERENCES R_FIN_XREF_TYPE
(
FIN_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FXT_R_LANG_FK'
ALTER TABLE RA_FIN_XREF_TYPE ADD CONSTRAINT RA_FXT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FXT_SRCD_FK'
ALTER TABLE RA_FIN_XREF_TYPE ADD CONSTRAINT RA_FXT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT2_BA_FK'
ALTER TABLE RA_FLUID_TYPE ADD CONSTRAINT RA_FT2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT2_PSWA_FK'
ALTER TABLE RA_FLUID_TYPE ADD CONSTRAINT RA_FT2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT2_R_ART_FK'
ALTER TABLE RA_FLUID_TYPE ADD CONSTRAINT RA_FT2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT2_R_ATY_FK'
ALTER TABLE RA_FLUID_TYPE ADD CONSTRAINT RA_FT2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT2_R_FT2_FK'
ALTER TABLE RA_FLUID_TYPE ADD CONSTRAINT RA_FT2_R_FT2_FK FOREIGN KEY
(
FLUID_TYPE
)
REFERENCES R_FLUID_TYPE
(
FLUID_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT2_R_LANG_FK'
ALTER TABLE RA_FLUID_TYPE ADD CONSTRAINT RA_FT2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FT2_SRCD_FK'
ALTER TABLE RA_FLUID_TYPE ADD CONSTRAINT RA_FT2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_F_BA_FK'
ALTER TABLE RA_FONT ADD CONSTRAINT RA_F_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_F_PSWA_FK'
ALTER TABLE RA_FONT ADD CONSTRAINT RA_F_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_F_R_ART_FK'
ALTER TABLE RA_FONT ADD CONSTRAINT RA_F_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_F_R_ATY_FK'
ALTER TABLE RA_FONT ADD CONSTRAINT RA_F_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_F_R_F_FK'
ALTER TABLE RA_FONT ADD CONSTRAINT RA_F_R_F_FK FOREIGN KEY
(
FONT
)
REFERENCES R_FONT
(
FONT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_F_R_LANG_FK'
ALTER TABLE RA_FONT ADD CONSTRAINT RA_F_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_F_SRCD_FK'
ALTER TABLE RA_FONT ADD CONSTRAINT RA_F_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FE_BA_FK'
ALTER TABLE RA_FONT_EFFECT ADD CONSTRAINT RA_FE_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FE_PSWA_FK'
ALTER TABLE RA_FONT_EFFECT ADD CONSTRAINT RA_FE_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FE_R_ART_FK'
ALTER TABLE RA_FONT_EFFECT ADD CONSTRAINT RA_FE_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FE_R_ATY_FK'
ALTER TABLE RA_FONT_EFFECT ADD CONSTRAINT RA_FE_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FE_R_FE_FK'
ALTER TABLE RA_FONT_EFFECT ADD CONSTRAINT RA_FE_R_FE_FK FOREIGN KEY
(
FONT_EFFECT
)
REFERENCES R_FONT_EFFECT
(
FONT_EFFECT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FE_R_LANG_FK'
ALTER TABLE RA_FONT_EFFECT ADD CONSTRAINT RA_FE_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FE_SRCD_FK'
ALTER TABLE RA_FONT_EFFECT ADD CONSTRAINT RA_FE_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FO_BA_FK'
ALTER TABLE RA_FOOTAGE_ORIGIN ADD CONSTRAINT RA_FO_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FO_PSWA_FK'
ALTER TABLE RA_FOOTAGE_ORIGIN ADD CONSTRAINT RA_FO_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FO_R_ART_FK'
ALTER TABLE RA_FOOTAGE_ORIGIN ADD CONSTRAINT RA_FO_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FO_R_ATY_FK'
ALTER TABLE RA_FOOTAGE_ORIGIN ADD CONSTRAINT RA_FO_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FO_R_FO_FK'
ALTER TABLE RA_FOOTAGE_ORIGIN ADD CONSTRAINT RA_FO_R_FO_FK FOREIGN KEY
(
FOOTAGE_ORIGIN
)
REFERENCES R_FOOTAGE_ORIGIN
(
FOOTAGE_ORIGIN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FO_R_LANG_FK'
ALTER TABLE RA_FOOTAGE_ORIGIN ADD CONSTRAINT RA_FO_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FO_SRCD_FK'
ALTER TABLE RA_FOOTAGE_ORIGIN ADD CONSTRAINT RA_FO_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FALT_BA_FK'
ALTER TABLE RA_FOS_ALIAS_TYPE ADD CONSTRAINT RA_FALT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FALT_PSWA_FK'
ALTER TABLE RA_FOS_ALIAS_TYPE ADD CONSTRAINT RA_FALT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FALT_R_ART_FK'
ALTER TABLE RA_FOS_ALIAS_TYPE ADD CONSTRAINT RA_FALT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FALT_R_ATY_FK'
ALTER TABLE RA_FOS_ALIAS_TYPE ADD CONSTRAINT RA_FALT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FALT_R_FALT_FK'
ALTER TABLE RA_FOS_ALIAS_TYPE ADD CONSTRAINT RA_FALT_R_FALT_FK FOREIGN KEY
(
FOS_ALIAS_TYPE
)
REFERENCES R_FOS_ALIAS_TYPE
(
FOS_ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FALT_R_LANG_FK'
ALTER TABLE RA_FOS_ALIAS_TYPE ADD CONSTRAINT RA_FALT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FALT_SRCD_FK'
ALTER TABLE RA_FOS_ALIAS_TYPE ADD CONSTRAINT RA_FALT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FAT_BA_FK'
ALTER TABLE RA_FOS_ASSEMBLAGE_TYPE ADD CONSTRAINT RA_FAT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FAT_PSWA_FK'
ALTER TABLE RA_FOS_ASSEMBLAGE_TYPE ADD CONSTRAINT RA_FAT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FAT_R_ART_FK'
ALTER TABLE RA_FOS_ASSEMBLAGE_TYPE ADD CONSTRAINT RA_FAT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FAT_R_ATY_FK'
ALTER TABLE RA_FOS_ASSEMBLAGE_TYPE ADD CONSTRAINT RA_FAT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FAT_R_FAT_FK'
ALTER TABLE RA_FOS_ASSEMBLAGE_TYPE ADD CONSTRAINT RA_FAT_R_FAT_FK FOREIGN KEY
(
ASSEMBLAGE_TYPE
)
REFERENCES R_FOS_ASSEMBLAGE_TYPE
(
ASSEMBLAGE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FAT_R_LANG_FK'
ALTER TABLE RA_FOS_ASSEMBLAGE_TYPE ADD CONSTRAINT RA_FAT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FAT_SRCD_FK'
ALTER TABLE RA_FOS_ASSEMBLAGE_TYPE ADD CONSTRAINT RA_FAT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FDC_BA_FK'
ALTER TABLE RA_FOS_DESC_CODE ADD CONSTRAINT RA_FDC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FDC_PSWA_FK'
ALTER TABLE RA_FOS_DESC_CODE ADD CONSTRAINT RA_FDC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FDC_R_ART_FK'
ALTER TABLE RA_FOS_DESC_CODE ADD CONSTRAINT RA_FDC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FDC_R_ATY_FK'
ALTER TABLE RA_FOS_DESC_CODE ADD CONSTRAINT RA_FDC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FDC_R_FDC_FK'
ALTER TABLE RA_FOS_DESC_CODE ADD CONSTRAINT RA_FDC_R_FDC_FK FOREIGN KEY
(
DESCRIPTION_TYPE,
DESCRIPTION_CODE
)
REFERENCES R_FOS_DESC_CODE
(
DESCRIPTION_TYPE,
DESCRIPTION_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FDC_R_FDT_FK'
ALTER TABLE RA_FOS_DESC_CODE ADD CONSTRAINT RA_FDC_R_FDT_FK FOREIGN KEY
(
DESCRIPTION_TYPE
)
REFERENCES R_FOS_DESC_TYPE
(
DESCRIPTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FDC_R_LANG_FK'
ALTER TABLE RA_FOS_DESC_CODE ADD CONSTRAINT RA_FDC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FDC_SRCD_FK'
ALTER TABLE RA_FOS_DESC_CODE ADD CONSTRAINT RA_FDC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FDT_BA_FK'
ALTER TABLE RA_FOS_DESC_TYPE ADD CONSTRAINT RA_FDT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FDT_PSWA_FK'
ALTER TABLE RA_FOS_DESC_TYPE ADD CONSTRAINT RA_FDT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FDT_R_ART_FK'
ALTER TABLE RA_FOS_DESC_TYPE ADD CONSTRAINT RA_FDT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FDT_R_ATY_FK'
ALTER TABLE RA_FOS_DESC_TYPE ADD CONSTRAINT RA_FDT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FDT_R_FDT_FK'
ALTER TABLE RA_FOS_DESC_TYPE ADD CONSTRAINT RA_FDT_R_FDT_FK FOREIGN KEY
(
DESCRIPTION_TYPE
)
REFERENCES R_FOS_DESC_TYPE
(
DESCRIPTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FDT_R_LANG_FK'
ALTER TABLE RA_FOS_DESC_TYPE ADD CONSTRAINT RA_FDT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FDT_SRCD_FK'
ALTER TABLE RA_FOS_DESC_TYPE ADD CONSTRAINT RA_FDT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLH_BA_FK'
ALTER TABLE RA_FOS_LIFE_HABIT ADD CONSTRAINT RA_FLH_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLH_PSWA_FK'
ALTER TABLE RA_FOS_LIFE_HABIT ADD CONSTRAINT RA_FLH_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLH_R_ART_FK'
ALTER TABLE RA_FOS_LIFE_HABIT ADD CONSTRAINT RA_FLH_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLH_R_ATY_FK'
ALTER TABLE RA_FOS_LIFE_HABIT ADD CONSTRAINT RA_FLH_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLH_R_FLH_FK'
ALTER TABLE RA_FOS_LIFE_HABIT ADD CONSTRAINT RA_FLH_R_FLH_FK FOREIGN KEY
(
LIFE_HABIT
)
REFERENCES R_FOS_LIFE_HABIT
(
LIFE_HABIT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLH_R_LANG_FK'
ALTER TABLE RA_FOS_LIFE_HABIT ADD CONSTRAINT RA_FLH_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FLH_SRCD_FK'
ALTER TABLE RA_FOS_LIFE_HABIT ADD CONSTRAINT RA_FLH_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FNST_BA_FK'
ALTER TABLE RA_FOS_NAME_SET_TYPE ADD CONSTRAINT RA_FNST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FNST_PSWA_FK'
ALTER TABLE RA_FOS_NAME_SET_TYPE ADD CONSTRAINT RA_FNST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FNST_R_ART_FK'
ALTER TABLE RA_FOS_NAME_SET_TYPE ADD CONSTRAINT RA_FNST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FNST_R_ATY_FK'
ALTER TABLE RA_FOS_NAME_SET_TYPE ADD CONSTRAINT RA_FNST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FNST_R_FNST_FK'
ALTER TABLE RA_FOS_NAME_SET_TYPE ADD CONSTRAINT RA_FNST_R_FNST_FK FOREIGN KEY
(
FOSSIL_NAME_SET_TYPE
)
REFERENCES R_FOS_NAME_SET_TYPE
(
FOSSIL_NAME_SET_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FNST_R_LANG_FK'
ALTER TABLE RA_FOS_NAME_SET_TYPE ADD CONSTRAINT RA_FNST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FNST_SRCD_FK'
ALTER TABLE RA_FOS_NAME_SET_TYPE ADD CONSTRAINT RA_FNST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FOT_BA_FK'
ALTER TABLE RA_FOS_OBS_TYPE ADD CONSTRAINT RA_FOT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FOT_PSWA_FK'
ALTER TABLE RA_FOS_OBS_TYPE ADD CONSTRAINT RA_FOT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FOT_R_ART_FK'
ALTER TABLE RA_FOS_OBS_TYPE ADD CONSTRAINT RA_FOT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FOT_R_ATY_FK'
ALTER TABLE RA_FOS_OBS_TYPE ADD CONSTRAINT RA_FOT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FOT_R_FOT_FK'
ALTER TABLE RA_FOS_OBS_TYPE ADD CONSTRAINT RA_FOT_R_FOT_FK FOREIGN KEY
(
FOSSIL_OBS_TYPE
)
REFERENCES R_FOS_OBS_TYPE
(
FOSSIL_OBS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FOT_R_LANG_FK'
ALTER TABLE RA_FOS_OBS_TYPE ADD CONSTRAINT RA_FOT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FOT_SRCD_FK'
ALTER TABLE RA_FOS_OBS_TYPE ADD CONSTRAINT RA_FOT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FTG_BA_FK'
ALTER TABLE RA_FOS_TAXON_GROUP ADD CONSTRAINT RA_FTG_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FTG_PSWA_FK'
ALTER TABLE RA_FOS_TAXON_GROUP ADD CONSTRAINT RA_FTG_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FTG_R_ART_FK'
ALTER TABLE RA_FOS_TAXON_GROUP ADD CONSTRAINT RA_FTG_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FTG_R_ATY_FK'
ALTER TABLE RA_FOS_TAXON_GROUP ADD CONSTRAINT RA_FTG_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FTG_R_FTG_FK'
ALTER TABLE RA_FOS_TAXON_GROUP ADD CONSTRAINT RA_FTG_R_FTG_FK FOREIGN KEY
(
TAXON_GROUP
)
REFERENCES R_FOS_TAXON_GROUP
(
TAXON_GROUP
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FTG_R_LANG_FK'
ALTER TABLE RA_FOS_TAXON_GROUP ADD CONSTRAINT RA_FTG_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FTG_SRCD_FK'
ALTER TABLE RA_FOS_TAXON_GROUP ADD CONSTRAINT RA_FTG_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FTL_BA_FK'
ALTER TABLE RA_FOS_TAXON_LEVEL ADD CONSTRAINT RA_FTL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FTL_PSWA_FK'
ALTER TABLE RA_FOS_TAXON_LEVEL ADD CONSTRAINT RA_FTL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FTL_R_ART_FK'
ALTER TABLE RA_FOS_TAXON_LEVEL ADD CONSTRAINT RA_FTL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FTL_R_ATY_FK'
ALTER TABLE RA_FOS_TAXON_LEVEL ADD CONSTRAINT RA_FTL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FTL_R_FTL_FK'
ALTER TABLE RA_FOS_TAXON_LEVEL ADD CONSTRAINT RA_FTL_R_FTL_FK FOREIGN KEY
(
TAXON_LEVEL
)
REFERENCES R_FOS_TAXON_LEVEL
(
TAXON_LEVEL
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FTL_R_LANG_FK'
ALTER TABLE RA_FOS_TAXON_LEVEL ADD CONSTRAINT RA_FTL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FTL_SRCD_FK'
ALTER TABLE RA_FOS_TAXON_LEVEL ADD CONSTRAINT RA_FTL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FX_BA_FK'
ALTER TABLE RA_FOS_XREF ADD CONSTRAINT RA_FX_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FX_PSWA_FK'
ALTER TABLE RA_FOS_XREF ADD CONSTRAINT RA_FX_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FX_R_ART_FK'
ALTER TABLE RA_FOS_XREF ADD CONSTRAINT RA_FX_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FX_R_ATY_FK'
ALTER TABLE RA_FOS_XREF ADD CONSTRAINT RA_FX_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FX_R_FX_FK'
ALTER TABLE RA_FOS_XREF ADD CONSTRAINT RA_FX_R_FX_FK FOREIGN KEY
(
FOSSIL_XREF_TYPE
)
REFERENCES R_FOS_XREF
(
FOSSIL_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FX_R_LANG_FK'
ALTER TABLE RA_FOS_XREF ADD CONSTRAINT RA_FX_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_FX_SRCD_FK'
ALTER TABLE RA_FOS_XREF ADD CONSTRAINT RA_FX_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_GAVC_BA_FK'
ALTER TABLE RA_GAS_ANL_VALUE_CODE ADD CONSTRAINT RA_GAVC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_GAVC_PSWA_FK'
ALTER TABLE RA_GAS_ANL_VALUE_CODE ADD CONSTRAINT RA_GAVC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_GAVC_R_ART_FK'
ALTER TABLE RA_GAS_ANL_VALUE_CODE ADD CONSTRAINT RA_GAVC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_GAVC_R_ATY_FK'
ALTER TABLE RA_GAS_ANL_VALUE_CODE ADD CONSTRAINT RA_GAVC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_GAVC_R_GAVC_FK'
ALTER TABLE RA_GAS_ANL_VALUE_CODE ADD CONSTRAINT RA_GAVC_R_GAVC_FK FOREIGN KEY
(
GAS_ANL_VALUE_CODE
)
REFERENCES R_GAS_ANL_VALUE_CODE
(
GAS_ANL_VALUE_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_GAVC_R_LANG_FK'
ALTER TABLE RA_GAS_ANL_VALUE_CODE ADD CONSTRAINT RA_GAVC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_GAVC_SRCD_FK'
ALTER TABLE RA_GAS_ANL_VALUE_CODE ADD CONSTRAINT RA_GAVC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_GAVT_BA_FK'
ALTER TABLE RA_GAS_ANL_VALUE_TYPE ADD CONSTRAINT RA_GAVT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_GAVT_PSWA_FK'
ALTER TABLE RA_GAS_ANL_VALUE_TYPE ADD CONSTRAINT RA_GAVT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_GAVT_R_ART_FK'
ALTER TABLE RA_GAS_ANL_VALUE_TYPE ADD CONSTRAINT RA_GAVT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_GAVT_R_ATY_FK'
ALTER TABLE RA_GAS_ANL_VALUE_TYPE ADD CONSTRAINT RA_GAVT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_GAVT_R_GAVT_FK'
ALTER TABLE RA_GAS_ANL_VALUE_TYPE ADD CONSTRAINT RA_GAVT_R_GAVT_FK FOREIGN KEY
(
GAS_ANL_VALUE_TYPE
)
REFERENCES R_GAS_ANL_VALUE_TYPE
(
GAS_ANL_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_GAVT_R_LANG_FK'
ALTER TABLE RA_GAS_ANL_VALUE_TYPE ADD CONSTRAINT RA_GAVT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_GAVT_SRCD_FK'
ALTER TABLE RA_GAS_ANL_VALUE_TYPE ADD CONSTRAINT RA_GAVT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_GRT_BA_FK'
ALTER TABLE RA_GRANTED_RIGHT_TYPE ADD CONSTRAINT RA_GRT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_GRT_PSWA_FK'
ALTER TABLE RA_GRANTED_RIGHT_TYPE ADD CONSTRAINT RA_GRT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_GRT_R_ART_FK'
ALTER TABLE RA_GRANTED_RIGHT_TYPE ADD CONSTRAINT RA_GRT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_GRT_R_ATY_FK'
ALTER TABLE RA_GRANTED_RIGHT_TYPE ADD CONSTRAINT RA_GRT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_GRT_R_GRT_FK'
ALTER TABLE RA_GRANTED_RIGHT_TYPE ADD CONSTRAINT RA_GRT_R_GRT_FK FOREIGN KEY
(
GRANTED_RIGHT_TYPE
)
REFERENCES R_GRANTED_RIGHT_TYPE
(
GRANTED_RIGHT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_GRT_R_LANG_FK'
ALTER TABLE RA_GRANTED_RIGHT_TYPE ADD CONSTRAINT RA_GRT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_GRT_SRCD_FK'
ALTER TABLE RA_GRANTED_RIGHT_TYPE ADD CONSTRAINT RA_GRT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HCM_BA_FK'
ALTER TABLE RA_HEAT_CONTENT_METHOD ADD CONSTRAINT RA_HCM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HCM_PSWA_FK'
ALTER TABLE RA_HEAT_CONTENT_METHOD ADD CONSTRAINT RA_HCM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HCM_R_ART_FK'
ALTER TABLE RA_HEAT_CONTENT_METHOD ADD CONSTRAINT RA_HCM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HCM_R_ATY_FK'
ALTER TABLE RA_HEAT_CONTENT_METHOD ADD CONSTRAINT RA_HCM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HCM_R_HCM_FK'
ALTER TABLE RA_HEAT_CONTENT_METHOD ADD CONSTRAINT RA_HCM_R_HCM_FK FOREIGN KEY
(
HEAT_CONTENT_METHOD
)
REFERENCES R_HEAT_CONTENT_METHOD
(
HEAT_CONTENT_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HCM_R_LANG_FK'
ALTER TABLE RA_HEAT_CONTENT_METHOD ADD CONSTRAINT RA_HCM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HCM_SRCD_FK'
ALTER TABLE RA_HEAT_CONTENT_METHOD ADD CONSTRAINT RA_HCM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HC_BA_FK'
ALTER TABLE RA_HOLE_CONDITION ADD CONSTRAINT RA_HC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HC_PSWA_FK'
ALTER TABLE RA_HOLE_CONDITION ADD CONSTRAINT RA_HC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HC_R_ART_FK'
ALTER TABLE RA_HOLE_CONDITION ADD CONSTRAINT RA_HC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HC_R_ATY_FK'
ALTER TABLE RA_HOLE_CONDITION ADD CONSTRAINT RA_HC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HC_R_HC_FK'
ALTER TABLE RA_HOLE_CONDITION ADD CONSTRAINT RA_HC_R_HC_FK FOREIGN KEY
(
HOLE_CONDITION
)
REFERENCES R_HOLE_CONDITION
(
HOLE_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HC_R_LANG_FK'
ALTER TABLE RA_HOLE_CONDITION ADD CONSTRAINT RA_HC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HC_SRCD_FK'
ALTER TABLE RA_HOLE_CONDITION ADD CONSTRAINT RA_HC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HDR_BA_FK'
ALTER TABLE RA_HORIZ_DRILL_REASON ADD CONSTRAINT RA_HDR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HDR_PSWA_FK'
ALTER TABLE RA_HORIZ_DRILL_REASON ADD CONSTRAINT RA_HDR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HDR_R_ART_FK'
ALTER TABLE RA_HORIZ_DRILL_REASON ADD CONSTRAINT RA_HDR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HDR_R_ATY_FK'
ALTER TABLE RA_HORIZ_DRILL_REASON ADD CONSTRAINT RA_HDR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HDR_R_HDR_FK'
ALTER TABLE RA_HORIZ_DRILL_REASON ADD CONSTRAINT RA_HDR_R_HDR_FK FOREIGN KEY
(
HORIZ_DRILL_REASON
)
REFERENCES R_HORIZ_DRILL_REASON
(
HORIZ_DRILL_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HDR_R_LANG_FK'
ALTER TABLE RA_HORIZ_DRILL_REASON ADD CONSTRAINT RA_HDR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HDR_SRCD_FK'
ALTER TABLE RA_HORIZ_DRILL_REASON ADD CONSTRAINT RA_HDR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HDT_BA_FK'
ALTER TABLE RA_HORIZ_DRILL_TYPE ADD CONSTRAINT RA_HDT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HDT_PSWA_FK'
ALTER TABLE RA_HORIZ_DRILL_TYPE ADD CONSTRAINT RA_HDT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HDT_R_ART_FK'
ALTER TABLE RA_HORIZ_DRILL_TYPE ADD CONSTRAINT RA_HDT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HDT_R_ATY_FK'
ALTER TABLE RA_HORIZ_DRILL_TYPE ADD CONSTRAINT RA_HDT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HDT_R_HDT_FK'
ALTER TABLE RA_HORIZ_DRILL_TYPE ADD CONSTRAINT RA_HDT_R_HDT_FK FOREIGN KEY
(
HORIZ_DRILL_TYPE
)
REFERENCES R_HORIZ_DRILL_TYPE
(
HORIZ_DRILL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HDT_R_LANG_FK'
ALTER TABLE RA_HORIZ_DRILL_TYPE ADD CONSTRAINT RA_HDT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HDT_SRCD_FK'
ALTER TABLE RA_HORIZ_DRILL_TYPE ADD CONSTRAINT RA_HDT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HCR_BA_FK'
ALTER TABLE RA_HSE_COMP_ROLE ADD CONSTRAINT RA_HCR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HCR_PSWA_FK'
ALTER TABLE RA_HSE_COMP_ROLE ADD CONSTRAINT RA_HCR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HCR_R_ART_FK'
ALTER TABLE RA_HSE_COMP_ROLE ADD CONSTRAINT RA_HCR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HCR_R_ATY_FK'
ALTER TABLE RA_HSE_COMP_ROLE ADD CONSTRAINT RA_HCR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HCR_R_HCR_FK'
ALTER TABLE RA_HSE_COMP_ROLE ADD CONSTRAINT RA_HCR_R_HCR_FK FOREIGN KEY
(
COMPONENT_ROLE
)
REFERENCES R_HSE_COMP_ROLE
(
COMPONENT_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HCR_R_LANG_FK'
ALTER TABLE RA_HSE_COMP_ROLE ADD CONSTRAINT RA_HCR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HCR_SRCD_FK'
ALTER TABLE RA_HSE_COMP_ROLE ADD CONSTRAINT RA_HCR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HICT_BA_FK'
ALTER TABLE RA_HSE_INCIDENT_COMP_TYPE ADD CONSTRAINT RA_HICT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HICT_PSWA_FK'
ALTER TABLE RA_HSE_INCIDENT_COMP_TYPE ADD CONSTRAINT RA_HICT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HICT_R_ART_FK'
ALTER TABLE RA_HSE_INCIDENT_COMP_TYPE ADD CONSTRAINT RA_HICT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HICT_R_ATY_FK'
ALTER TABLE RA_HSE_INCIDENT_COMP_TYPE ADD CONSTRAINT RA_HICT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HICT_R_HICT_FK'
ALTER TABLE RA_HSE_INCIDENT_COMP_TYPE ADD CONSTRAINT RA_HICT_R_HICT_FK FOREIGN KEY
(
COMPONENT_TYPE
)
REFERENCES R_HSE_INCIDENT_COMP_TYPE
(
COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HICT_R_LANG_FK'
ALTER TABLE RA_HSE_INCIDENT_COMP_TYPE ADD CONSTRAINT RA_HICT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HICT_SRCD_FK'
ALTER TABLE RA_HSE_INCIDENT_COMP_TYPE ADD CONSTRAINT RA_HICT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HID_BA_FK'
ALTER TABLE RA_HSE_INCIDENT_DETAIL ADD CONSTRAINT RA_HID_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HID_PSWA_FK'
ALTER TABLE RA_HSE_INCIDENT_DETAIL ADD CONSTRAINT RA_HID_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HID_R_ART_FK'
ALTER TABLE RA_HSE_INCIDENT_DETAIL ADD CONSTRAINT RA_HID_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HID_R_ATY_FK'
ALTER TABLE RA_HSE_INCIDENT_DETAIL ADD CONSTRAINT RA_HID_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HID_R_HID_FK'
ALTER TABLE RA_HSE_INCIDENT_DETAIL ADD CONSTRAINT RA_HID_R_HID_FK FOREIGN KEY
(
DETAIL_TYPE
)
REFERENCES R_HSE_INCIDENT_DETAIL
(
DETAIL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HID_R_LANG_FK'
ALTER TABLE RA_HSE_INCIDENT_DETAIL ADD CONSTRAINT RA_HID_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HID_SRCD_FK'
ALTER TABLE RA_HSE_INCIDENT_DETAIL ADD CONSTRAINT RA_HID_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HRT_BA_FK'
ALTER TABLE RA_HSE_RESPONSE_TYPE ADD CONSTRAINT RA_HRT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HRT_PSWA_FK'
ALTER TABLE RA_HSE_RESPONSE_TYPE ADD CONSTRAINT RA_HRT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HRT_R_ART_FK'
ALTER TABLE RA_HSE_RESPONSE_TYPE ADD CONSTRAINT RA_HRT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HRT_R_ATY_FK'
ALTER TABLE RA_HSE_RESPONSE_TYPE ADD CONSTRAINT RA_HRT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HRT_R_HRT_FK'
ALTER TABLE RA_HSE_RESPONSE_TYPE ADD CONSTRAINT RA_HRT_R_HRT_FK FOREIGN KEY
(
ACTION_TYPE
)
REFERENCES R_HSE_RESPONSE_TYPE
(
ACTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HRT_R_LANG_FK'
ALTER TABLE RA_HSE_RESPONSE_TYPE ADD CONSTRAINT RA_HRT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HRT_SRCD_FK'
ALTER TABLE RA_HSE_RESPONSE_TYPE ADD CONSTRAINT RA_HRT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICM_BA_FK'
ALTER TABLE RA_IMAGE_CALIBRATE_METHOD ADD CONSTRAINT RA_ICM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICM_PSWA_FK'
ALTER TABLE RA_IMAGE_CALIBRATE_METHOD ADD CONSTRAINT RA_ICM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICM_R_ART_FK'
ALTER TABLE RA_IMAGE_CALIBRATE_METHOD ADD CONSTRAINT RA_ICM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICM_R_ATY_FK'
ALTER TABLE RA_IMAGE_CALIBRATE_METHOD ADD CONSTRAINT RA_ICM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICM_R_ICM_FK'
ALTER TABLE RA_IMAGE_CALIBRATE_METHOD ADD CONSTRAINT RA_ICM_R_ICM_FK FOREIGN KEY
(
CALIBRATE_METHOD
)
REFERENCES R_IMAGE_CALIBRATE_METHOD
(
CALIBRATE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICM_R_LANG_FK'
ALTER TABLE RA_IMAGE_CALIBRATE_METHOD ADD CONSTRAINT RA_ICM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICM_SRCD_FK'
ALTER TABLE RA_IMAGE_CALIBRATE_METHOD ADD CONSTRAINT RA_ICM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISET_BA_FK'
ALTER TABLE RA_IMAGE_SECTION_TYPE ADD CONSTRAINT RA_ISET_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISET_PSWA_FK'
ALTER TABLE RA_IMAGE_SECTION_TYPE ADD CONSTRAINT RA_ISET_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISET_R_ART_FK'
ALTER TABLE RA_IMAGE_SECTION_TYPE ADD CONSTRAINT RA_ISET_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISET_R_ATY_FK'
ALTER TABLE RA_IMAGE_SECTION_TYPE ADD CONSTRAINT RA_ISET_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISET_R_ISET_FK'
ALTER TABLE RA_IMAGE_SECTION_TYPE ADD CONSTRAINT RA_ISET_R_ISET_FK FOREIGN KEY
(
SECTION_TYPE
)
REFERENCES R_IMAGE_SECTION_TYPE
(
SECTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISET_R_LANG_FK'
ALTER TABLE RA_IMAGE_SECTION_TYPE ADD CONSTRAINT RA_ISET_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISET_SRCD_FK'
ALTER TABLE RA_IMAGE_SECTION_TYPE ADD CONSTRAINT RA_ISET_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IBR_BA_FK'
ALTER TABLE RA_INCIDENT_BA_ROLE ADD CONSTRAINT RA_IBR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IBR_PSWA_FK'
ALTER TABLE RA_INCIDENT_BA_ROLE ADD CONSTRAINT RA_IBR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IBR_R_ART_FK'
ALTER TABLE RA_INCIDENT_BA_ROLE ADD CONSTRAINT RA_IBR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IBR_R_ATY_FK'
ALTER TABLE RA_INCIDENT_BA_ROLE ADD CONSTRAINT RA_IBR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IBR_R_IBR_FK'
ALTER TABLE RA_INCIDENT_BA_ROLE ADD CONSTRAINT RA_IBR_R_IBR_FK FOREIGN KEY
(
BA_ROLE
)
REFERENCES R_INCIDENT_BA_ROLE
(
BA_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IBR_R_LANG_FK'
ALTER TABLE RA_INCIDENT_BA_ROLE ADD CONSTRAINT RA_IBR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IBR_SRCD_FK'
ALTER TABLE RA_INCIDENT_BA_ROLE ADD CONSTRAINT RA_IBR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICC_BA_FK'
ALTER TABLE RA_INCIDENT_CAUSE_CODE ADD CONSTRAINT RA_ICC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICC_PSWA_FK'
ALTER TABLE RA_INCIDENT_CAUSE_CODE ADD CONSTRAINT RA_ICC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICC_R_ART_FK'
ALTER TABLE RA_INCIDENT_CAUSE_CODE ADD CONSTRAINT RA_ICC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICC_R_ATY_FK'
ALTER TABLE RA_INCIDENT_CAUSE_CODE ADD CONSTRAINT RA_ICC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICC_R_ICC_FK'
ALTER TABLE RA_INCIDENT_CAUSE_CODE ADD CONSTRAINT RA_ICC_R_ICC_FK FOREIGN KEY
(
CAUSE_TYPE,
CAUSE_CODE
)
REFERENCES R_INCIDENT_CAUSE_CODE
(
CAUSE_TYPE,
CAUSE_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICC_R_ICT1_FK'
ALTER TABLE RA_INCIDENT_CAUSE_CODE ADD CONSTRAINT RA_ICC_R_ICT1_FK FOREIGN KEY
(
CAUSE_TYPE
)
REFERENCES R_INCIDENT_CAUSE_TYPE
(
CAUSE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICC_R_LANG_FK'
ALTER TABLE RA_INCIDENT_CAUSE_CODE ADD CONSTRAINT RA_ICC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICC_SRCD_FK'
ALTER TABLE RA_INCIDENT_CAUSE_CODE ADD CONSTRAINT RA_ICC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICT1_BA_FK'
ALTER TABLE RA_INCIDENT_CAUSE_TYPE ADD CONSTRAINT RA_ICT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICT1_PSWA_FK'
ALTER TABLE RA_INCIDENT_CAUSE_TYPE ADD CONSTRAINT RA_ICT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICT1_R_ART_FK'
ALTER TABLE RA_INCIDENT_CAUSE_TYPE ADD CONSTRAINT RA_ICT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICT1_R_ATY_FK'
ALTER TABLE RA_INCIDENT_CAUSE_TYPE ADD CONSTRAINT RA_ICT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICT1_R_ICT1_FK'
ALTER TABLE RA_INCIDENT_CAUSE_TYPE ADD CONSTRAINT RA_ICT1_R_ICT1_FK FOREIGN KEY
(
CAUSE_TYPE
)
REFERENCES R_INCIDENT_CAUSE_TYPE
(
CAUSE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICT1_R_LANG_FK'
ALTER TABLE RA_INCIDENT_CAUSE_TYPE ADD CONSTRAINT RA_ICT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICT1_SRCD_FK'
ALTER TABLE RA_INCIDENT_CAUSE_TYPE ADD CONSTRAINT RA_ICT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IIT_BA_FK'
ALTER TABLE RA_INCIDENT_INTERACT_TYPE ADD CONSTRAINT RA_IIT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IIT_PSWA_FK'
ALTER TABLE RA_INCIDENT_INTERACT_TYPE ADD CONSTRAINT RA_IIT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IIT_R_ART_FK'
ALTER TABLE RA_INCIDENT_INTERACT_TYPE ADD CONSTRAINT RA_IIT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IIT_R_ATY_FK'
ALTER TABLE RA_INCIDENT_INTERACT_TYPE ADD CONSTRAINT RA_IIT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IIT_R_IIT_FK'
ALTER TABLE RA_INCIDENT_INTERACT_TYPE ADD CONSTRAINT RA_IIT_R_IIT_FK FOREIGN KEY
(
INTERACTION_TYPE
)
REFERENCES R_INCIDENT_INTERACT_TYPE
(
INTERACTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IIT_R_LANG_FK'
ALTER TABLE RA_INCIDENT_INTERACT_TYPE ADD CONSTRAINT RA_IIT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IIT_SRCD_FK'
ALTER TABLE RA_INCIDENT_INTERACT_TYPE ADD CONSTRAINT RA_IIT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IRR_BA_FK'
ALTER TABLE RA_INCIDENT_RESP_RESULT ADD CONSTRAINT RA_IRR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IRR_PSWA_FK'
ALTER TABLE RA_INCIDENT_RESP_RESULT ADD CONSTRAINT RA_IRR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IRR_R_ART_FK'
ALTER TABLE RA_INCIDENT_RESP_RESULT ADD CONSTRAINT RA_IRR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IRR_R_ATY_FK'
ALTER TABLE RA_INCIDENT_RESP_RESULT ADD CONSTRAINT RA_IRR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IRR_R_IRR_FK'
ALTER TABLE RA_INCIDENT_RESP_RESULT ADD CONSTRAINT RA_IRR_R_IRR_FK FOREIGN KEY
(
RESPONSE_RESULT
)
REFERENCES R_INCIDENT_RESP_RESULT
(
RESPONSE_RESULT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IRR_R_LANG_FK'
ALTER TABLE RA_INCIDENT_RESP_RESULT ADD CONSTRAINT RA_IRR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IRR_SRCD_FK'
ALTER TABLE RA_INCIDENT_RESP_RESULT ADD CONSTRAINT RA_IRR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISUB_BA_FK'
ALTER TABLE RA_INCIDENT_SUBSTANCE ADD CONSTRAINT RA_ISUB_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISUB_PSWA_FK'
ALTER TABLE RA_INCIDENT_SUBSTANCE ADD CONSTRAINT RA_ISUB_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISUB_R_ART_FK'
ALTER TABLE RA_INCIDENT_SUBSTANCE ADD CONSTRAINT RA_ISUB_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISUB_R_ATY_FK'
ALTER TABLE RA_INCIDENT_SUBSTANCE ADD CONSTRAINT RA_ISUB_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISUB_R_ISUB_FK'
ALTER TABLE RA_INCIDENT_SUBSTANCE ADD CONSTRAINT RA_ISUB_R_ISUB_FK FOREIGN KEY
(
INCIDENT_SUBSTANCE
)
REFERENCES R_INCIDENT_SUBSTANCE
(
INCIDENT_SUBSTANCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISUB_R_LANG_FK'
ALTER TABLE RA_INCIDENT_SUBSTANCE ADD CONSTRAINT RA_ISUB_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISUB_SRCD_FK'
ALTER TABLE RA_INCIDENT_SUBSTANCE ADD CONSTRAINT RA_ISUB_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISRL_BA_FK'
ALTER TABLE RA_INCIDENT_SUBST_ROLE ADD CONSTRAINT RA_ISRL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISRL_PSWA_FK'
ALTER TABLE RA_INCIDENT_SUBST_ROLE ADD CONSTRAINT RA_ISRL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISRL_R_ART_FK'
ALTER TABLE RA_INCIDENT_SUBST_ROLE ADD CONSTRAINT RA_ISRL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISRL_R_ATY_FK'
ALTER TABLE RA_INCIDENT_SUBST_ROLE ADD CONSTRAINT RA_ISRL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISRL_R_ISRL_FK'
ALTER TABLE RA_INCIDENT_SUBST_ROLE ADD CONSTRAINT RA_ISRL_R_ISRL_FK FOREIGN KEY
(
SUBSTANCE_ROLE
)
REFERENCES R_INCIDENT_SUBST_ROLE
(
SUBSTANCE_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISRL_R_LANG_FK'
ALTER TABLE RA_INCIDENT_SUBST_ROLE ADD CONSTRAINT RA_ISRL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISRL_SRCD_FK'
ALTER TABLE RA_INCIDENT_SUBST_ROLE ADD CONSTRAINT RA_ISRL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IP_BA_FK'
ALTER TABLE RA_INFORMATION_PROCESS ADD CONSTRAINT RA_IP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IP_PSWA_FK'
ALTER TABLE RA_INFORMATION_PROCESS ADD CONSTRAINT RA_IP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IP_R_ART_FK'
ALTER TABLE RA_INFORMATION_PROCESS ADD CONSTRAINT RA_IP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IP_R_ATY_FK'
ALTER TABLE RA_INFORMATION_PROCESS ADD CONSTRAINT RA_IP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IP_R_IP_FK'
ALTER TABLE RA_INFORMATION_PROCESS ADD CONSTRAINT RA_IP_R_IP_FK FOREIGN KEY
(
INFORMATION_PROCESS
)
REFERENCES R_INFORMATION_PROCESS
(
INFORMATION_PROCESS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IP_R_LANG_FK'
ALTER TABLE RA_INFORMATION_PROCESS ADD CONSTRAINT RA_IP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IP_SRCD_FK'
ALTER TABLE RA_INFORMATION_PROCESS ADD CONSTRAINT RA_IP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INT_BA_FK'
ALTER TABLE RA_INPUT_TYPE ADD CONSTRAINT RA_INT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INT_PSWA_FK'
ALTER TABLE RA_INPUT_TYPE ADD CONSTRAINT RA_INT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INT_R_ART_FK'
ALTER TABLE RA_INPUT_TYPE ADD CONSTRAINT RA_INT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INT_R_ATY_FK'
ALTER TABLE RA_INPUT_TYPE ADD CONSTRAINT RA_INT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INT_R_INT_FK'
ALTER TABLE RA_INPUT_TYPE ADD CONSTRAINT RA_INT_R_INT_FK FOREIGN KEY
(
INPUT_TYPE
)
REFERENCES R_INPUT_TYPE
(
INPUT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INT_R_LANG_FK'
ALTER TABLE RA_INPUT_TYPE ADD CONSTRAINT RA_INT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INT_SRCD_FK'
ALTER TABLE RA_INPUT_TYPE ADD CONSTRAINT RA_INT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICT_BA_FK'
ALTER TABLE RA_INSP_COMP_TYPE ADD CONSTRAINT RA_ICT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICT_PSWA_FK'
ALTER TABLE RA_INSP_COMP_TYPE ADD CONSTRAINT RA_ICT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICT_R_ART_FK'
ALTER TABLE RA_INSP_COMP_TYPE ADD CONSTRAINT RA_ICT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICT_R_ATY_FK'
ALTER TABLE RA_INSP_COMP_TYPE ADD CONSTRAINT RA_ICT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICT_R_ICT_FK'
ALTER TABLE RA_INSP_COMP_TYPE ADD CONSTRAINT RA_ICT_R_ICT_FK FOREIGN KEY
(
COMPONENT_TYPE
)
REFERENCES R_INSP_COMP_TYPE
(
COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICT_R_LANG_FK'
ALTER TABLE RA_INSP_COMP_TYPE ADD CONSTRAINT RA_ICT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICT_SRCD_FK'
ALTER TABLE RA_INSP_COMP_TYPE ADD CONSTRAINT RA_ICT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IS_BA_FK'
ALTER TABLE RA_INSP_STATUS ADD CONSTRAINT RA_IS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IS_PSWA_FK'
ALTER TABLE RA_INSP_STATUS ADD CONSTRAINT RA_IS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IS_R_ART_FK'
ALTER TABLE RA_INSP_STATUS ADD CONSTRAINT RA_IS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IS_R_ATY_FK'
ALTER TABLE RA_INSP_STATUS ADD CONSTRAINT RA_IS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IS_R_IS_FK'
ALTER TABLE RA_INSP_STATUS ADD CONSTRAINT RA_IS_R_IS_FK FOREIGN KEY
(
INSPECTION_STATUS
)
REFERENCES R_INSP_STATUS
(
INSPECTION_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IS_R_LANG_FK'
ALTER TABLE RA_INSP_STATUS ADD CONSTRAINT RA_IS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IS_SRCD_FK'
ALTER TABLE RA_INSP_STATUS ADD CONSTRAINT RA_IS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICT2_BA_FK'
ALTER TABLE RA_INSTRUMENT_COMP_TYPE ADD CONSTRAINT RA_ICT2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICT2_PSWA_FK'
ALTER TABLE RA_INSTRUMENT_COMP_TYPE ADD CONSTRAINT RA_ICT2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICT2_R_ART_FK'
ALTER TABLE RA_INSTRUMENT_COMP_TYPE ADD CONSTRAINT RA_ICT2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICT2_R_ATY_FK'
ALTER TABLE RA_INSTRUMENT_COMP_TYPE ADD CONSTRAINT RA_ICT2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICT2_R_ICT2_FK'
ALTER TABLE RA_INSTRUMENT_COMP_TYPE ADD CONSTRAINT RA_ICT2_R_ICT2_FK FOREIGN KEY
(
INSTRUMENT_COMPONENT_TYPE
)
REFERENCES R_INSTRUMENT_COMP_TYPE
(
INSTRUMENT_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICT2_R_LANG_FK'
ALTER TABLE RA_INSTRUMENT_COMP_TYPE ADD CONSTRAINT RA_ICT2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ICT2_SRCD_FK'
ALTER TABLE RA_INSTRUMENT_COMP_TYPE ADD CONSTRAINT RA_ICT2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INST_BA_FK'
ALTER TABLE RA_INSTRUMENT_TYPE ADD CONSTRAINT RA_INST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INST_PSWA_FK'
ALTER TABLE RA_INSTRUMENT_TYPE ADD CONSTRAINT RA_INST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INST_R_ART_FK'
ALTER TABLE RA_INSTRUMENT_TYPE ADD CONSTRAINT RA_INST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INST_R_ATY_FK'
ALTER TABLE RA_INSTRUMENT_TYPE ADD CONSTRAINT RA_INST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INST_R_INST_FK'
ALTER TABLE RA_INSTRUMENT_TYPE ADD CONSTRAINT RA_INST_R_INST_FK FOREIGN KEY
(
LAND_INSTRUMENT_TYPE
)
REFERENCES R_INSTRUMENT_TYPE
(
LAND_INSTRUMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INST_R_LANG_FK'
ALTER TABLE RA_INSTRUMENT_TYPE ADD CONSTRAINT RA_INST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INST_SRCD_FK'
ALTER TABLE RA_INSTRUMENT_TYPE ADD CONSTRAINT RA_INST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INSDTC_BA_FK'
ALTER TABLE RA_INST_DETAIL_CODE ADD CONSTRAINT RA_INSDTC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INSDTC_PSWA_FK'
ALTER TABLE RA_INST_DETAIL_CODE ADD CONSTRAINT RA_INSDTC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INSDTC_R_ART_FK'
ALTER TABLE RA_INST_DETAIL_CODE ADD CONSTRAINT RA_INSDTC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INSDTC_R_ATY_FK'
ALTER TABLE RA_INST_DETAIL_CODE ADD CONSTRAINT RA_INSDTC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INSDTC_R_INSDTC_FK'
ALTER TABLE RA_INST_DETAIL_CODE ADD CONSTRAINT RA_INSDTC_R_INSDTC_FK FOREIGN KEY
(
INSTRUMENT_DETAIL_TYPE,
INSTRUMENT_DETAIL_CODE
)
REFERENCES R_INST_DETAIL_CODE
(
INSTRUMENT_DETAIL_TYPE,
INSTRUMENT_DETAIL_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INSDTC_R_INSDT_FK'
ALTER TABLE RA_INST_DETAIL_CODE ADD CONSTRAINT RA_INSDTC_R_INSDT_FK FOREIGN KEY
(
INSTRUMENT_DETAIL_TYPE
)
REFERENCES R_INST_DETAIL_TYPE
(
INSTRUMENT_DETAIL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INSDTC_R_LANG_FK'
ALTER TABLE RA_INST_DETAIL_CODE ADD CONSTRAINT RA_INSDTC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INSDTC_SRCD_FK'
ALTER TABLE RA_INST_DETAIL_CODE ADD CONSTRAINT RA_INSDTC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INSDRVT_BA_FK'
ALTER TABLE RA_INST_DETAIL_REF_VALUE ADD CONSTRAINT RA_INSDRVT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INSDRVT_PSWA_FK'
ALTER TABLE RA_INST_DETAIL_REF_VALUE ADD CONSTRAINT RA_INSDRVT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INSDRVT_R_ART_FK'
ALTER TABLE RA_INST_DETAIL_REF_VALUE ADD CONSTRAINT RA_INSDRVT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INSDRVT_R_ATY_FK'
ALTER TABLE RA_INST_DETAIL_REF_VALUE ADD CONSTRAINT RA_INSDRVT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INSDRVT_R_INSDRVT_FK'
ALTER TABLE RA_INST_DETAIL_REF_VALUE ADD CONSTRAINT RA_INSDRVT_R_INSDRVT_FK FOREIGN KEY
(
REFERENCE_VALUE_TYPE
)
REFERENCES R_INST_DETAIL_REF_VALUE
(
REFERENCE_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INSDRVT_R_LANG_FK'
ALTER TABLE RA_INST_DETAIL_REF_VALUE ADD CONSTRAINT RA_INSDRVT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INSDRVT_SRCD_FK'
ALTER TABLE RA_INST_DETAIL_REF_VALUE ADD CONSTRAINT RA_INSDRVT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INSDT_BA_FK'
ALTER TABLE RA_INST_DETAIL_TYPE ADD CONSTRAINT RA_INSDT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INSDT_PSWA_FK'
ALTER TABLE RA_INST_DETAIL_TYPE ADD CONSTRAINT RA_INSDT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INSDT_R_ART_FK'
ALTER TABLE RA_INST_DETAIL_TYPE ADD CONSTRAINT RA_INSDT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INSDT_R_ATY_FK'
ALTER TABLE RA_INST_DETAIL_TYPE ADD CONSTRAINT RA_INSDT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INSDT_R_INSDT_FK'
ALTER TABLE RA_INST_DETAIL_TYPE ADD CONSTRAINT RA_INSDT_R_INSDT_FK FOREIGN KEY
(
INSTRUMENT_DETAIL_TYPE
)
REFERENCES R_INST_DETAIL_TYPE
(
INSTRUMENT_DETAIL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INSDT_R_LANG_FK'
ALTER TABLE RA_INST_DETAIL_TYPE ADD CONSTRAINT RA_INSDT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_INSDT_SRCD_FK'
ALTER TABLE RA_INST_DETAIL_TYPE ADD CONSTRAINT RA_INSDT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IOT_BA_FK'
ALTER TABLE RA_INTERP_ORIGIN_TYPE ADD CONSTRAINT RA_IOT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IOT_PSWA_FK'
ALTER TABLE RA_INTERP_ORIGIN_TYPE ADD CONSTRAINT RA_IOT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IOT_R_ART_FK'
ALTER TABLE RA_INTERP_ORIGIN_TYPE ADD CONSTRAINT RA_IOT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IOT_R_ATY_FK'
ALTER TABLE RA_INTERP_ORIGIN_TYPE ADD CONSTRAINT RA_IOT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IOT_R_IOT_FK'
ALTER TABLE RA_INTERP_ORIGIN_TYPE ADD CONSTRAINT RA_IOT_R_IOT_FK FOREIGN KEY
(
ORIGIN_TYPE
)
REFERENCES R_INTERP_ORIGIN_TYPE
(
ORIGIN_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IOT_R_LANG_FK'
ALTER TABLE RA_INTERP_ORIGIN_TYPE ADD CONSTRAINT RA_IOT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IOT_SRCD_FK'
ALTER TABLE RA_INTERP_ORIGIN_TYPE ADD CONSTRAINT RA_IOT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IT_BA_FK'
ALTER TABLE RA_INTERP_TYPE ADD CONSTRAINT RA_IT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IT_PSWA_FK'
ALTER TABLE RA_INTERP_TYPE ADD CONSTRAINT RA_IT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IT_R_ART_FK'
ALTER TABLE RA_INTERP_TYPE ADD CONSTRAINT RA_IT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IT_R_ATY_FK'
ALTER TABLE RA_INTERP_TYPE ADD CONSTRAINT RA_IT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IT_R_IT_FK'
ALTER TABLE RA_INTERP_TYPE ADD CONSTRAINT RA_IT_R_IT_FK FOREIGN KEY
(
INTERP_TYPE
)
REFERENCES R_INTERP_TYPE
(
INTERP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IT_R_LANG_FK'
ALTER TABLE RA_INTERP_TYPE ADD CONSTRAINT RA_IT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IT_SRCD_FK'
ALTER TABLE RA_INTERP_TYPE ADD CONSTRAINT RA_IT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISC_BA_FK'
ALTER TABLE RA_INT_SET_COMPONENT ADD CONSTRAINT RA_ISC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISC_PSWA_FK'
ALTER TABLE RA_INT_SET_COMPONENT ADD CONSTRAINT RA_ISC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISC_R_ART_FK'
ALTER TABLE RA_INT_SET_COMPONENT ADD CONSTRAINT RA_ISC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISC_R_ATY_FK'
ALTER TABLE RA_INT_SET_COMPONENT ADD CONSTRAINT RA_ISC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISC_R_ISC_FK'
ALTER TABLE RA_INT_SET_COMPONENT ADD CONSTRAINT RA_ISC_R_ISC_FK FOREIGN KEY
(
COMPONENT_TYPE
)
REFERENCES R_INT_SET_COMPONENT
(
COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISC_R_LANG_FK'
ALTER TABLE RA_INT_SET_COMPONENT ADD CONSTRAINT RA_ISC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISC_SRCD_FK'
ALTER TABLE RA_INT_SET_COMPONENT ADD CONSTRAINT RA_ISC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISR_BA_FK'
ALTER TABLE RA_INT_SET_ROLE ADD CONSTRAINT RA_ISR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISR_PSWA_FK'
ALTER TABLE RA_INT_SET_ROLE ADD CONSTRAINT RA_ISR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISR_R_ART_FK'
ALTER TABLE RA_INT_SET_ROLE ADD CONSTRAINT RA_ISR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISR_R_ATY_FK'
ALTER TABLE RA_INT_SET_ROLE ADD CONSTRAINT RA_ISR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISR_R_ISR_FK'
ALTER TABLE RA_INT_SET_ROLE ADD CONSTRAINT RA_ISR_R_ISR_FK FOREIGN KEY
(
INTEREST_SET_ROLE
)
REFERENCES R_INT_SET_ROLE
(
INTEREST_SET_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISR_R_LANG_FK'
ALTER TABLE RA_INT_SET_ROLE ADD CONSTRAINT RA_ISR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISR_SRCD_FK'
ALTER TABLE RA_INT_SET_ROLE ADD CONSTRAINT RA_ISR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISS_BA_FK'
ALTER TABLE RA_INT_SET_STATUS ADD CONSTRAINT RA_ISS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISS_PSWA_FK'
ALTER TABLE RA_INT_SET_STATUS ADD CONSTRAINT RA_ISS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISS_R_ART_FK'
ALTER TABLE RA_INT_SET_STATUS ADD CONSTRAINT RA_ISS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISS_R_ATY_FK'
ALTER TABLE RA_INT_SET_STATUS ADD CONSTRAINT RA_ISS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISS_R_ISS_FK'
ALTER TABLE RA_INT_SET_STATUS ADD CONSTRAINT RA_ISS_R_ISS_FK FOREIGN KEY
(
STATUS_TYPE,
STATUS
)
REFERENCES R_INT_SET_STATUS
(
STATUS_TYPE,
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISS_R_ISST_FK'
ALTER TABLE RA_INT_SET_STATUS ADD CONSTRAINT RA_ISS_R_ISST_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_INT_SET_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISS_R_LANG_FK'
ALTER TABLE RA_INT_SET_STATUS ADD CONSTRAINT RA_ISS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISS_SRCD_FK'
ALTER TABLE RA_INT_SET_STATUS ADD CONSTRAINT RA_ISS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISST_BA_FK'
ALTER TABLE RA_INT_SET_STATUS_TYPE ADD CONSTRAINT RA_ISST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISST_PSWA_FK'
ALTER TABLE RA_INT_SET_STATUS_TYPE ADD CONSTRAINT RA_ISST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISST_R_ART_FK'
ALTER TABLE RA_INT_SET_STATUS_TYPE ADD CONSTRAINT RA_ISST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISST_R_ATY_FK'
ALTER TABLE RA_INT_SET_STATUS_TYPE ADD CONSTRAINT RA_ISST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISST_R_ISST_FK'
ALTER TABLE RA_INT_SET_STATUS_TYPE ADD CONSTRAINT RA_ISST_R_ISST_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_INT_SET_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISST_R_LANG_FK'
ALTER TABLE RA_INT_SET_STATUS_TYPE ADD CONSTRAINT RA_ISST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISST_SRCD_FK'
ALTER TABLE RA_INT_SET_STATUS_TYPE ADD CONSTRAINT RA_ISST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISTR_BA_FK'
ALTER TABLE RA_INT_SET_TRIGGER ADD CONSTRAINT RA_ISTR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISTR_PSWA_FK'
ALTER TABLE RA_INT_SET_TRIGGER ADD CONSTRAINT RA_ISTR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISTR_R_ART_FK'
ALTER TABLE RA_INT_SET_TRIGGER ADD CONSTRAINT RA_ISTR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISTR_R_ATY_FK'
ALTER TABLE RA_INT_SET_TRIGGER ADD CONSTRAINT RA_ISTR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISTR_R_ISTR_FK'
ALTER TABLE RA_INT_SET_TRIGGER ADD CONSTRAINT RA_ISTR_R_ISTR_FK FOREIGN KEY
(
TRIGGER_EVENT
)
REFERENCES R_INT_SET_TRIGGER
(
TRIGGER_EVENT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISTR_R_LANG_FK'
ALTER TABLE RA_INT_SET_TRIGGER ADD CONSTRAINT RA_ISTR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISTR_SRCD_FK'
ALTER TABLE RA_INT_SET_TRIGGER ADD CONSTRAINT RA_ISTR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IST_BA_FK'
ALTER TABLE RA_INT_SET_TYPE ADD CONSTRAINT RA_IST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IST_PSWA_FK'
ALTER TABLE RA_INT_SET_TYPE ADD CONSTRAINT RA_IST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IST_R_ART_FK'
ALTER TABLE RA_INT_SET_TYPE ADD CONSTRAINT RA_IST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IST_R_ATY_FK'
ALTER TABLE RA_INT_SET_TYPE ADD CONSTRAINT RA_IST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IST_R_IST_FK'
ALTER TABLE RA_INT_SET_TYPE ADD CONSTRAINT RA_IST_R_IST_FK FOREIGN KEY
(
INTEREST_SET_TYPE
)
REFERENCES R_INT_SET_TYPE
(
INTEREST_SET_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IST_R_LANG_FK'
ALTER TABLE RA_INT_SET_TYPE ADD CONSTRAINT RA_IST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IST_SRCD_FK'
ALTER TABLE RA_INT_SET_TYPE ADD CONSTRAINT RA_IST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISXT_BA_FK'
ALTER TABLE RA_INT_SET_XREF_TYPE ADD CONSTRAINT RA_ISXT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISXT_PSWA_FK'
ALTER TABLE RA_INT_SET_XREF_TYPE ADD CONSTRAINT RA_ISXT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISXT_R_ART_FK'
ALTER TABLE RA_INT_SET_XREF_TYPE ADD CONSTRAINT RA_ISXT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISXT_R_ATY_FK'
ALTER TABLE RA_INT_SET_XREF_TYPE ADD CONSTRAINT RA_ISXT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISXT_R_ISXT_FK'
ALTER TABLE RA_INT_SET_XREF_TYPE ADD CONSTRAINT RA_ISXT_R_ISXT_FK FOREIGN KEY
(
INT_SET_XREF_TYPE
)
REFERENCES R_INT_SET_XREF_TYPE
(
INT_SET_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISXT_R_LANG_FK'
ALTER TABLE RA_INT_SET_XREF_TYPE ADD CONSTRAINT RA_ISXT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISXT_SRCD_FK'
ALTER TABLE RA_INT_SET_XREF_TYPE ADD CONSTRAINT RA_ISXT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IMT_BA_FK'
ALTER TABLE RA_INV_MATERIAL_TYPE ADD CONSTRAINT RA_IMT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IMT_PSWA_FK'
ALTER TABLE RA_INV_MATERIAL_TYPE ADD CONSTRAINT RA_IMT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IMT_R_ART_FK'
ALTER TABLE RA_INV_MATERIAL_TYPE ADD CONSTRAINT RA_IMT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IMT_R_ATY_FK'
ALTER TABLE RA_INV_MATERIAL_TYPE ADD CONSTRAINT RA_IMT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IMT_R_IMT_FK'
ALTER TABLE RA_INV_MATERIAL_TYPE ADD CONSTRAINT RA_IMT_R_IMT_FK FOREIGN KEY
(
INVENTORY_MATERIAL_TYPE
)
REFERENCES R_INV_MATERIAL_TYPE
(
INVENTORY_MATERIAL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IMT_R_LANG_FK'
ALTER TABLE RA_INV_MATERIAL_TYPE ADD CONSTRAINT RA_IMT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IMT_SRCD_FK'
ALTER TABLE RA_INV_MATERIAL_TYPE ADD CONSTRAINT RA_IMT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IC_BA_FK'
ALTER TABLE RA_ITEM_CATEGORY ADD CONSTRAINT RA_IC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IC_PSWA_FK'
ALTER TABLE RA_ITEM_CATEGORY ADD CONSTRAINT RA_IC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IC_R_ART_FK'
ALTER TABLE RA_ITEM_CATEGORY ADD CONSTRAINT RA_IC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IC_R_ATY_FK'
ALTER TABLE RA_ITEM_CATEGORY ADD CONSTRAINT RA_IC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IC_R_IC_FK'
ALTER TABLE RA_ITEM_CATEGORY ADD CONSTRAINT RA_IC_R_IC_FK FOREIGN KEY
(
ITEM_CATEGORY
)
REFERENCES R_ITEM_CATEGORY
(
ITEM_CATEGORY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IC_R_LANG_FK'
ALTER TABLE RA_ITEM_CATEGORY ADD CONSTRAINT RA_IC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_IC_SRCD_FK'
ALTER TABLE RA_ITEM_CATEGORY ADD CONSTRAINT RA_IC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISC1_BA_FK'
ALTER TABLE RA_ITEM_SUB_CATEGORY ADD CONSTRAINT RA_ISC1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISC1_PSWA_FK'
ALTER TABLE RA_ITEM_SUB_CATEGORY ADD CONSTRAINT RA_ISC1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISC1_R_ART_FK'
ALTER TABLE RA_ITEM_SUB_CATEGORY ADD CONSTRAINT RA_ISC1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISC1_R_ATY_FK'
ALTER TABLE RA_ITEM_SUB_CATEGORY ADD CONSTRAINT RA_ISC1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISC1_R_IC_FK'
ALTER TABLE RA_ITEM_SUB_CATEGORY ADD CONSTRAINT RA_ISC1_R_IC_FK FOREIGN KEY
(
ITEM_CATEGORY
)
REFERENCES R_ITEM_CATEGORY
(
ITEM_CATEGORY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISC1_R_ISC1_FK'
ALTER TABLE RA_ITEM_SUB_CATEGORY ADD CONSTRAINT RA_ISC1_R_ISC1_FK FOREIGN KEY
(
ITEM_CATEGORY,
ITEM_SUB_CATEGORY
)
REFERENCES R_ITEM_SUB_CATEGORY
(
ITEM_CATEGORY,
ITEM_SUB_CATEGORY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISC1_R_LANG_FK'
ALTER TABLE RA_ITEM_SUB_CATEGORY ADD CONSTRAINT RA_ISC1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ISC1_SRCD_FK'
ALTER TABLE RA_ITEM_SUB_CATEGORY ADD CONSTRAINT RA_ISC1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LAM_BA_FK'
ALTER TABLE RA_LAND_ACQTN_METHOD ADD CONSTRAINT RA_LAM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LAM_PSWA_FK'
ALTER TABLE RA_LAND_ACQTN_METHOD ADD CONSTRAINT RA_LAM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LAM_R_ART_FK'
ALTER TABLE RA_LAND_ACQTN_METHOD ADD CONSTRAINT RA_LAM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LAM_R_ATY_FK'
ALTER TABLE RA_LAND_ACQTN_METHOD ADD CONSTRAINT RA_LAM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LAM_R_LAM_FK'
ALTER TABLE RA_LAND_ACQTN_METHOD ADD CONSTRAINT RA_LAM_R_LAM_FK FOREIGN KEY
(
LAND_ACQTN_METHOD
)
REFERENCES R_LAND_ACQTN_METHOD
(
LAND_ACQTN_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LAM_R_LANG_FK'
ALTER TABLE RA_LAND_ACQTN_METHOD ADD CONSTRAINT RA_LAM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LAM_SRCD_FK'
ALTER TABLE RA_LAND_ACQTN_METHOD ADD CONSTRAINT RA_LAM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LAT_BA_FK'
ALTER TABLE RA_LAND_AGREE_TYPE ADD CONSTRAINT RA_LAT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LAT_PSWA_FK'
ALTER TABLE RA_LAND_AGREE_TYPE ADD CONSTRAINT RA_LAT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LAT_R_ART_FK'
ALTER TABLE RA_LAND_AGREE_TYPE ADD CONSTRAINT RA_LAT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LAT_R_ATY_FK'
ALTER TABLE RA_LAND_AGREE_TYPE ADD CONSTRAINT RA_LAT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LAT_R_LAT_FK'
ALTER TABLE RA_LAND_AGREE_TYPE ADD CONSTRAINT RA_LAT_R_LAT_FK FOREIGN KEY
(
LAND_AGREE_TYPE
)
REFERENCES R_LAND_AGREE_TYPE
(
LAND_AGREE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LAT_R_LANG_FK'
ALTER TABLE RA_LAND_AGREE_TYPE ADD CONSTRAINT RA_LAT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LAT_SRCD_FK'
ALTER TABLE RA_LAND_AGREE_TYPE ADD CONSTRAINT RA_LAT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBT1_BA_FK'
ALTER TABLE RA_LAND_BIDDER_TYPE ADD CONSTRAINT RA_LBT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBT1_PSWA_FK'
ALTER TABLE RA_LAND_BIDDER_TYPE ADD CONSTRAINT RA_LBT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBT1_R_ART_FK'
ALTER TABLE RA_LAND_BIDDER_TYPE ADD CONSTRAINT RA_LBT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBT1_R_ATY_FK'
ALTER TABLE RA_LAND_BIDDER_TYPE ADD CONSTRAINT RA_LBT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBT1_R_LBT1_FK'
ALTER TABLE RA_LAND_BIDDER_TYPE ADD CONSTRAINT RA_LBT1_R_LBT1_FK FOREIGN KEY
(
LAND_BIDDER_TYPE
)
REFERENCES R_LAND_BIDDER_TYPE
(
LAND_BIDDER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBT1_R_LANG_FK'
ALTER TABLE RA_LAND_BIDDER_TYPE ADD CONSTRAINT RA_LBT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBT1_SRCD_FK'
ALTER TABLE RA_LAND_BIDDER_TYPE ADD CONSTRAINT RA_LBT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBS_BA_FK'
ALTER TABLE RA_LAND_BID_STATUS ADD CONSTRAINT RA_LBS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBS_PSWA_FK'
ALTER TABLE RA_LAND_BID_STATUS ADD CONSTRAINT RA_LBS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBS_R_ART_FK'
ALTER TABLE RA_LAND_BID_STATUS ADD CONSTRAINT RA_LBS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBS_R_ATY_FK'
ALTER TABLE RA_LAND_BID_STATUS ADD CONSTRAINT RA_LBS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBS_R_LBS_FK'
ALTER TABLE RA_LAND_BID_STATUS ADD CONSTRAINT RA_LBS_R_LBS_FK FOREIGN KEY
(
LAND_BID_STATUS
)
REFERENCES R_LAND_BID_STATUS
(
LAND_BID_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBS_R_LANG_FK'
ALTER TABLE RA_LAND_BID_STATUS ADD CONSTRAINT RA_LBS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBS_SRCD_FK'
ALTER TABLE RA_LAND_BID_STATUS ADD CONSTRAINT RA_LBS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBT_BA_FK'
ALTER TABLE RA_LAND_BID_TYPE ADD CONSTRAINT RA_LBT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBT_PSWA_FK'
ALTER TABLE RA_LAND_BID_TYPE ADD CONSTRAINT RA_LBT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBT_R_ART_FK'
ALTER TABLE RA_LAND_BID_TYPE ADD CONSTRAINT RA_LBT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBT_R_ATY_FK'
ALTER TABLE RA_LAND_BID_TYPE ADD CONSTRAINT RA_LBT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBT_R_LBT_FK'
ALTER TABLE RA_LAND_BID_TYPE ADD CONSTRAINT RA_LBT_R_LBT_FK FOREIGN KEY
(
LAND_BID_TYPE
)
REFERENCES R_LAND_BID_TYPE
(
LAND_BID_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBT_R_LANG_FK'
ALTER TABLE RA_LAND_BID_TYPE ADD CONSTRAINT RA_LBT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBT_SRCD_FK'
ALTER TABLE RA_LAND_BID_TYPE ADD CONSTRAINT RA_LBT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCA_BA_FK'
ALTER TABLE RA_LAND_CASE_ACTION ADD CONSTRAINT RA_LCA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCA_PSWA_FK'
ALTER TABLE RA_LAND_CASE_ACTION ADD CONSTRAINT RA_LCA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCA_R_ART_FK'
ALTER TABLE RA_LAND_CASE_ACTION ADD CONSTRAINT RA_LCA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCA_R_ATY_FK'
ALTER TABLE RA_LAND_CASE_ACTION ADD CONSTRAINT RA_LCA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCA_R_LCA_FK'
ALTER TABLE RA_LAND_CASE_ACTION ADD CONSTRAINT RA_LCA_R_LCA_FK FOREIGN KEY
(
LAND_CASE_ACTION
)
REFERENCES R_LAND_CASE_ACTION
(
LAND_CASE_ACTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCA_R_LANG_FK'
ALTER TABLE RA_LAND_CASE_ACTION ADD CONSTRAINT RA_LCA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCA_SRCD_FK'
ALTER TABLE RA_LAND_CASE_ACTION ADD CONSTRAINT RA_LCA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCT_BA_FK'
ALTER TABLE RA_LAND_CASE_TYPE ADD CONSTRAINT RA_LCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCT_PSWA_FK'
ALTER TABLE RA_LAND_CASE_TYPE ADD CONSTRAINT RA_LCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCT_R_ART_FK'
ALTER TABLE RA_LAND_CASE_TYPE ADD CONSTRAINT RA_LCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCT_R_ATY_FK'
ALTER TABLE RA_LAND_CASE_TYPE ADD CONSTRAINT RA_LCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCT_R_LCT_FK'
ALTER TABLE RA_LAND_CASE_TYPE ADD CONSTRAINT RA_LCT_R_LCT_FK FOREIGN KEY
(
LAND_CASE_TYPE
)
REFERENCES R_LAND_CASE_TYPE
(
LAND_CASE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCT_R_LANG_FK'
ALTER TABLE RA_LAND_CASE_TYPE ADD CONSTRAINT RA_LCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCT_SRCD_FK'
ALTER TABLE RA_LAND_CASE_TYPE ADD CONSTRAINT RA_LCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCBT_BA_FK'
ALTER TABLE RA_LAND_CASH_BID_TYPE ADD CONSTRAINT RA_LCBT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCBT_PSWA_FK'
ALTER TABLE RA_LAND_CASH_BID_TYPE ADD CONSTRAINT RA_LCBT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCBT_R_ART_FK'
ALTER TABLE RA_LAND_CASH_BID_TYPE ADD CONSTRAINT RA_LCBT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCBT_R_ATY_FK'
ALTER TABLE RA_LAND_CASH_BID_TYPE ADD CONSTRAINT RA_LCBT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCBT_R_LCBT_FK'
ALTER TABLE RA_LAND_CASH_BID_TYPE ADD CONSTRAINT RA_LCBT_R_LCBT_FK FOREIGN KEY
(
CASH_BID_TYPE
)
REFERENCES R_LAND_CASH_BID_TYPE
(
CASH_BID_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCBT_R_LANG_FK'
ALTER TABLE RA_LAND_CASH_BID_TYPE ADD CONSTRAINT RA_LCBT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCBT_SRCD_FK'
ALTER TABLE RA_LAND_CASH_BID_TYPE ADD CONSTRAINT RA_LCBT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCT1_BA_FK'
ALTER TABLE RA_LAND_COMPONENT_TYPE ADD CONSTRAINT RA_LCT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCT1_PSWA_FK'
ALTER TABLE RA_LAND_COMPONENT_TYPE ADD CONSTRAINT RA_LCT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCT1_R_ART_FK'
ALTER TABLE RA_LAND_COMPONENT_TYPE ADD CONSTRAINT RA_LCT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCT1_R_ATY_FK'
ALTER TABLE RA_LAND_COMPONENT_TYPE ADD CONSTRAINT RA_LCT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCT1_R_LCT1_FK'
ALTER TABLE RA_LAND_COMPONENT_TYPE ADD CONSTRAINT RA_LCT1_R_LCT1_FK FOREIGN KEY
(
LAND_COMPONENT_TYPE
)
REFERENCES R_LAND_COMPONENT_TYPE
(
LAND_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCT1_R_LANG_FK'
ALTER TABLE RA_LAND_COMPONENT_TYPE ADD CONSTRAINT RA_LCT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCT1_SRCD_FK'
ALTER TABLE RA_LAND_COMPONENT_TYPE ADD CONSTRAINT RA_LCT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LLT_BA_FK'
ALTER TABLE RA_LAND_LESSOR_TYPE ADD CONSTRAINT RA_LLT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LLT_PSWA_FK'
ALTER TABLE RA_LAND_LESSOR_TYPE ADD CONSTRAINT RA_LLT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LLT_R_ART_FK'
ALTER TABLE RA_LAND_LESSOR_TYPE ADD CONSTRAINT RA_LLT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LLT_R_ATY_FK'
ALTER TABLE RA_LAND_LESSOR_TYPE ADD CONSTRAINT RA_LLT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LLT_R_LLT_FK'
ALTER TABLE RA_LAND_LESSOR_TYPE ADD CONSTRAINT RA_LLT_R_LLT_FK FOREIGN KEY
(
LAND_LESSOR_TYPE
)
REFERENCES R_LAND_LESSOR_TYPE
(
LAND_LESSOR_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LLT_R_LANG_FK'
ALTER TABLE RA_LAND_LESSOR_TYPE ADD CONSTRAINT RA_LLT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LLT_SRCD_FK'
ALTER TABLE RA_LAND_LESSOR_TYPE ADD CONSTRAINT RA_LLT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOS_BA_FK'
ALTER TABLE RA_LAND_OFFRING_STATUS ADD CONSTRAINT RA_LOS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOS_PSWA_FK'
ALTER TABLE RA_LAND_OFFRING_STATUS ADD CONSTRAINT RA_LOS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOS_R_ART_FK'
ALTER TABLE RA_LAND_OFFRING_STATUS ADD CONSTRAINT RA_LOS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOS_R_ATY_FK'
ALTER TABLE RA_LAND_OFFRING_STATUS ADD CONSTRAINT RA_LOS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOS_R_LOS_FK'
ALTER TABLE RA_LAND_OFFRING_STATUS ADD CONSTRAINT RA_LOS_R_LOS_FK FOREIGN KEY
(
LAND_OFFRING_STATUS
)
REFERENCES R_LAND_OFFRING_STATUS
(
LAND_OFFRING_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOS_R_LANG_FK'
ALTER TABLE RA_LAND_OFFRING_STATUS ADD CONSTRAINT RA_LOS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOS_SRCD_FK'
ALTER TABLE RA_LAND_OFFRING_STATUS ADD CONSTRAINT RA_LOS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOT1_BA_FK'
ALTER TABLE RA_LAND_OFFRING_TYPE ADD CONSTRAINT RA_LOT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOT1_PSWA_FK'
ALTER TABLE RA_LAND_OFFRING_TYPE ADD CONSTRAINT RA_LOT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOT1_R_ART_FK'
ALTER TABLE RA_LAND_OFFRING_TYPE ADD CONSTRAINT RA_LOT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOT1_R_ATY_FK'
ALTER TABLE RA_LAND_OFFRING_TYPE ADD CONSTRAINT RA_LOT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOT1_R_LOT1_FK'
ALTER TABLE RA_LAND_OFFRING_TYPE ADD CONSTRAINT RA_LOT1_R_LOT1_FK FOREIGN KEY
(
LAND_OFFRING_TYPE
)
REFERENCES R_LAND_OFFRING_TYPE
(
LAND_OFFRING_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOT1_R_LANG_FK'
ALTER TABLE RA_LAND_OFFRING_TYPE ADD CONSTRAINT RA_LOT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOT1_SRCD_FK'
ALTER TABLE RA_LAND_OFFRING_TYPE ADD CONSTRAINT RA_LOT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LPT1_BA_FK'
ALTER TABLE RA_LAND_PROPERTY_TYPE ADD CONSTRAINT RA_LPT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LPT1_PSWA_FK'
ALTER TABLE RA_LAND_PROPERTY_TYPE ADD CONSTRAINT RA_LPT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LPT1_R_ART_FK'
ALTER TABLE RA_LAND_PROPERTY_TYPE ADD CONSTRAINT RA_LPT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LPT1_R_ATY_FK'
ALTER TABLE RA_LAND_PROPERTY_TYPE ADD CONSTRAINT RA_LPT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LPT1_R_LPT1_FK'
ALTER TABLE RA_LAND_PROPERTY_TYPE ADD CONSTRAINT RA_LPT1_R_LPT1_FK FOREIGN KEY
(
LAND_PROPERTY_TYPE
)
REFERENCES R_LAND_PROPERTY_TYPE
(
LAND_PROPERTY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LPT1_R_LANG_FK'
ALTER TABLE RA_LAND_PROPERTY_TYPE ADD CONSTRAINT RA_LPT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LPT1_SRCD_FK'
ALTER TABLE RA_LAND_PROPERTY_TYPE ADD CONSTRAINT RA_LPT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRNT_BA_FK'
ALTER TABLE RA_LAND_REF_NUM_TYPE ADD CONSTRAINT RA_LRNT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRNT_PSWA_FK'
ALTER TABLE RA_LAND_REF_NUM_TYPE ADD CONSTRAINT RA_LRNT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRNT_R_ART_FK'
ALTER TABLE RA_LAND_REF_NUM_TYPE ADD CONSTRAINT RA_LRNT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRNT_R_ATY_FK'
ALTER TABLE RA_LAND_REF_NUM_TYPE ADD CONSTRAINT RA_LRNT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRNT_R_LRNT_FK'
ALTER TABLE RA_LAND_REF_NUM_TYPE ADD CONSTRAINT RA_LRNT_R_LRNT_FK FOREIGN KEY
(
LAND_REF_NUM_TYPE
)
REFERENCES R_LAND_REF_NUM_TYPE
(
LAND_REF_NUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRNT_R_LANG_FK'
ALTER TABLE RA_LAND_REF_NUM_TYPE ADD CONSTRAINT RA_LRNT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRNT_SRCD_FK'
ALTER TABLE RA_LAND_REF_NUM_TYPE ADD CONSTRAINT RA_LRNT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRT_BA_FK'
ALTER TABLE RA_LAND_RENTAL_TYPE ADD CONSTRAINT RA_LRT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRT_PSWA_FK'
ALTER TABLE RA_LAND_RENTAL_TYPE ADD CONSTRAINT RA_LRT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRT_R_ART_FK'
ALTER TABLE RA_LAND_RENTAL_TYPE ADD CONSTRAINT RA_LRT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRT_R_ATY_FK'
ALTER TABLE RA_LAND_RENTAL_TYPE ADD CONSTRAINT RA_LRT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRT_R_LRT_FK'
ALTER TABLE RA_LAND_RENTAL_TYPE ADD CONSTRAINT RA_LRT_R_LRT_FK FOREIGN KEY
(
LAND_RENTAL_TYPE
)
REFERENCES R_LAND_RENTAL_TYPE
(
LAND_RENTAL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRT_R_LANG_FK'
ALTER TABLE RA_LAND_RENTAL_TYPE ADD CONSTRAINT RA_LRT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRT_SRCD_FK'
ALTER TABLE RA_LAND_RENTAL_TYPE ADD CONSTRAINT RA_LRT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRT2_BA_FK'
ALTER TABLE RA_LAND_REQUEST_TYPE ADD CONSTRAINT RA_LRT2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRT2_PSWA_FK'
ALTER TABLE RA_LAND_REQUEST_TYPE ADD CONSTRAINT RA_LRT2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRT2_R_ART_FK'
ALTER TABLE RA_LAND_REQUEST_TYPE ADD CONSTRAINT RA_LRT2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRT2_R_ATY_FK'
ALTER TABLE RA_LAND_REQUEST_TYPE ADD CONSTRAINT RA_LRT2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRT2_R_LRT2_FK'
ALTER TABLE RA_LAND_REQUEST_TYPE ADD CONSTRAINT RA_LRT2_R_LRT2_FK FOREIGN KEY
(
LAND_REQUEST_TYPE
)
REFERENCES R_LAND_REQUEST_TYPE
(
LAND_REQUEST_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRT2_R_LANG_FK'
ALTER TABLE RA_LAND_REQUEST_TYPE ADD CONSTRAINT RA_LRT2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRT2_SRCD_FK'
ALTER TABLE RA_LAND_REQUEST_TYPE ADD CONSTRAINT RA_LRT2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRS_BA_FK'
ALTER TABLE RA_LAND_REQ_STATUS ADD CONSTRAINT RA_LRS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRS_PSWA_FK'
ALTER TABLE RA_LAND_REQ_STATUS ADD CONSTRAINT RA_LRS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRS_R_ART_FK'
ALTER TABLE RA_LAND_REQ_STATUS ADD CONSTRAINT RA_LRS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRS_R_ATY_FK'
ALTER TABLE RA_LAND_REQ_STATUS ADD CONSTRAINT RA_LRS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRS_R_LRS_FK'
ALTER TABLE RA_LAND_REQ_STATUS ADD CONSTRAINT RA_LRS_R_LRS_FK FOREIGN KEY
(
LAND_REQ_STATUS
)
REFERENCES R_LAND_REQ_STATUS
(
LAND_REQ_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRS_R_LANG_FK'
ALTER TABLE RA_LAND_REQ_STATUS ADD CONSTRAINT RA_LRS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRS_SRCD_FK'
ALTER TABLE RA_LAND_REQ_STATUS ADD CONSTRAINT RA_LRS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRC_BA_FK'
ALTER TABLE RA_LAND_RIGHT_CATEGORY ADD CONSTRAINT RA_LRC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRC_PSWA_FK'
ALTER TABLE RA_LAND_RIGHT_CATEGORY ADD CONSTRAINT RA_LRC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRC_R_ART_FK'
ALTER TABLE RA_LAND_RIGHT_CATEGORY ADD CONSTRAINT RA_LRC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRC_R_ATY_FK'
ALTER TABLE RA_LAND_RIGHT_CATEGORY ADD CONSTRAINT RA_LRC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRC_R_LRC_FK'
ALTER TABLE RA_LAND_RIGHT_CATEGORY ADD CONSTRAINT RA_LRC_R_LRC_FK FOREIGN KEY
(
LAND_RIGHT_CATEGORY
)
REFERENCES R_LAND_RIGHT_CATEGORY
(
LAND_RIGHT_CATEGORY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRC_R_LANG_FK'
ALTER TABLE RA_LAND_RIGHT_CATEGORY ADD CONSTRAINT RA_LRC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRC_SRCD_FK'
ALTER TABLE RA_LAND_RIGHT_CATEGORY ADD CONSTRAINT RA_LRC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRS1_BA_FK'
ALTER TABLE RA_LAND_RIGHT_STATUS ADD CONSTRAINT RA_LRS1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRS1_PSWA_FK'
ALTER TABLE RA_LAND_RIGHT_STATUS ADD CONSTRAINT RA_LRS1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRS1_R_ART_FK'
ALTER TABLE RA_LAND_RIGHT_STATUS ADD CONSTRAINT RA_LRS1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRS1_R_ATY_FK'
ALTER TABLE RA_LAND_RIGHT_STATUS ADD CONSTRAINT RA_LRS1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRS1_R_LRS1_FK'
ALTER TABLE RA_LAND_RIGHT_STATUS ADD CONSTRAINT RA_LRS1_R_LRS1_FK FOREIGN KEY
(
STATUS_TYPE,
LAND_RIGHT_STATUS
)
REFERENCES R_LAND_RIGHT_STATUS
(
STATUS_TYPE,
LAND_RIGHT_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRS1_R_LRST_FK'
ALTER TABLE RA_LAND_RIGHT_STATUS ADD CONSTRAINT RA_LRS1_R_LRST_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_LAND_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRS1_R_LANG_FK'
ALTER TABLE RA_LAND_RIGHT_STATUS ADD CONSTRAINT RA_LRS1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRS1_SRCD_FK'
ALTER TABLE RA_LAND_RIGHT_STATUS ADD CONSTRAINT RA_LRS1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRST_BA_FK'
ALTER TABLE RA_LAND_STATUS_TYPE ADD CONSTRAINT RA_LRST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRST_PSWA_FK'
ALTER TABLE RA_LAND_STATUS_TYPE ADD CONSTRAINT RA_LRST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRST_R_ART_FK'
ALTER TABLE RA_LAND_STATUS_TYPE ADD CONSTRAINT RA_LRST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRST_R_ATY_FK'
ALTER TABLE RA_LAND_STATUS_TYPE ADD CONSTRAINT RA_LRST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRST_R_LRST_FK'
ALTER TABLE RA_LAND_STATUS_TYPE ADD CONSTRAINT RA_LRST_R_LRST_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_LAND_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRST_R_LANG_FK'
ALTER TABLE RA_LAND_STATUS_TYPE ADD CONSTRAINT RA_LRST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRST_SRCD_FK'
ALTER TABLE RA_LAND_STATUS_TYPE ADD CONSTRAINT RA_LRST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTCR_BA_FK'
ALTER TABLE RA_LAND_TITLE_CHG_RSN ADD CONSTRAINT RA_LTCR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTCR_PSWA_FK'
ALTER TABLE RA_LAND_TITLE_CHG_RSN ADD CONSTRAINT RA_LTCR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTCR_R_ART_FK'
ALTER TABLE RA_LAND_TITLE_CHG_RSN ADD CONSTRAINT RA_LTCR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTCR_R_ATY_FK'
ALTER TABLE RA_LAND_TITLE_CHG_RSN ADD CONSTRAINT RA_LTCR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTCR_R_LTCR_FK'
ALTER TABLE RA_LAND_TITLE_CHG_RSN ADD CONSTRAINT RA_LTCR_R_LTCR_FK FOREIGN KEY
(
LAND_TITLE_CHANGE_REASON
)
REFERENCES R_LAND_TITLE_CHG_RSN
(
LAND_TITLE_CHANGE_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTCR_R_LANG_FK'
ALTER TABLE RA_LAND_TITLE_CHG_RSN ADD CONSTRAINT RA_LTCR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTCR_SRCD_FK'
ALTER TABLE RA_LAND_TITLE_CHG_RSN ADD CONSTRAINT RA_LTCR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT2_BA_FK'
ALTER TABLE RA_LAND_TITLE_TYPE ADD CONSTRAINT RA_LTT2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT2_PSWA_FK'
ALTER TABLE RA_LAND_TITLE_TYPE ADD CONSTRAINT RA_LTT2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT2_R_ART_FK'
ALTER TABLE RA_LAND_TITLE_TYPE ADD CONSTRAINT RA_LTT2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT2_R_ATY_FK'
ALTER TABLE RA_LAND_TITLE_TYPE ADD CONSTRAINT RA_LTT2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT2_R_LTT2_FK'
ALTER TABLE RA_LAND_TITLE_TYPE ADD CONSTRAINT RA_LTT2_R_LTT2_FK FOREIGN KEY
(
LAND_TITLE_TYPE
)
REFERENCES R_LAND_TITLE_TYPE
(
LAND_TITLE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT2_R_LANG_FK'
ALTER TABLE RA_LAND_TITLE_TYPE ADD CONSTRAINT RA_LTT2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT2_SRCD_FK'
ALTER TABLE RA_LAND_TITLE_TYPE ADD CONSTRAINT RA_LTT2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT3_BA_FK'
ALTER TABLE RA_LAND_TRACT_TYPE ADD CONSTRAINT RA_LTT3_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT3_PSWA_FK'
ALTER TABLE RA_LAND_TRACT_TYPE ADD CONSTRAINT RA_LTT3_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT3_R_ART_FK'
ALTER TABLE RA_LAND_TRACT_TYPE ADD CONSTRAINT RA_LTT3_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT3_R_ATY_FK'
ALTER TABLE RA_LAND_TRACT_TYPE ADD CONSTRAINT RA_LTT3_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT3_R_LTT3_FK'
ALTER TABLE RA_LAND_TRACT_TYPE ADD CONSTRAINT RA_LTT3_R_LTT3_FK FOREIGN KEY
(
LAND_TRACT_TYPE
)
REFERENCES R_LAND_TRACT_TYPE
(
LAND_TRACT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT3_R_LANG_FK'
ALTER TABLE RA_LAND_TRACT_TYPE ADD CONSTRAINT RA_LTT3_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT3_SRCD_FK'
ALTER TABLE RA_LAND_TRACT_TYPE ADD CONSTRAINT RA_LTT3_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LUT1_BA_FK'
ALTER TABLE RA_LAND_UNIT_TYPE ADD CONSTRAINT RA_LUT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LUT1_PSWA_FK'
ALTER TABLE RA_LAND_UNIT_TYPE ADD CONSTRAINT RA_LUT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LUT1_R_ART_FK'
ALTER TABLE RA_LAND_UNIT_TYPE ADD CONSTRAINT RA_LUT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LUT1_R_ATY_FK'
ALTER TABLE RA_LAND_UNIT_TYPE ADD CONSTRAINT RA_LUT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LUT1_R_LUT1_FK'
ALTER TABLE RA_LAND_UNIT_TYPE ADD CONSTRAINT RA_LUT1_R_LUT1_FK FOREIGN KEY
(
LAND_UNIT_TYPE
)
REFERENCES R_LAND_UNIT_TYPE
(
LAND_UNIT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LUT1_R_LANG_FK'
ALTER TABLE RA_LAND_UNIT_TYPE ADD CONSTRAINT RA_LUT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LUT1_SRCD_FK'
ALTER TABLE RA_LAND_UNIT_TYPE ADD CONSTRAINT RA_LUT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LWRT_BA_FK'
ALTER TABLE RA_LAND_WELL_REL_TYPE ADD CONSTRAINT RA_LWRT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LWRT_PSWA_FK'
ALTER TABLE RA_LAND_WELL_REL_TYPE ADD CONSTRAINT RA_LWRT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LWRT_R_ART_FK'
ALTER TABLE RA_LAND_WELL_REL_TYPE ADD CONSTRAINT RA_LWRT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LWRT_R_ATY_FK'
ALTER TABLE RA_LAND_WELL_REL_TYPE ADD CONSTRAINT RA_LWRT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LWRT_R_LWRT_FK'
ALTER TABLE RA_LAND_WELL_REL_TYPE ADD CONSTRAINT RA_LWRT_R_LWRT_FK FOREIGN KEY
(
WELL_RELATIONSHIP_TYPE
)
REFERENCES R_LAND_WELL_REL_TYPE
(
WELL_RELATIONSHIP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LWRT_R_LANG_FK'
ALTER TABLE RA_LAND_WELL_REL_TYPE ADD CONSTRAINT RA_LWRT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LWRT_SRCD_FK'
ALTER TABLE RA_LAND_WELL_REL_TYPE ADD CONSTRAINT RA_LWRT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LANG_BA_FK'
ALTER TABLE RA_LANGUAGE ADD CONSTRAINT RA_LANG_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LANG_PSWA_FK'
ALTER TABLE RA_LANGUAGE ADD CONSTRAINT RA_LANG_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LANG_R_ART_FK'
ALTER TABLE RA_LANGUAGE ADD CONSTRAINT RA_LANG_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LANG_R_ATY_FK'
ALTER TABLE RA_LANGUAGE ADD CONSTRAINT RA_LANG_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LANG_R_LANG_FK'
ALTER TABLE RA_LANGUAGE ADD CONSTRAINT RA_LANG_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LANG_SRCD_FK'
ALTER TABLE RA_LANGUAGE ADD CONSTRAINT RA_LANG_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LUS_BA_FK'
ALTER TABLE RA_LEASE_UNIT_STATUS ADD CONSTRAINT RA_LUS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LUS_PSWA_FK'
ALTER TABLE RA_LEASE_UNIT_STATUS ADD CONSTRAINT RA_LUS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LUS_R_ART_FK'
ALTER TABLE RA_LEASE_UNIT_STATUS ADD CONSTRAINT RA_LUS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LUS_R_ATY_FK'
ALTER TABLE RA_LEASE_UNIT_STATUS ADD CONSTRAINT RA_LUS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LUS_R_LANG_FK'
ALTER TABLE RA_LEASE_UNIT_STATUS ADD CONSTRAINT RA_LUS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LUS_R_LUS_FK'
ALTER TABLE RA_LEASE_UNIT_STATUS ADD CONSTRAINT RA_LUS_R_LUS_FK FOREIGN KEY
(
LEASE_UNIT_STATUS
)
REFERENCES R_LEASE_UNIT_STATUS
(
LEASE_UNIT_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LUS_SRCD_FK'
ALTER TABLE RA_LEASE_UNIT_STATUS ADD CONSTRAINT RA_LUS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LUT_BA_FK'
ALTER TABLE RA_LEASE_UNIT_TYPE ADD CONSTRAINT RA_LUT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LUT_PSWA_FK'
ALTER TABLE RA_LEASE_UNIT_TYPE ADD CONSTRAINT RA_LUT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LUT_R_ART_FK'
ALTER TABLE RA_LEASE_UNIT_TYPE ADD CONSTRAINT RA_LUT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LUT_R_ATY_FK'
ALTER TABLE RA_LEASE_UNIT_TYPE ADD CONSTRAINT RA_LUT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LUT_R_LANG_FK'
ALTER TABLE RA_LEASE_UNIT_TYPE ADD CONSTRAINT RA_LUT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LUT_R_LUT_FK'
ALTER TABLE RA_LEASE_UNIT_TYPE ADD CONSTRAINT RA_LUT_R_LUT_FK FOREIGN KEY
(
LEASE_UNIT_TYPE
)
REFERENCES R_LEASE_UNIT_TYPE
(
LEASE_UNIT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LUT_SRCD_FK'
ALTER TABLE RA_LEASE_UNIT_TYPE ADD CONSTRAINT RA_LUT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LST1_BA_FK'
ALTER TABLE RA_LEGAL_SURVEY_TYPE ADD CONSTRAINT RA_LST1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LST1_PSWA_FK'
ALTER TABLE RA_LEGAL_SURVEY_TYPE ADD CONSTRAINT RA_LST1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LST1_R_ART_FK'
ALTER TABLE RA_LEGAL_SURVEY_TYPE ADD CONSTRAINT RA_LST1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LST1_R_ATY_FK'
ALTER TABLE RA_LEGAL_SURVEY_TYPE ADD CONSTRAINT RA_LST1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LST1_R_LANG_FK'
ALTER TABLE RA_LEGAL_SURVEY_TYPE ADD CONSTRAINT RA_LST1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LST1_R_LST1_FK'
ALTER TABLE RA_LEGAL_SURVEY_TYPE ADD CONSTRAINT RA_LST1_R_LST1_FK FOREIGN KEY
(
LEGAL_SURVEY_TYPE
)
REFERENCES R_LEGAL_SURVEY_TYPE
(
LEGAL_SURVEY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LST1_SRCD_FK'
ALTER TABLE RA_LEGAL_SURVEY_TYPE ADD CONSTRAINT RA_LST1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LIST_BA_FK'
ALTER TABLE RA_LICENSE_STATUS ADD CONSTRAINT RA_LIST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LIST_PSWA_FK'
ALTER TABLE RA_LICENSE_STATUS ADD CONSTRAINT RA_LIST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LIST_R_ART_FK'
ALTER TABLE RA_LICENSE_STATUS ADD CONSTRAINT RA_LIST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LIST_R_ATY_FK'
ALTER TABLE RA_LICENSE_STATUS ADD CONSTRAINT RA_LIST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LIST_R_LANG_FK'
ALTER TABLE RA_LICENSE_STATUS ADD CONSTRAINT RA_LIST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LIST_R_LIST_FK'
ALTER TABLE RA_LICENSE_STATUS ADD CONSTRAINT RA_LIST_R_LIST_FK FOREIGN KEY
(
LICENSE_STATUS_TYPE,
LICENSE_STATUS
)
REFERENCES R_LICENSE_STATUS
(
LICENSE_STATUS_TYPE,
LICENSE_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LIST_R_LISTT_FK'
ALTER TABLE RA_LICENSE_STATUS ADD CONSTRAINT RA_LIST_R_LISTT_FK FOREIGN KEY
(
LICENSE_STATUS_TYPE
)
REFERENCES R_LIC_STATUS_TYPE
(
LICENSE_STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LIST_SRCD_FK'
ALTER TABLE RA_LICENSE_STATUS ADD CONSTRAINT RA_LIST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LISTT_BA_FK'
ALTER TABLE RA_LIC_STATUS_TYPE ADD CONSTRAINT RA_LISTT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LISTT_PSWA_FK'
ALTER TABLE RA_LIC_STATUS_TYPE ADD CONSTRAINT RA_LISTT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LISTT_R_ART_FK'
ALTER TABLE RA_LIC_STATUS_TYPE ADD CONSTRAINT RA_LISTT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LISTT_R_ATY_FK'
ALTER TABLE RA_LIC_STATUS_TYPE ADD CONSTRAINT RA_LISTT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LISTT_R_LANG_FK'
ALTER TABLE RA_LIC_STATUS_TYPE ADD CONSTRAINT RA_LISTT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LISTT_R_LISTT_FK'
ALTER TABLE RA_LIC_STATUS_TYPE ADD CONSTRAINT RA_LISTT_R_LISTT_FK FOREIGN KEY
(
LICENSE_STATUS_TYPE
)
REFERENCES R_LIC_STATUS_TYPE
(
LICENSE_STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LISTT_SRCD_FK'
ALTER TABLE RA_LIC_STATUS_TYPE ADD CONSTRAINT RA_LISTT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LT_BA_FK'
ALTER TABLE RA_LINER_TYPE ADD CONSTRAINT RA_LT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LT_PSWA_FK'
ALTER TABLE RA_LINER_TYPE ADD CONSTRAINT RA_LT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LT_R_ART_FK'
ALTER TABLE RA_LINER_TYPE ADD CONSTRAINT RA_LT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LT_R_ATY_FK'
ALTER TABLE RA_LINER_TYPE ADD CONSTRAINT RA_LT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LT_R_LANG_FK'
ALTER TABLE RA_LINER_TYPE ADD CONSTRAINT RA_LT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LT_R_LT_FK'
ALTER TABLE RA_LINER_TYPE ADD CONSTRAINT RA_LT_R_LT_FK FOREIGN KEY
(
LINER_TYPE
)
REFERENCES R_LINER_TYPE
(
LINER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LT_SRCD_FK'
ALTER TABLE RA_LINER_TYPE ADD CONSTRAINT RA_LT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_L_BA_FK'
ALTER TABLE RA_LITHOLOGY ADD CONSTRAINT RA_L_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_L_PSWA_FK'
ALTER TABLE RA_LITHOLOGY ADD CONSTRAINT RA_L_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_L_R_ART_FK'
ALTER TABLE RA_LITHOLOGY ADD CONSTRAINT RA_L_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_L_R_ATY_FK'
ALTER TABLE RA_LITHOLOGY ADD CONSTRAINT RA_L_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_L_R_LANG_FK'
ALTER TABLE RA_LITHOLOGY ADD CONSTRAINT RA_L_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_L_R_L_FK'
ALTER TABLE RA_LITHOLOGY ADD CONSTRAINT RA_L_R_L_FK FOREIGN KEY
(
LITHOLOGY
)
REFERENCES R_LITHOLOGY
(
LITHOLOGY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_L_SRCD_FK'
ALTER TABLE RA_LITHOLOGY ADD CONSTRAINT RA_L_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LA_BA_FK'
ALTER TABLE RA_LITH_ABUNDANCE ADD CONSTRAINT RA_LA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LA_PSWA_FK'
ALTER TABLE RA_LITH_ABUNDANCE ADD CONSTRAINT RA_LA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LA_R_ART_FK'
ALTER TABLE RA_LITH_ABUNDANCE ADD CONSTRAINT RA_LA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LA_R_ATY_FK'
ALTER TABLE RA_LITH_ABUNDANCE ADD CONSTRAINT RA_LA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LA_R_LANG_FK'
ALTER TABLE RA_LITH_ABUNDANCE ADD CONSTRAINT RA_LA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LA_R_LA_FK'
ALTER TABLE RA_LITH_ABUNDANCE ADD CONSTRAINT RA_LA_R_LA_FK FOREIGN KEY
(
ABUNDANCE
)
REFERENCES R_LITH_ABUNDANCE
(
ABUNDANCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LA_SRCD_FK'
ALTER TABLE RA_LITH_ABUNDANCE ADD CONSTRAINT RA_LA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBT2_BA_FK'
ALTER TABLE RA_LITH_BOUNDARY_TYPE ADD CONSTRAINT RA_LBT2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBT2_PSWA_FK'
ALTER TABLE RA_LITH_BOUNDARY_TYPE ADD CONSTRAINT RA_LBT2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBT2_R_ART_FK'
ALTER TABLE RA_LITH_BOUNDARY_TYPE ADD CONSTRAINT RA_LBT2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBT2_R_ATY_FK'
ALTER TABLE RA_LITH_BOUNDARY_TYPE ADD CONSTRAINT RA_LBT2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBT2_R_LANG_FK'
ALTER TABLE RA_LITH_BOUNDARY_TYPE ADD CONSTRAINT RA_LBT2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBT2_R_LBT2_FK'
ALTER TABLE RA_LITH_BOUNDARY_TYPE ADD CONSTRAINT RA_LBT2_R_LBT2_FK FOREIGN KEY
(
BOUNDARY_TYPE
)
REFERENCES R_LITH_BOUNDARY_TYPE
(
BOUNDARY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LBT2_SRCD_FK'
ALTER TABLE RA_LITH_BOUNDARY_TYPE ADD CONSTRAINT RA_LBT2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LC_BA_FK'
ALTER TABLE RA_LITH_COLOR ADD CONSTRAINT RA_LC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LC_PSWA_FK'
ALTER TABLE RA_LITH_COLOR ADD CONSTRAINT RA_LC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LC_R_ART_FK'
ALTER TABLE RA_LITH_COLOR ADD CONSTRAINT RA_LC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LC_R_ATY_FK'
ALTER TABLE RA_LITH_COLOR ADD CONSTRAINT RA_LC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LC_R_LANG_FK'
ALTER TABLE RA_LITH_COLOR ADD CONSTRAINT RA_LC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LC_R_LC_FK'
ALTER TABLE RA_LITH_COLOR ADD CONSTRAINT RA_LC_R_LC_FK FOREIGN KEY
(
COLOR
)
REFERENCES R_LITH_COLOR
(
COLOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LC_SRCD_FK'
ALTER TABLE RA_LITH_COLOR ADD CONSTRAINT RA_LC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_L2_BA_FK'
ALTER TABLE RA_LITH_CONSOLIDATION ADD CONSTRAINT RA_L2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_L2_PSWA_FK'
ALTER TABLE RA_LITH_CONSOLIDATION ADD CONSTRAINT RA_L2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_L2_R_ART_FK'
ALTER TABLE RA_LITH_CONSOLIDATION ADD CONSTRAINT RA_L2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_L2_R_ATY_FK'
ALTER TABLE RA_LITH_CONSOLIDATION ADD CONSTRAINT RA_L2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_L2_R_LANG_FK'
ALTER TABLE RA_LITH_CONSOLIDATION ADD CONSTRAINT RA_L2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_L2_R_L2_FK'
ALTER TABLE RA_LITH_CONSOLIDATION ADD CONSTRAINT RA_L2_R_L2_FK FOREIGN KEY
(
CONSOLIDATION
)
REFERENCES R_LITH_CONSOLIDATION
(
CONSOLIDATION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_L2_SRCD_FK'
ALTER TABLE RA_LITH_CONSOLIDATION ADD CONSTRAINT RA_L2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCB_BA_FK'
ALTER TABLE RA_LITH_CYCLE_BED ADD CONSTRAINT RA_LCB_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCB_PSWA_FK'
ALTER TABLE RA_LITH_CYCLE_BED ADD CONSTRAINT RA_LCB_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCB_R_ART_FK'
ALTER TABLE RA_LITH_CYCLE_BED ADD CONSTRAINT RA_LCB_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCB_R_ATY_FK'
ALTER TABLE RA_LITH_CYCLE_BED ADD CONSTRAINT RA_LCB_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCB_R_LANG_FK'
ALTER TABLE RA_LITH_CYCLE_BED ADD CONSTRAINT RA_LCB_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCB_R_LCB_FK'
ALTER TABLE RA_LITH_CYCLE_BED ADD CONSTRAINT RA_LCB_R_LCB_FK FOREIGN KEY
(
CYCLE_BED
)
REFERENCES R_LITH_CYCLE_BED
(
CYCLE_BED
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCB_SRCD_FK'
ALTER TABLE RA_LITH_CYCLE_BED ADD CONSTRAINT RA_LCB_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LDE_BA_FK'
ALTER TABLE RA_LITH_DEP_ENV ADD CONSTRAINT RA_LDE_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LDE_PSWA_FK'
ALTER TABLE RA_LITH_DEP_ENV ADD CONSTRAINT RA_LDE_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LDE_R_ART_FK'
ALTER TABLE RA_LITH_DEP_ENV ADD CONSTRAINT RA_LDE_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LDE_R_ATY_FK'
ALTER TABLE RA_LITH_DEP_ENV ADD CONSTRAINT RA_LDE_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LDE_R_LANG_FK'
ALTER TABLE RA_LITH_DEP_ENV ADD CONSTRAINT RA_LDE_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LDE_R_LDE_FK'
ALTER TABLE RA_LITH_DEP_ENV ADD CONSTRAINT RA_LDE_R_LDE_FK FOREIGN KEY
(
DEPOSITIONAL_ENVIRONMENT
)
REFERENCES R_LITH_DEP_ENV
(
DEPOSITIONAL_ENVIRONMENT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LDE_SRCD_FK'
ALTER TABLE RA_LITH_DEP_ENV ADD CONSTRAINT RA_LDE_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LD1_BA_FK'
ALTER TABLE RA_LITH_DIAGENESIS ADD CONSTRAINT RA_LD1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LD1_PSWA_FK'
ALTER TABLE RA_LITH_DIAGENESIS ADD CONSTRAINT RA_LD1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LD1_R_ART_FK'
ALTER TABLE RA_LITH_DIAGENESIS ADD CONSTRAINT RA_LD1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LD1_R_ATY_FK'
ALTER TABLE RA_LITH_DIAGENESIS ADD CONSTRAINT RA_LD1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LD1_R_LANG_FK'
ALTER TABLE RA_LITH_DIAGENESIS ADD CONSTRAINT RA_LD1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LD1_R_LD1_FK'
ALTER TABLE RA_LITH_DIAGENESIS ADD CONSTRAINT RA_LD1_R_LD1_FK FOREIGN KEY
(
DIAGENESIS_TYPE
)
REFERENCES R_LITH_DIAGENESIS
(
DIAGENESIS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LD1_SRCD_FK'
ALTER TABLE RA_LITH_DIAGENESIS ADD CONSTRAINT RA_LD1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LD2_BA_FK'
ALTER TABLE RA_LITH_DISTRIBUTION ADD CONSTRAINT RA_LD2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LD2_PSWA_FK'
ALTER TABLE RA_LITH_DISTRIBUTION ADD CONSTRAINT RA_LD2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LD2_R_ART_FK'
ALTER TABLE RA_LITH_DISTRIBUTION ADD CONSTRAINT RA_LD2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LD2_R_ATY_FK'
ALTER TABLE RA_LITH_DISTRIBUTION ADD CONSTRAINT RA_LD2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LD2_R_LANG_FK'
ALTER TABLE RA_LITH_DISTRIBUTION ADD CONSTRAINT RA_LD2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LD2_R_LD2_FK'
ALTER TABLE RA_LITH_DISTRIBUTION ADD CONSTRAINT RA_LD2_R_LD2_FK FOREIGN KEY
(
DISTRIBUTION
)
REFERENCES R_LITH_DISTRIBUTION
(
DISTRIBUTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LD2_SRCD_FK'
ALTER TABLE RA_LITH_DISTRIBUTION ADD CONSTRAINT RA_LD2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LI_BA_FK'
ALTER TABLE RA_LITH_INTENSITY ADD CONSTRAINT RA_LI_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LI_PSWA_FK'
ALTER TABLE RA_LITH_INTENSITY ADD CONSTRAINT RA_LI_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LI_R_ART_FK'
ALTER TABLE RA_LITH_INTENSITY ADD CONSTRAINT RA_LI_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LI_R_ATY_FK'
ALTER TABLE RA_LITH_INTENSITY ADD CONSTRAINT RA_LI_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LI_R_LANG_FK'
ALTER TABLE RA_LITH_INTENSITY ADD CONSTRAINT RA_LI_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LI_R_LI_FK'
ALTER TABLE RA_LITH_INTENSITY ADD CONSTRAINT RA_LI_R_LI_FK FOREIGN KEY
(
INTENSITY
)
REFERENCES R_LITH_INTENSITY
(
INTENSITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LI_SRCD_FK'
ALTER TABLE RA_LITH_INTENSITY ADD CONSTRAINT RA_LI_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LLCT_BA_FK'
ALTER TABLE RA_LITH_LOG_COMP_TYPE ADD CONSTRAINT RA_LLCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LLCT_PSWA_FK'
ALTER TABLE RA_LITH_LOG_COMP_TYPE ADD CONSTRAINT RA_LLCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LLCT_R_ART_FK'
ALTER TABLE RA_LITH_LOG_COMP_TYPE ADD CONSTRAINT RA_LLCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LLCT_R_ATY_FK'
ALTER TABLE RA_LITH_LOG_COMP_TYPE ADD CONSTRAINT RA_LLCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LLCT_R_LANG_FK'
ALTER TABLE RA_LITH_LOG_COMP_TYPE ADD CONSTRAINT RA_LLCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LLCT_R_LLCT_FK'
ALTER TABLE RA_LITH_LOG_COMP_TYPE ADD CONSTRAINT RA_LLCT_R_LLCT_FK FOREIGN KEY
(
LITH_LOG_COMPONENT_TYPE
)
REFERENCES R_LITH_LOG_COMP_TYPE
(
LITH_LOG_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LLCT_SRCD_FK'
ALTER TABLE RA_LITH_LOG_COMP_TYPE ADD CONSTRAINT RA_LLCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LLT1_BA_FK'
ALTER TABLE RA_LITH_LOG_TYPE ADD CONSTRAINT RA_LLT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LLT1_PSWA_FK'
ALTER TABLE RA_LITH_LOG_TYPE ADD CONSTRAINT RA_LLT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LLT1_R_ART_FK'
ALTER TABLE RA_LITH_LOG_TYPE ADD CONSTRAINT RA_LLT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LLT1_R_ATY_FK'
ALTER TABLE RA_LITH_LOG_TYPE ADD CONSTRAINT RA_LLT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LLT1_R_LANG_FK'
ALTER TABLE RA_LITH_LOG_TYPE ADD CONSTRAINT RA_LLT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LLT1_R_LLT1_FK'
ALTER TABLE RA_LITH_LOG_TYPE ADD CONSTRAINT RA_LLT1_R_LLT1_FK FOREIGN KEY
(
LITH_LOG_TYPE
)
REFERENCES R_LITH_LOG_TYPE
(
LITH_LOG_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LLT1_SRCD_FK'
ALTER TABLE RA_LITH_LOG_TYPE ADD CONSTRAINT RA_LLT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOS1_BA_FK'
ALTER TABLE RA_LITH_OIL_STAIN ADD CONSTRAINT RA_LOS1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOS1_PSWA_FK'
ALTER TABLE RA_LITH_OIL_STAIN ADD CONSTRAINT RA_LOS1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOS1_R_ART_FK'
ALTER TABLE RA_LITH_OIL_STAIN ADD CONSTRAINT RA_LOS1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOS1_R_ATY_FK'
ALTER TABLE RA_LITH_OIL_STAIN ADD CONSTRAINT RA_LOS1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOS1_R_LANG_FK'
ALTER TABLE RA_LITH_OIL_STAIN ADD CONSTRAINT RA_LOS1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOS1_R_LOS1_FK'
ALTER TABLE RA_LITH_OIL_STAIN ADD CONSTRAINT RA_LOS1_R_LOS1_FK FOREIGN KEY
(
OIL_STAIN
)
REFERENCES R_LITH_OIL_STAIN
(
OIL_STAIN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOS1_SRCD_FK'
ALTER TABLE RA_LITH_OIL_STAIN ADD CONSTRAINT RA_LOS1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LPC_BA_FK'
ALTER TABLE RA_LITH_PATTERN_CODE ADD CONSTRAINT RA_LPC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LPC_PSWA_FK'
ALTER TABLE RA_LITH_PATTERN_CODE ADD CONSTRAINT RA_LPC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LPC_R_ART_FK'
ALTER TABLE RA_LITH_PATTERN_CODE ADD CONSTRAINT RA_LPC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LPC_R_ATY_FK'
ALTER TABLE RA_LITH_PATTERN_CODE ADD CONSTRAINT RA_LPC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LPC_R_LANG_FK'
ALTER TABLE RA_LITH_PATTERN_CODE ADD CONSTRAINT RA_LPC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LPC_R_LPC_FK'
ALTER TABLE RA_LITH_PATTERN_CODE ADD CONSTRAINT RA_LPC_R_LPC_FK FOREIGN KEY
(
LITH_PATTERN_CODE
)
REFERENCES R_LITH_PATTERN_CODE
(
LITH_PATTERN_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LPC_SRCD_FK'
ALTER TABLE RA_LITH_PATTERN_CODE ADD CONSTRAINT RA_LPC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LR1_BA_FK'
ALTER TABLE RA_LITH_ROCKPART ADD CONSTRAINT RA_LR1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LR1_PSWA_FK'
ALTER TABLE RA_LITH_ROCKPART ADD CONSTRAINT RA_LR1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LR1_R_ART_FK'
ALTER TABLE RA_LITH_ROCKPART ADD CONSTRAINT RA_LR1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LR1_R_ATY_FK'
ALTER TABLE RA_LITH_ROCKPART ADD CONSTRAINT RA_LR1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LR1_R_LANG_FK'
ALTER TABLE RA_LITH_ROCKPART ADD CONSTRAINT RA_LR1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LR1_R_LR1_FK'
ALTER TABLE RA_LITH_ROCKPART ADD CONSTRAINT RA_LR1_R_LR1_FK FOREIGN KEY
(
ROCKPART_TYPE
)
REFERENCES R_LITH_ROCKPART
(
ROCKPART_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LR1_SRCD_FK'
ALTER TABLE RA_LITH_ROCKPART ADD CONSTRAINT RA_LR1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRM_BA_FK'
ALTER TABLE RA_LITH_ROCK_MATRIX ADD CONSTRAINT RA_LRM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRM_PSWA_FK'
ALTER TABLE RA_LITH_ROCK_MATRIX ADD CONSTRAINT RA_LRM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRM_R_ART_FK'
ALTER TABLE RA_LITH_ROCK_MATRIX ADD CONSTRAINT RA_LRM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRM_R_ATY_FK'
ALTER TABLE RA_LITH_ROCK_MATRIX ADD CONSTRAINT RA_LRM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRM_R_LANG_FK'
ALTER TABLE RA_LITH_ROCK_MATRIX ADD CONSTRAINT RA_LRM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRM_R_LRM_FK'
ALTER TABLE RA_LITH_ROCK_MATRIX ADD CONSTRAINT RA_LRM_R_LRM_FK FOREIGN KEY
(
ROCK_MATRIX
)
REFERENCES R_LITH_ROCK_MATRIX
(
ROCK_MATRIX
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRM_SRCD_FK'
ALTER TABLE RA_LITH_ROCK_MATRIX ADD CONSTRAINT RA_LRM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRP_BA_FK'
ALTER TABLE RA_LITH_ROCK_PROFILE ADD CONSTRAINT RA_LRP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRP_PSWA_FK'
ALTER TABLE RA_LITH_ROCK_PROFILE ADD CONSTRAINT RA_LRP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRP_R_ART_FK'
ALTER TABLE RA_LITH_ROCK_PROFILE ADD CONSTRAINT RA_LRP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRP_R_ATY_FK'
ALTER TABLE RA_LITH_ROCK_PROFILE ADD CONSTRAINT RA_LRP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRP_R_LANG_FK'
ALTER TABLE RA_LITH_ROCK_PROFILE ADD CONSTRAINT RA_LRP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRP_R_LRP_FK'
ALTER TABLE RA_LITH_ROCK_PROFILE ADD CONSTRAINT RA_LRP_R_LRP_FK FOREIGN KEY
(
ROCK_PROFILE
)
REFERENCES R_LITH_ROCK_PROFILE
(
ROCK_PROFILE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRP_SRCD_FK'
ALTER TABLE RA_LITH_ROCK_PROFILE ADD CONSTRAINT RA_LRP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRT1_BA_FK'
ALTER TABLE RA_LITH_ROCK_TYPE ADD CONSTRAINT RA_LRT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRT1_PSWA_FK'
ALTER TABLE RA_LITH_ROCK_TYPE ADD CONSTRAINT RA_LRT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRT1_R_ART_FK'
ALTER TABLE RA_LITH_ROCK_TYPE ADD CONSTRAINT RA_LRT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRT1_R_ATY_FK'
ALTER TABLE RA_LITH_ROCK_TYPE ADD CONSTRAINT RA_LRT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRT1_R_LANG_FK'
ALTER TABLE RA_LITH_ROCK_TYPE ADD CONSTRAINT RA_LRT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRT1_R_LRT1_FK'
ALTER TABLE RA_LITH_ROCK_TYPE ADD CONSTRAINT RA_LRT1_R_LRT1_FK FOREIGN KEY
(
ROCK_TYPE
)
REFERENCES R_LITH_ROCK_TYPE
(
ROCK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LRT1_SRCD_FK'
ALTER TABLE RA_LITH_ROCK_TYPE ADD CONSTRAINT RA_LRT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LR_BA_FK'
ALTER TABLE RA_LITH_ROUNDING ADD CONSTRAINT RA_LR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LR_PSWA_FK'
ALTER TABLE RA_LITH_ROUNDING ADD CONSTRAINT RA_LR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LR_R_ART_FK'
ALTER TABLE RA_LITH_ROUNDING ADD CONSTRAINT RA_LR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LR_R_ATY_FK'
ALTER TABLE RA_LITH_ROUNDING ADD CONSTRAINT RA_LR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LR_R_LANG_FK'
ALTER TABLE RA_LITH_ROUNDING ADD CONSTRAINT RA_LR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LR_R_LR_FK'
ALTER TABLE RA_LITH_ROUNDING ADD CONSTRAINT RA_LR_R_LR_FK FOREIGN KEY
(
ROUNDING
)
REFERENCES R_LITH_ROUNDING
(
ROUNDING
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LR_SRCD_FK'
ALTER TABLE RA_LITH_ROUNDING ADD CONSTRAINT RA_LR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LSS_BA_FK'
ALTER TABLE RA_LITH_SCALE_SCHEME ADD CONSTRAINT RA_LSS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LSS_PSWA_FK'
ALTER TABLE RA_LITH_SCALE_SCHEME ADD CONSTRAINT RA_LSS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LSS_R_ART_FK'
ALTER TABLE RA_LITH_SCALE_SCHEME ADD CONSTRAINT RA_LSS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LSS_R_ATY_FK'
ALTER TABLE RA_LITH_SCALE_SCHEME ADD CONSTRAINT RA_LSS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LSS_R_LANG_FK'
ALTER TABLE RA_LITH_SCALE_SCHEME ADD CONSTRAINT RA_LSS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LSS_R_LSS_FK'
ALTER TABLE RA_LITH_SCALE_SCHEME ADD CONSTRAINT RA_LSS_R_LSS_FK FOREIGN KEY
(
SCALE_SCHEME
)
REFERENCES R_LITH_SCALE_SCHEME
(
SCALE_SCHEME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LSS_SRCD_FK'
ALTER TABLE RA_LITH_SCALE_SCHEME ADD CONSTRAINT RA_LSS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LS_BA_FK'
ALTER TABLE RA_LITH_SORTING ADD CONSTRAINT RA_LS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LS_PSWA_FK'
ALTER TABLE RA_LITH_SORTING ADD CONSTRAINT RA_LS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LS_R_ART_FK'
ALTER TABLE RA_LITH_SORTING ADD CONSTRAINT RA_LS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LS_R_ATY_FK'
ALTER TABLE RA_LITH_SORTING ADD CONSTRAINT RA_LS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LS_R_LANG_FK'
ALTER TABLE RA_LITH_SORTING ADD CONSTRAINT RA_LS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LS_R_LS_FK'
ALTER TABLE RA_LITH_SORTING ADD CONSTRAINT RA_LS_R_LS_FK FOREIGN KEY
(
SORTING
)
REFERENCES R_LITH_SORTING
(
SORTING
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LS_SRCD_FK'
ALTER TABLE RA_LITH_SORTING ADD CONSTRAINT RA_LS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LS1_BA_FK'
ALTER TABLE RA_LITH_STRUCTURE ADD CONSTRAINT RA_LS1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LS1_PSWA_FK'
ALTER TABLE RA_LITH_STRUCTURE ADD CONSTRAINT RA_LS1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LS1_R_ART_FK'
ALTER TABLE RA_LITH_STRUCTURE ADD CONSTRAINT RA_LS1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LS1_R_ATY_FK'
ALTER TABLE RA_LITH_STRUCTURE ADD CONSTRAINT RA_LS1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LS1_R_LANG_FK'
ALTER TABLE RA_LITH_STRUCTURE ADD CONSTRAINT RA_LS1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LS1_R_LS1_FK'
ALTER TABLE RA_LITH_STRUCTURE ADD CONSTRAINT RA_LS1_R_LS1_FK FOREIGN KEY
(
STRUCTURE
)
REFERENCES R_LITH_STRUCTURE
(
STRUCTURE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LS1_SRCD_FK'
ALTER TABLE RA_LITH_STRUCTURE ADD CONSTRAINT RA_LS1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LDT_BA_FK'
ALTER TABLE RA_LOCATION_DESC_TYPE ADD CONSTRAINT RA_LDT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LDT_PSWA_FK'
ALTER TABLE RA_LOCATION_DESC_TYPE ADD CONSTRAINT RA_LDT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LDT_R_ART_FK'
ALTER TABLE RA_LOCATION_DESC_TYPE ADD CONSTRAINT RA_LDT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LDT_R_ATY_FK'
ALTER TABLE RA_LOCATION_DESC_TYPE ADD CONSTRAINT RA_LDT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LDT_R_LANG_FK'
ALTER TABLE RA_LOCATION_DESC_TYPE ADD CONSTRAINT RA_LDT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LDT_R_LDT_FK'
ALTER TABLE RA_LOCATION_DESC_TYPE ADD CONSTRAINT RA_LDT_R_LDT_FK FOREIGN KEY
(
LOCATION_DESC_TYPE
)
REFERENCES R_LOCATION_DESC_TYPE
(
LOCATION_DESC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LDT_SRCD_FK'
ALTER TABLE RA_LOCATION_DESC_TYPE ADD CONSTRAINT RA_LDT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LQ_BA_FK'
ALTER TABLE RA_LOCATION_QUALIFIER ADD CONSTRAINT RA_LQ_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LQ_PSWA_FK'
ALTER TABLE RA_LOCATION_QUALIFIER ADD CONSTRAINT RA_LQ_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LQ_R_ART_FK'
ALTER TABLE RA_LOCATION_QUALIFIER ADD CONSTRAINT RA_LQ_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LQ_R_ATY_FK'
ALTER TABLE RA_LOCATION_QUALIFIER ADD CONSTRAINT RA_LQ_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LQ_R_LANG_FK'
ALTER TABLE RA_LOCATION_QUALIFIER ADD CONSTRAINT RA_LQ_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LQ_R_LQ_FK'
ALTER TABLE RA_LOCATION_QUALIFIER ADD CONSTRAINT RA_LQ_R_LQ_FK FOREIGN KEY
(
LOCATION_QUALIFIER
)
REFERENCES R_LOCATION_QUALIFIER
(
LOCATION_QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LQ_SRCD_FK'
ALTER TABLE RA_LOCATION_QUALIFIER ADD CONSTRAINT RA_LQ_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LQ1_BA_FK'
ALTER TABLE RA_LOCATION_QUALITY ADD CONSTRAINT RA_LQ1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LQ1_PSWA_FK'
ALTER TABLE RA_LOCATION_QUALITY ADD CONSTRAINT RA_LQ1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LQ1_R_ART_FK'
ALTER TABLE RA_LOCATION_QUALITY ADD CONSTRAINT RA_LQ1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LQ1_R_ATY_FK'
ALTER TABLE RA_LOCATION_QUALITY ADD CONSTRAINT RA_LQ1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LQ1_R_LANG_FK'
ALTER TABLE RA_LOCATION_QUALITY ADD CONSTRAINT RA_LQ1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LQ1_R_LQ1_FK'
ALTER TABLE RA_LOCATION_QUALITY ADD CONSTRAINT RA_LQ1_R_LQ1_FK FOREIGN KEY
(
LOCATION_QUALITY
)
REFERENCES R_LOCATION_QUALITY
(
LOCATION_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LQ1_SRCD_FK'
ALTER TABLE RA_LOCATION_QUALITY ADD CONSTRAINT RA_LQ1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LT1_BA_FK'
ALTER TABLE RA_LOCATION_TYPE ADD CONSTRAINT RA_LT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LT1_PSWA_FK'
ALTER TABLE RA_LOCATION_TYPE ADD CONSTRAINT RA_LT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LT1_R_ART_FK'
ALTER TABLE RA_LOCATION_TYPE ADD CONSTRAINT RA_LT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LT1_R_ATY_FK'
ALTER TABLE RA_LOCATION_TYPE ADD CONSTRAINT RA_LT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LT1_R_LANG_FK'
ALTER TABLE RA_LOCATION_TYPE ADD CONSTRAINT RA_LT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LT1_R_LT1_FK'
ALTER TABLE RA_LOCATION_TYPE ADD CONSTRAINT RA_LT1_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LT1_SRCD_FK'
ALTER TABLE RA_LOCATION_TYPE ADD CONSTRAINT RA_LT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LADT_BA_FK'
ALTER TABLE RA_LOG_ARRAY_DIMENSION ADD CONSTRAINT RA_LADT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LADT_PSWA_FK'
ALTER TABLE RA_LOG_ARRAY_DIMENSION ADD CONSTRAINT RA_LADT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LADT_R_ART_FK'
ALTER TABLE RA_LOG_ARRAY_DIMENSION ADD CONSTRAINT RA_LADT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LADT_R_ATY_FK'
ALTER TABLE RA_LOG_ARRAY_DIMENSION ADD CONSTRAINT RA_LADT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LADT_R_LANG_FK'
ALTER TABLE RA_LOG_ARRAY_DIMENSION ADD CONSTRAINT RA_LADT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LADT_R_LADT_FK'
ALTER TABLE RA_LOG_ARRAY_DIMENSION ADD CONSTRAINT RA_LADT_R_LADT_FK FOREIGN KEY
(
DIMENSION
)
REFERENCES R_LOG_ARRAY_DIMENSION
(
DIMENSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LADT_SRCD_FK'
ALTER TABLE RA_LOG_ARRAY_DIMENSION ADD CONSTRAINT RA_LADT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCM_BA_FK'
ALTER TABLE RA_LOG_CORRECT_METHOD ADD CONSTRAINT RA_LCM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCM_PSWA_FK'
ALTER TABLE RA_LOG_CORRECT_METHOD ADD CONSTRAINT RA_LCM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCM_R_ART_FK'
ALTER TABLE RA_LOG_CORRECT_METHOD ADD CONSTRAINT RA_LCM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCM_R_ATY_FK'
ALTER TABLE RA_LOG_CORRECT_METHOD ADD CONSTRAINT RA_LCM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCM_R_LANG_FK'
ALTER TABLE RA_LOG_CORRECT_METHOD ADD CONSTRAINT RA_LCM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCM_R_LCM_FK'
ALTER TABLE RA_LOG_CORRECT_METHOD ADD CONSTRAINT RA_LCM_R_LCM_FK FOREIGN KEY
(
CORRECTION_METHOD
)
REFERENCES R_LOG_CORRECT_METHOD
(
CORRECTION_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCM_SRCD_FK'
ALTER TABLE RA_LOG_CORRECT_METHOD ADD CONSTRAINT RA_LCM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCCS_BA_FK'
ALTER TABLE RA_LOG_CRV_CLASS_SYSTEM ADD CONSTRAINT RA_LCCS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCCS_PSWA_FK'
ALTER TABLE RA_LOG_CRV_CLASS_SYSTEM ADD CONSTRAINT RA_LCCS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCCS_R_ART_FK'
ALTER TABLE RA_LOG_CRV_CLASS_SYSTEM ADD CONSTRAINT RA_LCCS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCCS_R_ATY_FK'
ALTER TABLE RA_LOG_CRV_CLASS_SYSTEM ADD CONSTRAINT RA_LCCS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCCS_R_LANG_FK'
ALTER TABLE RA_LOG_CRV_CLASS_SYSTEM ADD CONSTRAINT RA_LCCS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCCS_R_LCCS_FK'
ALTER TABLE RA_LOG_CRV_CLASS_SYSTEM ADD CONSTRAINT RA_LCCS_R_LCCS_FK FOREIGN KEY
(
SYSTEM_TYPE
)
REFERENCES R_LOG_CRV_CLASS_SYSTEM
(
SYSTEM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LCCS_SRCD_FK'
ALTER TABLE RA_LOG_CRV_CLASS_SYSTEM ADD CONSTRAINT RA_LCCS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LDT1_BA_FK'
ALTER TABLE RA_LOG_DEPTH_TYPE ADD CONSTRAINT RA_LDT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LDT1_PSWA_FK'
ALTER TABLE RA_LOG_DEPTH_TYPE ADD CONSTRAINT RA_LDT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LDT1_R_ART_FK'
ALTER TABLE RA_LOG_DEPTH_TYPE ADD CONSTRAINT RA_LDT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LDT1_R_ATY_FK'
ALTER TABLE RA_LOG_DEPTH_TYPE ADD CONSTRAINT RA_LDT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LDT1_R_LANG_FK'
ALTER TABLE RA_LOG_DEPTH_TYPE ADD CONSTRAINT RA_LDT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LDT1_R_LDT1_FK'
ALTER TABLE RA_LOG_DEPTH_TYPE ADD CONSTRAINT RA_LDT1_R_LDT1_FK FOREIGN KEY
(
DEPTH_TYPE
)
REFERENCES R_LOG_DEPTH_TYPE
(
DEPTH_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LDT1_SRCD_FK'
ALTER TABLE RA_LOG_DEPTH_TYPE ADD CONSTRAINT RA_LDT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LD3_BA_FK'
ALTER TABLE RA_LOG_DIRECTION ADD CONSTRAINT RA_LD3_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LD3_PSWA_FK'
ALTER TABLE RA_LOG_DIRECTION ADD CONSTRAINT RA_LD3_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LD3_R_ART_FK'
ALTER TABLE RA_LOG_DIRECTION ADD CONSTRAINT RA_LD3_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LD3_R_ATY_FK'
ALTER TABLE RA_LOG_DIRECTION ADD CONSTRAINT RA_LD3_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LD3_R_LANG_FK'
ALTER TABLE RA_LOG_DIRECTION ADD CONSTRAINT RA_LD3_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LD3_R_LD3_FK'
ALTER TABLE RA_LOG_DIRECTION ADD CONSTRAINT RA_LD3_R_LD3_FK FOREIGN KEY
(
LOG_DIRECTION
)
REFERENCES R_LOG_DIRECTION
(
LOG_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LD3_SRCD_FK'
ALTER TABLE RA_LOG_DIRECTION ADD CONSTRAINT RA_LD3_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LGVT_BA_FK'
ALTER TABLE RA_LOG_GOOD_VALUE_TYPE ADD CONSTRAINT RA_LGVT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LGVT_PSWA_FK'
ALTER TABLE RA_LOG_GOOD_VALUE_TYPE ADD CONSTRAINT RA_LGVT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LGVT_R_ART_FK'
ALTER TABLE RA_LOG_GOOD_VALUE_TYPE ADD CONSTRAINT RA_LGVT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LGVT_R_ATY_FK'
ALTER TABLE RA_LOG_GOOD_VALUE_TYPE ADD CONSTRAINT RA_LGVT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LGVT_R_LANG_FK'
ALTER TABLE RA_LOG_GOOD_VALUE_TYPE ADD CONSTRAINT RA_LGVT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LGVT_R_LGVT_FK'
ALTER TABLE RA_LOG_GOOD_VALUE_TYPE ADD CONSTRAINT RA_LGVT_R_LGVT_FK FOREIGN KEY
(
GOOD_VALUE_TYPE
)
REFERENCES R_LOG_GOOD_VALUE_TYPE
(
GOOD_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LGVT_SRCD_FK'
ALTER TABLE RA_LOG_GOOD_VALUE_TYPE ADD CONSTRAINT RA_LGVT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LIX_BA_FK'
ALTER TABLE RA_LOG_INDEX_TYPE ADD CONSTRAINT RA_LIX_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LIX_PSWA_FK'
ALTER TABLE RA_LOG_INDEX_TYPE ADD CONSTRAINT RA_LIX_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LIX_R_ART_FK'
ALTER TABLE RA_LOG_INDEX_TYPE ADD CONSTRAINT RA_LIX_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LIX_R_ATY_FK'
ALTER TABLE RA_LOG_INDEX_TYPE ADD CONSTRAINT RA_LIX_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LIX_R_LANG_FK'
ALTER TABLE RA_LOG_INDEX_TYPE ADD CONSTRAINT RA_LIX_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LIX_R_LIX_FK'
ALTER TABLE RA_LOG_INDEX_TYPE ADD CONSTRAINT RA_LIX_R_LIX_FK FOREIGN KEY
(
INDEX_TYPE
)
REFERENCES R_LOG_INDEX_TYPE
(
INDEX_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LIX_SRCD_FK'
ALTER TABLE RA_LOG_INDEX_TYPE ADD CONSTRAINT RA_LIX_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LM_BA_FK'
ALTER TABLE RA_LOG_MATRIX ADD CONSTRAINT RA_LM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LM_PSWA_FK'
ALTER TABLE RA_LOG_MATRIX ADD CONSTRAINT RA_LM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LM_R_ART_FK'
ALTER TABLE RA_LOG_MATRIX ADD CONSTRAINT RA_LM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LM_R_ATY_FK'
ALTER TABLE RA_LOG_MATRIX ADD CONSTRAINT RA_LM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LM_R_LANG_FK'
ALTER TABLE RA_LOG_MATRIX ADD CONSTRAINT RA_LM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LM_R_LM_FK'
ALTER TABLE RA_LOG_MATRIX ADD CONSTRAINT RA_LM_R_LM_FK FOREIGN KEY
(
LOG_MATRIX_TYPE
)
REFERENCES R_LOG_MATRIX
(
LOG_MATRIX_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LM_SRCD_FK'
ALTER TABLE RA_LOG_MATRIX ADD CONSTRAINT RA_LM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LPOST_BA_FK'
ALTER TABLE RA_LOG_POSITION_TYPE ADD CONSTRAINT RA_LPOST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LPOST_PSWA_FK'
ALTER TABLE RA_LOG_POSITION_TYPE ADD CONSTRAINT RA_LPOST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LPOST_R_ART_FK'
ALTER TABLE RA_LOG_POSITION_TYPE ADD CONSTRAINT RA_LPOST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LPOST_R_ATY_FK'
ALTER TABLE RA_LOG_POSITION_TYPE ADD CONSTRAINT RA_LPOST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LPOST_R_LANG_FK'
ALTER TABLE RA_LOG_POSITION_TYPE ADD CONSTRAINT RA_LPOST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LPOST_R_LPOST_FK'
ALTER TABLE RA_LOG_POSITION_TYPE ADD CONSTRAINT RA_LPOST_R_LPOST_FK FOREIGN KEY
(
POSITION_TYPE
)
REFERENCES R_LOG_POSITION_TYPE
(
POSITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LPOST_SRCD_FK'
ALTER TABLE RA_LOG_POSITION_TYPE ADD CONSTRAINT RA_LPOST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT_BA_FK'
ALTER TABLE RA_LOG_TOOL_TYPE ADD CONSTRAINT RA_LTT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT_PSWA_FK'
ALTER TABLE RA_LOG_TOOL_TYPE ADD CONSTRAINT RA_LTT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT_R_ART_FK'
ALTER TABLE RA_LOG_TOOL_TYPE ADD CONSTRAINT RA_LTT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT_R_ATY_FK'
ALTER TABLE RA_LOG_TOOL_TYPE ADD CONSTRAINT RA_LTT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT_R_LANG_FK'
ALTER TABLE RA_LOG_TOOL_TYPE ADD CONSTRAINT RA_LTT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT_R_LTT_FK'
ALTER TABLE RA_LOG_TOOL_TYPE ADD CONSTRAINT RA_LTT_R_LTT_FK FOREIGN KEY
(
LOG_TOOL_TYPE
)
REFERENCES R_LOG_TOOL_TYPE
(
LOG_TOOL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT_SRCD_FK'
ALTER TABLE RA_LOG_TOOL_TYPE ADD CONSTRAINT RA_LTT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LMT_BA_FK'
ALTER TABLE RA_LOST_MATERIAL_TYPE ADD CONSTRAINT RA_LMT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LMT_PSWA_FK'
ALTER TABLE RA_LOST_MATERIAL_TYPE ADD CONSTRAINT RA_LMT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LMT_R_ART_FK'
ALTER TABLE RA_LOST_MATERIAL_TYPE ADD CONSTRAINT RA_LMT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LMT_R_ATY_FK'
ALTER TABLE RA_LOST_MATERIAL_TYPE ADD CONSTRAINT RA_LMT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LMT_R_LANG_FK'
ALTER TABLE RA_LOST_MATERIAL_TYPE ADD CONSTRAINT RA_LMT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LMT_R_LMT_FK'
ALTER TABLE RA_LOST_MATERIAL_TYPE ADD CONSTRAINT RA_LMT_R_LMT_FK FOREIGN KEY
(
LOST_MATERIAL_TYPE
)
REFERENCES R_LOST_MATERIAL_TYPE
(
LOST_MATERIAL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LMT_SRCD_FK'
ALTER TABLE RA_LOST_MATERIAL_TYPE ADD CONSTRAINT RA_LMT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LFX_BA_FK'
ALTER TABLE RA_LR_FACILITY_XREF ADD CONSTRAINT RA_LFX_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LFX_PSWA_FK'
ALTER TABLE RA_LR_FACILITY_XREF ADD CONSTRAINT RA_LFX_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LFX_R_ART_FK'
ALTER TABLE RA_LR_FACILITY_XREF ADD CONSTRAINT RA_LFX_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LFX_R_ATY_FK'
ALTER TABLE RA_LR_FACILITY_XREF ADD CONSTRAINT RA_LFX_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LFX_R_LANG_FK'
ALTER TABLE RA_LR_FACILITY_XREF ADD CONSTRAINT RA_LFX_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LFX_R_LFX_FK'
ALTER TABLE RA_LR_FACILITY_XREF ADD CONSTRAINT RA_LFX_R_LFX_FK FOREIGN KEY
(
XREF_TYPE
)
REFERENCES R_LR_FACILITY_XREF
(
XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LFX_SRCD_FK'
ALTER TABLE RA_LR_FACILITY_XREF ADD CONSTRAINT RA_LFX_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LFX1_BA_FK'
ALTER TABLE RA_LR_FIELD_XREF ADD CONSTRAINT RA_LFX1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LFX1_PSWA_FK'
ALTER TABLE RA_LR_FIELD_XREF ADD CONSTRAINT RA_LFX1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LFX1_R_ART_FK'
ALTER TABLE RA_LR_FIELD_XREF ADD CONSTRAINT RA_LFX1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LFX1_R_ATY_FK'
ALTER TABLE RA_LR_FIELD_XREF ADD CONSTRAINT RA_LFX1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LFX1_R_LANG_FK'
ALTER TABLE RA_LR_FIELD_XREF ADD CONSTRAINT RA_LFX1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LFX1_R_LFX1_FK'
ALTER TABLE RA_LR_FIELD_XREF ADD CONSTRAINT RA_LFX1_R_LFX1_FK FOREIGN KEY
(
XREF_TYPE
)
REFERENCES R_LR_FIELD_XREF
(
XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LFX1_SRCD_FK'
ALTER TABLE RA_LR_FIELD_XREF ADD CONSTRAINT RA_LFX1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LST2_BA_FK'
ALTER TABLE RA_LR_SIZE_TYPE ADD CONSTRAINT RA_LST2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LST2_PSWA_FK'
ALTER TABLE RA_LR_SIZE_TYPE ADD CONSTRAINT RA_LST2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LST2_R_ART_FK'
ALTER TABLE RA_LR_SIZE_TYPE ADD CONSTRAINT RA_LST2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LST2_R_ATY_FK'
ALTER TABLE RA_LR_SIZE_TYPE ADD CONSTRAINT RA_LST2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LST2_R_LANG_FK'
ALTER TABLE RA_LR_SIZE_TYPE ADD CONSTRAINT RA_LST2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LST2_R_LST2_FK'
ALTER TABLE RA_LR_SIZE_TYPE ADD CONSTRAINT RA_LST2_R_LST2_FK FOREIGN KEY
(
SIZE_TYPE
)
REFERENCES R_LR_SIZE_TYPE
(
SIZE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LST2_SRCD_FK'
ALTER TABLE RA_LR_SIZE_TYPE ADD CONSTRAINT RA_LST2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTR_BA_FK'
ALTER TABLE RA_LR_TERMIN_REQMT ADD CONSTRAINT RA_LTR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTR_PSWA_FK'
ALTER TABLE RA_LR_TERMIN_REQMT ADD CONSTRAINT RA_LTR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTR_R_ART_FK'
ALTER TABLE RA_LR_TERMIN_REQMT ADD CONSTRAINT RA_LTR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTR_R_ATY_FK'
ALTER TABLE RA_LR_TERMIN_REQMT ADD CONSTRAINT RA_LTR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTR_R_LANG_FK'
ALTER TABLE RA_LR_TERMIN_REQMT ADD CONSTRAINT RA_LTR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTR_R_LTR_FK'
ALTER TABLE RA_LR_TERMIN_REQMT ADD CONSTRAINT RA_LTR_R_LTR_FK FOREIGN KEY
(
TERMINATION_REQMT
)
REFERENCES R_LR_TERMIN_REQMT
(
TERMINATION_REQMT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTR_SRCD_FK'
ALTER TABLE RA_LR_TERMIN_REQMT ADD CONSTRAINT RA_LTR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT1_BA_FK'
ALTER TABLE RA_LR_TERMIN_TYPE ADD CONSTRAINT RA_LTT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT1_PSWA_FK'
ALTER TABLE RA_LR_TERMIN_TYPE ADD CONSTRAINT RA_LTT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT1_R_ART_FK'
ALTER TABLE RA_LR_TERMIN_TYPE ADD CONSTRAINT RA_LTT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT1_R_ATY_FK'
ALTER TABLE RA_LR_TERMIN_TYPE ADD CONSTRAINT RA_LTT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT1_R_LANG_FK'
ALTER TABLE RA_LR_TERMIN_TYPE ADD CONSTRAINT RA_LTT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT1_R_LTT1_FK'
ALTER TABLE RA_LR_TERMIN_TYPE ADD CONSTRAINT RA_LTT1_R_LTT1_FK FOREIGN KEY
(
TERMINATION_TYPE
)
REFERENCES R_LR_TERMIN_TYPE
(
TERMINATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LTT1_SRCD_FK'
ALTER TABLE RA_LR_TERMIN_TYPE ADD CONSTRAINT RA_LTT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LXT_BA_FK'
ALTER TABLE RA_LR_XREF_TYPE ADD CONSTRAINT RA_LXT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LXT_PSWA_FK'
ALTER TABLE RA_LR_XREF_TYPE ADD CONSTRAINT RA_LXT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LXT_R_ART_FK'
ALTER TABLE RA_LR_XREF_TYPE ADD CONSTRAINT RA_LXT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LXT_R_ATY_FK'
ALTER TABLE RA_LR_XREF_TYPE ADD CONSTRAINT RA_LXT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LXT_R_LANG_FK'
ALTER TABLE RA_LR_XREF_TYPE ADD CONSTRAINT RA_LXT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LXT_R_LXT_FK'
ALTER TABLE RA_LR_XREF_TYPE ADD CONSTRAINT RA_LXT_R_LXT_FK FOREIGN KEY
(
LR_XREF_TYPE
)
REFERENCES R_LR_XREF_TYPE
(
LR_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LXT_SRCD_FK'
ALTER TABLE RA_LR_XREF_TYPE ADD CONSTRAINT RA_LXT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOCR_BA_FK'
ALTER TABLE RA_L_OFFR_CANCEL_RSN ADD CONSTRAINT RA_LOCR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOCR_PSWA_FK'
ALTER TABLE RA_L_OFFR_CANCEL_RSN ADD CONSTRAINT RA_LOCR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOCR_R_ART_FK'
ALTER TABLE RA_L_OFFR_CANCEL_RSN ADD CONSTRAINT RA_LOCR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOCR_R_ATY_FK'
ALTER TABLE RA_L_OFFR_CANCEL_RSN ADD CONSTRAINT RA_LOCR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOCR_R_LANG_FK'
ALTER TABLE RA_L_OFFR_CANCEL_RSN ADD CONSTRAINT RA_LOCR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOCR_R_LOCR_FK'
ALTER TABLE RA_L_OFFR_CANCEL_RSN ADD CONSTRAINT RA_LOCR_R_LOCR_FK FOREIGN KEY
(
LAND_OFFR_CANCEL_RSN
)
REFERENCES R_L_OFFR_CANCEL_RSN
(
LAND_OFFR_CANCEL_RSN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_LOCR_SRCD_FK'
ALTER TABLE RA_L_OFFR_CANCEL_RSN ADD CONSTRAINT RA_LOCR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MAT_BA_FK'
ALTER TABLE RA_MACERAL_AMOUNT_TYPE ADD CONSTRAINT RA_MAT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MAT_PSWA_FK'
ALTER TABLE RA_MACERAL_AMOUNT_TYPE ADD CONSTRAINT RA_MAT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MAT_R_ART_FK'
ALTER TABLE RA_MACERAL_AMOUNT_TYPE ADD CONSTRAINT RA_MAT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MAT_R_ATY_FK'
ALTER TABLE RA_MACERAL_AMOUNT_TYPE ADD CONSTRAINT RA_MAT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MAT_R_LANG_FK'
ALTER TABLE RA_MACERAL_AMOUNT_TYPE ADD CONSTRAINT RA_MAT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MAT_R_MAT_FK'
ALTER TABLE RA_MACERAL_AMOUNT_TYPE ADD CONSTRAINT RA_MAT_R_MAT_FK FOREIGN KEY
(
MACERAL_AMOUNT_TYPE
)
REFERENCES R_MACERAL_AMOUNT_TYPE
(
MACERAL_AMOUNT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MAT_SRCD_FK'
ALTER TABLE RA_MACERAL_AMOUNT_TYPE ADD CONSTRAINT RA_MAT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MP_BA_FK'
ALTER TABLE RA_MAINT_PROCESS ADD CONSTRAINT RA_MP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MP_PSWA_FK'
ALTER TABLE RA_MAINT_PROCESS ADD CONSTRAINT RA_MP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MP_R_ART_FK'
ALTER TABLE RA_MAINT_PROCESS ADD CONSTRAINT RA_MP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MP_R_ATY_FK'
ALTER TABLE RA_MAINT_PROCESS ADD CONSTRAINT RA_MP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MP_R_LANG_FK'
ALTER TABLE RA_MAINT_PROCESS ADD CONSTRAINT RA_MP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MP_R_MP_FK'
ALTER TABLE RA_MAINT_PROCESS ADD CONSTRAINT RA_MP_R_MP_FK FOREIGN KEY
(
MAINTAIN_PROCESS
)
REFERENCES R_MAINT_PROCESS
(
MAINTAIN_PROCESS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MP_SRCD_FK'
ALTER TABLE RA_MAINT_PROCESS ADD CONSTRAINT RA_MP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MTT_BA_FK'
ALTER TABLE RA_MATURATION_TYPE ADD CONSTRAINT RA_MTT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MTT_PSWA_FK'
ALTER TABLE RA_MATURATION_TYPE ADD CONSTRAINT RA_MTT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MTT_R_ART_FK'
ALTER TABLE RA_MATURATION_TYPE ADD CONSTRAINT RA_MTT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MTT_R_ATY_FK'
ALTER TABLE RA_MATURATION_TYPE ADD CONSTRAINT RA_MTT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MTT_R_LANG_FK'
ALTER TABLE RA_MATURATION_TYPE ADD CONSTRAINT RA_MTT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MTT_R_MTT_FK'
ALTER TABLE RA_MATURATION_TYPE ADD CONSTRAINT RA_MTT_R_MTT_FK FOREIGN KEY
(
MATURATION_TYPE
)
REFERENCES R_MATURATION_TYPE
(
MATURATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MTT_SRCD_FK'
ALTER TABLE RA_MATURATION_TYPE ADD CONSTRAINT RA_MTT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MM_BA_FK'
ALTER TABLE RA_MATURITY_METHOD ADD CONSTRAINT RA_MM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MM_PSWA_FK'
ALTER TABLE RA_MATURITY_METHOD ADD CONSTRAINT RA_MM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MM_R_ART_FK'
ALTER TABLE RA_MATURITY_METHOD ADD CONSTRAINT RA_MM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MM_R_ATY_FK'
ALTER TABLE RA_MATURITY_METHOD ADD CONSTRAINT RA_MM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MM_R_LANG_FK'
ALTER TABLE RA_MATURITY_METHOD ADD CONSTRAINT RA_MM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MM_R_MM_FK'
ALTER TABLE RA_MATURITY_METHOD ADD CONSTRAINT RA_MM_R_MM_FK FOREIGN KEY
(
MATURITY_METHOD_TYPE
)
REFERENCES R_MATURITY_METHOD
(
MATURITY_METHOD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MM_SRCD_FK'
ALTER TABLE RA_MATURITY_METHOD ADD CONSTRAINT RA_MM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MBCM_BA_FK'
ALTER TABLE RA_MBAL_COMPRESS_TYPE ADD CONSTRAINT RA_MBCM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MBCM_PSWA_FK'
ALTER TABLE RA_MBAL_COMPRESS_TYPE ADD CONSTRAINT RA_MBCM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MBCM_R_ART_FK'
ALTER TABLE RA_MBAL_COMPRESS_TYPE ADD CONSTRAINT RA_MBCM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MBCM_R_ATY_FK'
ALTER TABLE RA_MBAL_COMPRESS_TYPE ADD CONSTRAINT RA_MBCM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MBCM_R_LANG_FK'
ALTER TABLE RA_MBAL_COMPRESS_TYPE ADD CONSTRAINT RA_MBCM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MBCM_R_MBCM_FK'
ALTER TABLE RA_MBAL_COMPRESS_TYPE ADD CONSTRAINT RA_MBCM_R_MBCM_FK FOREIGN KEY
(
Z_FACTOR_METHOD
)
REFERENCES R_MBAL_COMPRESS_TYPE
(
Z_FACTOR_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MBCM_SRCD_FK'
ALTER TABLE RA_MBAL_COMPRESS_TYPE ADD CONSTRAINT RA_MBCM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MBCT_BA_FK'
ALTER TABLE RA_MBAL_CURVE_TYPE ADD CONSTRAINT RA_MBCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MBCT_PSWA_FK'
ALTER TABLE RA_MBAL_CURVE_TYPE ADD CONSTRAINT RA_MBCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MBCT_R_ART_FK'
ALTER TABLE RA_MBAL_CURVE_TYPE ADD CONSTRAINT RA_MBCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MBCT_R_ATY_FK'
ALTER TABLE RA_MBAL_CURVE_TYPE ADD CONSTRAINT RA_MBCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MBCT_R_LANG_FK'
ALTER TABLE RA_MBAL_CURVE_TYPE ADD CONSTRAINT RA_MBCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MBCT_R_MBCT_FK'
ALTER TABLE RA_MBAL_CURVE_TYPE ADD CONSTRAINT RA_MBCT_R_MBCT_FK FOREIGN KEY
(
CURVE_FIT_TYPE
)
REFERENCES R_MBAL_CURVE_TYPE
(
CURVE_FIT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MBCT_SRCD_FK'
ALTER TABLE RA_MBAL_CURVE_TYPE ADD CONSTRAINT RA_MBCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ML_BA_FK'
ALTER TABLE RA_MEASUREMENT_LOC ADD CONSTRAINT RA_ML_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ML_PSWA_FK'
ALTER TABLE RA_MEASUREMENT_LOC ADD CONSTRAINT RA_ML_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ML_R_ART_FK'
ALTER TABLE RA_MEASUREMENT_LOC ADD CONSTRAINT RA_ML_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ML_R_ATY_FK'
ALTER TABLE RA_MEASUREMENT_LOC ADD CONSTRAINT RA_ML_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ML_R_LANG_FK'
ALTER TABLE RA_MEASUREMENT_LOC ADD CONSTRAINT RA_ML_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ML_R_ML_FK'
ALTER TABLE RA_MEASUREMENT_LOC ADD CONSTRAINT RA_ML_R_ML_FK FOREIGN KEY
(
MEASUREMENT_LOCATION_TYPE
)
REFERENCES R_MEASUREMENT_LOC
(
MEASUREMENT_LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ML_SRCD_FK'
ALTER TABLE RA_MEASUREMENT_LOC ADD CONSTRAINT RA_ML_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MT1_BA_FK'
ALTER TABLE RA_MEASUREMENT_TYPE ADD CONSTRAINT RA_MT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MT1_PSWA_FK'
ALTER TABLE RA_MEASUREMENT_TYPE ADD CONSTRAINT RA_MT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MT1_R_ART_FK'
ALTER TABLE RA_MEASUREMENT_TYPE ADD CONSTRAINT RA_MT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MT1_R_ATY_FK'
ALTER TABLE RA_MEASUREMENT_TYPE ADD CONSTRAINT RA_MT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MT1_R_LANG_FK'
ALTER TABLE RA_MEASUREMENT_TYPE ADD CONSTRAINT RA_MT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MT1_R_MT1_FK'
ALTER TABLE RA_MEASUREMENT_TYPE ADD CONSTRAINT RA_MT1_R_MT1_FK FOREIGN KEY
(
MEASUREMENT_TYPE
)
REFERENCES R_MEASUREMENT_TYPE
(
MEASUREMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MT1_SRCD_FK'
ALTER TABLE RA_MEASUREMENT_TYPE ADD CONSTRAINT RA_MT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MT_BA_FK'
ALTER TABLE RA_MEASURE_TECHNIQUE ADD CONSTRAINT RA_MT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MT_PSWA_FK'
ALTER TABLE RA_MEASURE_TECHNIQUE ADD CONSTRAINT RA_MT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MT_R_ART_FK'
ALTER TABLE RA_MEASURE_TECHNIQUE ADD CONSTRAINT RA_MT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MT_R_ATY_FK'
ALTER TABLE RA_MEASURE_TECHNIQUE ADD CONSTRAINT RA_MT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MT_R_LANG_FK'
ALTER TABLE RA_MEASURE_TECHNIQUE ADD CONSTRAINT RA_MT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MT_R_MT_FK'
ALTER TABLE RA_MEASURE_TECHNIQUE ADD CONSTRAINT RA_MT_R_MT_FK FOREIGN KEY
(
MEASUREMENT_TECHNIQUE
)
REFERENCES R_MEASURE_TECHNIQUE
(
MEASUREMENT_TECHNIQUE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MT_SRCD_FK'
ALTER TABLE RA_MEASURE_TECHNIQUE ADD CONSTRAINT RA_MT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MT2_BA_FK'
ALTER TABLE RA_MEDIA_TYPE ADD CONSTRAINT RA_MT2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MT2_PSWA_FK'
ALTER TABLE RA_MEDIA_TYPE ADD CONSTRAINT RA_MT2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MT2_R_ART_FK'
ALTER TABLE RA_MEDIA_TYPE ADD CONSTRAINT RA_MT2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MT2_R_ATY_FK'
ALTER TABLE RA_MEDIA_TYPE ADD CONSTRAINT RA_MT2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MT2_R_LANG_FK'
ALTER TABLE RA_MEDIA_TYPE ADD CONSTRAINT RA_MT2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MT2_R_MT2_FK'
ALTER TABLE RA_MEDIA_TYPE ADD CONSTRAINT RA_MT2_R_MT2_FK FOREIGN KEY
(
MEDIA_TYPE
)
REFERENCES R_MEDIA_TYPE
(
MEDIA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MT2_SRCD_FK'
ALTER TABLE RA_MEDIA_TYPE ADD CONSTRAINT RA_MT2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MTHT_BA_FK'
ALTER TABLE RA_METHOD_TYPE ADD CONSTRAINT RA_MTHT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MTHT_PSWA_FK'
ALTER TABLE RA_METHOD_TYPE ADD CONSTRAINT RA_MTHT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MTHT_R_ART_FK'
ALTER TABLE RA_METHOD_TYPE ADD CONSTRAINT RA_MTHT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MTHT_R_ATY_FK'
ALTER TABLE RA_METHOD_TYPE ADD CONSTRAINT RA_MTHT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MTHT_R_LANG_FK'
ALTER TABLE RA_METHOD_TYPE ADD CONSTRAINT RA_MTHT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MTHT_R_MTHT_FK'
ALTER TABLE RA_METHOD_TYPE ADD CONSTRAINT RA_MTHT_R_MTHT_FK FOREIGN KEY
(
METHOD_TYPE
)
REFERENCES R_METHOD_TYPE
(
METHOD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MTHT_SRCD_FK'
ALTER TABLE RA_METHOD_TYPE ADD CONSTRAINT RA_MTHT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MDC_BA_FK'
ALTER TABLE RA_MISC_DATA_CODE ADD CONSTRAINT RA_MDC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MDC_PSWA_FK'
ALTER TABLE RA_MISC_DATA_CODE ADD CONSTRAINT RA_MDC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MDC_R_ART_FK'
ALTER TABLE RA_MISC_DATA_CODE ADD CONSTRAINT RA_MDC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MDC_R_ATY_FK'
ALTER TABLE RA_MISC_DATA_CODE ADD CONSTRAINT RA_MDC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MDC_R_LANG_FK'
ALTER TABLE RA_MISC_DATA_CODE ADD CONSTRAINT RA_MDC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MDC_R_MDC_FK'
ALTER TABLE RA_MISC_DATA_CODE ADD CONSTRAINT RA_MDC_R_MDC_FK FOREIGN KEY
(
MISC_DATA_TYPE,
MISC_DATA_CODE
)
REFERENCES R_MISC_DATA_CODE
(
MISC_DATA_TYPE,
MISC_DATA_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MDC_SRCD_FK'
ALTER TABLE RA_MISC_DATA_CODE ADD CONSTRAINT RA_MDC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MDT_BA_FK'
ALTER TABLE RA_MISC_DATA_TYPE ADD CONSTRAINT RA_MDT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MDT_PSWA_FK'
ALTER TABLE RA_MISC_DATA_TYPE ADD CONSTRAINT RA_MDT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MDT_R_ART_FK'
ALTER TABLE RA_MISC_DATA_TYPE ADD CONSTRAINT RA_MDT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MDT_R_ATY_FK'
ALTER TABLE RA_MISC_DATA_TYPE ADD CONSTRAINT RA_MDT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MDT_R_LANG_FK'
ALTER TABLE RA_MISC_DATA_TYPE ADD CONSTRAINT RA_MDT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MDT_R_MDT_FK'
ALTER TABLE RA_MISC_DATA_TYPE ADD CONSTRAINT RA_MDT_R_MDT_FK FOREIGN KEY
(
MISC_DATA_TYPE
)
REFERENCES R_MISC_DATA_TYPE
(
MISC_DATA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MDT_SRCD_FK'
ALTER TABLE RA_MISC_DATA_TYPE ADD CONSTRAINT RA_MDT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MIST_BA_FK'
ALTER TABLE RA_MISSING_STRAT_TYPE ADD CONSTRAINT RA_MIST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MIST_PSWA_FK'
ALTER TABLE RA_MISSING_STRAT_TYPE ADD CONSTRAINT RA_MIST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MIST_R_ART_FK'
ALTER TABLE RA_MISSING_STRAT_TYPE ADD CONSTRAINT RA_MIST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MIST_R_ATY_FK'
ALTER TABLE RA_MISSING_STRAT_TYPE ADD CONSTRAINT RA_MIST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MIST_R_LANG_FK'
ALTER TABLE RA_MISSING_STRAT_TYPE ADD CONSTRAINT RA_MIST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MIST_R_MIST_FK'
ALTER TABLE RA_MISSING_STRAT_TYPE ADD CONSTRAINT RA_MIST_R_MIST_FK FOREIGN KEY
(
MISSING_STRAT_TYPE
)
REFERENCES R_MISSING_STRAT_TYPE
(
MISSING_STRAT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MIST_SRCD_FK'
ALTER TABLE RA_MISSING_STRAT_TYPE ADD CONSTRAINT RA_MIST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MBT_BA_FK'
ALTER TABLE RA_MOBILITY_TYPE ADD CONSTRAINT RA_MBT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MBT_PSWA_FK'
ALTER TABLE RA_MOBILITY_TYPE ADD CONSTRAINT RA_MBT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MBT_R_ART_FK'
ALTER TABLE RA_MOBILITY_TYPE ADD CONSTRAINT RA_MBT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MBT_R_ATY_FK'
ALTER TABLE RA_MOBILITY_TYPE ADD CONSTRAINT RA_MBT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MBT_R_LANG_FK'
ALTER TABLE RA_MOBILITY_TYPE ADD CONSTRAINT RA_MBT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MBT_R_MBT_FK'
ALTER TABLE RA_MOBILITY_TYPE ADD CONSTRAINT RA_MBT_R_MBT_FK FOREIGN KEY
(
MOBILITY_TYPE
)
REFERENCES R_MOBILITY_TYPE
(
MOBILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MBT_SRCD_FK'
ALTER TABLE RA_MOBILITY_TYPE ADD CONSTRAINT RA_MBT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MO_BA_FK'
ALTER TABLE RA_MONTH ADD CONSTRAINT RA_MO_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MO_PSWA_FK'
ALTER TABLE RA_MONTH ADD CONSTRAINT RA_MO_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MO_R_ART_FK'
ALTER TABLE RA_MONTH ADD CONSTRAINT RA_MO_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MO_R_ATY_FK'
ALTER TABLE RA_MONTH ADD CONSTRAINT RA_MO_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MO_R_LANG_FK'
ALTER TABLE RA_MONTH ADD CONSTRAINT RA_MO_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MO_R_MO_FK'
ALTER TABLE RA_MONTH ADD CONSTRAINT RA_MO_R_MO_FK FOREIGN KEY
(
MONTH
)
REFERENCES R_MONTH
(
MONTH
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MO_SRCD_FK'
ALTER TABLE RA_MONTH ADD CONSTRAINT RA_MO_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MCR_BA_FK'
ALTER TABLE RA_MUD_COLLECT_REASON ADD CONSTRAINT RA_MCR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MCR_PSWA_FK'
ALTER TABLE RA_MUD_COLLECT_REASON ADD CONSTRAINT RA_MCR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MCR_R_ART_FK'
ALTER TABLE RA_MUD_COLLECT_REASON ADD CONSTRAINT RA_MCR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MCR_R_ATY_FK'
ALTER TABLE RA_MUD_COLLECT_REASON ADD CONSTRAINT RA_MCR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MCR_R_LANG_FK'
ALTER TABLE RA_MUD_COLLECT_REASON ADD CONSTRAINT RA_MCR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MCR_R_MCR_FK'
ALTER TABLE RA_MUD_COLLECT_REASON ADD CONSTRAINT RA_MCR_R_MCR_FK FOREIGN KEY
(
MUD_COLLECT_REASON
)
REFERENCES R_MUD_COLLECT_REASON
(
MUD_COLLECT_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MCR_SRCD_FK'
ALTER TABLE RA_MUD_COLLECT_REASON ADD CONSTRAINT RA_MCR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MLC_BA_FK'
ALTER TABLE RA_MUD_LOG_COLOR ADD CONSTRAINT RA_MLC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MLC_PSWA_FK'
ALTER TABLE RA_MUD_LOG_COLOR ADD CONSTRAINT RA_MLC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MLC_R_ART_FK'
ALTER TABLE RA_MUD_LOG_COLOR ADD CONSTRAINT RA_MLC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MLC_R_ATY_FK'
ALTER TABLE RA_MUD_LOG_COLOR ADD CONSTRAINT RA_MLC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MLC_R_LANG_FK'
ALTER TABLE RA_MUD_LOG_COLOR ADD CONSTRAINT RA_MLC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MLC_R_MLC_FK'
ALTER TABLE RA_MUD_LOG_COLOR ADD CONSTRAINT RA_MLC_R_MLC_FK FOREIGN KEY
(
MUD_LOG_COLOR
)
REFERENCES R_MUD_LOG_COLOR
(
MUD_LOG_COLOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MLC_SRCD_FK'
ALTER TABLE RA_MUD_LOG_COLOR ADD CONSTRAINT RA_MLC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MPC_BA_FK'
ALTER TABLE RA_MUD_PROPERTY_CODE ADD CONSTRAINT RA_MPC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MPC_PSWA_FK'
ALTER TABLE RA_MUD_PROPERTY_CODE ADD CONSTRAINT RA_MPC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MPC_R_ART_FK'
ALTER TABLE RA_MUD_PROPERTY_CODE ADD CONSTRAINT RA_MPC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MPC_R_ATY_FK'
ALTER TABLE RA_MUD_PROPERTY_CODE ADD CONSTRAINT RA_MPC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MPC_R_LANG_FK'
ALTER TABLE RA_MUD_PROPERTY_CODE ADD CONSTRAINT RA_MPC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MPC_R_MPC_FK'
ALTER TABLE RA_MUD_PROPERTY_CODE ADD CONSTRAINT RA_MPC_R_MPC_FK FOREIGN KEY
(
MUD_PROPERTY,
MUD_PROPERTY_CODE
)
REFERENCES R_MUD_PROPERTY_CODE
(
MUD_PROPERTY,
MUD_PROPERTY_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MPC_R_MPT_FK'
ALTER TABLE RA_MUD_PROPERTY_CODE ADD CONSTRAINT RA_MPC_R_MPT_FK FOREIGN KEY
(
MUD_PROPERTY
)
REFERENCES R_MUD_PROPERTY_TYPE
(
MUD_PROPERTY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MPC_SRCD_FK'
ALTER TABLE RA_MUD_PROPERTY_CODE ADD CONSTRAINT RA_MPC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MPR_BA_FK'
ALTER TABLE RA_MUD_PROPERTY_REF ADD CONSTRAINT RA_MPR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MPR_PSWA_FK'
ALTER TABLE RA_MUD_PROPERTY_REF ADD CONSTRAINT RA_MPR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MPR_R_ART_FK'
ALTER TABLE RA_MUD_PROPERTY_REF ADD CONSTRAINT RA_MPR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MPR_R_ATY_FK'
ALTER TABLE RA_MUD_PROPERTY_REF ADD CONSTRAINT RA_MPR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MPR_R_LANG_FK'
ALTER TABLE RA_MUD_PROPERTY_REF ADD CONSTRAINT RA_MPR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MPR_R_MPR_FK'
ALTER TABLE RA_MUD_PROPERTY_REF ADD CONSTRAINT RA_MPR_R_MPR_FK FOREIGN KEY
(
MUD_PROPERTY_REF
)
REFERENCES R_MUD_PROPERTY_REF
(
MUD_PROPERTY_REF
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MPR_SRCD_FK'
ALTER TABLE RA_MUD_PROPERTY_REF ADD CONSTRAINT RA_MPR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MPT_BA_FK'
ALTER TABLE RA_MUD_PROPERTY_TYPE ADD CONSTRAINT RA_MPT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MPT_PSWA_FK'
ALTER TABLE RA_MUD_PROPERTY_TYPE ADD CONSTRAINT RA_MPT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MPT_R_ART_FK'
ALTER TABLE RA_MUD_PROPERTY_TYPE ADD CONSTRAINT RA_MPT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MPT_R_ATY_FK'
ALTER TABLE RA_MUD_PROPERTY_TYPE ADD CONSTRAINT RA_MPT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MPT_R_LANG_FK'
ALTER TABLE RA_MUD_PROPERTY_TYPE ADD CONSTRAINT RA_MPT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MPT_R_MPT_FK'
ALTER TABLE RA_MUD_PROPERTY_TYPE ADD CONSTRAINT RA_MPT_R_MPT_FK FOREIGN KEY
(
MUD_PROPERTY
)
REFERENCES R_MUD_PROPERTY_TYPE
(
MUD_PROPERTY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MPT_SRCD_FK'
ALTER TABLE RA_MUD_PROPERTY_TYPE ADD CONSTRAINT RA_MPT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MST_BA_FK'
ALTER TABLE RA_MUD_SAMPLE_TYPE ADD CONSTRAINT RA_MST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MST_PSWA_FK'
ALTER TABLE RA_MUD_SAMPLE_TYPE ADD CONSTRAINT RA_MST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MST_R_ART_FK'
ALTER TABLE RA_MUD_SAMPLE_TYPE ADD CONSTRAINT RA_MST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MST_R_ATY_FK'
ALTER TABLE RA_MUD_SAMPLE_TYPE ADD CONSTRAINT RA_MST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MST_R_LANG_FK'
ALTER TABLE RA_MUD_SAMPLE_TYPE ADD CONSTRAINT RA_MST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MST_R_MST_FK'
ALTER TABLE RA_MUD_SAMPLE_TYPE ADD CONSTRAINT RA_MST_R_MST_FK FOREIGN KEY
(
MUD_SAMPLE_TYPE
)
REFERENCES R_MUD_SAMPLE_TYPE
(
MUD_SAMPLE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_MST_SRCD_FK'
ALTER TABLE RA_MUD_SAMPLE_TYPE ADD CONSTRAINT RA_MST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_M_BA_FK'
ALTER TABLE RA_MUNICIPALITY ADD CONSTRAINT RA_M_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_M_PSWA_FK'
ALTER TABLE RA_MUNICIPALITY ADD CONSTRAINT RA_M_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_M_R_ART_FK'
ALTER TABLE RA_MUNICIPALITY ADD CONSTRAINT RA_M_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_M_R_ATY_FK'
ALTER TABLE RA_MUNICIPALITY ADD CONSTRAINT RA_M_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_M_R_LANG_FK'
ALTER TABLE RA_MUNICIPALITY ADD CONSTRAINT RA_M_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_M_R_M_FK'
ALTER TABLE RA_MUNICIPALITY ADD CONSTRAINT RA_M_R_M_FK FOREIGN KEY
(
MUNICIPALITY
)
REFERENCES R_MUNICIPALITY
(
MUNICIPALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_M_SRCD_FK'
ALTER TABLE RA_MUNICIPALITY ADD CONSTRAINT RA_M_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NSXT_BA_FK'
ALTER TABLE RA_NAME_SET_XREF_TYPE ADD CONSTRAINT RA_NSXT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NSXT_PSWA_FK'
ALTER TABLE RA_NAME_SET_XREF_TYPE ADD CONSTRAINT RA_NSXT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NSXT_R_ART_FK'
ALTER TABLE RA_NAME_SET_XREF_TYPE ADD CONSTRAINT RA_NSXT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NSXT_R_ATY_FK'
ALTER TABLE RA_NAME_SET_XREF_TYPE ADD CONSTRAINT RA_NSXT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NSXT_R_LANG_FK'
ALTER TABLE RA_NAME_SET_XREF_TYPE ADD CONSTRAINT RA_NSXT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NSXT_R_NSXT_FK'
ALTER TABLE RA_NAME_SET_XREF_TYPE ADD CONSTRAINT RA_NSXT_R_NSXT_FK FOREIGN KEY
(
XREF_TYPE
)
REFERENCES R_NAME_SET_XREF_TYPE
(
XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NSXT_SRCD_FK'
ALTER TABLE RA_NAME_SET_XREF_TYPE ADD CONSTRAINT RA_NSXT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NP_BA_FK'
ALTER TABLE RA_NODE_POSITION ADD CONSTRAINT RA_NP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NP_PSWA_FK'
ALTER TABLE RA_NODE_POSITION ADD CONSTRAINT RA_NP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NP_R_ART_FK'
ALTER TABLE RA_NODE_POSITION ADD CONSTRAINT RA_NP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NP_R_ATY_FK'
ALTER TABLE RA_NODE_POSITION ADD CONSTRAINT RA_NP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NP_R_LANG_FK'
ALTER TABLE RA_NODE_POSITION ADD CONSTRAINT RA_NP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NP_R_NP_FK'
ALTER TABLE RA_NODE_POSITION ADD CONSTRAINT RA_NP_R_NP_FK FOREIGN KEY
(
NODE_POSITION
)
REFERENCES R_NODE_POSITION
(
NODE_POSITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NP_SRCD_FK'
ALTER TABLE RA_NODE_POSITION ADD CONSTRAINT RA_NP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_N_BA_FK'
ALTER TABLE RA_NORTH ADD CONSTRAINT RA_N_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_N_PSWA_FK'
ALTER TABLE RA_NORTH ADD CONSTRAINT RA_N_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_N_R_ART_FK'
ALTER TABLE RA_NORTH ADD CONSTRAINT RA_N_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_N_R_ATY_FK'
ALTER TABLE RA_NORTH ADD CONSTRAINT RA_N_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_N_R_LANG_FK'
ALTER TABLE RA_NORTH ADD CONSTRAINT RA_N_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_N_R_N_FK'
ALTER TABLE RA_NORTH ADD CONSTRAINT RA_N_R_N_FK FOREIGN KEY
(
NORTH_TYPE
)
REFERENCES R_NORTH
(
NORTH_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_N_SRCD_FK'
ALTER TABLE RA_NORTH ADD CONSTRAINT RA_N_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NCT_BA_FK'
ALTER TABLE RA_NOTIFICATION_COMP_TYPE ADD CONSTRAINT RA_NCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NCT_PSWA_FK'
ALTER TABLE RA_NOTIFICATION_COMP_TYPE ADD CONSTRAINT RA_NCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NCT_R_ART_FK'
ALTER TABLE RA_NOTIFICATION_COMP_TYPE ADD CONSTRAINT RA_NCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NCT_R_ATY_FK'
ALTER TABLE RA_NOTIFICATION_COMP_TYPE ADD CONSTRAINT RA_NCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NCT_R_LANG_FK'
ALTER TABLE RA_NOTIFICATION_COMP_TYPE ADD CONSTRAINT RA_NCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NCT_R_NCT_FK'
ALTER TABLE RA_NOTIFICATION_COMP_TYPE ADD CONSTRAINT RA_NCT_R_NCT_FK FOREIGN KEY
(
NOTIFICATION_COMPONENT_TYPE
)
REFERENCES R_NOTIFICATION_COMP_TYPE
(
NOTIFICATION_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NCT_SRCD_FK'
ALTER TABLE RA_NOTIFICATION_COMP_TYPE ADD CONSTRAINT RA_NCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NT_BA_FK'
ALTER TABLE RA_NOTIFICATION_TYPE ADD CONSTRAINT RA_NT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NT_PSWA_FK'
ALTER TABLE RA_NOTIFICATION_TYPE ADD CONSTRAINT RA_NT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NT_R_ART_FK'
ALTER TABLE RA_NOTIFICATION_TYPE ADD CONSTRAINT RA_NT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NT_R_ATY_FK'
ALTER TABLE RA_NOTIFICATION_TYPE ADD CONSTRAINT RA_NT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NT_R_LANG_FK'
ALTER TABLE RA_NOTIFICATION_TYPE ADD CONSTRAINT RA_NT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NT_R_NT_FK'
ALTER TABLE RA_NOTIFICATION_TYPE ADD CONSTRAINT RA_NT_R_NT_FK FOREIGN KEY
(
NOTIFICATION_TYPE
)
REFERENCES R_NOTIFICATION_TYPE
(
NOTIFICATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NT_SRCD_FK'
ALTER TABLE RA_NOTIFICATION_TYPE ADD CONSTRAINT RA_NT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ND_BA_FK'
ALTER TABLE RA_NS_DIRECTION ADD CONSTRAINT RA_ND_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ND_PSWA_FK'
ALTER TABLE RA_NS_DIRECTION ADD CONSTRAINT RA_ND_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ND_R_ART_FK'
ALTER TABLE RA_NS_DIRECTION ADD CONSTRAINT RA_ND_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ND_R_ATY_FK'
ALTER TABLE RA_NS_DIRECTION ADD CONSTRAINT RA_ND_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ND_R_LANG_FK'
ALTER TABLE RA_NS_DIRECTION ADD CONSTRAINT RA_ND_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ND_R_ND_FK'
ALTER TABLE RA_NS_DIRECTION ADD CONSTRAINT RA_ND_R_ND_FK FOREIGN KEY
(
NS_DIRECTION
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ND_SRCD_FK'
ALTER TABLE RA_NS_DIRECTION ADD CONSTRAINT RA_ND_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NSL_BA_FK'
ALTER TABLE RA_NS_START_LINE ADD CONSTRAINT RA_NSL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NSL_PSWA_FK'
ALTER TABLE RA_NS_START_LINE ADD CONSTRAINT RA_NSL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NSL_R_ART_FK'
ALTER TABLE RA_NS_START_LINE ADD CONSTRAINT RA_NSL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NSL_R_ATY_FK'
ALTER TABLE RA_NS_START_LINE ADD CONSTRAINT RA_NSL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NSL_R_LANG_FK'
ALTER TABLE RA_NS_START_LINE ADD CONSTRAINT RA_NSL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NSL_R_NSL_FK'
ALTER TABLE RA_NS_START_LINE ADD CONSTRAINT RA_NSL_R_NSL_FK FOREIGN KEY
(
NS_START_LINE
)
REFERENCES R_NS_START_LINE
(
NS_START_LINE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_NSL_SRCD_FK'
ALTER TABLE RA_NS_START_LINE ADD CONSTRAINT RA_NSL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCM_BA_FK'
ALTER TABLE RA_OBLIG_CALC_METHOD ADD CONSTRAINT RA_OCM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCM_PSWA_FK'
ALTER TABLE RA_OBLIG_CALC_METHOD ADD CONSTRAINT RA_OCM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCM_R_ART_FK'
ALTER TABLE RA_OBLIG_CALC_METHOD ADD CONSTRAINT RA_OCM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCM_R_ATY_FK'
ALTER TABLE RA_OBLIG_CALC_METHOD ADD CONSTRAINT RA_OCM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCM_R_LANG_FK'
ALTER TABLE RA_OBLIG_CALC_METHOD ADD CONSTRAINT RA_OCM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCM_R_OCM_FK'
ALTER TABLE RA_OBLIG_CALC_METHOD ADD CONSTRAINT RA_OCM_R_OCM_FK FOREIGN KEY
(
CALCULATION_METHOD
)
REFERENCES R_OBLIG_CALC_METHOD
(
CALCULATION_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCM_SRCD_FK'
ALTER TABLE RA_OBLIG_CALC_METHOD ADD CONSTRAINT RA_OCM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCP_BA_FK'
ALTER TABLE RA_OBLIG_CALC_POINT ADD CONSTRAINT RA_OCP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCP_PSWA_FK'
ALTER TABLE RA_OBLIG_CALC_POINT ADD CONSTRAINT RA_OCP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCP_R_ART_FK'
ALTER TABLE RA_OBLIG_CALC_POINT ADD CONSTRAINT RA_OCP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCP_R_ATY_FK'
ALTER TABLE RA_OBLIG_CALC_POINT ADD CONSTRAINT RA_OCP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCP_R_LANG_FK'
ALTER TABLE RA_OBLIG_CALC_POINT ADD CONSTRAINT RA_OCP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCP_R_OCP_FK'
ALTER TABLE RA_OBLIG_CALC_POINT ADD CONSTRAINT RA_OCP_R_OCP_FK FOREIGN KEY
(
CALCULATION_POINT
)
REFERENCES R_OBLIG_CALC_POINT
(
CALCULATION_POINT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCP_SRCD_FK'
ALTER TABLE RA_OBLIG_CALC_POINT ADD CONSTRAINT RA_OCP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OC_BA_FK'
ALTER TABLE RA_OBLIG_CATEGORY ADD CONSTRAINT RA_OC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OC_PSWA_FK'
ALTER TABLE RA_OBLIG_CATEGORY ADD CONSTRAINT RA_OC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OC_R_ART_FK'
ALTER TABLE RA_OBLIG_CATEGORY ADD CONSTRAINT RA_OC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OC_R_ATY_FK'
ALTER TABLE RA_OBLIG_CATEGORY ADD CONSTRAINT RA_OC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OC_R_LANG_FK'
ALTER TABLE RA_OBLIG_CATEGORY ADD CONSTRAINT RA_OC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OC_R_OC_FK'
ALTER TABLE RA_OBLIG_CATEGORY ADD CONSTRAINT RA_OC_R_OC_FK FOREIGN KEY
(
LAND_OBLIG_CATEGORY
)
REFERENCES R_OBLIG_CATEGORY
(
LAND_OBLIG_CATEGORY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OC_SRCD_FK'
ALTER TABLE RA_OBLIG_CATEGORY ADD CONSTRAINT RA_OC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCT2_BA_FK'
ALTER TABLE RA_OBLIG_COMPONENT_TYPE ADD CONSTRAINT RA_OCT2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCT2_PSWA_FK'
ALTER TABLE RA_OBLIG_COMPONENT_TYPE ADD CONSTRAINT RA_OCT2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCT2_R_ART_FK'
ALTER TABLE RA_OBLIG_COMPONENT_TYPE ADD CONSTRAINT RA_OCT2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCT2_R_ATY_FK'
ALTER TABLE RA_OBLIG_COMPONENT_TYPE ADD CONSTRAINT RA_OCT2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCT2_R_LANG_FK'
ALTER TABLE RA_OBLIG_COMPONENT_TYPE ADD CONSTRAINT RA_OCT2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCT2_R_OCT2_FK'
ALTER TABLE RA_OBLIG_COMPONENT_TYPE ADD CONSTRAINT RA_OCT2_R_OCT2_FK FOREIGN KEY
(
OBLIGATION_COMPONENT_TYPE
)
REFERENCES R_OBLIG_COMPONENT_TYPE
(
OBLIGATION_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCT2_SRCD_FK'
ALTER TABLE RA_OBLIG_COMPONENT_TYPE ADD CONSTRAINT RA_OCT2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCR_BA_FK'
ALTER TABLE RA_OBLIG_COMP_REASON ADD CONSTRAINT RA_OCR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCR_PSWA_FK'
ALTER TABLE RA_OBLIG_COMP_REASON ADD CONSTRAINT RA_OCR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCR_R_ART_FK'
ALTER TABLE RA_OBLIG_COMP_REASON ADD CONSTRAINT RA_OCR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCR_R_ATY_FK'
ALTER TABLE RA_OBLIG_COMP_REASON ADD CONSTRAINT RA_OCR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCR_R_LANG_FK'
ALTER TABLE RA_OBLIG_COMP_REASON ADD CONSTRAINT RA_OCR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCR_R_OCR_FK'
ALTER TABLE RA_OBLIG_COMP_REASON ADD CONSTRAINT RA_OCR_R_OCR_FK FOREIGN KEY
(
COMPONENT_REASON
)
REFERENCES R_OBLIG_COMP_REASON
(
COMPONENT_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCR_SRCD_FK'
ALTER TABLE RA_OBLIG_COMP_REASON ADD CONSTRAINT RA_OCR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ODC_BA_FK'
ALTER TABLE RA_OBLIG_DEDUCT_CALC ADD CONSTRAINT RA_ODC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ODC_PSWA_FK'
ALTER TABLE RA_OBLIG_DEDUCT_CALC ADD CONSTRAINT RA_ODC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ODC_R_ART_FK'
ALTER TABLE RA_OBLIG_DEDUCT_CALC ADD CONSTRAINT RA_ODC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ODC_R_ATY_FK'
ALTER TABLE RA_OBLIG_DEDUCT_CALC ADD CONSTRAINT RA_ODC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ODC_R_LANG_FK'
ALTER TABLE RA_OBLIG_DEDUCT_CALC ADD CONSTRAINT RA_ODC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ODC_R_ODC_FK'
ALTER TABLE RA_OBLIG_DEDUCT_CALC ADD CONSTRAINT RA_ODC_R_ODC_FK FOREIGN KEY
(
CALCULATION_METHOD
)
REFERENCES R_OBLIG_DEDUCT_CALC
(
CALCULATION_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ODC_SRCD_FK'
ALTER TABLE RA_OBLIG_DEDUCT_CALC ADD CONSTRAINT RA_ODC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OPT_BA_FK'
ALTER TABLE RA_OBLIG_PARTY_TYPE ADD CONSTRAINT RA_OPT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OPT_PSWA_FK'
ALTER TABLE RA_OBLIG_PARTY_TYPE ADD CONSTRAINT RA_OPT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OPT_R_ART_FK'
ALTER TABLE RA_OBLIG_PARTY_TYPE ADD CONSTRAINT RA_OPT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OPT_R_ATY_FK'
ALTER TABLE RA_OBLIG_PARTY_TYPE ADD CONSTRAINT RA_OPT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OPT_R_LANG_FK'
ALTER TABLE RA_OBLIG_PARTY_TYPE ADD CONSTRAINT RA_OPT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OPT_R_OPT_FK'
ALTER TABLE RA_OBLIG_PARTY_TYPE ADD CONSTRAINT RA_OPT_R_OPT_FK FOREIGN KEY
(
PARTY_TYPE
)
REFERENCES R_OBLIG_PARTY_TYPE
(
PARTY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OPT_SRCD_FK'
ALTER TABLE RA_OBLIG_PARTY_TYPE ADD CONSTRAINT RA_OPT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OPR_BA_FK'
ALTER TABLE RA_OBLIG_PAY_RESP ADD CONSTRAINT RA_OPR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OPR_PSWA_FK'
ALTER TABLE RA_OBLIG_PAY_RESP ADD CONSTRAINT RA_OPR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OPR_R_ART_FK'
ALTER TABLE RA_OBLIG_PAY_RESP ADD CONSTRAINT RA_OPR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OPR_R_ATY_FK'
ALTER TABLE RA_OBLIG_PAY_RESP ADD CONSTRAINT RA_OPR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OPR_R_LANG_FK'
ALTER TABLE RA_OBLIG_PAY_RESP ADD CONSTRAINT RA_OPR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OPR_R_OPR_FK'
ALTER TABLE RA_OBLIG_PAY_RESP ADD CONSTRAINT RA_OPR_R_OPR_FK FOREIGN KEY
(
PAYMENT_RESPONSIBILITY
)
REFERENCES R_OBLIG_PAY_RESP
(
PAYMENT_RESPONSIBILITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OPR_SRCD_FK'
ALTER TABLE RA_OBLIG_PAY_RESP ADD CONSTRAINT RA_OPR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ORT_BA_FK'
ALTER TABLE RA_OBLIG_REMARK_TYPE ADD CONSTRAINT RA_ORT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ORT_PSWA_FK'
ALTER TABLE RA_OBLIG_REMARK_TYPE ADD CONSTRAINT RA_ORT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ORT_R_ART_FK'
ALTER TABLE RA_OBLIG_REMARK_TYPE ADD CONSTRAINT RA_ORT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ORT_R_ATY_FK'
ALTER TABLE RA_OBLIG_REMARK_TYPE ADD CONSTRAINT RA_ORT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ORT_R_LANG_FK'
ALTER TABLE RA_OBLIG_REMARK_TYPE ADD CONSTRAINT RA_ORT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ORT_R_ORT_FK'
ALTER TABLE RA_OBLIG_REMARK_TYPE ADD CONSTRAINT RA_ORT_R_ORT_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_OBLIG_REMARK_TYPE
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ORT_SRCD_FK'
ALTER TABLE RA_OBLIG_REMARK_TYPE ADD CONSTRAINT RA_ORT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OSP_BA_FK'
ALTER TABLE RA_OBLIG_SUSPEND_PAY ADD CONSTRAINT RA_OSP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OSP_PSWA_FK'
ALTER TABLE RA_OBLIG_SUSPEND_PAY ADD CONSTRAINT RA_OSP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OSP_R_ART_FK'
ALTER TABLE RA_OBLIG_SUSPEND_PAY ADD CONSTRAINT RA_OSP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OSP_R_ATY_FK'
ALTER TABLE RA_OBLIG_SUSPEND_PAY ADD CONSTRAINT RA_OSP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OSP_R_LANG_FK'
ALTER TABLE RA_OBLIG_SUSPEND_PAY ADD CONSTRAINT RA_OSP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OSP_R_OSP_FK'
ALTER TABLE RA_OBLIG_SUSPEND_PAY ADD CONSTRAINT RA_OSP_R_OSP_FK FOREIGN KEY
(
SUSPEND_PAYMENT_REASON
)
REFERENCES R_OBLIG_SUSPEND_PAY
(
SUSPEND_PAYMENT_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OSP_SRCD_FK'
ALTER TABLE RA_OBLIG_SUSPEND_PAY ADD CONSTRAINT RA_OSP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OT1_BA_FK'
ALTER TABLE RA_OBLIG_TRIGGER ADD CONSTRAINT RA_OT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OT1_PSWA_FK'
ALTER TABLE RA_OBLIG_TRIGGER ADD CONSTRAINT RA_OT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OT1_R_ART_FK'
ALTER TABLE RA_OBLIG_TRIGGER ADD CONSTRAINT RA_OT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OT1_R_ATY_FK'
ALTER TABLE RA_OBLIG_TRIGGER ADD CONSTRAINT RA_OT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OT1_R_LANG_FK'
ALTER TABLE RA_OBLIG_TRIGGER ADD CONSTRAINT RA_OT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OT1_R_OT1_FK'
ALTER TABLE RA_OBLIG_TRIGGER ADD CONSTRAINT RA_OT1_R_OT1_FK FOREIGN KEY
(
TRIGGER_METHOD
)
REFERENCES R_OBLIG_TRIGGER
(
TRIGGER_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OT1_SRCD_FK'
ALTER TABLE RA_OBLIG_TRIGGER ADD CONSTRAINT RA_OT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OT_BA_FK'
ALTER TABLE RA_OBLIG_TYPE ADD CONSTRAINT RA_OT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OT_PSWA_FK'
ALTER TABLE RA_OBLIG_TYPE ADD CONSTRAINT RA_OT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OT_R_ART_FK'
ALTER TABLE RA_OBLIG_TYPE ADD CONSTRAINT RA_OT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OT_R_ATY_FK'
ALTER TABLE RA_OBLIG_TYPE ADD CONSTRAINT RA_OT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OT_R_LANG_FK'
ALTER TABLE RA_OBLIG_TYPE ADD CONSTRAINT RA_OT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OT_R_OT_FK'
ALTER TABLE RA_OBLIG_TYPE ADD CONSTRAINT RA_OT_R_OT_FK FOREIGN KEY
(
LAND_OBLIG_TYPE
)
REFERENCES R_OBLIG_TYPE
(
LAND_OBLIG_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OT_SRCD_FK'
ALTER TABLE RA_OBLIG_TYPE ADD CONSTRAINT RA_OT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OXT_BA_FK'
ALTER TABLE RA_OBLIG_XREF_TYPE ADD CONSTRAINT RA_OXT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OXT_PSWA_FK'
ALTER TABLE RA_OBLIG_XREF_TYPE ADD CONSTRAINT RA_OXT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OXT_R_ART_FK'
ALTER TABLE RA_OBLIG_XREF_TYPE ADD CONSTRAINT RA_OXT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OXT_R_ATY_FK'
ALTER TABLE RA_OBLIG_XREF_TYPE ADD CONSTRAINT RA_OXT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OXT_R_LANG_FK'
ALTER TABLE RA_OBLIG_XREF_TYPE ADD CONSTRAINT RA_OXT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OXT_R_OXT_FK'
ALTER TABLE RA_OBLIG_XREF_TYPE ADD CONSTRAINT RA_OXT_R_OXT_FK FOREIGN KEY
(
OBLIG_XREF_TYPE
)
REFERENCES R_OBLIG_XREF_TYPE
(
OBLIG_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OXT_SRCD_FK'
ALTER TABLE RA_OBLIG_XREF_TYPE ADD CONSTRAINT RA_OXT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OAC_BA_FK'
ALTER TABLE RA_OFFSHORE_AREA_CODE ADD CONSTRAINT RA_OAC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OAC_PSWA_FK'
ALTER TABLE RA_OFFSHORE_AREA_CODE ADD CONSTRAINT RA_OAC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OAC_R_ART_FK'
ALTER TABLE RA_OFFSHORE_AREA_CODE ADD CONSTRAINT RA_OAC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OAC_R_ATY_FK'
ALTER TABLE RA_OFFSHORE_AREA_CODE ADD CONSTRAINT RA_OAC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OAC_R_LANG_FK'
ALTER TABLE RA_OFFSHORE_AREA_CODE ADD CONSTRAINT RA_OAC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OAC_R_OAC_FK'
ALTER TABLE RA_OFFSHORE_AREA_CODE ADD CONSTRAINT RA_OAC_R_OAC_FK FOREIGN KEY
(
OFFSHORE_AREA_CODE
)
REFERENCES R_OFFSHORE_AREA_CODE
(
OFFSHORE_AREA_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OAC_SRCD_FK'
ALTER TABLE RA_OFFSHORE_AREA_CODE ADD CONSTRAINT RA_OAC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCT_BA_FK'
ALTER TABLE RA_OFFSHORE_COMP_TYPE ADD CONSTRAINT RA_OCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCT_PSWA_FK'
ALTER TABLE RA_OFFSHORE_COMP_TYPE ADD CONSTRAINT RA_OCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCT_R_ART_FK'
ALTER TABLE RA_OFFSHORE_COMP_TYPE ADD CONSTRAINT RA_OCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCT_R_ATY_FK'
ALTER TABLE RA_OFFSHORE_COMP_TYPE ADD CONSTRAINT RA_OCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCT_R_LANG_FK'
ALTER TABLE RA_OFFSHORE_COMP_TYPE ADD CONSTRAINT RA_OCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCT_R_OCT_FK'
ALTER TABLE RA_OFFSHORE_COMP_TYPE ADD CONSTRAINT RA_OCT_R_OCT_FK FOREIGN KEY
(
OFFSHORE_COMPLETION_TYPE
)
REFERENCES R_OFFSHORE_COMP_TYPE
(
OFFSHORE_COMPLETION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OCT_SRCD_FK'
ALTER TABLE RA_OFFSHORE_COMP_TYPE ADD CONSTRAINT RA_OCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OVC_BA_FK'
ALTER TABLE RA_OIL_VALUE_CODE ADD CONSTRAINT RA_OVC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OVC_PSWA_FK'
ALTER TABLE RA_OIL_VALUE_CODE ADD CONSTRAINT RA_OVC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OVC_R_ART_FK'
ALTER TABLE RA_OIL_VALUE_CODE ADD CONSTRAINT RA_OVC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OVC_R_ATY_FK'
ALTER TABLE RA_OIL_VALUE_CODE ADD CONSTRAINT RA_OVC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OVC_R_LANG_FK'
ALTER TABLE RA_OIL_VALUE_CODE ADD CONSTRAINT RA_OVC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OVC_R_OVC_FK'
ALTER TABLE RA_OIL_VALUE_CODE ADD CONSTRAINT RA_OVC_R_OVC_FK FOREIGN KEY
(
OIL_VALUE_CODE
)
REFERENCES R_OIL_VALUE_CODE
(
OIL_VALUE_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OVC_SRCD_FK'
ALTER TABLE RA_OIL_VALUE_CODE ADD CONSTRAINT RA_OVC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OT4_BA_FK'
ALTER TABLE RA_ONTOGENY_TYPE ADD CONSTRAINT RA_OT4_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OT4_PSWA_FK'
ALTER TABLE RA_ONTOGENY_TYPE ADD CONSTRAINT RA_OT4_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OT4_R_ART_FK'
ALTER TABLE RA_ONTOGENY_TYPE ADD CONSTRAINT RA_OT4_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OT4_R_ATY_FK'
ALTER TABLE RA_ONTOGENY_TYPE ADD CONSTRAINT RA_OT4_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OT4_R_LANG_FK'
ALTER TABLE RA_ONTOGENY_TYPE ADD CONSTRAINT RA_OT4_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OT4_R_OT4_FK'
ALTER TABLE RA_ONTOGENY_TYPE ADD CONSTRAINT RA_OT4_R_OT4_FK FOREIGN KEY
(
ONTOGENY_TYPE
)
REFERENCES R_ONTOGENY_TYPE
(
ONTOGENY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OT4_SRCD_FK'
ALTER TABLE RA_ONTOGENY_TYPE ADD CONSTRAINT RA_OT4_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OQ_BA_FK'
ALTER TABLE RA_OPERAND_QUALIFIER ADD CONSTRAINT RA_OQ_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OQ_PSWA_FK'
ALTER TABLE RA_OPERAND_QUALIFIER ADD CONSTRAINT RA_OQ_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OQ_R_ART_FK'
ALTER TABLE RA_OPERAND_QUALIFIER ADD CONSTRAINT RA_OQ_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OQ_R_ATY_FK'
ALTER TABLE RA_OPERAND_QUALIFIER ADD CONSTRAINT RA_OQ_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OQ_R_LANG_FK'
ALTER TABLE RA_OPERAND_QUALIFIER ADD CONSTRAINT RA_OQ_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OQ_R_OQ_FK'
ALTER TABLE RA_OPERAND_QUALIFIER ADD CONSTRAINT RA_OQ_R_OQ_FK FOREIGN KEY
(
OPERAND_QUALIFIER
)
REFERENCES R_OPERAND_QUALIFIER
(
OPERAND_QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_OQ_SRCD_FK'
ALTER TABLE RA_OPERAND_QUALIFIER ADD CONSTRAINT RA_OQ_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_O_BA_FK'
ALTER TABLE RA_ORIENTATION ADD CONSTRAINT RA_O_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_O_PSWA_FK'
ALTER TABLE RA_ORIENTATION ADD CONSTRAINT RA_O_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_O_R_ART_FK'
ALTER TABLE RA_ORIENTATION ADD CONSTRAINT RA_O_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_O_R_ATY_FK'
ALTER TABLE RA_ORIENTATION ADD CONSTRAINT RA_O_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_O_R_LANG_FK'
ALTER TABLE RA_ORIENTATION ADD CONSTRAINT RA_O_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_O_R_O_FK'
ALTER TABLE RA_ORIENTATION ADD CONSTRAINT RA_O_R_O_FK FOREIGN KEY
(
ORIENTATION
)
REFERENCES R_ORIENTATION
(
ORIENTATION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_O_SRCD_FK'
ALTER TABLE RA_ORIENTATION ADD CONSTRAINT RA_O_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAT_BA_FK'
ALTER TABLE RA_PALEO_AMOUNT_TYPE ADD CONSTRAINT RA_PAT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAT_PSWA_FK'
ALTER TABLE RA_PALEO_AMOUNT_TYPE ADD CONSTRAINT RA_PAT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAT_R_ART_FK'
ALTER TABLE RA_PALEO_AMOUNT_TYPE ADD CONSTRAINT RA_PAT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAT_R_ATY_FK'
ALTER TABLE RA_PALEO_AMOUNT_TYPE ADD CONSTRAINT RA_PAT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAT_R_LANG_FK'
ALTER TABLE RA_PALEO_AMOUNT_TYPE ADD CONSTRAINT RA_PAT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAT_R_PAT_FK'
ALTER TABLE RA_PALEO_AMOUNT_TYPE ADD CONSTRAINT RA_PAT_R_PAT_FK FOREIGN KEY
(
PALEO_AMOUNT_TYPE
)
REFERENCES R_PALEO_AMOUNT_TYPE
(
PALEO_AMOUNT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAT_SRCD_FK'
ALTER TABLE RA_PALEO_AMOUNT_TYPE ADD CONSTRAINT RA_PAT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIT_BA_FK'
ALTER TABLE RA_PALEO_IND_TYPE ADD CONSTRAINT RA_PIT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIT_PSWA_FK'
ALTER TABLE RA_PALEO_IND_TYPE ADD CONSTRAINT RA_PIT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIT_R_ART_FK'
ALTER TABLE RA_PALEO_IND_TYPE ADD CONSTRAINT RA_PIT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIT_R_ATY_FK'
ALTER TABLE RA_PALEO_IND_TYPE ADD CONSTRAINT RA_PIT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIT_R_LANG_FK'
ALTER TABLE RA_PALEO_IND_TYPE ADD CONSTRAINT RA_PIT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIT_R_PIT_FK'
ALTER TABLE RA_PALEO_IND_TYPE ADD CONSTRAINT RA_PIT_R_PIT_FK FOREIGN KEY
(
INDICATOR_TYPE
)
REFERENCES R_PALEO_IND_TYPE
(
INDICATOR_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIT_SRCD_FK'
ALTER TABLE RA_PALEO_IND_TYPE ADD CONSTRAINT RA_PIT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIT1_BA_FK'
ALTER TABLE RA_PALEO_INTERP_TYPE ADD CONSTRAINT RA_PIT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIT1_PSWA_FK'
ALTER TABLE RA_PALEO_INTERP_TYPE ADD CONSTRAINT RA_PIT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIT1_R_ART_FK'
ALTER TABLE RA_PALEO_INTERP_TYPE ADD CONSTRAINT RA_PIT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIT1_R_ATY_FK'
ALTER TABLE RA_PALEO_INTERP_TYPE ADD CONSTRAINT RA_PIT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIT1_R_LANG_FK'
ALTER TABLE RA_PALEO_INTERP_TYPE ADD CONSTRAINT RA_PIT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIT1_R_PIT1_FK'
ALTER TABLE RA_PALEO_INTERP_TYPE ADD CONSTRAINT RA_PIT1_R_PIT1_FK FOREIGN KEY
(
INTERP_TYPE
)
REFERENCES R_PALEO_INTERP_TYPE
(
INTERP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIT1_SRCD_FK'
ALTER TABLE RA_PALEO_INTERP_TYPE ADD CONSTRAINT RA_PIT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PTF_BA_FK'
ALTER TABLE RA_PALEO_TYPE_FOSSIL ADD CONSTRAINT RA_PTF_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PTF_PSWA_FK'
ALTER TABLE RA_PALEO_TYPE_FOSSIL ADD CONSTRAINT RA_PTF_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PTF_R_ART_FK'
ALTER TABLE RA_PALEO_TYPE_FOSSIL ADD CONSTRAINT RA_PTF_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PTF_R_ATY_FK'
ALTER TABLE RA_PALEO_TYPE_FOSSIL ADD CONSTRAINT RA_PTF_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PTF_R_LANG_FK'
ALTER TABLE RA_PALEO_TYPE_FOSSIL ADD CONSTRAINT RA_PTF_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PTF_R_PTF_FK'
ALTER TABLE RA_PALEO_TYPE_FOSSIL ADD CONSTRAINT RA_PTF_R_PTF_FK FOREIGN KEY
(
TYPE_FOSSIL_TYPE
)
REFERENCES R_PALEO_TYPE_FOSSIL
(
TYPE_FOSSIL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PTF_SRCD_FK'
ALTER TABLE RA_PALEO_TYPE_FOSSIL ADD CONSTRAINT RA_PTF_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSCT_BA_FK'
ALTER TABLE RA_PAL_SUM_COMP_TYPE ADD CONSTRAINT RA_PSCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSCT_PSWA_FK'
ALTER TABLE RA_PAL_SUM_COMP_TYPE ADD CONSTRAINT RA_PSCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSCT_R_ART_FK'
ALTER TABLE RA_PAL_SUM_COMP_TYPE ADD CONSTRAINT RA_PSCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSCT_R_ATY_FK'
ALTER TABLE RA_PAL_SUM_COMP_TYPE ADD CONSTRAINT RA_PSCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSCT_R_LANG_FK'
ALTER TABLE RA_PAL_SUM_COMP_TYPE ADD CONSTRAINT RA_PSCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSCT_R_PSCT_FK'
ALTER TABLE RA_PAL_SUM_COMP_TYPE ADD CONSTRAINT RA_PSCT_R_PSCT_FK FOREIGN KEY
(
PALEO_SUMMARY_COMPONENT_TYPE
)
REFERENCES R_PAL_SUM_COMP_TYPE
(
PALEO_SUMMARY_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSCT_SRCD_FK'
ALTER TABLE RA_PAL_SUM_COMP_TYPE ADD CONSTRAINT RA_PSCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSXT_BA_FK'
ALTER TABLE RA_PAL_SUM_XREF_TYPE ADD CONSTRAINT RA_PSXT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSXT_PSWA_FK'
ALTER TABLE RA_PAL_SUM_XREF_TYPE ADD CONSTRAINT RA_PSXT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSXT_R_ART_FK'
ALTER TABLE RA_PAL_SUM_XREF_TYPE ADD CONSTRAINT RA_PSXT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSXT_R_ATY_FK'
ALTER TABLE RA_PAL_SUM_XREF_TYPE ADD CONSTRAINT RA_PSXT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSXT_R_LANG_FK'
ALTER TABLE RA_PAL_SUM_XREF_TYPE ADD CONSTRAINT RA_PSXT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSXT_R_PSXT_FK'
ALTER TABLE RA_PAL_SUM_XREF_TYPE ADD CONSTRAINT RA_PSXT_R_PSXT_FK FOREIGN KEY
(
PALEO_XREF_TYPE
)
REFERENCES R_PAL_SUM_XREF_TYPE
(
PALEO_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSXT_SRCD_FK'
ALTER TABLE RA_PAL_SUM_XREF_TYPE ADD CONSTRAINT RA_PSXT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PLT_BA_FK'
ALTER TABLE RA_PARCEL_LOT_TYPE ADD CONSTRAINT RA_PLT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PLT_PSWA_FK'
ALTER TABLE RA_PARCEL_LOT_TYPE ADD CONSTRAINT RA_PLT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PLT_R_ART_FK'
ALTER TABLE RA_PARCEL_LOT_TYPE ADD CONSTRAINT RA_PLT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PLT_R_ATY_FK'
ALTER TABLE RA_PARCEL_LOT_TYPE ADD CONSTRAINT RA_PLT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PLT_R_LANG_FK'
ALTER TABLE RA_PARCEL_LOT_TYPE ADD CONSTRAINT RA_PLT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PLT_R_PLT_FK'
ALTER TABLE RA_PARCEL_LOT_TYPE ADD CONSTRAINT RA_PLT_R_PLT_FK FOREIGN KEY
(
PARCEL_LOT_TYPE
)
REFERENCES R_PARCEL_LOT_TYPE
(
PARCEL_LOT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PLT_SRCD_FK'
ALTER TABLE RA_PARCEL_LOT_TYPE ADD CONSTRAINT RA_PLT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT_BA_FK'
ALTER TABLE RA_PARCEL_TYPE ADD CONSTRAINT RA_PT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT_PSWA_FK'
ALTER TABLE RA_PARCEL_TYPE ADD CONSTRAINT RA_PT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT_R_ART_FK'
ALTER TABLE RA_PARCEL_TYPE ADD CONSTRAINT RA_PT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT_R_ATY_FK'
ALTER TABLE RA_PARCEL_TYPE ADD CONSTRAINT RA_PT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT_R_LANG_FK'
ALTER TABLE RA_PARCEL_TYPE ADD CONSTRAINT RA_PT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT_R_PT_FK'
ALTER TABLE RA_PARCEL_TYPE ADD CONSTRAINT RA_PT_R_PT_FK FOREIGN KEY
(
PARCEL_TYPE
)
REFERENCES R_PARCEL_TYPE
(
PARCEL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT_SRCD_FK'
ALTER TABLE RA_PARCEL_TYPE ADD CONSTRAINT RA_PT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT1_BA_FK'
ALTER TABLE RA_PAYMENT_TYPE ADD CONSTRAINT RA_PT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT1_PSWA_FK'
ALTER TABLE RA_PAYMENT_TYPE ADD CONSTRAINT RA_PT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT1_R_ART_FK'
ALTER TABLE RA_PAYMENT_TYPE ADD CONSTRAINT RA_PT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT1_R_ATY_FK'
ALTER TABLE RA_PAYMENT_TYPE ADD CONSTRAINT RA_PT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT1_R_LANG_FK'
ALTER TABLE RA_PAYMENT_TYPE ADD CONSTRAINT RA_PT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT1_R_PT1_FK'
ALTER TABLE RA_PAYMENT_TYPE ADD CONSTRAINT RA_PT1_R_PT1_FK FOREIGN KEY
(
PAYMENT_TYPE
)
REFERENCES R_PAYMENT_TYPE
(
PAYMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT1_SRCD_FK'
ALTER TABLE RA_PAYMENT_TYPE ADD CONSTRAINT RA_PT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT2_BA_FK'
ALTER TABLE RA_PAYZONE_TYPE ADD CONSTRAINT RA_PT2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT2_PSWA_FK'
ALTER TABLE RA_PAYZONE_TYPE ADD CONSTRAINT RA_PT2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT2_R_ART_FK'
ALTER TABLE RA_PAYZONE_TYPE ADD CONSTRAINT RA_PT2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT2_R_ATY_FK'
ALTER TABLE RA_PAYZONE_TYPE ADD CONSTRAINT RA_PT2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT2_R_LANG_FK'
ALTER TABLE RA_PAYZONE_TYPE ADD CONSTRAINT RA_PT2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT2_R_PT2_FK'
ALTER TABLE RA_PAYZONE_TYPE ADD CONSTRAINT RA_PT2_R_PT2_FK FOREIGN KEY
(
PAYZONE_TYPE
)
REFERENCES R_PAYZONE_TYPE
(
PAYZONE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT2_SRCD_FK'
ALTER TABLE RA_PAYZONE_TYPE ADD CONSTRAINT RA_PT2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PDT_BA_FK'
ALTER TABLE RA_PAY_DETAIL_TYPE ADD CONSTRAINT RA_PDT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PDT_PSWA_FK'
ALTER TABLE RA_PAY_DETAIL_TYPE ADD CONSTRAINT RA_PDT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PDT_R_ART_FK'
ALTER TABLE RA_PAY_DETAIL_TYPE ADD CONSTRAINT RA_PDT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PDT_R_ATY_FK'
ALTER TABLE RA_PAY_DETAIL_TYPE ADD CONSTRAINT RA_PDT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PDT_R_LANG_FK'
ALTER TABLE RA_PAY_DETAIL_TYPE ADD CONSTRAINT RA_PDT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PDT_R_PDT_FK'
ALTER TABLE RA_PAY_DETAIL_TYPE ADD CONSTRAINT RA_PDT_R_PDT_FK FOREIGN KEY
(
PAY_DETAIL_TYPE
)
REFERENCES R_PAY_DETAIL_TYPE
(
PAY_DETAIL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PDT_SRCD_FK'
ALTER TABLE RA_PAY_DETAIL_TYPE ADD CONSTRAINT RA_PDT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PM_BA_FK'
ALTER TABLE RA_PAY_METHOD ADD CONSTRAINT RA_PM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PM_PSWA_FK'
ALTER TABLE RA_PAY_METHOD ADD CONSTRAINT RA_PM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PM_R_ART_FK'
ALTER TABLE RA_PAY_METHOD ADD CONSTRAINT RA_PM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PM_R_ATY_FK'
ALTER TABLE RA_PAY_METHOD ADD CONSTRAINT RA_PM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PM_R_LANG_FK'
ALTER TABLE RA_PAY_METHOD ADD CONSTRAINT RA_PM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PM_R_PM_FK'
ALTER TABLE RA_PAY_METHOD ADD CONSTRAINT RA_PM_R_PM_FK FOREIGN KEY
(
PAY_METHOD
)
REFERENCES R_PAY_METHOD
(
PAY_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PM_SRCD_FK'
ALTER TABLE RA_PAY_METHOD ADD CONSTRAINT RA_PM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRT_BA_FK'
ALTER TABLE RA_PAY_RATE_TYPE ADD CONSTRAINT RA_PRT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRT_PSWA_FK'
ALTER TABLE RA_PAY_RATE_TYPE ADD CONSTRAINT RA_PRT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRT_R_ART_FK'
ALTER TABLE RA_PAY_RATE_TYPE ADD CONSTRAINT RA_PRT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRT_R_ATY_FK'
ALTER TABLE RA_PAY_RATE_TYPE ADD CONSTRAINT RA_PRT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRT_R_LANG_FK'
ALTER TABLE RA_PAY_RATE_TYPE ADD CONSTRAINT RA_PRT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRT_R_PRT_FK'
ALTER TABLE RA_PAY_RATE_TYPE ADD CONSTRAINT RA_PRT_R_PRT_FK FOREIGN KEY
(
PAY_RATE_TYPE
)
REFERENCES R_PAY_RATE_TYPE
(
PAY_RATE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRT_SRCD_FK'
ALTER TABLE RA_PAY_RATE_TYPE ADD CONSTRAINT RA_PRT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAR_BA_FK'
ALTER TABLE RA_PDEN_AMEND_REASON ADD CONSTRAINT RA_PAR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAR_PSWA_FK'
ALTER TABLE RA_PDEN_AMEND_REASON ADD CONSTRAINT RA_PAR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAR_R_ART_FK'
ALTER TABLE RA_PDEN_AMEND_REASON ADD CONSTRAINT RA_PAR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAR_R_ATY_FK'
ALTER TABLE RA_PDEN_AMEND_REASON ADD CONSTRAINT RA_PAR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAR_R_LANG_FK'
ALTER TABLE RA_PDEN_AMEND_REASON ADD CONSTRAINT RA_PAR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAR_R_PAR_FK'
ALTER TABLE RA_PDEN_AMEND_REASON ADD CONSTRAINT RA_PAR_R_PAR_FK FOREIGN KEY
(
AMEND_REASON
)
REFERENCES R_PDEN_AMEND_REASON
(
AMEND_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAR_SRCD_FK'
ALTER TABLE RA_PDEN_AMEND_REASON ADD CONSTRAINT RA_PAR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCT2_BA_FK'
ALTER TABLE RA_PDEN_COMPONENT_TYPE ADD CONSTRAINT RA_PCT2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCT2_PSWA_FK'
ALTER TABLE RA_PDEN_COMPONENT_TYPE ADD CONSTRAINT RA_PCT2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCT2_R_ART_FK'
ALTER TABLE RA_PDEN_COMPONENT_TYPE ADD CONSTRAINT RA_PCT2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCT2_R_ATY_FK'
ALTER TABLE RA_PDEN_COMPONENT_TYPE ADD CONSTRAINT RA_PCT2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCT2_R_LANG_FK'
ALTER TABLE RA_PDEN_COMPONENT_TYPE ADD CONSTRAINT RA_PCT2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCT2_R_PCT2_FK'
ALTER TABLE RA_PDEN_COMPONENT_TYPE ADD CONSTRAINT RA_PCT2_R_PCT2_FK FOREIGN KEY
(
PDEN_COMPONENT_TYPE
)
REFERENCES R_PDEN_COMPONENT_TYPE
(
PDEN_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCT2_SRCD_FK'
ALTER TABLE RA_PDEN_COMPONENT_TYPE ADD CONSTRAINT RA_PCT2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PS_BA_FK'
ALTER TABLE RA_PDEN_STATUS ADD CONSTRAINT RA_PS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PS_PSWA_FK'
ALTER TABLE RA_PDEN_STATUS ADD CONSTRAINT RA_PS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PS_R_ART_FK'
ALTER TABLE RA_PDEN_STATUS ADD CONSTRAINT RA_PS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PS_R_ATY_FK'
ALTER TABLE RA_PDEN_STATUS ADD CONSTRAINT RA_PS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PS_R_LANG_FK'
ALTER TABLE RA_PDEN_STATUS ADD CONSTRAINT RA_PS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PS_R_PS_FK'
ALTER TABLE RA_PDEN_STATUS ADD CONSTRAINT RA_PS_R_PS_FK FOREIGN KEY
(
PDEN_STATUS_TYPE,
PDEN_STATUS
)
REFERENCES R_PDEN_STATUS
(
PDEN_STATUS_TYPE,
PDEN_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PS_R_PST2_FK'
ALTER TABLE RA_PDEN_STATUS ADD CONSTRAINT RA_PS_R_PST2_FK FOREIGN KEY
(
PDEN_STATUS_TYPE
)
REFERENCES R_PDEN_STATUS_TYPE
(
PDEN_STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PS_SRCD_FK'
ALTER TABLE RA_PDEN_STATUS ADD CONSTRAINT RA_PS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PST2_BA_FK'
ALTER TABLE RA_PDEN_STATUS_TYPE ADD CONSTRAINT RA_PST2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PST2_PSWA_FK'
ALTER TABLE RA_PDEN_STATUS_TYPE ADD CONSTRAINT RA_PST2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PST2_R_ART_FK'
ALTER TABLE RA_PDEN_STATUS_TYPE ADD CONSTRAINT RA_PST2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PST2_R_ATY_FK'
ALTER TABLE RA_PDEN_STATUS_TYPE ADD CONSTRAINT RA_PST2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PST2_R_LANG_FK'
ALTER TABLE RA_PDEN_STATUS_TYPE ADD CONSTRAINT RA_PST2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PST2_R_PST2_FK'
ALTER TABLE RA_PDEN_STATUS_TYPE ADD CONSTRAINT RA_PST2_R_PST2_FK FOREIGN KEY
(
PDEN_STATUS_TYPE
)
REFERENCES R_PDEN_STATUS_TYPE
(
PDEN_STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PST2_SRCD_FK'
ALTER TABLE RA_PDEN_STATUS_TYPE ADD CONSTRAINT RA_PST2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PXT_BA_FK'
ALTER TABLE RA_PDEN_XREF_TYPE ADD CONSTRAINT RA_PXT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PXT_PSWA_FK'
ALTER TABLE RA_PDEN_XREF_TYPE ADD CONSTRAINT RA_PXT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PXT_R_ART_FK'
ALTER TABLE RA_PDEN_XREF_TYPE ADD CONSTRAINT RA_PXT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PXT_R_ATY_FK'
ALTER TABLE RA_PDEN_XREF_TYPE ADD CONSTRAINT RA_PXT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PXT_R_LANG_FK'
ALTER TABLE RA_PDEN_XREF_TYPE ADD CONSTRAINT RA_PXT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PXT_R_PXT_FK'
ALTER TABLE RA_PDEN_XREF_TYPE ADD CONSTRAINT RA_PXT_R_PXT_FK FOREIGN KEY
(
PDEN_XREF_TYPE
)
REFERENCES R_PDEN_XREF_TYPE
(
PDEN_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PXT_SRCD_FK'
ALTER TABLE RA_PDEN_XREF_TYPE ADD CONSTRAINT RA_PXT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PFM_BA_FK'
ALTER TABLE RA_PERFORATION_METHOD ADD CONSTRAINT RA_PFM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PFM_PSWA_FK'
ALTER TABLE RA_PERFORATION_METHOD ADD CONSTRAINT RA_PFM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PFM_R_ART_FK'
ALTER TABLE RA_PERFORATION_METHOD ADD CONSTRAINT RA_PFM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PFM_R_ATY_FK'
ALTER TABLE RA_PERFORATION_METHOD ADD CONSTRAINT RA_PFM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PFM_R_LANG_FK'
ALTER TABLE RA_PERFORATION_METHOD ADD CONSTRAINT RA_PFM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PFM_R_PFM_FK'
ALTER TABLE RA_PERFORATION_METHOD ADD CONSTRAINT RA_PFM_R_PFM_FK FOREIGN KEY
(
PERFORATION_METHOD
)
REFERENCES R_PERFORATION_METHOD
(
PERFORATION_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PFM_SRCD_FK'
ALTER TABLE RA_PERFORATION_METHOD ADD CONSTRAINT RA_PFM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PFT_BA_FK'
ALTER TABLE RA_PERFORATION_TYPE ADD CONSTRAINT RA_PFT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PFT_PSWA_FK'
ALTER TABLE RA_PERFORATION_TYPE ADD CONSTRAINT RA_PFT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PFT_R_ART_FK'
ALTER TABLE RA_PERFORATION_TYPE ADD CONSTRAINT RA_PFT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PFT_R_ATY_FK'
ALTER TABLE RA_PERFORATION_TYPE ADD CONSTRAINT RA_PFT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PFT_R_LANG_FK'
ALTER TABLE RA_PERFORATION_TYPE ADD CONSTRAINT RA_PFT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PFT_R_PFT_FK'
ALTER TABLE RA_PERFORATION_TYPE ADD CONSTRAINT RA_PFT_R_PFT_FK FOREIGN KEY
(
PERF_TYPE
)
REFERENCES R_PERFORATION_TYPE
(
PERF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PFT_SRCD_FK'
ALTER TABLE RA_PERFORATION_TYPE ADD CONSTRAINT RA_PFT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT3_BA_FK'
ALTER TABLE RA_PERIOD_TYPE ADD CONSTRAINT RA_PT3_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT3_PSWA_FK'
ALTER TABLE RA_PERIOD_TYPE ADD CONSTRAINT RA_PT3_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT3_R_ART_FK'
ALTER TABLE RA_PERIOD_TYPE ADD CONSTRAINT RA_PT3_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT3_R_ATY_FK'
ALTER TABLE RA_PERIOD_TYPE ADD CONSTRAINT RA_PT3_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT3_R_LANG_FK'
ALTER TABLE RA_PERIOD_TYPE ADD CONSTRAINT RA_PT3_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT3_R_PT3_FK'
ALTER TABLE RA_PERIOD_TYPE ADD CONSTRAINT RA_PT3_R_PT3_FK FOREIGN KEY
(
PERIOD_TYPE
)
REFERENCES R_PERIOD_TYPE
(
PERIOD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT3_SRCD_FK'
ALTER TABLE RA_PERIOD_TYPE ADD CONSTRAINT RA_PT3_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRMT_BA_FK'
ALTER TABLE RA_PERMEABILITY_TYPE ADD CONSTRAINT RA_PRMT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRMT_PSWA_FK'
ALTER TABLE RA_PERMEABILITY_TYPE ADD CONSTRAINT RA_PRMT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRMT_R_ART_FK'
ALTER TABLE RA_PERMEABILITY_TYPE ADD CONSTRAINT RA_PRMT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRMT_R_ATY_FK'
ALTER TABLE RA_PERMEABILITY_TYPE ADD CONSTRAINT RA_PRMT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRMT_R_LANG_FK'
ALTER TABLE RA_PERMEABILITY_TYPE ADD CONSTRAINT RA_PRMT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRMT_R_PRMT_FK'
ALTER TABLE RA_PERMEABILITY_TYPE ADD CONSTRAINT RA_PRMT_R_PRMT_FK FOREIGN KEY
(
PERMEABILITY_TYPE
)
REFERENCES R_PERMEABILITY_TYPE
(
PERMEABILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRMT_SRCD_FK'
ALTER TABLE RA_PERMEABILITY_TYPE ADD CONSTRAINT RA_PRMT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIS_BA_FK'
ALTER TABLE RA_PHYSICAL_ITEM_STATUS ADD CONSTRAINT RA_PIS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIS_PSWA_FK'
ALTER TABLE RA_PHYSICAL_ITEM_STATUS ADD CONSTRAINT RA_PIS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIS_R_ART_FK'
ALTER TABLE RA_PHYSICAL_ITEM_STATUS ADD CONSTRAINT RA_PIS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIS_R_ATY_FK'
ALTER TABLE RA_PHYSICAL_ITEM_STATUS ADD CONSTRAINT RA_PIS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIS_R_LANG_FK'
ALTER TABLE RA_PHYSICAL_ITEM_STATUS ADD CONSTRAINT RA_PIS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIS_R_PIS_FK'
ALTER TABLE RA_PHYSICAL_ITEM_STATUS ADD CONSTRAINT RA_PIS_R_PIS_FK FOREIGN KEY
(
PHYSICAL_ITEM_STATUS
)
REFERENCES R_PHYSICAL_ITEM_STATUS
(
PHYSICAL_ITEM_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIS_SRCD_FK'
ALTER TABLE RA_PHYSICAL_ITEM_STATUS ADD CONSTRAINT RA_PIS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PP_BA_FK'
ALTER TABLE RA_PHYSICAL_PROCESS ADD CONSTRAINT RA_PP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PP_PSWA_FK'
ALTER TABLE RA_PHYSICAL_PROCESS ADD CONSTRAINT RA_PP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PP_R_ART_FK'
ALTER TABLE RA_PHYSICAL_PROCESS ADD CONSTRAINT RA_PP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PP_R_ATY_FK'
ALTER TABLE RA_PHYSICAL_PROCESS ADD CONSTRAINT RA_PP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PP_R_LANG_FK'
ALTER TABLE RA_PHYSICAL_PROCESS ADD CONSTRAINT RA_PP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PP_R_PP_FK'
ALTER TABLE RA_PHYSICAL_PROCESS ADD CONSTRAINT RA_PP_R_PP_FK FOREIGN KEY
(
PHYSICAL_PROCESS
)
REFERENCES R_PHYSICAL_PROCESS
(
PHYSICAL_PROCESS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PP_SRCD_FK'
ALTER TABLE RA_PHYSICAL_PROCESS ADD CONSTRAINT RA_PP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIGT_BA_FK'
ALTER TABLE RA_PHYS_ITEM_GROUP_TYPE ADD CONSTRAINT RA_PIGT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIGT_PSWA_FK'
ALTER TABLE RA_PHYS_ITEM_GROUP_TYPE ADD CONSTRAINT RA_PIGT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIGT_R_ART_FK'
ALTER TABLE RA_PHYS_ITEM_GROUP_TYPE ADD CONSTRAINT RA_PIGT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIGT_R_ATY_FK'
ALTER TABLE RA_PHYS_ITEM_GROUP_TYPE ADD CONSTRAINT RA_PIGT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIGT_R_LANG_FK'
ALTER TABLE RA_PHYS_ITEM_GROUP_TYPE ADD CONSTRAINT RA_PIGT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIGT_R_PIGT_FK'
ALTER TABLE RA_PHYS_ITEM_GROUP_TYPE ADD CONSTRAINT RA_PIGT_R_PIGT_FK FOREIGN KEY
(
GROUP_TYPE
)
REFERENCES R_PHYS_ITEM_GROUP_TYPE
(
GROUP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIGT_SRCD_FK'
ALTER TABLE RA_PHYS_ITEM_GROUP_TYPE ADD CONSTRAINT RA_PIGT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PL_BA_FK'
ALTER TABLE RA_PICK_LOCATION ADD CONSTRAINT RA_PL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PL_PSWA_FK'
ALTER TABLE RA_PICK_LOCATION ADD CONSTRAINT RA_PL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PL_R_ART_FK'
ALTER TABLE RA_PICK_LOCATION ADD CONSTRAINT RA_PL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PL_R_ATY_FK'
ALTER TABLE RA_PICK_LOCATION ADD CONSTRAINT RA_PL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PL_R_LANG_FK'
ALTER TABLE RA_PICK_LOCATION ADD CONSTRAINT RA_PL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PL_R_PL_FK'
ALTER TABLE RA_PICK_LOCATION ADD CONSTRAINT RA_PL_R_PL_FK FOREIGN KEY
(
PICK_LOCATION
)
REFERENCES R_PICK_LOCATION
(
PICK_LOCATION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PL_SRCD_FK'
ALTER TABLE RA_PICK_LOCATION ADD CONSTRAINT RA_PL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQ_BA_FK'
ALTER TABLE RA_PICK_QUALIFIER ADD CONSTRAINT RA_PQ_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQ_PSWA_FK'
ALTER TABLE RA_PICK_QUALIFIER ADD CONSTRAINT RA_PQ_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQ_R_ART_FK'
ALTER TABLE RA_PICK_QUALIFIER ADD CONSTRAINT RA_PQ_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQ_R_ATY_FK'
ALTER TABLE RA_PICK_QUALIFIER ADD CONSTRAINT RA_PQ_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQ_R_LANG_FK'
ALTER TABLE RA_PICK_QUALIFIER ADD CONSTRAINT RA_PQ_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQ_R_PQ_FK'
ALTER TABLE RA_PICK_QUALIFIER ADD CONSTRAINT RA_PQ_R_PQ_FK FOREIGN KEY
(
PICK_QUALIFIER
)
REFERENCES R_PICK_QUALIFIER
(
PICK_QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQ_SRCD_FK'
ALTER TABLE RA_PICK_QUALIFIER ADD CONSTRAINT RA_PQ_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQR_BA_FK'
ALTER TABLE RA_PICK_QUALIF_REASON ADD CONSTRAINT RA_PQR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQR_PSWA_FK'
ALTER TABLE RA_PICK_QUALIF_REASON ADD CONSTRAINT RA_PQR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQR_R_ART_FK'
ALTER TABLE RA_PICK_QUALIF_REASON ADD CONSTRAINT RA_PQR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQR_R_ATY_FK'
ALTER TABLE RA_PICK_QUALIF_REASON ADD CONSTRAINT RA_PQR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQR_R_LANG_FK'
ALTER TABLE RA_PICK_QUALIF_REASON ADD CONSTRAINT RA_PQR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQR_R_PQR_FK'
ALTER TABLE RA_PICK_QUALIF_REASON ADD CONSTRAINT RA_PQR_R_PQR_FK FOREIGN KEY
(
PICK_QUALIF_REASON
)
REFERENCES R_PICK_QUALIF_REASON
(
PICK_QUALIF_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQR_SRCD_FK'
ALTER TABLE RA_PICK_QUALIF_REASON ADD CONSTRAINT RA_PQR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQ1_BA_FK'
ALTER TABLE RA_PICK_QUALITY ADD CONSTRAINT RA_PQ1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQ1_PSWA_FK'
ALTER TABLE RA_PICK_QUALITY ADD CONSTRAINT RA_PQ1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQ1_R_ART_FK'
ALTER TABLE RA_PICK_QUALITY ADD CONSTRAINT RA_PQ1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQ1_R_ATY_FK'
ALTER TABLE RA_PICK_QUALITY ADD CONSTRAINT RA_PQ1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQ1_R_LANG_FK'
ALTER TABLE RA_PICK_QUALITY ADD CONSTRAINT RA_PQ1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQ1_R_PQ1_FK'
ALTER TABLE RA_PICK_QUALITY ADD CONSTRAINT RA_PQ1_R_PQ1_FK FOREIGN KEY
(
PICK_QUALITY
)
REFERENCES R_PICK_QUALITY
(
PICK_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQ1_SRCD_FK'
ALTER TABLE RA_PICK_QUALITY ADD CONSTRAINT RA_PQ1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PVT_BA_FK'
ALTER TABLE RA_PICK_VERSION_TYPE ADD CONSTRAINT RA_PVT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PVT_PSWA_FK'
ALTER TABLE RA_PICK_VERSION_TYPE ADD CONSTRAINT RA_PVT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PVT_R_ART_FK'
ALTER TABLE RA_PICK_VERSION_TYPE ADD CONSTRAINT RA_PVT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PVT_R_ATY_FK'
ALTER TABLE RA_PICK_VERSION_TYPE ADD CONSTRAINT RA_PVT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PVT_R_LANG_FK'
ALTER TABLE RA_PICK_VERSION_TYPE ADD CONSTRAINT RA_PVT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PVT_R_PVT_FK'
ALTER TABLE RA_PICK_VERSION_TYPE ADD CONSTRAINT RA_PVT_R_PVT_FK FOREIGN KEY
(
PICK_VERSION_TYPE
)
REFERENCES R_PICK_VERSION_TYPE
(
PICK_VERSION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PVT_SRCD_FK'
ALTER TABLE RA_PICK_VERSION_TYPE ADD CONSTRAINT RA_PVT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT5_BA_FK'
ALTER TABLE RA_PLATFORM_TYPE ADD CONSTRAINT RA_PT5_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT5_PSWA_FK'
ALTER TABLE RA_PLATFORM_TYPE ADD CONSTRAINT RA_PT5_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT5_R_ART_FK'
ALTER TABLE RA_PLATFORM_TYPE ADD CONSTRAINT RA_PT5_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT5_R_ATY_FK'
ALTER TABLE RA_PLATFORM_TYPE ADD CONSTRAINT RA_PT5_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT5_R_LANG_FK'
ALTER TABLE RA_PLATFORM_TYPE ADD CONSTRAINT RA_PT5_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT5_R_PT5_FK'
ALTER TABLE RA_PLATFORM_TYPE ADD CONSTRAINT RA_PT5_R_PT5_FK FOREIGN KEY
(
PLATFORM_TYPE
)
REFERENCES R_PLATFORM_TYPE
(
PLATFORM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT5_SRCD_FK'
ALTER TABLE RA_PLATFORM_TYPE ADD CONSTRAINT RA_PT5_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PS1_BA_FK'
ALTER TABLE RA_PLOT_SYMBOL ADD CONSTRAINT RA_PS1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PS1_PSWA_FK'
ALTER TABLE RA_PLOT_SYMBOL ADD CONSTRAINT RA_PS1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PS1_R_ART_FK'
ALTER TABLE RA_PLOT_SYMBOL ADD CONSTRAINT RA_PS1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PS1_R_ATY_FK'
ALTER TABLE RA_PLOT_SYMBOL ADD CONSTRAINT RA_PS1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PS1_R_LANG_FK'
ALTER TABLE RA_PLOT_SYMBOL ADD CONSTRAINT RA_PS1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PS1_R_PS1_FK'
ALTER TABLE RA_PLOT_SYMBOL ADD CONSTRAINT RA_PS1_R_PS1_FK FOREIGN KEY
(
PLOT_SYMBOL
)
REFERENCES R_PLOT_SYMBOL
(
PLOT_SYMBOL
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PS1_SRCD_FK'
ALTER TABLE RA_PLOT_SYMBOL ADD CONSTRAINT RA_PS1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT6_BA_FK'
ALTER TABLE RA_PLUG_TYPE ADD CONSTRAINT RA_PT6_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT6_PSWA_FK'
ALTER TABLE RA_PLUG_TYPE ADD CONSTRAINT RA_PT6_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT6_R_ART_FK'
ALTER TABLE RA_PLUG_TYPE ADD CONSTRAINT RA_PT6_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT6_R_ATY_FK'
ALTER TABLE RA_PLUG_TYPE ADD CONSTRAINT RA_PT6_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT6_R_LANG_FK'
ALTER TABLE RA_PLUG_TYPE ADD CONSTRAINT RA_PT6_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT6_R_PT6_FK'
ALTER TABLE RA_PLUG_TYPE ADD CONSTRAINT RA_PT6_R_PT6_FK FOREIGN KEY
(
PLUG_TYPE
)
REFERENCES R_PLUG_TYPE
(
PLUG_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT6_SRCD_FK'
ALTER TABLE RA_PLUG_TYPE ADD CONSTRAINT RA_PT6_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCT3_BA_FK'
ALTER TABLE RA_POOL_COMPONENT_TYPE ADD CONSTRAINT RA_PCT3_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCT3_PSWA_FK'
ALTER TABLE RA_POOL_COMPONENT_TYPE ADD CONSTRAINT RA_PCT3_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCT3_R_ART_FK'
ALTER TABLE RA_POOL_COMPONENT_TYPE ADD CONSTRAINT RA_PCT3_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCT3_R_ATY_FK'
ALTER TABLE RA_POOL_COMPONENT_TYPE ADD CONSTRAINT RA_PCT3_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCT3_R_LANG_FK'
ALTER TABLE RA_POOL_COMPONENT_TYPE ADD CONSTRAINT RA_PCT3_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCT3_R_PCT3_FK'
ALTER TABLE RA_POOL_COMPONENT_TYPE ADD CONSTRAINT RA_PCT3_R_PCT3_FK FOREIGN KEY
(
POOL_COMPONENT_TYPE
)
REFERENCES R_POOL_COMPONENT_TYPE
(
POOL_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCT3_SRCD_FK'
ALTER TABLE RA_POOL_COMPONENT_TYPE ADD CONSTRAINT RA_PCT3_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PS2_BA_FK'
ALTER TABLE RA_POOL_STATUS ADD CONSTRAINT RA_PS2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PS2_PSWA_FK'
ALTER TABLE RA_POOL_STATUS ADD CONSTRAINT RA_PS2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PS2_R_ART_FK'
ALTER TABLE RA_POOL_STATUS ADD CONSTRAINT RA_PS2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PS2_R_ATY_FK'
ALTER TABLE RA_POOL_STATUS ADD CONSTRAINT RA_PS2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PS2_R_LANG_FK'
ALTER TABLE RA_POOL_STATUS ADD CONSTRAINT RA_PS2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PS2_R_PS2_FK'
ALTER TABLE RA_POOL_STATUS ADD CONSTRAINT RA_PS2_R_PS2_FK FOREIGN KEY
(
POOL_STATUS
)
REFERENCES R_POOL_STATUS
(
POOL_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PS2_SRCD_FK'
ALTER TABLE RA_POOL_STATUS ADD CONSTRAINT RA_PS2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT7_BA_FK'
ALTER TABLE RA_POOL_TYPE ADD CONSTRAINT RA_PT7_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT7_PSWA_FK'
ALTER TABLE RA_POOL_TYPE ADD CONSTRAINT RA_PT7_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT7_R_ART_FK'
ALTER TABLE RA_POOL_TYPE ADD CONSTRAINT RA_PT7_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT7_R_ATY_FK'
ALTER TABLE RA_POOL_TYPE ADD CONSTRAINT RA_PT7_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT7_R_LANG_FK'
ALTER TABLE RA_POOL_TYPE ADD CONSTRAINT RA_PT7_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT7_R_PT7_FK'
ALTER TABLE RA_POOL_TYPE ADD CONSTRAINT RA_PT7_R_PT7_FK FOREIGN KEY
(
POOL_TYPE
)
REFERENCES R_POOL_TYPE
(
POOL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT7_SRCD_FK'
ALTER TABLE RA_POOL_TYPE ADD CONSTRAINT RA_PT7_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PORT_BA_FK'
ALTER TABLE RA_POROSITY_TYPE ADD CONSTRAINT RA_PORT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PORT_PSWA_FK'
ALTER TABLE RA_POROSITY_TYPE ADD CONSTRAINT RA_PORT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PORT_R_ART_FK'
ALTER TABLE RA_POROSITY_TYPE ADD CONSTRAINT RA_PORT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PORT_R_ATY_FK'
ALTER TABLE RA_POROSITY_TYPE ADD CONSTRAINT RA_PORT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PORT_R_LANG_FK'
ALTER TABLE RA_POROSITY_TYPE ADD CONSTRAINT RA_PORT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PORT_R_PORT_FK'
ALTER TABLE RA_POROSITY_TYPE ADD CONSTRAINT RA_PORT_R_PORT_FK FOREIGN KEY
(
POROSITY_TYPE
)
REFERENCES R_POROSITY_TYPE
(
POROSITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PORT_SRCD_FK'
ALTER TABLE RA_POROSITY_TYPE ADD CONSTRAINT RA_PORT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAR1_BA_FK'
ALTER TABLE RA_PPDM_AUDIT_REASON ADD CONSTRAINT RA_PAR1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAR1_PSWA_FK'
ALTER TABLE RA_PPDM_AUDIT_REASON ADD CONSTRAINT RA_PAR1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAR1_R_ART_FK'
ALTER TABLE RA_PPDM_AUDIT_REASON ADD CONSTRAINT RA_PAR1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAR1_R_ATY_FK'
ALTER TABLE RA_PPDM_AUDIT_REASON ADD CONSTRAINT RA_PAR1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAR1_R_LANG_FK'
ALTER TABLE RA_PPDM_AUDIT_REASON ADD CONSTRAINT RA_PAR1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAR1_R_PAR1_FK'
ALTER TABLE RA_PPDM_AUDIT_REASON ADD CONSTRAINT RA_PAR1_R_PAR1_FK FOREIGN KEY
(
AUDIT_REASON
)
REFERENCES R_PPDM_AUDIT_REASON
(
AUDIT_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAR1_SRCD_FK'
ALTER TABLE RA_PPDM_AUDIT_REASON ADD CONSTRAINT RA_PAR1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAUT_BA_FK'
ALTER TABLE RA_PPDM_AUDIT_TYPE ADD CONSTRAINT RA_PAUT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAUT_PSWA_FK'
ALTER TABLE RA_PPDM_AUDIT_TYPE ADD CONSTRAINT RA_PAUT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAUT_R_ART_FK'
ALTER TABLE RA_PPDM_AUDIT_TYPE ADD CONSTRAINT RA_PAUT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAUT_R_ATY_FK'
ALTER TABLE RA_PPDM_AUDIT_TYPE ADD CONSTRAINT RA_PAUT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAUT_R_LANG_FK'
ALTER TABLE RA_PPDM_AUDIT_TYPE ADD CONSTRAINT RA_PAUT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAUT_R_PAUT_FK'
ALTER TABLE RA_PPDM_AUDIT_TYPE ADD CONSTRAINT RA_PAUT_R_PAUT_FK FOREIGN KEY
(
AUDIT_TYPE
)
REFERENCES R_PPDM_AUDIT_TYPE
(
AUDIT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PAUT_SRCD_FK'
ALTER TABLE RA_PPDM_AUDIT_TYPE ADD CONSTRAINT RA_PAUT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PBRL_BA_FK'
ALTER TABLE RA_PPDM_BOOLEAN_RULE ADD CONSTRAINT RA_PBRL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PBRL_PSWA_FK'
ALTER TABLE RA_PPDM_BOOLEAN_RULE ADD CONSTRAINT RA_PBRL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PBRL_R_ART_FK'
ALTER TABLE RA_PPDM_BOOLEAN_RULE ADD CONSTRAINT RA_PBRL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PBRL_R_ATY_FK'
ALTER TABLE RA_PPDM_BOOLEAN_RULE ADD CONSTRAINT RA_PBRL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PBRL_R_LANG_FK'
ALTER TABLE RA_PPDM_BOOLEAN_RULE ADD CONSTRAINT RA_PBRL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PBRL_R_PBRL_FK'
ALTER TABLE RA_PPDM_BOOLEAN_RULE ADD CONSTRAINT RA_PBRL_R_PBRL_FK FOREIGN KEY
(
BOOLEAN_RULE
)
REFERENCES R_PPDM_BOOLEAN_RULE
(
BOOLEAN_RULE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PBRL_SRCD_FK'
ALTER TABLE RA_PPDM_BOOLEAN_RULE ADD CONSTRAINT RA_PBRL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCM_BA_FK'
ALTER TABLE RA_PPDM_CREATE_METHOD ADD CONSTRAINT RA_PCM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCM_PSWA_FK'
ALTER TABLE RA_PPDM_CREATE_METHOD ADD CONSTRAINT RA_PCM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCM_R_ART_FK'
ALTER TABLE RA_PPDM_CREATE_METHOD ADD CONSTRAINT RA_PCM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCM_R_ATY_FK'
ALTER TABLE RA_PPDM_CREATE_METHOD ADD CONSTRAINT RA_PCM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCM_R_LANG_FK'
ALTER TABLE RA_PPDM_CREATE_METHOD ADD CONSTRAINT RA_PCM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCM_R_PCM_FK'
ALTER TABLE RA_PPDM_CREATE_METHOD ADD CONSTRAINT RA_PCM_R_PCM_FK FOREIGN KEY
(
CREATE_METHOD
)
REFERENCES R_PPDM_CREATE_METHOD
(
CREATE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCM_SRCD_FK'
ALTER TABLE RA_PPDM_CREATE_METHOD ADD CONSTRAINT RA_PCM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PDT1_BA_FK'
ALTER TABLE RA_PPDM_DATA_TYPE ADD CONSTRAINT RA_PDT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PDT1_PSWA_FK'
ALTER TABLE RA_PPDM_DATA_TYPE ADD CONSTRAINT RA_PDT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PDT1_R_ART_FK'
ALTER TABLE RA_PPDM_DATA_TYPE ADD CONSTRAINT RA_PDT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PDT1_R_ATY_FK'
ALTER TABLE RA_PPDM_DATA_TYPE ADD CONSTRAINT RA_PDT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PDT1_R_LANG_FK'
ALTER TABLE RA_PPDM_DATA_TYPE ADD CONSTRAINT RA_PDT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PDT1_R_PDT1_FK'
ALTER TABLE RA_PPDM_DATA_TYPE ADD CONSTRAINT RA_PDT1_R_PDT1_FK FOREIGN KEY
(
DATA_TYPE
)
REFERENCES R_PPDM_DATA_TYPE
(
DATA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PDT1_SRCD_FK'
ALTER TABLE RA_PPDM_DATA_TYPE ADD CONSTRAINT RA_PDT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PDV_BA_FK'
ALTER TABLE RA_PPDM_DEFAULT_VALUE ADD CONSTRAINT RA_PDV_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PDV_PSWA_FK'
ALTER TABLE RA_PPDM_DEFAULT_VALUE ADD CONSTRAINT RA_PDV_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PDV_R_ART_FK'
ALTER TABLE RA_PPDM_DEFAULT_VALUE ADD CONSTRAINT RA_PDV_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PDV_R_ATY_FK'
ALTER TABLE RA_PPDM_DEFAULT_VALUE ADD CONSTRAINT RA_PDV_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PDV_R_LANG_FK'
ALTER TABLE RA_PPDM_DEFAULT_VALUE ADD CONSTRAINT RA_PDV_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PDV_R_PDV_FK'
ALTER TABLE RA_PPDM_DEFAULT_VALUE ADD CONSTRAINT RA_PDV_R_PDV_FK FOREIGN KEY
(
DEFAULT_VALUE_METHOD
)
REFERENCES R_PPDM_DEFAULT_VALUE
(
DEFAULT_VALUE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PDV_SRCD_FK'
ALTER TABLE RA_PPDM_DEFAULT_VALUE ADD CONSTRAINT RA_PDV_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PEM_BA_FK'
ALTER TABLE RA_PPDM_ENFORCE_METHOD ADD CONSTRAINT RA_PEM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PEM_PSWA_FK'
ALTER TABLE RA_PPDM_ENFORCE_METHOD ADD CONSTRAINT RA_PEM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PEM_R_ART_FK'
ALTER TABLE RA_PPDM_ENFORCE_METHOD ADD CONSTRAINT RA_PEM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PEM_R_ATY_FK'
ALTER TABLE RA_PPDM_ENFORCE_METHOD ADD CONSTRAINT RA_PEM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PEM_R_LANG_FK'
ALTER TABLE RA_PPDM_ENFORCE_METHOD ADD CONSTRAINT RA_PEM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PEM_R_PEM_FK'
ALTER TABLE RA_PPDM_ENFORCE_METHOD ADD CONSTRAINT RA_PEM_R_PEM_FK FOREIGN KEY
(
ENFORCE_METHOD
)
REFERENCES R_PPDM_ENFORCE_METHOD
(
ENFORCE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PEM_SRCD_FK'
ALTER TABLE RA_PPDM_ENFORCE_METHOD ADD CONSTRAINT RA_PEM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PFR_BA_FK'
ALTER TABLE RA_PPDM_FAIL_RESULT ADD CONSTRAINT RA_PFR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PFR_PSWA_FK'
ALTER TABLE RA_PPDM_FAIL_RESULT ADD CONSTRAINT RA_PFR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PFR_R_ART_FK'
ALTER TABLE RA_PPDM_FAIL_RESULT ADD CONSTRAINT RA_PFR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PFR_R_ATY_FK'
ALTER TABLE RA_PPDM_FAIL_RESULT ADD CONSTRAINT RA_PFR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PFR_R_LANG_FK'
ALTER TABLE RA_PPDM_FAIL_RESULT ADD CONSTRAINT RA_PFR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PFR_R_PFR_FK'
ALTER TABLE RA_PPDM_FAIL_RESULT ADD CONSTRAINT RA_PFR_R_PFR_FK FOREIGN KEY
(
RULE_FAIL_RESULT
)
REFERENCES R_PPDM_FAIL_RESULT
(
RULE_FAIL_RESULT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PFR_SRCD_FK'
ALTER TABLE RA_PPDM_FAIL_RESULT ADD CONSTRAINT RA_PFR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPGT_BA_FK'
ALTER TABLE RA_PPDM_GROUP_TYPE ADD CONSTRAINT RA_PPGT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPGT_PSWA_FK'
ALTER TABLE RA_PPDM_GROUP_TYPE ADD CONSTRAINT RA_PPGT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPGT_R_ART_FK'
ALTER TABLE RA_PPDM_GROUP_TYPE ADD CONSTRAINT RA_PPGT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPGT_R_ATY_FK'
ALTER TABLE RA_PPDM_GROUP_TYPE ADD CONSTRAINT RA_PPGT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPGT_R_LANG_FK'
ALTER TABLE RA_PPDM_GROUP_TYPE ADD CONSTRAINT RA_PPGT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPGT_R_PPGT_FK'
ALTER TABLE RA_PPDM_GROUP_TYPE ADD CONSTRAINT RA_PPGT_R_PPGT_FK FOREIGN KEY
(
GROUP_TYPE
)
REFERENCES R_PPDM_GROUP_TYPE
(
GROUP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPGT_SRCD_FK'
ALTER TABLE RA_PPDM_GROUP_TYPE ADD CONSTRAINT RA_PPGT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPGU_BA_FK'
ALTER TABLE RA_PPDM_GROUP_USE ADD CONSTRAINT RA_PPGU_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPGU_PSWA_FK'
ALTER TABLE RA_PPDM_GROUP_USE ADD CONSTRAINT RA_PPGU_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPGU_R_ART_FK'
ALTER TABLE RA_PPDM_GROUP_USE ADD CONSTRAINT RA_PPGU_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPGU_R_ATY_FK'
ALTER TABLE RA_PPDM_GROUP_USE ADD CONSTRAINT RA_PPGU_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPGU_R_LANG_FK'
ALTER TABLE RA_PPDM_GROUP_USE ADD CONSTRAINT RA_PPGU_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPGU_R_PPGU_FK'
ALTER TABLE RA_PPDM_GROUP_USE ADD CONSTRAINT RA_PPGU_R_PPGU_FK FOREIGN KEY
(
GROUP_USE
)
REFERENCES R_PPDM_GROUP_USE
(
GROUP_USE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPGU_SRCD_FK'
ALTER TABLE RA_PPDM_GROUP_USE ADD CONSTRAINT RA_PPGU_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PGXT_BA_FK'
ALTER TABLE RA_PPDM_GROUP_XREF_TYPE ADD CONSTRAINT RA_PGXT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PGXT_PSWA_FK'
ALTER TABLE RA_PPDM_GROUP_XREF_TYPE ADD CONSTRAINT RA_PGXT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PGXT_R_ART_FK'
ALTER TABLE RA_PPDM_GROUP_XREF_TYPE ADD CONSTRAINT RA_PGXT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PGXT_R_ATY_FK'
ALTER TABLE RA_PPDM_GROUP_XREF_TYPE ADD CONSTRAINT RA_PGXT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PGXT_R_LANG_FK'
ALTER TABLE RA_PPDM_GROUP_XREF_TYPE ADD CONSTRAINT RA_PGXT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PGXT_R_PGXT_FK'
ALTER TABLE RA_PPDM_GROUP_XREF_TYPE ADD CONSTRAINT RA_PGXT_R_PGXT_FK FOREIGN KEY
(
GROUP_XREF_TYPE
)
REFERENCES R_PPDM_GROUP_XREF_TYPE
(
GROUP_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PGXT_SRCD_FK'
ALTER TABLE RA_PPDM_GROUP_XREF_TYPE ADD CONSTRAINT RA_PGXT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIC_BA_FK'
ALTER TABLE RA_PPDM_INDEX_CATEGORY ADD CONSTRAINT RA_PIC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIC_PSWA_FK'
ALTER TABLE RA_PPDM_INDEX_CATEGORY ADD CONSTRAINT RA_PIC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIC_R_ART_FK'
ALTER TABLE RA_PPDM_INDEX_CATEGORY ADD CONSTRAINT RA_PIC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIC_R_ATY_FK'
ALTER TABLE RA_PPDM_INDEX_CATEGORY ADD CONSTRAINT RA_PIC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIC_R_LANG_FK'
ALTER TABLE RA_PPDM_INDEX_CATEGORY ADD CONSTRAINT RA_PIC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIC_R_PIC_FK'
ALTER TABLE RA_PPDM_INDEX_CATEGORY ADD CONSTRAINT RA_PIC_R_PIC_FK FOREIGN KEY
(
INDEX_CATEGORY
)
REFERENCES R_PPDM_INDEX_CATEGORY
(
INDEX_CATEGORY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PIC_SRCD_FK'
ALTER TABLE RA_PPDM_INDEX_CATEGORY ADD CONSTRAINT RA_PIC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMRT_BA_FK'
ALTER TABLE RA_PPDM_MAP_RULE_TYPE ADD CONSTRAINT RA_PMRT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMRT_PSWA_FK'
ALTER TABLE RA_PPDM_MAP_RULE_TYPE ADD CONSTRAINT RA_PMRT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMRT_R_ART_FK'
ALTER TABLE RA_PPDM_MAP_RULE_TYPE ADD CONSTRAINT RA_PMRT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMRT_R_ATY_FK'
ALTER TABLE RA_PPDM_MAP_RULE_TYPE ADD CONSTRAINT RA_PMRT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMRT_R_LANG_FK'
ALTER TABLE RA_PPDM_MAP_RULE_TYPE ADD CONSTRAINT RA_PMRT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMRT_R_PMRT_FK'
ALTER TABLE RA_PPDM_MAP_RULE_TYPE ADD CONSTRAINT RA_PMRT_R_PMRT_FK FOREIGN KEY
(
MAP_RULE_TYPE
)
REFERENCES R_PPDM_MAP_RULE_TYPE
(
MAP_RULE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMRT_SRCD_FK'
ALTER TABLE RA_PPDM_MAP_RULE_TYPE ADD CONSTRAINT RA_PMRT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMT_BA_FK'
ALTER TABLE RA_PPDM_MAP_TYPE ADD CONSTRAINT RA_PMT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMT_PSWA_FK'
ALTER TABLE RA_PPDM_MAP_TYPE ADD CONSTRAINT RA_PMT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMT_R_ART_FK'
ALTER TABLE RA_PPDM_MAP_TYPE ADD CONSTRAINT RA_PMT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMT_R_ATY_FK'
ALTER TABLE RA_PPDM_MAP_TYPE ADD CONSTRAINT RA_PMT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMT_R_LANG_FK'
ALTER TABLE RA_PPDM_MAP_TYPE ADD CONSTRAINT RA_PMT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMT_R_PMT_FK'
ALTER TABLE RA_PPDM_MAP_TYPE ADD CONSTRAINT RA_PMT_R_PMT_FK FOREIGN KEY
(
MAP_TYPE
)
REFERENCES R_PPDM_MAP_TYPE
(
MAP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMT_SRCD_FK'
ALTER TABLE RA_PPDM_MAP_TYPE ADD CONSTRAINT RA_PMT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMC_BA_FK'
ALTER TABLE RA_PPDM_METRIC_CODE ADD CONSTRAINT RA_PMC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMC_PSWA_FK'
ALTER TABLE RA_PPDM_METRIC_CODE ADD CONSTRAINT RA_PMC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMC_R_ART_FK'
ALTER TABLE RA_PPDM_METRIC_CODE ADD CONSTRAINT RA_PMC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMC_R_ATY_FK'
ALTER TABLE RA_PPDM_METRIC_CODE ADD CONSTRAINT RA_PMC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMC_R_LANG_FK'
ALTER TABLE RA_PPDM_METRIC_CODE ADD CONSTRAINT RA_PMC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMC_R_PMC_FK'
ALTER TABLE RA_PPDM_METRIC_CODE ADD CONSTRAINT RA_PMC_R_PMC_FK FOREIGN KEY
(
METRIC_TYPE,
METRIC_CODE
)
REFERENCES R_PPDM_METRIC_CODE
(
METRIC_TYPE,
METRIC_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMC_R_PMT1_FK'
ALTER TABLE RA_PPDM_METRIC_CODE ADD CONSTRAINT RA_PMC_R_PMT1_FK FOREIGN KEY
(
METRIC_TYPE
)
REFERENCES R_PPDM_METRIC_TYPE
(
METRIC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMC_SRCD_FK'
ALTER TABLE RA_PPDM_METRIC_CODE ADD CONSTRAINT RA_PMC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMCT_BA_FK'
ALTER TABLE RA_PPDM_METRIC_COMP_TYPE ADD CONSTRAINT RA_PMCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMCT_PSWA_FK'
ALTER TABLE RA_PPDM_METRIC_COMP_TYPE ADD CONSTRAINT RA_PMCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMCT_R_ART_FK'
ALTER TABLE RA_PPDM_METRIC_COMP_TYPE ADD CONSTRAINT RA_PMCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMCT_R_ATY_FK'
ALTER TABLE RA_PPDM_METRIC_COMP_TYPE ADD CONSTRAINT RA_PMCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMCT_R_LANG_FK'
ALTER TABLE RA_PPDM_METRIC_COMP_TYPE ADD CONSTRAINT RA_PMCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMCT_R_PMCT_FK'
ALTER TABLE RA_PPDM_METRIC_COMP_TYPE ADD CONSTRAINT RA_PMCT_R_PMCT_FK FOREIGN KEY
(
METRIC_COMPONENT_TYPE
)
REFERENCES R_PPDM_METRIC_COMP_TYPE
(
METRIC_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMCT_SRCD_FK'
ALTER TABLE RA_PPDM_METRIC_COMP_TYPE ADD CONSTRAINT RA_PMCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMRV_BA_FK'
ALTER TABLE RA_PPDM_METRIC_REF_VALUE ADD CONSTRAINT RA_PMRV_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMRV_PSWA_FK'
ALTER TABLE RA_PPDM_METRIC_REF_VALUE ADD CONSTRAINT RA_PMRV_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMRV_R_ART_FK'
ALTER TABLE RA_PPDM_METRIC_REF_VALUE ADD CONSTRAINT RA_PMRV_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMRV_R_ATY_FK'
ALTER TABLE RA_PPDM_METRIC_REF_VALUE ADD CONSTRAINT RA_PMRV_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMRV_R_LANG_FK'
ALTER TABLE RA_PPDM_METRIC_REF_VALUE ADD CONSTRAINT RA_PMRV_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMRV_R_PMRV_FK'
ALTER TABLE RA_PPDM_METRIC_REF_VALUE ADD CONSTRAINT RA_PMRV_R_PMRV_FK FOREIGN KEY
(
REFERENCE_VALUE_TYPE
)
REFERENCES R_PPDM_METRIC_REF_VALUE
(
REFERENCE_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMRV_SRCD_FK'
ALTER TABLE RA_PPDM_METRIC_REF_VALUE ADD CONSTRAINT RA_PMRV_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMT1_BA_FK'
ALTER TABLE RA_PPDM_METRIC_TYPE ADD CONSTRAINT RA_PMT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMT1_PSWA_FK'
ALTER TABLE RA_PPDM_METRIC_TYPE ADD CONSTRAINT RA_PMT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMT1_R_ART_FK'
ALTER TABLE RA_PPDM_METRIC_TYPE ADD CONSTRAINT RA_PMT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMT1_R_ATY_FK'
ALTER TABLE RA_PPDM_METRIC_TYPE ADD CONSTRAINT RA_PMT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMT1_R_LANG_FK'
ALTER TABLE RA_PPDM_METRIC_TYPE ADD CONSTRAINT RA_PMT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMT1_R_PMT1_FK'
ALTER TABLE RA_PPDM_METRIC_TYPE ADD CONSTRAINT RA_PMT1_R_PMT1_FK FOREIGN KEY
(
METRIC_TYPE
)
REFERENCES R_PPDM_METRIC_TYPE
(
METRIC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PMT1_SRCD_FK'
ALTER TABLE RA_PPDM_METRIC_TYPE ADD CONSTRAINT RA_PMT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POBS_BA_FK'
ALTER TABLE RA_PPDM_OBJECT_STATUS ADD CONSTRAINT RA_POBS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POBS_PSWA_FK'
ALTER TABLE RA_PPDM_OBJECT_STATUS ADD CONSTRAINT RA_POBS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POBS_R_ART_FK'
ALTER TABLE RA_PPDM_OBJECT_STATUS ADD CONSTRAINT RA_POBS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POBS_R_ATY_FK'
ALTER TABLE RA_PPDM_OBJECT_STATUS ADD CONSTRAINT RA_POBS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POBS_R_LANG_FK'
ALTER TABLE RA_PPDM_OBJECT_STATUS ADD CONSTRAINT RA_POBS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POBS_R_POBS_FK'
ALTER TABLE RA_PPDM_OBJECT_STATUS ADD CONSTRAINT RA_POBS_R_POBS_FK FOREIGN KEY
(
OBJECT_STATUS
)
REFERENCES R_PPDM_OBJECT_STATUS
(
OBJECT_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POBS_SRCD_FK'
ALTER TABLE RA_PPDM_OBJECT_STATUS ADD CONSTRAINT RA_POBS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POBT_BA_FK'
ALTER TABLE RA_PPDM_OBJECT_TYPE ADD CONSTRAINT RA_POBT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POBT_PSWA_FK'
ALTER TABLE RA_PPDM_OBJECT_TYPE ADD CONSTRAINT RA_POBT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POBT_R_ART_FK'
ALTER TABLE RA_PPDM_OBJECT_TYPE ADD CONSTRAINT RA_POBT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POBT_R_ATY_FK'
ALTER TABLE RA_PPDM_OBJECT_TYPE ADD CONSTRAINT RA_POBT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POBT_R_LANG_FK'
ALTER TABLE RA_PPDM_OBJECT_TYPE ADD CONSTRAINT RA_POBT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POBT_R_POBT_FK'
ALTER TABLE RA_PPDM_OBJECT_TYPE ADD CONSTRAINT RA_POBT_R_POBT_FK FOREIGN KEY
(
OBJECT_TYPE
)
REFERENCES R_PPDM_OBJECT_TYPE
(
OBJECT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POBT_SRCD_FK'
ALTER TABLE RA_PPDM_OBJECT_TYPE ADD CONSTRAINT RA_POBT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POS_BA_FK'
ALTER TABLE RA_PPDM_OPERATING_SYSTEM ADD CONSTRAINT RA_POS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POS_PSWA_FK'
ALTER TABLE RA_PPDM_OPERATING_SYSTEM ADD CONSTRAINT RA_POS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POS_R_ART_FK'
ALTER TABLE RA_PPDM_OPERATING_SYSTEM ADD CONSTRAINT RA_POS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POS_R_ATY_FK'
ALTER TABLE RA_PPDM_OPERATING_SYSTEM ADD CONSTRAINT RA_POS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POS_R_LANG_FK'
ALTER TABLE RA_PPDM_OPERATING_SYSTEM ADD CONSTRAINT RA_POS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POS_R_POS_FK'
ALTER TABLE RA_PPDM_OPERATING_SYSTEM ADD CONSTRAINT RA_POS_R_POS_FK FOREIGN KEY
(
OPERATING_SYSTEM
)
REFERENCES R_PPDM_OPERATING_SYSTEM
(
OPERATING_SYSTEM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POS_SRCD_FK'
ALTER TABLE RA_PPDM_OPERATING_SYSTEM ADD CONSTRAINT RA_POS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POR_BA_FK'
ALTER TABLE RA_PPDM_OWNER_ROLE ADD CONSTRAINT RA_POR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POR_PSWA_FK'
ALTER TABLE RA_PPDM_OWNER_ROLE ADD CONSTRAINT RA_POR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POR_R_ART_FK'
ALTER TABLE RA_PPDM_OWNER_ROLE ADD CONSTRAINT RA_POR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POR_R_ATY_FK'
ALTER TABLE RA_PPDM_OWNER_ROLE ADD CONSTRAINT RA_POR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POR_R_LANG_FK'
ALTER TABLE RA_PPDM_OWNER_ROLE ADD CONSTRAINT RA_POR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POR_R_POR_FK'
ALTER TABLE RA_PPDM_OWNER_ROLE ADD CONSTRAINT RA_POR_R_POR_FK FOREIGN KEY
(
OWNER_ROLE
)
REFERENCES R_PPDM_OWNER_ROLE
(
OWNER_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_POR_SRCD_FK'
ALTER TABLE RA_PPDM_OWNER_ROLE ADD CONSTRAINT RA_POR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPT_BA_FK'
ALTER TABLE RA_PPDM_PROC_TYPE ADD CONSTRAINT RA_PPT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPT_PSWA_FK'
ALTER TABLE RA_PPDM_PROC_TYPE ADD CONSTRAINT RA_PPT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPT_R_ART_FK'
ALTER TABLE RA_PPDM_PROC_TYPE ADD CONSTRAINT RA_PPT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPT_R_ATY_FK'
ALTER TABLE RA_PPDM_PROC_TYPE ADD CONSTRAINT RA_PPT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPT_R_LANG_FK'
ALTER TABLE RA_PPDM_PROC_TYPE ADD CONSTRAINT RA_PPT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPT_R_PPT_FK'
ALTER TABLE RA_PPDM_PROC_TYPE ADD CONSTRAINT RA_PPT_R_PPT_FK FOREIGN KEY
(
PROCEDURE_TYPE
)
REFERENCES R_PPDM_PROC_TYPE
(
PROCEDURE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPT_SRCD_FK'
ALTER TABLE RA_PPDM_PROC_TYPE ADD CONSTRAINT RA_PPT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQCQ_BA_FK'
ALTER TABLE RA_PPDM_QC_QUALITY ADD CONSTRAINT RA_PQCQ_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQCQ_PSWA_FK'
ALTER TABLE RA_PPDM_QC_QUALITY ADD CONSTRAINT RA_PQCQ_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQCQ_R_ART_FK'
ALTER TABLE RA_PPDM_QC_QUALITY ADD CONSTRAINT RA_PQCQ_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQCQ_R_ATY_FK'
ALTER TABLE RA_PPDM_QC_QUALITY ADD CONSTRAINT RA_PQCQ_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQCQ_R_LANG_FK'
ALTER TABLE RA_PPDM_QC_QUALITY ADD CONSTRAINT RA_PQCQ_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQCQ_R_PQCQ_FK'
ALTER TABLE RA_PPDM_QC_QUALITY ADD CONSTRAINT RA_PQCQ_R_PQCQ_FK FOREIGN KEY
(
QUALITY_TYPE
)
REFERENCES R_PPDM_QC_QUALITY
(
QUALITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQCQ_SRCD_FK'
ALTER TABLE RA_PPDM_QC_QUALITY ADD CONSTRAINT RA_PQCQ_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQCS_BA_FK'
ALTER TABLE RA_PPDM_QC_STATUS ADD CONSTRAINT RA_PQCS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQCS_PSWA_FK'
ALTER TABLE RA_PPDM_QC_STATUS ADD CONSTRAINT RA_PQCS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQCS_R_ART_FK'
ALTER TABLE RA_PPDM_QC_STATUS ADD CONSTRAINT RA_PQCS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQCS_R_ATY_FK'
ALTER TABLE RA_PPDM_QC_STATUS ADD CONSTRAINT RA_PQCS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQCS_R_LANG_FK'
ALTER TABLE RA_PPDM_QC_STATUS ADD CONSTRAINT RA_PQCS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQCS_R_PQCS_FK'
ALTER TABLE RA_PPDM_QC_STATUS ADD CONSTRAINT RA_PQCS_R_PQCS_FK FOREIGN KEY
(
QC_STATUS
)
REFERENCES R_PPDM_QC_STATUS
(
QC_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQCS_SRCD_FK'
ALTER TABLE RA_PPDM_QC_STATUS ADD CONSTRAINT RA_PQCS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQCT_BA_FK'
ALTER TABLE RA_PPDM_QC_TYPE ADD CONSTRAINT RA_PQCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQCT_PSWA_FK'
ALTER TABLE RA_PPDM_QC_TYPE ADD CONSTRAINT RA_PQCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQCT_R_ART_FK'
ALTER TABLE RA_PPDM_QC_TYPE ADD CONSTRAINT RA_PQCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQCT_R_ATY_FK'
ALTER TABLE RA_PPDM_QC_TYPE ADD CONSTRAINT RA_PQCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQCT_R_LANG_FK'
ALTER TABLE RA_PPDM_QC_TYPE ADD CONSTRAINT RA_PQCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQCT_R_PQCT_FK'
ALTER TABLE RA_PPDM_QC_TYPE ADD CONSTRAINT RA_PQCT_R_PQCT_FK FOREIGN KEY
(
QC_TYPE
)
REFERENCES R_PPDM_QC_TYPE
(
QC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQCT_SRCD_FK'
ALTER TABLE RA_PPDM_QC_TYPE ADD CONSTRAINT RA_PQCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRDB_BA_FK'
ALTER TABLE RA_PPDM_RDBMS ADD CONSTRAINT RA_PRDB_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRDB_PSWA_FK'
ALTER TABLE RA_PPDM_RDBMS ADD CONSTRAINT RA_PRDB_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRDB_R_ART_FK'
ALTER TABLE RA_PPDM_RDBMS ADD CONSTRAINT RA_PRDB_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRDB_R_ATY_FK'
ALTER TABLE RA_PPDM_RDBMS ADD CONSTRAINT RA_PRDB_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRDB_R_LANG_FK'
ALTER TABLE RA_PPDM_RDBMS ADD CONSTRAINT RA_PRDB_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRDB_R_PRDB_FK'
ALTER TABLE RA_PPDM_RDBMS ADD CONSTRAINT RA_PRDB_R_PRDB_FK FOREIGN KEY
(
RDBMS_ID
)
REFERENCES R_PPDM_RDBMS
(
RDBMS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRDB_SRCD_FK'
ALTER TABLE RA_PPDM_RDBMS ADD CONSTRAINT RA_PRDB_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRVT_BA_FK'
ALTER TABLE RA_PPDM_REF_VALUE_TYPE ADD CONSTRAINT RA_PRVT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRVT_PSWA_FK'
ALTER TABLE RA_PPDM_REF_VALUE_TYPE ADD CONSTRAINT RA_PRVT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRVT_R_ART_FK'
ALTER TABLE RA_PPDM_REF_VALUE_TYPE ADD CONSTRAINT RA_PRVT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRVT_R_ATY_FK'
ALTER TABLE RA_PPDM_REF_VALUE_TYPE ADD CONSTRAINT RA_PRVT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRVT_R_LANG_FK'
ALTER TABLE RA_PPDM_REF_VALUE_TYPE ADD CONSTRAINT RA_PRVT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRVT_R_PRVT_FK'
ALTER TABLE RA_PPDM_REF_VALUE_TYPE ADD CONSTRAINT RA_PRVT_R_PRVT_FK FOREIGN KEY
(
REFERENCE_VALUE_TYPE
)
REFERENCES R_PPDM_REF_VALUE_TYPE
(
REFERENCE_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRVT_SRCD_FK'
ALTER TABLE RA_PPDM_REF_VALUE_TYPE ADD CONSTRAINT RA_PRVT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRQ_BA_FK'
ALTER TABLE RA_PPDM_ROW_QUALITY ADD CONSTRAINT RA_PRQ_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRQ_PSWA_FK'
ALTER TABLE RA_PPDM_ROW_QUALITY ADD CONSTRAINT RA_PRQ_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRQ_R_ART_FK'
ALTER TABLE RA_PPDM_ROW_QUALITY ADD CONSTRAINT RA_PRQ_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRQ_R_ATY_FK'
ALTER TABLE RA_PPDM_ROW_QUALITY ADD CONSTRAINT RA_PRQ_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRQ_R_LANG_FK'
ALTER TABLE RA_PPDM_ROW_QUALITY ADD CONSTRAINT RA_PRQ_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRQ_R_PRVT_FK'
ALTER TABLE RA_PPDM_ROW_QUALITY ADD CONSTRAINT RA_PRQ_R_PRVT_FK FOREIGN KEY
(
ROW_QUALITY_ID
)
REFERENCES R_PPDM_REF_VALUE_TYPE
(
REFERENCE_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRQ_SRCD_FK'
ALTER TABLE RA_PPDM_ROW_QUALITY ADD CONSTRAINT RA_PRQ_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRC_BA_FK'
ALTER TABLE RA_PPDM_RULE_CLASS ADD CONSTRAINT RA_PRC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRC_PSWA_FK'
ALTER TABLE RA_PPDM_RULE_CLASS ADD CONSTRAINT RA_PRC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRC_R_ART_FK'
ALTER TABLE RA_PPDM_RULE_CLASS ADD CONSTRAINT RA_PRC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRC_R_ATY_FK'
ALTER TABLE RA_PPDM_RULE_CLASS ADD CONSTRAINT RA_PRC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRC_R_LANG_FK'
ALTER TABLE RA_PPDM_RULE_CLASS ADD CONSTRAINT RA_PRC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRC_R_PRC_FK'
ALTER TABLE RA_PPDM_RULE_CLASS ADD CONSTRAINT RA_PRC_R_PRC_FK FOREIGN KEY
(
RULE_CLASS_TYPE
)
REFERENCES R_PPDM_RULE_CLASS
(
RULE_CLASS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRC_SRCD_FK'
ALTER TABLE RA_PPDM_RULE_CLASS ADD CONSTRAINT RA_PRC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRCT1_BA_FK'
ALTER TABLE RA_PPDM_RULE_COMP_TYPE ADD CONSTRAINT RA_PRCT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRCT1_PSWA_FK'
ALTER TABLE RA_PPDM_RULE_COMP_TYPE ADD CONSTRAINT RA_PRCT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRCT1_R_ART_FK'
ALTER TABLE RA_PPDM_RULE_COMP_TYPE ADD CONSTRAINT RA_PRCT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRCT1_R_ATY_FK'
ALTER TABLE RA_PPDM_RULE_COMP_TYPE ADD CONSTRAINT RA_PRCT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRCT1_R_LANG_FK'
ALTER TABLE RA_PPDM_RULE_COMP_TYPE ADD CONSTRAINT RA_PRCT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRCT1_R_PRCT1_FK'
ALTER TABLE RA_PPDM_RULE_COMP_TYPE ADD CONSTRAINT RA_PRCT1_R_PRCT1_FK FOREIGN KEY
(
RULE_COMPONENT_TYPE
)
REFERENCES R_PPDM_RULE_COMP_TYPE
(
RULE_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRCT1_SRCD_FK'
ALTER TABLE RA_PPDM_RULE_COMP_TYPE ADD CONSTRAINT RA_PRCT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRDT_BA_FK'
ALTER TABLE RA_PPDM_RULE_DETAIL_TYPE ADD CONSTRAINT RA_PRDT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRDT_PSWA_FK'
ALTER TABLE RA_PPDM_RULE_DETAIL_TYPE ADD CONSTRAINT RA_PRDT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRDT_R_ART_FK'
ALTER TABLE RA_PPDM_RULE_DETAIL_TYPE ADD CONSTRAINT RA_PRDT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRDT_R_ATY_FK'
ALTER TABLE RA_PPDM_RULE_DETAIL_TYPE ADD CONSTRAINT RA_PRDT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRDT_R_LANG_FK'
ALTER TABLE RA_PPDM_RULE_DETAIL_TYPE ADD CONSTRAINT RA_PRDT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRDT_R_PRDT_FK'
ALTER TABLE RA_PPDM_RULE_DETAIL_TYPE ADD CONSTRAINT RA_PRDT_R_PRDT_FK FOREIGN KEY
(
RULE_DETAIL_TYPE
)
REFERENCES R_PPDM_RULE_DETAIL_TYPE
(
RULE_DETAIL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRDT_SRCD_FK'
ALTER TABLE RA_PPDM_RULE_DETAIL_TYPE ADD CONSTRAINT RA_PRDT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRP_BA_FK'
ALTER TABLE RA_PPDM_RULE_PURPOSE ADD CONSTRAINT RA_PRP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRP_PSWA_FK'
ALTER TABLE RA_PPDM_RULE_PURPOSE ADD CONSTRAINT RA_PRP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRP_R_ART_FK'
ALTER TABLE RA_PPDM_RULE_PURPOSE ADD CONSTRAINT RA_PRP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRP_R_ATY_FK'
ALTER TABLE RA_PPDM_RULE_PURPOSE ADD CONSTRAINT RA_PRP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRP_R_LANG_FK'
ALTER TABLE RA_PPDM_RULE_PURPOSE ADD CONSTRAINT RA_PRP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRP_R_PRP_FK'
ALTER TABLE RA_PPDM_RULE_PURPOSE ADD CONSTRAINT RA_PRP_R_PRP_FK FOREIGN KEY
(
RULE_PURPOSE
)
REFERENCES R_PPDM_RULE_PURPOSE
(
RULE_PURPOSE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRP_SRCD_FK'
ALTER TABLE RA_PPDM_RULE_PURPOSE ADD CONSTRAINT RA_PRP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRS_BA_FK'
ALTER TABLE RA_PPDM_RULE_STATUS ADD CONSTRAINT RA_PRS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRS_PSWA_FK'
ALTER TABLE RA_PPDM_RULE_STATUS ADD CONSTRAINT RA_PRS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRS_R_ART_FK'
ALTER TABLE RA_PPDM_RULE_STATUS ADD CONSTRAINT RA_PRS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRS_R_ATY_FK'
ALTER TABLE RA_PPDM_RULE_STATUS ADD CONSTRAINT RA_PRS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRS_R_LANG_FK'
ALTER TABLE RA_PPDM_RULE_STATUS ADD CONSTRAINT RA_PRS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRS_R_PRS_FK'
ALTER TABLE RA_PPDM_RULE_STATUS ADD CONSTRAINT RA_PRS_R_PRS_FK FOREIGN KEY
(
RULE_STATUS
)
REFERENCES R_PPDM_RULE_STATUS
(
RULE_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRS_SRCD_FK'
ALTER TABLE RA_PPDM_RULE_STATUS ADD CONSTRAINT RA_PRS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRUC_BA_FK'
ALTER TABLE RA_PPDM_RULE_USE_COND ADD CONSTRAINT RA_PRUC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRUC_PSWA_FK'
ALTER TABLE RA_PPDM_RULE_USE_COND ADD CONSTRAINT RA_PRUC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRUC_R_ART_FK'
ALTER TABLE RA_PPDM_RULE_USE_COND ADD CONSTRAINT RA_PRUC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRUC_R_ATY_FK'
ALTER TABLE RA_PPDM_RULE_USE_COND ADD CONSTRAINT RA_PRUC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRUC_R_LANG_FK'
ALTER TABLE RA_PPDM_RULE_USE_COND ADD CONSTRAINT RA_PRUC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRUC_R_PRUC_FK'
ALTER TABLE RA_PPDM_RULE_USE_COND ADD CONSTRAINT RA_PRUC_R_PRUC_FK FOREIGN KEY
(
USE_CONDITION_TYPE
)
REFERENCES R_PPDM_RULE_USE_COND
(
USE_CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRUC_SRCD_FK'
ALTER TABLE RA_PPDM_RULE_USE_COND ADD CONSTRAINT RA_PRUC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRXC_BA_FK'
ALTER TABLE RA_PPDM_RULE_XREF_COND ADD CONSTRAINT RA_PRXC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRXC_PSWA_FK'
ALTER TABLE RA_PPDM_RULE_XREF_COND ADD CONSTRAINT RA_PRXC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRXC_R_ART_FK'
ALTER TABLE RA_PPDM_RULE_XREF_COND ADD CONSTRAINT RA_PRXC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRXC_R_ATY_FK'
ALTER TABLE RA_PPDM_RULE_XREF_COND ADD CONSTRAINT RA_PRXC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRXC_R_LANG_FK'
ALTER TABLE RA_PPDM_RULE_XREF_COND ADD CONSTRAINT RA_PRXC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRXC_R_PRXC_FK'
ALTER TABLE RA_PPDM_RULE_XREF_COND ADD CONSTRAINT RA_PRXC_R_PRXC_FK FOREIGN KEY
(
RULE_XREF_CONDITION
)
REFERENCES R_PPDM_RULE_XREF_COND
(
RULE_XREF_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRXC_SRCD_FK'
ALTER TABLE RA_PPDM_RULE_XREF_COND ADD CONSTRAINT RA_PRXC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRXT_BA_FK'
ALTER TABLE RA_PPDM_RULE_XREF_TYPE ADD CONSTRAINT RA_PRXT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRXT_PSWA_FK'
ALTER TABLE RA_PPDM_RULE_XREF_TYPE ADD CONSTRAINT RA_PRXT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRXT_R_ART_FK'
ALTER TABLE RA_PPDM_RULE_XREF_TYPE ADD CONSTRAINT RA_PRXT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRXT_R_ATY_FK'
ALTER TABLE RA_PPDM_RULE_XREF_TYPE ADD CONSTRAINT RA_PRXT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRXT_R_LANG_FK'
ALTER TABLE RA_PPDM_RULE_XREF_TYPE ADD CONSTRAINT RA_PRXT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRXT_R_PRXT_FK'
ALTER TABLE RA_PPDM_RULE_XREF_TYPE ADD CONSTRAINT RA_PRXT_R_PRXT_FK FOREIGN KEY
(
RULE_XREF_TYPE
)
REFERENCES R_PPDM_RULE_XREF_TYPE
(
RULE_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRXT_SRCD_FK'
ALTER TABLE RA_PPDM_RULE_XREF_TYPE ADD CONSTRAINT RA_PRXT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSET_BA_FK'
ALTER TABLE RA_PPDM_SCHEMA_ENTITY ADD CONSTRAINT RA_PSET_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSET_PSWA_FK'
ALTER TABLE RA_PPDM_SCHEMA_ENTITY ADD CONSTRAINT RA_PSET_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSET_R_ART_FK'
ALTER TABLE RA_PPDM_SCHEMA_ENTITY ADD CONSTRAINT RA_PSET_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSET_R_ATY_FK'
ALTER TABLE RA_PPDM_SCHEMA_ENTITY ADD CONSTRAINT RA_PSET_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSET_R_LANG_FK'
ALTER TABLE RA_PPDM_SCHEMA_ENTITY ADD CONSTRAINT RA_PSET_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSET_R_PSET_FK'
ALTER TABLE RA_PPDM_SCHEMA_ENTITY ADD CONSTRAINT RA_PSET_R_PSET_FK FOREIGN KEY
(
ELEMENT_TYPE
)
REFERENCES R_PPDM_SCHEMA_ENTITY
(
ELEMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSET_SRCD_FK'
ALTER TABLE RA_PPDM_SCHEMA_ENTITY ADD CONSTRAINT RA_PSET_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSGT_BA_FK'
ALTER TABLE RA_PPDM_SCHEMA_GROUP ADD CONSTRAINT RA_PSGT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSGT_PSWA_FK'
ALTER TABLE RA_PPDM_SCHEMA_GROUP ADD CONSTRAINT RA_PSGT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSGT_R_ART_FK'
ALTER TABLE RA_PPDM_SCHEMA_GROUP ADD CONSTRAINT RA_PSGT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSGT_R_ATY_FK'
ALTER TABLE RA_PPDM_SCHEMA_GROUP ADD CONSTRAINT RA_PSGT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSGT_R_LANG_FK'
ALTER TABLE RA_PPDM_SCHEMA_GROUP ADD CONSTRAINT RA_PSGT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSGT_R_PSGT_FK'
ALTER TABLE RA_PPDM_SCHEMA_GROUP ADD CONSTRAINT RA_PSGT_R_PSGT_FK FOREIGN KEY
(
SCHEMA_GROUP_TYPE
)
REFERENCES R_PPDM_SCHEMA_GROUP
(
SCHEMA_GROUP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSGT_SRCD_FK'
ALTER TABLE RA_PPDM_SCHEMA_GROUP ADD CONSTRAINT RA_PSGT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPST_BA_FK'
ALTER TABLE RA_PPDM_SYSTEM_TYPE ADD CONSTRAINT RA_PPST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPST_PSWA_FK'
ALTER TABLE RA_PPDM_SYSTEM_TYPE ADD CONSTRAINT RA_PPST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPST_R_ART_FK'
ALTER TABLE RA_PPDM_SYSTEM_TYPE ADD CONSTRAINT RA_PPST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPST_R_ATY_FK'
ALTER TABLE RA_PPDM_SYSTEM_TYPE ADD CONSTRAINT RA_PPST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPST_R_LANG_FK'
ALTER TABLE RA_PPDM_SYSTEM_TYPE ADD CONSTRAINT RA_PPST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPST_R_PPST_FK'
ALTER TABLE RA_PPDM_SYSTEM_TYPE ADD CONSTRAINT RA_PPST_R_PPST_FK FOREIGN KEY
(
PPDM_SYSTEM_TYPE
)
REFERENCES R_PPDM_SYSTEM_TYPE
(
PPDM_SYSTEM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PPST_SRCD_FK'
ALTER TABLE RA_PPDM_SYSTEM_TYPE ADD CONSTRAINT RA_PPST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PTT_BA_FK'
ALTER TABLE RA_PPDM_TABLE_TYPE ADD CONSTRAINT RA_PTT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PTT_PSWA_FK'
ALTER TABLE RA_PPDM_TABLE_TYPE ADD CONSTRAINT RA_PTT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PTT_R_ART_FK'
ALTER TABLE RA_PPDM_TABLE_TYPE ADD CONSTRAINT RA_PTT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PTT_R_ATY_FK'
ALTER TABLE RA_PPDM_TABLE_TYPE ADD CONSTRAINT RA_PTT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PTT_R_LANG_FK'
ALTER TABLE RA_PPDM_TABLE_TYPE ADD CONSTRAINT RA_PTT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PTT_R_PTT_FK'
ALTER TABLE RA_PPDM_TABLE_TYPE ADD CONSTRAINT RA_PTT_R_PTT_FK FOREIGN KEY
(
TABLE_TYPE
)
REFERENCES R_PPDM_TABLE_TYPE
(
TABLE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PTT_SRCD_FK'
ALTER TABLE RA_PPDM_TABLE_TYPE ADD CONSTRAINT RA_PTT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PUAT_BA_FK'
ALTER TABLE RA_PPDM_UOM_ALIAS_TYPE ADD CONSTRAINT RA_PUAT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PUAT_PSWA_FK'
ALTER TABLE RA_PPDM_UOM_ALIAS_TYPE ADD CONSTRAINT RA_PUAT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PUAT_R_ART_FK'
ALTER TABLE RA_PPDM_UOM_ALIAS_TYPE ADD CONSTRAINT RA_PUAT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PUAT_R_ATY_FK'
ALTER TABLE RA_PPDM_UOM_ALIAS_TYPE ADD CONSTRAINT RA_PUAT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PUAT_R_LANG_FK'
ALTER TABLE RA_PPDM_UOM_ALIAS_TYPE ADD CONSTRAINT RA_PUAT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PUAT_R_PUAT_FK'
ALTER TABLE RA_PPDM_UOM_ALIAS_TYPE ADD CONSTRAINT RA_PUAT_R_PUAT_FK FOREIGN KEY
(
UOM_ALIAS_TYPE
)
REFERENCES R_PPDM_UOM_ALIAS_TYPE
(
UOM_ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PUAT_SRCD_FK'
ALTER TABLE RA_PPDM_UOM_ALIAS_TYPE ADD CONSTRAINT RA_PUAT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PUU_BA_FK'
ALTER TABLE RA_PPDM_UOM_USAGE ADD CONSTRAINT RA_PUU_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PUU_PSWA_FK'
ALTER TABLE RA_PPDM_UOM_USAGE ADD CONSTRAINT RA_PUU_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PUU_R_ART_FK'
ALTER TABLE RA_PPDM_UOM_USAGE ADD CONSTRAINT RA_PUU_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PUU_R_ATY_FK'
ALTER TABLE RA_PPDM_UOM_USAGE ADD CONSTRAINT RA_PUU_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PUU_R_LANG_FK'
ALTER TABLE RA_PPDM_UOM_USAGE ADD CONSTRAINT RA_PUU_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PUU_R_PUU_FK'
ALTER TABLE RA_PPDM_UOM_USAGE ADD CONSTRAINT RA_PUU_R_PUU_FK FOREIGN KEY
(
UOM_USAGE_TYPE
)
REFERENCES R_PPDM_UOM_USAGE
(
UOM_USAGE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PUU_SRCD_FK'
ALTER TABLE RA_PPDM_UOM_USAGE ADD CONSTRAINT RA_PUU_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQ2_BA_FK'
ALTER TABLE RA_PRESERVE_QUALITY ADD CONSTRAINT RA_PQ2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQ2_PSWA_FK'
ALTER TABLE RA_PRESERVE_QUALITY ADD CONSTRAINT RA_PQ2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQ2_R_ART_FK'
ALTER TABLE RA_PRESERVE_QUALITY ADD CONSTRAINT RA_PQ2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQ2_R_ATY_FK'
ALTER TABLE RA_PRESERVE_QUALITY ADD CONSTRAINT RA_PQ2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQ2_R_LANG_FK'
ALTER TABLE RA_PRESERVE_QUALITY ADD CONSTRAINT RA_PQ2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQ2_R_PQ2_FK'
ALTER TABLE RA_PRESERVE_QUALITY ADD CONSTRAINT RA_PQ2_R_PQ2_FK FOREIGN KEY
(
PRESERVATION_QUALITY
)
REFERENCES R_PRESERVE_QUALITY
(
PRESERVATION_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PQ2_SRCD_FK'
ALTER TABLE RA_PRESERVE_QUALITY ADD CONSTRAINT RA_PQ2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_P4_BA_FK'
ALTER TABLE RA_PRESERVE_TYPE ADD CONSTRAINT RA_P4_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_P4_PSWA_FK'
ALTER TABLE RA_PRESERVE_TYPE ADD CONSTRAINT RA_P4_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_P4_R_ART_FK'
ALTER TABLE RA_PRESERVE_TYPE ADD CONSTRAINT RA_P4_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_P4_R_ATY_FK'
ALTER TABLE RA_PRESERVE_TYPE ADD CONSTRAINT RA_P4_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_P4_R_LANG_FK'
ALTER TABLE RA_PRESERVE_TYPE ADD CONSTRAINT RA_P4_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_P4_R_P4_FK'
ALTER TABLE RA_PRESERVE_TYPE ADD CONSTRAINT RA_P4_R_P4_FK FOREIGN KEY
(
PRESERVATION_TYPE
)
REFERENCES R_PRESERVE_TYPE
(
PRESERVATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_P4_SRCD_FK'
ALTER TABLE RA_PRESERVE_TYPE ADD CONSTRAINT RA_P4_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PM1_BA_FK'
ALTER TABLE RA_PRODUCTION_METHOD ADD CONSTRAINT RA_PM1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PM1_PSWA_FK'
ALTER TABLE RA_PRODUCTION_METHOD ADD CONSTRAINT RA_PM1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PM1_R_ART_FK'
ALTER TABLE RA_PRODUCTION_METHOD ADD CONSTRAINT RA_PM1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PM1_R_ATY_FK'
ALTER TABLE RA_PRODUCTION_METHOD ADD CONSTRAINT RA_PM1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PM1_R_LANG_FK'
ALTER TABLE RA_PRODUCTION_METHOD ADD CONSTRAINT RA_PM1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PM1_R_PM1_FK'
ALTER TABLE RA_PRODUCTION_METHOD ADD CONSTRAINT RA_PM1_R_PM1_FK FOREIGN KEY
(
PRODUCTION_METHOD
)
REFERENCES R_PRODUCTION_METHOD
(
PRODUCTION_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PM1_SRCD_FK'
ALTER TABLE RA_PRODUCTION_METHOD ADD CONSTRAINT RA_PM1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRCT_BA_FK'
ALTER TABLE RA_PRODUCT_COMPONENT_TYPE ADD CONSTRAINT RA_PRCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRCT_PSWA_FK'
ALTER TABLE RA_PRODUCT_COMPONENT_TYPE ADD CONSTRAINT RA_PRCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRCT_R_ART_FK'
ALTER TABLE RA_PRODUCT_COMPONENT_TYPE ADD CONSTRAINT RA_PRCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRCT_R_ATY_FK'
ALTER TABLE RA_PRODUCT_COMPONENT_TYPE ADD CONSTRAINT RA_PRCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRCT_R_LANG_FK'
ALTER TABLE RA_PRODUCT_COMPONENT_TYPE ADD CONSTRAINT RA_PRCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRCT_R_PRCT_FK'
ALTER TABLE RA_PRODUCT_COMPONENT_TYPE ADD CONSTRAINT RA_PRCT_R_PRCT_FK FOREIGN KEY
(
PRODUCT_COMPONENT_TYPE
)
REFERENCES R_PRODUCT_COMPONENT_TYPE
(
PRODUCT_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRCT_SRCD_FK'
ALTER TABLE RA_PRODUCT_COMPONENT_TYPE ADD CONSTRAINT RA_PRCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSC_BA_FK'
ALTER TABLE RA_PROD_STRING_COMP_TYPE ADD CONSTRAINT RA_PSC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSC_PSWA_FK'
ALTER TABLE RA_PROD_STRING_COMP_TYPE ADD CONSTRAINT RA_PSC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSC_R_ART_FK'
ALTER TABLE RA_PROD_STRING_COMP_TYPE ADD CONSTRAINT RA_PSC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSC_R_ATY_FK'
ALTER TABLE RA_PROD_STRING_COMP_TYPE ADD CONSTRAINT RA_PSC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSC_R_LANG_FK'
ALTER TABLE RA_PROD_STRING_COMP_TYPE ADD CONSTRAINT RA_PSC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSC_R_PSC_FK'
ALTER TABLE RA_PROD_STRING_COMP_TYPE ADD CONSTRAINT RA_PSC_R_PSC_FK FOREIGN KEY
(
PROD_STRING_COMPONENT_TYPE
)
REFERENCES R_PROD_STRING_COMP_TYPE
(
PROD_STRING_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSC_SRCD_FK'
ALTER TABLE RA_PROD_STRING_COMP_TYPE ADD CONSTRAINT RA_PSC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSS_BA_FK'
ALTER TABLE RA_PROD_STRING_STATUS ADD CONSTRAINT RA_PSS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSS_PSWA_FK'
ALTER TABLE RA_PROD_STRING_STATUS ADD CONSTRAINT RA_PSS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSS_R_ART_FK'
ALTER TABLE RA_PROD_STRING_STATUS ADD CONSTRAINT RA_PSS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSS_R_ATY_FK'
ALTER TABLE RA_PROD_STRING_STATUS ADD CONSTRAINT RA_PSS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSS_R_LANG_FK'
ALTER TABLE RA_PROD_STRING_STATUS ADD CONSTRAINT RA_PSS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSS_R_PSS_FK'
ALTER TABLE RA_PROD_STRING_STATUS ADD CONSTRAINT RA_PSS_R_PSS_FK FOREIGN KEY
(
STATUS_TYPE,
STATUS
)
REFERENCES R_PROD_STRING_STATUS
(
STATUS_TYPE,
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSS_R_PSST_FK'
ALTER TABLE RA_PROD_STRING_STATUS ADD CONSTRAINT RA_PSS_R_PSST_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_PROD_STRING_STAT_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSS_SRCD_FK'
ALTER TABLE RA_PROD_STRING_STATUS ADD CONSTRAINT RA_PSS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSST_BA_FK'
ALTER TABLE RA_PROD_STRING_STAT_TYPE ADD CONSTRAINT RA_PSST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSST_PSWA_FK'
ALTER TABLE RA_PROD_STRING_STAT_TYPE ADD CONSTRAINT RA_PSST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSST_R_ART_FK'
ALTER TABLE RA_PROD_STRING_STAT_TYPE ADD CONSTRAINT RA_PSST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSST_R_ATY_FK'
ALTER TABLE RA_PROD_STRING_STAT_TYPE ADD CONSTRAINT RA_PSST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSST_R_LANG_FK'
ALTER TABLE RA_PROD_STRING_STAT_TYPE ADD CONSTRAINT RA_PSST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSST_R_PSST_FK'
ALTER TABLE RA_PROD_STRING_STAT_TYPE ADD CONSTRAINT RA_PSST_R_PSST_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_PROD_STRING_STAT_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSST_SRCD_FK'
ALTER TABLE RA_PROD_STRING_STAT_TYPE ADD CONSTRAINT RA_PSST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PST_BA_FK'
ALTER TABLE RA_PROD_STRING_TYPE ADD CONSTRAINT RA_PST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PST_PSWA_FK'
ALTER TABLE RA_PROD_STRING_TYPE ADD CONSTRAINT RA_PST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PST_R_ART_FK'
ALTER TABLE RA_PROD_STRING_TYPE ADD CONSTRAINT RA_PST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PST_R_ATY_FK'
ALTER TABLE RA_PROD_STRING_TYPE ADD CONSTRAINT RA_PST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PST_R_LANG_FK'
ALTER TABLE RA_PROD_STRING_TYPE ADD CONSTRAINT RA_PST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PST_R_PST_FK'
ALTER TABLE RA_PROD_STRING_TYPE ADD CONSTRAINT RA_PST_R_PST_FK FOREIGN KEY
(
PROD_STRING_TYPE
)
REFERENCES R_PROD_STRING_TYPE
(
PROD_STRING_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PST_SRCD_FK'
ALTER TABLE RA_PROD_STRING_TYPE ADD CONSTRAINT RA_PST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSFS_BA_FK'
ALTER TABLE RA_PROD_STR_FM_STATUS ADD CONSTRAINT RA_PSFS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSFS_PSWA_FK'
ALTER TABLE RA_PROD_STR_FM_STATUS ADD CONSTRAINT RA_PSFS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSFS_R_ART_FK'
ALTER TABLE RA_PROD_STR_FM_STATUS ADD CONSTRAINT RA_PSFS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSFS_R_ATY_FK'
ALTER TABLE RA_PROD_STR_FM_STATUS ADD CONSTRAINT RA_PSFS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSFS_R_LANG_FK'
ALTER TABLE RA_PROD_STR_FM_STATUS ADD CONSTRAINT RA_PSFS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSFS_R_PSFS_FK'
ALTER TABLE RA_PROD_STR_FM_STATUS ADD CONSTRAINT RA_PSFS_R_PSFS_FK FOREIGN KEY
(
STATUS_TYPE,
STATUS
)
REFERENCES R_PROD_STR_FM_STATUS
(
STATUS_TYPE,
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSFS_R_PSFST_FK'
ALTER TABLE RA_PROD_STR_FM_STATUS ADD CONSTRAINT RA_PSFS_R_PSFST_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_PROD_STR_FM_STAT_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSFS_SRCD_FK'
ALTER TABLE RA_PROD_STR_FM_STATUS ADD CONSTRAINT RA_PSFS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSFST_BA_FK'
ALTER TABLE RA_PROD_STR_FM_STAT_TYPE ADD CONSTRAINT RA_PSFST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSFST_PSWA_FK'
ALTER TABLE RA_PROD_STR_FM_STAT_TYPE ADD CONSTRAINT RA_PSFST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSFST_R_ART_FK'
ALTER TABLE RA_PROD_STR_FM_STAT_TYPE ADD CONSTRAINT RA_PSFST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSFST_R_ATY_FK'
ALTER TABLE RA_PROD_STR_FM_STAT_TYPE ADD CONSTRAINT RA_PSFST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSFST_R_LANG_FK'
ALTER TABLE RA_PROD_STR_FM_STAT_TYPE ADD CONSTRAINT RA_PSFST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSFST_R_PSFST_FK'
ALTER TABLE RA_PROD_STR_FM_STAT_TYPE ADD CONSTRAINT RA_PSFST_R_PSFST_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_PROD_STR_FM_STAT_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSFST_SRCD_FK'
ALTER TABLE RA_PROD_STR_FM_STAT_TYPE ADD CONSTRAINT RA_PSFST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT10_BA_FK'
ALTER TABLE RA_PROJECTION_TYPE ADD CONSTRAINT RA_PT10_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT10_PSWA_FK'
ALTER TABLE RA_PROJECTION_TYPE ADD CONSTRAINT RA_PT10_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT10_R_ART_FK'
ALTER TABLE RA_PROJECTION_TYPE ADD CONSTRAINT RA_PT10_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT10_R_ATY_FK'
ALTER TABLE RA_PROJECTION_TYPE ADD CONSTRAINT RA_PT10_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT10_R_LANG_FK'
ALTER TABLE RA_PROJECTION_TYPE ADD CONSTRAINT RA_PT10_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT10_R_PT10_FK'
ALTER TABLE RA_PROJECTION_TYPE ADD CONSTRAINT RA_PT10_R_PT10_FK FOREIGN KEY
(
PROJECTION_TYPE
)
REFERENCES R_PROJECTION_TYPE
(
PROJECTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT10_SRCD_FK'
ALTER TABLE RA_PROJECTION_TYPE ADD CONSTRAINT RA_PT10_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRAT_BA_FK'
ALTER TABLE RA_PROJECT_ALIAS_TYPE ADD CONSTRAINT RA_PRAT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRAT_PSWA_FK'
ALTER TABLE RA_PROJECT_ALIAS_TYPE ADD CONSTRAINT RA_PRAT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRAT_R_ART_FK'
ALTER TABLE RA_PROJECT_ALIAS_TYPE ADD CONSTRAINT RA_PRAT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRAT_R_ATY_FK'
ALTER TABLE RA_PROJECT_ALIAS_TYPE ADD CONSTRAINT RA_PRAT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRAT_R_LANG_FK'
ALTER TABLE RA_PROJECT_ALIAS_TYPE ADD CONSTRAINT RA_PRAT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRAT_R_PRAT_FK'
ALTER TABLE RA_PROJECT_ALIAS_TYPE ADD CONSTRAINT RA_PRAT_R_PRAT_FK FOREIGN KEY
(
PROJ_ALIAS_TYPE
)
REFERENCES R_PROJECT_ALIAS_TYPE
(
PROJ_ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRAT_SRCD_FK'
ALTER TABLE RA_PROJECT_ALIAS_TYPE ADD CONSTRAINT RA_PRAT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PBR_BA_FK'
ALTER TABLE RA_PROJECT_BA_ROLE ADD CONSTRAINT RA_PBR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PBR_PSWA_FK'
ALTER TABLE RA_PROJECT_BA_ROLE ADD CONSTRAINT RA_PBR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PBR_R_ART_FK'
ALTER TABLE RA_PROJECT_BA_ROLE ADD CONSTRAINT RA_PBR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PBR_R_ATY_FK'
ALTER TABLE RA_PROJECT_BA_ROLE ADD CONSTRAINT RA_PBR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PBR_R_LANG_FK'
ALTER TABLE RA_PROJECT_BA_ROLE ADD CONSTRAINT RA_PBR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PBR_R_PBR_FK'
ALTER TABLE RA_PROJECT_BA_ROLE ADD CONSTRAINT RA_PBR_R_PBR_FK FOREIGN KEY
(
ROLE
)
REFERENCES R_PROJECT_BA_ROLE
(
ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PBR_SRCD_FK'
ALTER TABLE RA_PROJECT_BA_ROLE ADD CONSTRAINT RA_PBR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCR_BA_FK'
ALTER TABLE RA_PROJECT_COMP_REASON ADD CONSTRAINT RA_PCR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCR_PSWA_FK'
ALTER TABLE RA_PROJECT_COMP_REASON ADD CONSTRAINT RA_PCR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCR_R_ART_FK'
ALTER TABLE RA_PROJECT_COMP_REASON ADD CONSTRAINT RA_PCR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCR_R_ATY_FK'
ALTER TABLE RA_PROJECT_COMP_REASON ADD CONSTRAINT RA_PCR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCR_R_LANG_FK'
ALTER TABLE RA_PROJECT_COMP_REASON ADD CONSTRAINT RA_PCR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCR_R_PCR_FK'
ALTER TABLE RA_PROJECT_COMP_REASON ADD CONSTRAINT RA_PCR_R_PCR_FK FOREIGN KEY
(
COMPONENT_REASON
)
REFERENCES R_PROJECT_COMP_REASON
(
COMPONENT_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCR_SRCD_FK'
ALTER TABLE RA_PROJECT_COMP_REASON ADD CONSTRAINT RA_PCR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCT_BA_FK'
ALTER TABLE RA_PROJECT_COMP_TYPE ADD CONSTRAINT RA_PCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCT_PSWA_FK'
ALTER TABLE RA_PROJECT_COMP_TYPE ADD CONSTRAINT RA_PCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCT_R_ART_FK'
ALTER TABLE RA_PROJECT_COMP_TYPE ADD CONSTRAINT RA_PCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCT_R_ATY_FK'
ALTER TABLE RA_PROJECT_COMP_TYPE ADD CONSTRAINT RA_PCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCT_R_LANG_FK'
ALTER TABLE RA_PROJECT_COMP_TYPE ADD CONSTRAINT RA_PCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCT_R_PCT_FK'
ALTER TABLE RA_PROJECT_COMP_TYPE ADD CONSTRAINT RA_PCT_R_PCT_FK FOREIGN KEY
(
COMPONENT_TYPE
)
REFERENCES R_PROJECT_COMP_TYPE
(
COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCT_SRCD_FK'
ALTER TABLE RA_PROJECT_COMP_TYPE ADD CONSTRAINT RA_PCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCO_BA_FK'
ALTER TABLE RA_PROJECT_CONDITION ADD CONSTRAINT RA_PCO_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCO_PSWA_FK'
ALTER TABLE RA_PROJECT_CONDITION ADD CONSTRAINT RA_PCO_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCO_R_ART_FK'
ALTER TABLE RA_PROJECT_CONDITION ADD CONSTRAINT RA_PCO_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCO_R_ATY_FK'
ALTER TABLE RA_PROJECT_CONDITION ADD CONSTRAINT RA_PCO_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCO_R_LANG_FK'
ALTER TABLE RA_PROJECT_CONDITION ADD CONSTRAINT RA_PCO_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCO_R_PCO_FK'
ALTER TABLE RA_PROJECT_CONDITION ADD CONSTRAINT RA_PCO_R_PCO_FK FOREIGN KEY
(
PROJECT_TYPE,
CONDITION_TYPE
)
REFERENCES R_PROJECT_CONDITION
(
PROJECT_TYPE,
CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCO_R_PRT1_FK'
ALTER TABLE RA_PROJECT_CONDITION ADD CONSTRAINT RA_PCO_R_PRT1_FK FOREIGN KEY
(
PROJECT_TYPE
)
REFERENCES R_PROJECT_TYPE
(
PROJECT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PCO_SRCD_FK'
ALTER TABLE RA_PROJECT_CONDITION ADD CONSTRAINT RA_PCO_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PER_BA_FK'
ALTER TABLE RA_PROJECT_EQUIP_ROLE ADD CONSTRAINT RA_PER_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PER_PSWA_FK'
ALTER TABLE RA_PROJECT_EQUIP_ROLE ADD CONSTRAINT RA_PER_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PER_R_ART_FK'
ALTER TABLE RA_PROJECT_EQUIP_ROLE ADD CONSTRAINT RA_PER_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PER_R_ATY_FK'
ALTER TABLE RA_PROJECT_EQUIP_ROLE ADD CONSTRAINT RA_PER_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PER_R_LANG_FK'
ALTER TABLE RA_PROJECT_EQUIP_ROLE ADD CONSTRAINT RA_PER_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PER_R_PER_FK'
ALTER TABLE RA_PROJECT_EQUIP_ROLE ADD CONSTRAINT RA_PER_R_PER_FK FOREIGN KEY
(
EQUIP_ROLE
)
REFERENCES R_PROJECT_EQUIP_ROLE
(
EQUIP_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PER_SRCD_FK'
ALTER TABLE RA_PROJECT_EQUIP_ROLE ADD CONSTRAINT RA_PER_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSTA_BA_FK'
ALTER TABLE RA_PROJECT_STATUS ADD CONSTRAINT RA_PSTA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSTA_PSWA_FK'
ALTER TABLE RA_PROJECT_STATUS ADD CONSTRAINT RA_PSTA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSTA_R_ART_FK'
ALTER TABLE RA_PROJECT_STATUS ADD CONSTRAINT RA_PSTA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSTA_R_ATY_FK'
ALTER TABLE RA_PROJECT_STATUS ADD CONSTRAINT RA_PSTA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSTA_R_LANG_FK'
ALTER TABLE RA_PROJECT_STATUS ADD CONSTRAINT RA_PSTA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSTA_R_PSTA_FK'
ALTER TABLE RA_PROJECT_STATUS ADD CONSTRAINT RA_PSTA_R_PSTA_FK FOREIGN KEY
(
STATUS_TYPE,
STATUS
)
REFERENCES R_PROJECT_STATUS
(
STATUS_TYPE,
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSTA_R_PSTT_FK'
ALTER TABLE RA_PROJECT_STATUS ADD CONSTRAINT RA_PSTA_R_PSTT_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_PROJECT_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSTA_SRCD_FK'
ALTER TABLE RA_PROJECT_STATUS ADD CONSTRAINT RA_PSTA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSTT_BA_FK'
ALTER TABLE RA_PROJECT_STATUS_TYPE ADD CONSTRAINT RA_PSTT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSTT_PSWA_FK'
ALTER TABLE RA_PROJECT_STATUS_TYPE ADD CONSTRAINT RA_PSTT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSTT_R_ART_FK'
ALTER TABLE RA_PROJECT_STATUS_TYPE ADD CONSTRAINT RA_PSTT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSTT_R_ATY_FK'
ALTER TABLE RA_PROJECT_STATUS_TYPE ADD CONSTRAINT RA_PSTT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSTT_R_LANG_FK'
ALTER TABLE RA_PROJECT_STATUS_TYPE ADD CONSTRAINT RA_PSTT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSTT_R_PSTT_FK'
ALTER TABLE RA_PROJECT_STATUS_TYPE ADD CONSTRAINT RA_PSTT_R_PSTT_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_PROJECT_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PSTT_SRCD_FK'
ALTER TABLE RA_PROJECT_STATUS_TYPE ADD CONSTRAINT RA_PSTT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRT1_BA_FK'
ALTER TABLE RA_PROJECT_TYPE ADD CONSTRAINT RA_PRT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRT1_PSWA_FK'
ALTER TABLE RA_PROJECT_TYPE ADD CONSTRAINT RA_PRT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRT1_R_ART_FK'
ALTER TABLE RA_PROJECT_TYPE ADD CONSTRAINT RA_PRT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRT1_R_ATY_FK'
ALTER TABLE RA_PROJECT_TYPE ADD CONSTRAINT RA_PRT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRT1_R_LANG_FK'
ALTER TABLE RA_PROJECT_TYPE ADD CONSTRAINT RA_PRT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRT1_R_PRT1_FK'
ALTER TABLE RA_PROJECT_TYPE ADD CONSTRAINT RA_PRT1_R_PRT1_FK FOREIGN KEY
(
PROJECT_TYPE
)
REFERENCES R_PROJECT_TYPE
(
PROJECT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PRT1_SRCD_FK'
ALTER TABLE RA_PROJECT_TYPE ADD CONSTRAINT RA_PRT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PJST_BA_FK'
ALTER TABLE RA_PROJ_STEP_TYPE ADD CONSTRAINT RA_PJST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PJST_PSWA_FK'
ALTER TABLE RA_PROJ_STEP_TYPE ADD CONSTRAINT RA_PJST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PJST_R_ART_FK'
ALTER TABLE RA_PROJ_STEP_TYPE ADD CONSTRAINT RA_PJST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PJST_R_ATY_FK'
ALTER TABLE RA_PROJ_STEP_TYPE ADD CONSTRAINT RA_PJST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PJST_R_LANG_FK'
ALTER TABLE RA_PROJ_STEP_TYPE ADD CONSTRAINT RA_PJST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PJST_R_PJST_FK'
ALTER TABLE RA_PROJ_STEP_TYPE ADD CONSTRAINT RA_PJST_R_PJST_FK FOREIGN KEY
(
STEP_TYPE
)
REFERENCES R_PROJ_STEP_TYPE
(
STEP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PJST_SRCD_FK'
ALTER TABLE RA_PROJ_STEP_TYPE ADD CONSTRAINT RA_PJST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PJSXT_BA_FK'
ALTER TABLE RA_PROJ_STEP_XREF_TYPE ADD CONSTRAINT RA_PJSXT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PJSXT_PSWA_FK'
ALTER TABLE RA_PROJ_STEP_XREF_TYPE ADD CONSTRAINT RA_PJSXT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PJSXT_R_ART_FK'
ALTER TABLE RA_PROJ_STEP_XREF_TYPE ADD CONSTRAINT RA_PJSXT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PJSXT_R_ATY_FK'
ALTER TABLE RA_PROJ_STEP_XREF_TYPE ADD CONSTRAINT RA_PJSXT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PJSXT_R_LANG_FK'
ALTER TABLE RA_PROJ_STEP_XREF_TYPE ADD CONSTRAINT RA_PJSXT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PJSXT_R_PJSXT_FK'
ALTER TABLE RA_PROJ_STEP_XREF_TYPE ADD CONSTRAINT RA_PJSXT_R_PJSXT_FK FOREIGN KEY
(
PROJECT_STEP_XREF_TYPE
)
REFERENCES R_PROJ_STEP_XREF_TYPE
(
PROJECT_STEP_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PJSXT_SRCD_FK'
ALTER TABLE RA_PROJ_STEP_XREF_TYPE ADD CONSTRAINT RA_PJSXT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT11_BA_FK'
ALTER TABLE RA_PROPPANT_TYPE ADD CONSTRAINT RA_PT11_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT11_PSWA_FK'
ALTER TABLE RA_PROPPANT_TYPE ADD CONSTRAINT RA_PT11_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT11_R_ART_FK'
ALTER TABLE RA_PROPPANT_TYPE ADD CONSTRAINT RA_PT11_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT11_R_ATY_FK'
ALTER TABLE RA_PROPPANT_TYPE ADD CONSTRAINT RA_PT11_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT11_R_LANG_FK'
ALTER TABLE RA_PROPPANT_TYPE ADD CONSTRAINT RA_PT11_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT11_R_PT11_FK'
ALTER TABLE RA_PROPPANT_TYPE ADD CONSTRAINT RA_PT11_R_PT11_FK FOREIGN KEY
(
PROPPANT_TYPE
)
REFERENCES R_PROPPANT_TYPE
(
PROPPANT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PT11_SRCD_FK'
ALTER TABLE RA_PROPPANT_TYPE ADD CONSTRAINT RA_PT11_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PN_BA_FK'
ALTER TABLE RA_PUBLICATION_NAME ADD CONSTRAINT RA_PN_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PN_PSWA_FK'
ALTER TABLE RA_PUBLICATION_NAME ADD CONSTRAINT RA_PN_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PN_R_ART_FK'
ALTER TABLE RA_PUBLICATION_NAME ADD CONSTRAINT RA_PN_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PN_R_ATY_FK'
ALTER TABLE RA_PUBLICATION_NAME ADD CONSTRAINT RA_PN_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PN_R_LANG_FK'
ALTER TABLE RA_PUBLICATION_NAME ADD CONSTRAINT RA_PN_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PN_R_PN_FK'
ALTER TABLE RA_PUBLICATION_NAME ADD CONSTRAINT RA_PN_R_PN_FK FOREIGN KEY
(
PUBLICATION
)
REFERENCES R_PUBLICATION_NAME
(
PUBLICATION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_PN_SRCD_FK'
ALTER TABLE RA_PUBLICATION_NAME ADD CONSTRAINT RA_PN_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_QT_BA_FK'
ALTER TABLE RA_QUALIFIER_TYPE ADD CONSTRAINT RA_QT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_QT_PSWA_FK'
ALTER TABLE RA_QUALIFIER_TYPE ADD CONSTRAINT RA_QT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_QT_R_ART_FK'
ALTER TABLE RA_QUALIFIER_TYPE ADD CONSTRAINT RA_QT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_QT_R_ATY_FK'
ALTER TABLE RA_QUALIFIER_TYPE ADD CONSTRAINT RA_QT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_QT_R_LANG_FK'
ALTER TABLE RA_QUALIFIER_TYPE ADD CONSTRAINT RA_QT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_QT_R_QT_FK'
ALTER TABLE RA_QUALIFIER_TYPE ADD CONSTRAINT RA_QT_R_QT_FK FOREIGN KEY
(
QUALIFIER_TYPE
)
REFERENCES R_QUALIFIER_TYPE
(
QUALIFIER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_QT_SRCD_FK'
ALTER TABLE RA_QUALIFIER_TYPE ADD CONSTRAINT RA_QT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_Q_BA_FK'
ALTER TABLE RA_QUALITY ADD CONSTRAINT RA_Q_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_Q_PSWA_FK'
ALTER TABLE RA_QUALITY ADD CONSTRAINT RA_Q_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_Q_R_ART_FK'
ALTER TABLE RA_QUALITY ADD CONSTRAINT RA_Q_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_Q_R_ATY_FK'
ALTER TABLE RA_QUALITY ADD CONSTRAINT RA_Q_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_Q_R_LANG_FK'
ALTER TABLE RA_QUALITY ADD CONSTRAINT RA_Q_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_Q_R_Q_FK'
ALTER TABLE RA_QUALITY ADD CONSTRAINT RA_Q_R_Q_FK FOREIGN KEY
(
QUALITY
)
REFERENCES R_QUALITY
(
QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_Q_SRCD_FK'
ALTER TABLE RA_QUALITY ADD CONSTRAINT RA_Q_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RC1_BA_FK'
ALTER TABLE RA_RATE_CONDITION ADD CONSTRAINT RA_RC1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RC1_PSWA_FK'
ALTER TABLE RA_RATE_CONDITION ADD CONSTRAINT RA_RC1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RC1_R_ART_FK'
ALTER TABLE RA_RATE_CONDITION ADD CONSTRAINT RA_RC1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RC1_R_ATY_FK'
ALTER TABLE RA_RATE_CONDITION ADD CONSTRAINT RA_RC1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RC1_R_LANG_FK'
ALTER TABLE RA_RATE_CONDITION ADD CONSTRAINT RA_RC1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RC1_R_RC1_FK'
ALTER TABLE RA_RATE_CONDITION ADD CONSTRAINT RA_RC1_R_RC1_FK FOREIGN KEY
(
RATE_CONDITION
)
REFERENCES R_RATE_CONDITION
(
RATE_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RC1_SRCD_FK'
ALTER TABLE RA_RATE_CONDITION ADD CONSTRAINT RA_RC1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RSC_BA_FK'
ALTER TABLE RA_RATE_SCHEDULE ADD CONSTRAINT RA_RSC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RSC_PSWA_FK'
ALTER TABLE RA_RATE_SCHEDULE ADD CONSTRAINT RA_RSC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RSC_R_ART_FK'
ALTER TABLE RA_RATE_SCHEDULE ADD CONSTRAINT RA_RSC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RSC_R_ATY_FK'
ALTER TABLE RA_RATE_SCHEDULE ADD CONSTRAINT RA_RSC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RSC_R_LANG_FK'
ALTER TABLE RA_RATE_SCHEDULE ADD CONSTRAINT RA_RSC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RSC_R_RSC_FK'
ALTER TABLE RA_RATE_SCHEDULE ADD CONSTRAINT RA_RSC_R_RSC_FK FOREIGN KEY
(
RATE_SCHEDULE
)
REFERENCES R_RATE_SCHEDULE
(
RATE_SCHEDULE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RSC_SRCD_FK'
ALTER TABLE RA_RATE_SCHEDULE ADD CONSTRAINT RA_RSC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RC2_BA_FK'
ALTER TABLE RA_RATE_SCHEDULE_COMP_TYPE ADD CONSTRAINT RA_RC2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RC2_PSWA_FK'
ALTER TABLE RA_RATE_SCHEDULE_COMP_TYPE ADD CONSTRAINT RA_RC2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RC2_R_ART_FK'
ALTER TABLE RA_RATE_SCHEDULE_COMP_TYPE ADD CONSTRAINT RA_RC2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RC2_R_ATY_FK'
ALTER TABLE RA_RATE_SCHEDULE_COMP_TYPE ADD CONSTRAINT RA_RC2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RC2_R_LANG_FK'
ALTER TABLE RA_RATE_SCHEDULE_COMP_TYPE ADD CONSTRAINT RA_RC2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RC2_R_RC2_FK'
ALTER TABLE RA_RATE_SCHEDULE_COMP_TYPE ADD CONSTRAINT RA_RC2_R_RC2_FK FOREIGN KEY
(
RATE_SCHEDULE_COMPONENT_TYPE
)
REFERENCES R_RATE_SCHEDULE_COMP_TYPE
(
RATE_SCHEDULE_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RC2_SRCD_FK'
ALTER TABLE RA_RATE_SCHEDULE_COMP_TYPE ADD CONSTRAINT RA_RC2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RSX_BA_FK'
ALTER TABLE RA_RATE_SCHED_XREF ADD CONSTRAINT RA_RSX_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RSX_PSWA_FK'
ALTER TABLE RA_RATE_SCHED_XREF ADD CONSTRAINT RA_RSX_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RSX_R_ART_FK'
ALTER TABLE RA_RATE_SCHED_XREF ADD CONSTRAINT RA_RSX_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RSX_R_ATY_FK'
ALTER TABLE RA_RATE_SCHED_XREF ADD CONSTRAINT RA_RSX_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RSX_R_LANG_FK'
ALTER TABLE RA_RATE_SCHED_XREF ADD CONSTRAINT RA_RSX_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RSX_R_RSX_FK'
ALTER TABLE RA_RATE_SCHED_XREF ADD CONSTRAINT RA_RSX_R_RSX_FK FOREIGN KEY
(
RATE_SCHEDULE_XREF_TYPE
)
REFERENCES R_RATE_SCHED_XREF
(
RATE_SCHEDULE_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RSX_SRCD_FK'
ALTER TABLE RA_RATE_SCHED_XREF ADD CONSTRAINT RA_RSX_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RTY_BA_FK'
ALTER TABLE RA_RATE_TYPE ADD CONSTRAINT RA_RTY_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RTY_PSWA_FK'
ALTER TABLE RA_RATE_TYPE ADD CONSTRAINT RA_RTY_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RTY_R_ART_FK'
ALTER TABLE RA_RATE_TYPE ADD CONSTRAINT RA_RTY_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RTY_R_ATY_FK'
ALTER TABLE RA_RATE_TYPE ADD CONSTRAINT RA_RTY_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RTY_R_LANG_FK'
ALTER TABLE RA_RATE_TYPE ADD CONSTRAINT RA_RTY_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RTY_R_RTY_FK'
ALTER TABLE RA_RATE_TYPE ADD CONSTRAINT RA_RTY_R_RTY_FK FOREIGN KEY
(
RATE_TYPE
)
REFERENCES R_RATE_TYPE
(
RATE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RTY_SRCD_FK'
ALTER TABLE RA_RATE_TYPE ADD CONSTRAINT RA_RTY_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCT_BA_FK'
ALTER TABLE RA_RATIO_CURVE_TYPE ADD CONSTRAINT RA_RCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCT_PSWA_FK'
ALTER TABLE RA_RATIO_CURVE_TYPE ADD CONSTRAINT RA_RCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCT_R_ART_FK'
ALTER TABLE RA_RATIO_CURVE_TYPE ADD CONSTRAINT RA_RCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCT_R_ATY_FK'
ALTER TABLE RA_RATIO_CURVE_TYPE ADD CONSTRAINT RA_RCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCT_R_LANG_FK'
ALTER TABLE RA_RATIO_CURVE_TYPE ADD CONSTRAINT RA_RCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCT_R_RCT_FK'
ALTER TABLE RA_RATIO_CURVE_TYPE ADD CONSTRAINT RA_RCT_R_RCT_FK FOREIGN KEY
(
RATIO_CURVE_TYPE
)
REFERENCES R_RATIO_CURVE_TYPE
(
RATIO_CURVE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCT_SRCD_FK'
ALTER TABLE RA_RATIO_CURVE_TYPE ADD CONSTRAINT RA_RCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RFT_BA_FK'
ALTER TABLE RA_RATIO_FLUID_TYPE ADD CONSTRAINT RA_RFT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RFT_PSWA_FK'
ALTER TABLE RA_RATIO_FLUID_TYPE ADD CONSTRAINT RA_RFT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RFT_R_ART_FK'
ALTER TABLE RA_RATIO_FLUID_TYPE ADD CONSTRAINT RA_RFT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RFT_R_ATY_FK'
ALTER TABLE RA_RATIO_FLUID_TYPE ADD CONSTRAINT RA_RFT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RFT_R_LANG_FK'
ALTER TABLE RA_RATIO_FLUID_TYPE ADD CONSTRAINT RA_RFT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RFT_R_RFT_FK'
ALTER TABLE RA_RATIO_FLUID_TYPE ADD CONSTRAINT RA_RFT_R_RFT_FK FOREIGN KEY
(
RATIO_FLUID_TYPE
)
REFERENCES R_RATIO_FLUID_TYPE
(
RATIO_FLUID_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RFT_SRCD_FK'
ALTER TABLE RA_RATIO_FLUID_TYPE ADD CONSTRAINT RA_RFT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RP_BA_FK'
ALTER TABLE RA_RECORDER_POSITION ADD CONSTRAINT RA_RP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RP_PSWA_FK'
ALTER TABLE RA_RECORDER_POSITION ADD CONSTRAINT RA_RP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RP_R_ART_FK'
ALTER TABLE RA_RECORDER_POSITION ADD CONSTRAINT RA_RP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RP_R_ATY_FK'
ALTER TABLE RA_RECORDER_POSITION ADD CONSTRAINT RA_RP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RP_R_LANG_FK'
ALTER TABLE RA_RECORDER_POSITION ADD CONSTRAINT RA_RP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RP_R_RP_FK'
ALTER TABLE RA_RECORDER_POSITION ADD CONSTRAINT RA_RP_R_RP_FK FOREIGN KEY
(
RECORDER_POSITION
)
REFERENCES R_RECORDER_POSITION
(
RECORDER_POSITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RP_SRCD_FK'
ALTER TABLE RA_RECORDER_POSITION ADD CONSTRAINT RA_RP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT1_BA_FK'
ALTER TABLE RA_RECORDER_TYPE ADD CONSTRAINT RA_RT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT1_PSWA_FK'
ALTER TABLE RA_RECORDER_TYPE ADD CONSTRAINT RA_RT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT1_R_ART_FK'
ALTER TABLE RA_RECORDER_TYPE ADD CONSTRAINT RA_RT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT1_R_ATY_FK'
ALTER TABLE RA_RECORDER_TYPE ADD CONSTRAINT RA_RT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT1_R_LANG_FK'
ALTER TABLE RA_RECORDER_TYPE ADD CONSTRAINT RA_RT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT1_R_RT1_FK'
ALTER TABLE RA_RECORDER_TYPE ADD CONSTRAINT RA_RT1_R_RT1_FK FOREIGN KEY
(
RECORDER_TYPE
)
REFERENCES R_RECORDER_TYPE
(
RECORDER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT1_SRCD_FK'
ALTER TABLE RA_RECORDER_TYPE ADD CONSTRAINT RA_RT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT2_BA_FK'
ALTER TABLE RA_REMARK_TYPE ADD CONSTRAINT RA_RT2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT2_PSWA_FK'
ALTER TABLE RA_REMARK_TYPE ADD CONSTRAINT RA_RT2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT2_R_ART_FK'
ALTER TABLE RA_REMARK_TYPE ADD CONSTRAINT RA_RT2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT2_R_ATY_FK'
ALTER TABLE RA_REMARK_TYPE ADD CONSTRAINT RA_RT2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT2_R_LANG_FK'
ALTER TABLE RA_REMARK_TYPE ADD CONSTRAINT RA_RT2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT2_R_RT2_FK'
ALTER TABLE RA_REMARK_TYPE ADD CONSTRAINT RA_RT2_R_RT2_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_REMARK_TYPE
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT2_SRCD_FK'
ALTER TABLE RA_REMARK_TYPE ADD CONSTRAINT RA_RT2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RUT1_BA_FK'
ALTER TABLE RA_REMARK_USE_TYPE ADD CONSTRAINT RA_RUT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RUT1_PSWA_FK'
ALTER TABLE RA_REMARK_USE_TYPE ADD CONSTRAINT RA_RUT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RUT1_R_ART_FK'
ALTER TABLE RA_REMARK_USE_TYPE ADD CONSTRAINT RA_RUT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RUT1_R_ATY_FK'
ALTER TABLE RA_REMARK_USE_TYPE ADD CONSTRAINT RA_RUT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RUT1_R_LANG_FK'
ALTER TABLE RA_REMARK_USE_TYPE ADD CONSTRAINT RA_RUT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RUT1_R_RUT1_FK'
ALTER TABLE RA_REMARK_USE_TYPE ADD CONSTRAINT RA_RUT1_R_RUT1_FK FOREIGN KEY
(
REMARK_USE_TYPE
)
REFERENCES R_REMARK_USE_TYPE
(
REMARK_USE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RUT1_SRCD_FK'
ALTER TABLE RA_REMARK_USE_TYPE ADD CONSTRAINT RA_RUT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RFTY_BA_FK'
ALTER TABLE RA_REPEAT_STRAT_TYPE ADD CONSTRAINT RA_RFTY_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RFTY_PSWA_FK'
ALTER TABLE RA_REPEAT_STRAT_TYPE ADD CONSTRAINT RA_RFTY_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RFTY_R_ART_FK'
ALTER TABLE RA_REPEAT_STRAT_TYPE ADD CONSTRAINT RA_RFTY_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RFTY_R_ATY_FK'
ALTER TABLE RA_REPEAT_STRAT_TYPE ADD CONSTRAINT RA_RFTY_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RFTY_R_LANG_FK'
ALTER TABLE RA_REPEAT_STRAT_TYPE ADD CONSTRAINT RA_RFTY_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RFTY_R_RFTY_FK'
ALTER TABLE RA_REPEAT_STRAT_TYPE ADD CONSTRAINT RA_RFTY_R_RFTY_FK FOREIGN KEY
(
REPEAT_STRAT_TYPE
)
REFERENCES R_REPEAT_STRAT_TYPE
(
REPEAT_STRAT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RFTY_SRCD_FK'
ALTER TABLE RA_REPEAT_STRAT_TYPE ADD CONSTRAINT RA_RFTY_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHC_BA_FK'
ALTER TABLE RA_REPORT_HIER_COMP ADD CONSTRAINT RA_RHC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHC_PSWA_FK'
ALTER TABLE RA_REPORT_HIER_COMP ADD CONSTRAINT RA_RHC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHC_R_ART_FK'
ALTER TABLE RA_REPORT_HIER_COMP ADD CONSTRAINT RA_RHC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHC_R_ATY_FK'
ALTER TABLE RA_REPORT_HIER_COMP ADD CONSTRAINT RA_RHC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHC_R_LANG_FK'
ALTER TABLE RA_REPORT_HIER_COMP ADD CONSTRAINT RA_RHC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHC_R_RHC_FK'
ALTER TABLE RA_REPORT_HIER_COMP ADD CONSTRAINT RA_RHC_R_RHC_FK FOREIGN KEY
(
COMPONENT_TYPE
)
REFERENCES R_REPORT_HIER_COMP
(
COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHC_SRCD_FK'
ALTER TABLE RA_REPORT_HIER_COMP ADD CONSTRAINT RA_RHC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHL_BA_FK'
ALTER TABLE RA_REPORT_HIER_LEVEL ADD CONSTRAINT RA_RHL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHL_PSWA_FK'
ALTER TABLE RA_REPORT_HIER_LEVEL ADD CONSTRAINT RA_RHL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHL_R_ART_FK'
ALTER TABLE RA_REPORT_HIER_LEVEL ADD CONSTRAINT RA_RHL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHL_R_ATY_FK'
ALTER TABLE RA_REPORT_HIER_LEVEL ADD CONSTRAINT RA_RHL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHL_R_LANG_FK'
ALTER TABLE RA_REPORT_HIER_LEVEL ADD CONSTRAINT RA_RHL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHL_R_RHL_FK'
ALTER TABLE RA_REPORT_HIER_LEVEL ADD CONSTRAINT RA_RHL_R_RHL_FK FOREIGN KEY
(
LEVEL_TYPE
)
REFERENCES R_REPORT_HIER_LEVEL
(
LEVEL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHL_SRCD_FK'
ALTER TABLE RA_REPORT_HIER_LEVEL ADD CONSTRAINT RA_RHL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHT_BA_FK'
ALTER TABLE RA_REPORT_HIER_TYPE ADD CONSTRAINT RA_RHT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHT_PSWA_FK'
ALTER TABLE RA_REPORT_HIER_TYPE ADD CONSTRAINT RA_RHT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHT_R_ART_FK'
ALTER TABLE RA_REPORT_HIER_TYPE ADD CONSTRAINT RA_RHT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHT_R_ATY_FK'
ALTER TABLE RA_REPORT_HIER_TYPE ADD CONSTRAINT RA_RHT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHT_R_LANG_FK'
ALTER TABLE RA_REPORT_HIER_TYPE ADD CONSTRAINT RA_RHT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHT_R_RHT_FK'
ALTER TABLE RA_REPORT_HIER_TYPE ADD CONSTRAINT RA_RHT_R_RHT_FK FOREIGN KEY
(
HIERARCHY_TYPE
)
REFERENCES R_REPORT_HIER_TYPE
(
HIERARCHY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHT_SRCD_FK'
ALTER TABLE RA_REPORT_HIER_TYPE ADD CONSTRAINT RA_RHT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHAT_BA_FK'
ALTER TABLE RA_REP_HIER_ALIAS_TYPE ADD CONSTRAINT RA_RHAT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHAT_PSWA_FK'
ALTER TABLE RA_REP_HIER_ALIAS_TYPE ADD CONSTRAINT RA_RHAT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHAT_R_ART_FK'
ALTER TABLE RA_REP_HIER_ALIAS_TYPE ADD CONSTRAINT RA_RHAT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHAT_R_ATY_FK'
ALTER TABLE RA_REP_HIER_ALIAS_TYPE ADD CONSTRAINT RA_RHAT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHAT_R_LANG_FK'
ALTER TABLE RA_REP_HIER_ALIAS_TYPE ADD CONSTRAINT RA_RHAT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHAT_R_RHAT_FK'
ALTER TABLE RA_REP_HIER_ALIAS_TYPE ADD CONSTRAINT RA_RHAT_R_RHAT_FK FOREIGN KEY
(
REP_HIER_ALIAS_TYPE
)
REFERENCES R_REP_HIER_ALIAS_TYPE
(
REP_HIER_ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RHAT_SRCD_FK'
ALTER TABLE RA_REP_HIER_ALIAS_TYPE ADD CONSTRAINT RA_RHAT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCMPT_BA_FK'
ALTER TABLE RA_RESENT_COMP_TYPE ADD CONSTRAINT RA_RCMPT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCMPT_PSWA_FK'
ALTER TABLE RA_RESENT_COMP_TYPE ADD CONSTRAINT RA_RCMPT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCMPT_R_ART_FK'
ALTER TABLE RA_RESENT_COMP_TYPE ADD CONSTRAINT RA_RCMPT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCMPT_R_ATY_FK'
ALTER TABLE RA_RESENT_COMP_TYPE ADD CONSTRAINT RA_RCMPT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCMPT_R_LANG_FK'
ALTER TABLE RA_RESENT_COMP_TYPE ADD CONSTRAINT RA_RCMPT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCMPT_R_RCMPT_FK'
ALTER TABLE RA_RESENT_COMP_TYPE ADD CONSTRAINT RA_RCMPT_R_RCMPT_FK FOREIGN KEY
(
RESENT_COMPONENT_TYPE
)
REFERENCES R_RESENT_COMP_TYPE
(
RESENT_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCMPT_SRCD_FK'
ALTER TABLE RA_RESENT_COMP_TYPE ADD CONSTRAINT RA_RCMPT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCO_BA_FK'
ALTER TABLE RA_RESENT_CONFIDENCE ADD CONSTRAINT RA_RCO_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCO_PSWA_FK'
ALTER TABLE RA_RESENT_CONFIDENCE ADD CONSTRAINT RA_RCO_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCO_R_ART_FK'
ALTER TABLE RA_RESENT_CONFIDENCE ADD CONSTRAINT RA_RCO_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCO_R_ATY_FK'
ALTER TABLE RA_RESENT_CONFIDENCE ADD CONSTRAINT RA_RCO_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCO_R_LANG_FK'
ALTER TABLE RA_RESENT_CONFIDENCE ADD CONSTRAINT RA_RCO_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCO_R_RCO_FK'
ALTER TABLE RA_RESENT_CONFIDENCE ADD CONSTRAINT RA_RCO_R_RCO_FK FOREIGN KEY
(
CONFIDENCE_TYPE
)
REFERENCES R_RESENT_CONFIDENCE
(
CONFIDENCE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCO_SRCD_FK'
ALTER TABLE RA_RESENT_CONFIDENCE ADD CONSTRAINT RA_RCO_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RGT_BA_FK'
ALTER TABLE RA_RESENT_GROUP_TYPE ADD CONSTRAINT RA_RGT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RGT_PSWA_FK'
ALTER TABLE RA_RESENT_GROUP_TYPE ADD CONSTRAINT RA_RGT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RGT_R_ART_FK'
ALTER TABLE RA_RESENT_GROUP_TYPE ADD CONSTRAINT RA_RGT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RGT_R_ATY_FK'
ALTER TABLE RA_RESENT_GROUP_TYPE ADD CONSTRAINT RA_RGT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RGT_R_LANG_FK'
ALTER TABLE RA_RESENT_GROUP_TYPE ADD CONSTRAINT RA_RGT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RGT_R_RGT_FK'
ALTER TABLE RA_RESENT_GROUP_TYPE ADD CONSTRAINT RA_RGT_R_RGT_FK FOREIGN KEY
(
GROUP_TYPE
)
REFERENCES R_RESENT_GROUP_TYPE
(
GROUP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RGT_SRCD_FK'
ALTER TABLE RA_RESENT_GROUP_TYPE ADD CONSTRAINT RA_RGT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RRC_BA_FK'
ALTER TABLE RA_RESENT_REV_CAT ADD CONSTRAINT RA_RRC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RRC_PSWA_FK'
ALTER TABLE RA_RESENT_REV_CAT ADD CONSTRAINT RA_RRC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RRC_R_ART_FK'
ALTER TABLE RA_RESENT_REV_CAT ADD CONSTRAINT RA_RRC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RRC_R_ATY_FK'
ALTER TABLE RA_RESENT_REV_CAT ADD CONSTRAINT RA_RRC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RRC_R_LANG_FK'
ALTER TABLE RA_RESENT_REV_CAT ADD CONSTRAINT RA_RRC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RRC_R_RRC_FK'
ALTER TABLE RA_RESENT_REV_CAT ADD CONSTRAINT RA_RRC_R_RRC_FK FOREIGN KEY
(
CATEGORY_TYPE
)
REFERENCES R_RESENT_REV_CAT
(
CATEGORY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RRC_SRCD_FK'
ALTER TABLE RA_RESENT_REV_CAT ADD CONSTRAINT RA_RRC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RUT_BA_FK'
ALTER TABLE RA_RESENT_USE_TYPE ADD CONSTRAINT RA_RUT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RUT_PSWA_FK'
ALTER TABLE RA_RESENT_USE_TYPE ADD CONSTRAINT RA_RUT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RUT_R_ART_FK'
ALTER TABLE RA_RESENT_USE_TYPE ADD CONSTRAINT RA_RUT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RUT_R_ATY_FK'
ALTER TABLE RA_RESENT_USE_TYPE ADD CONSTRAINT RA_RUT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RUT_R_LANG_FK'
ALTER TABLE RA_RESENT_USE_TYPE ADD CONSTRAINT RA_RUT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RUT_R_RUT_FK'
ALTER TABLE RA_RESENT_USE_TYPE ADD CONSTRAINT RA_RUT_R_RUT_FK FOREIGN KEY
(
USE_TYPE
)
REFERENCES R_RESENT_USE_TYPE
(
USE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RUT_SRCD_FK'
ALTER TABLE RA_RESENT_USE_TYPE ADD CONSTRAINT RA_RUT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RVM_BA_FK'
ALTER TABLE RA_RESENT_VOL_METHOD ADD CONSTRAINT RA_RVM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RVM_PSWA_FK'
ALTER TABLE RA_RESENT_VOL_METHOD ADD CONSTRAINT RA_RVM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RVM_R_ART_FK'
ALTER TABLE RA_RESENT_VOL_METHOD ADD CONSTRAINT RA_RVM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RVM_R_ATY_FK'
ALTER TABLE RA_RESENT_VOL_METHOD ADD CONSTRAINT RA_RVM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RVM_R_LANG_FK'
ALTER TABLE RA_RESENT_VOL_METHOD ADD CONSTRAINT RA_RVM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RVM_R_RVM_FK'
ALTER TABLE RA_RESENT_VOL_METHOD ADD CONSTRAINT RA_RVM_R_RVM_FK FOREIGN KEY
(
VOLUME_METHOD
)
REFERENCES R_RESENT_VOL_METHOD
(
VOLUME_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RVM_SRCD_FK'
ALTER TABLE RA_RESENT_VOL_METHOD ADD CONSTRAINT RA_RVM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RXT_BA_FK'
ALTER TABLE RA_RESENT_XREF_TYPE ADD CONSTRAINT RA_RXT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RXT_PSWA_FK'
ALTER TABLE RA_RESENT_XREF_TYPE ADD CONSTRAINT RA_RXT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RXT_R_ART_FK'
ALTER TABLE RA_RESENT_XREF_TYPE ADD CONSTRAINT RA_RXT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RXT_R_ATY_FK'
ALTER TABLE RA_RESENT_XREF_TYPE ADD CONSTRAINT RA_RXT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RXT_R_LANG_FK'
ALTER TABLE RA_RESENT_XREF_TYPE ADD CONSTRAINT RA_RXT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RXT_R_RXT_FK'
ALTER TABLE RA_RESENT_XREF_TYPE ADD CONSTRAINT RA_RXT_R_RXT_FK FOREIGN KEY
(
XREF_TYPE
)
REFERENCES R_RESENT_XREF_TYPE
(
XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RXT_SRCD_FK'
ALTER TABLE RA_RESENT_XREF_TYPE ADD CONSTRAINT RA_RXT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RA_BA_FK'
ALTER TABLE RA_REST_ACTIVITY ADD CONSTRAINT RA_RA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RA_PSWA_FK'
ALTER TABLE RA_REST_ACTIVITY ADD CONSTRAINT RA_RA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RA_R_ART_FK'
ALTER TABLE RA_REST_ACTIVITY ADD CONSTRAINT RA_RA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RA_R_ATY_FK'
ALTER TABLE RA_REST_ACTIVITY ADD CONSTRAINT RA_RA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RA_R_LANG_FK'
ALTER TABLE RA_REST_ACTIVITY ADD CONSTRAINT RA_RA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RA_R_RA_FK'
ALTER TABLE RA_REST_ACTIVITY ADD CONSTRAINT RA_RA_R_RA_FK FOREIGN KEY
(
RESTRICTED_ACTIVITY
)
REFERENCES R_REST_ACTIVITY
(
RESTRICTED_ACTIVITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RA_SRCD_FK'
ALTER TABLE RA_REST_ACTIVITY ADD CONSTRAINT RA_RA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RD_BA_FK'
ALTER TABLE RA_REST_DURATION ADD CONSTRAINT RA_RD_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RD_PSWA_FK'
ALTER TABLE RA_REST_DURATION ADD CONSTRAINT RA_RD_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RD_R_ART_FK'
ALTER TABLE RA_REST_DURATION ADD CONSTRAINT RA_RD_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RD_R_ATY_FK'
ALTER TABLE RA_REST_DURATION ADD CONSTRAINT RA_RD_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RD_R_LANG_FK'
ALTER TABLE RA_REST_DURATION ADD CONSTRAINT RA_RD_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RD_R_RD_FK'
ALTER TABLE RA_REST_DURATION ADD CONSTRAINT RA_RD_R_RD_FK FOREIGN KEY
(
REST_DURATION_TYPE
)
REFERENCES R_REST_DURATION
(
REST_DURATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RD_SRCD_FK'
ALTER TABLE RA_REST_DURATION ADD CONSTRAINT RA_RD_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RR_BA_FK'
ALTER TABLE RA_REST_REMARK ADD CONSTRAINT RA_RR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RR_PSWA_FK'
ALTER TABLE RA_REST_REMARK ADD CONSTRAINT RA_RR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RR_R_ART_FK'
ALTER TABLE RA_REST_REMARK ADD CONSTRAINT RA_RR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RR_R_ATY_FK'
ALTER TABLE RA_REST_REMARK ADD CONSTRAINT RA_RR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RR_R_LANG_FK'
ALTER TABLE RA_REST_REMARK ADD CONSTRAINT RA_RR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RR_R_RR_FK'
ALTER TABLE RA_REST_REMARK ADD CONSTRAINT RA_RR_R_RR_FK FOREIGN KEY
(
RESTRICTION_REMARK_TYPE
)
REFERENCES R_REST_REMARK
(
RESTRICTION_REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RR_SRCD_FK'
ALTER TABLE RA_REST_REMARK ADD CONSTRAINT RA_RR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT3_BA_FK'
ALTER TABLE RA_REST_TYPE ADD CONSTRAINT RA_RT3_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT3_PSWA_FK'
ALTER TABLE RA_REST_TYPE ADD CONSTRAINT RA_RT3_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT3_R_ART_FK'
ALTER TABLE RA_REST_TYPE ADD CONSTRAINT RA_RT3_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT3_R_ATY_FK'
ALTER TABLE RA_REST_TYPE ADD CONSTRAINT RA_RT3_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT3_R_LANG_FK'
ALTER TABLE RA_REST_TYPE ADD CONSTRAINT RA_RT3_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT3_R_RT3_FK'
ALTER TABLE RA_REST_TYPE ADD CONSTRAINT RA_RT3_R_RT3_FK FOREIGN KEY
(
RESTRICTION_TYPE
)
REFERENCES R_REST_TYPE
(
RESTRICTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT3_SRCD_FK'
ALTER TABLE RA_REST_TYPE ADD CONSTRAINT RA_RT3_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RP1_BA_FK'
ALTER TABLE RA_RETENTION_PERIOD ADD CONSTRAINT RA_RP1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RP1_PSWA_FK'
ALTER TABLE RA_RETENTION_PERIOD ADD CONSTRAINT RA_RP1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RP1_R_ART_FK'
ALTER TABLE RA_RETENTION_PERIOD ADD CONSTRAINT RA_RP1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RP1_R_ATY_FK'
ALTER TABLE RA_RETENTION_PERIOD ADD CONSTRAINT RA_RP1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RP1_R_LANG_FK'
ALTER TABLE RA_RETENTION_PERIOD ADD CONSTRAINT RA_RP1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RP1_R_RP1_FK'
ALTER TABLE RA_RETENTION_PERIOD ADD CONSTRAINT RA_RP1_R_RP1_FK FOREIGN KEY
(
RETENTION_PERIOD
)
REFERENCES R_RETENTION_PERIOD
(
RETENTION_PERIOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RP1_SRCD_FK'
ALTER TABLE RA_RETENTION_PERIOD ADD CONSTRAINT RA_RP1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RM_BA_FK'
ALTER TABLE RA_REVISION_METHOD ADD CONSTRAINT RA_RM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RM_PSWA_FK'
ALTER TABLE RA_REVISION_METHOD ADD CONSTRAINT RA_RM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RM_R_ART_FK'
ALTER TABLE RA_REVISION_METHOD ADD CONSTRAINT RA_RM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RM_R_ATY_FK'
ALTER TABLE RA_REVISION_METHOD ADD CONSTRAINT RA_RM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RM_R_LANG_FK'
ALTER TABLE RA_REVISION_METHOD ADD CONSTRAINT RA_RM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RM_R_RM_FK'
ALTER TABLE RA_REVISION_METHOD ADD CONSTRAINT RA_RM_R_RM_FK FOREIGN KEY
(
REVISION_METHOD
)
REFERENCES R_REVISION_METHOD
(
REVISION_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RM_SRCD_FK'
ALTER TABLE RA_REVISION_METHOD ADD CONSTRAINT RA_RM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RBOP_BA_FK'
ALTER TABLE RA_RIG_BLOWOUT_PREVENTER ADD CONSTRAINT RA_RBOP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RBOP_PSWA_FK'
ALTER TABLE RA_RIG_BLOWOUT_PREVENTER ADD CONSTRAINT RA_RBOP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RBOP_R_ART_FK'
ALTER TABLE RA_RIG_BLOWOUT_PREVENTER ADD CONSTRAINT RA_RBOP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RBOP_R_ATY_FK'
ALTER TABLE RA_RIG_BLOWOUT_PREVENTER ADD CONSTRAINT RA_RBOP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RBOP_R_LANG_FK'
ALTER TABLE RA_RIG_BLOWOUT_PREVENTER ADD CONSTRAINT RA_RBOP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RBOP_R_RBOP_FK'
ALTER TABLE RA_RIG_BLOWOUT_PREVENTER ADD CONSTRAINT RA_RBOP_R_RBOP_FK FOREIGN KEY
(
BLOWOUT_PREVENTER_TYPE
)
REFERENCES R_RIG_BLOWOUT_PREVENTER
(
BLOWOUT_PREVENTER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RBOP_SRCD_FK'
ALTER TABLE RA_RIG_BLOWOUT_PREVENTER ADD CONSTRAINT RA_RBOP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RIGC_BA_FK'
ALTER TABLE RA_RIG_CATEGORY ADD CONSTRAINT RA_RIGC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RIGC_PSWA_FK'
ALTER TABLE RA_RIG_CATEGORY ADD CONSTRAINT RA_RIGC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RIGC_R_ART_FK'
ALTER TABLE RA_RIG_CATEGORY ADD CONSTRAINT RA_RIGC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RIGC_R_ATY_FK'
ALTER TABLE RA_RIG_CATEGORY ADD CONSTRAINT RA_RIGC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RIGC_R_LANG_FK'
ALTER TABLE RA_RIG_CATEGORY ADD CONSTRAINT RA_RIGC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RIGC_R_RIGC_FK'
ALTER TABLE RA_RIG_CATEGORY ADD CONSTRAINT RA_RIGC_R_RIGC_FK FOREIGN KEY
(
RIG_CATEGORY
)
REFERENCES R_RIG_CATEGORY
(
RIG_CATEGORY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RIGC_SRCD_FK'
ALTER TABLE RA_RIG_CATEGORY ADD CONSTRAINT RA_RIGC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCL_BA_FK'
ALTER TABLE RA_RIG_CLASS ADD CONSTRAINT RA_RCL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCL_PSWA_FK'
ALTER TABLE RA_RIG_CLASS ADD CONSTRAINT RA_RCL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCL_R_ART_FK'
ALTER TABLE RA_RIG_CLASS ADD CONSTRAINT RA_RCL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCL_R_ATY_FK'
ALTER TABLE RA_RIG_CLASS ADD CONSTRAINT RA_RCL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCL_R_LANG_FK'
ALTER TABLE RA_RIG_CLASS ADD CONSTRAINT RA_RCL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCL_R_RCL_FK'
ALTER TABLE RA_RIG_CLASS ADD CONSTRAINT RA_RCL_R_RCL_FK FOREIGN KEY
(
RIG_CLASS
)
REFERENCES R_RIG_CLASS
(
RIG_CLASS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCL_SRCD_FK'
ALTER TABLE RA_RIG_CLASS ADD CONSTRAINT RA_RCL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RC_BA_FK'
ALTER TABLE RA_RIG_CODE ADD CONSTRAINT RA_RC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RC_PSWA_FK'
ALTER TABLE RA_RIG_CODE ADD CONSTRAINT RA_RC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RC_R_ART_FK'
ALTER TABLE RA_RIG_CODE ADD CONSTRAINT RA_RC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RC_R_ATY_FK'
ALTER TABLE RA_RIG_CODE ADD CONSTRAINT RA_RC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RC_R_LANG_FK'
ALTER TABLE RA_RIG_CODE ADD CONSTRAINT RA_RC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RC_R_RC_FK'
ALTER TABLE RA_RIG_CODE ADD CONSTRAINT RA_RC_R_RC_FK FOREIGN KEY
(
RIG_CODE
)
REFERENCES R_RIG_CODE
(
RIG_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RC_SRCD_FK'
ALTER TABLE RA_RIG_CODE ADD CONSTRAINT RA_RC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDST_BA_FK'
ALTER TABLE RA_RIG_DESANDER_TYPE ADD CONSTRAINT RA_RDST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDST_PSWA_FK'
ALTER TABLE RA_RIG_DESANDER_TYPE ADD CONSTRAINT RA_RDST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDST_R_ART_FK'
ALTER TABLE RA_RIG_DESANDER_TYPE ADD CONSTRAINT RA_RDST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDST_R_ATY_FK'
ALTER TABLE RA_RIG_DESANDER_TYPE ADD CONSTRAINT RA_RDST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDST_R_LANG_FK'
ALTER TABLE RA_RIG_DESANDER_TYPE ADD CONSTRAINT RA_RDST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDST_R_RDST_FK'
ALTER TABLE RA_RIG_DESANDER_TYPE ADD CONSTRAINT RA_RDST_R_RDST_FK FOREIGN KEY
(
DESANDER_TYPE
)
REFERENCES R_RIG_DESANDER_TYPE
(
DESANDER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDST_SRCD_FK'
ALTER TABLE RA_RIG_DESANDER_TYPE ADD CONSTRAINT RA_RDST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDT_BA_FK'
ALTER TABLE RA_RIG_DESILTER_TYPE ADD CONSTRAINT RA_RDT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDT_PSWA_FK'
ALTER TABLE RA_RIG_DESILTER_TYPE ADD CONSTRAINT RA_RDT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDT_R_ART_FK'
ALTER TABLE RA_RIG_DESILTER_TYPE ADD CONSTRAINT RA_RDT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDT_R_ATY_FK'
ALTER TABLE RA_RIG_DESILTER_TYPE ADD CONSTRAINT RA_RDT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDT_R_LANG_FK'
ALTER TABLE RA_RIG_DESILTER_TYPE ADD CONSTRAINT RA_RDT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDT_R_RDT_FK'
ALTER TABLE RA_RIG_DESILTER_TYPE ADD CONSTRAINT RA_RDT_R_RDT_FK FOREIGN KEY
(
DESILTER_TYPE
)
REFERENCES R_RIG_DESILTER_TYPE
(
DESILTER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDT_SRCD_FK'
ALTER TABLE RA_RIG_DESILTER_TYPE ADD CONSTRAINT RA_RDT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDW_BA_FK'
ALTER TABLE RA_RIG_DRAWWORKS ADD CONSTRAINT RA_RDW_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDW_PSWA_FK'
ALTER TABLE RA_RIG_DRAWWORKS ADD CONSTRAINT RA_RDW_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDW_R_ART_FK'
ALTER TABLE RA_RIG_DRAWWORKS ADD CONSTRAINT RA_RDW_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDW_R_ATY_FK'
ALTER TABLE RA_RIG_DRAWWORKS ADD CONSTRAINT RA_RDW_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDW_R_LANG_FK'
ALTER TABLE RA_RIG_DRAWWORKS ADD CONSTRAINT RA_RDW_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDW_R_RDW_FK'
ALTER TABLE RA_RIG_DRAWWORKS ADD CONSTRAINT RA_RDW_R_RDW_FK FOREIGN KEY
(
DRAWWORKS_TYPE
)
REFERENCES R_RIG_DRAWWORKS
(
DRAWWORKS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDW_SRCD_FK'
ALTER TABLE RA_RIG_DRAWWORKS ADD CONSTRAINT RA_RDW_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RGT1_BA_FK'
ALTER TABLE RA_RIG_GENERATOR_TYPE ADD CONSTRAINT RA_RGT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RGT1_PSWA_FK'
ALTER TABLE RA_RIG_GENERATOR_TYPE ADD CONSTRAINT RA_RGT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RGT1_R_ART_FK'
ALTER TABLE RA_RIG_GENERATOR_TYPE ADD CONSTRAINT RA_RGT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RGT1_R_ATY_FK'
ALTER TABLE RA_RIG_GENERATOR_TYPE ADD CONSTRAINT RA_RGT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RGT1_R_LANG_FK'
ALTER TABLE RA_RIG_GENERATOR_TYPE ADD CONSTRAINT RA_RGT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RGT1_R_RGT1_FK'
ALTER TABLE RA_RIG_GENERATOR_TYPE ADD CONSTRAINT RA_RGT1_R_RGT1_FK FOREIGN KEY
(
PLANT_TYPE
)
REFERENCES R_RIG_GENERATOR_TYPE
(
PLANT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RGT1_SRCD_FK'
ALTER TABLE RA_RIG_GENERATOR_TYPE ADD CONSTRAINT RA_RGT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HBT_BA_FK'
ALTER TABLE RA_RIG_HOOKBLOCK_TYPE ADD CONSTRAINT RA_HBT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HBT_PSWA_FK'
ALTER TABLE RA_RIG_HOOKBLOCK_TYPE ADD CONSTRAINT RA_HBT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HBT_R_ART_FK'
ALTER TABLE RA_RIG_HOOKBLOCK_TYPE ADD CONSTRAINT RA_HBT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HBT_R_ATY_FK'
ALTER TABLE RA_RIG_HOOKBLOCK_TYPE ADD CONSTRAINT RA_HBT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HBT_R_LANG_FK'
ALTER TABLE RA_RIG_HOOKBLOCK_TYPE ADD CONSTRAINT RA_HBT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HBT_R_HBT_FK'
ALTER TABLE RA_RIG_HOOKBLOCK_TYPE ADD CONSTRAINT RA_HBT_R_HBT_FK FOREIGN KEY
(
HOOKBLOCK_TYPE
)
REFERENCES R_RIG_HOOKBLOCK_TYPE
(
HOOKBLOCK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_HBT_SRCD_FK'
ALTER TABLE RA_RIG_HOOKBLOCK_TYPE ADD CONSTRAINT RA_HBT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMT_BA_FK'
ALTER TABLE RA_RIG_MAST ADD CONSTRAINT RA_RMT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMT_PSWA_FK'
ALTER TABLE RA_RIG_MAST ADD CONSTRAINT RA_RMT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMT_R_ART_FK'
ALTER TABLE RA_RIG_MAST ADD CONSTRAINT RA_RMT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMT_R_ATY_FK'
ALTER TABLE RA_RIG_MAST ADD CONSTRAINT RA_RMT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMT_R_LANG_FK'
ALTER TABLE RA_RIG_MAST ADD CONSTRAINT RA_RMT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMT_R_RMT_FK'
ALTER TABLE RA_RIG_MAST ADD CONSTRAINT RA_RMT_R_RMT_FK FOREIGN KEY
(
MAST_TYPE
)
REFERENCES R_RIG_MAST
(
MAST_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMT_SRCD_FK'
ALTER TABLE RA_RIG_MAST ADD CONSTRAINT RA_RMT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ROCT_BA_FK'
ALTER TABLE RA_RIG_OVERHEAD_CAPACITY ADD CONSTRAINT RA_ROCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ROCT_PSWA_FK'
ALTER TABLE RA_RIG_OVERHEAD_CAPACITY ADD CONSTRAINT RA_ROCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ROCT_R_ART_FK'
ALTER TABLE RA_RIG_OVERHEAD_CAPACITY ADD CONSTRAINT RA_ROCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ROCT_R_ATY_FK'
ALTER TABLE RA_RIG_OVERHEAD_CAPACITY ADD CONSTRAINT RA_ROCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ROCT_R_LANG_FK'
ALTER TABLE RA_RIG_OVERHEAD_CAPACITY ADD CONSTRAINT RA_ROCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ROCT_R_ROCT_FK'
ALTER TABLE RA_RIG_OVERHEAD_CAPACITY ADD CONSTRAINT RA_ROCT_R_ROCT_FK FOREIGN KEY
(
CAPACITY_TYPE
)
REFERENCES R_RIG_OVERHEAD_CAPACITY
(
CAPACITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ROCT_SRCD_FK'
ALTER TABLE RA_RIG_OVERHEAD_CAPACITY ADD CONSTRAINT RA_ROCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ROT_BA_FK'
ALTER TABLE RA_RIG_OVERHEAD_TYPE ADD CONSTRAINT RA_ROT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ROT_PSWA_FK'
ALTER TABLE RA_RIG_OVERHEAD_TYPE ADD CONSTRAINT RA_ROT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ROT_R_ART_FK'
ALTER TABLE RA_RIG_OVERHEAD_TYPE ADD CONSTRAINT RA_ROT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ROT_R_ATY_FK'
ALTER TABLE RA_RIG_OVERHEAD_TYPE ADD CONSTRAINT RA_ROT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ROT_R_LANG_FK'
ALTER TABLE RA_RIG_OVERHEAD_TYPE ADD CONSTRAINT RA_ROT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ROT_R_ROT_FK'
ALTER TABLE RA_RIG_OVERHEAD_TYPE ADD CONSTRAINT RA_ROT_R_ROT_FK FOREIGN KEY
(
OVERHEAD_EQUIP_TYPE
)
REFERENCES R_RIG_OVERHEAD_TYPE
(
OVERHEAD_EQUIP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ROT_SRCD_FK'
ALTER TABLE RA_RIG_OVERHEAD_TYPE ADD CONSTRAINT RA_ROT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RPU_BA_FK'
ALTER TABLE RA_RIG_PUMP ADD CONSTRAINT RA_RPU_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RPU_PSWA_FK'
ALTER TABLE RA_RIG_PUMP ADD CONSTRAINT RA_RPU_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RPU_R_ART_FK'
ALTER TABLE RA_RIG_PUMP ADD CONSTRAINT RA_RPU_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RPU_R_ATY_FK'
ALTER TABLE RA_RIG_PUMP ADD CONSTRAINT RA_RPU_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RPU_R_LANG_FK'
ALTER TABLE RA_RIG_PUMP ADD CONSTRAINT RA_RPU_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RPU_R_RPU_FK'
ALTER TABLE RA_RIG_PUMP ADD CONSTRAINT RA_RPU_R_RPU_FK FOREIGN KEY
(
PUMP_TYPE
)
REFERENCES R_RIG_PUMP
(
PUMP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RPU_SRCD_FK'
ALTER TABLE RA_RIG_PUMP ADD CONSTRAINT RA_RPU_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RPF_BA_FK'
ALTER TABLE RA_RIG_PUMP_FUNCTION ADD CONSTRAINT RA_RPF_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RPF_PSWA_FK'
ALTER TABLE RA_RIG_PUMP_FUNCTION ADD CONSTRAINT RA_RPF_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RPF_R_ART_FK'
ALTER TABLE RA_RIG_PUMP_FUNCTION ADD CONSTRAINT RA_RPF_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RPF_R_ATY_FK'
ALTER TABLE RA_RIG_PUMP_FUNCTION ADD CONSTRAINT RA_RPF_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RPF_R_LANG_FK'
ALTER TABLE RA_RIG_PUMP_FUNCTION ADD CONSTRAINT RA_RPF_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RPF_R_RPF_FK'
ALTER TABLE RA_RIG_PUMP_FUNCTION ADD CONSTRAINT RA_RPF_R_RPF_FK FOREIGN KEY
(
PUMP_FUNCTION
)
REFERENCES R_RIG_PUMP_FUNCTION
(
PUMP_FUNCTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RPF_SRCD_FK'
ALTER TABLE RA_RIG_PUMP_FUNCTION ADD CONSTRAINT RA_RPF_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RSST_BA_FK'
ALTER TABLE RA_RIG_SUBSTRUCTURE ADD CONSTRAINT RA_RSST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RSST_PSWA_FK'
ALTER TABLE RA_RIG_SUBSTRUCTURE ADD CONSTRAINT RA_RSST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RSST_R_ART_FK'
ALTER TABLE RA_RIG_SUBSTRUCTURE ADD CONSTRAINT RA_RSST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RSST_R_ATY_FK'
ALTER TABLE RA_RIG_SUBSTRUCTURE ADD CONSTRAINT RA_RSST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RSST_R_LANG_FK'
ALTER TABLE RA_RIG_SUBSTRUCTURE ADD CONSTRAINT RA_RSST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RSST_R_RSST_FK'
ALTER TABLE RA_RIG_SUBSTRUCTURE ADD CONSTRAINT RA_RSST_R_RSST_FK FOREIGN KEY
(
SUBSTRUCTURE_TYPE
)
REFERENCES R_RIG_SUBSTRUCTURE
(
SUBSTRUCTURE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RSST_SRCD_FK'
ALTER TABLE RA_RIG_SUBSTRUCTURE ADD CONSTRAINT RA_RSST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RST_BA_FK'
ALTER TABLE RA_RIG_SWIVEL_TYPE ADD CONSTRAINT RA_RST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RST_PSWA_FK'
ALTER TABLE RA_RIG_SWIVEL_TYPE ADD CONSTRAINT RA_RST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RST_R_ART_FK'
ALTER TABLE RA_RIG_SWIVEL_TYPE ADD CONSTRAINT RA_RST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RST_R_ATY_FK'
ALTER TABLE RA_RIG_SWIVEL_TYPE ADD CONSTRAINT RA_RST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RST_R_LANG_FK'
ALTER TABLE RA_RIG_SWIVEL_TYPE ADD CONSTRAINT RA_RST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RST_R_RST_FK'
ALTER TABLE RA_RIG_SWIVEL_TYPE ADD CONSTRAINT RA_RST_R_RST_FK FOREIGN KEY
(
SWIVEL_TYPE
)
REFERENCES R_RIG_SWIVEL_TYPE
(
SWIVEL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RST_SRCD_FK'
ALTER TABLE RA_RIG_SWIVEL_TYPE ADD CONSTRAINT RA_RST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT4_BA_FK'
ALTER TABLE RA_RIG_TYPE ADD CONSTRAINT RA_RT4_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT4_PSWA_FK'
ALTER TABLE RA_RIG_TYPE ADD CONSTRAINT RA_RT4_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT4_R_ART_FK'
ALTER TABLE RA_RIG_TYPE ADD CONSTRAINT RA_RT4_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT4_R_ATY_FK'
ALTER TABLE RA_RIG_TYPE ADD CONSTRAINT RA_RT4_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT4_R_LANG_FK'
ALTER TABLE RA_RIG_TYPE ADD CONSTRAINT RA_RT4_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT4_R_RT4_FK'
ALTER TABLE RA_RIG_TYPE ADD CONSTRAINT RA_RT4_R_RT4_FK FOREIGN KEY
(
RIG_TYPE
)
REFERENCES R_RIG_TYPE
(
RIG_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT4_SRCD_FK'
ALTER TABLE RA_RIG_TYPE ADD CONSTRAINT RA_RT4_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIICT_BA_FK'
ALTER TABLE RA_RMII_CONTACT_TYPE ADD CONSTRAINT RA_RMIICT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIICT_PSWA_FK'
ALTER TABLE RA_RMII_CONTACT_TYPE ADD CONSTRAINT RA_RMIICT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIICT_R_ART_FK'
ALTER TABLE RA_RMII_CONTACT_TYPE ADD CONSTRAINT RA_RMIICT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIICT_R_ATY_FK'
ALTER TABLE RA_RMII_CONTACT_TYPE ADD CONSTRAINT RA_RMIICT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIICT_R_LANG_FK'
ALTER TABLE RA_RMII_CONTACT_TYPE ADD CONSTRAINT RA_RMIICT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIICT_R_RMIICT_FK'
ALTER TABLE RA_RMII_CONTACT_TYPE ADD CONSTRAINT RA_RMIICT_R_RMIICT_FK FOREIGN KEY
(
CONTACT_TYPE
)
REFERENCES R_RMII_CONTACT_TYPE
(
CONTACT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIICT_SRCD_FK'
ALTER TABLE RA_RMII_CONTACT_TYPE ADD CONSTRAINT RA_RMIICT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIICOT_BA_FK'
ALTER TABLE RA_RMII_CONTENT_TYPE ADD CONSTRAINT RA_RMIICOT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIICOT_PSWA_FK'
ALTER TABLE RA_RMII_CONTENT_TYPE ADD CONSTRAINT RA_RMIICOT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIICOT_R_ART_FK'
ALTER TABLE RA_RMII_CONTENT_TYPE ADD CONSTRAINT RA_RMIICOT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIICOT_R_ATY_FK'
ALTER TABLE RA_RMII_CONTENT_TYPE ADD CONSTRAINT RA_RMIICOT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIICOT_R_LANG_FK'
ALTER TABLE RA_RMII_CONTENT_TYPE ADD CONSTRAINT RA_RMIICOT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIICOT_R_RMIICOT_FK'
ALTER TABLE RA_RMII_CONTENT_TYPE ADD CONSTRAINT RA_RMIICOT_R_RMIICOT_FK FOREIGN KEY
(
RMII_CONTENT_TYPE
)
REFERENCES R_RMII_CONTENT_TYPE
(
RMII_CONTENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIICOT_SRCD_FK'
ALTER TABLE RA_RMII_CONTENT_TYPE ADD CONSTRAINT RA_RMIICOT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIDC_BA_FK'
ALTER TABLE RA_RMII_DEFICIENCY ADD CONSTRAINT RA_RMIIDC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIDC_PSWA_FK'
ALTER TABLE RA_RMII_DEFICIENCY ADD CONSTRAINT RA_RMIIDC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIDC_R_ART_FK'
ALTER TABLE RA_RMII_DEFICIENCY ADD CONSTRAINT RA_RMIIDC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIDC_R_ATY_FK'
ALTER TABLE RA_RMII_DEFICIENCY ADD CONSTRAINT RA_RMIIDC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIDC_R_LANG_FK'
ALTER TABLE RA_RMII_DEFICIENCY ADD CONSTRAINT RA_RMIIDC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIDC_R_RMIIDC_FK'
ALTER TABLE RA_RMII_DEFICIENCY ADD CONSTRAINT RA_RMIIDC_R_RMIIDC_FK FOREIGN KEY
(
DEFICIENCY_TYPE
)
REFERENCES R_RMII_DEFICIENCY
(
DEFICIENCY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIDC_SRCD_FK'
ALTER TABLE RA_RMII_DEFICIENCY ADD CONSTRAINT RA_RMIIDC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIDT_BA_FK'
ALTER TABLE RA_RMII_DESC_TYPE ADD CONSTRAINT RA_RMIIDT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIDT_PSWA_FK'
ALTER TABLE RA_RMII_DESC_TYPE ADD CONSTRAINT RA_RMIIDT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIDT_R_ART_FK'
ALTER TABLE RA_RMII_DESC_TYPE ADD CONSTRAINT RA_RMIIDT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIDT_R_ATY_FK'
ALTER TABLE RA_RMII_DESC_TYPE ADD CONSTRAINT RA_RMIIDT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIDT_R_LANG_FK'
ALTER TABLE RA_RMII_DESC_TYPE ADD CONSTRAINT RA_RMIIDT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIDT_R_RMIIDT_FK'
ALTER TABLE RA_RMII_DESC_TYPE ADD CONSTRAINT RA_RMIIDT_R_RMIIDT_FK FOREIGN KEY
(
DESCRIPTION_TYPE
)
REFERENCES R_RMII_DESC_TYPE
(
DESCRIPTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIDT_SRCD_FK'
ALTER TABLE RA_RMII_DESC_TYPE ADD CONSTRAINT RA_RMIIDT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMGT_BA_FK'
ALTER TABLE RA_RMII_GROUP_TYPE ADD CONSTRAINT RA_RMGT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMGT_PSWA_FK'
ALTER TABLE RA_RMII_GROUP_TYPE ADD CONSTRAINT RA_RMGT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMGT_R_ART_FK'
ALTER TABLE RA_RMII_GROUP_TYPE ADD CONSTRAINT RA_RMGT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMGT_R_ATY_FK'
ALTER TABLE RA_RMII_GROUP_TYPE ADD CONSTRAINT RA_RMGT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMGT_R_LANG_FK'
ALTER TABLE RA_RMII_GROUP_TYPE ADD CONSTRAINT RA_RMGT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMGT_R_RMGT_FK'
ALTER TABLE RA_RMII_GROUP_TYPE ADD CONSTRAINT RA_RMGT_R_RMGT_FK FOREIGN KEY
(
GROUP_TYPE
)
REFERENCES R_RMII_GROUP_TYPE
(
GROUP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMGT_SRCD_FK'
ALTER TABLE RA_RMII_GROUP_TYPE ADD CONSTRAINT RA_RMGT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMC_BA_FK'
ALTER TABLE RA_RMII_METADATA_CODE ADD CONSTRAINT RA_RMC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMC_PSWA_FK'
ALTER TABLE RA_RMII_METADATA_CODE ADD CONSTRAINT RA_RMC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMC_R_ART_FK'
ALTER TABLE RA_RMII_METADATA_CODE ADD CONSTRAINT RA_RMC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMC_R_ATY_FK'
ALTER TABLE RA_RMII_METADATA_CODE ADD CONSTRAINT RA_RMC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMC_R_LANG_FK'
ALTER TABLE RA_RMII_METADATA_CODE ADD CONSTRAINT RA_RMC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMC_R_RMC_FK'
ALTER TABLE RA_RMII_METADATA_CODE ADD CONSTRAINT RA_RMC_R_RMC_FK FOREIGN KEY
(
METADATA_TYPE,
METADATA_CODE
)
REFERENCES R_RMII_METADATA_CODE
(
METADATA_TYPE,
METADATA_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMC_R_RMDT_FK'
ALTER TABLE RA_RMII_METADATA_CODE ADD CONSTRAINT RA_RMC_R_RMDT_FK FOREIGN KEY
(
METADATA_TYPE
)
REFERENCES R_RMII_METADATA_TYPE
(
METADATA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMC_SRCD_FK'
ALTER TABLE RA_RMII_METADATA_CODE ADD CONSTRAINT RA_RMC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMDT_BA_FK'
ALTER TABLE RA_RMII_METADATA_TYPE ADD CONSTRAINT RA_RMDT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMDT_PSWA_FK'
ALTER TABLE RA_RMII_METADATA_TYPE ADD CONSTRAINT RA_RMDT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMDT_R_ART_FK'
ALTER TABLE RA_RMII_METADATA_TYPE ADD CONSTRAINT RA_RMDT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMDT_R_ATY_FK'
ALTER TABLE RA_RMII_METADATA_TYPE ADD CONSTRAINT RA_RMDT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMDT_R_LANG_FK'
ALTER TABLE RA_RMII_METADATA_TYPE ADD CONSTRAINT RA_RMDT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMDT_R_RMDT_FK'
ALTER TABLE RA_RMII_METADATA_TYPE ADD CONSTRAINT RA_RMDT_R_RMDT_FK FOREIGN KEY
(
METADATA_TYPE
)
REFERENCES R_RMII_METADATA_TYPE
(
METADATA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMDT_SRCD_FK'
ALTER TABLE RA_RMII_METADATA_TYPE ADD CONSTRAINT RA_RMDT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIQC_BA_FK'
ALTER TABLE RA_RMII_QUALITY_CODE ADD CONSTRAINT RA_RMIIQC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIQC_PSWA_FK'
ALTER TABLE RA_RMII_QUALITY_CODE ADD CONSTRAINT RA_RMIIQC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIQC_R_ART_FK'
ALTER TABLE RA_RMII_QUALITY_CODE ADD CONSTRAINT RA_RMIIQC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIQC_R_ATY_FK'
ALTER TABLE RA_RMII_QUALITY_CODE ADD CONSTRAINT RA_RMIIQC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIQC_R_LANG_FK'
ALTER TABLE RA_RMII_QUALITY_CODE ADD CONSTRAINT RA_RMIIQC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIQC_R_RMIIQC_FK'
ALTER TABLE RA_RMII_QUALITY_CODE ADD CONSTRAINT RA_RMIIQC_R_RMIIQC_FK FOREIGN KEY
(
INFORMATION_QUALITY_CODE
)
REFERENCES R_RMII_QUALITY_CODE
(
INFORMATION_QUALITY_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIQC_SRCD_FK'
ALTER TABLE RA_RMII_QUALITY_CODE ADD CONSTRAINT RA_RMIIQC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIS_BA_FK'
ALTER TABLE RA_RMII_STATUS ADD CONSTRAINT RA_RMIIS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIS_PSWA_FK'
ALTER TABLE RA_RMII_STATUS ADD CONSTRAINT RA_RMIIS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIS_R_ART_FK'
ALTER TABLE RA_RMII_STATUS ADD CONSTRAINT RA_RMIIS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIS_R_ATY_FK'
ALTER TABLE RA_RMII_STATUS ADD CONSTRAINT RA_RMIIS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIS_R_LANG_FK'
ALTER TABLE RA_RMII_STATUS ADD CONSTRAINT RA_RMIIS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIS_R_RMIIS_FK'
ALTER TABLE RA_RMII_STATUS ADD CONSTRAINT RA_RMIIS_R_RMIIS_FK FOREIGN KEY
(
STATUS_TYPE,
STATUS
)
REFERENCES R_RMII_STATUS
(
STATUS_TYPE,
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIS_R_RMIIST_FK'
ALTER TABLE RA_RMII_STATUS ADD CONSTRAINT RA_RMIIS_R_RMIIST_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_RMII_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIS_SRCD_FK'
ALTER TABLE RA_RMII_STATUS ADD CONSTRAINT RA_RMIIS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIST_BA_FK'
ALTER TABLE RA_RMII_STATUS_TYPE ADD CONSTRAINT RA_RMIIST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIST_PSWA_FK'
ALTER TABLE RA_RMII_STATUS_TYPE ADD CONSTRAINT RA_RMIIST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIST_R_ART_FK'
ALTER TABLE RA_RMII_STATUS_TYPE ADD CONSTRAINT RA_RMIIST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIST_R_ATY_FK'
ALTER TABLE RA_RMII_STATUS_TYPE ADD CONSTRAINT RA_RMIIST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIST_R_LANG_FK'
ALTER TABLE RA_RMII_STATUS_TYPE ADD CONSTRAINT RA_RMIIST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIST_R_RMIIST_FK'
ALTER TABLE RA_RMII_STATUS_TYPE ADD CONSTRAINT RA_RMIIST_R_RMIIST_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_RMII_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RMIIST_SRCD_FK'
ALTER TABLE RA_RMII_STATUS_TYPE ADD CONSTRAINT RA_RMIIST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RTX_BA_FK'
ALTER TABLE RA_RM_THESAURUS_XREF ADD CONSTRAINT RA_RTX_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RTX_PSWA_FK'
ALTER TABLE RA_RM_THESAURUS_XREF ADD CONSTRAINT RA_RTX_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RTX_R_ART_FK'
ALTER TABLE RA_RM_THESAURUS_XREF ADD CONSTRAINT RA_RTX_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RTX_R_ATY_FK'
ALTER TABLE RA_RM_THESAURUS_XREF ADD CONSTRAINT RA_RTX_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RTX_R_LANG_FK'
ALTER TABLE RA_RM_THESAURUS_XREF ADD CONSTRAINT RA_RTX_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RTX_R_RTX_FK'
ALTER TABLE RA_RM_THESAURUS_XREF ADD CONSTRAINT RA_RTX_R_RTX_FK FOREIGN KEY
(
THESAURUS_XREF_TYPE
)
REFERENCES R_RM_THESAURUS_XREF
(
THESAURUS_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RTX_SRCD_FK'
ALTER TABLE RA_RM_THESAURUS_XREF ADD CONSTRAINT RA_RTX_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCOND_BA_FK'
ALTER TABLE RA_ROAD_CONDITION ADD CONSTRAINT RA_RCOND_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCOND_PSWA_FK'
ALTER TABLE RA_ROAD_CONDITION ADD CONSTRAINT RA_RCOND_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCOND_R_ART_FK'
ALTER TABLE RA_ROAD_CONDITION ADD CONSTRAINT RA_RCOND_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCOND_R_ATY_FK'
ALTER TABLE RA_ROAD_CONDITION ADD CONSTRAINT RA_RCOND_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCOND_R_LANG_FK'
ALTER TABLE RA_ROAD_CONDITION ADD CONSTRAINT RA_RCOND_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCOND_R_RCOND_FK'
ALTER TABLE RA_ROAD_CONDITION ADD CONSTRAINT RA_RCOND_R_RCOND_FK FOREIGN KEY
(
ROAD_CONDITION
)
REFERENCES R_ROAD_CONDITION
(
ROAD_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCOND_SRCD_FK'
ALTER TABLE RA_ROAD_CONDITION ADD CONSTRAINT RA_RCOND_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCT1_BA_FK'
ALTER TABLE RA_ROAD_CONTROL_TYPE ADD CONSTRAINT RA_RCT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCT1_PSWA_FK'
ALTER TABLE RA_ROAD_CONTROL_TYPE ADD CONSTRAINT RA_RCT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCT1_R_ART_FK'
ALTER TABLE RA_ROAD_CONTROL_TYPE ADD CONSTRAINT RA_RCT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCT1_R_ATY_FK'
ALTER TABLE RA_ROAD_CONTROL_TYPE ADD CONSTRAINT RA_RCT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCT1_R_LANG_FK'
ALTER TABLE RA_ROAD_CONTROL_TYPE ADD CONSTRAINT RA_RCT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCT1_R_RCT1_FK'
ALTER TABLE RA_ROAD_CONTROL_TYPE ADD CONSTRAINT RA_RCT1_R_RCT1_FK FOREIGN KEY
(
CONTROL_TYPE
)
REFERENCES R_ROAD_CONTROL_TYPE
(
CONTROL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCT1_SRCD_FK'
ALTER TABLE RA_ROAD_CONTROL_TYPE ADD CONSTRAINT RA_RCT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDS_BA_FK'
ALTER TABLE RA_ROAD_DRIVING_SIDE ADD CONSTRAINT RA_RDS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDS_PSWA_FK'
ALTER TABLE RA_ROAD_DRIVING_SIDE ADD CONSTRAINT RA_RDS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDS_R_ART_FK'
ALTER TABLE RA_ROAD_DRIVING_SIDE ADD CONSTRAINT RA_RDS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDS_R_ATY_FK'
ALTER TABLE RA_ROAD_DRIVING_SIDE ADD CONSTRAINT RA_RDS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDS_R_LANG_FK'
ALTER TABLE RA_ROAD_DRIVING_SIDE ADD CONSTRAINT RA_RDS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDS_R_RDS_FK'
ALTER TABLE RA_ROAD_DRIVING_SIDE ADD CONSTRAINT RA_RDS_R_RDS_FK FOREIGN KEY
(
DRIVING_SIDE
)
REFERENCES R_ROAD_DRIVING_SIDE
(
DRIVING_SIDE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDS_SRCD_FK'
ALTER TABLE RA_ROAD_DRIVING_SIDE ADD CONSTRAINT RA_RDS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDTF_BA_FK'
ALTER TABLE RA_ROAD_TRAFFIC_FLOW_TYPE ADD CONSTRAINT RA_RDTF_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDTF_PSWA_FK'
ALTER TABLE RA_ROAD_TRAFFIC_FLOW_TYPE ADD CONSTRAINT RA_RDTF_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDTF_R_ART_FK'
ALTER TABLE RA_ROAD_TRAFFIC_FLOW_TYPE ADD CONSTRAINT RA_RDTF_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDTF_R_ATY_FK'
ALTER TABLE RA_ROAD_TRAFFIC_FLOW_TYPE ADD CONSTRAINT RA_RDTF_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDTF_R_LANG_FK'
ALTER TABLE RA_ROAD_TRAFFIC_FLOW_TYPE ADD CONSTRAINT RA_RDTF_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDTF_R_RDTF_FK'
ALTER TABLE RA_ROAD_TRAFFIC_FLOW_TYPE ADD CONSTRAINT RA_RDTF_R_RDTF_FK FOREIGN KEY
(
TRAFFIC_FLOW_TYPE
)
REFERENCES R_ROAD_TRAFFIC_FLOW_TYPE
(
TRAFFIC_FLOW_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RDTF_SRCD_FK'
ALTER TABLE RA_ROAD_TRAFFIC_FLOW_TYPE ADD CONSTRAINT RA_RDTF_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCS_BA_FK'
ALTER TABLE RA_ROCK_CLASS_SCHEME ADD CONSTRAINT RA_RCS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCS_PSWA_FK'
ALTER TABLE RA_ROCK_CLASS_SCHEME ADD CONSTRAINT RA_RCS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCS_R_ART_FK'
ALTER TABLE RA_ROCK_CLASS_SCHEME ADD CONSTRAINT RA_RCS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCS_R_ATY_FK'
ALTER TABLE RA_ROCK_CLASS_SCHEME ADD CONSTRAINT RA_RCS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCS_R_LANG_FK'
ALTER TABLE RA_ROCK_CLASS_SCHEME ADD CONSTRAINT RA_RCS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCS_R_RCS_FK'
ALTER TABLE RA_ROCK_CLASS_SCHEME ADD CONSTRAINT RA_RCS_R_RCS_FK FOREIGN KEY
(
ROCK_CLASS_SCHEME
)
REFERENCES R_ROCK_CLASS_SCHEME
(
ROCK_CLASS_SCHEME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RCS_SRCD_FK'
ALTER TABLE RA_ROCK_CLASS_SCHEME ADD CONSTRAINT RA_RCS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RAM_BA_FK'
ALTER TABLE RA_ROLL_ALONG_METHOD ADD CONSTRAINT RA_RAM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RAM_PSWA_FK'
ALTER TABLE RA_ROLL_ALONG_METHOD ADD CONSTRAINT RA_RAM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RAM_R_ART_FK'
ALTER TABLE RA_ROLL_ALONG_METHOD ADD CONSTRAINT RA_RAM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RAM_R_ATY_FK'
ALTER TABLE RA_ROLL_ALONG_METHOD ADD CONSTRAINT RA_RAM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RAM_R_LANG_FK'
ALTER TABLE RA_ROLL_ALONG_METHOD ADD CONSTRAINT RA_RAM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RAM_R_RAM_FK'
ALTER TABLE RA_ROLL_ALONG_METHOD ADD CONSTRAINT RA_RAM_R_RAM_FK FOREIGN KEY
(
ROLL_ALONG_METHOD
)
REFERENCES R_ROLL_ALONG_METHOD
(
ROLL_ALONG_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RAM_SRCD_FK'
ALTER TABLE RA_ROLL_ALONG_METHOD ADD CONSTRAINT RA_RAM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT5_BA_FK'
ALTER TABLE RA_ROYALTY_TYPE ADD CONSTRAINT RA_RT5_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT5_PSWA_FK'
ALTER TABLE RA_ROYALTY_TYPE ADD CONSTRAINT RA_RT5_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT5_R_ART_FK'
ALTER TABLE RA_ROYALTY_TYPE ADD CONSTRAINT RA_RT5_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT5_R_ATY_FK'
ALTER TABLE RA_ROYALTY_TYPE ADD CONSTRAINT RA_RT5_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT5_R_LANG_FK'
ALTER TABLE RA_ROYALTY_TYPE ADD CONSTRAINT RA_RT5_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT5_R_RT5_FK'
ALTER TABLE RA_ROYALTY_TYPE ADD CONSTRAINT RA_RT5_R_RT5_FK FOREIGN KEY
(
ROYALTY_TYPE
)
REFERENCES R_ROYALTY_TYPE
(
ROYALTY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_RT5_SRCD_FK'
ALTER TABLE RA_ROYALTY_TYPE ADD CONSTRAINT RA_RT5_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST_BA_FK'
ALTER TABLE RA_SALINITY_TYPE ADD CONSTRAINT RA_ST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST_PSWA_FK'
ALTER TABLE RA_SALINITY_TYPE ADD CONSTRAINT RA_ST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST_R_ART_FK'
ALTER TABLE RA_SALINITY_TYPE ADD CONSTRAINT RA_ST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST_R_ATY_FK'
ALTER TABLE RA_SALINITY_TYPE ADD CONSTRAINT RA_ST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST_R_LANG_FK'
ALTER TABLE RA_SALINITY_TYPE ADD CONSTRAINT RA_ST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST_R_ST_FK'
ALTER TABLE RA_SALINITY_TYPE ADD CONSTRAINT RA_ST_R_ST_FK FOREIGN KEY
(
SALINITY_TYPE
)
REFERENCES R_SALINITY_TYPE
(
SALINITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST_SRCD_FK'
ALTER TABLE RA_SALINITY_TYPE ADD CONSTRAINT RA_ST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCT2_BA_FK'
ALTER TABLE RA_SAMPLE_COLLECTION_TYPE ADD CONSTRAINT RA_SCT2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCT2_PSWA_FK'
ALTER TABLE RA_SAMPLE_COLLECTION_TYPE ADD CONSTRAINT RA_SCT2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCT2_R_ART_FK'
ALTER TABLE RA_SAMPLE_COLLECTION_TYPE ADD CONSTRAINT RA_SCT2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCT2_R_ATY_FK'
ALTER TABLE RA_SAMPLE_COLLECTION_TYPE ADD CONSTRAINT RA_SCT2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCT2_R_LANG_FK'
ALTER TABLE RA_SAMPLE_COLLECTION_TYPE ADD CONSTRAINT RA_SCT2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCT2_R_SCT2_FK'
ALTER TABLE RA_SAMPLE_COLLECTION_TYPE ADD CONSTRAINT RA_SCT2_R_SCT2_FK FOREIGN KEY
(
COLLECTION_TYPE
)
REFERENCES R_SAMPLE_COLLECTION_TYPE
(
COLLECTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCT2_SRCD_FK'
ALTER TABLE RA_SAMPLE_COLLECTION_TYPE ADD CONSTRAINT RA_SCT2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCMD_BA_FK'
ALTER TABLE RA_SAMPLE_COLLECT_METHOD ADD CONSTRAINT RA_SCMD_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCMD_PSWA_FK'
ALTER TABLE RA_SAMPLE_COLLECT_METHOD ADD CONSTRAINT RA_SCMD_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCMD_R_ART_FK'
ALTER TABLE RA_SAMPLE_COLLECT_METHOD ADD CONSTRAINT RA_SCMD_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCMD_R_ATY_FK'
ALTER TABLE RA_SAMPLE_COLLECT_METHOD ADD CONSTRAINT RA_SCMD_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCMD_R_LANG_FK'
ALTER TABLE RA_SAMPLE_COLLECT_METHOD ADD CONSTRAINT RA_SCMD_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCMD_R_SCMD_FK'
ALTER TABLE RA_SAMPLE_COLLECT_METHOD ADD CONSTRAINT RA_SCMD_R_SCMD_FK FOREIGN KEY
(
COLLECT_METHOD
)
REFERENCES R_SAMPLE_COLLECT_METHOD
(
COLLECT_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCMD_SRCD_FK'
ALTER TABLE RA_SAMPLE_COLLECT_METHOD ADD CONSTRAINT RA_SCMD_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SACT_1_BA_FK'
ALTER TABLE RA_SAMPLE_COMP_TYPE ADD CONSTRAINT RA_SACT_1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SACT_1_PSWA_FK'
ALTER TABLE RA_SAMPLE_COMP_TYPE ADD CONSTRAINT RA_SACT_1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SACT_1_R_ART_FK'
ALTER TABLE RA_SAMPLE_COMP_TYPE ADD CONSTRAINT RA_SACT_1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SACT_1_R_ATY_FK'
ALTER TABLE RA_SAMPLE_COMP_TYPE ADD CONSTRAINT RA_SACT_1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SACT_1_R_LANG_FK'
ALTER TABLE RA_SAMPLE_COMP_TYPE ADD CONSTRAINT RA_SACT_1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SACT_1_R_SACT_1_FK'
ALTER TABLE RA_SAMPLE_COMP_TYPE ADD CONSTRAINT RA_SACT_1_R_SACT_1_FK FOREIGN KEY
(
SAMPLE_COMPONENT_TYPE
)
REFERENCES R_SAMPLE_COMP_TYPE
(
SAMPLE_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SACT_1_SRCD_FK'
ALTER TABLE RA_SAMPLE_COMP_TYPE ADD CONSTRAINT RA_SACT_1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAPCT_BA_FK'
ALTER TABLE RA_SAMPLE_CONTAMINANT ADD CONSTRAINT RA_SAPCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAPCT_PSWA_FK'
ALTER TABLE RA_SAMPLE_CONTAMINANT ADD CONSTRAINT RA_SAPCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAPCT_R_ART_FK'
ALTER TABLE RA_SAMPLE_CONTAMINANT ADD CONSTRAINT RA_SAPCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAPCT_R_ATY_FK'
ALTER TABLE RA_SAMPLE_CONTAMINANT ADD CONSTRAINT RA_SAPCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAPCT_R_LANG_FK'
ALTER TABLE RA_SAMPLE_CONTAMINANT ADD CONSTRAINT RA_SAPCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAPCT_R_SAPCT_FK'
ALTER TABLE RA_SAMPLE_CONTAMINANT ADD CONSTRAINT RA_SAPCT_R_SAPCT_FK FOREIGN KEY
(
SAMPLE_CONTAMINANT
)
REFERENCES R_SAMPLE_CONTAMINANT
(
SAMPLE_CONTAMINANT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAPCT_SRCD_FK'
ALTER TABLE RA_SAMPLE_CONTAMINANT ADD CONSTRAINT RA_SAPCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDC_BA_FK'
ALTER TABLE RA_SAMPLE_DESC_CODE ADD CONSTRAINT RA_SDC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDC_PSWA_FK'
ALTER TABLE RA_SAMPLE_DESC_CODE ADD CONSTRAINT RA_SDC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDC_R_ART_FK'
ALTER TABLE RA_SAMPLE_DESC_CODE ADD CONSTRAINT RA_SDC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDC_R_ATY_FK'
ALTER TABLE RA_SAMPLE_DESC_CODE ADD CONSTRAINT RA_SDC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDC_R_LANG_FK'
ALTER TABLE RA_SAMPLE_DESC_CODE ADD CONSTRAINT RA_SDC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDC_R_SDC_FK'
ALTER TABLE RA_SAMPLE_DESC_CODE ADD CONSTRAINT RA_SDC_R_SDC_FK FOREIGN KEY
(
DESCRIPTION_TYPE,
DESCRIPTION_CODE
)
REFERENCES R_SAMPLE_DESC_CODE
(
DESCRIPTION_TYPE,
DESCRIPTION_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDC_R_SDT_FK'
ALTER TABLE RA_SAMPLE_DESC_CODE ADD CONSTRAINT RA_SDC_R_SDT_FK FOREIGN KEY
(
DESCRIPTION_TYPE
)
REFERENCES R_SAMPLE_DESC_TYPE
(
DESCRIPTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDC_SRCD_FK'
ALTER TABLE RA_SAMPLE_DESC_CODE ADD CONSTRAINT RA_SDC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDT_BA_FK'
ALTER TABLE RA_SAMPLE_DESC_TYPE ADD CONSTRAINT RA_SDT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDT_PSWA_FK'
ALTER TABLE RA_SAMPLE_DESC_TYPE ADD CONSTRAINT RA_SDT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDT_R_ART_FK'
ALTER TABLE RA_SAMPLE_DESC_TYPE ADD CONSTRAINT RA_SDT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDT_R_ATY_FK'
ALTER TABLE RA_SAMPLE_DESC_TYPE ADD CONSTRAINT RA_SDT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDT_R_LANG_FK'
ALTER TABLE RA_SAMPLE_DESC_TYPE ADD CONSTRAINT RA_SDT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDT_R_SDT_FK'
ALTER TABLE RA_SAMPLE_DESC_TYPE ADD CONSTRAINT RA_SDT_R_SDT_FK FOREIGN KEY
(
DESCRIPTION_TYPE
)
REFERENCES R_SAMPLE_DESC_TYPE
(
DESCRIPTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDT_SRCD_FK'
ALTER TABLE RA_SAMPLE_DESC_TYPE ADD CONSTRAINT RA_SDT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFT_BA_FK'
ALTER TABLE RA_SAMPLE_FRACTION_TYPE ADD CONSTRAINT RA_SFT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFT_PSWA_FK'
ALTER TABLE RA_SAMPLE_FRACTION_TYPE ADD CONSTRAINT RA_SFT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFT_R_ART_FK'
ALTER TABLE RA_SAMPLE_FRACTION_TYPE ADD CONSTRAINT RA_SFT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFT_R_ATY_FK'
ALTER TABLE RA_SAMPLE_FRACTION_TYPE ADD CONSTRAINT RA_SFT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFT_R_LANG_FK'
ALTER TABLE RA_SAMPLE_FRACTION_TYPE ADD CONSTRAINT RA_SFT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFT_R_SFT_FK'
ALTER TABLE RA_SAMPLE_FRACTION_TYPE ADD CONSTRAINT RA_SFT_R_SFT_FK FOREIGN KEY
(
SAMPLE_FRACTION_TYPE
)
REFERENCES R_SAMPLE_FRACTION_TYPE
(
SAMPLE_FRACTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFT_SRCD_FK'
ALTER TABLE RA_SAMPLE_FRACTION_TYPE ADD CONSTRAINT RA_SFT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SL_BA_FK'
ALTER TABLE RA_SAMPLE_LOCATION ADD CONSTRAINT RA_SL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SL_PSWA_FK'
ALTER TABLE RA_SAMPLE_LOCATION ADD CONSTRAINT RA_SL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SL_R_ART_FK'
ALTER TABLE RA_SAMPLE_LOCATION ADD CONSTRAINT RA_SL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SL_R_ATY_FK'
ALTER TABLE RA_SAMPLE_LOCATION ADD CONSTRAINT RA_SL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SL_R_LANG_FK'
ALTER TABLE RA_SAMPLE_LOCATION ADD CONSTRAINT RA_SL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SL_R_SL_FK'
ALTER TABLE RA_SAMPLE_LOCATION ADD CONSTRAINT RA_SL_R_SL_FK FOREIGN KEY
(
SAMPLE_LOCATION
)
REFERENCES R_SAMPLE_LOCATION
(
SAMPLE_LOCATION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SL_SRCD_FK'
ALTER TABLE RA_SAMPLE_LOCATION ADD CONSTRAINT RA_SL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPH_BA_FK'
ALTER TABLE RA_SAMPLE_PHASE ADD CONSTRAINT RA_SPH_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPH_PSWA_FK'
ALTER TABLE RA_SAMPLE_PHASE ADD CONSTRAINT RA_SPH_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPH_R_ART_FK'
ALTER TABLE RA_SAMPLE_PHASE ADD CONSTRAINT RA_SPH_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPH_R_ATY_FK'
ALTER TABLE RA_SAMPLE_PHASE ADD CONSTRAINT RA_SPH_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPH_R_LANG_FK'
ALTER TABLE RA_SAMPLE_PHASE ADD CONSTRAINT RA_SPH_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPH_R_SPH_FK'
ALTER TABLE RA_SAMPLE_PHASE ADD CONSTRAINT RA_SPH_R_SPH_FK FOREIGN KEY
(
PHASE_TYPE
)
REFERENCES R_SAMPLE_PHASE
(
PHASE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPH_SRCD_FK'
ALTER TABLE RA_SAMPLE_PHASE ADD CONSTRAINT RA_SPH_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPC_BA_FK'
ALTER TABLE RA_SAMPLE_PREP_CLASS ADD CONSTRAINT RA_SPC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPC_PSWA_FK'
ALTER TABLE RA_SAMPLE_PREP_CLASS ADD CONSTRAINT RA_SPC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPC_R_ART_FK'
ALTER TABLE RA_SAMPLE_PREP_CLASS ADD CONSTRAINT RA_SPC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPC_R_ATY_FK'
ALTER TABLE RA_SAMPLE_PREP_CLASS ADD CONSTRAINT RA_SPC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPC_R_LANG_FK'
ALTER TABLE RA_SAMPLE_PREP_CLASS ADD CONSTRAINT RA_SPC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPC_R_SPC_FK'
ALTER TABLE RA_SAMPLE_PREP_CLASS ADD CONSTRAINT RA_SPC_R_SPC_FK FOREIGN KEY
(
PREPARATION_CLASS
)
REFERENCES R_SAMPLE_PREP_CLASS
(
PREPARATION_CLASS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPC_SRCD_FK'
ALTER TABLE RA_SAMPLE_PREP_CLASS ADD CONSTRAINT RA_SPC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRVT_BA_FK'
ALTER TABLE RA_SAMPLE_REF_VALUE_TYPE ADD CONSTRAINT RA_SRVT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRVT_PSWA_FK'
ALTER TABLE RA_SAMPLE_REF_VALUE_TYPE ADD CONSTRAINT RA_SRVT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRVT_R_ART_FK'
ALTER TABLE RA_SAMPLE_REF_VALUE_TYPE ADD CONSTRAINT RA_SRVT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRVT_R_ATY_FK'
ALTER TABLE RA_SAMPLE_REF_VALUE_TYPE ADD CONSTRAINT RA_SRVT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRVT_R_LANG_FK'
ALTER TABLE RA_SAMPLE_REF_VALUE_TYPE ADD CONSTRAINT RA_SRVT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRVT_R_SRVT_FK'
ALTER TABLE RA_SAMPLE_REF_VALUE_TYPE ADD CONSTRAINT RA_SRVT_R_SRVT_FK FOREIGN KEY
(
REFERENCE_VALUE_TYPE
)
REFERENCES R_SAMPLE_REF_VALUE_TYPE
(
REFERENCE_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRVT_SRCD_FK'
ALTER TABLE RA_SAMPLE_REF_VALUE_TYPE ADD CONSTRAINT RA_SRVT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SS_BA_FK'
ALTER TABLE RA_SAMPLE_SHAPE ADD CONSTRAINT RA_SS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SS_PSWA_FK'
ALTER TABLE RA_SAMPLE_SHAPE ADD CONSTRAINT RA_SS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SS_R_ART_FK'
ALTER TABLE RA_SAMPLE_SHAPE ADD CONSTRAINT RA_SS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SS_R_ATY_FK'
ALTER TABLE RA_SAMPLE_SHAPE ADD CONSTRAINT RA_SS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SS_R_LANG_FK'
ALTER TABLE RA_SAMPLE_SHAPE ADD CONSTRAINT RA_SS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SS_R_SS_FK'
ALTER TABLE RA_SAMPLE_SHAPE ADD CONSTRAINT RA_SS_R_SS_FK FOREIGN KEY
(
SAMPLE_SHAPE_TYPE
)
REFERENCES R_SAMPLE_SHAPE
(
SAMPLE_SHAPE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SS_SRCD_FK'
ALTER TABLE RA_SAMPLE_SHAPE ADD CONSTRAINT RA_SS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST1_BA_FK'
ALTER TABLE RA_SAMPLE_TYPE ADD CONSTRAINT RA_ST1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST1_PSWA_FK'
ALTER TABLE RA_SAMPLE_TYPE ADD CONSTRAINT RA_ST1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST1_R_ART_FK'
ALTER TABLE RA_SAMPLE_TYPE ADD CONSTRAINT RA_ST1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST1_R_ATY_FK'
ALTER TABLE RA_SAMPLE_TYPE ADD CONSTRAINT RA_ST1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST1_R_LANG_FK'
ALTER TABLE RA_SAMPLE_TYPE ADD CONSTRAINT RA_ST1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST1_R_ST1_FK'
ALTER TABLE RA_SAMPLE_TYPE ADD CONSTRAINT RA_ST1_R_ST1_FK FOREIGN KEY
(
SAMPLE_TYPE
)
REFERENCES R_SAMPLE_TYPE
(
SAMPLE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST1_SRCD_FK'
ALTER TABLE RA_SAMPLE_TYPE ADD CONSTRAINT RA_ST1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST2_BA_FK'
ALTER TABLE RA_SCALE_TRANSFORM ADD CONSTRAINT RA_ST2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST2_PSWA_FK'
ALTER TABLE RA_SCALE_TRANSFORM ADD CONSTRAINT RA_ST2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST2_R_ART_FK'
ALTER TABLE RA_SCALE_TRANSFORM ADD CONSTRAINT RA_ST2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST2_R_ATY_FK'
ALTER TABLE RA_SCALE_TRANSFORM ADD CONSTRAINT RA_ST2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST2_R_LANG_FK'
ALTER TABLE RA_SCALE_TRANSFORM ADD CONSTRAINT RA_ST2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST2_R_ST2_FK'
ALTER TABLE RA_SCALE_TRANSFORM ADD CONSTRAINT RA_ST2_R_ST2_FK FOREIGN KEY
(
SCALE_TRANSFORM
)
REFERENCES R_SCALE_TRANSFORM
(
SCALE_TRANSFORM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST2_SRCD_FK'
ALTER TABLE RA_SCALE_TRANSFORM ADD CONSTRAINT RA_ST2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SL1_BA_FK'
ALTER TABLE RA_SCREEN_LOCATION ADD CONSTRAINT RA_SL1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SL1_PSWA_FK'
ALTER TABLE RA_SCREEN_LOCATION ADD CONSTRAINT RA_SL1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SL1_R_ART_FK'
ALTER TABLE RA_SCREEN_LOCATION ADD CONSTRAINT RA_SL1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SL1_R_ATY_FK'
ALTER TABLE RA_SCREEN_LOCATION ADD CONSTRAINT RA_SL1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SL1_R_LANG_FK'
ALTER TABLE RA_SCREEN_LOCATION ADD CONSTRAINT RA_SL1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SL1_R_SL1_FK'
ALTER TABLE RA_SCREEN_LOCATION ADD CONSTRAINT RA_SL1_R_SL1_FK FOREIGN KEY
(
SCREEN_LOCATION
)
REFERENCES R_SCREEN_LOCATION
(
SCREEN_LOCATION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SL1_SRCD_FK'
ALTER TABLE RA_SCREEN_LOCATION ADD CONSTRAINT RA_SL1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST3_BA_FK'
ALTER TABLE RA_SECTION_TYPE ADD CONSTRAINT RA_ST3_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST3_PSWA_FK'
ALTER TABLE RA_SECTION_TYPE ADD CONSTRAINT RA_ST3_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST3_R_ART_FK'
ALTER TABLE RA_SECTION_TYPE ADD CONSTRAINT RA_ST3_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST3_R_ATY_FK'
ALTER TABLE RA_SECTION_TYPE ADD CONSTRAINT RA_ST3_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST3_R_LANG_FK'
ALTER TABLE RA_SECTION_TYPE ADD CONSTRAINT RA_ST3_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST3_R_ST3_FK'
ALTER TABLE RA_SECTION_TYPE ADD CONSTRAINT RA_ST3_R_ST3_FK FOREIGN KEY
(
SECTION_TYPE
)
REFERENCES R_SECTION_TYPE
(
SECTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST3_SRCD_FK'
ALTER TABLE RA_SECTION_TYPE ADD CONSTRAINT RA_ST3_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SP_BA_FK'
ALTER TABLE RA_SEISMIC_PATH ADD CONSTRAINT RA_SP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SP_PSWA_FK'
ALTER TABLE RA_SEISMIC_PATH ADD CONSTRAINT RA_SP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SP_R_ART_FK'
ALTER TABLE RA_SEISMIC_PATH ADD CONSTRAINT RA_SP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SP_R_ATY_FK'
ALTER TABLE RA_SEISMIC_PATH ADD CONSTRAINT RA_SP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SP_R_LANG_FK'
ALTER TABLE RA_SEISMIC_PATH ADD CONSTRAINT RA_SP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SP_R_SP_FK'
ALTER TABLE RA_SEISMIC_PATH ADD CONSTRAINT RA_SP_R_SP_FK FOREIGN KEY
(
SEISMIC_PATH
)
REFERENCES R_SEISMIC_PATH
(
SEISMIC_PATH
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SP_SRCD_FK'
ALTER TABLE RA_SEISMIC_PATH ADD CONSTRAINT RA_SP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_S3T_BA_FK'
ALTER TABLE RA_SEIS_3D_TYPE ADD CONSTRAINT RA_S3T_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_S3T_PSWA_FK'
ALTER TABLE RA_SEIS_3D_TYPE ADD CONSTRAINT RA_S3T_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_S3T_R_ART_FK'
ALTER TABLE RA_SEIS_3D_TYPE ADD CONSTRAINT RA_S3T_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_S3T_R_ATY_FK'
ALTER TABLE RA_SEIS_3D_TYPE ADD CONSTRAINT RA_S3T_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_S3T_R_LANG_FK'
ALTER TABLE RA_SEIS_3D_TYPE ADD CONSTRAINT RA_S3T_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_S3T_R_S3T_FK'
ALTER TABLE RA_SEIS_3D_TYPE ADD CONSTRAINT RA_S3T_R_S3T_FK FOREIGN KEY
(
SEISMIC_3D_TYPE
)
REFERENCES R_SEIS_3D_TYPE
(
SEISMIC_3D_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_S3T_SRCD_FK'
ALTER TABLE RA_SEIS_3D_TYPE ADD CONSTRAINT RA_S3T_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SACTC_BA_FK'
ALTER TABLE RA_SEIS_ACTIVITY_CLASS ADD CONSTRAINT RA_SACTC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SACTC_PSWA_FK'
ALTER TABLE RA_SEIS_ACTIVITY_CLASS ADD CONSTRAINT RA_SACTC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SACTC_R_ART_FK'
ALTER TABLE RA_SEIS_ACTIVITY_CLASS ADD CONSTRAINT RA_SACTC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SACTC_R_ATY_FK'
ALTER TABLE RA_SEIS_ACTIVITY_CLASS ADD CONSTRAINT RA_SACTC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SACTC_R_LANG_FK'
ALTER TABLE RA_SEIS_ACTIVITY_CLASS ADD CONSTRAINT RA_SACTC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SACTC_R_SACTC_FK'
ALTER TABLE RA_SEIS_ACTIVITY_CLASS ADD CONSTRAINT RA_SACTC_R_SACTC_FK FOREIGN KEY
(
SEIS_ACTIVITY_CLASS
)
REFERENCES R_SEIS_ACTIVITY_CLASS
(
SEIS_ACTIVITY_CLASS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SACTC_SRCD_FK'
ALTER TABLE RA_SEIS_ACTIVITY_CLASS ADD CONSTRAINT RA_SACTC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SACT1_BA_FK'
ALTER TABLE RA_SEIS_ACTIVITY_TYPE ADD CONSTRAINT RA_SACT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SACT1_PSWA_FK'
ALTER TABLE RA_SEIS_ACTIVITY_TYPE ADD CONSTRAINT RA_SACT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SACT1_R_ART_FK'
ALTER TABLE RA_SEIS_ACTIVITY_TYPE ADD CONSTRAINT RA_SACT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SACT1_R_ATY_FK'
ALTER TABLE RA_SEIS_ACTIVITY_TYPE ADD CONSTRAINT RA_SACT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SACT1_R_LANG_FK'
ALTER TABLE RA_SEIS_ACTIVITY_TYPE ADD CONSTRAINT RA_SACT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SACT1_R_SACTC_FK'
ALTER TABLE RA_SEIS_ACTIVITY_TYPE ADD CONSTRAINT RA_SACT1_R_SACTC_FK FOREIGN KEY
(
SEIS_ACTIVITY_CLASS
)
REFERENCES R_SEIS_ACTIVITY_CLASS
(
SEIS_ACTIVITY_CLASS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SACT1_R_SACT1_FK'
ALTER TABLE RA_SEIS_ACTIVITY_TYPE ADD CONSTRAINT RA_SACT1_R_SACT1_FK FOREIGN KEY
(
SEIS_ACTIVITY_CLASS,
SEIS_ACTIVITY_TYPE
)
REFERENCES R_SEIS_ACTIVITY_TYPE
(
SEIS_ACTIVITY_CLASS,
SEIS_ACTIVITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SACT1_SRCD_FK'
ALTER TABLE RA_SEIS_ACTIVITY_TYPE ADD CONSTRAINT RA_SACT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAL_BA_FK'
ALTER TABLE RA_SEIS_AUTHORIZE_LIMIT ADD CONSTRAINT RA_SAL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAL_PSWA_FK'
ALTER TABLE RA_SEIS_AUTHORIZE_LIMIT ADD CONSTRAINT RA_SAL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAL_R_ART_FK'
ALTER TABLE RA_SEIS_AUTHORIZE_LIMIT ADD CONSTRAINT RA_SAL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAL_R_ATY_FK'
ALTER TABLE RA_SEIS_AUTHORIZE_LIMIT ADD CONSTRAINT RA_SAL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAL_R_LANG_FK'
ALTER TABLE RA_SEIS_AUTHORIZE_LIMIT ADD CONSTRAINT RA_SAL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAL_R_SAL_FK'
ALTER TABLE RA_SEIS_AUTHORIZE_LIMIT ADD CONSTRAINT RA_SAL_R_SAL_FK FOREIGN KEY
(
LIMIT_TYPE
)
REFERENCES R_SEIS_AUTHORIZE_LIMIT
(
LIMIT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAL_SRCD_FK'
ALTER TABLE RA_SEIS_AUTHORIZE_LIMIT ADD CONSTRAINT RA_SAL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAR_BA_FK'
ALTER TABLE RA_SEIS_AUTHORIZE_REASON ADD CONSTRAINT RA_SAR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAR_PSWA_FK'
ALTER TABLE RA_SEIS_AUTHORIZE_REASON ADD CONSTRAINT RA_SAR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAR_R_ART_FK'
ALTER TABLE RA_SEIS_AUTHORIZE_REASON ADD CONSTRAINT RA_SAR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAR_R_ATY_FK'
ALTER TABLE RA_SEIS_AUTHORIZE_REASON ADD CONSTRAINT RA_SAR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAR_R_LANG_FK'
ALTER TABLE RA_SEIS_AUTHORIZE_REASON ADD CONSTRAINT RA_SAR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAR_R_SAR_FK'
ALTER TABLE RA_SEIS_AUTHORIZE_REASON ADD CONSTRAINT RA_SAR_R_SAR_FK FOREIGN KEY
(
REASON_TYPE
)
REFERENCES R_SEIS_AUTHORIZE_REASON
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAR_SRCD_FK'
ALTER TABLE RA_SEIS_AUTHORIZE_REASON ADD CONSTRAINT RA_SAR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAT_BA_FK'
ALTER TABLE RA_SEIS_AUTHORIZE_TYPE ADD CONSTRAINT RA_SAT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAT_PSWA_FK'
ALTER TABLE RA_SEIS_AUTHORIZE_TYPE ADD CONSTRAINT RA_SAT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAT_R_ART_FK'
ALTER TABLE RA_SEIS_AUTHORIZE_TYPE ADD CONSTRAINT RA_SAT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAT_R_ATY_FK'
ALTER TABLE RA_SEIS_AUTHORIZE_TYPE ADD CONSTRAINT RA_SAT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAT_R_LANG_FK'
ALTER TABLE RA_SEIS_AUTHORIZE_TYPE ADD CONSTRAINT RA_SAT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAT_R_SAT_FK'
ALTER TABLE RA_SEIS_AUTHORIZE_TYPE ADD CONSTRAINT RA_SAT_R_SAT_FK FOREIGN KEY
(
AUTHORIZE_TYPE
)
REFERENCES R_SEIS_AUTHORIZE_TYPE
(
AUTHORIZE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAT_SRCD_FK'
ALTER TABLE RA_SEIS_AUTHORIZE_TYPE ADD CONSTRAINT RA_SAT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SBM_BA_FK'
ALTER TABLE RA_SEIS_BIN_METHOD ADD CONSTRAINT RA_SBM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SBM_PSWA_FK'
ALTER TABLE RA_SEIS_BIN_METHOD ADD CONSTRAINT RA_SBM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SBM_R_ART_FK'
ALTER TABLE RA_SEIS_BIN_METHOD ADD CONSTRAINT RA_SBM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SBM_R_ATY_FK'
ALTER TABLE RA_SEIS_BIN_METHOD ADD CONSTRAINT RA_SBM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SBM_R_LANG_FK'
ALTER TABLE RA_SEIS_BIN_METHOD ADD CONSTRAINT RA_SBM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SBM_R_SBM_FK'
ALTER TABLE RA_SEIS_BIN_METHOD ADD CONSTRAINT RA_SBM_R_SBM_FK FOREIGN KEY
(
BIN_METHOD
)
REFERENCES R_SEIS_BIN_METHOD
(
BIN_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SBM_SRCD_FK'
ALTER TABLE RA_SEIS_BIN_METHOD ADD CONSTRAINT RA_SBM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SBOT_BA_FK'
ALTER TABLE RA_SEIS_BIN_OUTLINE_TYPE ADD CONSTRAINT RA_SBOT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SBOT_PSWA_FK'
ALTER TABLE RA_SEIS_BIN_OUTLINE_TYPE ADD CONSTRAINT RA_SBOT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SBOT_R_ART_FK'
ALTER TABLE RA_SEIS_BIN_OUTLINE_TYPE ADD CONSTRAINT RA_SBOT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SBOT_R_ATY_FK'
ALTER TABLE RA_SEIS_BIN_OUTLINE_TYPE ADD CONSTRAINT RA_SBOT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SBOT_R_LANG_FK'
ALTER TABLE RA_SEIS_BIN_OUTLINE_TYPE ADD CONSTRAINT RA_SBOT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SBOT_R_SBOT_FK'
ALTER TABLE RA_SEIS_BIN_OUTLINE_TYPE ADD CONSTRAINT RA_SBOT_R_SBOT_FK FOREIGN KEY
(
BIN_OUTLINE_TYPE
)
REFERENCES R_SEIS_BIN_OUTLINE_TYPE
(
BIN_OUTLINE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SBOT_SRCD_FK'
ALTER TABLE RA_SEIS_BIN_OUTLINE_TYPE ADD CONSTRAINT RA_SBOT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCM_BA_FK'
ALTER TABLE RA_SEIS_CABLE_MAKE ADD CONSTRAINT RA_SCM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCM_PSWA_FK'
ALTER TABLE RA_SEIS_CABLE_MAKE ADD CONSTRAINT RA_SCM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCM_R_ART_FK'
ALTER TABLE RA_SEIS_CABLE_MAKE ADD CONSTRAINT RA_SCM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCM_R_ATY_FK'
ALTER TABLE RA_SEIS_CABLE_MAKE ADD CONSTRAINT RA_SCM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCM_R_LANG_FK'
ALTER TABLE RA_SEIS_CABLE_MAKE ADD CONSTRAINT RA_SCM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCM_R_SCM_FK'
ALTER TABLE RA_SEIS_CABLE_MAKE ADD CONSTRAINT RA_SCM_R_SCM_FK FOREIGN KEY
(
CABLE_MAKE
)
REFERENCES R_SEIS_CABLE_MAKE
(
CABLE_MAKE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCM_SRCD_FK'
ALTER TABLE RA_SEIS_CABLE_MAKE ADD CONSTRAINT RA_SCM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCT_BA_FK'
ALTER TABLE RA_SEIS_CHANNEL_TYPE ADD CONSTRAINT RA_SCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCT_PSWA_FK'
ALTER TABLE RA_SEIS_CHANNEL_TYPE ADD CONSTRAINT RA_SCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCT_R_ART_FK'
ALTER TABLE RA_SEIS_CHANNEL_TYPE ADD CONSTRAINT RA_SCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCT_R_ATY_FK'
ALTER TABLE RA_SEIS_CHANNEL_TYPE ADD CONSTRAINT RA_SCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCT_R_LANG_FK'
ALTER TABLE RA_SEIS_CHANNEL_TYPE ADD CONSTRAINT RA_SCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCT_R_SCT_FK'
ALTER TABLE RA_SEIS_CHANNEL_TYPE ADD CONSTRAINT RA_SCT_R_SCT_FK FOREIGN KEY
(
CHANNEL_TYPE
)
REFERENCES R_SEIS_CHANNEL_TYPE
(
CHANNEL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCT_SRCD_FK'
ALTER TABLE RA_SEIS_CHANNEL_TYPE ADD CONSTRAINT RA_SCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SD_BA_FK'
ALTER TABLE RA_SEIS_DIMENSION ADD CONSTRAINT RA_SD_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SD_PSWA_FK'
ALTER TABLE RA_SEIS_DIMENSION ADD CONSTRAINT RA_SD_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SD_R_ART_FK'
ALTER TABLE RA_SEIS_DIMENSION ADD CONSTRAINT RA_SD_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SD_R_ATY_FK'
ALTER TABLE RA_SEIS_DIMENSION ADD CONSTRAINT RA_SD_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SD_R_LANG_FK'
ALTER TABLE RA_SEIS_DIMENSION ADD CONSTRAINT RA_SD_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SD_R_SD_FK'
ALTER TABLE RA_SEIS_DIMENSION ADD CONSTRAINT RA_SD_R_SD_FK FOREIGN KEY
(
SEIS_DIMENSION
)
REFERENCES R_SEIS_DIMENSION
(
SEIS_DIMENSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SD_SRCD_FK'
ALTER TABLE RA_SEIS_DIMENSION ADD CONSTRAINT RA_SD_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SET_BA_FK'
ALTER TABLE RA_SEIS_ENERGY_TYPE ADD CONSTRAINT RA_SET_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SET_PSWA_FK'
ALTER TABLE RA_SEIS_ENERGY_TYPE ADD CONSTRAINT RA_SET_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SET_R_ART_FK'
ALTER TABLE RA_SEIS_ENERGY_TYPE ADD CONSTRAINT RA_SET_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SET_R_ATY_FK'
ALTER TABLE RA_SEIS_ENERGY_TYPE ADD CONSTRAINT RA_SET_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SET_R_LANG_FK'
ALTER TABLE RA_SEIS_ENERGY_TYPE ADD CONSTRAINT RA_SET_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SET_R_SET_FK'
ALTER TABLE RA_SEIS_ENERGY_TYPE ADD CONSTRAINT RA_SET_R_SET_FK FOREIGN KEY
(
SEIS_ENERGY_TYPE
)
REFERENCES R_SEIS_ENERGY_TYPE
(
SEIS_ENERGY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SET_SRCD_FK'
ALTER TABLE RA_SEIS_ENERGY_TYPE ADD CONSTRAINT RA_SET_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDT2_BA_FK'
ALTER TABLE RA_SEIS_FLOW_DESC_TYPE ADD CONSTRAINT RA_SFDT2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDT2_PSWA_FK'
ALTER TABLE RA_SEIS_FLOW_DESC_TYPE ADD CONSTRAINT RA_SFDT2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDT2_R_ART_FK'
ALTER TABLE RA_SEIS_FLOW_DESC_TYPE ADD CONSTRAINT RA_SFDT2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDT2_R_ATY_FK'
ALTER TABLE RA_SEIS_FLOW_DESC_TYPE ADD CONSTRAINT RA_SFDT2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDT2_R_LANG_FK'
ALTER TABLE RA_SEIS_FLOW_DESC_TYPE ADD CONSTRAINT RA_SFDT2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDT2_R_SFDT2_FK'
ALTER TABLE RA_SEIS_FLOW_DESC_TYPE ADD CONSTRAINT RA_SFDT2_R_SFDT2_FK FOREIGN KEY
(
FLOW_DESC_TYPE
)
REFERENCES R_SEIS_FLOW_DESC_TYPE
(
FLOW_DESC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDT2_SRCD_FK'
ALTER TABLE RA_SEIS_FLOW_DESC_TYPE ADD CONSTRAINT RA_SFDT2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SGT_BA_FK'
ALTER TABLE RA_SEIS_GROUP_TYPE ADD CONSTRAINT RA_SGT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SGT_PSWA_FK'
ALTER TABLE RA_SEIS_GROUP_TYPE ADD CONSTRAINT RA_SGT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SGT_R_ART_FK'
ALTER TABLE RA_SEIS_GROUP_TYPE ADD CONSTRAINT RA_SGT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SGT_R_ATY_FK'
ALTER TABLE RA_SEIS_GROUP_TYPE ADD CONSTRAINT RA_SGT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SGT_R_LANG_FK'
ALTER TABLE RA_SEIS_GROUP_TYPE ADD CONSTRAINT RA_SGT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SGT_R_SGT_FK'
ALTER TABLE RA_SEIS_GROUP_TYPE ADD CONSTRAINT RA_SGT_R_SGT_FK FOREIGN KEY
(
SEIS_GROUP_TYPE
)
REFERENCES R_SEIS_GROUP_TYPE
(
SEIS_GROUP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SGT_SRCD_FK'
ALTER TABLE RA_SEIS_GROUP_TYPE ADD CONSTRAINT RA_SGT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SICT_BA_FK'
ALTER TABLE RA_SEIS_INSP_COMPONENT_TYPE ADD CONSTRAINT RA_SICT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SICT_PSWA_FK'
ALTER TABLE RA_SEIS_INSP_COMPONENT_TYPE ADD CONSTRAINT RA_SICT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SICT_R_ART_FK'
ALTER TABLE RA_SEIS_INSP_COMPONENT_TYPE ADD CONSTRAINT RA_SICT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SICT_R_ATY_FK'
ALTER TABLE RA_SEIS_INSP_COMPONENT_TYPE ADD CONSTRAINT RA_SICT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SICT_R_LANG_FK'
ALTER TABLE RA_SEIS_INSP_COMPONENT_TYPE ADD CONSTRAINT RA_SICT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SICT_R_SICT_FK'
ALTER TABLE RA_SEIS_INSP_COMPONENT_TYPE ADD CONSTRAINT RA_SICT_R_SICT_FK FOREIGN KEY
(
SEIS_INSP_COMPONENT_TYPE
)
REFERENCES R_SEIS_INSP_COMPONENT_TYPE
(
SEIS_INSP_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SICT_SRCD_FK'
ALTER TABLE RA_SEIS_INSP_COMPONENT_TYPE ADD CONSTRAINT RA_SICT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLC_BA_FK'
ALTER TABLE RA_SEIS_LIC_COND ADD CONSTRAINT RA_SLC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLC_PSWA_FK'
ALTER TABLE RA_SEIS_LIC_COND ADD CONSTRAINT RA_SLC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLC_R_ART_FK'
ALTER TABLE RA_SEIS_LIC_COND ADD CONSTRAINT RA_SLC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLC_R_ATY_FK'
ALTER TABLE RA_SEIS_LIC_COND ADD CONSTRAINT RA_SLC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLC_R_LANG_FK'
ALTER TABLE RA_SEIS_LIC_COND ADD CONSTRAINT RA_SLC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLC_R_SLC_FK'
ALTER TABLE RA_SEIS_LIC_COND ADD CONSTRAINT RA_SLC_R_SLC_FK FOREIGN KEY
(
CONDITION_TYPE
)
REFERENCES R_SEIS_LIC_COND
(
CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLC_SRCD_FK'
ALTER TABLE RA_SEIS_LIC_COND ADD CONSTRAINT RA_SLC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLCC_BA_FK'
ALTER TABLE RA_SEIS_LIC_COND_CODE ADD CONSTRAINT RA_SLCC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLCC_PSWA_FK'
ALTER TABLE RA_SEIS_LIC_COND_CODE ADD CONSTRAINT RA_SLCC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLCC_R_ART_FK'
ALTER TABLE RA_SEIS_LIC_COND_CODE ADD CONSTRAINT RA_SLCC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLCC_R_ATY_FK'
ALTER TABLE RA_SEIS_LIC_COND_CODE ADD CONSTRAINT RA_SLCC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLCC_R_LANG_FK'
ALTER TABLE RA_SEIS_LIC_COND_CODE ADD CONSTRAINT RA_SLCC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLCC_R_SLC_FK'
ALTER TABLE RA_SEIS_LIC_COND_CODE ADD CONSTRAINT RA_SLCC_R_SLC_FK FOREIGN KEY
(
CONDITION_TYPE
)
REFERENCES R_SEIS_LIC_COND
(
CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLCC_R_SLCC_FK'
ALTER TABLE RA_SEIS_LIC_COND_CODE ADD CONSTRAINT RA_SLCC_R_SLCC_FK FOREIGN KEY
(
CONDITION_TYPE,
CONDITION_CODE
)
REFERENCES R_SEIS_LIC_COND_CODE
(
CONDITION_TYPE,
CONDITION_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLCC_SRCD_FK'
ALTER TABLE RA_SEIS_LIC_COND_CODE ADD CONSTRAINT RA_SLCC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLDC_BA_FK'
ALTER TABLE RA_SEIS_LIC_DUE_CONDITION ADD CONSTRAINT RA_SLDC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLDC_PSWA_FK'
ALTER TABLE RA_SEIS_LIC_DUE_CONDITION ADD CONSTRAINT RA_SLDC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLDC_R_ART_FK'
ALTER TABLE RA_SEIS_LIC_DUE_CONDITION ADD CONSTRAINT RA_SLDC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLDC_R_ATY_FK'
ALTER TABLE RA_SEIS_LIC_DUE_CONDITION ADD CONSTRAINT RA_SLDC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLDC_R_LANG_FK'
ALTER TABLE RA_SEIS_LIC_DUE_CONDITION ADD CONSTRAINT RA_SLDC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLDC_R_SLDC_FK'
ALTER TABLE RA_SEIS_LIC_DUE_CONDITION ADD CONSTRAINT RA_SLDC_R_SLDC_FK FOREIGN KEY
(
DUE_CONDITION
)
REFERENCES R_SEIS_LIC_DUE_CONDITION
(
DUE_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLDC_SRCD_FK'
ALTER TABLE RA_SEIS_LIC_DUE_CONDITION ADD CONSTRAINT RA_SLDC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLVRT_BA_FK'
ALTER TABLE RA_SEIS_LIC_VIOL_RESOL ADD CONSTRAINT RA_SLVRT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLVRT_PSWA_FK'
ALTER TABLE RA_SEIS_LIC_VIOL_RESOL ADD CONSTRAINT RA_SLVRT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLVRT_R_ART_FK'
ALTER TABLE RA_SEIS_LIC_VIOL_RESOL ADD CONSTRAINT RA_SLVRT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLVRT_R_ATY_FK'
ALTER TABLE RA_SEIS_LIC_VIOL_RESOL ADD CONSTRAINT RA_SLVRT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLVRT_R_LANG_FK'
ALTER TABLE RA_SEIS_LIC_VIOL_RESOL ADD CONSTRAINT RA_SLVRT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLVRT_R_SLVRT_FK'
ALTER TABLE RA_SEIS_LIC_VIOL_RESOL ADD CONSTRAINT RA_SLVRT_R_SLVRT_FK FOREIGN KEY
(
RESOLVE_TYPE
)
REFERENCES R_SEIS_LIC_VIOL_RESOL
(
RESOLVE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLVRT_SRCD_FK'
ALTER TABLE RA_SEIS_LIC_VIOL_RESOL ADD CONSTRAINT RA_SLVRT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLVT_BA_FK'
ALTER TABLE RA_SEIS_LIC_VIOL_TYPE ADD CONSTRAINT RA_SLVT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLVT_PSWA_FK'
ALTER TABLE RA_SEIS_LIC_VIOL_TYPE ADD CONSTRAINT RA_SLVT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLVT_R_ART_FK'
ALTER TABLE RA_SEIS_LIC_VIOL_TYPE ADD CONSTRAINT RA_SLVT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLVT_R_ATY_FK'
ALTER TABLE RA_SEIS_LIC_VIOL_TYPE ADD CONSTRAINT RA_SLVT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLVT_R_LANG_FK'
ALTER TABLE RA_SEIS_LIC_VIOL_TYPE ADD CONSTRAINT RA_SLVT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLVT_R_SLVT_FK'
ALTER TABLE RA_SEIS_LIC_VIOL_TYPE ADD CONSTRAINT RA_SLVT_R_SLVT_FK FOREIGN KEY
(
VIOLATION_TYPE
)
REFERENCES R_SEIS_LIC_VIOL_TYPE
(
VIOLATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SLVT_SRCD_FK'
ALTER TABLE RA_SEIS_LIC_VIOL_TYPE ADD CONSTRAINT RA_SLVT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPO_BA_FK'
ALTER TABLE RA_SEIS_PARM_ORIGIN ADD CONSTRAINT RA_SPO_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPO_PSWA_FK'
ALTER TABLE RA_SEIS_PARM_ORIGIN ADD CONSTRAINT RA_SPO_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPO_R_ART_FK'
ALTER TABLE RA_SEIS_PARM_ORIGIN ADD CONSTRAINT RA_SPO_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPO_R_ATY_FK'
ALTER TABLE RA_SEIS_PARM_ORIGIN ADD CONSTRAINT RA_SPO_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPO_R_LANG_FK'
ALTER TABLE RA_SEIS_PARM_ORIGIN ADD CONSTRAINT RA_SPO_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPO_R_SPO_FK'
ALTER TABLE RA_SEIS_PARM_ORIGIN ADD CONSTRAINT RA_SPO_R_SPO_FK FOREIGN KEY
(
PARAMETER_ORIGIN
)
REFERENCES R_SEIS_PARM_ORIGIN
(
PARAMETER_ORIGIN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPO_SRCD_FK'
ALTER TABLE RA_SEIS_PARM_ORIGIN ADD CONSTRAINT RA_SPO_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPT_BA_FK'
ALTER TABLE RA_SEIS_PATCH_TYPE ADD CONSTRAINT RA_SPT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPT_PSWA_FK'
ALTER TABLE RA_SEIS_PATCH_TYPE ADD CONSTRAINT RA_SPT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPT_R_ART_FK'
ALTER TABLE RA_SEIS_PATCH_TYPE ADD CONSTRAINT RA_SPT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPT_R_ATY_FK'
ALTER TABLE RA_SEIS_PATCH_TYPE ADD CONSTRAINT RA_SPT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPT_R_LANG_FK'
ALTER TABLE RA_SEIS_PATCH_TYPE ADD CONSTRAINT RA_SPT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPT_R_SPT_FK'
ALTER TABLE RA_SEIS_PATCH_TYPE ADD CONSTRAINT RA_SPT_R_SPT_FK FOREIGN KEY
(
PATCH_TYPE
)
REFERENCES R_SEIS_PATCH_TYPE
(
PATCH_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPT_SRCD_FK'
ALTER TABLE RA_SEIS_PATCH_TYPE ADD CONSTRAINT RA_SPT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPM_BA_FK'
ALTER TABLE RA_SEIS_PICK_METHOD ADD CONSTRAINT RA_SPM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPM_PSWA_FK'
ALTER TABLE RA_SEIS_PICK_METHOD ADD CONSTRAINT RA_SPM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPM_R_ART_FK'
ALTER TABLE RA_SEIS_PICK_METHOD ADD CONSTRAINT RA_SPM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPM_R_ATY_FK'
ALTER TABLE RA_SEIS_PICK_METHOD ADD CONSTRAINT RA_SPM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPM_R_LANG_FK'
ALTER TABLE RA_SEIS_PICK_METHOD ADD CONSTRAINT RA_SPM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPM_R_SPM_FK'
ALTER TABLE RA_SEIS_PICK_METHOD ADD CONSTRAINT RA_SPM_R_SPM_FK FOREIGN KEY
(
PICK_METHOD
)
REFERENCES R_SEIS_PICK_METHOD
(
PICK_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPM_SRCD_FK'
ALTER TABLE RA_SEIS_PICK_METHOD ADD CONSTRAINT RA_SPM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPCT_BA_FK'
ALTER TABLE RA_SEIS_PROC_COMP_TYPE ADD CONSTRAINT RA_SPCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPCT_PSWA_FK'
ALTER TABLE RA_SEIS_PROC_COMP_TYPE ADD CONSTRAINT RA_SPCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPCT_R_ART_FK'
ALTER TABLE RA_SEIS_PROC_COMP_TYPE ADD CONSTRAINT RA_SPCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPCT_R_ATY_FK'
ALTER TABLE RA_SEIS_PROC_COMP_TYPE ADD CONSTRAINT RA_SPCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPCT_R_LANG_FK'
ALTER TABLE RA_SEIS_PROC_COMP_TYPE ADD CONSTRAINT RA_SPCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPCT_R_SPCT_FK'
ALTER TABLE RA_SEIS_PROC_COMP_TYPE ADD CONSTRAINT RA_SPCT_R_SPCT_FK FOREIGN KEY
(
PROCESSING_COMPONENT_TYPE
)
REFERENCES R_SEIS_PROC_COMP_TYPE
(
PROCESSING_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPCT_SRCD_FK'
ALTER TABLE RA_SEIS_PROC_COMP_TYPE ADD CONSTRAINT RA_SPCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPP_BA_FK'
ALTER TABLE RA_SEIS_PROC_PARM ADD CONSTRAINT RA_SPP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPP_PSWA_FK'
ALTER TABLE RA_SEIS_PROC_PARM ADD CONSTRAINT RA_SPP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPP_R_ART_FK'
ALTER TABLE RA_SEIS_PROC_PARM ADD CONSTRAINT RA_SPP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPP_R_ATY_FK'
ALTER TABLE RA_SEIS_PROC_PARM ADD CONSTRAINT RA_SPP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPP_R_LANG_FK'
ALTER TABLE RA_SEIS_PROC_PARM ADD CONSTRAINT RA_SPP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPP_R_SPP_FK'
ALTER TABLE RA_SEIS_PROC_PARM ADD CONSTRAINT RA_SPP_R_SPP_FK FOREIGN KEY
(
PARAMETER_TYPE
)
REFERENCES R_SEIS_PROC_PARM
(
PARAMETER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPP_SRCD_FK'
ALTER TABLE RA_SEIS_PROC_PARM ADD CONSTRAINT RA_SPP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPST_BA_FK'
ALTER TABLE RA_SEIS_PROC_SET_TYPE ADD CONSTRAINT RA_SPST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPST_PSWA_FK'
ALTER TABLE RA_SEIS_PROC_SET_TYPE ADD CONSTRAINT RA_SPST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPST_R_ART_FK'
ALTER TABLE RA_SEIS_PROC_SET_TYPE ADD CONSTRAINT RA_SPST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPST_R_ATY_FK'
ALTER TABLE RA_SEIS_PROC_SET_TYPE ADD CONSTRAINT RA_SPST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPST_R_LANG_FK'
ALTER TABLE RA_SEIS_PROC_SET_TYPE ADD CONSTRAINT RA_SPST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPST_R_SPST_FK'
ALTER TABLE RA_SEIS_PROC_SET_TYPE ADD CONSTRAINT RA_SPST_R_SPST_FK FOREIGN KEY
(
PROC_SET_TYPE
)
REFERENCES R_SEIS_PROC_SET_TYPE
(
PROC_SET_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPST_SRCD_FK'
ALTER TABLE RA_SEIS_PROC_SET_TYPE ADD CONSTRAINT RA_SPST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPS_BA_FK'
ALTER TABLE RA_SEIS_PROC_STATUS ADD CONSTRAINT RA_SPS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPS_PSWA_FK'
ALTER TABLE RA_SEIS_PROC_STATUS ADD CONSTRAINT RA_SPS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPS_R_ART_FK'
ALTER TABLE RA_SEIS_PROC_STATUS ADD CONSTRAINT RA_SPS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPS_R_ATY_FK'
ALTER TABLE RA_SEIS_PROC_STATUS ADD CONSTRAINT RA_SPS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPS_R_LANG_FK'
ALTER TABLE RA_SEIS_PROC_STATUS ADD CONSTRAINT RA_SPS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPS_R_SPS_FK'
ALTER TABLE RA_SEIS_PROC_STATUS ADD CONSTRAINT RA_SPS_R_SPS_FK FOREIGN KEY
(
PROCESS_STATUS
)
REFERENCES R_SEIS_PROC_STATUS
(
PROCESS_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPS_SRCD_FK'
ALTER TABLE RA_SEIS_PROC_STATUS ADD CONSTRAINT RA_SPS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSPSN_BA_FK'
ALTER TABLE RA_SEIS_PROC_STEP_NAME ADD CONSTRAINT RA_SSPSN_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSPSN_PSWA_FK'
ALTER TABLE RA_SEIS_PROC_STEP_NAME ADD CONSTRAINT RA_SSPSN_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSPSN_R_ART_FK'
ALTER TABLE RA_SEIS_PROC_STEP_NAME ADD CONSTRAINT RA_SSPSN_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSPSN_R_ATY_FK'
ALTER TABLE RA_SEIS_PROC_STEP_NAME ADD CONSTRAINT RA_SSPSN_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSPSN_R_LANG_FK'
ALTER TABLE RA_SEIS_PROC_STEP_NAME ADD CONSTRAINT RA_SSPSN_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSPSN_R_SSPSN_FK'
ALTER TABLE RA_SEIS_PROC_STEP_NAME ADD CONSTRAINT RA_SSPSN_R_SSPSN_FK FOREIGN KEY
(
STEP_NAME
)
REFERENCES R_SEIS_PROC_STEP_NAME
(
STEP_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSPSN_SRCD_FK'
ALTER TABLE RA_SEIS_PROC_STEP_NAME ADD CONSTRAINT RA_SSPSN_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPRST_BA_FK'
ALTER TABLE RA_SEIS_PROC_STEP_TYPE ADD CONSTRAINT RA_SPRST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPRST_PSWA_FK'
ALTER TABLE RA_SEIS_PROC_STEP_TYPE ADD CONSTRAINT RA_SPRST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPRST_R_ART_FK'
ALTER TABLE RA_SEIS_PROC_STEP_TYPE ADD CONSTRAINT RA_SPRST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPRST_R_ATY_FK'
ALTER TABLE RA_SEIS_PROC_STEP_TYPE ADD CONSTRAINT RA_SPRST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPRST_R_LANG_FK'
ALTER TABLE RA_SEIS_PROC_STEP_TYPE ADD CONSTRAINT RA_SPRST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPRST_R_SPRST_FK'
ALTER TABLE RA_SEIS_PROC_STEP_TYPE ADD CONSTRAINT RA_SPRST_R_SPRST_FK FOREIGN KEY
(
STEP_TYPE
)
REFERENCES R_SEIS_PROC_STEP_TYPE
(
STEP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPRST_SRCD_FK'
ALTER TABLE RA_SEIS_PROC_STEP_TYPE ADD CONSTRAINT RA_SPRST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRFT_BA_FK'
ALTER TABLE RA_SEIS_RCRD_FMT_TYPE ADD CONSTRAINT RA_SRFT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRFT_PSWA_FK'
ALTER TABLE RA_SEIS_RCRD_FMT_TYPE ADD CONSTRAINT RA_SRFT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRFT_R_ART_FK'
ALTER TABLE RA_SEIS_RCRD_FMT_TYPE ADD CONSTRAINT RA_SRFT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRFT_R_ATY_FK'
ALTER TABLE RA_SEIS_RCRD_FMT_TYPE ADD CONSTRAINT RA_SRFT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRFT_R_LANG_FK'
ALTER TABLE RA_SEIS_RCRD_FMT_TYPE ADD CONSTRAINT RA_SRFT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRFT_R_SRFT_FK'
ALTER TABLE RA_SEIS_RCRD_FMT_TYPE ADD CONSTRAINT RA_SRFT_R_SRFT_FK FOREIGN KEY
(
SEIS_RCRD_FMT_TYPE
)
REFERENCES R_SEIS_RCRD_FMT_TYPE
(
SEIS_RCRD_FMT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRFT_SRCD_FK'
ALTER TABLE RA_SEIS_RCRD_FMT_TYPE ADD CONSTRAINT RA_SRFT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRM_BA_FK'
ALTER TABLE RA_SEIS_RCRD_MAKE ADD CONSTRAINT RA_SRM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRM_PSWA_FK'
ALTER TABLE RA_SEIS_RCRD_MAKE ADD CONSTRAINT RA_SRM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRM_R_ART_FK'
ALTER TABLE RA_SEIS_RCRD_MAKE ADD CONSTRAINT RA_SRM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRM_R_ATY_FK'
ALTER TABLE RA_SEIS_RCRD_MAKE ADD CONSTRAINT RA_SRM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRM_R_LANG_FK'
ALTER TABLE RA_SEIS_RCRD_MAKE ADD CONSTRAINT RA_SRM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRM_R_SRM_FK'
ALTER TABLE RA_SEIS_RCRD_MAKE ADD CONSTRAINT RA_SRM_R_SRM_FK FOREIGN KEY
(
SEIS_RCRD_MAKE
)
REFERENCES R_SEIS_RCRD_MAKE
(
SEIS_RCRD_MAKE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRM_SRCD_FK'
ALTER TABLE RA_SEIS_RCRD_MAKE ADD CONSTRAINT RA_SRM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRAT_BA_FK'
ALTER TABLE RA_SEIS_RCVR_ARRY_TYPE ADD CONSTRAINT RA_SRAT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRAT_PSWA_FK'
ALTER TABLE RA_SEIS_RCVR_ARRY_TYPE ADD CONSTRAINT RA_SRAT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRAT_R_ART_FK'
ALTER TABLE RA_SEIS_RCVR_ARRY_TYPE ADD CONSTRAINT RA_SRAT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRAT_R_ATY_FK'
ALTER TABLE RA_SEIS_RCVR_ARRY_TYPE ADD CONSTRAINT RA_SRAT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRAT_R_LANG_FK'
ALTER TABLE RA_SEIS_RCVR_ARRY_TYPE ADD CONSTRAINT RA_SRAT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRAT_R_SRAT_FK'
ALTER TABLE RA_SEIS_RCVR_ARRY_TYPE ADD CONSTRAINT RA_SRAT_R_SRAT_FK FOREIGN KEY
(
SEIS_RCVR_ARRAY_TYPE
)
REFERENCES R_SEIS_RCVR_ARRY_TYPE
(
SEIS_RCVR_ARRAY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRAT_SRCD_FK'
ALTER TABLE RA_SEIS_RCVR_ARRY_TYPE ADD CONSTRAINT RA_SRAT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRT_BA_FK'
ALTER TABLE RA_SEIS_RCVR_TYPE ADD CONSTRAINT RA_SRT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRT_PSWA_FK'
ALTER TABLE RA_SEIS_RCVR_TYPE ADD CONSTRAINT RA_SRT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRT_R_ART_FK'
ALTER TABLE RA_SEIS_RCVR_TYPE ADD CONSTRAINT RA_SRT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRT_R_ATY_FK'
ALTER TABLE RA_SEIS_RCVR_TYPE ADD CONSTRAINT RA_SRT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRT_R_LANG_FK'
ALTER TABLE RA_SEIS_RCVR_TYPE ADD CONSTRAINT RA_SRT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRT_R_SRT_FK'
ALTER TABLE RA_SEIS_RCVR_TYPE ADD CONSTRAINT RA_SRT_R_SRT_FK FOREIGN KEY
(
SEIS_RCVR_TYPE
)
REFERENCES R_SEIS_RCVR_TYPE
(
SEIS_RCVR_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRT_SRCD_FK'
ALTER TABLE RA_SEIS_RCVR_TYPE ADD CONSTRAINT RA_SRT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRT1_BA_FK'
ALTER TABLE RA_SEIS_RECORD_TYPE ADD CONSTRAINT RA_SRT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRT1_PSWA_FK'
ALTER TABLE RA_SEIS_RECORD_TYPE ADD CONSTRAINT RA_SRT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRT1_R_ART_FK'
ALTER TABLE RA_SEIS_RECORD_TYPE ADD CONSTRAINT RA_SRT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRT1_R_ATY_FK'
ALTER TABLE RA_SEIS_RECORD_TYPE ADD CONSTRAINT RA_SRT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRT1_R_LANG_FK'
ALTER TABLE RA_SEIS_RECORD_TYPE ADD CONSTRAINT RA_SRT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRT1_R_SRT1_FK'
ALTER TABLE RA_SEIS_RECORD_TYPE ADD CONSTRAINT RA_SRT1_R_SRT1_FK FOREIGN KEY
(
RECORD_TYPE
)
REFERENCES R_SEIS_RECORD_TYPE
(
RECORD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRT1_SRCD_FK'
ALTER TABLE RA_SEIS_RECORD_TYPE ADD CONSTRAINT RA_SRT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRD_BA_FK'
ALTER TABLE RA_SEIS_REF_DATUM ADD CONSTRAINT RA_SRD_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRD_PSWA_FK'
ALTER TABLE RA_SEIS_REF_DATUM ADD CONSTRAINT RA_SRD_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRD_R_ART_FK'
ALTER TABLE RA_SEIS_REF_DATUM ADD CONSTRAINT RA_SRD_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRD_R_ATY_FK'
ALTER TABLE RA_SEIS_REF_DATUM ADD CONSTRAINT RA_SRD_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRD_R_LANG_FK'
ALTER TABLE RA_SEIS_REF_DATUM ADD CONSTRAINT RA_SRD_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRD_R_SRD_FK'
ALTER TABLE RA_SEIS_REF_DATUM ADD CONSTRAINT RA_SRD_R_SRD_FK FOREIGN KEY
(
REFERENCE_DATUM
)
REFERENCES R_SEIS_REF_DATUM
(
REFERENCE_DATUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRD_SRCD_FK'
ALTER TABLE RA_SEIS_REF_DATUM ADD CONSTRAINT RA_SRD_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRNT_BA_FK'
ALTER TABLE RA_SEIS_REF_NUM_TYPE ADD CONSTRAINT RA_SRNT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRNT_PSWA_FK'
ALTER TABLE RA_SEIS_REF_NUM_TYPE ADD CONSTRAINT RA_SRNT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRNT_R_ART_FK'
ALTER TABLE RA_SEIS_REF_NUM_TYPE ADD CONSTRAINT RA_SRNT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRNT_R_ATY_FK'
ALTER TABLE RA_SEIS_REF_NUM_TYPE ADD CONSTRAINT RA_SRNT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRNT_R_LANG_FK'
ALTER TABLE RA_SEIS_REF_NUM_TYPE ADD CONSTRAINT RA_SRNT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRNT_R_SRNT_FK'
ALTER TABLE RA_SEIS_REF_NUM_TYPE ADD CONSTRAINT RA_SRNT_R_SRNT_FK FOREIGN KEY
(
REPORTED_REF_NUM_TYPE
)
REFERENCES R_SEIS_REF_NUM_TYPE
(
REPORTED_REF_NUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SRNT_SRCD_FK'
ALTER TABLE RA_SEIS_REF_NUM_TYPE ADD CONSTRAINT RA_SRNT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST_BA_FK'
ALTER TABLE RA_SEIS_SAMPLE_TYPE ADD CONSTRAINT RA_SST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST_PSWA_FK'
ALTER TABLE RA_SEIS_SAMPLE_TYPE ADD CONSTRAINT RA_SST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST_R_ART_FK'
ALTER TABLE RA_SEIS_SAMPLE_TYPE ADD CONSTRAINT RA_SST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST_R_ATY_FK'
ALTER TABLE RA_SEIS_SAMPLE_TYPE ADD CONSTRAINT RA_SST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST_R_LANG_FK'
ALTER TABLE RA_SEIS_SAMPLE_TYPE ADD CONSTRAINT RA_SST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST_R_SST_FK'
ALTER TABLE RA_SEIS_SAMPLE_TYPE ADD CONSTRAINT RA_SST_R_SST_FK FOREIGN KEY
(
SAMPLE_TYPE
)
REFERENCES R_SEIS_SAMPLE_TYPE
(
SAMPLE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST_SRCD_FK'
ALTER TABLE RA_SEIS_SAMPLE_TYPE ADD CONSTRAINT RA_SST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSR_BA_FK'
ALTER TABLE RA_SEIS_SEGMENT_REASON ADD CONSTRAINT RA_SSR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSR_PSWA_FK'
ALTER TABLE RA_SEIS_SEGMENT_REASON ADD CONSTRAINT RA_SSR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSR_R_ART_FK'
ALTER TABLE RA_SEIS_SEGMENT_REASON ADD CONSTRAINT RA_SSR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSR_R_ATY_FK'
ALTER TABLE RA_SEIS_SEGMENT_REASON ADD CONSTRAINT RA_SSR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSR_R_LANG_FK'
ALTER TABLE RA_SEIS_SEGMENT_REASON ADD CONSTRAINT RA_SSR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSR_R_SSR_FK'
ALTER TABLE RA_SEIS_SEGMENT_REASON ADD CONSTRAINT RA_SSR_R_SSR_FK FOREIGN KEY
(
SEIS_SEGMENT_REASON
)
REFERENCES R_SEIS_SEGMENT_REASON
(
SEIS_SEGMENT_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSR_SRCD_FK'
ALTER TABLE RA_SEIS_SEGMENT_REASON ADD CONSTRAINT RA_SSR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSCT_BA_FK'
ALTER TABLE RA_SEIS_SET_COMPONENT_TYPE ADD CONSTRAINT RA_SSCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSCT_PSWA_FK'
ALTER TABLE RA_SEIS_SET_COMPONENT_TYPE ADD CONSTRAINT RA_SSCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSCT_R_ART_FK'
ALTER TABLE RA_SEIS_SET_COMPONENT_TYPE ADD CONSTRAINT RA_SSCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSCT_R_ATY_FK'
ALTER TABLE RA_SEIS_SET_COMPONENT_TYPE ADD CONSTRAINT RA_SSCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSCT_R_LANG_FK'
ALTER TABLE RA_SEIS_SET_COMPONENT_TYPE ADD CONSTRAINT RA_SSCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSCT_R_SSCT_FK'
ALTER TABLE RA_SEIS_SET_COMPONENT_TYPE ADD CONSTRAINT RA_SSCT_R_SSCT_FK FOREIGN KEY
(
SEIS_SET_COMPONENT_TYPE
)
REFERENCES R_SEIS_SET_COMPONENT_TYPE
(
SEIS_SET_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSCT_SRCD_FK'
ALTER TABLE RA_SEIS_SET_COMPONENT_TYPE ADD CONSTRAINT RA_SSCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST1_BA_FK'
ALTER TABLE RA_SEIS_SPECTRUM_TYPE ADD CONSTRAINT RA_SST1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST1_PSWA_FK'
ALTER TABLE RA_SEIS_SPECTRUM_TYPE ADD CONSTRAINT RA_SST1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST1_R_ART_FK'
ALTER TABLE RA_SEIS_SPECTRUM_TYPE ADD CONSTRAINT RA_SST1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST1_R_ATY_FK'
ALTER TABLE RA_SEIS_SPECTRUM_TYPE ADD CONSTRAINT RA_SST1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST1_R_LANG_FK'
ALTER TABLE RA_SEIS_SPECTRUM_TYPE ADD CONSTRAINT RA_SST1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST1_R_SST1_FK'
ALTER TABLE RA_SEIS_SPECTRUM_TYPE ADD CONSTRAINT RA_SST1_R_SST1_FK FOREIGN KEY
(
SEIS_SPECTRUM_TYPE
)
REFERENCES R_SEIS_SPECTRUM_TYPE
(
SEIS_SPECTRUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST1_SRCD_FK'
ALTER TABLE RA_SEIS_SPECTRUM_TYPE ADD CONSTRAINT RA_SST1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSAT_BA_FK'
ALTER TABLE RA_SEIS_SRC_ARRAY_TYPE ADD CONSTRAINT RA_SSAT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSAT_PSWA_FK'
ALTER TABLE RA_SEIS_SRC_ARRAY_TYPE ADD CONSTRAINT RA_SSAT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSAT_R_ART_FK'
ALTER TABLE RA_SEIS_SRC_ARRAY_TYPE ADD CONSTRAINT RA_SSAT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSAT_R_ATY_FK'
ALTER TABLE RA_SEIS_SRC_ARRAY_TYPE ADD CONSTRAINT RA_SSAT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSAT_R_LANG_FK'
ALTER TABLE RA_SEIS_SRC_ARRAY_TYPE ADD CONSTRAINT RA_SSAT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSAT_R_SSAT_FK'
ALTER TABLE RA_SEIS_SRC_ARRAY_TYPE ADD CONSTRAINT RA_SSAT_R_SSAT_FK FOREIGN KEY
(
SEIS_SRC_ARRAY_TYPE
)
REFERENCES R_SEIS_SRC_ARRAY_TYPE
(
SEIS_SRC_ARRAY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSAT_SRCD_FK'
ALTER TABLE RA_SEIS_SRC_ARRAY_TYPE ADD CONSTRAINT RA_SSAT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSM_BA_FK'
ALTER TABLE RA_SEIS_SRC_MAKE ADD CONSTRAINT RA_SSM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSM_PSWA_FK'
ALTER TABLE RA_SEIS_SRC_MAKE ADD CONSTRAINT RA_SSM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSM_R_ART_FK'
ALTER TABLE RA_SEIS_SRC_MAKE ADD CONSTRAINT RA_SSM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSM_R_ATY_FK'
ALTER TABLE RA_SEIS_SRC_MAKE ADD CONSTRAINT RA_SSM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSM_R_LANG_FK'
ALTER TABLE RA_SEIS_SRC_MAKE ADD CONSTRAINT RA_SSM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSM_R_SSM_FK'
ALTER TABLE RA_SEIS_SRC_MAKE ADD CONSTRAINT RA_SSM_R_SSM_FK FOREIGN KEY
(
SEIS_SRC_MAKE
)
REFERENCES R_SEIS_SRC_MAKE
(
SEIS_SRC_MAKE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSM_SRCD_FK'
ALTER TABLE RA_SEIS_SRC_MAKE ADD CONSTRAINT RA_SSM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST2_BA_FK'
ALTER TABLE RA_SEIS_STATION_TYPE ADD CONSTRAINT RA_SST2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST2_PSWA_FK'
ALTER TABLE RA_SEIS_STATION_TYPE ADD CONSTRAINT RA_SST2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST2_R_ART_FK'
ALTER TABLE RA_SEIS_STATION_TYPE ADD CONSTRAINT RA_SST2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST2_R_ATY_FK'
ALTER TABLE RA_SEIS_STATION_TYPE ADD CONSTRAINT RA_SST2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST2_R_LANG_FK'
ALTER TABLE RA_SEIS_STATION_TYPE ADD CONSTRAINT RA_SST2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST2_R_SST2_FK'
ALTER TABLE RA_SEIS_STATION_TYPE ADD CONSTRAINT RA_SST2_R_SST2_FK FOREIGN KEY
(
SEIS_STATION_TYPE
)
REFERENCES R_SEIS_STATION_TYPE
(
SEIS_STATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST2_SRCD_FK'
ALTER TABLE RA_SEIS_STATION_TYPE ADD CONSTRAINT RA_SST2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SS2_BA_FK'
ALTER TABLE RA_SEIS_STATUS ADD CONSTRAINT RA_SS2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SS2_PSWA_FK'
ALTER TABLE RA_SEIS_STATUS ADD CONSTRAINT RA_SS2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SS2_R_ART_FK'
ALTER TABLE RA_SEIS_STATUS ADD CONSTRAINT RA_SS2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SS2_R_ATY_FK'
ALTER TABLE RA_SEIS_STATUS ADD CONSTRAINT RA_SS2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SS2_R_LANG_FK'
ALTER TABLE RA_SEIS_STATUS ADD CONSTRAINT RA_SS2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SS2_R_SS2_FK'
ALTER TABLE RA_SEIS_STATUS ADD CONSTRAINT RA_SS2_R_SS2_FK FOREIGN KEY
(
SEIS_STATUS
)
REFERENCES R_SEIS_STATUS
(
SEIS_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SS2_SRCD_FK'
ALTER TABLE RA_SEIS_STATUS ADD CONSTRAINT RA_SS2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST3_BA_FK'
ALTER TABLE RA_SEIS_STATUS_TYPE ADD CONSTRAINT RA_SST3_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST3_PSWA_FK'
ALTER TABLE RA_SEIS_STATUS_TYPE ADD CONSTRAINT RA_SST3_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST3_R_ART_FK'
ALTER TABLE RA_SEIS_STATUS_TYPE ADD CONSTRAINT RA_SST3_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST3_R_ATY_FK'
ALTER TABLE RA_SEIS_STATUS_TYPE ADD CONSTRAINT RA_SST3_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST3_R_LANG_FK'
ALTER TABLE RA_SEIS_STATUS_TYPE ADD CONSTRAINT RA_SST3_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST3_R_SST3_FK'
ALTER TABLE RA_SEIS_STATUS_TYPE ADD CONSTRAINT RA_SST3_R_SST3_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_SEIS_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST3_SRCD_FK'
ALTER TABLE RA_SEIS_STATUS_TYPE ADD CONSTRAINT RA_SST3_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST5_BA_FK'
ALTER TABLE RA_SEIS_SUMMARY_TYPE ADD CONSTRAINT RA_SST5_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST5_PSWA_FK'
ALTER TABLE RA_SEIS_SUMMARY_TYPE ADD CONSTRAINT RA_SST5_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST5_R_ART_FK'
ALTER TABLE RA_SEIS_SUMMARY_TYPE ADD CONSTRAINT RA_SST5_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST5_R_ATY_FK'
ALTER TABLE RA_SEIS_SUMMARY_TYPE ADD CONSTRAINT RA_SST5_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST5_R_LANG_FK'
ALTER TABLE RA_SEIS_SUMMARY_TYPE ADD CONSTRAINT RA_SST5_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST5_R_SST5_FK'
ALTER TABLE RA_SEIS_SUMMARY_TYPE ADD CONSTRAINT RA_SST5_R_SST5_FK FOREIGN KEY
(
SUMMARY_TYPE
)
REFERENCES R_SEIS_SUMMARY_TYPE
(
SUMMARY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST5_SRCD_FK'
ALTER TABLE RA_SEIS_SUMMARY_TYPE ADD CONSTRAINT RA_SST5_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST4_BA_FK'
ALTER TABLE RA_SEIS_SWEEP_TYPE ADD CONSTRAINT RA_SST4_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST4_PSWA_FK'
ALTER TABLE RA_SEIS_SWEEP_TYPE ADD CONSTRAINT RA_SST4_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST4_R_ART_FK'
ALTER TABLE RA_SEIS_SWEEP_TYPE ADD CONSTRAINT RA_SST4_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST4_R_ATY_FK'
ALTER TABLE RA_SEIS_SWEEP_TYPE ADD CONSTRAINT RA_SST4_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST4_R_LANG_FK'
ALTER TABLE RA_SEIS_SWEEP_TYPE ADD CONSTRAINT RA_SST4_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST4_R_SST4_FK'
ALTER TABLE RA_SEIS_SWEEP_TYPE ADD CONSTRAINT RA_SST4_R_SST4_FK FOREIGN KEY
(
SEIS_SWEEP_TYPE
)
REFERENCES R_SEIS_SWEEP_TYPE
(
SEIS_SWEEP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SST4_SRCD_FK'
ALTER TABLE RA_SEIS_SWEEP_TYPE ADD CONSTRAINT RA_SST4_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STCT_BA_FK'
ALTER TABLE RA_SEIS_TRANS_COMP_TYPE ADD CONSTRAINT RA_STCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STCT_PSWA_FK'
ALTER TABLE RA_SEIS_TRANS_COMP_TYPE ADD CONSTRAINT RA_STCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STCT_R_ART_FK'
ALTER TABLE RA_SEIS_TRANS_COMP_TYPE ADD CONSTRAINT RA_STCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STCT_R_ATY_FK'
ALTER TABLE RA_SEIS_TRANS_COMP_TYPE ADD CONSTRAINT RA_STCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STCT_R_LANG_FK'
ALTER TABLE RA_SEIS_TRANS_COMP_TYPE ADD CONSTRAINT RA_STCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STCT_R_STCT_FK'
ALTER TABLE RA_SEIS_TRANS_COMP_TYPE ADD CONSTRAINT RA_STCT_R_STCT_FK FOREIGN KEY
(
SEIS_TRANS_COMPONENT_TYPE
)
REFERENCES R_SEIS_TRANS_COMP_TYPE
(
SEIS_TRANS_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STCT_SRCD_FK'
ALTER TABLE RA_SEIS_TRANS_COMP_TYPE ADD CONSTRAINT RA_STCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SM_BA_FK'
ALTER TABLE RA_SEND_METHOD ADD CONSTRAINT RA_SM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SM_PSWA_FK'
ALTER TABLE RA_SEND_METHOD ADD CONSTRAINT RA_SM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SM_R_ART_FK'
ALTER TABLE RA_SEND_METHOD ADD CONSTRAINT RA_SM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SM_R_ATY_FK'
ALTER TABLE RA_SEND_METHOD ADD CONSTRAINT RA_SM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SM_R_LANG_FK'
ALTER TABLE RA_SEND_METHOD ADD CONSTRAINT RA_SM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SM_R_SM_FK'
ALTER TABLE RA_SEND_METHOD ADD CONSTRAINT RA_SM_R_SM_FK FOREIGN KEY
(
SEND_METHOD
)
REFERENCES R_SEND_METHOD
(
SEND_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SM_SRCD_FK'
ALTER TABLE RA_SEND_METHOD ADD CONSTRAINT RA_SM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SQ_BA_FK'
ALTER TABLE RA_SERVICE_QUALITY ADD CONSTRAINT RA_SQ_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SQ_PSWA_FK'
ALTER TABLE RA_SERVICE_QUALITY ADD CONSTRAINT RA_SQ_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SQ_R_ART_FK'
ALTER TABLE RA_SERVICE_QUALITY ADD CONSTRAINT RA_SQ_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SQ_R_ATY_FK'
ALTER TABLE RA_SERVICE_QUALITY ADD CONSTRAINT RA_SQ_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SQ_R_LANG_FK'
ALTER TABLE RA_SERVICE_QUALITY ADD CONSTRAINT RA_SQ_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SQ_R_SQ_FK'
ALTER TABLE RA_SERVICE_QUALITY ADD CONSTRAINT RA_SQ_R_SQ_FK FOREIGN KEY
(
SERVICE_QUALITY
)
REFERENCES R_SERVICE_QUALITY
(
SERVICE_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SQ_SRCD_FK'
ALTER TABLE RA_SERVICE_QUALITY ADD CONSTRAINT RA_SQ_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SV_BA_FK'
ALTER TABLE RA_SEVERITY ADD CONSTRAINT RA_SV_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SV_PSWA_FK'
ALTER TABLE RA_SEVERITY ADD CONSTRAINT RA_SV_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SV_R_ART_FK'
ALTER TABLE RA_SEVERITY ADD CONSTRAINT RA_SV_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SV_R_ATY_FK'
ALTER TABLE RA_SEVERITY ADD CONSTRAINT RA_SV_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SV_R_LANG_FK'
ALTER TABLE RA_SEVERITY ADD CONSTRAINT RA_SV_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SV_R_SV_FK'
ALTER TABLE RA_SEVERITY ADD CONSTRAINT RA_SV_R_SV_FK FOREIGN KEY
(
SEVERITY
)
REFERENCES R_SEVERITY
(
SEVERITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SV_SRCD_FK'
ALTER TABLE RA_SEVERITY ADD CONSTRAINT RA_SV_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFAT_BA_FK'
ALTER TABLE RA_SF_AIRSTRIP_TYPE ADD CONSTRAINT RA_SFAT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFAT_PSWA_FK'
ALTER TABLE RA_SF_AIRSTRIP_TYPE ADD CONSTRAINT RA_SFAT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFAT_R_ART_FK'
ALTER TABLE RA_SF_AIRSTRIP_TYPE ADD CONSTRAINT RA_SFAT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFAT_R_ATY_FK'
ALTER TABLE RA_SF_AIRSTRIP_TYPE ADD CONSTRAINT RA_SFAT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFAT_R_LANG_FK'
ALTER TABLE RA_SF_AIRSTRIP_TYPE ADD CONSTRAINT RA_SFAT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFAT_R_SFAT_FK'
ALTER TABLE RA_SF_AIRSTRIP_TYPE ADD CONSTRAINT RA_SFAT_R_SFAT_FK FOREIGN KEY
(
AIRSTRIP_TYPE
)
REFERENCES R_SF_AIRSTRIP_TYPE
(
AIRSTRIP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFAT_SRCD_FK'
ALTER TABLE RA_SF_AIRSTRIP_TYPE ADD CONSTRAINT RA_SFAT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFBT_BA_FK'
ALTER TABLE RA_SF_BRIDGE_TYPE ADD CONSTRAINT RA_SFBT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFBT_PSWA_FK'
ALTER TABLE RA_SF_BRIDGE_TYPE ADD CONSTRAINT RA_SFBT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFBT_R_ART_FK'
ALTER TABLE RA_SF_BRIDGE_TYPE ADD CONSTRAINT RA_SFBT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFBT_R_ATY_FK'
ALTER TABLE RA_SF_BRIDGE_TYPE ADD CONSTRAINT RA_SFBT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFBT_R_LANG_FK'
ALTER TABLE RA_SF_BRIDGE_TYPE ADD CONSTRAINT RA_SFBT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFBT_R_SFBT_FK'
ALTER TABLE RA_SF_BRIDGE_TYPE ADD CONSTRAINT RA_SFBT_R_SFBT_FK FOREIGN KEY
(
BRIDGE_TYPE
)
REFERENCES R_SF_BRIDGE_TYPE
(
BRIDGE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFBT_SRCD_FK'
ALTER TABLE RA_SF_BRIDGE_TYPE ADD CONSTRAINT RA_SFBT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFCT_BA_FK'
ALTER TABLE RA_SF_COMPONENT_TYPE ADD CONSTRAINT RA_SFCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFCT_PSWA_FK'
ALTER TABLE RA_SF_COMPONENT_TYPE ADD CONSTRAINT RA_SFCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFCT_R_ART_FK'
ALTER TABLE RA_SF_COMPONENT_TYPE ADD CONSTRAINT RA_SFCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFCT_R_ATY_FK'
ALTER TABLE RA_SF_COMPONENT_TYPE ADD CONSTRAINT RA_SFCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFCT_R_LANG_FK'
ALTER TABLE RA_SF_COMPONENT_TYPE ADD CONSTRAINT RA_SFCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFCT_R_SFCT_FK'
ALTER TABLE RA_SF_COMPONENT_TYPE ADD CONSTRAINT RA_SFCT_R_SFCT_FK FOREIGN KEY
(
SF_COMPONENT_TYPE
)
REFERENCES R_SF_COMPONENT_TYPE
(
SF_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFCT_SRCD_FK'
ALTER TABLE RA_SF_COMPONENT_TYPE ADD CONSTRAINT RA_SFCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDT1_BA_FK'
ALTER TABLE RA_SF_DESC_TYPE ADD CONSTRAINT RA_SFDT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDT1_PSWA_FK'
ALTER TABLE RA_SF_DESC_TYPE ADD CONSTRAINT RA_SFDT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDT1_R_ART_FK'
ALTER TABLE RA_SF_DESC_TYPE ADD CONSTRAINT RA_SFDT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDT1_R_ATY_FK'
ALTER TABLE RA_SF_DESC_TYPE ADD CONSTRAINT RA_SFDT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDT1_R_LANG_FK'
ALTER TABLE RA_SF_DESC_TYPE ADD CONSTRAINT RA_SFDT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDT1_R_SFDT1_FK'
ALTER TABLE RA_SF_DESC_TYPE ADD CONSTRAINT RA_SFDT1_R_SFDT1_FK FOREIGN KEY
(
DESC_TYPE
)
REFERENCES R_SF_DESC_TYPE
(
DESC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDT1_SRCD_FK'
ALTER TABLE RA_SF_DESC_TYPE ADD CONSTRAINT RA_SFDT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDV_BA_FK'
ALTER TABLE RA_SF_DESC_VALUE ADD CONSTRAINT RA_SFDV_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDV_PSWA_FK'
ALTER TABLE RA_SF_DESC_VALUE ADD CONSTRAINT RA_SFDV_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDV_R_ART_FK'
ALTER TABLE RA_SF_DESC_VALUE ADD CONSTRAINT RA_SFDV_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDV_R_ATY_FK'
ALTER TABLE RA_SF_DESC_VALUE ADD CONSTRAINT RA_SFDV_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDV_R_LANG_FK'
ALTER TABLE RA_SF_DESC_VALUE ADD CONSTRAINT RA_SFDV_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDV_R_SFDT1_FK'
ALTER TABLE RA_SF_DESC_VALUE ADD CONSTRAINT RA_SFDV_R_SFDT1_FK FOREIGN KEY
(
DESC_TYPE
)
REFERENCES R_SF_DESC_TYPE
(
DESC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDV_R_SFDV_FK'
ALTER TABLE RA_SF_DESC_VALUE ADD CONSTRAINT RA_SFDV_R_SFDV_FK FOREIGN KEY
(
DESC_TYPE,
VALUE_CODE
)
REFERENCES R_SF_DESC_VALUE
(
DESC_TYPE,
VALUE_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDV_SRCD_FK'
ALTER TABLE RA_SF_DESC_VALUE ADD CONSTRAINT RA_SFDV_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDT_BA_FK'
ALTER TABLE RA_SF_DOCK_TYPE ADD CONSTRAINT RA_SFDT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDT_PSWA_FK'
ALTER TABLE RA_SF_DOCK_TYPE ADD CONSTRAINT RA_SFDT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDT_R_ART_FK'
ALTER TABLE RA_SF_DOCK_TYPE ADD CONSTRAINT RA_SFDT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDT_R_ATY_FK'
ALTER TABLE RA_SF_DOCK_TYPE ADD CONSTRAINT RA_SFDT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDT_R_LANG_FK'
ALTER TABLE RA_SF_DOCK_TYPE ADD CONSTRAINT RA_SFDT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDT_R_SFDT_FK'
ALTER TABLE RA_SF_DOCK_TYPE ADD CONSTRAINT RA_SFDT_R_SFDT_FK FOREIGN KEY
(
DOCK_TYPE
)
REFERENCES R_SF_DOCK_TYPE
(
DOCK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFDT_SRCD_FK'
ALTER TABLE RA_SF_DOCK_TYPE ADD CONSTRAINT RA_SFDT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFET_BA_FK'
ALTER TABLE RA_SF_ELECTRIC_TYPE ADD CONSTRAINT RA_SFET_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFET_PSWA_FK'
ALTER TABLE RA_SF_ELECTRIC_TYPE ADD CONSTRAINT RA_SFET_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFET_R_ART_FK'
ALTER TABLE RA_SF_ELECTRIC_TYPE ADD CONSTRAINT RA_SFET_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFET_R_ATY_FK'
ALTER TABLE RA_SF_ELECTRIC_TYPE ADD CONSTRAINT RA_SFET_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFET_R_LANG_FK'
ALTER TABLE RA_SF_ELECTRIC_TYPE ADD CONSTRAINT RA_SFET_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFET_R_SFET_FK'
ALTER TABLE RA_SF_ELECTRIC_TYPE ADD CONSTRAINT RA_SFET_R_SFET_FK FOREIGN KEY
(
ELECTRIC_FACILITY_TYPE
)
REFERENCES R_SF_ELECTRIC_TYPE
(
ELECTRIC_FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFET_SRCD_FK'
ALTER TABLE RA_SF_ELECTRIC_TYPE ADD CONSTRAINT RA_SFET_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFLT_BA_FK'
ALTER TABLE RA_SF_LANDING_TYPE ADD CONSTRAINT RA_SFLT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFLT_PSWA_FK'
ALTER TABLE RA_SF_LANDING_TYPE ADD CONSTRAINT RA_SFLT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFLT_R_ART_FK'
ALTER TABLE RA_SF_LANDING_TYPE ADD CONSTRAINT RA_SFLT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFLT_R_ATY_FK'
ALTER TABLE RA_SF_LANDING_TYPE ADD CONSTRAINT RA_SFLT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFLT_R_LANG_FK'
ALTER TABLE RA_SF_LANDING_TYPE ADD CONSTRAINT RA_SFLT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFLT_R_SFLT_FK'
ALTER TABLE RA_SF_LANDING_TYPE ADD CONSTRAINT RA_SFLT_R_SFLT_FK FOREIGN KEY
(
LANDING_TYPE
)
REFERENCES R_SF_LANDING_TYPE
(
LANDING_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFLT_SRCD_FK'
ALTER TABLE RA_SF_LANDING_TYPE ADD CONSTRAINT RA_SFLT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFMT_BA_FK'
ALTER TABLE RA_SF_MAINTAIN_TYPE ADD CONSTRAINT RA_SFMT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFMT_PSWA_FK'
ALTER TABLE RA_SF_MAINTAIN_TYPE ADD CONSTRAINT RA_SFMT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFMT_R_ART_FK'
ALTER TABLE RA_SF_MAINTAIN_TYPE ADD CONSTRAINT RA_SFMT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFMT_R_ATY_FK'
ALTER TABLE RA_SF_MAINTAIN_TYPE ADD CONSTRAINT RA_SFMT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFMT_R_LANG_FK'
ALTER TABLE RA_SF_MAINTAIN_TYPE ADD CONSTRAINT RA_SFMT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFMT_R_SFMT_FK'
ALTER TABLE RA_SF_MAINTAIN_TYPE ADD CONSTRAINT RA_SFMT_R_SFMT_FK FOREIGN KEY
(
SF_SUBTYPE,
MAINTAIN_TYPE
)
REFERENCES R_SF_MAINTAIN_TYPE
(
SF_SUBTYPE,
MAINTAIN_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFMT_SRCD_FK'
ALTER TABLE RA_SF_MAINTAIN_TYPE ADD CONSTRAINT RA_SFMT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFPT_BA_FK'
ALTER TABLE RA_SF_PAD_TYPE ADD CONSTRAINT RA_SFPT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFPT_PSWA_FK'
ALTER TABLE RA_SF_PAD_TYPE ADD CONSTRAINT RA_SFPT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFPT_R_ART_FK'
ALTER TABLE RA_SF_PAD_TYPE ADD CONSTRAINT RA_SFPT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFPT_R_ATY_FK'
ALTER TABLE RA_SF_PAD_TYPE ADD CONSTRAINT RA_SFPT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFPT_R_LANG_FK'
ALTER TABLE RA_SF_PAD_TYPE ADD CONSTRAINT RA_SFPT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFPT_R_SFPT_FK'
ALTER TABLE RA_SF_PAD_TYPE ADD CONSTRAINT RA_SFPT_R_SFPT_FK FOREIGN KEY
(
PAD_TYPE
)
REFERENCES R_SF_PAD_TYPE
(
PAD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFPT_SRCD_FK'
ALTER TABLE RA_SF_PAD_TYPE ADD CONSTRAINT RA_SFPT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFRT_BA_FK'
ALTER TABLE RA_SF_ROAD_TYPE ADD CONSTRAINT RA_SFRT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFRT_PSWA_FK'
ALTER TABLE RA_SF_ROAD_TYPE ADD CONSTRAINT RA_SFRT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFRT_R_ART_FK'
ALTER TABLE RA_SF_ROAD_TYPE ADD CONSTRAINT RA_SFRT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFRT_R_ATY_FK'
ALTER TABLE RA_SF_ROAD_TYPE ADD CONSTRAINT RA_SFRT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFRT_R_LANG_FK'
ALTER TABLE RA_SF_ROAD_TYPE ADD CONSTRAINT RA_SFRT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFRT_R_SFRT_FK'
ALTER TABLE RA_SF_ROAD_TYPE ADD CONSTRAINT RA_SFRT_R_SFRT_FK FOREIGN KEY
(
ROAD_TYPE
)
REFERENCES R_SF_ROAD_TYPE
(
ROAD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFRT_SRCD_FK'
ALTER TABLE RA_SF_ROAD_TYPE ADD CONSTRAINT RA_SFRT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFS_BA_FK'
ALTER TABLE RA_SF_STATUS ADD CONSTRAINT RA_SFS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFS_PSWA_FK'
ALTER TABLE RA_SF_STATUS ADD CONSTRAINT RA_SFS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFS_R_ART_FK'
ALTER TABLE RA_SF_STATUS ADD CONSTRAINT RA_SFS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFS_R_ATY_FK'
ALTER TABLE RA_SF_STATUS ADD CONSTRAINT RA_SFS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFS_R_LANG_FK'
ALTER TABLE RA_SF_STATUS ADD CONSTRAINT RA_SFS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFS_R_SFS_FK'
ALTER TABLE RA_SF_STATUS ADD CONSTRAINT RA_SFS_R_SFS_FK FOREIGN KEY
(
STATUS
)
REFERENCES R_SF_STATUS
(
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFS_SRCD_FK'
ALTER TABLE RA_SF_STATUS ADD CONSTRAINT RA_SFS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFST_BA_FK'
ALTER TABLE RA_SF_STATUS_TYPE ADD CONSTRAINT RA_SFST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFST_PSWA_FK'
ALTER TABLE RA_SF_STATUS_TYPE ADD CONSTRAINT RA_SFST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFST_R_ART_FK'
ALTER TABLE RA_SF_STATUS_TYPE ADD CONSTRAINT RA_SFST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFST_R_ATY_FK'
ALTER TABLE RA_SF_STATUS_TYPE ADD CONSTRAINT RA_SFST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFST_R_LANG_FK'
ALTER TABLE RA_SF_STATUS_TYPE ADD CONSTRAINT RA_SFST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFST_R_SFST_FK'
ALTER TABLE RA_SF_STATUS_TYPE ADD CONSTRAINT RA_SFST_R_SFST_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_SF_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFST_SRCD_FK'
ALTER TABLE RA_SF_STATUS_TYPE ADD CONSTRAINT RA_SFST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFST1_BA_FK'
ALTER TABLE RA_SF_SURFACE_TYPE ADD CONSTRAINT RA_SFST1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFST1_PSWA_FK'
ALTER TABLE RA_SF_SURFACE_TYPE ADD CONSTRAINT RA_SFST1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFST1_R_ART_FK'
ALTER TABLE RA_SF_SURFACE_TYPE ADD CONSTRAINT RA_SFST1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFST1_R_ATY_FK'
ALTER TABLE RA_SF_SURFACE_TYPE ADD CONSTRAINT RA_SFST1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFST1_R_LANG_FK'
ALTER TABLE RA_SF_SURFACE_TYPE ADD CONSTRAINT RA_SFST1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFST1_R_SFST1_FK'
ALTER TABLE RA_SF_SURFACE_TYPE ADD CONSTRAINT RA_SFST1_R_SFST1_FK FOREIGN KEY
(
SURFACE_TYPE
)
REFERENCES R_SF_SURFACE_TYPE
(
SURFACE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFST1_SRCD_FK'
ALTER TABLE RA_SF_SURFACE_TYPE ADD CONSTRAINT RA_SFST1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFTT_BA_FK'
ALTER TABLE RA_SF_TOWER_TYPE ADD CONSTRAINT RA_SFTT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFTT_PSWA_FK'
ALTER TABLE RA_SF_TOWER_TYPE ADD CONSTRAINT RA_SFTT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFTT_R_ART_FK'
ALTER TABLE RA_SF_TOWER_TYPE ADD CONSTRAINT RA_SFTT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFTT_R_ATY_FK'
ALTER TABLE RA_SF_TOWER_TYPE ADD CONSTRAINT RA_SFTT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFTT_R_LANG_FK'
ALTER TABLE RA_SF_TOWER_TYPE ADD CONSTRAINT RA_SFTT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFTT_R_SFTT_FK'
ALTER TABLE RA_SF_TOWER_TYPE ADD CONSTRAINT RA_SFTT_R_SFTT_FK FOREIGN KEY
(
TOWER_TYPE
)
REFERENCES R_SF_TOWER_TYPE
(
TOWER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFTT_SRCD_FK'
ALTER TABLE RA_SF_TOWER_TYPE ADD CONSTRAINT RA_SFTT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SVT_BA_FK'
ALTER TABLE RA_SF_VEHICLE_TYPE ADD CONSTRAINT RA_SVT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SVT_PSWA_FK'
ALTER TABLE RA_SF_VEHICLE_TYPE ADD CONSTRAINT RA_SVT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SVT_R_ART_FK'
ALTER TABLE RA_SF_VEHICLE_TYPE ADD CONSTRAINT RA_SVT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SVT_R_ATY_FK'
ALTER TABLE RA_SF_VEHICLE_TYPE ADD CONSTRAINT RA_SVT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SVT_R_LANG_FK'
ALTER TABLE RA_SF_VEHICLE_TYPE ADD CONSTRAINT RA_SVT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SVT_R_SVT_FK'
ALTER TABLE RA_SF_VEHICLE_TYPE ADD CONSTRAINT RA_SVT_R_SVT_FK FOREIGN KEY
(
VEHICLE_TYPE
)
REFERENCES R_SF_VEHICLE_TYPE
(
VEHICLE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SVT_SRCD_FK'
ALTER TABLE RA_SF_VEHICLE_TYPE ADD CONSTRAINT RA_SVT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFVR_BA_FK'
ALTER TABLE RA_SF_VESSEL_ROLE ADD CONSTRAINT RA_SFVR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFVR_PSWA_FK'
ALTER TABLE RA_SF_VESSEL_ROLE ADD CONSTRAINT RA_SFVR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFVR_R_ART_FK'
ALTER TABLE RA_SF_VESSEL_ROLE ADD CONSTRAINT RA_SFVR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFVR_R_ATY_FK'
ALTER TABLE RA_SF_VESSEL_ROLE ADD CONSTRAINT RA_SFVR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFVR_R_LANG_FK'
ALTER TABLE RA_SF_VESSEL_ROLE ADD CONSTRAINT RA_SFVR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFVR_R_SFVR_FK'
ALTER TABLE RA_SF_VESSEL_ROLE ADD CONSTRAINT RA_SFVR_R_SFVR_FK FOREIGN KEY
(
VESSEL_ROLE
)
REFERENCES R_SF_VESSEL_ROLE
(
VESSEL_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFVR_SRCD_FK'
ALTER TABLE RA_SF_VESSEL_ROLE ADD CONSTRAINT RA_SFVR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFVT_BA_FK'
ALTER TABLE RA_SF_VESSEL_TYPE ADD CONSTRAINT RA_SFVT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFVT_PSWA_FK'
ALTER TABLE RA_SF_VESSEL_TYPE ADD CONSTRAINT RA_SFVT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFVT_R_ART_FK'
ALTER TABLE RA_SF_VESSEL_TYPE ADD CONSTRAINT RA_SFVT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFVT_R_ATY_FK'
ALTER TABLE RA_SF_VESSEL_TYPE ADD CONSTRAINT RA_SFVT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFVT_R_LANG_FK'
ALTER TABLE RA_SF_VESSEL_TYPE ADD CONSTRAINT RA_SFVT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFVT_R_SFVT_FK'
ALTER TABLE RA_SF_VESSEL_TYPE ADD CONSTRAINT RA_SFVT_R_SFVT_FK FOREIGN KEY
(
VESSEL_TYPE
)
REFERENCES R_SF_VESSEL_TYPE
(
VESSEL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFVT_SRCD_FK'
ALTER TABLE RA_SF_VESSEL_TYPE ADD CONSTRAINT RA_SFVT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFXT_BA_FK'
ALTER TABLE RA_SF_XREF_TYPE ADD CONSTRAINT RA_SFXT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFXT_PSWA_FK'
ALTER TABLE RA_SF_XREF_TYPE ADD CONSTRAINT RA_SFXT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFXT_R_ART_FK'
ALTER TABLE RA_SF_XREF_TYPE ADD CONSTRAINT RA_SFXT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFXT_R_ATY_FK'
ALTER TABLE RA_SF_XREF_TYPE ADD CONSTRAINT RA_SFXT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFXT_R_LANG_FK'
ALTER TABLE RA_SF_XREF_TYPE ADD CONSTRAINT RA_SFXT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFXT_R_SFXT_FK'
ALTER TABLE RA_SF_XREF_TYPE ADD CONSTRAINT RA_SFXT_R_SFXT_FK FOREIGN KEY
(
XREF_TYPE
)
REFERENCES R_SF_XREF_TYPE
(
XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFXT_SRCD_FK'
ALTER TABLE RA_SF_XREF_TYPE ADD CONSTRAINT RA_SFXT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST4_BA_FK'
ALTER TABLE RA_SHOW_TYPE ADD CONSTRAINT RA_ST4_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST4_PSWA_FK'
ALTER TABLE RA_SHOW_TYPE ADD CONSTRAINT RA_ST4_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST4_R_ART_FK'
ALTER TABLE RA_SHOW_TYPE ADD CONSTRAINT RA_ST4_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST4_R_ATY_FK'
ALTER TABLE RA_SHOW_TYPE ADD CONSTRAINT RA_ST4_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST4_R_LANG_FK'
ALTER TABLE RA_SHOW_TYPE ADD CONSTRAINT RA_ST4_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST4_R_ST4_FK'
ALTER TABLE RA_SHOW_TYPE ADD CONSTRAINT RA_ST4_R_ST4_FK FOREIGN KEY
(
SHOW_TYPE
)
REFERENCES R_SHOW_TYPE
(
SHOW_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_ST4_SRCD_FK'
ALTER TABLE RA_SHOW_TYPE ADD CONSTRAINT RA_ST4_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPT1_BA_FK'
ALTER TABLE RA_SHUTIN_PRESS_TYPE ADD CONSTRAINT RA_SPT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPT1_PSWA_FK'
ALTER TABLE RA_SHUTIN_PRESS_TYPE ADD CONSTRAINT RA_SPT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPT1_R_ART_FK'
ALTER TABLE RA_SHUTIN_PRESS_TYPE ADD CONSTRAINT RA_SPT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPT1_R_ATY_FK'
ALTER TABLE RA_SHUTIN_PRESS_TYPE ADD CONSTRAINT RA_SPT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPT1_R_LANG_FK'
ALTER TABLE RA_SHUTIN_PRESS_TYPE ADD CONSTRAINT RA_SPT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPT1_R_SPT1_FK'
ALTER TABLE RA_SHUTIN_PRESS_TYPE ADD CONSTRAINT RA_SPT1_R_SPT1_FK FOREIGN KEY
(
SHUTIN_PRESSURE_TYPE
)
REFERENCES R_SHUTIN_PRESS_TYPE
(
SHUTIN_PRESSURE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPT1_SRCD_FK'
ALTER TABLE RA_SHUTIN_PRESS_TYPE ADD CONSTRAINT RA_SPT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_S_BA_FK'
ALTER TABLE RA_SOURCE ADD CONSTRAINT RA_S_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_S_PSWA_FK'
ALTER TABLE RA_SOURCE ADD CONSTRAINT RA_S_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_S_R_ART_FK'
ALTER TABLE RA_SOURCE ADD CONSTRAINT RA_S_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_S_R_ATY_FK'
ALTER TABLE RA_SOURCE ADD CONSTRAINT RA_S_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_S_R_LANG_FK'
ALTER TABLE RA_SOURCE ADD CONSTRAINT RA_S_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_S_SRCD_FK'
ALTER TABLE RA_SOURCE ADD CONSTRAINT RA_S_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SOR_BA_FK'
ALTER TABLE RA_SOURCE_ORIGIN ADD CONSTRAINT RA_SOR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SOR_PSWA_FK'
ALTER TABLE RA_SOURCE_ORIGIN ADD CONSTRAINT RA_SOR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SOR_R_ART_FK'
ALTER TABLE RA_SOURCE_ORIGIN ADD CONSTRAINT RA_SOR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SOR_R_ATY_FK'
ALTER TABLE RA_SOURCE_ORIGIN ADD CONSTRAINT RA_SOR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SOR_R_LANG_FK'
ALTER TABLE RA_SOURCE_ORIGIN ADD CONSTRAINT RA_SOR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SOR_R_SOR_FK'
ALTER TABLE RA_SOURCE_ORIGIN ADD CONSTRAINT RA_SOR_R_SOR_FK FOREIGN KEY
(
SOURCE,
ORIGIN_OBS_NO
)
REFERENCES R_SOURCE_ORIGIN
(
SOURCE,
ORIGIN_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SOR_SRCD_FK'
ALTER TABLE RA_SOURCE_ORIGIN ADD CONSTRAINT RA_SOR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUT_BA_FK'
ALTER TABLE RA_SPACING_UNIT_TYPE ADD CONSTRAINT RA_SUT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUT_PSWA_FK'
ALTER TABLE RA_SPACING_UNIT_TYPE ADD CONSTRAINT RA_SUT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUT_R_ART_FK'
ALTER TABLE RA_SPACING_UNIT_TYPE ADD CONSTRAINT RA_SUT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUT_R_ATY_FK'
ALTER TABLE RA_SPACING_UNIT_TYPE ADD CONSTRAINT RA_SUT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUT_R_LANG_FK'
ALTER TABLE RA_SPACING_UNIT_TYPE ADD CONSTRAINT RA_SUT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUT_R_SUT_FK'
ALTER TABLE RA_SPACING_UNIT_TYPE ADD CONSTRAINT RA_SUT_R_SUT_FK FOREIGN KEY
(
SPACING_UNIT_TYPE
)
REFERENCES R_SPACING_UNIT_TYPE
(
SPACING_UNIT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUT_SRCD_FK'
ALTER TABLE RA_SPACING_UNIT_TYPE ADD CONSTRAINT RA_SUT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPCT2_BA_FK'
ALTER TABLE RA_SPATIAL_DESC_COMP_TYPE ADD CONSTRAINT RA_SPCT2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPCT2_PSWA_FK'
ALTER TABLE RA_SPATIAL_DESC_COMP_TYPE ADD CONSTRAINT RA_SPCT2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPCT2_R_ART_FK'
ALTER TABLE RA_SPATIAL_DESC_COMP_TYPE ADD CONSTRAINT RA_SPCT2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPCT2_R_ATY_FK'
ALTER TABLE RA_SPATIAL_DESC_COMP_TYPE ADD CONSTRAINT RA_SPCT2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPCT2_R_LANG_FK'
ALTER TABLE RA_SPATIAL_DESC_COMP_TYPE ADD CONSTRAINT RA_SPCT2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPCT2_R_SPCT2_FK'
ALTER TABLE RA_SPATIAL_DESC_COMP_TYPE ADD CONSTRAINT RA_SPCT2_R_SPCT2_FK FOREIGN KEY
(
SP_COMPONENT_TYPE
)
REFERENCES R_SPATIAL_DESC_COMP_TYPE
(
SP_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPCT2_SRCD_FK'
ALTER TABLE RA_SPATIAL_DESC_COMP_TYPE ADD CONSTRAINT RA_SPCT2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDT1_BA_FK'
ALTER TABLE RA_SPATIAL_DESC_TYPE ADD CONSTRAINT RA_SDT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDT1_PSWA_FK'
ALTER TABLE RA_SPATIAL_DESC_TYPE ADD CONSTRAINT RA_SDT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDT1_R_ART_FK'
ALTER TABLE RA_SPATIAL_DESC_TYPE ADD CONSTRAINT RA_SDT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDT1_R_ATY_FK'
ALTER TABLE RA_SPATIAL_DESC_TYPE ADD CONSTRAINT RA_SDT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDT1_R_LANG_FK'
ALTER TABLE RA_SPATIAL_DESC_TYPE ADD CONSTRAINT RA_SDT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDT1_R_SDT1_FK'
ALTER TABLE RA_SPATIAL_DESC_TYPE ADD CONSTRAINT RA_SDT1_R_SDT1_FK FOREIGN KEY
(
SPATIAL_DESC_TYPE
)
REFERENCES R_SPATIAL_DESC_TYPE
(
SPATIAL_DESC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDT1_SRCD_FK'
ALTER TABLE RA_SPATIAL_DESC_TYPE ADD CONSTRAINT RA_SDT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SXT_BA_FK'
ALTER TABLE RA_SPATIAL_XREF_TYPE ADD CONSTRAINT RA_SXT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SXT_PSWA_FK'
ALTER TABLE RA_SPATIAL_XREF_TYPE ADD CONSTRAINT RA_SXT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SXT_R_ART_FK'
ALTER TABLE RA_SPATIAL_XREF_TYPE ADD CONSTRAINT RA_SXT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SXT_R_ATY_FK'
ALTER TABLE RA_SPATIAL_XREF_TYPE ADD CONSTRAINT RA_SXT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SXT_R_LANG_FK'
ALTER TABLE RA_SPATIAL_XREF_TYPE ADD CONSTRAINT RA_SXT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SXT_R_SXT_FK'
ALTER TABLE RA_SPATIAL_XREF_TYPE ADD CONSTRAINT RA_SXT_R_SXT_FK FOREIGN KEY
(
SPATIAL_XREF_TYPE
)
REFERENCES R_SPATIAL_XREF_TYPE
(
SPATIAL_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SXT_SRCD_FK'
ALTER TABLE RA_SPATIAL_XREF_TYPE ADD CONSTRAINT RA_SXT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPVT_BA_FK'
ALTER TABLE RA_SP_POINT_VERSION_TYPE ADD CONSTRAINT RA_SPVT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPVT_PSWA_FK'
ALTER TABLE RA_SP_POINT_VERSION_TYPE ADD CONSTRAINT RA_SPVT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPVT_R_ART_FK'
ALTER TABLE RA_SP_POINT_VERSION_TYPE ADD CONSTRAINT RA_SPVT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPVT_R_ATY_FK'
ALTER TABLE RA_SP_POINT_VERSION_TYPE ADD CONSTRAINT RA_SPVT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPVT_R_LANG_FK'
ALTER TABLE RA_SP_POINT_VERSION_TYPE ADD CONSTRAINT RA_SPVT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPVT_R_SPVT_FK'
ALTER TABLE RA_SP_POINT_VERSION_TYPE ADD CONSTRAINT RA_SPVT_R_SPVT_FK FOREIGN KEY
(
VERSION_TYPE
)
REFERENCES R_SP_POINT_VERSION_TYPE
(
VERSION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SPVT_SRCD_FK'
ALTER TABLE RA_SP_POINT_VERSION_TYPE ADD CONSTRAINT RA_SPVT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SZDX_BA_FK'
ALTER TABLE RA_SP_ZONE_DEFIN_XREF ADD CONSTRAINT RA_SZDX_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SZDX_PSWA_FK'
ALTER TABLE RA_SP_ZONE_DEFIN_XREF ADD CONSTRAINT RA_SZDX_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SZDX_R_ART_FK'
ALTER TABLE RA_SP_ZONE_DEFIN_XREF ADD CONSTRAINT RA_SZDX_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SZDX_R_ATY_FK'
ALTER TABLE RA_SP_ZONE_DEFIN_XREF ADD CONSTRAINT RA_SZDX_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SZDX_R_LANG_FK'
ALTER TABLE RA_SP_ZONE_DEFIN_XREF ADD CONSTRAINT RA_SZDX_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SZDX_R_SZDX_FK'
ALTER TABLE RA_SP_ZONE_DEFIN_XREF ADD CONSTRAINT RA_SZDX_R_SZDX_FK FOREIGN KEY
(
XREF_REASON
)
REFERENCES R_SP_ZONE_DEFIN_XREF
(
XREF_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SZDX_SRCD_FK'
ALTER TABLE RA_SP_ZONE_DEFIN_XREF ADD CONSTRAINT RA_SZDX_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SZD_BA_FK'
ALTER TABLE RA_SP_ZONE_DERIV ADD CONSTRAINT RA_SZD_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SZD_PSWA_FK'
ALTER TABLE RA_SP_ZONE_DERIV ADD CONSTRAINT RA_SZD_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SZD_R_ART_FK'
ALTER TABLE RA_SP_ZONE_DERIV ADD CONSTRAINT RA_SZD_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SZD_R_ATY_FK'
ALTER TABLE RA_SP_ZONE_DERIV ADD CONSTRAINT RA_SZD_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SZD_R_LANG_FK'
ALTER TABLE RA_SP_ZONE_DERIV ADD CONSTRAINT RA_SZD_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SZD_R_SZD_FK'
ALTER TABLE RA_SP_ZONE_DERIV ADD CONSTRAINT RA_SZD_R_SZD_FK FOREIGN KEY
(
ZONE_DERIVATION_METHOD
)
REFERENCES R_SP_ZONE_DERIV
(
ZONE_DERIVATION_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SZD_SRCD_FK'
ALTER TABLE RA_SP_ZONE_DERIV ADD CONSTRAINT RA_SZD_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SZT_BA_FK'
ALTER TABLE RA_SP_ZONE_TYPE ADD CONSTRAINT RA_SZT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SZT_PSWA_FK'
ALTER TABLE RA_SP_ZONE_TYPE ADD CONSTRAINT RA_SZT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SZT_R_ART_FK'
ALTER TABLE RA_SP_ZONE_TYPE ADD CONSTRAINT RA_SZT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SZT_R_ATY_FK'
ALTER TABLE RA_SP_ZONE_TYPE ADD CONSTRAINT RA_SZT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SZT_R_LANG_FK'
ALTER TABLE RA_SP_ZONE_TYPE ADD CONSTRAINT RA_SZT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SZT_R_SZT_FK'
ALTER TABLE RA_SP_ZONE_TYPE ADD CONSTRAINT RA_SZT_R_SZT_FK FOREIGN KEY
(
ZONE_TYPE
)
REFERENCES R_SP_ZONE_TYPE
(
ZONE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SZT_SRCD_FK'
ALTER TABLE RA_SP_ZONE_TYPE ADD CONSTRAINT RA_SZT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SG_BA_FK'
ALTER TABLE RA_STATUS_GROUP ADD CONSTRAINT RA_SG_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SG_PSWA_FK'
ALTER TABLE RA_STATUS_GROUP ADD CONSTRAINT RA_SG_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SG_R_ART_FK'
ALTER TABLE RA_STATUS_GROUP ADD CONSTRAINT RA_SG_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SG_R_ATY_FK'
ALTER TABLE RA_STATUS_GROUP ADD CONSTRAINT RA_SG_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SG_R_LANG_FK'
ALTER TABLE RA_STATUS_GROUP ADD CONSTRAINT RA_SG_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SG_R_SG_FK'
ALTER TABLE RA_STATUS_GROUP ADD CONSTRAINT RA_SG_R_SG_FK FOREIGN KEY
(
STATUS_GROUP
)
REFERENCES R_STATUS_GROUP
(
STATUS_GROUP
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SG_SRCD_FK'
ALTER TABLE RA_STATUS_GROUP ADD CONSTRAINT RA_SG_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SS3_BA_FK'
ALTER TABLE RA_STORE_STATUS ADD CONSTRAINT RA_SS3_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SS3_PSWA_FK'
ALTER TABLE RA_STORE_STATUS ADD CONSTRAINT RA_SS3_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SS3_R_ART_FK'
ALTER TABLE RA_STORE_STATUS ADD CONSTRAINT RA_SS3_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SS3_R_ATY_FK'
ALTER TABLE RA_STORE_STATUS ADD CONSTRAINT RA_SS3_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SS3_R_LANG_FK'
ALTER TABLE RA_STORE_STATUS ADD CONSTRAINT RA_SS3_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SS3_R_SS3_FK'
ALTER TABLE RA_STORE_STATUS ADD CONSTRAINT RA_SS3_R_SS3_FK FOREIGN KEY
(
PHYSICAL_STORE_STATUS
)
REFERENCES R_STORE_STATUS
(
PHYSICAL_STORE_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SS3_SRCD_FK'
ALTER TABLE RA_STORE_STATUS ADD CONSTRAINT RA_SS3_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAM_BA_FK'
ALTER TABLE RA_STRAT_ACQTN_METHOD ADD CONSTRAINT RA_SAM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAM_PSWA_FK'
ALTER TABLE RA_STRAT_ACQTN_METHOD ADD CONSTRAINT RA_SAM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAM_R_ART_FK'
ALTER TABLE RA_STRAT_ACQTN_METHOD ADD CONSTRAINT RA_SAM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAM_R_ATY_FK'
ALTER TABLE RA_STRAT_ACQTN_METHOD ADD CONSTRAINT RA_SAM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAM_R_LANG_FK'
ALTER TABLE RA_STRAT_ACQTN_METHOD ADD CONSTRAINT RA_SAM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAM_R_SAM_FK'
ALTER TABLE RA_STRAT_ACQTN_METHOD ADD CONSTRAINT RA_SAM_R_SAM_FK FOREIGN KEY
(
ACQTN_METHOD_TYPE
)
REFERENCES R_STRAT_ACQTN_METHOD
(
ACQTN_METHOD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAM_SRCD_FK'
ALTER TABLE RA_STRAT_ACQTN_METHOD ADD CONSTRAINT RA_SAM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAM1_BA_FK'
ALTER TABLE RA_STRAT_AGE_METHOD ADD CONSTRAINT RA_SAM1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAM1_PSWA_FK'
ALTER TABLE RA_STRAT_AGE_METHOD ADD CONSTRAINT RA_SAM1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAM1_R_ART_FK'
ALTER TABLE RA_STRAT_AGE_METHOD ADD CONSTRAINT RA_SAM1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAM1_R_ATY_FK'
ALTER TABLE RA_STRAT_AGE_METHOD ADD CONSTRAINT RA_SAM1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAM1_R_LANG_FK'
ALTER TABLE RA_STRAT_AGE_METHOD ADD CONSTRAINT RA_SAM1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAM1_R_SAM1_FK'
ALTER TABLE RA_STRAT_AGE_METHOD ADD CONSTRAINT RA_SAM1_R_SAM1_FK FOREIGN KEY
(
STRAT_AGE_METHOD
)
REFERENCES R_STRAT_AGE_METHOD
(
STRAT_AGE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAM1_SRCD_FK'
ALTER TABLE RA_STRAT_AGE_METHOD ADD CONSTRAINT RA_SAM1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAT1_BA_FK'
ALTER TABLE RA_STRAT_ALIAS_TYPE ADD CONSTRAINT RA_SAT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAT1_PSWA_FK'
ALTER TABLE RA_STRAT_ALIAS_TYPE ADD CONSTRAINT RA_SAT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAT1_R_ART_FK'
ALTER TABLE RA_STRAT_ALIAS_TYPE ADD CONSTRAINT RA_SAT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAT1_R_ATY_FK'
ALTER TABLE RA_STRAT_ALIAS_TYPE ADD CONSTRAINT RA_SAT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAT1_R_LANG_FK'
ALTER TABLE RA_STRAT_ALIAS_TYPE ADD CONSTRAINT RA_SAT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAT1_R_SAT1_FK'
ALTER TABLE RA_STRAT_ALIAS_TYPE ADD CONSTRAINT RA_SAT1_R_SAT1_FK FOREIGN KEY
(
STRAT_ALIAS_TYPE
)
REFERENCES R_STRAT_ALIAS_TYPE
(
STRAT_ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SAT1_SRCD_FK'
ALTER TABLE RA_STRAT_ALIAS_TYPE ADD CONSTRAINT RA_SAT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCT1_BA_FK'
ALTER TABLE RA_STRAT_COLUMN_TYPE ADD CONSTRAINT RA_SCT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCT1_PSWA_FK'
ALTER TABLE RA_STRAT_COLUMN_TYPE ADD CONSTRAINT RA_SCT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCT1_R_ART_FK'
ALTER TABLE RA_STRAT_COLUMN_TYPE ADD CONSTRAINT RA_SCT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCT1_R_ATY_FK'
ALTER TABLE RA_STRAT_COLUMN_TYPE ADD CONSTRAINT RA_SCT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCT1_R_LANG_FK'
ALTER TABLE RA_STRAT_COLUMN_TYPE ADD CONSTRAINT RA_SCT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCT1_R_SCT1_FK'
ALTER TABLE RA_STRAT_COLUMN_TYPE ADD CONSTRAINT RA_SCT1_R_SCT1_FK FOREIGN KEY
(
STRAT_COLUMN_TYPE
)
REFERENCES R_STRAT_COLUMN_TYPE
(
STRAT_COLUMN_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCT1_SRCD_FK'
ALTER TABLE RA_STRAT_COLUMN_TYPE ADD CONSTRAINT RA_SCT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCXT_BA_FK'
ALTER TABLE RA_STRAT_COL_XREF_TYPE ADD CONSTRAINT RA_SCXT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCXT_PSWA_FK'
ALTER TABLE RA_STRAT_COL_XREF_TYPE ADD CONSTRAINT RA_SCXT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCXT_R_ART_FK'
ALTER TABLE RA_STRAT_COL_XREF_TYPE ADD CONSTRAINT RA_SCXT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCXT_R_ATY_FK'
ALTER TABLE RA_STRAT_COL_XREF_TYPE ADD CONSTRAINT RA_SCXT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCXT_R_LANG_FK'
ALTER TABLE RA_STRAT_COL_XREF_TYPE ADD CONSTRAINT RA_SCXT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCXT_R_SCXT_FK'
ALTER TABLE RA_STRAT_COL_XREF_TYPE ADD CONSTRAINT RA_SCXT_R_SCXT_FK FOREIGN KEY
(
STRAT_COLUMN_XREF_TYPE
)
REFERENCES R_STRAT_COL_XREF_TYPE
(
STRAT_COLUMN_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCXT_SRCD_FK'
ALTER TABLE RA_STRAT_COL_XREF_TYPE ADD CONSTRAINT RA_SCXT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCC_BA_FK'
ALTER TABLE RA_STRAT_CORR_CRITERIA ADD CONSTRAINT RA_SCC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCC_PSWA_FK'
ALTER TABLE RA_STRAT_CORR_CRITERIA ADD CONSTRAINT RA_SCC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCC_R_ART_FK'
ALTER TABLE RA_STRAT_CORR_CRITERIA ADD CONSTRAINT RA_SCC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCC_R_ATY_FK'
ALTER TABLE RA_STRAT_CORR_CRITERIA ADD CONSTRAINT RA_SCC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCC_R_LANG_FK'
ALTER TABLE RA_STRAT_CORR_CRITERIA ADD CONSTRAINT RA_SCC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCC_R_SCC_FK'
ALTER TABLE RA_STRAT_CORR_CRITERIA ADD CONSTRAINT RA_SCC_R_SCC_FK FOREIGN KEY
(
STRAT_CORRELATION_CRITERIA
)
REFERENCES R_STRAT_CORR_CRITERIA
(
STRAT_CORRELATION_CRITERIA
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCC_SRCD_FK'
ALTER TABLE RA_STRAT_CORR_CRITERIA ADD CONSTRAINT RA_SCC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCTY_BA_FK'
ALTER TABLE RA_STRAT_CORR_TYPE ADD CONSTRAINT RA_SCTY_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCTY_PSWA_FK'
ALTER TABLE RA_STRAT_CORR_TYPE ADD CONSTRAINT RA_SCTY_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCTY_R_ART_FK'
ALTER TABLE RA_STRAT_CORR_TYPE ADD CONSTRAINT RA_SCTY_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCTY_R_ATY_FK'
ALTER TABLE RA_STRAT_CORR_TYPE ADD CONSTRAINT RA_SCTY_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCTY_R_LANG_FK'
ALTER TABLE RA_STRAT_CORR_TYPE ADD CONSTRAINT RA_SCTY_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCTY_R_SCTY_FK'
ALTER TABLE RA_STRAT_CORR_TYPE ADD CONSTRAINT RA_SCTY_R_SCTY_FK FOREIGN KEY
(
STRAT_CORRELATION_TYPE
)
REFERENCES R_STRAT_CORR_TYPE
(
STRAT_CORRELATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SCTY_SRCD_FK'
ALTER TABLE RA_STRAT_CORR_TYPE ADD CONSTRAINT RA_SCTY_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDT2_BA_FK'
ALTER TABLE RA_STRAT_DESC_TYPE ADD CONSTRAINT RA_SDT2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDT2_PSWA_FK'
ALTER TABLE RA_STRAT_DESC_TYPE ADD CONSTRAINT RA_SDT2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDT2_R_ART_FK'
ALTER TABLE RA_STRAT_DESC_TYPE ADD CONSTRAINT RA_SDT2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDT2_R_ATY_FK'
ALTER TABLE RA_STRAT_DESC_TYPE ADD CONSTRAINT RA_SDT2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDT2_R_LANG_FK'
ALTER TABLE RA_STRAT_DESC_TYPE ADD CONSTRAINT RA_SDT2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDT2_R_SDT2_FK'
ALTER TABLE RA_STRAT_DESC_TYPE ADD CONSTRAINT RA_SDT2_R_SDT2_FK FOREIGN KEY
(
DESCRIPTION_TYPE
)
REFERENCES R_STRAT_DESC_TYPE
(
DESCRIPTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SDT2_SRCD_FK'
ALTER TABLE RA_STRAT_DESC_TYPE ADD CONSTRAINT RA_SDT2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SED_BA_FK'
ALTER TABLE RA_STRAT_EQUIV_DIRECT ADD CONSTRAINT RA_SED_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SED_PSWA_FK'
ALTER TABLE RA_STRAT_EQUIV_DIRECT ADD CONSTRAINT RA_SED_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SED_R_ART_FK'
ALTER TABLE RA_STRAT_EQUIV_DIRECT ADD CONSTRAINT RA_SED_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SED_R_ATY_FK'
ALTER TABLE RA_STRAT_EQUIV_DIRECT ADD CONSTRAINT RA_SED_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SED_R_LANG_FK'
ALTER TABLE RA_STRAT_EQUIV_DIRECT ADD CONSTRAINT RA_SED_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SED_R_SED_FK'
ALTER TABLE RA_STRAT_EQUIV_DIRECT ADD CONSTRAINT RA_SED_R_SED_FK FOREIGN KEY
(
STRAT_EQUIVALENCE_DIRECTION
)
REFERENCES R_STRAT_EQUIV_DIRECT
(
STRAT_EQUIVALENCE_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SED_SRCD_FK'
ALTER TABLE RA_STRAT_EQUIV_DIRECT ADD CONSTRAINT RA_SED_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SET1_BA_FK'
ALTER TABLE RA_STRAT_EQUIV_TYPE ADD CONSTRAINT RA_SET1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SET1_PSWA_FK'
ALTER TABLE RA_STRAT_EQUIV_TYPE ADD CONSTRAINT RA_SET1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SET1_R_ART_FK'
ALTER TABLE RA_STRAT_EQUIV_TYPE ADD CONSTRAINT RA_SET1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SET1_R_ATY_FK'
ALTER TABLE RA_STRAT_EQUIV_TYPE ADD CONSTRAINT RA_SET1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SET1_R_LANG_FK'
ALTER TABLE RA_STRAT_EQUIV_TYPE ADD CONSTRAINT RA_SET1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SET1_R_SET1_FK'
ALTER TABLE RA_STRAT_EQUIV_TYPE ADD CONSTRAINT RA_SET1_R_SET1_FK FOREIGN KEY
(
STRAT_EQUIVALENCE_TYPE
)
REFERENCES R_STRAT_EQUIV_TYPE
(
STRAT_EQUIVALENCE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SET1_SRCD_FK'
ALTER TABLE RA_STRAT_EQUIV_TYPE ADD CONSTRAINT RA_SET1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFNL_BA_FK'
ALTER TABLE RA_STRAT_FLD_NODE_LOC ADD CONSTRAINT RA_SFNL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFNL_PSWA_FK'
ALTER TABLE RA_STRAT_FLD_NODE_LOC ADD CONSTRAINT RA_SFNL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFNL_R_ART_FK'
ALTER TABLE RA_STRAT_FLD_NODE_LOC ADD CONSTRAINT RA_SFNL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFNL_R_ATY_FK'
ALTER TABLE RA_STRAT_FLD_NODE_LOC ADD CONSTRAINT RA_SFNL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFNL_R_LANG_FK'
ALTER TABLE RA_STRAT_FLD_NODE_LOC ADD CONSTRAINT RA_SFNL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFNL_R_SFNL_FK'
ALTER TABLE RA_STRAT_FLD_NODE_LOC ADD CONSTRAINT RA_SFNL_R_SFNL_FK FOREIGN KEY
(
NODE_LOC_TYPE
)
REFERENCES R_STRAT_FLD_NODE_LOC
(
NODE_LOC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SFNL_SRCD_FK'
ALTER TABLE RA_STRAT_FLD_NODE_LOC ADD CONSTRAINT RA_SFNL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SH_BA_FK'
ALTER TABLE RA_STRAT_HIERARCHY ADD CONSTRAINT RA_SH_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SH_PSWA_FK'
ALTER TABLE RA_STRAT_HIERARCHY ADD CONSTRAINT RA_SH_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SH_R_ART_FK'
ALTER TABLE RA_STRAT_HIERARCHY ADD CONSTRAINT RA_SH_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SH_R_ATY_FK'
ALTER TABLE RA_STRAT_HIERARCHY ADD CONSTRAINT RA_SH_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SH_R_LANG_FK'
ALTER TABLE RA_STRAT_HIERARCHY ADD CONSTRAINT RA_SH_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SH_R_SH_FK'
ALTER TABLE RA_STRAT_HIERARCHY ADD CONSTRAINT RA_SH_R_SH_FK FOREIGN KEY
(
STRAT_HIERARCHY_TYPE
)
REFERENCES R_STRAT_HIERARCHY
(
STRAT_HIERARCHY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SH_SRCD_FK'
ALTER TABLE RA_STRAT_HIERARCHY ADD CONSTRAINT RA_SH_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SIM_BA_FK'
ALTER TABLE RA_STRAT_INTERP_METHOD ADD CONSTRAINT RA_SIM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SIM_PSWA_FK'
ALTER TABLE RA_STRAT_INTERP_METHOD ADD CONSTRAINT RA_SIM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SIM_R_ART_FK'
ALTER TABLE RA_STRAT_INTERP_METHOD ADD CONSTRAINT RA_SIM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SIM_R_ATY_FK'
ALTER TABLE RA_STRAT_INTERP_METHOD ADD CONSTRAINT RA_SIM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SIM_R_LANG_FK'
ALTER TABLE RA_STRAT_INTERP_METHOD ADD CONSTRAINT RA_SIM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SIM_R_SIM_FK'
ALTER TABLE RA_STRAT_INTERP_METHOD ADD CONSTRAINT RA_SIM_R_SIM_FK FOREIGN KEY
(
STRAT_INTERPRET_METHOD
)
REFERENCES R_STRAT_INTERP_METHOD
(
STRAT_INTERPRET_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SIM_SRCD_FK'
ALTER TABLE RA_STRAT_INTERP_METHOD ADD CONSTRAINT RA_SIM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SNST_BA_FK'
ALTER TABLE RA_STRAT_NAME_SET_TYPE ADD CONSTRAINT RA_SNST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SNST_PSWA_FK'
ALTER TABLE RA_STRAT_NAME_SET_TYPE ADD CONSTRAINT RA_SNST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SNST_R_ART_FK'
ALTER TABLE RA_STRAT_NAME_SET_TYPE ADD CONSTRAINT RA_SNST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SNST_R_ATY_FK'
ALTER TABLE RA_STRAT_NAME_SET_TYPE ADD CONSTRAINT RA_SNST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SNST_R_LANG_FK'
ALTER TABLE RA_STRAT_NAME_SET_TYPE ADD CONSTRAINT RA_SNST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SNST_R_SNST_FK'
ALTER TABLE RA_STRAT_NAME_SET_TYPE ADD CONSTRAINT RA_SNST_R_SNST_FK FOREIGN KEY
(
STRAT_NAME_SET_TYPE
)
REFERENCES R_STRAT_NAME_SET_TYPE
(
STRAT_NAME_SET_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SNST_SRCD_FK'
ALTER TABLE RA_STRAT_NAME_SET_TYPE ADD CONSTRAINT RA_SNST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SOT_BA_FK'
ALTER TABLE RA_STRAT_OCCURRENCE_TYPE ADD CONSTRAINT RA_SOT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SOT_PSWA_FK'
ALTER TABLE RA_STRAT_OCCURRENCE_TYPE ADD CONSTRAINT RA_SOT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SOT_R_ART_FK'
ALTER TABLE RA_STRAT_OCCURRENCE_TYPE ADD CONSTRAINT RA_SOT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SOT_R_ATY_FK'
ALTER TABLE RA_STRAT_OCCURRENCE_TYPE ADD CONSTRAINT RA_SOT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SOT_R_LANG_FK'
ALTER TABLE RA_STRAT_OCCURRENCE_TYPE ADD CONSTRAINT RA_SOT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SOT_R_SOT_FK'
ALTER TABLE RA_STRAT_OCCURRENCE_TYPE ADD CONSTRAINT RA_SOT_R_SOT_FK FOREIGN KEY
(
OCCURRENCE_TYPE
)
REFERENCES R_STRAT_OCCURRENCE_TYPE
(
OCCURRENCE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SOT_SRCD_FK'
ALTER TABLE RA_STRAT_OCCURRENCE_TYPE ADD CONSTRAINT RA_SOT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSTAT_BA_FK'
ALTER TABLE RA_STRAT_STATUS ADD CONSTRAINT RA_SSTAT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSTAT_PSWA_FK'
ALTER TABLE RA_STRAT_STATUS ADD CONSTRAINT RA_SSTAT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSTAT_R_ART_FK'
ALTER TABLE RA_STRAT_STATUS ADD CONSTRAINT RA_SSTAT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSTAT_R_ATY_FK'
ALTER TABLE RA_STRAT_STATUS ADD CONSTRAINT RA_SSTAT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSTAT_R_LANG_FK'
ALTER TABLE RA_STRAT_STATUS ADD CONSTRAINT RA_SSTAT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSTAT_R_SSTAT_FK'
ALTER TABLE RA_STRAT_STATUS ADD CONSTRAINT RA_SSTAT_R_SSTAT_FK FOREIGN KEY
(
STRAT_STATUS
)
REFERENCES R_STRAT_STATUS
(
STRAT_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SSTAT_SRCD_FK'
ALTER TABLE RA_STRAT_STATUS ADD CONSTRAINT RA_SSTAT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STR_BA_FK'
ALTER TABLE RA_STRAT_TOPO_RELATION ADD CONSTRAINT RA_STR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STR_PSWA_FK'
ALTER TABLE RA_STRAT_TOPO_RELATION ADD CONSTRAINT RA_STR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STR_R_ART_FK'
ALTER TABLE RA_STRAT_TOPO_RELATION ADD CONSTRAINT RA_STR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STR_R_ATY_FK'
ALTER TABLE RA_STRAT_TOPO_RELATION ADD CONSTRAINT RA_STR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STR_R_LANG_FK'
ALTER TABLE RA_STRAT_TOPO_RELATION ADD CONSTRAINT RA_STR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STR_R_STR_FK'
ALTER TABLE RA_STRAT_TOPO_RELATION ADD CONSTRAINT RA_STR_R_STR_FK FOREIGN KEY
(
TOPO_RELATION_TYPE
)
REFERENCES R_STRAT_TOPO_RELATION
(
TOPO_RELATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STR_SRCD_FK'
ALTER TABLE RA_STRAT_TOPO_RELATION ADD CONSTRAINT RA_STR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STYPE_BA_FK'
ALTER TABLE RA_STRAT_TYPE ADD CONSTRAINT RA_STYPE_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STYPE_PSWA_FK'
ALTER TABLE RA_STRAT_TYPE ADD CONSTRAINT RA_STYPE_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STYPE_R_ART_FK'
ALTER TABLE RA_STRAT_TYPE ADD CONSTRAINT RA_STYPE_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STYPE_R_ATY_FK'
ALTER TABLE RA_STRAT_TYPE ADD CONSTRAINT RA_STYPE_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STYPE_R_LANG_FK'
ALTER TABLE RA_STRAT_TYPE ADD CONSTRAINT RA_STYPE_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STYPE_R_STYPE_FK'
ALTER TABLE RA_STRAT_TYPE ADD CONSTRAINT RA_STYPE_R_STYPE_FK FOREIGN KEY
(
STRAT_TYPE
)
REFERENCES R_STRAT_TYPE
(
STRAT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STYPE_SRCD_FK'
ALTER TABLE RA_STRAT_TYPE ADD CONSTRAINT RA_STYPE_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STUCT_BA_FK'
ALTER TABLE RA_STRAT_UNIT_COMP_TYPE ADD CONSTRAINT RA_STUCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STUCT_PSWA_FK'
ALTER TABLE RA_STRAT_UNIT_COMP_TYPE ADD CONSTRAINT RA_STUCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STUCT_R_ART_FK'
ALTER TABLE RA_STRAT_UNIT_COMP_TYPE ADD CONSTRAINT RA_STUCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STUCT_R_ATY_FK'
ALTER TABLE RA_STRAT_UNIT_COMP_TYPE ADD CONSTRAINT RA_STUCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STUCT_R_LANG_FK'
ALTER TABLE RA_STRAT_UNIT_COMP_TYPE ADD CONSTRAINT RA_STUCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STUCT_R_STUCT_FK'
ALTER TABLE RA_STRAT_UNIT_COMP_TYPE ADD CONSTRAINT RA_STUCT_R_STUCT_FK FOREIGN KEY
(
STRAT_UNIT_COMPONENT_TYPE
)
REFERENCES R_STRAT_UNIT_COMP_TYPE
(
STRAT_UNIT_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STUCT_SRCD_FK'
ALTER TABLE RA_STRAT_UNIT_COMP_TYPE ADD CONSTRAINT RA_STUCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUD_BA_FK'
ALTER TABLE RA_STRAT_UNIT_DESC ADD CONSTRAINT RA_SUD_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUD_PSWA_FK'
ALTER TABLE RA_STRAT_UNIT_DESC ADD CONSTRAINT RA_SUD_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUD_R_ART_FK'
ALTER TABLE RA_STRAT_UNIT_DESC ADD CONSTRAINT RA_SUD_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUD_R_ATY_FK'
ALTER TABLE RA_STRAT_UNIT_DESC ADD CONSTRAINT RA_SUD_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUD_R_LANG_FK'
ALTER TABLE RA_STRAT_UNIT_DESC ADD CONSTRAINT RA_SUD_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUD_R_SUD_FK'
ALTER TABLE RA_STRAT_UNIT_DESC ADD CONSTRAINT RA_SUD_R_SUD_FK FOREIGN KEY
(
STRAT_UNIT_DESC
)
REFERENCES R_STRAT_UNIT_DESC
(
STRAT_UNIT_DESC
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUD_SRCD_FK'
ALTER TABLE RA_STRAT_UNIT_DESC ADD CONSTRAINT RA_SUD_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUQ_BA_FK'
ALTER TABLE RA_STRAT_UNIT_QUALIFIER ADD CONSTRAINT RA_SUQ_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUQ_PSWA_FK'
ALTER TABLE RA_STRAT_UNIT_QUALIFIER ADD CONSTRAINT RA_SUQ_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUQ_R_ART_FK'
ALTER TABLE RA_STRAT_UNIT_QUALIFIER ADD CONSTRAINT RA_SUQ_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUQ_R_ATY_FK'
ALTER TABLE RA_STRAT_UNIT_QUALIFIER ADD CONSTRAINT RA_SUQ_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUQ_R_LANG_FK'
ALTER TABLE RA_STRAT_UNIT_QUALIFIER ADD CONSTRAINT RA_SUQ_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUQ_R_SUQ_FK'
ALTER TABLE RA_STRAT_UNIT_QUALIFIER ADD CONSTRAINT RA_SUQ_R_SUQ_FK FOREIGN KEY
(
QUALIFIER
)
REFERENCES R_STRAT_UNIT_QUALIFIER
(
QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUQ_SRCD_FK'
ALTER TABLE RA_STRAT_UNIT_QUALIFIER ADD CONSTRAINT RA_SUQ_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUNT_BA_FK'
ALTER TABLE RA_STRAT_UNIT_TYPE ADD CONSTRAINT RA_SUNT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUNT_PSWA_FK'
ALTER TABLE RA_STRAT_UNIT_TYPE ADD CONSTRAINT RA_SUNT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUNT_R_ART_FK'
ALTER TABLE RA_STRAT_UNIT_TYPE ADD CONSTRAINT RA_SUNT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUNT_R_ATY_FK'
ALTER TABLE RA_STRAT_UNIT_TYPE ADD CONSTRAINT RA_SUNT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUNT_R_LANG_FK'
ALTER TABLE RA_STRAT_UNIT_TYPE ADD CONSTRAINT RA_SUNT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUNT_R_STYPE_FK'
ALTER TABLE RA_STRAT_UNIT_TYPE ADD CONSTRAINT RA_SUNT_R_STYPE_FK FOREIGN KEY
(
STRAT_TYPE
)
REFERENCES R_STRAT_TYPE
(
STRAT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUNT_R_SUNT_FK'
ALTER TABLE RA_STRAT_UNIT_TYPE ADD CONSTRAINT RA_SUNT_R_SUNT_FK FOREIGN KEY
(
STRAT_TYPE,
STRAT_UNIT_TYPE
)
REFERENCES R_STRAT_UNIT_TYPE
(
STRAT_TYPE,
STRAT_UNIT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUNT_SRCD_FK'
ALTER TABLE RA_STRAT_UNIT_TYPE ADD CONSTRAINT RA_SUNT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SC_BA_FK'
ALTER TABLE RA_STREAMER_COMP ADD CONSTRAINT RA_SC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SC_PSWA_FK'
ALTER TABLE RA_STREAMER_COMP ADD CONSTRAINT RA_SC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SC_R_ART_FK'
ALTER TABLE RA_STREAMER_COMP ADD CONSTRAINT RA_SC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SC_R_ATY_FK'
ALTER TABLE RA_STREAMER_COMP ADD CONSTRAINT RA_SC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SC_R_LANG_FK'
ALTER TABLE RA_STREAMER_COMP ADD CONSTRAINT RA_SC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SC_R_SC_FK'
ALTER TABLE RA_STREAMER_COMP ADD CONSTRAINT RA_SC_R_SC_FK FOREIGN KEY
(
COMPONENT_TYPE
)
REFERENCES R_STREAMER_COMP
(
COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SC_SRCD_FK'
ALTER TABLE RA_STREAMER_COMP ADD CONSTRAINT RA_SC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SP1_BA_FK'
ALTER TABLE RA_STREAMER_POSITION ADD CONSTRAINT RA_SP1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SP1_PSWA_FK'
ALTER TABLE RA_STREAMER_POSITION ADD CONSTRAINT RA_SP1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SP1_R_ART_FK'
ALTER TABLE RA_STREAMER_POSITION ADD CONSTRAINT RA_SP1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SP1_R_ATY_FK'
ALTER TABLE RA_STREAMER_POSITION ADD CONSTRAINT RA_SP1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SP1_R_LANG_FK'
ALTER TABLE RA_STREAMER_POSITION ADD CONSTRAINT RA_SP1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SP1_R_SP1_FK'
ALTER TABLE RA_STREAMER_POSITION ADD CONSTRAINT RA_SP1_R_SP1_FK FOREIGN KEY
(
STREAMER_POSITION
)
REFERENCES R_STREAMER_POSITION
(
STREAMER_POSITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SP1_SRCD_FK'
ALTER TABLE RA_STREAMER_POSITION ADD CONSTRAINT RA_SP1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STDYT_BA_FK'
ALTER TABLE RA_STUDY_TYPE ADD CONSTRAINT RA_STDYT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STDYT_PSWA_FK'
ALTER TABLE RA_STUDY_TYPE ADD CONSTRAINT RA_STDYT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STDYT_R_ART_FK'
ALTER TABLE RA_STUDY_TYPE ADD CONSTRAINT RA_STDYT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STDYT_R_ATY_FK'
ALTER TABLE RA_STUDY_TYPE ADD CONSTRAINT RA_STDYT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STDYT_R_LANG_FK'
ALTER TABLE RA_STUDY_TYPE ADD CONSTRAINT RA_STDYT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STDYT_R_STDYT_FK'
ALTER TABLE RA_STUDY_TYPE ADD CONSTRAINT RA_STDYT_R_STDYT_FK FOREIGN KEY
(
STUDY_TYPE
)
REFERENCES R_STUDY_TYPE
(
STUDY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_STDYT_SRCD_FK'
ALTER TABLE RA_STUDY_TYPE ADD CONSTRAINT RA_STDYT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBCT_BA_FK'
ALTER TABLE RA_SUBSTANCE_COMP_TYPE ADD CONSTRAINT RA_SUBCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBCT_PSWA_FK'
ALTER TABLE RA_SUBSTANCE_COMP_TYPE ADD CONSTRAINT RA_SUBCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBCT_R_ART_FK'
ALTER TABLE RA_SUBSTANCE_COMP_TYPE ADD CONSTRAINT RA_SUBCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBCT_R_ATY_FK'
ALTER TABLE RA_SUBSTANCE_COMP_TYPE ADD CONSTRAINT RA_SUBCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBCT_R_LANG_FK'
ALTER TABLE RA_SUBSTANCE_COMP_TYPE ADD CONSTRAINT RA_SUBCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBCT_R_SUBCT_FK'
ALTER TABLE RA_SUBSTANCE_COMP_TYPE ADD CONSTRAINT RA_SUBCT_R_SUBCT_FK FOREIGN KEY
(
SUBSTANCE_COMPONENT_TYPE
)
REFERENCES R_SUBSTANCE_COMP_TYPE
(
SUBSTANCE_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBCT_SRCD_FK'
ALTER TABLE RA_SUBSTANCE_COMP_TYPE ADD CONSTRAINT RA_SUBCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBP_BA_FK'
ALTER TABLE RA_SUBSTANCE_PROPERTY ADD CONSTRAINT RA_SUBP_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBP_PSWA_FK'
ALTER TABLE RA_SUBSTANCE_PROPERTY ADD CONSTRAINT RA_SUBP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBP_R_ART_FK'
ALTER TABLE RA_SUBSTANCE_PROPERTY ADD CONSTRAINT RA_SUBP_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBP_R_ATY_FK'
ALTER TABLE RA_SUBSTANCE_PROPERTY ADD CONSTRAINT RA_SUBP_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBP_R_LANG_FK'
ALTER TABLE RA_SUBSTANCE_PROPERTY ADD CONSTRAINT RA_SUBP_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBP_R_SUBP_FK'
ALTER TABLE RA_SUBSTANCE_PROPERTY ADD CONSTRAINT RA_SUBP_R_SUBP_FK FOREIGN KEY
(
SUBSTANCE_PROPERTY
)
REFERENCES R_SUBSTANCE_PROPERTY
(
SUBSTANCE_PROPERTY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBP_SRCD_FK'
ALTER TABLE RA_SUBSTANCE_PROPERTY ADD CONSTRAINT RA_SUBP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBUR_BA_FK'
ALTER TABLE RA_SUBSTANCE_USE_RULE ADD CONSTRAINT RA_SUBUR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBUR_PSWA_FK'
ALTER TABLE RA_SUBSTANCE_USE_RULE ADD CONSTRAINT RA_SUBUR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBUR_R_ART_FK'
ALTER TABLE RA_SUBSTANCE_USE_RULE ADD CONSTRAINT RA_SUBUR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBUR_R_ATY_FK'
ALTER TABLE RA_SUBSTANCE_USE_RULE ADD CONSTRAINT RA_SUBUR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBUR_R_LANG_FK'
ALTER TABLE RA_SUBSTANCE_USE_RULE ADD CONSTRAINT RA_SUBUR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBUR_R_SUBUR_FK'
ALTER TABLE RA_SUBSTANCE_USE_RULE ADD CONSTRAINT RA_SUBUR_R_SUBUR_FK FOREIGN KEY
(
SUBSTANCE_USE_RULE
)
REFERENCES R_SUBSTANCE_USE_RULE
(
SUBSTANCE_USE_RULE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBUR_SRCD_FK'
ALTER TABLE RA_SUBSTANCE_USE_RULE ADD CONSTRAINT RA_SUBUR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBXT_BA_FK'
ALTER TABLE RA_SUBSTANCE_XREF_TYPE ADD CONSTRAINT RA_SUBXT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBXT_PSWA_FK'
ALTER TABLE RA_SUBSTANCE_XREF_TYPE ADD CONSTRAINT RA_SUBXT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBXT_R_ART_FK'
ALTER TABLE RA_SUBSTANCE_XREF_TYPE ADD CONSTRAINT RA_SUBXT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBXT_R_ATY_FK'
ALTER TABLE RA_SUBSTANCE_XREF_TYPE ADD CONSTRAINT RA_SUBXT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBXT_R_LANG_FK'
ALTER TABLE RA_SUBSTANCE_XREF_TYPE ADD CONSTRAINT RA_SUBXT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBXT_R_SUBXT_FK'
ALTER TABLE RA_SUBSTANCE_XREF_TYPE ADD CONSTRAINT RA_SUBXT_R_SUBXT_FK FOREIGN KEY
(
SUBSTANCE_XREF_TYPE
)
REFERENCES R_SUBSTANCE_XREF_TYPE
(
SUBSTANCE_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SUBXT_SRCD_FK'
ALTER TABLE RA_SUBSTANCE_XREF_TYPE ADD CONSTRAINT RA_SUBXT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWABR_BA_FK'
ALTER TABLE RA_SW_APP_BA_ROLE ADD CONSTRAINT RA_SWABR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWABR_PSWA_FK'
ALTER TABLE RA_SW_APP_BA_ROLE ADD CONSTRAINT RA_SWABR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWABR_R_ART_FK'
ALTER TABLE RA_SW_APP_BA_ROLE ADD CONSTRAINT RA_SWABR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWABR_R_ATY_FK'
ALTER TABLE RA_SW_APP_BA_ROLE ADD CONSTRAINT RA_SWABR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWABR_R_LANG_FK'
ALTER TABLE RA_SW_APP_BA_ROLE ADD CONSTRAINT RA_SWABR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWABR_R_SWABR_FK'
ALTER TABLE RA_SW_APP_BA_ROLE ADD CONSTRAINT RA_SWABR_R_SWABR_FK FOREIGN KEY
(
SW_APP_BA_ROLE
)
REFERENCES R_SW_APP_BA_ROLE
(
SW_APP_BA_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWABR_SRCD_FK'
ALTER TABLE RA_SW_APP_BA_ROLE ADD CONSTRAINT RA_SWABR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWAF_BA_FK'
ALTER TABLE RA_SW_APP_FUNCTION ADD CONSTRAINT RA_SWAF_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWAF_PSWA_FK'
ALTER TABLE RA_SW_APP_FUNCTION ADD CONSTRAINT RA_SWAF_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWAF_R_ART_FK'
ALTER TABLE RA_SW_APP_FUNCTION ADD CONSTRAINT RA_SWAF_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWAF_R_ATY_FK'
ALTER TABLE RA_SW_APP_FUNCTION ADD CONSTRAINT RA_SWAF_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWAF_R_LANG_FK'
ALTER TABLE RA_SW_APP_FUNCTION ADD CONSTRAINT RA_SWAF_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWAF_R_SWAF_FK'
ALTER TABLE RA_SW_APP_FUNCTION ADD CONSTRAINT RA_SWAF_R_SWAF_FK FOREIGN KEY
(
SW_APP_FUNCTION,
SW_APP_FUNCTION_TYPE
)
REFERENCES R_SW_APP_FUNCTION
(
SW_APP_FUNCTION,
SW_APP_FUNCTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWAF_R_SWAFT_FK'
ALTER TABLE RA_SW_APP_FUNCTION ADD CONSTRAINT RA_SWAF_R_SWAFT_FK FOREIGN KEY
(
SW_APP_FUNCTION_TYPE
)
REFERENCES R_SW_APP_FUNCTION_TYPE
(
SW_APP_FUNCTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWAF_SRCD_FK'
ALTER TABLE RA_SW_APP_FUNCTION ADD CONSTRAINT RA_SWAF_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWAFT_BA_FK'
ALTER TABLE RA_SW_APP_FUNCTION_TYPE ADD CONSTRAINT RA_SWAFT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWAFT_PSWA_FK'
ALTER TABLE RA_SW_APP_FUNCTION_TYPE ADD CONSTRAINT RA_SWAFT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWAFT_R_ART_FK'
ALTER TABLE RA_SW_APP_FUNCTION_TYPE ADD CONSTRAINT RA_SWAFT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWAFT_R_ATY_FK'
ALTER TABLE RA_SW_APP_FUNCTION_TYPE ADD CONSTRAINT RA_SWAFT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWAFT_R_LANG_FK'
ALTER TABLE RA_SW_APP_FUNCTION_TYPE ADD CONSTRAINT RA_SWAFT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWAFT_R_SWAFT_FK'
ALTER TABLE RA_SW_APP_FUNCTION_TYPE ADD CONSTRAINT RA_SWAFT_R_SWAFT_FK FOREIGN KEY
(
SW_APP_FUNCTION_TYPE
)
REFERENCES R_SW_APP_FUNCTION_TYPE
(
SW_APP_FUNCTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWAFT_SRCD_FK'
ALTER TABLE RA_SW_APP_FUNCTION_TYPE ADD CONSTRAINT RA_SWAFT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWAX_BA_FK'
ALTER TABLE RA_SW_APP_XREF_TYPE ADD CONSTRAINT RA_SWAX_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWAX_PSWA_FK'
ALTER TABLE RA_SW_APP_XREF_TYPE ADD CONSTRAINT RA_SWAX_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWAX_R_ART_FK'
ALTER TABLE RA_SW_APP_XREF_TYPE ADD CONSTRAINT RA_SWAX_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWAX_R_ATY_FK'
ALTER TABLE RA_SW_APP_XREF_TYPE ADD CONSTRAINT RA_SWAX_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWAX_R_LANG_FK'
ALTER TABLE RA_SW_APP_XREF_TYPE ADD CONSTRAINT RA_SWAX_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWAX_R_SWAX_FK'
ALTER TABLE RA_SW_APP_XREF_TYPE ADD CONSTRAINT RA_SWAX_R_SWAX_FK FOREIGN KEY
(
SW_APP_XREF_TYPE
)
REFERENCES R_SW_APP_XREF_TYPE
(
SW_APP_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_SWAX_SRCD_FK'
ALTER TABLE RA_SW_APP_XREF_TYPE ADD CONSTRAINT RA_SWAX_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TCC_BA_FK'
ALTER TABLE RA_TAX_CREDIT_CODE ADD CONSTRAINT RA_TCC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TCC_PSWA_FK'
ALTER TABLE RA_TAX_CREDIT_CODE ADD CONSTRAINT RA_TCC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TCC_R_ART_FK'
ALTER TABLE RA_TAX_CREDIT_CODE ADD CONSTRAINT RA_TCC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TCC_R_ATY_FK'
ALTER TABLE RA_TAX_CREDIT_CODE ADD CONSTRAINT RA_TCC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TCC_R_LANG_FK'
ALTER TABLE RA_TAX_CREDIT_CODE ADD CONSTRAINT RA_TCC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TCC_R_TCC_FK'
ALTER TABLE RA_TAX_CREDIT_CODE ADD CONSTRAINT RA_TCC_R_TCC_FK FOREIGN KEY
(
TAX_CREDIT_CODE
)
REFERENCES R_TAX_CREDIT_CODE
(
TAX_CREDIT_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TCC_SRCD_FK'
ALTER TABLE RA_TAX_CREDIT_CODE ADD CONSTRAINT RA_TCC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TE_BA_FK'
ALTER TABLE RA_TEST_EQUIPMENT ADD CONSTRAINT RA_TE_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TE_PSWA_FK'
ALTER TABLE RA_TEST_EQUIPMENT ADD CONSTRAINT RA_TE_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TE_R_ART_FK'
ALTER TABLE RA_TEST_EQUIPMENT ADD CONSTRAINT RA_TE_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TE_R_ATY_FK'
ALTER TABLE RA_TEST_EQUIPMENT ADD CONSTRAINT RA_TE_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TE_R_LANG_FK'
ALTER TABLE RA_TEST_EQUIPMENT ADD CONSTRAINT RA_TE_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TE_R_TE_FK'
ALTER TABLE RA_TEST_EQUIPMENT ADD CONSTRAINT RA_TE_R_TE_FK FOREIGN KEY
(
EQUIP_TYPE
)
REFERENCES R_TEST_EQUIPMENT
(
EQUIP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TE_SRCD_FK'
ALTER TABLE RA_TEST_EQUIPMENT ADD CONSTRAINT RA_TE_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TPT_BA_FK'
ALTER TABLE RA_TEST_PERIOD_TYPE ADD CONSTRAINT RA_TPT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TPT_PSWA_FK'
ALTER TABLE RA_TEST_PERIOD_TYPE ADD CONSTRAINT RA_TPT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TPT_R_ART_FK'
ALTER TABLE RA_TEST_PERIOD_TYPE ADD CONSTRAINT RA_TPT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TPT_R_ATY_FK'
ALTER TABLE RA_TEST_PERIOD_TYPE ADD CONSTRAINT RA_TPT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TPT_R_LANG_FK'
ALTER TABLE RA_TEST_PERIOD_TYPE ADD CONSTRAINT RA_TPT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TPT_R_TPT_FK'
ALTER TABLE RA_TEST_PERIOD_TYPE ADD CONSTRAINT RA_TPT_R_TPT_FK FOREIGN KEY
(
TEST_PERIOD_TYPE
)
REFERENCES R_TEST_PERIOD_TYPE
(
TEST_PERIOD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TPT_SRCD_FK'
ALTER TABLE RA_TEST_PERIOD_TYPE ADD CONSTRAINT RA_TPT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TRM_BA_FK'
ALTER TABLE RA_TEST_RECOV_METHOD ADD CONSTRAINT RA_TRM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TRM_PSWA_FK'
ALTER TABLE RA_TEST_RECOV_METHOD ADD CONSTRAINT RA_TRM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TRM_R_ART_FK'
ALTER TABLE RA_TEST_RECOV_METHOD ADD CONSTRAINT RA_TRM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TRM_R_ATY_FK'
ALTER TABLE RA_TEST_RECOV_METHOD ADD CONSTRAINT RA_TRM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TRM_R_LANG_FK'
ALTER TABLE RA_TEST_RECOV_METHOD ADD CONSTRAINT RA_TRM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TRM_R_TRM_FK'
ALTER TABLE RA_TEST_RECOV_METHOD ADD CONSTRAINT RA_TRM_R_TRM_FK FOREIGN KEY
(
RECOVERY_METHOD
)
REFERENCES R_TEST_RECOV_METHOD
(
RECOVERY_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TRM_SRCD_FK'
ALTER TABLE RA_TEST_RECOV_METHOD ADD CONSTRAINT RA_TRM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TR_BA_FK'
ALTER TABLE RA_TEST_RESULT ADD CONSTRAINT RA_TR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TR_PSWA_FK'
ALTER TABLE RA_TEST_RESULT ADD CONSTRAINT RA_TR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TR_R_ART_FK'
ALTER TABLE RA_TEST_RESULT ADD CONSTRAINT RA_TR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TR_R_ATY_FK'
ALTER TABLE RA_TEST_RESULT ADD CONSTRAINT RA_TR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TR_R_LANG_FK'
ALTER TABLE RA_TEST_RESULT ADD CONSTRAINT RA_TR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TR_R_TR_FK'
ALTER TABLE RA_TEST_RESULT ADD CONSTRAINT RA_TR_R_TR_FK FOREIGN KEY
(
TEST_RESULT
)
REFERENCES R_TEST_RESULT
(
TEST_RESULT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TR_SRCD_FK'
ALTER TABLE RA_TEST_RESULT ADD CONSTRAINT RA_TR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TST_BA_FK'
ALTER TABLE RA_TEST_SHUTOFF_TYPE ADD CONSTRAINT RA_TST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TST_PSWA_FK'
ALTER TABLE RA_TEST_SHUTOFF_TYPE ADD CONSTRAINT RA_TST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TST_R_ART_FK'
ALTER TABLE RA_TEST_SHUTOFF_TYPE ADD CONSTRAINT RA_TST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TST_R_ATY_FK'
ALTER TABLE RA_TEST_SHUTOFF_TYPE ADD CONSTRAINT RA_TST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TST_R_LANG_FK'
ALTER TABLE RA_TEST_SHUTOFF_TYPE ADD CONSTRAINT RA_TST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TST_R_TST_FK'
ALTER TABLE RA_TEST_SHUTOFF_TYPE ADD CONSTRAINT RA_TST_R_TST_FK FOREIGN KEY
(
TEST_SHUTOFF_TYPE
)
REFERENCES R_TEST_SHUTOFF_TYPE
(
TEST_SHUTOFF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TST_SRCD_FK'
ALTER TABLE RA_TEST_SHUTOFF_TYPE ADD CONSTRAINT RA_TST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TS_BA_FK'
ALTER TABLE RA_TEST_SUBTYPE ADD CONSTRAINT RA_TS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TS_PSWA_FK'
ALTER TABLE RA_TEST_SUBTYPE ADD CONSTRAINT RA_TS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TS_R_ART_FK'
ALTER TABLE RA_TEST_SUBTYPE ADD CONSTRAINT RA_TS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TS_R_ATY_FK'
ALTER TABLE RA_TEST_SUBTYPE ADD CONSTRAINT RA_TS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TS_R_LANG_FK'
ALTER TABLE RA_TEST_SUBTYPE ADD CONSTRAINT RA_TS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TS_R_TS_FK'
ALTER TABLE RA_TEST_SUBTYPE ADD CONSTRAINT RA_TS_R_TS_FK FOREIGN KEY
(
TEST_TYPE,
TEST_SUBTYPE
)
REFERENCES R_TEST_SUBTYPE
(
TEST_TYPE,
TEST_SUBTYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TS_R_WTT_FK'
ALTER TABLE RA_TEST_SUBTYPE ADD CONSTRAINT RA_TS_R_WTT_FK FOREIGN KEY
(
TEST_TYPE
)
REFERENCES R_WELL_TEST_TYPE
(
WELL_TEST_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TS_SRCD_FK'
ALTER TABLE RA_TEST_SUBTYPE ADD CONSTRAINT RA_TS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TZ_BA_FK'
ALTER TABLE RA_TIMEZONE ADD CONSTRAINT RA_TZ_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TZ_PSWA_FK'
ALTER TABLE RA_TIMEZONE ADD CONSTRAINT RA_TZ_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TZ_R_ART_FK'
ALTER TABLE RA_TIMEZONE ADD CONSTRAINT RA_TZ_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TZ_R_ATY_FK'
ALTER TABLE RA_TIMEZONE ADD CONSTRAINT RA_TZ_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TZ_R_LANG_FK'
ALTER TABLE RA_TIMEZONE ADD CONSTRAINT RA_TZ_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TZ_R_TZ_FK'
ALTER TABLE RA_TIMEZONE ADD CONSTRAINT RA_TZ_R_TZ_FK FOREIGN KEY
(
TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TZ_SRCD_FK'
ALTER TABLE RA_TIMEZONE ADD CONSTRAINT RA_TZ_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TOT_BA_FK'
ALTER TABLE RA_TITLE_OWN_TYPE ADD CONSTRAINT RA_TOT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TOT_PSWA_FK'
ALTER TABLE RA_TITLE_OWN_TYPE ADD CONSTRAINT RA_TOT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TOT_R_ART_FK'
ALTER TABLE RA_TITLE_OWN_TYPE ADD CONSTRAINT RA_TOT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TOT_R_ATY_FK'
ALTER TABLE RA_TITLE_OWN_TYPE ADD CONSTRAINT RA_TOT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TOT_R_LANG_FK'
ALTER TABLE RA_TITLE_OWN_TYPE ADD CONSTRAINT RA_TOT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TOT_R_TOT_FK'
ALTER TABLE RA_TITLE_OWN_TYPE ADD CONSTRAINT RA_TOT_R_TOT_FK FOREIGN KEY
(
TITLE_OWN_TYPE
)
REFERENCES R_TITLE_OWN_TYPE
(
TITLE_OWN_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TOT_SRCD_FK'
ALTER TABLE RA_TITLE_OWN_TYPE ADD CONSTRAINT RA_TOT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TOT1_BA_FK'
ALTER TABLE RA_TOUR_OCCURRENCE_TYPE ADD CONSTRAINT RA_TOT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TOT1_PSWA_FK'
ALTER TABLE RA_TOUR_OCCURRENCE_TYPE ADD CONSTRAINT RA_TOT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TOT1_R_ART_FK'
ALTER TABLE RA_TOUR_OCCURRENCE_TYPE ADD CONSTRAINT RA_TOT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TOT1_R_ATY_FK'
ALTER TABLE RA_TOUR_OCCURRENCE_TYPE ADD CONSTRAINT RA_TOT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TOT1_R_LANG_FK'
ALTER TABLE RA_TOUR_OCCURRENCE_TYPE ADD CONSTRAINT RA_TOT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TOT1_R_TOT1_FK'
ALTER TABLE RA_TOUR_OCCURRENCE_TYPE ADD CONSTRAINT RA_TOT1_R_TOT1_FK FOREIGN KEY
(
OCCURRENCE_TYPE
)
REFERENCES R_TOUR_OCCURRENCE_TYPE
(
OCCURRENCE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TOT1_SRCD_FK'
ALTER TABLE RA_TOUR_OCCURRENCE_TYPE ADD CONSTRAINT RA_TOT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_THF_BA_FK'
ALTER TABLE RA_TRACE_HEADER_FORMAT ADD CONSTRAINT RA_THF_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_THF_PSWA_FK'
ALTER TABLE RA_TRACE_HEADER_FORMAT ADD CONSTRAINT RA_THF_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_THF_R_ART_FK'
ALTER TABLE RA_TRACE_HEADER_FORMAT ADD CONSTRAINT RA_THF_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_THF_R_ATY_FK'
ALTER TABLE RA_TRACE_HEADER_FORMAT ADD CONSTRAINT RA_THF_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_THF_R_LANG_FK'
ALTER TABLE RA_TRACE_HEADER_FORMAT ADD CONSTRAINT RA_THF_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_THF_R_THF_FK'
ALTER TABLE RA_TRACE_HEADER_FORMAT ADD CONSTRAINT RA_THF_R_THF_FK FOREIGN KEY
(
HEADER_FORMAT
)
REFERENCES R_TRACE_HEADER_FORMAT
(
HEADER_FORMAT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_THF_SRCD_FK'
ALTER TABLE RA_TRACE_HEADER_FORMAT ADD CONSTRAINT RA_THF_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_THW_BA_FK'
ALTER TABLE RA_TRACE_HEADER_WORD ADD CONSTRAINT RA_THW_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_THW_PSWA_FK'
ALTER TABLE RA_TRACE_HEADER_WORD ADD CONSTRAINT RA_THW_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_THW_R_ART_FK'
ALTER TABLE RA_TRACE_HEADER_WORD ADD CONSTRAINT RA_THW_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_THW_R_ATY_FK'
ALTER TABLE RA_TRACE_HEADER_WORD ADD CONSTRAINT RA_THW_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_THW_R_LANG_FK'
ALTER TABLE RA_TRACE_HEADER_WORD ADD CONSTRAINT RA_THW_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_THW_R_THW_FK'
ALTER TABLE RA_TRACE_HEADER_WORD ADD CONSTRAINT RA_THW_R_THW_FK FOREIGN KEY
(
HEADER_WORD
)
REFERENCES R_TRACE_HEADER_WORD
(
HEADER_WORD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_THW_SRCD_FK'
ALTER TABLE RA_TRACE_HEADER_WORD ADD CONSTRAINT RA_THW_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TCT_BA_FK'
ALTER TABLE RA_TRANS_COMP_TYPE ADD CONSTRAINT RA_TCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TCT_PSWA_FK'
ALTER TABLE RA_TRANS_COMP_TYPE ADD CONSTRAINT RA_TCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TCT_R_ART_FK'
ALTER TABLE RA_TRANS_COMP_TYPE ADD CONSTRAINT RA_TCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TCT_R_ATY_FK'
ALTER TABLE RA_TRANS_COMP_TYPE ADD CONSTRAINT RA_TCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TCT_R_LANG_FK'
ALTER TABLE RA_TRANS_COMP_TYPE ADD CONSTRAINT RA_TCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TCT_R_TCT_FK'
ALTER TABLE RA_TRANS_COMP_TYPE ADD CONSTRAINT RA_TCT_R_TCT_FK FOREIGN KEY
(
TRANS_COMPONENT_TYPE
)
REFERENCES R_TRANS_COMP_TYPE
(
TRANS_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TCT_SRCD_FK'
ALTER TABLE RA_TRANS_COMP_TYPE ADD CONSTRAINT RA_TCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TS1_BA_FK'
ALTER TABLE RA_TRANS_STATUS ADD CONSTRAINT RA_TS1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TS1_PSWA_FK'
ALTER TABLE RA_TRANS_STATUS ADD CONSTRAINT RA_TS1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TS1_R_ART_FK'
ALTER TABLE RA_TRANS_STATUS ADD CONSTRAINT RA_TS1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TS1_R_ATY_FK'
ALTER TABLE RA_TRANS_STATUS ADD CONSTRAINT RA_TS1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TS1_R_LANG_FK'
ALTER TABLE RA_TRANS_STATUS ADD CONSTRAINT RA_TS1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TS1_R_TS1_FK'
ALTER TABLE RA_TRANS_STATUS ADD CONSTRAINT RA_TS1_R_TS1_FK FOREIGN KEY
(
TRANSACTION_STATUS
)
REFERENCES R_TRANS_STATUS
(
TRANSACTION_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TS1_SRCD_FK'
ALTER TABLE RA_TRANS_STATUS ADD CONSTRAINT RA_TS1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TT3_BA_FK'
ALTER TABLE RA_TRANS_TYPE ADD CONSTRAINT RA_TT3_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TT3_PSWA_FK'
ALTER TABLE RA_TRANS_TYPE ADD CONSTRAINT RA_TT3_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TT3_R_ART_FK'
ALTER TABLE RA_TRANS_TYPE ADD CONSTRAINT RA_TT3_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TT3_R_ATY_FK'
ALTER TABLE RA_TRANS_TYPE ADD CONSTRAINT RA_TT3_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TT3_R_LANG_FK'
ALTER TABLE RA_TRANS_TYPE ADD CONSTRAINT RA_TT3_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TT3_R_TT3_FK'
ALTER TABLE RA_TRANS_TYPE ADD CONSTRAINT RA_TT3_R_TT3_FK FOREIGN KEY
(
TRANS_TYPE
)
REFERENCES R_TRANS_TYPE
(
TRANS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TT3_SRCD_FK'
ALTER TABLE RA_TRANS_TYPE ADD CONSTRAINT RA_TT3_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TF_BA_FK'
ALTER TABLE RA_TREATMENT_FLUID ADD CONSTRAINT RA_TF_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TF_PSWA_FK'
ALTER TABLE RA_TREATMENT_FLUID ADD CONSTRAINT RA_TF_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TF_R_ART_FK'
ALTER TABLE RA_TREATMENT_FLUID ADD CONSTRAINT RA_TF_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TF_R_ATY_FK'
ALTER TABLE RA_TREATMENT_FLUID ADD CONSTRAINT RA_TF_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TF_R_LANG_FK'
ALTER TABLE RA_TREATMENT_FLUID ADD CONSTRAINT RA_TF_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TF_R_TF_FK'
ALTER TABLE RA_TREATMENT_FLUID ADD CONSTRAINT RA_TF_R_TF_FK FOREIGN KEY
(
TREATMENT_FLUID
)
REFERENCES R_TREATMENT_FLUID
(
TREATMENT_FLUID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TF_SRCD_FK'
ALTER TABLE RA_TREATMENT_FLUID ADD CONSTRAINT RA_TF_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TT1_BA_FK'
ALTER TABLE RA_TREATMENT_TYPE ADD CONSTRAINT RA_TT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TT1_PSWA_FK'
ALTER TABLE RA_TREATMENT_TYPE ADD CONSTRAINT RA_TT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TT1_R_ART_FK'
ALTER TABLE RA_TREATMENT_TYPE ADD CONSTRAINT RA_TT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TT1_R_ATY_FK'
ALTER TABLE RA_TREATMENT_TYPE ADD CONSTRAINT RA_TT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TT1_R_LANG_FK'
ALTER TABLE RA_TREATMENT_TYPE ADD CONSTRAINT RA_TT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TT1_R_TT1_FK'
ALTER TABLE RA_TREATMENT_TYPE ADD CONSTRAINT RA_TT1_R_TT1_FK FOREIGN KEY
(
TREATMENT_TYPE
)
REFERENCES R_TREATMENT_TYPE
(
TREATMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TT1_SRCD_FK'
ALTER TABLE RA_TREATMENT_TYPE ADD CONSTRAINT RA_TT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TG_BA_FK'
ALTER TABLE RA_TUBING_GRADE ADD CONSTRAINT RA_TG_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TG_PSWA_FK'
ALTER TABLE RA_TUBING_GRADE ADD CONSTRAINT RA_TG_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TG_R_ART_FK'
ALTER TABLE RA_TUBING_GRADE ADD CONSTRAINT RA_TG_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TG_R_ATY_FK'
ALTER TABLE RA_TUBING_GRADE ADD CONSTRAINT RA_TG_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TG_R_LANG_FK'
ALTER TABLE RA_TUBING_GRADE ADD CONSTRAINT RA_TG_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TG_R_TG_FK'
ALTER TABLE RA_TUBING_GRADE ADD CONSTRAINT RA_TG_R_TG_FK FOREIGN KEY
(
TUBING_GRADE
)
REFERENCES R_TUBING_GRADE
(
TUBING_GRADE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TG_SRCD_FK'
ALTER TABLE RA_TUBING_GRADE ADD CONSTRAINT RA_TG_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TT2_BA_FK'
ALTER TABLE RA_TUBING_TYPE ADD CONSTRAINT RA_TT2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TT2_PSWA_FK'
ALTER TABLE RA_TUBING_TYPE ADD CONSTRAINT RA_TT2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TT2_R_ART_FK'
ALTER TABLE RA_TUBING_TYPE ADD CONSTRAINT RA_TT2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TT2_R_ATY_FK'
ALTER TABLE RA_TUBING_TYPE ADD CONSTRAINT RA_TT2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TT2_R_LANG_FK'
ALTER TABLE RA_TUBING_TYPE ADD CONSTRAINT RA_TT2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TT2_R_TT2_FK'
ALTER TABLE RA_TUBING_TYPE ADD CONSTRAINT RA_TT2_R_TT2_FK FOREIGN KEY
(
TUBING_TYPE
)
REFERENCES R_TUBING_TYPE
(
TUBING_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TT2_SRCD_FK'
ALTER TABLE RA_TUBING_TYPE ADD CONSTRAINT RA_TT2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TM_BA_FK'
ALTER TABLE RA_TVD_METHOD ADD CONSTRAINT RA_TM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TM_PSWA_FK'
ALTER TABLE RA_TVD_METHOD ADD CONSTRAINT RA_TM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TM_R_ART_FK'
ALTER TABLE RA_TVD_METHOD ADD CONSTRAINT RA_TM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TM_R_ATY_FK'
ALTER TABLE RA_TVD_METHOD ADD CONSTRAINT RA_TM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TM_R_LANG_FK'
ALTER TABLE RA_TVD_METHOD ADD CONSTRAINT RA_TM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TM_R_TM_FK'
ALTER TABLE RA_TVD_METHOD ADD CONSTRAINT RA_TM_R_TM_FK FOREIGN KEY
(
TVD_METHOD
)
REFERENCES R_TVD_METHOD
(
TVD_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_TM_SRCD_FK'
ALTER TABLE RA_TVD_METHOD ADD CONSTRAINT RA_TM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VQ1_BA_FK'
ALTER TABLE RA_VALUE_QUALITY ADD CONSTRAINT RA_VQ1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VQ1_PSWA_FK'
ALTER TABLE RA_VALUE_QUALITY ADD CONSTRAINT RA_VQ1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VQ1_R_ART_FK'
ALTER TABLE RA_VALUE_QUALITY ADD CONSTRAINT RA_VQ1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VQ1_R_ATY_FK'
ALTER TABLE RA_VALUE_QUALITY ADD CONSTRAINT RA_VQ1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VQ1_R_LANG_FK'
ALTER TABLE RA_VALUE_QUALITY ADD CONSTRAINT RA_VQ1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VQ1_R_VQ1_FK'
ALTER TABLE RA_VALUE_QUALITY ADD CONSTRAINT RA_VQ1_R_VQ1_FK FOREIGN KEY
(
VALUE_QUALITY
)
REFERENCES R_VALUE_QUALITY
(
VALUE_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VQ1_SRCD_FK'
ALTER TABLE RA_VALUE_QUALITY ADD CONSTRAINT RA_VQ1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VC_BA_FK'
ALTER TABLE RA_VELOCITY_COMPUTE ADD CONSTRAINT RA_VC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VC_PSWA_FK'
ALTER TABLE RA_VELOCITY_COMPUTE ADD CONSTRAINT RA_VC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VC_R_ART_FK'
ALTER TABLE RA_VELOCITY_COMPUTE ADD CONSTRAINT RA_VC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VC_R_ATY_FK'
ALTER TABLE RA_VELOCITY_COMPUTE ADD CONSTRAINT RA_VC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VC_R_LANG_FK'
ALTER TABLE RA_VELOCITY_COMPUTE ADD CONSTRAINT RA_VC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VC_R_VC_FK'
ALTER TABLE RA_VELOCITY_COMPUTE ADD CONSTRAINT RA_VC_R_VC_FK FOREIGN KEY
(
COMPUTE_METHOD
)
REFERENCES R_VELOCITY_COMPUTE
(
COMPUTE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VC_SRCD_FK'
ALTER TABLE RA_VELOCITY_COMPUTE ADD CONSTRAINT RA_VC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VD_BA_FK'
ALTER TABLE RA_VELOCITY_DIMENSION ADD CONSTRAINT RA_VD_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VD_PSWA_FK'
ALTER TABLE RA_VELOCITY_DIMENSION ADD CONSTRAINT RA_VD_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VD_R_ART_FK'
ALTER TABLE RA_VELOCITY_DIMENSION ADD CONSTRAINT RA_VD_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VD_R_ATY_FK'
ALTER TABLE RA_VELOCITY_DIMENSION ADD CONSTRAINT RA_VD_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VD_R_LANG_FK'
ALTER TABLE RA_VELOCITY_DIMENSION ADD CONSTRAINT RA_VD_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VD_R_VD_FK'
ALTER TABLE RA_VELOCITY_DIMENSION ADD CONSTRAINT RA_VD_R_VD_FK FOREIGN KEY
(
VELOCITY_DIMENSION
)
REFERENCES R_VELOCITY_DIMENSION
(
VELOCITY_DIMENSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VD_SRCD_FK'
ALTER TABLE RA_VELOCITY_DIMENSION ADD CONSTRAINT RA_VD_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VT_BA_FK'
ALTER TABLE RA_VELOCITY_TYPE ADD CONSTRAINT RA_VT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VT_PSWA_FK'
ALTER TABLE RA_VELOCITY_TYPE ADD CONSTRAINT RA_VT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VT_R_ART_FK'
ALTER TABLE RA_VELOCITY_TYPE ADD CONSTRAINT RA_VT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VT_R_ATY_FK'
ALTER TABLE RA_VELOCITY_TYPE ADD CONSTRAINT RA_VT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VT_R_LANG_FK'
ALTER TABLE RA_VELOCITY_TYPE ADD CONSTRAINT RA_VT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VT_R_VT_FK'
ALTER TABLE RA_VELOCITY_TYPE ADD CONSTRAINT RA_VT_R_VT_FK FOREIGN KEY
(
VELOCITY_TYPE
)
REFERENCES R_VELOCITY_TYPE
(
VELOCITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VT_SRCD_FK'
ALTER TABLE RA_VELOCITY_TYPE ADD CONSTRAINT RA_VT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VDT_BA_FK'
ALTER TABLE RA_VERTICAL_DATUM_TYPE ADD CONSTRAINT RA_VDT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VDT_PSWA_FK'
ALTER TABLE RA_VERTICAL_DATUM_TYPE ADD CONSTRAINT RA_VDT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VDT_R_ART_FK'
ALTER TABLE RA_VERTICAL_DATUM_TYPE ADD CONSTRAINT RA_VDT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VDT_R_ATY_FK'
ALTER TABLE RA_VERTICAL_DATUM_TYPE ADD CONSTRAINT RA_VDT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VDT_R_LANG_FK'
ALTER TABLE RA_VERTICAL_DATUM_TYPE ADD CONSTRAINT RA_VDT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VDT_R_VDT_FK'
ALTER TABLE RA_VERTICAL_DATUM_TYPE ADD CONSTRAINT RA_VDT_R_VDT_FK FOREIGN KEY
(
VERTICAL_DATUM_TYPE
)
REFERENCES R_VERTICAL_DATUM_TYPE
(
VERTICAL_DATUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VDT_SRCD_FK'
ALTER TABLE RA_VERTICAL_DATUM_TYPE ADD CONSTRAINT RA_VDT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VR_BA_FK'
ALTER TABLE RA_VESSEL_REFERENCE ADD CONSTRAINT RA_VR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VR_PSWA_FK'
ALTER TABLE RA_VESSEL_REFERENCE ADD CONSTRAINT RA_VR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VR_R_ART_FK'
ALTER TABLE RA_VESSEL_REFERENCE ADD CONSTRAINT RA_VR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VR_R_ATY_FK'
ALTER TABLE RA_VESSEL_REFERENCE ADD CONSTRAINT RA_VR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VR_R_LANG_FK'
ALTER TABLE RA_VESSEL_REFERENCE ADD CONSTRAINT RA_VR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VR_R_VR_FK'
ALTER TABLE RA_VESSEL_REFERENCE ADD CONSTRAINT RA_VR_R_VR_FK FOREIGN KEY
(
REFERENCE_POINT
)
REFERENCES R_VESSEL_REFERENCE
(
REFERENCE_POINT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VR_SRCD_FK'
ALTER TABLE RA_VESSEL_REFERENCE ADD CONSTRAINT RA_VR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VS_BA_FK'
ALTER TABLE RA_VESSEL_SIZE ADD CONSTRAINT RA_VS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VS_PSWA_FK'
ALTER TABLE RA_VESSEL_SIZE ADD CONSTRAINT RA_VS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VS_R_ART_FK'
ALTER TABLE RA_VESSEL_SIZE ADD CONSTRAINT RA_VS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VS_R_ATY_FK'
ALTER TABLE RA_VESSEL_SIZE ADD CONSTRAINT RA_VS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VS_R_LANG_FK'
ALTER TABLE RA_VESSEL_SIZE ADD CONSTRAINT RA_VS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VS_R_VS_FK'
ALTER TABLE RA_VESSEL_SIZE ADD CONSTRAINT RA_VS_R_VS_FK FOREIGN KEY
(
VESSEL_SIZE
)
REFERENCES R_VESSEL_SIZE
(
VESSEL_SIZE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VS_SRCD_FK'
ALTER TABLE RA_VESSEL_SIZE ADD CONSTRAINT RA_VS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VF_BA_FK'
ALTER TABLE RA_VOLUME_FRACTION ADD CONSTRAINT RA_VF_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VF_PSWA_FK'
ALTER TABLE RA_VOLUME_FRACTION ADD CONSTRAINT RA_VF_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VF_R_ART_FK'
ALTER TABLE RA_VOLUME_FRACTION ADD CONSTRAINT RA_VF_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VF_R_ATY_FK'
ALTER TABLE RA_VOLUME_FRACTION ADD CONSTRAINT RA_VF_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VF_R_LANG_FK'
ALTER TABLE RA_VOLUME_FRACTION ADD CONSTRAINT RA_VF_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VF_R_VF_FK'
ALTER TABLE RA_VOLUME_FRACTION ADD CONSTRAINT RA_VF_R_VF_FK FOREIGN KEY
(
VOLUME_FRACTION_TYPE
)
REFERENCES R_VOLUME_FRACTION
(
VOLUME_FRACTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VF_SRCD_FK'
ALTER TABLE RA_VOLUME_FRACTION ADD CONSTRAINT RA_VF_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VM_BA_FK'
ALTER TABLE RA_VOLUME_METHOD ADD CONSTRAINT RA_VM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VM_PSWA_FK'
ALTER TABLE RA_VOLUME_METHOD ADD CONSTRAINT RA_VM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VM_R_ART_FK'
ALTER TABLE RA_VOLUME_METHOD ADD CONSTRAINT RA_VM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VM_R_ATY_FK'
ALTER TABLE RA_VOLUME_METHOD ADD CONSTRAINT RA_VM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VM_R_LANG_FK'
ALTER TABLE RA_VOLUME_METHOD ADD CONSTRAINT RA_VM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VM_R_VM_FK'
ALTER TABLE RA_VOLUME_METHOD ADD CONSTRAINT RA_VM_R_VM_FK FOREIGN KEY
(
VOLUME_METHOD
)
REFERENCES R_VOLUME_METHOD
(
VOLUME_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VM_SRCD_FK'
ALTER TABLE RA_VOLUME_METHOD ADD CONSTRAINT RA_VM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VT1_BA_FK'
ALTER TABLE RA_VSP_TYPE ADD CONSTRAINT RA_VT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VT1_PSWA_FK'
ALTER TABLE RA_VSP_TYPE ADD CONSTRAINT RA_VT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VT1_R_ART_FK'
ALTER TABLE RA_VSP_TYPE ADD CONSTRAINT RA_VT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VT1_R_ATY_FK'
ALTER TABLE RA_VSP_TYPE ADD CONSTRAINT RA_VT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VT1_R_LANG_FK'
ALTER TABLE RA_VSP_TYPE ADD CONSTRAINT RA_VT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VT1_R_VT1_FK'
ALTER TABLE RA_VSP_TYPE ADD CONSTRAINT RA_VT1_R_VT1_FK FOREIGN KEY
(
VSP_TYPE
)
REFERENCES R_VSP_TYPE
(
VSP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_VT1_SRCD_FK'
ALTER TABLE RA_VSP_TYPE ADD CONSTRAINT RA_VT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WAR_BA_FK'
ALTER TABLE RA_WASTE_ADJUST_REASON ADD CONSTRAINT RA_WAR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WAR_PSWA_FK'
ALTER TABLE RA_WASTE_ADJUST_REASON ADD CONSTRAINT RA_WAR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WAR_R_ART_FK'
ALTER TABLE RA_WASTE_ADJUST_REASON ADD CONSTRAINT RA_WAR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WAR_R_ATY_FK'
ALTER TABLE RA_WASTE_ADJUST_REASON ADD CONSTRAINT RA_WAR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WAR_R_LANG_FK'
ALTER TABLE RA_WASTE_ADJUST_REASON ADD CONSTRAINT RA_WAR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WAR_R_WAR_FK'
ALTER TABLE RA_WASTE_ADJUST_REASON ADD CONSTRAINT RA_WAR_R_WAR_FK FOREIGN KEY
(
ADJUST_REASON
)
REFERENCES R_WASTE_ADJUST_REASON
(
ADJUST_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WAR_SRCD_FK'
ALTER TABLE RA_WASTE_ADJUST_REASON ADD CONSTRAINT RA_WAR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WFT_BA_FK'
ALTER TABLE RA_WASTE_FACILITY_TYPE ADD CONSTRAINT RA_WFT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WFT_PSWA_FK'
ALTER TABLE RA_WASTE_FACILITY_TYPE ADD CONSTRAINT RA_WFT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WFT_R_ART_FK'
ALTER TABLE RA_WASTE_FACILITY_TYPE ADD CONSTRAINT RA_WFT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WFT_R_ATY_FK'
ALTER TABLE RA_WASTE_FACILITY_TYPE ADD CONSTRAINT RA_WFT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WFT_R_LANG_FK'
ALTER TABLE RA_WASTE_FACILITY_TYPE ADD CONSTRAINT RA_WFT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WFT_R_WFT_FK'
ALTER TABLE RA_WASTE_FACILITY_TYPE ADD CONSTRAINT RA_WFT_R_WFT_FK FOREIGN KEY
(
WASTE_FACILITY_TYPE
)
REFERENCES R_WASTE_FACILITY_TYPE
(
WASTE_FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WFT_SRCD_FK'
ALTER TABLE RA_WASTE_FACILITY_TYPE ADD CONSTRAINT RA_WFT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WH_BA_FK'
ALTER TABLE RA_WASTE_HANDLING ADD CONSTRAINT RA_WH_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WH_PSWA_FK'
ALTER TABLE RA_WASTE_HANDLING ADD CONSTRAINT RA_WH_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WH_R_ART_FK'
ALTER TABLE RA_WASTE_HANDLING ADD CONSTRAINT RA_WH_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WH_R_ATY_FK'
ALTER TABLE RA_WASTE_HANDLING ADD CONSTRAINT RA_WH_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WH_R_LANG_FK'
ALTER TABLE RA_WASTE_HANDLING ADD CONSTRAINT RA_WH_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WH_R_WH_FK'
ALTER TABLE RA_WASTE_HANDLING ADD CONSTRAINT RA_WH_R_WH_FK FOREIGN KEY
(
WASTE_HANDLING_METHOD
)
REFERENCES R_WASTE_HANDLING
(
WASTE_HANDLING_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WH_SRCD_FK'
ALTER TABLE RA_WASTE_HANDLING ADD CONSTRAINT RA_WH_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WHZ_BA_FK'
ALTER TABLE RA_WASTE_HAZARD_TYPE ADD CONSTRAINT RA_WHZ_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WHZ_PSWA_FK'
ALTER TABLE RA_WASTE_HAZARD_TYPE ADD CONSTRAINT RA_WHZ_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WHZ_R_ART_FK'
ALTER TABLE RA_WASTE_HAZARD_TYPE ADD CONSTRAINT RA_WHZ_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WHZ_R_ATY_FK'
ALTER TABLE RA_WASTE_HAZARD_TYPE ADD CONSTRAINT RA_WHZ_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WHZ_R_LANG_FK'
ALTER TABLE RA_WASTE_HAZARD_TYPE ADD CONSTRAINT RA_WHZ_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WHZ_R_WHZ_FK'
ALTER TABLE RA_WASTE_HAZARD_TYPE ADD CONSTRAINT RA_WHZ_R_WHZ_FK FOREIGN KEY
(
WASTE_HAZARD
)
REFERENCES R_WASTE_HAZARD_TYPE
(
WASTE_HAZARD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WHZ_SRCD_FK'
ALTER TABLE RA_WASTE_HAZARD_TYPE ADD CONSTRAINT RA_WHZ_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WM_BA_FK'
ALTER TABLE RA_WASTE_MATERIAL ADD CONSTRAINT RA_WM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WM_PSWA_FK'
ALTER TABLE RA_WASTE_MATERIAL ADD CONSTRAINT RA_WM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WM_R_ART_FK'
ALTER TABLE RA_WASTE_MATERIAL ADD CONSTRAINT RA_WM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WM_R_ATY_FK'
ALTER TABLE RA_WASTE_MATERIAL ADD CONSTRAINT RA_WM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WM_R_LANG_FK'
ALTER TABLE RA_WASTE_MATERIAL ADD CONSTRAINT RA_WM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WM_R_WM_FK'
ALTER TABLE RA_WASTE_MATERIAL ADD CONSTRAINT RA_WM_R_WM_FK FOREIGN KEY
(
WASTE_MATERIAL
)
REFERENCES R_WASTE_MATERIAL
(
WASTE_MATERIAL
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WM_SRCD_FK'
ALTER TABLE RA_WASTE_MATERIAL ADD CONSTRAINT RA_WM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WO_BA_FK'
ALTER TABLE RA_WASTE_ORIGIN ADD CONSTRAINT RA_WO_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WO_PSWA_FK'
ALTER TABLE RA_WASTE_ORIGIN ADD CONSTRAINT RA_WO_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WO_R_ART_FK'
ALTER TABLE RA_WASTE_ORIGIN ADD CONSTRAINT RA_WO_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WO_R_ATY_FK'
ALTER TABLE RA_WASTE_ORIGIN ADD CONSTRAINT RA_WO_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WO_R_LANG_FK'
ALTER TABLE RA_WASTE_ORIGIN ADD CONSTRAINT RA_WO_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WO_R_WO_FK'
ALTER TABLE RA_WASTE_ORIGIN ADD CONSTRAINT RA_WO_R_WO_FK FOREIGN KEY
(
WASTE_ORIGIN
)
REFERENCES R_WASTE_ORIGIN
(
WASTE_ORIGIN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WO_SRCD_FK'
ALTER TABLE RA_WASTE_ORIGIN ADD CONSTRAINT RA_WO_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WBZ_BA_FK'
ALTER TABLE RA_WATER_BOTTOM_ZONE ADD CONSTRAINT RA_WBZ_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WBZ_PSWA_FK'
ALTER TABLE RA_WATER_BOTTOM_ZONE ADD CONSTRAINT RA_WBZ_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WBZ_R_ART_FK'
ALTER TABLE RA_WATER_BOTTOM_ZONE ADD CONSTRAINT RA_WBZ_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WBZ_R_ATY_FK'
ALTER TABLE RA_WATER_BOTTOM_ZONE ADD CONSTRAINT RA_WBZ_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WBZ_R_LANG_FK'
ALTER TABLE RA_WATER_BOTTOM_ZONE ADD CONSTRAINT RA_WBZ_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WBZ_R_WBZ_FK'
ALTER TABLE RA_WATER_BOTTOM_ZONE ADD CONSTRAINT RA_WBZ_R_WBZ_FK FOREIGN KEY
(
WATER_BOTTOM_ZONE
)
REFERENCES R_WATER_BOTTOM_ZONE
(
WATER_BOTTOM_ZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WBZ_SRCD_FK'
ALTER TABLE RA_WATER_BOTTOM_ZONE ADD CONSTRAINT RA_WBZ_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WATC_BA_FK'
ALTER TABLE RA_WATER_CONDITION ADD CONSTRAINT RA_WATC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WATC_PSWA_FK'
ALTER TABLE RA_WATER_CONDITION ADD CONSTRAINT RA_WATC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WATC_R_ART_FK'
ALTER TABLE RA_WATER_CONDITION ADD CONSTRAINT RA_WATC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WATC_R_ATY_FK'
ALTER TABLE RA_WATER_CONDITION ADD CONSTRAINT RA_WATC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WATC_R_LANG_FK'
ALTER TABLE RA_WATER_CONDITION ADD CONSTRAINT RA_WATC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WATC_R_WATC_FK'
ALTER TABLE RA_WATER_CONDITION ADD CONSTRAINT RA_WATC_R_WATC_FK FOREIGN KEY
(
WATER_CONDITION
)
REFERENCES R_WATER_CONDITION
(
WATER_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WATC_SRCD_FK'
ALTER TABLE RA_WATER_CONDITION ADD CONSTRAINT RA_WATC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WD_BA_FK'
ALTER TABLE RA_WATER_DATUM ADD CONSTRAINT RA_WD_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WD_PSWA_FK'
ALTER TABLE RA_WATER_DATUM ADD CONSTRAINT RA_WD_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WD_R_ART_FK'
ALTER TABLE RA_WATER_DATUM ADD CONSTRAINT RA_WD_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WD_R_ATY_FK'
ALTER TABLE RA_WATER_DATUM ADD CONSTRAINT RA_WD_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WD_R_LANG_FK'
ALTER TABLE RA_WATER_DATUM ADD CONSTRAINT RA_WD_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WD_R_WD_FK'
ALTER TABLE RA_WATER_DATUM ADD CONSTRAINT RA_WD_R_WD_FK FOREIGN KEY
(
WATER_DATUM
)
REFERENCES R_WATER_DATUM
(
WATER_DATUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WD_SRCD_FK'
ALTER TABLE RA_WATER_DATUM ADD CONSTRAINT RA_WD_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APC_2_BA_FK'
ALTER TABLE RA_WATER_PROPERTY_CODE ADD CONSTRAINT RA_APC_2_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APC_2_PSWA_FK'
ALTER TABLE RA_WATER_PROPERTY_CODE ADD CONSTRAINT RA_APC_2_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APC_2_R_ART_FK'
ALTER TABLE RA_WATER_PROPERTY_CODE ADD CONSTRAINT RA_APC_2_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APC_2_R_ATY_FK'
ALTER TABLE RA_WATER_PROPERTY_CODE ADD CONSTRAINT RA_APC_2_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APC_2_R_ANLWP_FK'
ALTER TABLE RA_WATER_PROPERTY_CODE ADD CONSTRAINT RA_APC_2_R_ANLWP_FK FOREIGN KEY
(
WATER_PROPERTY
)
REFERENCES R_ANL_WATER_PROPERTY
(
WATER_PROPERTY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APC_2_R_LANG_FK'
ALTER TABLE RA_WATER_PROPERTY_CODE ADD CONSTRAINT RA_APC_2_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APC_2_R_APC_2_FK'
ALTER TABLE RA_WATER_PROPERTY_CODE ADD CONSTRAINT RA_APC_2_R_APC_2_FK FOREIGN KEY
(
WATER_PROPERTY,
WATER_PROPERTY_CODE
)
REFERENCES R_WATER_PROPERTY_CODE
(
WATER_PROPERTY,
WATER_PROPERTY_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_APC_2_SRCD_FK'
ALTER TABLE RA_WATER_PROPERTY_CODE ADD CONSTRAINT RA_APC_2_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WCOND_BA_FK'
ALTER TABLE RA_WEATHER_CONDITION ADD CONSTRAINT RA_WCOND_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WCOND_PSWA_FK'
ALTER TABLE RA_WEATHER_CONDITION ADD CONSTRAINT RA_WCOND_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WCOND_R_ART_FK'
ALTER TABLE RA_WEATHER_CONDITION ADD CONSTRAINT RA_WCOND_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WCOND_R_ATY_FK'
ALTER TABLE RA_WEATHER_CONDITION ADD CONSTRAINT RA_WCOND_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WCOND_R_LANG_FK'
ALTER TABLE RA_WEATHER_CONDITION ADD CONSTRAINT RA_WCOND_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WCOND_R_WCOND_FK'
ALTER TABLE RA_WEATHER_CONDITION ADD CONSTRAINT RA_WCOND_R_WCOND_FK FOREIGN KEY
(
WEATHER_CONDITION
)
REFERENCES R_WEATHER_CONDITION
(
WEATHER_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WCOND_SRCD_FK'
ALTER TABLE RA_WEATHER_CONDITION ADD CONSTRAINT RA_WCOND_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WACA_BA_FK'
ALTER TABLE RA_WELL_ACTIVITY_CAUSE ADD CONSTRAINT RA_WACA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WACA_PSWA_FK'
ALTER TABLE RA_WELL_ACTIVITY_CAUSE ADD CONSTRAINT RA_WACA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WACA_R_ART_FK'
ALTER TABLE RA_WELL_ACTIVITY_CAUSE ADD CONSTRAINT RA_WACA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WACA_R_ATY_FK'
ALTER TABLE RA_WELL_ACTIVITY_CAUSE ADD CONSTRAINT RA_WACA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WACA_R_LANG_FK'
ALTER TABLE RA_WELL_ACTIVITY_CAUSE ADD CONSTRAINT RA_WACA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WACA_R_WACA_FK'
ALTER TABLE RA_WELL_ACTIVITY_CAUSE ADD CONSTRAINT RA_WACA_R_WACA_FK FOREIGN KEY
(
CAUSE_TYPE
)
REFERENCES R_WELL_ACTIVITY_CAUSE
(
CAUSE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WACA_SRCD_FK'
ALTER TABLE RA_WELL_ACTIVITY_CAUSE ADD CONSTRAINT RA_WACA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WACT_BA_FK'
ALTER TABLE RA_WELL_ACTIVITY_COMP_TYPE ADD CONSTRAINT RA_WACT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WACT_PSWA_FK'
ALTER TABLE RA_WELL_ACTIVITY_COMP_TYPE ADD CONSTRAINT RA_WACT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WACT_R_ART_FK'
ALTER TABLE RA_WELL_ACTIVITY_COMP_TYPE ADD CONSTRAINT RA_WACT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WACT_R_ATY_FK'
ALTER TABLE RA_WELL_ACTIVITY_COMP_TYPE ADD CONSTRAINT RA_WACT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WACT_R_LANG_FK'
ALTER TABLE RA_WELL_ACTIVITY_COMP_TYPE ADD CONSTRAINT RA_WACT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WACT_R_WACT_FK'
ALTER TABLE RA_WELL_ACTIVITY_COMP_TYPE ADD CONSTRAINT RA_WACT_R_WACT_FK FOREIGN KEY
(
WELL_ACTIVITY_COMPONENT_TYPE
)
REFERENCES R_WELL_ACTIVITY_COMP_TYPE
(
WELL_ACTIVITY_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WACT_SRCD_FK'
ALTER TABLE RA_WELL_ACTIVITY_COMP_TYPE ADD CONSTRAINT RA_WACT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WATE_BA_FK'
ALTER TABLE RA_WELL_ACT_TYPE_EQUIV ADD CONSTRAINT RA_WATE_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WATE_PSWA_FK'
ALTER TABLE RA_WELL_ACT_TYPE_EQUIV ADD CONSTRAINT RA_WATE_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WATE_R_ART_FK'
ALTER TABLE RA_WELL_ACT_TYPE_EQUIV ADD CONSTRAINT RA_WATE_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WATE_R_ATY_FK'
ALTER TABLE RA_WELL_ACT_TYPE_EQUIV ADD CONSTRAINT RA_WATE_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WATE_R_LANG_FK'
ALTER TABLE RA_WELL_ACT_TYPE_EQUIV ADD CONSTRAINT RA_WATE_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WATE_R_WATE_FK'
ALTER TABLE RA_WELL_ACT_TYPE_EQUIV ADD CONSTRAINT RA_WATE_R_WATE_FK FOREIGN KEY
(
EQUIV_TYPE
)
REFERENCES R_WELL_ACT_TYPE_EQUIV
(
EQUIV_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WATE_SRCD_FK'
ALTER TABLE RA_WELL_ACT_TYPE_EQUIV ADD CONSTRAINT RA_WATE_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WAL_BA_FK'
ALTER TABLE RA_WELL_ALIAS_LOCATION ADD CONSTRAINT RA_WAL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WAL_PSWA_FK'
ALTER TABLE RA_WELL_ALIAS_LOCATION ADD CONSTRAINT RA_WAL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WAL_R_ART_FK'
ALTER TABLE RA_WELL_ALIAS_LOCATION ADD CONSTRAINT RA_WAL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WAL_R_ATY_FK'
ALTER TABLE RA_WELL_ALIAS_LOCATION ADD CONSTRAINT RA_WAL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WAL_R_LANG_FK'
ALTER TABLE RA_WELL_ALIAS_LOCATION ADD CONSTRAINT RA_WAL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WAL_R_WAL_FK'
ALTER TABLE RA_WELL_ALIAS_LOCATION ADD CONSTRAINT RA_WAL_R_WAL_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_WELL_ALIAS_LOCATION
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WAL_SRCD_FK'
ALTER TABLE RA_WELL_ALIAS_LOCATION ADD CONSTRAINT RA_WAL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WCPT_BA_FK'
ALTER TABLE RA_WELL_CIRC_PRESS_TYPE ADD CONSTRAINT RA_WCPT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WCPT_PSWA_FK'
ALTER TABLE RA_WELL_CIRC_PRESS_TYPE ADD CONSTRAINT RA_WCPT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WCPT_R_ART_FK'
ALTER TABLE RA_WELL_CIRC_PRESS_TYPE ADD CONSTRAINT RA_WCPT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WCPT_R_ATY_FK'
ALTER TABLE RA_WELL_CIRC_PRESS_TYPE ADD CONSTRAINT RA_WCPT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WCPT_R_LANG_FK'
ALTER TABLE RA_WELL_CIRC_PRESS_TYPE ADD CONSTRAINT RA_WCPT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WCPT_R_WCPT_FK'
ALTER TABLE RA_WELL_CIRC_PRESS_TYPE ADD CONSTRAINT RA_WCPT_R_WCPT_FK FOREIGN KEY
(
CIRC_PRESSURE_TYPE
)
REFERENCES R_WELL_CIRC_PRESS_TYPE
(
CIRC_PRESSURE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WCPT_SRCD_FK'
ALTER TABLE RA_WELL_CIRC_PRESS_TYPE ADD CONSTRAINT RA_WCPT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WC_BA_FK'
ALTER TABLE RA_WELL_CLASS ADD CONSTRAINT RA_WC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WC_PSWA_FK'
ALTER TABLE RA_WELL_CLASS ADD CONSTRAINT RA_WC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WC_R_ART_FK'
ALTER TABLE RA_WELL_CLASS ADD CONSTRAINT RA_WC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WC_R_ATY_FK'
ALTER TABLE RA_WELL_CLASS ADD CONSTRAINT RA_WC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WC_R_LANG_FK'
ALTER TABLE RA_WELL_CLASS ADD CONSTRAINT RA_WC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WC_R_WC_FK'
ALTER TABLE RA_WELL_CLASS ADD CONSTRAINT RA_WC_R_WC_FK FOREIGN KEY
(
WELL_CLASS
)
REFERENCES R_WELL_CLASS
(
WELL_CLASS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WC_SRCD_FK'
ALTER TABLE RA_WELL_CLASS ADD CONSTRAINT RA_WC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WCT_BA_FK'
ALTER TABLE RA_WELL_COMPONENT_TYPE ADD CONSTRAINT RA_WCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WCT_PSWA_FK'
ALTER TABLE RA_WELL_COMPONENT_TYPE ADD CONSTRAINT RA_WCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WCT_R_ART_FK'
ALTER TABLE RA_WELL_COMPONENT_TYPE ADD CONSTRAINT RA_WCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WCT_R_ATY_FK'
ALTER TABLE RA_WELL_COMPONENT_TYPE ADD CONSTRAINT RA_WCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WCT_R_LANG_FK'
ALTER TABLE RA_WELL_COMPONENT_TYPE ADD CONSTRAINT RA_WCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WCT_R_WCT_FK'
ALTER TABLE RA_WELL_COMPONENT_TYPE ADD CONSTRAINT RA_WCT_R_WCT_FK FOREIGN KEY
(
WELL_COMPONENT_TYPE
)
REFERENCES R_WELL_COMPONENT_TYPE
(
WELL_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WCT_SRCD_FK'
ALTER TABLE RA_WELL_COMPONENT_TYPE ADD CONSTRAINT RA_WCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WDT_BA_FK'
ALTER TABLE RA_WELL_DATUM_TYPE ADD CONSTRAINT RA_WDT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WDT_PSWA_FK'
ALTER TABLE RA_WELL_DATUM_TYPE ADD CONSTRAINT RA_WDT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WDT_R_ART_FK'
ALTER TABLE RA_WELL_DATUM_TYPE ADD CONSTRAINT RA_WDT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WDT_R_ATY_FK'
ALTER TABLE RA_WELL_DATUM_TYPE ADD CONSTRAINT RA_WDT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WDT_R_LANG_FK'
ALTER TABLE RA_WELL_DATUM_TYPE ADD CONSTRAINT RA_WDT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WDT_R_WDT_FK'
ALTER TABLE RA_WELL_DATUM_TYPE ADD CONSTRAINT RA_WDT_R_WDT_FK FOREIGN KEY
(
WELL_DATUM_TYPE
)
REFERENCES R_WELL_DATUM_TYPE
(
WELL_DATUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WDT_SRCD_FK'
ALTER TABLE RA_WELL_DATUM_TYPE ADD CONSTRAINT RA_WDT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WDT1_BA_FK'
ALTER TABLE RA_WELL_DOWNTIME_TYPE ADD CONSTRAINT RA_WDT1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WDT1_PSWA_FK'
ALTER TABLE RA_WELL_DOWNTIME_TYPE ADD CONSTRAINT RA_WDT1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WDT1_R_ART_FK'
ALTER TABLE RA_WELL_DOWNTIME_TYPE ADD CONSTRAINT RA_WDT1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WDT1_R_ATY_FK'
ALTER TABLE RA_WELL_DOWNTIME_TYPE ADD CONSTRAINT RA_WDT1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WDT1_R_LANG_FK'
ALTER TABLE RA_WELL_DOWNTIME_TYPE ADD CONSTRAINT RA_WDT1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WDT1_R_WDT1_FK'
ALTER TABLE RA_WELL_DOWNTIME_TYPE ADD CONSTRAINT RA_WDT1_R_WDT1_FK FOREIGN KEY
(
DOWNTIME_TYPE
)
REFERENCES R_WELL_DOWNTIME_TYPE
(
DOWNTIME_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WDT1_SRCD_FK'
ALTER TABLE RA_WELL_DOWNTIME_TYPE ADD CONSTRAINT RA_WDT1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WDOT_BA_FK'
ALTER TABLE RA_WELL_DRILL_OP_TYPE ADD CONSTRAINT RA_WDOT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WDOT_PSWA_FK'
ALTER TABLE RA_WELL_DRILL_OP_TYPE ADD CONSTRAINT RA_WDOT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WDOT_R_ART_FK'
ALTER TABLE RA_WELL_DRILL_OP_TYPE ADD CONSTRAINT RA_WDOT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WDOT_R_ATY_FK'
ALTER TABLE RA_WELL_DRILL_OP_TYPE ADD CONSTRAINT RA_WDOT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WDOT_R_LANG_FK'
ALTER TABLE RA_WELL_DRILL_OP_TYPE ADD CONSTRAINT RA_WDOT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WDOT_R_WDOT_FK'
ALTER TABLE RA_WELL_DRILL_OP_TYPE ADD CONSTRAINT RA_WDOT_R_WDOT_FK FOREIGN KEY
(
DRILL_OP_TYPE
)
REFERENCES R_WELL_DRILL_OP_TYPE
(
DRILL_OP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WDOT_SRCD_FK'
ALTER TABLE RA_WELL_DRILL_OP_TYPE ADD CONSTRAINT RA_WDOT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WFUT_BA_FK'
ALTER TABLE RA_WELL_FACILITY_USE_TYPE ADD CONSTRAINT RA_WFUT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WFUT_PSWA_FK'
ALTER TABLE RA_WELL_FACILITY_USE_TYPE ADD CONSTRAINT RA_WFUT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WFUT_R_ART_FK'
ALTER TABLE RA_WELL_FACILITY_USE_TYPE ADD CONSTRAINT RA_WFUT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WFUT_R_ATY_FK'
ALTER TABLE RA_WELL_FACILITY_USE_TYPE ADD CONSTRAINT RA_WFUT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WFUT_R_LANG_FK'
ALTER TABLE RA_WELL_FACILITY_USE_TYPE ADD CONSTRAINT RA_WFUT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WFUT_R_WFUT_FK'
ALTER TABLE RA_WELL_FACILITY_USE_TYPE ADD CONSTRAINT RA_WFUT_R_WFUT_FK FOREIGN KEY
(
FACILITY_USE_TYPE
)
REFERENCES R_WELL_FACILITY_USE_TYPE
(
FACILITY_USE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WFUT_SRCD_FK'
ALTER TABLE RA_WELL_FACILITY_USE_TYPE ADD CONSTRAINT RA_WFUT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLT_BA_FK'
ALTER TABLE RA_WELL_LEVEL_TYPE ADD CONSTRAINT RA_WLT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLT_PSWA_FK'
ALTER TABLE RA_WELL_LEVEL_TYPE ADD CONSTRAINT RA_WLT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLT_R_ART_FK'
ALTER TABLE RA_WELL_LEVEL_TYPE ADD CONSTRAINT RA_WLT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLT_R_ATY_FK'
ALTER TABLE RA_WELL_LEVEL_TYPE ADD CONSTRAINT RA_WLT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLT_R_LANG_FK'
ALTER TABLE RA_WELL_LEVEL_TYPE ADD CONSTRAINT RA_WLT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLT_R_WLT_FK'
ALTER TABLE RA_WELL_LEVEL_TYPE ADD CONSTRAINT RA_WLT_R_WLT_FK FOREIGN KEY
(
WELL_LEVEL_TYPE
)
REFERENCES R_WELL_LEVEL_TYPE
(
WELL_LEVEL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLT_SRCD_FK'
ALTER TABLE RA_WELL_LEVEL_TYPE ADD CONSTRAINT RA_WLT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLC_BA_FK'
ALTER TABLE RA_WELL_LIC_COND ADD CONSTRAINT RA_WLC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLC_PSWA_FK'
ALTER TABLE RA_WELL_LIC_COND ADD CONSTRAINT RA_WLC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLC_R_ART_FK'
ALTER TABLE RA_WELL_LIC_COND ADD CONSTRAINT RA_WLC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLC_R_ATY_FK'
ALTER TABLE RA_WELL_LIC_COND ADD CONSTRAINT RA_WLC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLC_R_LANG_FK'
ALTER TABLE RA_WELL_LIC_COND ADD CONSTRAINT RA_WLC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLC_R_WLC_FK'
ALTER TABLE RA_WELL_LIC_COND ADD CONSTRAINT RA_WLC_R_WLC_FK FOREIGN KEY
(
CONDITION_TYPE
)
REFERENCES R_WELL_LIC_COND
(
CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLC_SRCD_FK'
ALTER TABLE RA_WELL_LIC_COND ADD CONSTRAINT RA_WLC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLCC_BA_FK'
ALTER TABLE RA_WELL_LIC_COND_CODE ADD CONSTRAINT RA_WLCC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLCC_PSWA_FK'
ALTER TABLE RA_WELL_LIC_COND_CODE ADD CONSTRAINT RA_WLCC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLCC_R_ART_FK'
ALTER TABLE RA_WELL_LIC_COND_CODE ADD CONSTRAINT RA_WLCC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLCC_R_ATY_FK'
ALTER TABLE RA_WELL_LIC_COND_CODE ADD CONSTRAINT RA_WLCC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLCC_R_LANG_FK'
ALTER TABLE RA_WELL_LIC_COND_CODE ADD CONSTRAINT RA_WLCC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLCC_R_WLC_FK'
ALTER TABLE RA_WELL_LIC_COND_CODE ADD CONSTRAINT RA_WLCC_R_WLC_FK FOREIGN KEY
(
CONDITION_TYPE
)
REFERENCES R_WELL_LIC_COND
(
CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLCC_R_WLCC_FK'
ALTER TABLE RA_WELL_LIC_COND_CODE ADD CONSTRAINT RA_WLCC_R_WLCC_FK FOREIGN KEY
(
CONDITION_TYPE,
CONDITION_CODE
)
REFERENCES R_WELL_LIC_COND_CODE
(
CONDITION_TYPE,
CONDITION_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLCC_SRCD_FK'
ALTER TABLE RA_WELL_LIC_COND_CODE ADD CONSTRAINT RA_WLCC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLDC_BA_FK'
ALTER TABLE RA_WELL_LIC_DUE_CONDITION ADD CONSTRAINT RA_WLDC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLDC_PSWA_FK'
ALTER TABLE RA_WELL_LIC_DUE_CONDITION ADD CONSTRAINT RA_WLDC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLDC_R_ART_FK'
ALTER TABLE RA_WELL_LIC_DUE_CONDITION ADD CONSTRAINT RA_WLDC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLDC_R_ATY_FK'
ALTER TABLE RA_WELL_LIC_DUE_CONDITION ADD CONSTRAINT RA_WLDC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLDC_R_LANG_FK'
ALTER TABLE RA_WELL_LIC_DUE_CONDITION ADD CONSTRAINT RA_WLDC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLDC_R_WLDC_FK'
ALTER TABLE RA_WELL_LIC_DUE_CONDITION ADD CONSTRAINT RA_WLDC_R_WLDC_FK FOREIGN KEY
(
DUE_CONDITION
)
REFERENCES R_WELL_LIC_DUE_CONDITION
(
DUE_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLDC_SRCD_FK'
ALTER TABLE RA_WELL_LIC_DUE_CONDITION ADD CONSTRAINT RA_WLDC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLVRT_BA_FK'
ALTER TABLE RA_WELL_LIC_VIOL_RESOL ADD CONSTRAINT RA_WLVRT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLVRT_PSWA_FK'
ALTER TABLE RA_WELL_LIC_VIOL_RESOL ADD CONSTRAINT RA_WLVRT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLVRT_R_ART_FK'
ALTER TABLE RA_WELL_LIC_VIOL_RESOL ADD CONSTRAINT RA_WLVRT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLVRT_R_ATY_FK'
ALTER TABLE RA_WELL_LIC_VIOL_RESOL ADD CONSTRAINT RA_WLVRT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLVRT_R_LANG_FK'
ALTER TABLE RA_WELL_LIC_VIOL_RESOL ADD CONSTRAINT RA_WLVRT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLVRT_R_WLVRT_FK'
ALTER TABLE RA_WELL_LIC_VIOL_RESOL ADD CONSTRAINT RA_WLVRT_R_WLVRT_FK FOREIGN KEY
(
RESOLVE_TYPE
)
REFERENCES R_WELL_LIC_VIOL_RESOL
(
RESOLVE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLVRT_SRCD_FK'
ALTER TABLE RA_WELL_LIC_VIOL_RESOL ADD CONSTRAINT RA_WLVRT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLVT_BA_FK'
ALTER TABLE RA_WELL_LIC_VIOL_TYPE ADD CONSTRAINT RA_WLVT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLVT_PSWA_FK'
ALTER TABLE RA_WELL_LIC_VIOL_TYPE ADD CONSTRAINT RA_WLVT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLVT_R_ART_FK'
ALTER TABLE RA_WELL_LIC_VIOL_TYPE ADD CONSTRAINT RA_WLVT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLVT_R_ATY_FK'
ALTER TABLE RA_WELL_LIC_VIOL_TYPE ADD CONSTRAINT RA_WLVT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLVT_R_LANG_FK'
ALTER TABLE RA_WELL_LIC_VIOL_TYPE ADD CONSTRAINT RA_WLVT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLVT_R_WLVT_FK'
ALTER TABLE RA_WELL_LIC_VIOL_TYPE ADD CONSTRAINT RA_WLVT_R_WLVT_FK FOREIGN KEY
(
VIOLATION_TYPE
)
REFERENCES R_WELL_LIC_VIOL_TYPE
(
VIOLATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLVT_SRCD_FK'
ALTER TABLE RA_WELL_LIC_VIOL_TYPE ADD CONSTRAINT RA_WLVT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLC1_BA_FK'
ALTER TABLE RA_WELL_LOG_CLASS ADD CONSTRAINT RA_WLC1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLC1_PSWA_FK'
ALTER TABLE RA_WELL_LOG_CLASS ADD CONSTRAINT RA_WLC1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLC1_R_ART_FK'
ALTER TABLE RA_WELL_LOG_CLASS ADD CONSTRAINT RA_WLC1_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLC1_R_ATY_FK'
ALTER TABLE RA_WELL_LOG_CLASS ADD CONSTRAINT RA_WLC1_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLC1_R_LANG_FK'
ALTER TABLE RA_WELL_LOG_CLASS ADD CONSTRAINT RA_WLC1_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLC1_R_WLC1_FK'
ALTER TABLE RA_WELL_LOG_CLASS ADD CONSTRAINT RA_WLC1_R_WLC1_FK FOREIGN KEY
(
WELL_LOG_CLASS_ID
)
REFERENCES R_WELL_LOG_CLASS
(
WELL_LOG_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WLC1_SRCD_FK'
ALTER TABLE RA_WELL_LOG_CLASS ADD CONSTRAINT RA_WLC1_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WNPM_BA_FK'
ALTER TABLE RA_WELL_NODE_PICK_METHOD ADD CONSTRAINT RA_WNPM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WNPM_PSWA_FK'
ALTER TABLE RA_WELL_NODE_PICK_METHOD ADD CONSTRAINT RA_WNPM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WNPM_R_ART_FK'
ALTER TABLE RA_WELL_NODE_PICK_METHOD ADD CONSTRAINT RA_WNPM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WNPM_R_ATY_FK'
ALTER TABLE RA_WELL_NODE_PICK_METHOD ADD CONSTRAINT RA_WNPM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WNPM_R_LANG_FK'
ALTER TABLE RA_WELL_NODE_PICK_METHOD ADD CONSTRAINT RA_WNPM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WNPM_R_WNPM_FK'
ALTER TABLE RA_WELL_NODE_PICK_METHOD ADD CONSTRAINT RA_WNPM_R_WNPM_FK FOREIGN KEY
(
PICK_METHOD
)
REFERENCES R_WELL_NODE_PICK_METHOD
(
PICK_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WNPM_SRCD_FK'
ALTER TABLE RA_WELL_NODE_PICK_METHOD ADD CONSTRAINT RA_WNPM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WPT_BA_FK'
ALTER TABLE RA_WELL_PROFILE_TYPE ADD CONSTRAINT RA_WPT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WPT_PSWA_FK'
ALTER TABLE RA_WELL_PROFILE_TYPE ADD CONSTRAINT RA_WPT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WPT_R_ART_FK'
ALTER TABLE RA_WELL_PROFILE_TYPE ADD CONSTRAINT RA_WPT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WPT_R_ATY_FK'
ALTER TABLE RA_WELL_PROFILE_TYPE ADD CONSTRAINT RA_WPT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WPT_R_LANG_FK'
ALTER TABLE RA_WELL_PROFILE_TYPE ADD CONSTRAINT RA_WPT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WPT_R_WPT_FK'
ALTER TABLE RA_WELL_PROFILE_TYPE ADD CONSTRAINT RA_WPT_R_WPT_FK FOREIGN KEY
(
WELL_PROFILE_TYPE
)
REFERENCES R_WELL_PROFILE_TYPE
(
WELL_PROFILE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WPT_SRCD_FK'
ALTER TABLE RA_WELL_PROFILE_TYPE ADD CONSTRAINT RA_WPT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WQT_BA_FK'
ALTER TABLE RA_WELL_QUALIFIC_TYPE ADD CONSTRAINT RA_WQT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WQT_PSWA_FK'
ALTER TABLE RA_WELL_QUALIFIC_TYPE ADD CONSTRAINT RA_WQT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WQT_R_ART_FK'
ALTER TABLE RA_WELL_QUALIFIC_TYPE ADD CONSTRAINT RA_WQT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WQT_R_ATY_FK'
ALTER TABLE RA_WELL_QUALIFIC_TYPE ADD CONSTRAINT RA_WQT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WQT_R_LANG_FK'
ALTER TABLE RA_WELL_QUALIFIC_TYPE ADD CONSTRAINT RA_WQT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WQT_R_WQT_FK'
ALTER TABLE RA_WELL_QUALIFIC_TYPE ADD CONSTRAINT RA_WQT_R_WQT_FK FOREIGN KEY
(
WELL_QUALIFIC_TYPE
)
REFERENCES R_WELL_QUALIFIC_TYPE
(
WELL_QUALIFIC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WQT_SRCD_FK'
ALTER TABLE RA_WELL_QUALIFIC_TYPE ADD CONSTRAINT RA_WQT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WRVT_BA_FK'
ALTER TABLE RA_WELL_REF_VALUE_TYPE ADD CONSTRAINT RA_WRVT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WRVT_PSWA_FK'
ALTER TABLE RA_WELL_REF_VALUE_TYPE ADD CONSTRAINT RA_WRVT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WRVT_R_ART_FK'
ALTER TABLE RA_WELL_REF_VALUE_TYPE ADD CONSTRAINT RA_WRVT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WRVT_R_ATY_FK'
ALTER TABLE RA_WELL_REF_VALUE_TYPE ADD CONSTRAINT RA_WRVT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WRVT_R_LANG_FK'
ALTER TABLE RA_WELL_REF_VALUE_TYPE ADD CONSTRAINT RA_WRVT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WRVT_R_WRVT_FK'
ALTER TABLE RA_WELL_REF_VALUE_TYPE ADD CONSTRAINT RA_WRVT_R_WRVT_FK FOREIGN KEY
(
REFERENCE_VALUE_TYPE
)
REFERENCES R_WELL_REF_VALUE_TYPE
(
REFERENCE_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WRVT_SRCD_FK'
ALTER TABLE RA_WELL_REF_VALUE_TYPE ADD CONSTRAINT RA_WRVT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WR_BA_FK'
ALTER TABLE RA_WELL_RELATIONSHIP ADD CONSTRAINT RA_WR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WR_PSWA_FK'
ALTER TABLE RA_WELL_RELATIONSHIP ADD CONSTRAINT RA_WR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WR_R_ART_FK'
ALTER TABLE RA_WELL_RELATIONSHIP ADD CONSTRAINT RA_WR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WR_R_ATY_FK'
ALTER TABLE RA_WELL_RELATIONSHIP ADD CONSTRAINT RA_WR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WR_R_LANG_FK'
ALTER TABLE RA_WELL_RELATIONSHIP ADD CONSTRAINT RA_WR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WR_R_WR_FK'
ALTER TABLE RA_WELL_RELATIONSHIP ADD CONSTRAINT RA_WR_R_WR_FK FOREIGN KEY
(
WELL_RELATIONSHIP
)
REFERENCES R_WELL_RELATIONSHIP
(
WELL_RELATIONSHIP
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WR_SRCD_FK'
ALTER TABLE RA_WELL_RELATIONSHIP ADD CONSTRAINT RA_WR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSM_BA_FK'
ALTER TABLE RA_WELL_SERVICE_METRIC ADD CONSTRAINT RA_WSM_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSM_PSWA_FK'
ALTER TABLE RA_WELL_SERVICE_METRIC ADD CONSTRAINT RA_WSM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSM_R_ART_FK'
ALTER TABLE RA_WELL_SERVICE_METRIC ADD CONSTRAINT RA_WSM_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSM_R_ATY_FK'
ALTER TABLE RA_WELL_SERVICE_METRIC ADD CONSTRAINT RA_WSM_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSM_R_LANG_FK'
ALTER TABLE RA_WELL_SERVICE_METRIC ADD CONSTRAINT RA_WSM_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSM_R_WSM_FK'
ALTER TABLE RA_WELL_SERVICE_METRIC ADD CONSTRAINT RA_WSM_R_WSM_FK FOREIGN KEY
(
SERVICE_METRIC
)
REFERENCES R_WELL_SERVICE_METRIC
(
SERVICE_METRIC
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSM_SRCD_FK'
ALTER TABLE RA_WELL_SERVICE_METRIC ADD CONSTRAINT RA_WSM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSMC_BA_FK'
ALTER TABLE RA_WELL_SERV_METRIC_CODE ADD CONSTRAINT RA_WSMC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSMC_PSWA_FK'
ALTER TABLE RA_WELL_SERV_METRIC_CODE ADD CONSTRAINT RA_WSMC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSMC_R_ART_FK'
ALTER TABLE RA_WELL_SERV_METRIC_CODE ADD CONSTRAINT RA_WSMC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSMC_R_ATY_FK'
ALTER TABLE RA_WELL_SERV_METRIC_CODE ADD CONSTRAINT RA_WSMC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSMC_R_LANG_FK'
ALTER TABLE RA_WELL_SERV_METRIC_CODE ADD CONSTRAINT RA_WSMC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSMC_R_WSM_FK'
ALTER TABLE RA_WELL_SERV_METRIC_CODE ADD CONSTRAINT RA_WSMC_R_WSM_FK FOREIGN KEY
(
SERVICE_METRIC
)
REFERENCES R_WELL_SERVICE_METRIC
(
SERVICE_METRIC
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSMC_R_WSMC_FK'
ALTER TABLE RA_WELL_SERV_METRIC_CODE ADD CONSTRAINT RA_WSMC_R_WSMC_FK FOREIGN KEY
(
SERVICE_METRIC,
METRIC_CODE
)
REFERENCES R_WELL_SERV_METRIC_CODE
(
SERVICE_METRIC,
METRIC_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSMC_SRCD_FK'
ALTER TABLE RA_WELL_SERV_METRIC_CODE ADD CONSTRAINT RA_WSMC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSETR_BA_FK'
ALTER TABLE RA_WELL_SET_ROLE ADD CONSTRAINT RA_WSETR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSETR_PSWA_FK'
ALTER TABLE RA_WELL_SET_ROLE ADD CONSTRAINT RA_WSETR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSETR_R_ART_FK'
ALTER TABLE RA_WELL_SET_ROLE ADD CONSTRAINT RA_WSETR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSETR_R_ATY_FK'
ALTER TABLE RA_WELL_SET_ROLE ADD CONSTRAINT RA_WSETR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSETR_R_LANG_FK'
ALTER TABLE RA_WELL_SET_ROLE ADD CONSTRAINT RA_WSETR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSETR_R_WSETR_FK'
ALTER TABLE RA_WELL_SET_ROLE ADD CONSTRAINT RA_WSETR_R_WSETR_FK FOREIGN KEY
(
WELL_SET_ROLE
)
REFERENCES R_WELL_SET_ROLE
(
WELL_SET_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSETR_SRCD_FK'
ALTER TABLE RA_WELL_SET_ROLE ADD CONSTRAINT RA_WSETR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSETT_BA_FK'
ALTER TABLE RA_WELL_SET_TYPE ADD CONSTRAINT RA_WSETT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSETT_PSWA_FK'
ALTER TABLE RA_WELL_SET_TYPE ADD CONSTRAINT RA_WSETT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSETT_R_ART_FK'
ALTER TABLE RA_WELL_SET_TYPE ADD CONSTRAINT RA_WSETT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSETT_R_ATY_FK'
ALTER TABLE RA_WELL_SET_TYPE ADD CONSTRAINT RA_WSETT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSETT_R_LANG_FK'
ALTER TABLE RA_WELL_SET_TYPE ADD CONSTRAINT RA_WSETT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSETT_R_WSETT_FK'
ALTER TABLE RA_WELL_SET_TYPE ADD CONSTRAINT RA_WSETT_R_WSETT_FK FOREIGN KEY
(
WELL_SET_TYPE
)
REFERENCES R_WELL_SET_TYPE
(
WELL_SET_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSETT_SRCD_FK'
ALTER TABLE RA_WELL_SET_TYPE ADD CONSTRAINT RA_WSETT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSUT_BA_FK'
ALTER TABLE RA_WELL_SF_USE_TYPE ADD CONSTRAINT RA_WSUT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSUT_PSWA_FK'
ALTER TABLE RA_WELL_SF_USE_TYPE ADD CONSTRAINT RA_WSUT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSUT_R_ART_FK'
ALTER TABLE RA_WELL_SF_USE_TYPE ADD CONSTRAINT RA_WSUT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSUT_R_ATY_FK'
ALTER TABLE RA_WELL_SF_USE_TYPE ADD CONSTRAINT RA_WSUT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSUT_R_LANG_FK'
ALTER TABLE RA_WELL_SF_USE_TYPE ADD CONSTRAINT RA_WSUT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSUT_R_WSUT_FK'
ALTER TABLE RA_WELL_SF_USE_TYPE ADD CONSTRAINT RA_WSUT_R_WSUT_FK FOREIGN KEY
(
SF_USE_TYPE
)
REFERENCES R_WELL_SF_USE_TYPE
(
SF_USE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSUT_SRCD_FK'
ALTER TABLE RA_WELL_SF_USE_TYPE ADD CONSTRAINT RA_WSUT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WS_BA_FK'
ALTER TABLE RA_WELL_STATUS ADD CONSTRAINT RA_WS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WS_PSWA_FK'
ALTER TABLE RA_WELL_STATUS ADD CONSTRAINT RA_WS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WS_R_ART_FK'
ALTER TABLE RA_WELL_STATUS ADD CONSTRAINT RA_WS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WS_R_ATY_FK'
ALTER TABLE RA_WELL_STATUS ADD CONSTRAINT RA_WS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WS_R_LANG_FK'
ALTER TABLE RA_WELL_STATUS ADD CONSTRAINT RA_WS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WS_R_WS_FK'
ALTER TABLE RA_WELL_STATUS ADD CONSTRAINT RA_WS_R_WS_FK FOREIGN KEY
(
STATUS_TYPE,
STATUS
)
REFERENCES R_WELL_STATUS
(
STATUS_TYPE,
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WS_R_WST_FK'
ALTER TABLE RA_WELL_STATUS ADD CONSTRAINT RA_WS_R_WST_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_WELL_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WS_SRCD_FK'
ALTER TABLE RA_WELL_STATUS ADD CONSTRAINT RA_WS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSQ_BA_FK'
ALTER TABLE RA_WELL_STATUS_QUAL ADD CONSTRAINT RA_WSQ_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSQ_PSWA_FK'
ALTER TABLE RA_WELL_STATUS_QUAL ADD CONSTRAINT RA_WSQ_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSQ_R_ART_FK'
ALTER TABLE RA_WELL_STATUS_QUAL ADD CONSTRAINT RA_WSQ_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSQ_R_ATY_FK'
ALTER TABLE RA_WELL_STATUS_QUAL ADD CONSTRAINT RA_WSQ_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSQ_R_LANG_FK'
ALTER TABLE RA_WELL_STATUS_QUAL ADD CONSTRAINT RA_WSQ_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSQ_R_WSQ_FK'
ALTER TABLE RA_WELL_STATUS_QUAL ADD CONSTRAINT RA_WSQ_R_WSQ_FK FOREIGN KEY
(
STATUS_TYPE,
STATUS_QUALIFIER
)
REFERENCES R_WELL_STATUS_QUAL
(
STATUS_TYPE,
STATUS_QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSQ_R_WST_FK'
ALTER TABLE RA_WELL_STATUS_QUAL ADD CONSTRAINT RA_WSQ_R_WST_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_WELL_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSQ_SRCD_FK'
ALTER TABLE RA_WELL_STATUS_QUAL ADD CONSTRAINT RA_WSQ_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSQV_BA_FK'
ALTER TABLE RA_WELL_STATUS_QUAL_VALUE ADD CONSTRAINT RA_WSQV_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSQV_PSWA_FK'
ALTER TABLE RA_WELL_STATUS_QUAL_VALUE ADD CONSTRAINT RA_WSQV_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSQV_R_ART_FK'
ALTER TABLE RA_WELL_STATUS_QUAL_VALUE ADD CONSTRAINT RA_WSQV_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSQV_R_ATY_FK'
ALTER TABLE RA_WELL_STATUS_QUAL_VALUE ADD CONSTRAINT RA_WSQV_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSQV_R_LANG_FK'
ALTER TABLE RA_WELL_STATUS_QUAL_VALUE ADD CONSTRAINT RA_WSQV_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSQV_R_WS_FK'
ALTER TABLE RA_WELL_STATUS_QUAL_VALUE ADD CONSTRAINT RA_WSQV_R_WS_FK FOREIGN KEY
(
STATUS_TYPE,
STATUS
)
REFERENCES R_WELL_STATUS
(
STATUS_TYPE,
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSQV_R_WSQ_FK'
ALTER TABLE RA_WELL_STATUS_QUAL_VALUE ADD CONSTRAINT RA_WSQV_R_WSQ_FK FOREIGN KEY
(
STATUS_TYPE,
STATUS_QUALIFIER
)
REFERENCES R_WELL_STATUS_QUAL
(
STATUS_TYPE,
STATUS_QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSQV_R_WSQV_FK'
ALTER TABLE RA_WELL_STATUS_QUAL_VALUE ADD CONSTRAINT RA_WSQV_R_WSQV_FK FOREIGN KEY
(
STATUS_TYPE,
STATUS,
STATUS_QUALIFIER,
STATUS_QUALIFIER_VALUE
)
REFERENCES R_WELL_STATUS_QUAL_VALUE
(
STATUS_TYPE,
STATUS,
STATUS_QUALIFIER,
STATUS_QUALIFIER_VALUE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSQV_SRCD_FK'
ALTER TABLE RA_WELL_STATUS_QUAL_VALUE ADD CONSTRAINT RA_WSQV_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSPS_BA_FK'
ALTER TABLE RA_WELL_STATUS_SYMBOL ADD CONSTRAINT RA_WSPS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSPS_PSWA_FK'
ALTER TABLE RA_WELL_STATUS_SYMBOL ADD CONSTRAINT RA_WSPS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSPS_R_ART_FK'
ALTER TABLE RA_WELL_STATUS_SYMBOL ADD CONSTRAINT RA_WSPS_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSPS_R_ATY_FK'
ALTER TABLE RA_WELL_STATUS_SYMBOL ADD CONSTRAINT RA_WSPS_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSPS_R_LANG_FK'
ALTER TABLE RA_WELL_STATUS_SYMBOL ADD CONSTRAINT RA_WSPS_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSPS_R_PS1_FK'
ALTER TABLE RA_WELL_STATUS_SYMBOL ADD CONSTRAINT RA_WSPS_R_PS1_FK FOREIGN KEY
(
PLOT_SYMBOL
)
REFERENCES R_PLOT_SYMBOL
(
PLOT_SYMBOL
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSPS_R_WSPS_FK'
ALTER TABLE RA_WELL_STATUS_SYMBOL ADD CONSTRAINT RA_WSPS_R_WSPS_FK FOREIGN KEY
(
PLOT_SYMBOL,
PLOT_SYMBOL_OBS_NO
)
REFERENCES R_WELL_STATUS_SYMBOL
(
PLOT_SYMBOL,
PLOT_SYMBOL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSPS_SRCD_FK'
ALTER TABLE RA_WELL_STATUS_SYMBOL ADD CONSTRAINT RA_WSPS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WST_BA_FK'
ALTER TABLE RA_WELL_STATUS_TYPE ADD CONSTRAINT RA_WST_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WST_PSWA_FK'
ALTER TABLE RA_WELL_STATUS_TYPE ADD CONSTRAINT RA_WST_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WST_R_ART_FK'
ALTER TABLE RA_WELL_STATUS_TYPE ADD CONSTRAINT RA_WST_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WST_R_ATY_FK'
ALTER TABLE RA_WELL_STATUS_TYPE ADD CONSTRAINT RA_WST_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WST_R_LANG_FK'
ALTER TABLE RA_WELL_STATUS_TYPE ADD CONSTRAINT RA_WST_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WST_R_WST_FK'
ALTER TABLE RA_WELL_STATUS_TYPE ADD CONSTRAINT RA_WST_R_WST_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_WELL_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WST_SRCD_FK'
ALTER TABLE RA_WELL_STATUS_TYPE ADD CONSTRAINT RA_WST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSX_BA_FK'
ALTER TABLE RA_WELL_STATUS_XREF ADD CONSTRAINT RA_WSX_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSX_PSWA_FK'
ALTER TABLE RA_WELL_STATUS_XREF ADD CONSTRAINT RA_WSX_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSX_R_ART_FK'
ALTER TABLE RA_WELL_STATUS_XREF ADD CONSTRAINT RA_WSX_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSX_R_ATY_FK'
ALTER TABLE RA_WELL_STATUS_XREF ADD CONSTRAINT RA_WSX_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSX_R_LANG_FK'
ALTER TABLE RA_WELL_STATUS_XREF ADD CONSTRAINT RA_WSX_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSX_R_WSX_FK'
ALTER TABLE RA_WELL_STATUS_XREF ADD CONSTRAINT RA_WSX_R_WSX_FK FOREIGN KEY
(
STATUS_XREF_ID,
STATUS_XREF_OBS_NO
)
REFERENCES R_WELL_STATUS_XREF
(
STATUS_XREF_ID,
STATUS_XREF_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WSX_SRCD_FK'
ALTER TABLE RA_WELL_STATUS_XREF ADD CONSTRAINT RA_WSX_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WTT_BA_FK'
ALTER TABLE RA_WELL_TEST_TYPE ADD CONSTRAINT RA_WTT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WTT_PSWA_FK'
ALTER TABLE RA_WELL_TEST_TYPE ADD CONSTRAINT RA_WTT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WTT_R_ART_FK'
ALTER TABLE RA_WELL_TEST_TYPE ADD CONSTRAINT RA_WTT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WTT_R_ATY_FK'
ALTER TABLE RA_WELL_TEST_TYPE ADD CONSTRAINT RA_WTT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WTT_R_LANG_FK'
ALTER TABLE RA_WELL_TEST_TYPE ADD CONSTRAINT RA_WTT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WTT_R_WTT_FK'
ALTER TABLE RA_WELL_TEST_TYPE ADD CONSTRAINT RA_WTT_R_WTT_FK FOREIGN KEY
(
WELL_TEST_TYPE
)
REFERENCES R_WELL_TEST_TYPE
(
WELL_TEST_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WTT_SRCD_FK'
ALTER TABLE RA_WELL_TEST_TYPE ADD CONSTRAINT RA_WTT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WXT_BA_FK'
ALTER TABLE RA_WELL_XREF_TYPE ADD CONSTRAINT RA_WXT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WXT_PSWA_FK'
ALTER TABLE RA_WELL_XREF_TYPE ADD CONSTRAINT RA_WXT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WXT_R_ART_FK'
ALTER TABLE RA_WELL_XREF_TYPE ADD CONSTRAINT RA_WXT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WXT_R_ATY_FK'
ALTER TABLE RA_WELL_XREF_TYPE ADD CONSTRAINT RA_WXT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WXT_R_LANG_FK'
ALTER TABLE RA_WELL_XREF_TYPE ADD CONSTRAINT RA_WXT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WXT_R_WXT_FK'
ALTER TABLE RA_WELL_XREF_TYPE ADD CONSTRAINT RA_WXT_R_WXT_FK FOREIGN KEY
(
XREF_TYPE
)
REFERENCES R_WELL_XREF_TYPE
(
XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WXT_SRCD_FK'
ALTER TABLE RA_WELL_XREF_TYPE ADD CONSTRAINT RA_WXT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WZIV_BA_FK'
ALTER TABLE RA_WELL_ZONE_INT_VALUE ADD CONSTRAINT RA_WZIV_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WZIV_PSWA_FK'
ALTER TABLE RA_WELL_ZONE_INT_VALUE ADD CONSTRAINT RA_WZIV_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WZIV_R_ART_FK'
ALTER TABLE RA_WELL_ZONE_INT_VALUE ADD CONSTRAINT RA_WZIV_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WZIV_R_ATY_FK'
ALTER TABLE RA_WELL_ZONE_INT_VALUE ADD CONSTRAINT RA_WZIV_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WZIV_R_LANG_FK'
ALTER TABLE RA_WELL_ZONE_INT_VALUE ADD CONSTRAINT RA_WZIV_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WZIV_R_WZIV_FK'
ALTER TABLE RA_WELL_ZONE_INT_VALUE ADD CONSTRAINT RA_WZIV_R_WZIV_FK FOREIGN KEY
(
VALUE_TYPE
)
REFERENCES R_WELL_ZONE_INT_VALUE
(
VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WZIV_SRCD_FK'
ALTER TABLE RA_WELL_ZONE_INT_VALUE ADD CONSTRAINT RA_WZIV_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WWIND_BA_FK'
ALTER TABLE RA_WIND_STRENGTH ADD CONSTRAINT RA_WWIND_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WWIND_PSWA_FK'
ALTER TABLE RA_WIND_STRENGTH ADD CONSTRAINT RA_WWIND_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WWIND_R_ART_FK'
ALTER TABLE RA_WIND_STRENGTH ADD CONSTRAINT RA_WWIND_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WWIND_R_ATY_FK'
ALTER TABLE RA_WIND_STRENGTH ADD CONSTRAINT RA_WWIND_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WWIND_R_LANG_FK'
ALTER TABLE RA_WIND_STRENGTH ADD CONSTRAINT RA_WWIND_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WWIND_R_WWIND_FK'
ALTER TABLE RA_WIND_STRENGTH ADD CONSTRAINT RA_WWIND_R_WWIND_FK FOREIGN KEY
(
WIND_STRENGTH
)
REFERENCES R_WIND_STRENGTH
(
WIND_STRENGTH
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WWIND_SRCD_FK'
ALTER TABLE RA_WIND_STRENGTH ADD CONSTRAINT RA_WWIND_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WBT_BA_FK'
ALTER TABLE RA_WORK_BID_TYPE ADD CONSTRAINT RA_WBT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WBT_PSWA_FK'
ALTER TABLE RA_WORK_BID_TYPE ADD CONSTRAINT RA_WBT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WBT_R_ART_FK'
ALTER TABLE RA_WORK_BID_TYPE ADD CONSTRAINT RA_WBT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WBT_R_ATY_FK'
ALTER TABLE RA_WORK_BID_TYPE ADD CONSTRAINT RA_WBT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WBT_R_LANG_FK'
ALTER TABLE RA_WORK_BID_TYPE ADD CONSTRAINT RA_WBT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WBT_R_WBT_FK'
ALTER TABLE RA_WORK_BID_TYPE ADD CONSTRAINT RA_WBT_R_WBT_FK FOREIGN KEY
(
WORK_BID_TYPE
)
REFERENCES R_WORK_BID_TYPE
(
WORK_BID_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WBT_SRCD_FK'
ALTER TABLE RA_WORK_BID_TYPE ADD CONSTRAINT RA_WBT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOBR_BA_FK'
ALTER TABLE RA_WO_BA_ROLE ADD CONSTRAINT RA_WOBR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOBR_PSWA_FK'
ALTER TABLE RA_WO_BA_ROLE ADD CONSTRAINT RA_WOBR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOBR_R_ART_FK'
ALTER TABLE RA_WO_BA_ROLE ADD CONSTRAINT RA_WOBR_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOBR_R_ATY_FK'
ALTER TABLE RA_WO_BA_ROLE ADD CONSTRAINT RA_WOBR_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOBR_R_LANG_FK'
ALTER TABLE RA_WO_BA_ROLE ADD CONSTRAINT RA_WOBR_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOBR_R_WOBR_FK'
ALTER TABLE RA_WO_BA_ROLE ADD CONSTRAINT RA_WOBR_R_WOBR_FK FOREIGN KEY
(
BA_ROLE
)
REFERENCES R_WO_BA_ROLE
(
BA_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOBR_SRCD_FK'
ALTER TABLE RA_WO_BA_ROLE ADD CONSTRAINT RA_WOBR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOCT_BA_FK'
ALTER TABLE RA_WO_COMPONENT_TYPE ADD CONSTRAINT RA_WOCT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOCT_PSWA_FK'
ALTER TABLE RA_WO_COMPONENT_TYPE ADD CONSTRAINT RA_WOCT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOCT_R_ART_FK'
ALTER TABLE RA_WO_COMPONENT_TYPE ADD CONSTRAINT RA_WOCT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOCT_R_ATY_FK'
ALTER TABLE RA_WO_COMPONENT_TYPE ADD CONSTRAINT RA_WOCT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOCT_R_LANG_FK'
ALTER TABLE RA_WO_COMPONENT_TYPE ADD CONSTRAINT RA_WOCT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOCT_R_WOCT_FK'
ALTER TABLE RA_WO_COMPONENT_TYPE ADD CONSTRAINT RA_WOCT_R_WOCT_FK FOREIGN KEY
(
COMPONENT_TYPE
)
REFERENCES R_WO_COMPONENT_TYPE
(
COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOCT_SRCD_FK'
ALTER TABLE RA_WO_COMPONENT_TYPE ADD CONSTRAINT RA_WOCT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOC_BA_FK'
ALTER TABLE RA_WO_CONDITION ADD CONSTRAINT RA_WOC_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOC_PSWA_FK'
ALTER TABLE RA_WO_CONDITION ADD CONSTRAINT RA_WOC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOC_R_ART_FK'
ALTER TABLE RA_WO_CONDITION ADD CONSTRAINT RA_WOC_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOC_R_ATY_FK'
ALTER TABLE RA_WO_CONDITION ADD CONSTRAINT RA_WOC_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOC_R_LANG_FK'
ALTER TABLE RA_WO_CONDITION ADD CONSTRAINT RA_WOC_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOC_R_WOC_FK'
ALTER TABLE RA_WO_CONDITION ADD CONSTRAINT RA_WOC_R_WOC_FK FOREIGN KEY
(
WORK_ORDER_TYPE,
CONDITION_TYPE
)
REFERENCES R_WO_CONDITION
(
WORK_ORDER_TYPE,
CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOC_R_WOT_FK'
ALTER TABLE RA_WO_CONDITION ADD CONSTRAINT RA_WOC_R_WOT_FK FOREIGN KEY
(
WORK_ORDER_TYPE
)
REFERENCES R_WO_TYPE
(
WORK_ORDER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOC_SRCD_FK'
ALTER TABLE RA_WO_CONDITION ADD CONSTRAINT RA_WOC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WODT_BA_FK'
ALTER TABLE RA_WO_DELIVERY_TYPE ADD CONSTRAINT RA_WODT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WODT_PSWA_FK'
ALTER TABLE RA_WO_DELIVERY_TYPE ADD CONSTRAINT RA_WODT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WODT_R_ART_FK'
ALTER TABLE RA_WO_DELIVERY_TYPE ADD CONSTRAINT RA_WODT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WODT_R_ATY_FK'
ALTER TABLE RA_WO_DELIVERY_TYPE ADD CONSTRAINT RA_WODT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WODT_R_LANG_FK'
ALTER TABLE RA_WO_DELIVERY_TYPE ADD CONSTRAINT RA_WODT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WODT_R_WODT_FK'
ALTER TABLE RA_WO_DELIVERY_TYPE ADD CONSTRAINT RA_WODT_R_WODT_FK FOREIGN KEY
(
DELIVERY_TYPE
)
REFERENCES R_WO_DELIVERY_TYPE
(
DELIVERY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WODT_SRCD_FK'
ALTER TABLE RA_WO_DELIVERY_TYPE ADD CONSTRAINT RA_WODT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOIT_BA_FK'
ALTER TABLE RA_WO_INSTRUCTION ADD CONSTRAINT RA_WOIT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOIT_PSWA_FK'
ALTER TABLE RA_WO_INSTRUCTION ADD CONSTRAINT RA_WOIT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOIT_R_ART_FK'
ALTER TABLE RA_WO_INSTRUCTION ADD CONSTRAINT RA_WOIT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOIT_R_ATY_FK'
ALTER TABLE RA_WO_INSTRUCTION ADD CONSTRAINT RA_WOIT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOIT_R_LANG_FK'
ALTER TABLE RA_WO_INSTRUCTION ADD CONSTRAINT RA_WOIT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOIT_R_WOIT_FK'
ALTER TABLE RA_WO_INSTRUCTION ADD CONSTRAINT RA_WOIT_R_WOIT_FK FOREIGN KEY
(
INSTRUCTION_TYPE
)
REFERENCES R_WO_INSTRUCTION
(
INSTRUCTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOIT_SRCD_FK'
ALTER TABLE RA_WO_INSTRUCTION ADD CONSTRAINT RA_WOIT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOT_BA_FK'
ALTER TABLE RA_WO_TYPE ADD CONSTRAINT RA_WOT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOT_PSWA_FK'
ALTER TABLE RA_WO_TYPE ADD CONSTRAINT RA_WOT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOT_R_ART_FK'
ALTER TABLE RA_WO_TYPE ADD CONSTRAINT RA_WOT_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOT_R_ATY_FK'
ALTER TABLE RA_WO_TYPE ADD CONSTRAINT RA_WOT_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOT_R_LANG_FK'
ALTER TABLE RA_WO_TYPE ADD CONSTRAINT RA_WOT_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOT_R_WOT_FK'
ALTER TABLE RA_WO_TYPE ADD CONSTRAINT RA_WOT_R_WOT_FK FOREIGN KEY
(
WORK_ORDER_TYPE
)
REFERENCES R_WO_TYPE
(
WORK_ORDER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOT_SRCD_FK'
ALTER TABLE RA_WO_TYPE ADD CONSTRAINT RA_WOT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOX_BA_FK'
ALTER TABLE RA_WO_XREF_TYPE ADD CONSTRAINT RA_WOX_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOX_PSWA_FK'
ALTER TABLE RA_WO_XREF_TYPE ADD CONSTRAINT RA_WOX_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOX_R_ART_FK'
ALTER TABLE RA_WO_XREF_TYPE ADD CONSTRAINT RA_WOX_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOX_R_ATY_FK'
ALTER TABLE RA_WO_XREF_TYPE ADD CONSTRAINT RA_WOX_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOX_R_LANG_FK'
ALTER TABLE RA_WO_XREF_TYPE ADD CONSTRAINT RA_WOX_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOX_R_WOX_FK'
ALTER TABLE RA_WO_XREF_TYPE ADD CONSTRAINT RA_WOX_R_WOX_FK FOREIGN KEY
(
WO_XREF_TYPE
)
REFERENCES R_WO_XREF_TYPE
(
WO_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RA_WOX_SRCD_FK'
ALTER TABLE RA_WO_XREF_TYPE ADD CONSTRAINT RA_WOX_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPH_R_RHT_FK'
ALTER TABLE REPORT_HIER ADD CONSTRAINT RPH_R_RHT_FK FOREIGN KEY
(
HIERARCHY_TYPE
)
REFERENCES R_REPORT_HIER_TYPE
(
HIERARCHY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHA_BA_FK'
ALTER TABLE REPORT_HIER_ALIAS ADD CONSTRAINT RPHA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHA_PSWA_FK'
ALTER TABLE REPORT_HIER_ALIAS ADD CONSTRAINT RPHA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHA_RPH_FK'
ALTER TABLE REPORT_HIER_ALIAS ADD CONSTRAINT RPHA_RPH_FK FOREIGN KEY
(
REPORT_HIERARCHY_ID
)
REFERENCES REPORT_HIER
(
REPORT_HIERARCHY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHA_R_ART_FK'
ALTER TABLE REPORT_HIER_ALIAS ADD CONSTRAINT RPHA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHA_R_LANG_FK'
ALTER TABLE REPORT_HIER_ALIAS ADD CONSTRAINT RPHA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHA_R_RHAT_FK'
ALTER TABLE REPORT_HIER_ALIAS ADD CONSTRAINT RPHA_R_RHAT_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_REP_HIER_ALIAS_TYPE
(
REP_HIER_ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHA_SRCD_FK'
ALTER TABLE REPORT_HIER_ALIAS ADD CONSTRAINT RPHA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHD_PT_FK'
ALTER TABLE REPORT_HIER_DESC ADD CONSTRAINT RPHD_PT_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHD_RPHT_FK'
ALTER TABLE REPORT_HIER_DESC ADD CONSTRAINT RPHD_RPHT_FK FOREIGN KEY
(
HIERARCHY_TYPE_ID
)
REFERENCES REPORT_HIER_TYPE
(
HIERARCHY_TYPE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHD_R_RHL_FK'
ALTER TABLE REPORT_HIER_DESC ADD CONSTRAINT RPHD_R_RHL_FK FOREIGN KEY
(
LEVEL_TYPE
)
REFERENCES R_REPORT_HIER_LEVEL
(
LEVEL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHL_A_FK'
ALTER TABLE REPORT_HIER_LEVEL ADD CONSTRAINT RPHL_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHL_BAO_FK'
ALTER TABLE REPORT_HIER_LEVEL ADD CONSTRAINT RPHL_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHL_BA_FK'
ALTER TABLE REPORT_HIER_LEVEL ADD CONSTRAINT RPHL_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHL_C_FK'
ALTER TABLE REPORT_HIER_LEVEL ADD CONSTRAINT RPHL_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHL_EQ_FK'
ALTER TABLE REPORT_HIER_LEVEL ADD CONSTRAINT RPHL_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHL_FAC_FK'
ALTER TABLE REPORT_HIER_LEVEL ADD CONSTRAINT RPHL_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHL_FLD_FK'
ALTER TABLE REPORT_HIER_LEVEL ADD CONSTRAINT RPHL_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHL_FIN_FK'
ALTER TABLE REPORT_HIER_LEVEL ADD CONSTRAINT RPHL_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHL_LR_FK'
ALTER TABLE REPORT_HIER_LEVEL ADD CONSTRAINT RPHL_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHL_PL_FK'
ALTER TABLE REPORT_HIER_LEVEL ADD CONSTRAINT RPHL_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHL_PROJ_FK'
ALTER TABLE REPORT_HIER_LEVEL ADD CONSTRAINT RPHL_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHL_RPH_FK'
ALTER TABLE REPORT_HIER_LEVEL ADD CONSTRAINT RPHL_RPH_FK FOREIGN KEY
(
REPORT_HIERARCHY_ID
)
REFERENCES REPORT_HIER
(
REPORT_HIERARCHY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHL_RPHD_FK'
ALTER TABLE REPORT_HIER_LEVEL ADD CONSTRAINT RPHL_RPHD_FK FOREIGN KEY
(
HIERARCHY_TYPE_ID,
LEVEL_SEQ_NO
)
REFERENCES REPORT_HIER_DESC
(
HIERARCHY_TYPE_ID,
LEVEL_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHL_RPHL_FK'
ALTER TABLE REPORT_HIER_LEVEL ADD CONSTRAINT RPHL_RPHL_FK FOREIGN KEY
(
REPORT_HIERARCHY_ID,
PARENT_COMPONENT_ID
)
REFERENCES REPORT_HIER_LEVEL
(
REPORT_HIERARCHY_ID,
COMPONENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHL_R_RHC_FK'
ALTER TABLE REPORT_HIER_LEVEL ADD CONSTRAINT RPHL_R_RHC_FK FOREIGN KEY
(
COMPONENT_TYPE
)
REFERENCES R_REPORT_HIER_COMP
(
COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHL_SF_FK'
ALTER TABLE REPORT_HIER_LEVEL ADD CONSTRAINT RPHL_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHL_STU_FK'
ALTER TABLE REPORT_HIER_LEVEL ADD CONSTRAINT RPHL_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHL_W_FK'
ALTER TABLE REPORT_HIER_LEVEL ADD CONSTRAINT RPHL_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHT_R_RHT_FK'
ALTER TABLE REPORT_HIER_TYPE ADD CONSTRAINT RPHT_R_RHT_FK FOREIGN KEY
(
HIERARCHY_TYPE
)
REFERENCES R_REPORT_HIER_TYPE
(
HIERARCHY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHU_PDE_FK'
ALTER TABLE REPORT_HIER_USE ADD CONSTRAINT RPHU_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHU_RPHL_FK'
ALTER TABLE REPORT_HIER_USE ADD CONSTRAINT RPHU_RPHL_FK FOREIGN KEY
(
REPORT_HIERARCHY_ID,
COMPONENT_ID
)
REFERENCES REPORT_HIER_LEVEL
(
REPORT_HIERARCHY_ID,
COMPONENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHU_RSE_FK'
ALTER TABLE REPORT_HIER_USE ADD CONSTRAINT RPHU_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RPHU_SUB_FK'
ALTER TABLE REPORT_HIER_USE ADD CONSTRAINT RPHU_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSC_RSCL_FK'
ALTER TABLE RESENT_CLASS ADD CONSTRAINT RSC_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSC_RSE_FK'
ALTER TABLE RESENT_CLASS ADD CONSTRAINT RSC_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_ANLR_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_APP_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_A_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_BAAU_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_BAE_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_BAO_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_BA_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_CA_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_CEQ_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_CLSL_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_CON_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_CO_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_COT_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_C_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_EZ_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_ENT_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_EQ_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_FAC_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_FLD_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_FIN_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_FOS_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_HI_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_INS_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_INT_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_LR_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_LS_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_LIL_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_NOTI_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_OB_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_PASU_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_PDE_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_PL_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_PSWA_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_PSYS_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_PT_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_PS_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_PSF_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_PSF_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID,
PR_STR_FORM_OBS_NO
)
REFERENCES PROD_STRING_FORMATION
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_PROJ_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_RATE_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_RSCL_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_RSE_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_RSE_FK2'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_RSE_FK2 FOREIGN KEY
(
COMPONENT_RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_RMDSS_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_RMII_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_RMPI_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_RMTW_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_R_RCMPT_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_R_RCMPT_FK FOREIGN KEY
(
RESENT_COMPONENT_TYPE
)
REFERENCES R_RESENT_COMP_TYPE
(
RESENT_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_SS_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_SF_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_SPD_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_STFST_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_STU_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_SUB_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_W_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_WAC_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_WAC_FK FOREIGN KEY
(
UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_WSET_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCOM_WO_FK'
ALTER TABLE RESENT_COMPONENT ADD CONSTRAINT RSCOM_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSV_INTP_FK'
ALTER TABLE RESENT_ECO_RUN ADD CONSTRAINT RSV_INTP_FK FOREIGN KEY
(
PARTNER_OBS_NO,
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO,
PARTNER_BA_ID
)
REFERENCES INT_SET_PARTNER
(
PARTNER_OBS_NO,
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO,
PARTNER_BA_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSV_RSC_FK'
ALTER TABLE RESENT_ECO_RUN ADD CONSTRAINT RSV_RSC_FK FOREIGN KEY
(
RESENT_ID,
RESERVE_CLASS_ID
)
REFERENCES RESENT_CLASS
(
RESENT_ID,
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSV_R_ES_FK'
ALTER TABLE RESENT_ECO_RUN ADD CONSTRAINT RSV_R_ES_FK FOREIGN KEY
(
ECONOMIC_SCENARIO
)
REFERENCES R_ECONOMIC_SCENARIO
(
ECONOMIC_SCENARIO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSESC_RSV_FK'
ALTER TABLE RESENT_ECO_SCHEDULE ADD CONSTRAINT RSESC_RSV_FK FOREIGN KEY
(
RESENT_ID,
RESERVE_CLASS_ID,
ECONOMICS_RUN_ID
)
REFERENCES RESENT_ECO_RUN
(
RESENT_ID,
RESERVE_CLASS_ID,
ECONOMICS_RUN_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSESC_R_EST_FK'
ALTER TABLE RESENT_ECO_SCHEDULE ADD CONSTRAINT RSESC_R_EST_FK FOREIGN KEY
(
ECONOMIC_SCHEDULE
)
REFERENCES R_ECONOMIC_SCHEDULE
(
ECONOMIC_SCHEDULE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSESC_R_PT3_FK'
ALTER TABLE RESENT_ECO_SCHEDULE ADD CONSTRAINT RSESC_R_PT3_FK FOREIGN KEY
(
PERIOD_TYPE
)
REFERENCES R_PERIOD_TYPE
(
PERIOD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSESC_SUB_FK'
ALTER TABLE RESENT_ECO_SCHEDULE ADD CONSTRAINT RSESC_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSEV_RSV_FK'
ALTER TABLE RESENT_ECO_VOLUME ADD CONSTRAINT RSEV_RSV_FK FOREIGN KEY
(
RESENT_ID,
RESERVE_CLASS_ID,
ECONOMICS_RUN_ID
)
REFERENCES RESENT_ECO_RUN
(
RESENT_ID,
RESERVE_CLASS_ID,
ECONOMICS_RUN_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSEV_SUB_FK'
ALTER TABLE RESENT_ECO_VOLUME ADD CONSTRAINT RSEV_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSP_RSC_FK'
ALTER TABLE RESENT_PRODUCT ADD CONSTRAINT RSP_RSC_FK FOREIGN KEY
(
RESENT_ID,
RESERVE_CLASS_ID
)
REFERENCES RESENT_CLASS
(
RESENT_ID,
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSP_SUB_FK'
ALTER TABLE RESENT_PRODUCT ADD CONSTRAINT RSP_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSPP_RSP_FK'
ALTER TABLE RESENT_PROD_PROPERTY ADD CONSTRAINT RSPP_RSP_FK FOREIGN KEY
(
RESENT_ID,
RESERVE_CLASS_ID,
PRODUCT_TYPE
)
REFERENCES RESENT_PRODUCT
(
RESENT_ID,
RESERVE_CLASS_ID,
PRODUCT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSRC_RSRC_FK'
ALTER TABLE RESENT_REVISION_CAT ADD CONSTRAINT RSRC_RSRC_FK FOREIGN KEY
(
PART_OF_CATEGORY_ID
)
REFERENCES RESENT_REVISION_CAT
(
REVISION_CATEGORY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSRC_R_RRC_FK'
ALTER TABLE RESENT_REVISION_CAT ADD CONSTRAINT RSRC_R_RRC_FK FOREIGN KEY
(
CATEGORY_TYPE
)
REFERENCES R_RESENT_REV_CAT
(
CATEGORY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSVMR_PVMR_FK'
ALTER TABLE RESENT_VOL_REGIME ADD CONSTRAINT RSVMR_PVMR_FK FOREIGN KEY
(
VOLUME_REGIME_ID
)
REFERENCES PPDM_VOL_MEAS_REGIME
(
VOLUME_REGIME_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSVMR_RSE_FK'
ALTER TABLE RESENT_VOL_REGIME ADD CONSTRAINT RSVMR_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSVR_BA_FK'
ALTER TABLE RESENT_VOL_REVISION ADD CONSTRAINT RSVR_BA_FK FOREIGN KEY
(
PARTNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSVR_BA_FK2'
ALTER TABLE RESENT_VOL_REVISION ADD CONSTRAINT RSVR_BA_FK2 FOREIGN KEY
(
ANALYST_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSVR_BA_FK3'
ALTER TABLE RESENT_VOL_REVISION ADD CONSTRAINT RSVR_BA_FK3 FOREIGN KEY
(
APPROVED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSVR_INTP_FK'
ALTER TABLE RESENT_VOL_REVISION ADD CONSTRAINT RSVR_INTP_FK FOREIGN KEY
(
PARTNER_OBS_NO,
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO,
PARTNER_BA_ID
)
REFERENCES INT_SET_PARTNER
(
PARTNER_OBS_NO,
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO,
PARTNER_BA_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSVR_PROJ_FK'
ALTER TABLE RESENT_VOL_REVISION ADD CONSTRAINT RSVR_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSVR_RSP_FK'
ALTER TABLE RESENT_VOL_REVISION ADD CONSTRAINT RSVR_RSP_FK FOREIGN KEY
(
RESENT_ID,
RESERVE_CLASS_ID,
PRODUCT_TYPE
)
REFERENCES RESENT_PRODUCT
(
RESENT_ID,
RESERVE_CLASS_ID,
PRODUCT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSVR_RSRC_FK'
ALTER TABLE RESENT_VOL_REVISION ADD CONSTRAINT RSVR_RSRC_FK FOREIGN KEY
(
REVISION_CATEGORY_ID
)
REFERENCES RESENT_REVISION_CAT
(
REVISION_CATEGORY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSVR_RSVS_FK'
ALTER TABLE RESENT_VOL_REVISION ADD CONSTRAINT RSVR_RSVS_FK FOREIGN KEY
(
RESENT_ID,
RESERVE_CLASS_ID,
PRODUCT_TYPE,
SUMMARY_ID,
SUMMARY_OBS_NO
)
REFERENCES RESENT_VOL_SUMMARY
(
RESENT_ID,
RESERVE_CLASS_ID,
PRODUCT_TYPE,
SUMMARY_ID,
SUMMARY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSVR_R_RM_FK'
ALTER TABLE RESENT_VOL_REVISION ADD CONSTRAINT RSVR_R_RM_FK FOREIGN KEY
(
REVISION_METHOD
)
REFERENCES R_REVISION_METHOD
(
REVISION_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSVS_BA_FK2'
ALTER TABLE RESENT_VOL_SUMMARY ADD CONSTRAINT RSVS_BA_FK2 FOREIGN KEY
(
ANALYST_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSVS_BA_FK'
ALTER TABLE RESENT_VOL_SUMMARY ADD CONSTRAINT RSVS_BA_FK FOREIGN KEY
(
APPROVED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSVS_INTP_FK'
ALTER TABLE RESENT_VOL_SUMMARY ADD CONSTRAINT RSVS_INTP_FK FOREIGN KEY
(
PARTNER_OBS_NO,
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO,
INTEREST_SET_PARTNER
)
REFERENCES INT_SET_PARTNER
(
PARTNER_OBS_NO,
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO,
PARTNER_BA_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSVS_PDENDFC_FK'
ALTER TABLE RESENT_VOL_SUMMARY ADD CONSTRAINT RSVS_PDENDFC_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
PDEN_PRODUCT_TYPE,
DECLINE_CASE_ID
)
REFERENCES PDEN_DECLINE_CASE
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
PRODUCT_TYPE,
CASE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSVS_PDENMB_FK'
ALTER TABLE RESENT_VOL_SUMMARY ADD CONSTRAINT RSVS_PDENMB_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
PDEN_PRODUCT_TYPE,
MATERIAL_BALANCE_CASE_ID
)
REFERENCES PDEN_MATERIAL_BAL
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
PRODUCT_TYPE,
CASE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSVS_PDENVA_FK'
ALTER TABLE RESENT_VOL_SUMMARY ADD CONSTRAINT RSVS_PDENVA_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
PDEN_PRODUCT_TYPE,
VOL_ANAL_CASE_ID
)
REFERENCES PDEN_VOLUME_ANALYSIS
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
PRODUCT_TYPE,
CASE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSVS_RSP_FK'
ALTER TABLE RESENT_VOL_SUMMARY ADD CONSTRAINT RSVS_RSP_FK FOREIGN KEY
(
RESENT_ID,
RESERVE_CLASS_ID,
PRODUCT_TYPE
)
REFERENCES RESENT_PRODUCT
(
RESENT_ID,
RESERVE_CLASS_ID,
PRODUCT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSVS_R_RVM_FK'
ALTER TABLE RESENT_VOL_SUMMARY ADD CONSTRAINT RSVS_R_RVM_FK FOREIGN KEY
(
VOLUME_METHOD
)
REFERENCES R_RESENT_VOL_METHOD
(
VOLUME_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSVS_SUB_FK'
ALTER TABLE RESENT_VOL_SUMMARY ADD CONSTRAINT RSVS_SUB_FK FOREIGN KEY
(
YIELD_PARENT_PRODUCT
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSX_RSE_FK'
ALTER TABLE RESENT_XREF ADD CONSTRAINT RSX_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSX_RSE_FK2'
ALTER TABLE RESENT_XREF ADD CONSTRAINT RSX_RSE_FK2 FOREIGN KEY
(
RESENT_ID2
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSX_R_RXT_FK'
ALTER TABLE RESENT_XREF ADD CONSTRAINT RSX_R_RXT_FK FOREIGN KEY
(
XREF_TYPE
)
REFERENCES R_RESENT_XREF_TYPE
(
XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCL_BA_FK'
ALTER TABLE RESERVE_CLASS ADD CONSTRAINT RSCL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCL_R_RCO_FK'
ALTER TABLE RESERVE_CLASS ADD CONSTRAINT RSCL_R_RCO_FK FOREIGN KEY
(
CONFIDENCE_TYPE
)
REFERENCES R_RESENT_CONFIDENCE
(
CONFIDENCE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCL_R_RUT_FK'
ALTER TABLE RESERVE_CLASS ADD CONSTRAINT RSCL_R_RUT_FK FOREIGN KEY
(
USE_TYPE
)
REFERENCES R_RESENT_USE_TYPE
(
USE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCC_RSCL_FK'
ALTER TABLE RESERVE_CLASS_CALC ADD CONSTRAINT RSCC_RSCL_FK FOREIGN KEY
(
ORIGIN_RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCC_RSCF_FK'
ALTER TABLE RESERVE_CLASS_CALC ADD CONSTRAINT RSCC_RSCF_FK FOREIGN KEY
(
RESERVE_CLASS_ID,
FORMULA_ID
)
REFERENCES RESERVE_CLASS_FORMULA
(
RESERVE_CLASS_ID,
FORMULA_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCF_RSCL_FK'
ALTER TABLE RESERVE_CLASS_FORMULA ADD CONSTRAINT RSCF_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSCF_R_RUT_FK'
ALTER TABLE RESERVE_CLASS_FORMULA ADD CONSTRAINT RSCF_R_RUT_FK FOREIGN KEY
(
USE_TYPE
)
REFERENCES R_RESENT_USE_TYPE
(
USE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSE_BA_FK'
ALTER TABLE RESERVE_ENTITY ADD CONSTRAINT RSE_BA_FK FOREIGN KEY
(
LAST_UPDATE_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSE_BA_FK2'
ALTER TABLE RESERVE_ENTITY ADD CONSTRAINT RSE_BA_FK2 FOREIGN KEY
(
LAST_APPROVE_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSE_BA_FK3'
ALTER TABLE RESERVE_ENTITY ADD CONSTRAINT RSE_BA_FK3 FOREIGN KEY
(
CREATED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSE_R_PT3_FK'
ALTER TABLE RESERVE_ENTITY ADD CONSTRAINT RSE_R_PT3_FK FOREIGN KEY
(
UPDATE_SCHEDULE
)
REFERENCES R_PERIOD_TYPE
(
PERIOD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSE_R_RGT_FK'
ALTER TABLE RESERVE_ENTITY ADD CONSTRAINT RSE_R_RGT_FK FOREIGN KEY
(
GROUP_TYPE
)
REFERENCES R_RESENT_GROUP_TYPE
(
GROUP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RSE_SUB_FK'
ALTER TABLE RESERVE_ENTITY ADD CONSTRAINT RSE_SUB_FK FOREIGN KEY
(
PRIMARY_PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT REST_RESTC_FK'
ALTER TABLE RESTRICTION ADD CONSTRAINT REST_RESTC_FK FOREIGN KEY
(
RESTRICTION_CLASS
)
REFERENCES REST_CLASS
(
RESTRICTION_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT REST_R_RD_FK'
ALTER TABLE RESTRICTION ADD CONSTRAINT REST_R_RD_FK FOREIGN KEY
(
REST_DURATION_TYPE
)
REFERENCES R_REST_DURATION
(
REST_DURATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT REST_R_RT3_FK'
ALTER TABLE RESTRICTION ADD CONSTRAINT REST_R_RT3_FK FOREIGN KEY
(
RESTRICTION_TYPE
)
REFERENCES R_REST_TYPE
(
RESTRICTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT REST_SRCD_FK'
ALTER TABLE RESTRICTION ADD CONSTRAINT REST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RESTA_REST_FK'
ALTER TABLE REST_ACTIVITY ADD CONSTRAINT RESTA_REST_FK FOREIGN KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION
)
REFERENCES RESTRICTION
(
RESTRICTION_ID,
RESTRICTION_VERSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RESTA_R_RA_FK'
ALTER TABLE REST_ACTIVITY ADD CONSTRAINT RESTA_R_RA_FK FOREIGN KEY
(
RESTRICTED_ACTIVITY
)
REFERENCES R_REST_ACTIVITY
(
RESTRICTED_ACTIVITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RESTCO_BAA_FK'
ALTER TABLE REST_CONTACT ADD CONSTRAINT RESTCO_BAA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
ADDRESS_SOURCE,
ADDRESS_OBS_NO
)
REFERENCES BA_ADDRESS
(
BUSINESS_ASSOCIATE_ID,
SOURCE,
ADDRESS_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RESTCO_BACI_FK'
ALTER TABLE REST_CONTACT ADD CONSTRAINT RESTCO_BACI_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
PHONE_NUM_ID
)
REFERENCES BA_CONTACT_INFO
(
BUSINESS_ASSOCIATE_ID,
LOCATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RESTCO_BA_FK'
ALTER TABLE REST_CONTACT ADD CONSTRAINT RESTCO_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RESTCO_REST_FK'
ALTER TABLE REST_CONTACT ADD CONSTRAINT RESTCO_REST_FK FOREIGN KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION
)
REFERENCES RESTRICTION
(
RESTRICTION_ID,
RESTRICTION_VERSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RESTR_BA_FK'
ALTER TABLE REST_REMARK ADD CONSTRAINT RESTR_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RESTR_REST_FK'
ALTER TABLE REST_REMARK ADD CONSTRAINT RESTR_REST_FK FOREIGN KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION
)
REFERENCES RESTRICTION
(
RESTRICTION_ID,
RESTRICTION_VERSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RESTR_R_RR_FK'
ALTER TABLE REST_REMARK ADD CONSTRAINT RESTR_R_RR_FK FOREIGN KEY
(
REMARK_CODE
)
REFERENCES R_REST_REMARK
(
RESTRICTION_REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RESTT_REST_FK'
ALTER TABLE REST_TEXT ADD CONSTRAINT RESTT_REST_FK FOREIGN KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION
)
REFERENCES RESTRICTION
(
RESTRICTION_ID,
RESTRICTION_VERSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMAC_RMST_FK'
ALTER TABLE RM_AUX_CHANNEL ADD CONSTRAINT RMAC_RMST_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_SEIS_TRACE
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMAC_R_SCT_FK'
ALTER TABLE RM_AUX_CHANNEL ADD CONSTRAINT RMAC_R_SCT_FK FOREIGN KEY
(
CHANNEL_TYPE
)
REFERENCES R_SEIS_CHANNEL_TYPE
(
CHANNEL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMCI_BA_FK'
ALTER TABLE RM_CIRCULATION ADD CONSTRAINT RMCI_BA_FK FOREIGN KEY
(
CHECKED_OUT_BY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMCI_BA_FK2'
ALTER TABLE RM_CIRCULATION ADD CONSTRAINT RMCI_BA_FK2 FOREIGN KEY
(
RESERVED_BY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMCI_PROJS_FK'
ALTER TABLE RM_CIRCULATION ADD CONSTRAINT RMCI_PROJS_FK FOREIGN KEY
(
PROJECT_ID,
PROJECT_STEP_ID
)
REFERENCES PROJECT_STEP
(
PROJECT_ID,
STEP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMCI_RMDC_FK'
ALTER TABLE RM_CIRCULATION ADD CONSTRAINT RMCI_RMDC_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID,
PHYSICAL_ITEM_ID,
DATA_CONTENT_SEQ_NO
)
REFERENCES RM_DATA_CONTENT
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID,
PHYSICAL_ITEM_ID,
DATA_CONTENT_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMCI_RMPI_FK'
ALTER TABLE RM_CIRCULATION ADD CONSTRAINT RMCI_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMCI_R_DCS_FK'
ALTER TABLE RM_CIRCULATION ADD CONSTRAINT RMCI_R_DCS_FK FOREIGN KEY
(
DATA_CIRC_STATUS
)
REFERENCES R_DATA_CIRC_STATUS
(
DATA_CIRC_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMCP_RMCI_FK'
ALTER TABLE RM_CIRC_PROCESS ADD CONSTRAINT RMCP_RMCI_FK FOREIGN KEY
(
CIRC_ID
)
REFERENCES RM_CIRCULATION
(
CIRC_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMCP_R_DCP_FK'
ALTER TABLE RM_CIRC_PROCESS ADD CONSTRAINT RMCP_R_DCP_FK FOREIGN KEY
(
DATA_CIRC_PROCESS
)
REFERENCES R_DATA_CIRC_PROCESS
(
DATA_CIRC_PROCESS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMCO_RMII_FK'
ALTER TABLE RM_COMPOSITE ADD CONSTRAINT RMCO_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMCR_RMPI_FK'
ALTER TABLE RM_COPY_RECORD ADD CONSTRAINT RMCR_RMPI_FK FOREIGN KEY
(
OLD_PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMCR_RMPI_FK2'
ALTER TABLE RM_COPY_RECORD ADD CONSTRAINT RMCR_RMPI_FK2 FOREIGN KEY
(
NEW_PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMCT_BA_FK'
ALTER TABLE RM_CREATOR ADD CONSTRAINT RMCT_BA_FK FOREIGN KEY
(
CREATOR_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMCT_RMII_FK'
ALTER TABLE RM_CREATOR ADD CONSTRAINT RMCT_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMCT_R_BT_FK'
ALTER TABLE RM_CREATOR ADD CONSTRAINT RMCT_R_BT_FK FOREIGN KEY
(
CREATOR_BA_TYPE
)
REFERENCES R_BA_TYPE
(
BA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMCT_R_CRTY_FK'
ALTER TABLE RM_CREATOR ADD CONSTRAINT RMCT_R_CRTY_FK FOREIGN KEY
(
CREATOR_TYPE
)
REFERENCES R_CREATOR_TYPE
(
CREATOR_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMCU_BA_FK'
ALTER TABLE RM_CUSTODY ADD CONSTRAINT RMCU_BA_FK FOREIGN KEY
(
RECEIVE_BY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMCU_BA_FK2'
ALTER TABLE RM_CUSTODY ADD CONSTRAINT RMCU_BA_FK2 FOREIGN KEY
(
SEND_BY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMCU_RMPI_FK'
ALTER TABLE RM_CUSTODY ADD CONSTRAINT RMCU_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMCU_R_SM_FK'
ALTER TABLE RM_CUSTODY ADD CONSTRAINT RMCU_R_SM_FK FOREIGN KEY
(
SEND_METHOD
)
REFERENCES R_SEND_METHOD
(
SEND_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMDC_RMDS_FK'
ALTER TABLE RM_DATA_CONTENT ADD CONSTRAINT RMDC_RMDS_FK FOREIGN KEY
(
STORE_ID
)
REFERENCES RM_DATA_STORE
(
STORE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMDC_RMII_FK'
ALTER TABLE RM_DATA_CONTENT ADD CONSTRAINT RMDC_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMDC_RMPI_FK'
ALTER TABLE RM_DATA_CONTENT ADD CONSTRAINT RMDC_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMDS_BAA_FK'
ALTER TABLE RM_DATA_STORE ADD CONSTRAINT RMDS_BAA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
ADDRESS_SOURCE,
ADDRESS_OBS_NO
)
REFERENCES BA_ADDRESS
(
BUSINESS_ASSOCIATE_ID,
SOURCE,
ADDRESS_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMDS_BA_FK'
ALTER TABLE RM_DATA_STORE ADD CONSTRAINT RMDS_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMDS_RMDS_FK'
ALTER TABLE RM_DATA_STORE ADD CONSTRAINT RMDS_RMDS_FK FOREIGN KEY
(
CONTAINED_BY_STORE_ID
)
REFERENCES RM_DATA_STORE
(
STORE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMDS_RMDSHL_FK'
ALTER TABLE RM_DATA_STORE ADD CONSTRAINT RMDS_RMDSHL_FK FOREIGN KEY
(
DATA_STORE_HIER_ID,
HIER_LEVEL_ID
)
REFERENCES RM_DATA_STORE_HIER_LEVEL
(
DATA_STORE_HIER_ID,
HIER_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMDS_R_DST_FK'
ALTER TABLE RM_DATA_STORE ADD CONSTRAINT RMDS_R_DST_FK FOREIGN KEY
(
DATA_STORE_TYPE
)
REFERENCES R_DATA_STORE_TYPE
(
DATA_STORE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMDS_R_SS3_FK'
ALTER TABLE RM_DATA_STORE ADD CONSTRAINT RMDS_R_SS3_FK FOREIGN KEY
(
PHYSICAL_STORE_STATUS
)
REFERENCES R_STORE_STATUS
(
PHYSICAL_STORE_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMDSHL_RMDSH_FK'
ALTER TABLE RM_DATA_STORE_HIER_LEVEL ADD CONSTRAINT RMDSHL_RMDSH_FK FOREIGN KEY
(
DATA_STORE_HIER_ID
)
REFERENCES RM_DATA_STORE_HIER
(
DATA_STORE_HIER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMDSHL_RMDSHL_FK'
ALTER TABLE RM_DATA_STORE_HIER_LEVEL ADD CONSTRAINT RMDSHL_RMDSHL_FK FOREIGN KEY
(
DATA_STORE_HIER_ID,
PARENT_HIER_LEVEL_ID
)
REFERENCES RM_DATA_STORE_HIER_LEVEL
(
DATA_STORE_HIER_ID,
HIER_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMDSHL_R_DST_FK'
ALTER TABLE RM_DATA_STORE_HIER_LEVEL ADD CONSTRAINT RMDSHL_R_DST_FK FOREIGN KEY
(
DATA_STORE_TYPE
)
REFERENCES R_DATA_STORE_TYPE
(
DATA_STORE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMDSI_RMDSS_FK'
ALTER TABLE RM_DATA_STORE_ITEM ADD CONSTRAINT RMDSI_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMDSI_R_IC_FK'
ALTER TABLE RM_DATA_STORE_ITEM ADD CONSTRAINT RMDSI_R_IC_FK FOREIGN KEY
(
ITEM_CATEGORY
)
REFERENCES R_ITEM_CATEGORY
(
ITEM_CATEGORY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMDSI_R_ISC1_FK'
ALTER TABLE RM_DATA_STORE_ITEM ADD CONSTRAINT RMDSI_R_ISC1_FK FOREIGN KEY
(
ITEM_CATEGORY,
ITEM_SUB_CATEGORY
)
REFERENCES R_ITEM_SUB_CATEGORY
(
ITEM_CATEGORY,
ITEM_SUB_CATEGORY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMDSM_RMDSS_FK'
ALTER TABLE RM_DATA_STORE_MEDIA ADD CONSTRAINT RMDSM_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMDSM_R_MT2_FK'
ALTER TABLE RM_DATA_STORE_MEDIA ADD CONSTRAINT RMDSM_R_MT2_FK FOREIGN KEY
(
MEDIA_TYPE
)
REFERENCES R_MEDIA_TYPE
(
MEDIA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMDSS_RMDS_FK'
ALTER TABLE RM_DATA_STORE_STRUCTURE ADD CONSTRAINT RMDSS_RMDS_FK FOREIGN KEY
(
STORE_ID
)
REFERENCES RM_DATA_STORE
(
STORE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMDSS_RMDS_FK2'
ALTER TABLE RM_DATA_STORE_STRUCTURE ADD CONSTRAINT RMDSS_RMDS_FK2 FOREIGN KEY
(
UPPER_CONTAINED_STORE_ID
)
REFERENCES RM_DATA_STORE
(
STORE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMDSS_RMDS_FK3'
ALTER TABLE RM_DATA_STORE_STRUCTURE ADD CONSTRAINT RMDSS_RMDS_FK3 FOREIGN KEY
(
LOWER_CONTAINED_STORE_ID
)
REFERENCES RM_DATA_STORE
(
STORE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMDK_PSWA_FK'
ALTER TABLE RM_DECRYPT_KEY ADD CONSTRAINT RMDK_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMDK_R_DET_FK'
ALTER TABLE RM_DECRYPT_KEY ADD CONSTRAINT RMDK_R_DET_FK FOREIGN KEY
(
DECRYPTION_TYPE
)
REFERENCES R_DECRYPT_TYPE
(
DECRYPTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMD_RMII_FK'
ALTER TABLE RM_DOCUMENT ADD CONSTRAINT RMD_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMD_R_DOC_FK'
ALTER TABLE RM_DOCUMENT ADD CONSTRAINT RMD_R_DOC_FK FOREIGN KEY
(
DOCUMENT_TYPE
)
REFERENCES R_DOCUMENT_TYPE
(
DOCUMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMD_R_DS_FK'
ALTER TABLE RM_DOCUMENT ADD CONSTRAINT RMD_R_DS_FK FOREIGN KEY
(
DOCUMENT_STATUS
)
REFERENCES R_DOC_STATUS
(
DOCUMENT_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMD_SRCD_FK'
ALTER TABLE RM_DOCUMENT ADD CONSTRAINT RMD_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RME_PSWA_FK'
ALTER TABLE RM_ENCODING ADD CONSTRAINT RME_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RME_RMDK_FK'
ALTER TABLE RM_ENCODING ADD CONSTRAINT RME_RMDK_FK FOREIGN KEY
(
DECRYPT_KEY_ID
)
REFERENCES RM_DECRYPT_KEY
(
DECRYPT_KEY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RME_RMPI_FK'
ALTER TABLE RM_ENCODING ADD CONSTRAINT RME_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RME_R_ET_FK'
ALTER TABLE RM_ENCODING ADD CONSTRAINT RME_R_ET_FK FOREIGN KEY
(
ENCODING_TYPE
)
REFERENCES R_ENCODING_TYPE
(
ENCODING_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMEQ_RMII_FK'
ALTER TABLE RM_EQUIPMENT ADD CONSTRAINT RMEQ_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMFC_PSWA_FK'
ALTER TABLE RM_FILE_CONTENT ADD CONSTRAINT RMFC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMFC_RMII_FK'
ALTER TABLE RM_FILE_CONTENT ADD CONSTRAINT RMFC_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMFC_RMPI_FK'
ALTER TABLE RM_FILE_CONTENT ADD CONSTRAINT RMFC_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMFC_R_DF_FK'
ALTER TABLE RM_FILE_CONTENT ADD CONSTRAINT RMFC_R_DF_FK FOREIGN KEY
(
DIGITAL_FORMAT
)
REFERENCES R_DIGITAL_FORMAT
(
DIGITAL_FORMAT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMFO_RMII_FK'
ALTER TABLE RM_FOSSIL ADD CONSTRAINT RMFO_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMFO_R_PTF_FK'
ALTER TABLE RM_FOSSIL ADD CONSTRAINT RMFO_R_PTF_FK FOREIGN KEY
(
TYPE_FOSSIL_TYPE
)
REFERENCES R_PALEO_TYPE_FOSSIL
(
TYPE_FOSSIL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIMC_RMIMS_FK'
ALTER TABLE RM_IMAGE_COMP ADD CONSTRAINT RMIMC_RMIMS_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID,
LOG_SECTION_ID_1
)
REFERENCES RM_IMAGE_SECT
(
PHYSICAL_ITEM_ID,
IMAGE_SECTION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIMC_RMIMS_FK2'
ALTER TABLE RM_IMAGE_COMP ADD CONSTRAINT RMIMC_RMIMS_FK2 FOREIGN KEY
(
PHYSICAL_ITEM_ID,
LOG_SECTION_ID_2
)
REFERENCES RM_IMAGE_SECT
(
PHYSICAL_ITEM_ID,
IMAGE_SECTION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIML_RMIMS_FK'
ALTER TABLE RM_IMAGE_LOC ADD CONSTRAINT RMIML_RMIMS_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID,
LOG_SECTION_ID
)
REFERENCES RM_IMAGE_SECT
(
PHYSICAL_ITEM_ID,
IMAGE_SECTION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIML_R_LPOST_FK'
ALTER TABLE RM_IMAGE_LOC ADD CONSTRAINT RMIML_R_LPOST_FK FOREIGN KEY
(
POSITION_TYPE
)
REFERENCES R_LOG_POSITION_TYPE
(
POSITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIMS_BA_FK'
ALTER TABLE RM_IMAGE_SECT ADD CONSTRAINT RMIMS_BA_FK FOREIGN KEY
(
CALIBRATED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIMS_PSWA_FK'
ALTER TABLE RM_IMAGE_SECT ADD CONSTRAINT RMIMS_PSWA_FK FOREIGN KEY
(
CALIBRATE_APPLICATION
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIMS_RMPI_FK'
ALTER TABLE RM_IMAGE_SECT ADD CONSTRAINT RMIMS_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIMS_R_ICM_FK'
ALTER TABLE RM_IMAGE_SECT ADD CONSTRAINT RMIMS_R_ICM_FK FOREIGN KEY
(
CALIBRATE_METHOD
)
REFERENCES R_IMAGE_CALIBRATE_METHOD
(
CALIBRATE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIMS_R_ISET_FK'
ALTER TABLE RM_IMAGE_SECT ADD CONSTRAINT RMIMS_R_ISET_FK FOREIGN KEY
(
IMAGE_SECTION_TYPE
)
REFERENCES R_IMAGE_SECTION_TYPE
(
SECTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIMS_R_LIX_FK'
ALTER TABLE RM_IMAGE_SECT ADD CONSTRAINT RMIMS_R_LIX_FK FOREIGN KEY
(
INDEX_TYPE
)
REFERENCES R_LOG_INDEX_TYPE
(
INDEX_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIMS_R_LM_FK'
ALTER TABLE RM_IMAGE_SECT ADD CONSTRAINT RMIMS_R_LM_FK FOREIGN KEY
(
LOG_MATRIX_TYPE
)
REFERENCES R_LOG_MATRIX
(
LOG_MATRIX_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIMS_R_WLC1_FK'
ALTER TABLE RM_IMAGE_SECT ADD CONSTRAINT RMIMS_R_WLC1_FK FOREIGN KEY
(
WELL_LOG_CLASS_ID
)
REFERENCES R_WELL_LOG_CLASS
(
WELL_LOG_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMII_CS_FK'
ALTER TABLE RM_INFORMATION_ITEM ADD CONSTRAINT RMII_CS_FK FOREIGN KEY
(
GEOG_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMII_CS_FK3'
ALTER TABLE RM_INFORMATION_ITEM ADD CONSTRAINT RMII_CS_FK3 FOREIGN KEY
(
LOCAL_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMII_CS_FK2'
ALTER TABLE RM_INFORMATION_ITEM ADD CONSTRAINT RMII_CS_FK2 FOREIGN KEY
(
MAP_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMII_CSCA_FK'
ALTER TABLE RM_INFORMATION_ITEM ADD CONSTRAINT RMII_CSCA_FK FOREIGN KEY
(
COORD_ACQUISITION_ID
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMII_R_IC_FK'
ALTER TABLE RM_INFORMATION_ITEM ADD CONSTRAINT RMII_R_IC_FK FOREIGN KEY
(
ITEM_CATEGORY
)
REFERENCES R_ITEM_CATEGORY
(
ITEM_CATEGORY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMII_R_ISC1_FK'
ALTER TABLE RM_INFORMATION_ITEM ADD CONSTRAINT RMII_R_ISC1_FK FOREIGN KEY
(
ITEM_CATEGORY,
ITEM_SUB_CATEGORY
)
REFERENCES R_ITEM_SUB_CATEGORY
(
ITEM_CATEGORY,
ITEM_SUB_CATEGORY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMII_SRCD_FK'
ALTER TABLE RM_INFORMATION_ITEM ADD CONSTRAINT RMII_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMICQ_BA_FK'
ALTER TABLE RM_INFO_COORD_QUALITY ADD CONSTRAINT RMICQ_BA_FK FOREIGN KEY
(
DESCRIBED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMICQ_CSCA_FK'
ALTER TABLE RM_INFO_COORD_QUALITY ADD CONSTRAINT RMICQ_CSCA_FK FOREIGN KEY
(
COORD_ACQUISITION_ID
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMICQ_RMII_FK'
ALTER TABLE RM_INFO_COORD_QUALITY ADD CONSTRAINT RMICQ_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMICQ_R_CQ_FK'
ALTER TABLE RM_INFO_COORD_QUALITY ADD CONSTRAINT RMICQ_R_CQ_FK FOREIGN KEY
(
COORD_QUALITY
)
REFERENCES R_COORD_QUALITY
(
COORDINATE_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMICQ_R_RMIIDC_FK'
ALTER TABLE RM_INFO_COORD_QUALITY ADD CONSTRAINT RMICQ_R_RMIIDC_FK FOREIGN KEY
(
DEFICIENCY_TYPE
)
REFERENCES R_RMII_DEFICIENCY
(
DEFICIENCY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIDQ_BA_FK'
ALTER TABLE RM_INFO_DATA_QUALITY ADD CONSTRAINT RMIIDQ_BA_FK FOREIGN KEY
(
DESCRIBED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIDQ_RMII_FK'
ALTER TABLE RM_INFO_DATA_QUALITY ADD CONSTRAINT RMIIDQ_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIDQ_R_RMIIDC_FK'
ALTER TABLE RM_INFO_DATA_QUALITY ADD CONSTRAINT RMIIDQ_R_RMIIDC_FK FOREIGN KEY
(
DEFICIENCY_TYPE
)
REFERENCES R_RMII_DEFICIENCY
(
DEFICIENCY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIDQ_R_RMIIQC_FK'
ALTER TABLE RM_INFO_DATA_QUALITY ADD CONSTRAINT RMIIDQ_R_RMIIQC_FK FOREIGN KEY
(
INFORMATION_QUALITY
)
REFERENCES R_RMII_QUALITY_CODE
(
INFORMATION_QUALITY_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIA_BA_FK'
ALTER TABLE RM_INFO_ITEM_ALIAS ADD CONSTRAINT RMIIA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIA_PSWA_FK'
ALTER TABLE RM_INFO_ITEM_ALIAS ADD CONSTRAINT RMIIA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIA_RMII_FK'
ALTER TABLE RM_INFO_ITEM_ALIAS ADD CONSTRAINT RMIIA_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIA_R_ART_FK'
ALTER TABLE RM_INFO_ITEM_ALIAS ADD CONSTRAINT RMIIA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIA_R_ATY_FK'
ALTER TABLE RM_INFO_ITEM_ALIAS ADD CONSTRAINT RMIIA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIA_R_LANG_FK'
ALTER TABLE RM_INFO_ITEM_ALIAS ADD CONSTRAINT RMIIA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIA_SRCD_FK'
ALTER TABLE RM_INFO_ITEM_ALIAS ADD CONSTRAINT RMIIA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMBA_BA_FK'
ALTER TABLE RM_INFO_ITEM_BA ADD CONSTRAINT RMBA_BA_FK FOREIGN KEY
(
CONTACT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMBA_RMII_FK'
ALTER TABLE RM_INFO_ITEM_BA ADD CONSTRAINT RMBA_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMBA_R_BT_FK'
ALTER TABLE RM_INFO_ITEM_BA ADD CONSTRAINT RMBA_R_BT_FK FOREIGN KEY
(
CONTACT_BA_TYPE
)
REFERENCES R_BA_TYPE
(
BA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMBA_R_RMIICT_FK'
ALTER TABLE RM_INFO_ITEM_BA ADD CONSTRAINT RMBA_R_RMIICT_FK FOREIGN KEY
(
CONTACT_TYPE
)
REFERENCES R_RMII_CONTACT_TYPE
(
CONTACT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_ANLR_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_APP_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_APPT_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_APPT_FK FOREIGN KEY
(
APPLICATION_ID,
APPLIC_ATTACHMENT_ID
)
REFERENCES APPLIC_ATTACH
(
APPLICATION_ID,
ATTACHMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_A_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_BAAU_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_BALIC_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_BALIC_FK FOREIGN KEY
(
BA_LICENSEE_BA_ID,
BA_LICENSE_ID
)
REFERENCES BA_LICENSE
(
LICENSEE_BA_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_BAO_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_BA_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_CEQ_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_CON_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_CO_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_COD_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_COD_FK FOREIGN KEY
(
CONSULT_ID,
DISCUSSION_ID
)
REFERENCES CONSULT_DISC
(
CONSULT_ID,
DISCUSSION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_COT_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_C_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_EZ_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_EZS_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_EZS_FK FOREIGN KEY
(
ECOZONE_SET_ID
)
REFERENCES ECOZONE_SET
(
ECOZONE_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_ENT_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_EQ_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_FAC_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_FACL_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_FACL_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE,
FACILITY_LICENSE_ID
)
REFERENCES FACILITY_LICENSE
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_FLD_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_FIN_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_FOS_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_FOSD_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_FOSD_FK FOREIGN KEY
(
FOSSIL_ID,
FOSSIL_DESC_ID
)
REFERENCES FOSSIL_DESC
(
FOSSIL_ID,
FOSSIL_DESC_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_HI_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_HI_FK FOREIGN KEY
(
HSE_INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_INS_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_INT_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_LR_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_LS_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_LSO_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_LSO_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID
)
REFERENCES LAND_SALE_OFFERING
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_LSRQ_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_LSRQ_FK FOREIGN KEY
(
LAND_REQUEST_ID
)
REFERENCES LAND_SALE_REQUEST
(
LAND_REQUEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_LIL_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_NOTI_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_OB_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_PASU_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_PDE_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_PL_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_PAH_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_PAH_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME,
PPDM_AUDIT_ROW_GUID,
PPDM_AUDIT_SEQ_NO
)
REFERENCES PPDM_AUDIT_HISTORY
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME,
AUDIT_ROW_GUID,
AUDIT_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_PC_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_PC_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_PSYS_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_PSYS_FK FOREIGN KEY
(
SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_PT_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_PT_FK FOREIGN KEY
(
SYSTEM_ID,
TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_PS_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_PROJ_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_PROJS_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_PROJS_FK FOREIGN KEY
(
PROJECT_ID,
PROJECT_STEP_ID
)
REFERENCES PROJECT_STEP
(
PROJECT_ID,
STEP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_RATE_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_RSVR_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_RSVR_FK FOREIGN KEY
(
RESENT_ID,
RESERVE_CLASS_ID,
RESERVE_REVISION_ID,
RESERVE_REVISION_OBS_NO
)
REFERENCES RESENT_VOL_REVISION
(
RESENT_ID,
RESERVE_CLASS_ID,
REVISION_ID,
REVISION_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_RSVS_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_RSVS_FK FOREIGN KEY
(
RESENT_ID,
RESERVE_CLASS_ID,
RESERVE_PRODUCT,
RESERVE_SUMMARY_ID,
RESERVE_SUMMARY_OBS_NO
)
REFERENCES RESENT_VOL_SUMMARY
(
RESENT_ID,
RESERVE_CLASS_ID,
PRODUCT_TYPE,
SUMMARY_ID,
SUMMARY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_RSE_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_REST_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_REST_FK FOREIGN KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION
)
REFERENCES RESTRICTION
(
RESTRICTION_ID,
RESTRICTION_VERSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_RMCU_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_RMCU_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID,
PHYSICAL_ITEM_CUSTODY_ID
)
REFERENCES RM_CUSTODY
(
PHYSICAL_ITEM_ID,
CUSTODY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_RMII_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_R_RMIICOT_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_R_RMIICOT_FK FOREIGN KEY
(
CONTENT_TYPE
)
REFERENCES R_RMII_CONTENT_TYPE
(
RMII_CONTENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_SM_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_SM_FK FOREIGN KEY
(
LITH_SAMPLE_ID
)
REFERENCES SAMPLE
(
SAMPLE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_SSBG_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_SSBG_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
BIN_GRID_ID,
BIN_GRID_SOURCE
)
REFERENCES SEIS_BIN_GRID
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
BIN_GRID_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_SLIC_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_SLIC_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_LICENSE_ID
)
REFERENCES SEIS_LICENSE
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_SSPA_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_SSPA_FK FOREIGN KEY
(
SEIS_PATCH_ID
)
REFERENCES SEIS_PATCH
(
PATCH_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_SS_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_SSVV_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_SSVV_FK FOREIGN KEY
(
VELOCITY_VOLUME_ID
)
REFERENCES SEIS_VELOCITY_VOLUME
(
VELOCITY_VOLUME_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_SFPL_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_SFPL_FK FOREIGN KEY
(
PLATFORM_SF_SUBTYPE,
PLATFORM_ID
)
REFERENCES SF_PLATFORM
(
SF_SUBTYPE,
PLATFORM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_SF_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_SF_FK FOREIGN KEY
(
SUPPORT_FACILITY_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_SRCD_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_SPD_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_STCOL_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_STCOL_FK FOREIGN KEY
(
STRAT_COLUMN_ID,
STRAT_COLUMN_SOURCE
)
REFERENCES STRAT_COLUMN
(
STRAT_COLUMN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_STFS_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_STFS_FK FOREIGN KEY
(
STRAT_FIELD_STATION_ID,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
)
REFERENCES STRAT_FIELD_SECTION
(
FIELD_STATION_ID,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_STFST_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_STFST_FK FOREIGN KEY
(
STRAT_FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_STU_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_STWS_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_STWS_FK FOREIGN KEY
(
UWI,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
)
REFERENCES STRAT_WELL_SECTION
(
UWI,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_SUB_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_W_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_WAC_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_WAC_FK FOREIGN KEY
(
UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_WCR_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_WCR_FK FOREIGN KEY
(
WC_UWI,
WC_SOURCE,
WC_CORE_ID
)
REFERENCES WELL_CORE
(
UWI,
SOURCE,
CORE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_WDS_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_WDS_FK FOREIGN KEY
(
WDS_UWI,
WDS_SURVEY_ID,
WDS_SOURCE
)
REFERENCES WELL_DIR_SRVY
(
UWI,
SURVEY_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_WDR_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_WDR_FK FOREIGN KEY
(
UWI,
DRILL_REPORT_ID
)
REFERENCES WELL_DRILL_REPORT
(
UWI,
REPORT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_WLIC_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_WLIC_FK FOREIGN KEY
(
UWI,
WELL_LICENSE_SOURCE,
WELL_LICENSE_ID
)
REFERENCES WELL_LICENSE
(
UWI,
SOURCE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_WL_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_WL_FK FOREIGN KEY
(
UWI,
WELL_LOG_ID,
WELL_LOG_SOURCE
)
REFERENCES WELL_LOG
(
UWI,
WELL_LOG_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_WLC_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_WLC_FK FOREIGN KEY
(
UWI,
WELL_LOG_CURVE_ID
)
REFERENCES WELL_LOG_CURVE
(
UWI,
CURVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_WLDC_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_WLDC_FK FOREIGN KEY
(
UWI,
WELL_LOG_CURVE_ID,
WL_DGTZ_CURVE_ID
)
REFERENCES WELL_LOG_DGTZ_CURVE
(
UWI,
CURVE_ID,
DIGITAL_CURVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_WTF_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_WTF_FK FOREIGN KEY
(
UWI,
WTF_SOURCE,
WTF_TEST_TYPE,
WTF_RUN_NUM,
WTF_TEST_NUM,
WTF_PERIOD_TYPE,
WTF_PERIOD_OBS_NO,
WTF_FLUID_TYPE
)
REFERENCES WELL_TEST_FLOW
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
PERIOD_TYPE,
PERIOD_OBS_NO,
FLUID_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_WTPSR_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_WTPSR_FK FOREIGN KEY
(
UWI,
WTP_SOURCE,
WTP_TEST_TYPE,
WTP_RUN_NUM,
WTP_TEST_NUM,
WTP_PERIOD_TYPE,
WTP_PERIOD_OBS_NO
)
REFERENCES WELL_TEST_PRESSURE
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
PERIOD_TYPE,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIC_WO_FK'
ALTER TABLE RM_INFO_ITEM_CONTENT ADD CONSTRAINT RMIIC_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIID_RMII_FK'
ALTER TABLE RM_INFO_ITEM_DESC ADD CONSTRAINT RMIID_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIID_R_RMIIDT_FK'
ALTER TABLE RM_INFO_ITEM_DESC ADD CONSTRAINT RMIID_R_RMIIDT_FK FOREIGN KEY
(
DESCRIPTION_TYPE
)
REFERENCES R_RMII_DESC_TYPE
(
DESCRIPTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIID_R_RMC_FK'
ALTER TABLE RM_INFO_ITEM_DESC ADD CONSTRAINT RMIID_R_RMC_FK FOREIGN KEY
(
METADATA_TYPE,
METADATA_CODE
)
REFERENCES R_RMII_METADATA_CODE
(
METADATA_TYPE,
METADATA_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIID_R_RMDT_FK'
ALTER TABLE RM_INFO_ITEM_DESC ADD CONSTRAINT RMIID_R_RMDT_FK FOREIGN KEY
(
METADATA_TYPE
)
REFERENCES R_RMII_METADATA_TYPE
(
METADATA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIGP_RMII_FK2'
ALTER TABLE RM_INFO_ITEM_GROUP ADD CONSTRAINT RMIIGP_RMII_FK2 FOREIGN KEY
(
GROUP_INFO_ITEM_SUBTYPE,
GROUP_INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIGP_RMII_FK'
ALTER TABLE RM_INFO_ITEM_GROUP ADD CONSTRAINT RMIIGP_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIGP_R_RMGT_FK'
ALTER TABLE RM_INFO_ITEM_GROUP ADD CONSTRAINT RMIIGP_R_RMGT_FK FOREIGN KEY
(
GROUP_TYPE
)
REFERENCES R_RMII_GROUP_TYPE
(
GROUP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIM_BA_FK'
ALTER TABLE RM_INFO_ITEM_MAINT ADD CONSTRAINT RMIIM_BA_FK FOREIGN KEY
(
MAINT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIM_RMII_FK'
ALTER TABLE RM_INFO_ITEM_MAINT ADD CONSTRAINT RMIIM_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIM_R_PT3_FK'
ALTER TABLE RM_INFO_ITEM_MAINT ADD CONSTRAINT RMIIM_R_PT3_FK FOREIGN KEY
(
MAINT_PERIOD_TYPE
)
REFERENCES R_PERIOD_TYPE
(
PERIOD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIO_BA_FK'
ALTER TABLE RM_INFO_ITEM_ORIGIN ADD CONSTRAINT RMIIO_BA_FK FOREIGN KEY
(
PROCESSOR
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIO_RMII_FK'
ALTER TABLE RM_INFO_ITEM_ORIGIN ADD CONSTRAINT RMIIO_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIO_RMII_FK2'
ALTER TABLE RM_INFO_ITEM_ORIGIN ADD CONSTRAINT RMIIO_RMII_FK2 FOREIGN KEY
(
PARENT_INFO_ITEM_SUBTYPE,
PARENT_INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIO_R_IP_FK'
ALTER TABLE RM_INFO_ITEM_ORIGIN ADD CONSTRAINT RMIIO_R_IP_FK FOREIGN KEY
(
INFORMATION_PROCESS
)
REFERENCES R_INFORMATION_PROCESS
(
INFORMATION_PROCESS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIST_RMII_FK'
ALTER TABLE RM_INFO_ITEM_STATUS ADD CONSTRAINT RMIIST_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMIIST_R_RMIIS_FK'
ALTER TABLE RM_INFO_ITEM_STATUS ADD CONSTRAINT RMIIST_R_RMIIS_FK FOREIGN KEY
(
STATUS_TYPE,
STATUS
)
REFERENCES R_RMII_STATUS
(
STATUS_TYPE,
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMK_RMII_FK'
ALTER TABLE RM_KEYWORD ADD CONSTRAINT RMK_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMK_RMTW_FK'
ALTER TABLE RM_KEYWORD ADD CONSTRAINT RMK_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMLS_RMII_FK'
ALTER TABLE RM_LITH_SAMPLE ADD CONSTRAINT RMLS_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMM_RMII_FK'
ALTER TABLE RM_MAP ADD CONSTRAINT RMM_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPI_RMDS_FK'
ALTER TABLE RM_PHYSICAL_ITEM ADD CONSTRAINT RMPI_RMDS_FK FOREIGN KEY
(
STORE_ID
)
REFERENCES RM_DATA_STORE
(
STORE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPI_R_CFMT_FK'
ALTER TABLE RM_PHYSICAL_ITEM ADD CONSTRAINT RMPI_R_CFMT_FK FOREIGN KEY
(
COLOR_FORMAT
)
REFERENCES R_COLOR_FORMAT
(
COLOR_FORMAT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPI_R_DF_FK'
ALTER TABLE RM_PHYSICAL_ITEM ADD CONSTRAINT RMPI_R_DF_FK FOREIGN KEY
(
DIGITAL_FORMAT
)
REFERENCES R_DIGITAL_FORMAT
(
DIGITAL_FORMAT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPI_R_IC_FK'
ALTER TABLE RM_PHYSICAL_ITEM ADD CONSTRAINT RMPI_R_IC_FK FOREIGN KEY
(
ITEM_CATEGORY
)
REFERENCES R_ITEM_CATEGORY
(
ITEM_CATEGORY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPI_R_ISC1_FK'
ALTER TABLE RM_PHYSICAL_ITEM ADD CONSTRAINT RMPI_R_ISC1_FK FOREIGN KEY
(
ITEM_CATEGORY,
ITEM_SUB_CATEGORY
)
REFERENCES R_ITEM_SUB_CATEGORY
(
ITEM_CATEGORY,
ITEM_SUB_CATEGORY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPI_R_LANG_FK'
ALTER TABLE RM_PHYSICAL_ITEM ADD CONSTRAINT RMPI_R_LANG_FK FOREIGN KEY
(
LANGUAGE
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPI_R_MT2_FK'
ALTER TABLE RM_PHYSICAL_ITEM ADD CONSTRAINT RMPI_R_MT2_FK FOREIGN KEY
(
MEDIA_TYPE
)
REFERENCES R_MEDIA_TYPE
(
MEDIA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPI_R_PIS_FK'
ALTER TABLE RM_PHYSICAL_ITEM ADD CONSTRAINT RMPI_R_PIS_FK FOREIGN KEY
(
PHYSICAL_ITEM_STATUS
)
REFERENCES R_PHYSICAL_ITEM_STATUS
(
PHYSICAL_ITEM_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPI_R_RP1_FK'
ALTER TABLE RM_PHYSICAL_ITEM ADD CONSTRAINT RMPI_R_RP1_FK FOREIGN KEY
(
RETENTION_PERIOD
)
REFERENCES R_RETENTION_PERIOD
(
RETENTION_PERIOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPIC_RMPI_FK'
ALTER TABLE RM_PHYS_ITEM_CONDITION ADD CONSTRAINT RMPIC_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPIC_RMPIO_FK'
ALTER TABLE RM_PHYS_ITEM_CONDITION ADD CONSTRAINT RMPIC_RMPIO_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID,
ORIGIN_SEQ_NO
)
REFERENCES RM_PHYS_ITEM_ORIGIN
(
PHYSICAL_ITEM_ID,
ORIGIN_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPIC_R_COT2_FK'
ALTER TABLE RM_PHYS_ITEM_CONDITION ADD CONSTRAINT RMPIC_R_COT2_FK FOREIGN KEY
(
CONDITION_TYPE
)
REFERENCES R_CONDITION_TYPE
(
CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPIC_R_CM1_FK'
ALTER TABLE RM_PHYS_ITEM_CONDITION ADD CONSTRAINT RMPIC_R_CM1_FK FOREIGN KEY
(
CORRECTION_METHOD
)
REFERENCES R_CORRECTION_METHOD
(
CORRECTION_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPIG_RMPI_FK'
ALTER TABLE RM_PHYS_ITEM_GROUP ADD CONSTRAINT RMPIG_RMPI_FK FOREIGN KEY
(
GROUP_PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPIG_RMPI_FK2'
ALTER TABLE RM_PHYS_ITEM_GROUP ADD CONSTRAINT RMPIG_RMPI_FK2 FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPIG_R_PIGT_FK'
ALTER TABLE RM_PHYS_ITEM_GROUP ADD CONSTRAINT RMPIG_R_PIGT_FK FOREIGN KEY
(
GROUP_TYPE
)
REFERENCES R_PHYS_ITEM_GROUP_TYPE
(
GROUP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPIM_BA_FK'
ALTER TABLE RM_PHYS_ITEM_MAINT ADD CONSTRAINT RMPIM_BA_FK FOREIGN KEY
(
MAINT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPIM_RMPI_FK'
ALTER TABLE RM_PHYS_ITEM_MAINT ADD CONSTRAINT RMPIM_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPIM_R_MP_FK'
ALTER TABLE RM_PHYS_ITEM_MAINT ADD CONSTRAINT RMPIM_R_MP_FK FOREIGN KEY
(
MAINTAIN_PROCESS
)
REFERENCES R_MAINT_PROCESS
(
MAINTAIN_PROCESS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPIO_BA_FK'
ALTER TABLE RM_PHYS_ITEM_ORIGIN ADD CONSTRAINT RMPIO_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPIO_RMPI_FK2'
ALTER TABLE RM_PHYS_ITEM_ORIGIN ADD CONSTRAINT RMPIO_RMPI_FK2 FOREIGN KEY
(
PARENT_PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPIO_RMPI_FK'
ALTER TABLE RM_PHYS_ITEM_ORIGIN ADD CONSTRAINT RMPIO_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPIO_R_PP_FK'
ALTER TABLE RM_PHYS_ITEM_ORIGIN ADD CONSTRAINT RMPIO_R_PP_FK FOREIGN KEY
(
PHYSICAL_PROCESS
)
REFERENCES R_PHYSICAL_PROCESS
(
PHYSICAL_PROCESS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPIS_RMDS_FK'
ALTER TABLE RM_PHYS_ITEM_STORE ADD CONSTRAINT RMPIS_RMDS_FK FOREIGN KEY
(
STORE_ID
)
REFERENCES RM_DATA_STORE
(
STORE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPIS_RMPI_FK'
ALTER TABLE RM_PHYS_ITEM_STORE ADD CONSTRAINT RMPIS_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMPIS_R_PIS_FK'
ALTER TABLE RM_PHYS_ITEM_STORE ADD CONSTRAINT RMPIS_R_PIS_FK FOREIGN KEY
(
PHYSICAL_ITEM_STATUS
)
REFERENCES R_PHYSICAL_ITEM_STATUS
(
PHYSICAL_ITEM_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMST_RMII_FK'
ALTER TABLE RM_SEIS_TRACE ADD CONSTRAINT RMST_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMST_R_SRNT_FK'
ALTER TABLE RM_SEIS_TRACE ADD CONSTRAINT RMST_R_SRNT_FK FOREIGN KEY
(
REPORTED_REF_NUM_TYPE
)
REFERENCES R_SEIS_REF_NUM_TYPE
(
REPORTED_REF_NUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMST_R_SST_FK'
ALTER TABLE RM_SEIS_TRACE ADD CONSTRAINT RMST_R_SST_FK FOREIGN KEY
(
SAMPLE_TYPE
)
REFERENCES R_SEIS_SAMPLE_TYPE
(
SAMPLE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMST_R_TZ_FK'
ALTER TABLE RM_SEIS_TRACE ADD CONSTRAINT RMST_R_TZ_FK FOREIGN KEY
(
FIRST_SAMPLE_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMSD_RMII_FK'
ALTER TABLE RM_SPATIAL_DATASET ADD CONSTRAINT RMSD_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMT_BA_FK'
ALTER TABLE RM_THESAURUS ADD CONSTRAINT RMT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMT_SRCD_FK'
ALTER TABLE RM_THESAURUS ADD CONSTRAINT RMT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMTWG_BA_FK'
ALTER TABLE RM_THESAURUS_GLOSSARY ADD CONSTRAINT RMTWG_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMTWG_RMTW_FK'
ALTER TABLE RM_THESAURUS_GLOSSARY ADD CONSTRAINT RMTWG_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMTWG_SRCD_FK'
ALTER TABLE RM_THESAURUS_GLOSSARY ADD CONSTRAINT RMTWG_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMTW_RMT_FK'
ALTER TABLE RM_THESAURUS_WORD ADD CONSTRAINT RMTW_RMT_FK FOREIGN KEY
(
THESAURUS_ID
)
REFERENCES RM_THESAURUS
(
THESAURUS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMTW_SRCD_FK'
ALTER TABLE RM_THESAURUS_WORD ADD CONSTRAINT RMTW_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMTWX_RMTW_FK2'
ALTER TABLE RM_THESAURUS_WORD_XREF ADD CONSTRAINT RMTWX_RMTW_FK2 FOREIGN KEY
(
THESAURUS_ID2,
THESAURUS_WORD_ID2
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMTWX_RMTW_FK'
ALTER TABLE RM_THESAURUS_WORD_XREF ADD CONSTRAINT RMTWX_RMTW_FK FOREIGN KEY
(
THESAURUS_ID1,
THESAURUS_WORD_ID1
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMTWX_R_RTX_FK'
ALTER TABLE RM_THESAURUS_WORD_XREF ADD CONSTRAINT RMTWX_R_RTX_FK FOREIGN KEY
(
THESAURUS_XREF_TYPE
)
REFERENCES R_RM_THESAURUS_XREF
(
THESAURUS_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMTWX_SRCD_FK'
ALTER TABLE RM_THESAURUS_WORD_XREF ADD CONSTRAINT RMTWX_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMTH_RMST_FK'
ALTER TABLE RM_TRACE_HEADER ADD CONSTRAINT RMTH_RMST_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_SEIS_TRACE
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMTH_R_THF_FK'
ALTER TABLE RM_TRACE_HEADER ADD CONSTRAINT RMTH_R_THF_FK FOREIGN KEY
(
HEADER_FORMAT
)
REFERENCES R_TRACE_HEADER_FORMAT
(
HEADER_FORMAT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMTH_R_THW_FK'
ALTER TABLE RM_TRACE_HEADER ADD CONSTRAINT RMTH_R_THW_FK FOREIGN KEY
(
HEADER_WORD
)
REFERENCES R_TRACE_HEADER_WORD
(
HEADER_WORD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT RMWL_RMII_FK'
ALTER TABLE RM_WELL_LOG ADD CONSTRAINT RMWL_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_AP_PPS_FK'
ALTER TABLE R_ANALYSIS_PROPERTY ADD CONSTRAINT R_AP_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_ANLCP_PPS_FK'
ALTER TABLE R_ANL_CHRO_PROPERTY ADD CONSTRAINT R_ANLCP_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_ANLDT_PPS_FK'
ALTER TABLE R_ANL_DETAIL_TYPE ADD CONSTRAINT R_ANLDT_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_ANLEVT_PPS_FK'
ALTER TABLE R_ANL_ELEMENT_VALUE_TYPE ADD CONSTRAINT R_ANLEVT_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_ANLGCV_PPS_FK'
ALTER TABLE R_ANL_GAS_CHRO_VALUE ADD CONSTRAINT R_ANLGCV_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_ANLGP_PPS_FK'
ALTER TABLE R_ANL_GAS_PROPERTY ADD CONSTRAINT R_ANLGP_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_ANLGPC_R_ANLGP_FK'
ALTER TABLE R_ANL_GAS_PROPERTY_CODE ADD CONSTRAINT R_ANLGPC_R_ANLGP_FK FOREIGN KEY
(
ANALYSIS_PROPERTY
)
REFERENCES R_ANL_GAS_PROPERTY
(
ANALYSIS_PROPERTY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_ANLOPC_R_AP_FK'
ALTER TABLE R_ANL_OIL_PROPERTY_CODE ADD CONSTRAINT R_ANLOPC_R_AP_FK FOREIGN KEY
(
ANALYSIS_PROPERTY
)
REFERENCES R_ANALYSIS_PROPERTY
(
ANALYSIS_PROPERTY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_ANLPT_PPS_FK'
ALTER TABLE R_ANL_PARAMETER_TYPE ADD CONSTRAINT R_ANLPT_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_ANLVMV_R_ANLVM_FK'
ALTER TABLE R_ANL_VALID_MEAS_VALUE ADD CONSTRAINT R_ANLVMV_R_ANLVM_FK FOREIGN KEY
(
MEASUREMENT_TYPE
)
REFERENCES R_ANL_VALID_MEASUREMENT
(
MEASUREMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_ANLWP_PPS_FK'
ALTER TABLE R_ANL_WATER_PROPERTY ADD CONSTRAINT R_ANLWP_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_ADE_PPS_FK'
ALTER TABLE R_APPLIC_DESC ADD CONSTRAINT R_ADE_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_ADE_R_APPT_FK'
ALTER TABLE R_APPLIC_DESC ADD CONSTRAINT R_ADE_R_APPT_FK FOREIGN KEY
(
APPLICATION_TYPE
)
REFERENCES R_APPLIC_TYPE
(
APPLICATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_ADC_R_ADT1_FK'
ALTER TABLE R_AREA_DESC_CODE ADD CONSTRAINT R_ADC_R_ADT1_FK FOREIGN KEY
(
AREA_DESC_TYPE
)
REFERENCES R_AREA_DESC_TYPE
(
AREA_DESC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_ADT1_PPS_FK'
ALTER TABLE R_AREA_DESC_TYPE ADD CONSTRAINT R_ADT1_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_BADC_R_BADT_FK'
ALTER TABLE R_BA_DESC_CODE ADD CONSTRAINT R_BADC_R_BADT_FK FOREIGN KEY
(
BA_DESC_TYPE
)
REFERENCES R_BA_DESC_TYPE
(
BA_DESC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_BADC_R_INSDT_FK'
ALTER TABLE R_BA_DESC_CODE ADD CONSTRAINT R_BADC_R_INSDT_FK FOREIGN KEY
(
BA_DESC_TYPE
)
REFERENCES R_INST_DETAIL_TYPE
(
INSTRUMENT_DETAIL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_BADT_PPS_FK'
ALTER TABLE R_BA_DESC_TYPE ADD CONSTRAINT R_BADT_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_CAS_PPS_FK'
ALTER TABLE R_CAT_ADDITIVE_SPEC ADD CONSTRAINT R_CAS_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_CES_PPS_FK'
ALTER TABLE R_CAT_EQUIP_SPEC ADD CONSTRAINT R_CES_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_CSC_R_CES_FK'
ALTER TABLE R_CAT_EQUIP_SPEC_CODE ADD CONSTRAINT R_CSC_R_CES_FK FOREIGN KEY
(
SPEC_TYPE
)
REFERENCES R_CAT_EQUIP_SPEC
(
SPEC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_CDP_PPS_FK'
ALTER TABLE R_CLASS_DESC_PROPERTY ADD CONSTRAINT R_CDP_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_COL_R_COLP_FK'
ALTER TABLE R_COLOR ADD CONSTRAINT R_COL_R_COLP_FK FOREIGN KEY
(
COLOR_PALETTE
)
REFERENCES R_COLOR_PALETTE
(
COLOR_PALETTE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_COLE_R_COL_FK'
ALTER TABLE R_COLOR_EQUIV ADD CONSTRAINT R_COLE_R_COL_FK FOREIGN KEY
(
COLOR_1
)
REFERENCES R_COLOR
(
COLOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_COLE_R_COL_FK2'
ALTER TABLE R_COLOR_EQUIV ADD CONSTRAINT R_COLE_R_COL_FK2 FOREIGN KEY
(
COLOR_2
)
REFERENCES R_COLOR
(
COLOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_COLP_RMPI_FK'
ALTER TABLE R_COLOR_PALETTE ADD CONSTRAINT R_COLP_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_CS_R_CSTT_FK'
ALTER TABLE R_COMPLETION_STATUS ADD CONSTRAINT R_CS_R_CSTT_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_COMPLETION_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_CONSC_R_CONST_FK'
ALTER TABLE R_CONSENT_CONDITION ADD CONSTRAINT R_CONSC_R_CONST_FK FOREIGN KEY
(
CONSENT_TYPE
)
REFERENCES R_CONSENT_TYPE
(
CONSENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_CSTP_SRCD_FK'
ALTER TABLE R_CS_TRANSFORM_PARM ADD CONSTRAINT R_CSTP_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_CTT_SRCD_FK'
ALTER TABLE R_CS_TRANSFORM_TYPE ADD CONSTRAINT R_CTT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_DCC_R_DCT1_FK'
ALTER TABLE R_DECLINE_COND_CODE ADD CONSTRAINT R_DCC_R_DCT1_FK FOREIGN KEY
(
CONDITION_TYPE
)
REFERENCES R_DECLINE_COND_TYPE
(
CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_DBDC_R_DBD_FK'
ALTER TABLE R_DRILL_BIT_DETAIL_CODE ADD CONSTRAINT R_DBDC_R_DBD_FK FOREIGN KEY
(
BIT_DETAIL_TYPE
)
REFERENCES R_DRILL_BIT_DETAIL_TYPE
(
BIT_DETAIL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_DBD_PPS_FK'
ALTER TABLE R_DRILL_BIT_DETAIL_TYPE ADD CONSTRAINT R_DBD_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_DSTC_R_DSTAT_FK'
ALTER TABLE R_DRILL_STAT_CODE ADD CONSTRAINT R_DSTC_R_DSTAT_FK FOREIGN KEY
(
STATISTIC_TYPE
)
REFERENCES R_DRILL_STAT_TYPE
(
STATISTIC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_DSTAT_PPS_FK'
ALTER TABLE R_DRILL_STAT_TYPE ADD CONSTRAINT R_DSTAT_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_EST_PPS_FK'
ALTER TABLE R_ECONOMIC_SCHEDULE ADD CONSTRAINT R_EST_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_EQMS_R_EQST_FK'
ALTER TABLE R_EQUIP_MAINT_STATUS ADD CONSTRAINT R_EQMS_R_EQST_FK FOREIGN KEY
(
MAINTAIN_STATUS_TYPE
)
REFERENCES R_EQUIP_MAINT_STAT_TYPE
(
MAINTAIN_STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_ESP_PPS_FK'
ALTER TABLE R_EQUIP_SPEC ADD CONSTRAINT R_ESP_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_ESRT_PPS_FK'
ALTER TABLE R_EQUIP_SPEC_REF_TYPE ADD CONSTRAINT R_ESRT_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_ESTAT_R_ESTA_FK'
ALTER TABLE R_EQUIP_STATUS ADD CONSTRAINT R_ESTAT_R_ESTA_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_EQUIP_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_EUST_PPS_FK'
ALTER TABLE R_EQUIP_USE_STAT_TYPE ADD CONSTRAINT R_EUST_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_FSC_R_FST1_FK'
ALTER TABLE R_FACILITY_SPEC_CODE ADD CONSTRAINT R_FSC_R_FST1_FK FOREIGN KEY
(
SPEC_TYPE
)
REFERENCES R_FACILITY_SPEC_TYPE
(
SPEC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_FST1_PPS_FK'
ALTER TABLE R_FACILITY_SPEC_TYPE ADD CONSTRAINT R_FST1_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_FS_R_FAST_FK'
ALTER TABLE R_FACILITY_STATUS ADD CONSTRAINT R_FS_R_FAST_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_FAC_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_FLC_PPS_FK'
ALTER TABLE R_FAC_LIC_COND ADD CONSTRAINT R_FLC_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_FLCC_R_FLC_FK'
ALTER TABLE R_FAC_LIC_COND_CODE ADD CONSTRAINT R_FLCC_R_FLC_FK FOREIGN KEY
(
CONDITION_TYPE
)
REFERENCES R_FAC_LIC_COND
(
CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_FMT_R_FACT_FK'
ALTER TABLE R_FAC_MAINTAIN_TYPE ADD CONSTRAINT R_FMT_R_FACT_FK FOREIGN KEY
(
FACILITY_TYPE
)
REFERENCES R_FACILITY_TYPE
(
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_FMS_R_FMST_FK'
ALTER TABLE R_FAC_MAINT_STATUS ADD CONSTRAINT R_FMS_R_FMST_FK FOREIGN KEY
(
MAINTAIN_STATUS_TYPE
)
REFERENCES R_FAC_MAINT_STATUS_TYPE
(
MAINTAIN_STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_FT2_SUB_FK'
ALTER TABLE R_FLUID_TYPE ADD CONSTRAINT R_FT2_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_FDC_R_FDT_FK'
ALTER TABLE R_FOS_DESC_CODE ADD CONSTRAINT R_FDC_R_FDT_FK FOREIGN KEY
(
DESCRIPTION_TYPE
)
REFERENCES R_FOS_DESC_TYPE
(
DESCRIPTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_FDT_PPS_FK'
ALTER TABLE R_FOS_DESC_TYPE ADD CONSTRAINT R_FDT_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_ICC_R_ICT1_FK'
ALTER TABLE R_INCIDENT_CAUSE_CODE ADD CONSTRAINT R_ICC_R_ICT1_FK FOREIGN KEY
(
CAUSE_TYPE
)
REFERENCES R_INCIDENT_CAUSE_TYPE
(
CAUSE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_INSDTC_R_INSDT_FK'
ALTER TABLE R_INST_DETAIL_CODE ADD CONSTRAINT R_INSDTC_R_INSDT_FK FOREIGN KEY
(
INSTRUMENT_DETAIL_TYPE
)
REFERENCES R_INST_DETAIL_TYPE
(
INSTRUMENT_DETAIL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_INSDT_PPS_FK'
ALTER TABLE R_INST_DETAIL_TYPE ADD CONSTRAINT R_INSDT_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_IT_PPS_FK'
ALTER TABLE R_INTERP_TYPE ADD CONSTRAINT R_IT_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_ISS_R_ISST_FK'
ALTER TABLE R_INT_SET_STATUS ADD CONSTRAINT R_ISS_R_ISST_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_INT_SET_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_IC_R_RP1_FK'
ALTER TABLE R_ITEM_CATEGORY ADD CONSTRAINT R_IC_R_RP1_FK FOREIGN KEY
(
RETENTION_PERIOD
)
REFERENCES R_RETENTION_PERIOD
(
RETENTION_PERIOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_ISC1_R_IC_FK'
ALTER TABLE R_ITEM_SUB_CATEGORY ADD CONSTRAINT R_ISC1_R_IC_FK FOREIGN KEY
(
ITEM_CATEGORY
)
REFERENCES R_ITEM_CATEGORY
(
ITEM_CATEGORY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_ISC1_R_RP1_FK'
ALTER TABLE R_ITEM_SUB_CATEGORY ADD CONSTRAINT R_ISC1_R_RP1_FK FOREIGN KEY
(
RETENTION_PERIOD
)
REFERENCES R_RETENTION_PERIOD
(
RETENTION_PERIOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_LRS1_R_LRST_FK'
ALTER TABLE R_LAND_RIGHT_STATUS ADD CONSTRAINT R_LRS1_R_LRST_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_LAND_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_LIST_R_LISTT_FK'
ALTER TABLE R_LICENSE_STATUS ADD CONSTRAINT R_LIST_R_LISTT_FK FOREIGN KEY
(
LICENSE_STATUS_TYPE
)
REFERENCES R_LIC_STATUS_TYPE
(
LICENSE_STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_LIX_PPS_FK'
ALTER TABLE R_LOG_INDEX_TYPE ADD CONSTRAINT R_LIX_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_MDC_PPS_FK'
ALTER TABLE R_MISC_DATA_CODE ADD CONSTRAINT R_MDC_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_MDT_PPS_FK'
ALTER TABLE R_MISC_DATA_TYPE ADD CONSTRAINT R_MDT_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_MPC_R_MPT_FK'
ALTER TABLE R_MUD_PROPERTY_CODE ADD CONSTRAINT R_MPC_R_MPT_FK FOREIGN KEY
(
MUD_PROPERTY
)
REFERENCES R_MUD_PROPERTY_TYPE
(
MUD_PROPERTY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_MPR_PPS_FK'
ALTER TABLE R_MUD_PROPERTY_REF ADD CONSTRAINT R_MPR_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_MPT_PPS_FK'
ALTER TABLE R_MUD_PROPERTY_TYPE ADD CONSTRAINT R_MPT_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_PS_R_PST2_FK'
ALTER TABLE R_PDEN_STATUS ADD CONSTRAINT R_PS_R_PST2_FK FOREIGN KEY
(
PDEN_STATUS_TYPE
)
REFERENCES R_PDEN_STATUS_TYPE
(
PDEN_STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_PS1_BA_FK'
ALTER TABLE R_PLOT_SYMBOL ADD CONSTRAINT R_PS1_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_PS1_PSWA_FK'
ALTER TABLE R_PLOT_SYMBOL ADD CONSTRAINT R_PS1_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_PMRT_PPS_FK'
ALTER TABLE R_PPDM_MAP_RULE_TYPE ADD CONSTRAINT R_PMRT_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_PMC_R_PMT1_FK'
ALTER TABLE R_PPDM_METRIC_CODE ADD CONSTRAINT R_PMC_R_PMT1_FK FOREIGN KEY
(
METRIC_TYPE
)
REFERENCES R_PPDM_METRIC_TYPE
(
METRIC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_PMT1_PPS_FK'
ALTER TABLE R_PPDM_METRIC_TYPE ADD CONSTRAINT R_PMT1_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_PRDB_BA_FK'
ALTER TABLE R_PPDM_RDBMS ADD CONSTRAINT R_PRDB_BA_FK FOREIGN KEY
(
VENDOR_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_PRDT_PPS_FK'
ALTER TABLE R_PPDM_RULE_DETAIL_TYPE ADD CONSTRAINT R_PRDT_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_PSS_R_PSST_FK'
ALTER TABLE R_PROD_STRING_STATUS ADD CONSTRAINT R_PSS_R_PSST_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_PROD_STRING_STAT_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_PSS_R_SG_FK'
ALTER TABLE R_PROD_STRING_STATUS ADD CONSTRAINT R_PSS_R_SG_FK FOREIGN KEY
(
STATUS_GROUP
)
REFERENCES R_STATUS_GROUP
(
STATUS_GROUP
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_PSFS_R_PSFST_FK'
ALTER TABLE R_PROD_STR_FM_STATUS ADD CONSTRAINT R_PSFS_R_PSFST_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_PROD_STR_FM_STAT_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_PSFS_R_SG_FK'
ALTER TABLE R_PROD_STR_FM_STATUS ADD CONSTRAINT R_PSFS_R_SG_FK FOREIGN KEY
(
STATUS_GROUP
)
REFERENCES R_STATUS_GROUP
(
STATUS_GROUP
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_PCO_R_PRT1_FK'
ALTER TABLE R_PROJECT_CONDITION ADD CONSTRAINT R_PCO_R_PRT1_FK FOREIGN KEY
(
PROJECT_TYPE
)
REFERENCES R_PROJECT_TYPE
(
PROJECT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_PSTA_R_PSTT_FK'
ALTER TABLE R_PROJECT_STATUS ADD CONSTRAINT R_PSTA_R_PSTT_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_PROJECT_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_PSTT_R_PRT1_FK'
ALTER TABLE R_PROJECT_STATUS_TYPE ADD CONSTRAINT R_PSTT_R_PRT1_FK FOREIGN KEY
(
PROJECT_TYPE
)
REFERENCES R_PROJECT_TYPE
(
PROJECT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_RMIIDT_PPS_FK'
ALTER TABLE R_RMII_DESC_TYPE ADD CONSTRAINT R_RMIIDT_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_RMC_R_RMDT_FK'
ALTER TABLE R_RMII_METADATA_CODE ADD CONSTRAINT R_RMC_R_RMDT_FK FOREIGN KEY
(
METADATA_TYPE
)
REFERENCES R_RMII_METADATA_TYPE
(
METADATA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_RMDT_PPS_FK'
ALTER TABLE R_RMII_METADATA_TYPE ADD CONSTRAINT R_RMDT_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_RMIIS_R_RMIIST_FK'
ALTER TABLE R_RMII_STATUS ADD CONSTRAINT R_RMIIS_R_RMIIST_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_RMII_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_SDC_R_SDT_FK'
ALTER TABLE R_SAMPLE_DESC_CODE ADD CONSTRAINT R_SDC_R_SDT_FK FOREIGN KEY
(
DESCRIPTION_TYPE
)
REFERENCES R_SAMPLE_DESC_TYPE
(
DESCRIPTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_SDT_PPS_FK'
ALTER TABLE R_SAMPLE_DESC_TYPE ADD CONSTRAINT R_SDT_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_SRVT_PPS_FK'
ALTER TABLE R_SAMPLE_REF_VALUE_TYPE ADD CONSTRAINT R_SRVT_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_SACT1_R_SACTC_FK'
ALTER TABLE R_SEIS_ACTIVITY_TYPE ADD CONSTRAINT R_SACT1_R_SACTC_FK FOREIGN KEY
(
SEIS_ACTIVITY_CLASS
)
REFERENCES R_SEIS_ACTIVITY_CLASS
(
SEIS_ACTIVITY_CLASS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_SLC_PPS_FK'
ALTER TABLE R_SEIS_LIC_COND ADD CONSTRAINT R_SLC_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_SLCC_R_SLC_FK'
ALTER TABLE R_SEIS_LIC_COND_CODE ADD CONSTRAINT R_SLCC_R_SLC_FK FOREIGN KEY
(
CONDITION_TYPE
)
REFERENCES R_SEIS_LIC_COND
(
CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_SPP_PPS_FK'
ALTER TABLE R_SEIS_PROC_PARM ADD CONSTRAINT R_SPP_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_SFDT1_PPS_FK'
ALTER TABLE R_SF_DESC_TYPE ADD CONSTRAINT R_SFDT1_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_SFDV_R_SFDT1_FK'
ALTER TABLE R_SF_DESC_VALUE ADD CONSTRAINT R_SFDV_R_SFDT1_FK FOREIGN KEY
(
DESC_TYPE
)
REFERENCES R_SF_DESC_TYPE
(
DESC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_SOR_BA_FK'
ALTER TABLE R_SOURCE_ORIGIN ADD CONSTRAINT R_SOR_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_SOR_PSWA_FK'
ALTER TABLE R_SOURCE_ORIGIN ADD CONSTRAINT R_SOR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_SOR_PROJ_FK'
ALTER TABLE R_SOURCE_ORIGIN ADD CONSTRAINT R_SOR_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_SOR_RMPI_FK'
ALTER TABLE R_SOURCE_ORIGIN ADD CONSTRAINT R_SOR_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_SOR_SRCD_FK'
ALTER TABLE R_SOURCE_ORIGIN ADD CONSTRAINT R_SOR_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_SDT2_PPS_FK'
ALTER TABLE R_STRAT_DESC_TYPE ADD CONSTRAINT R_SDT2_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_SUNT_R_STYPE_FK'
ALTER TABLE R_STRAT_UNIT_TYPE ADD CONSTRAINT R_SUNT_R_STYPE_FK FOREIGN KEY
(
STRAT_TYPE
)
REFERENCES R_STRAT_TYPE
(
STRAT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_SUBP_PPS_FK'
ALTER TABLE R_SUBSTANCE_PROPERTY ADD CONSTRAINT R_SUBP_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_SWAF_R_SWAFT_FK'
ALTER TABLE R_SW_APP_FUNCTION ADD CONSTRAINT R_SWAF_R_SWAFT_FK FOREIGN KEY
(
SW_APP_FUNCTION_TYPE
)
REFERENCES R_SW_APP_FUNCTION_TYPE
(
SW_APP_FUNCTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_TS_R_WTT_FK'
ALTER TABLE R_TEST_SUBTYPE ADD CONSTRAINT R_TS_R_WTT_FK FOREIGN KEY
(
TEST_TYPE
)
REFERENCES R_WELL_TEST_TYPE
(
WELL_TEST_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_APC_2_R_ANLWP_FK'
ALTER TABLE R_WATER_PROPERTY_CODE ADD CONSTRAINT R_APC_2_R_ANLWP_FK FOREIGN KEY
(
WATER_PROPERTY
)
REFERENCES R_ANL_WATER_PROPERTY
(
WATER_PROPERTY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_WACA_R_WACA_FK'
ALTER TABLE R_WELL_ACTIVITY_CAUSE ADD CONSTRAINT R_WACA_R_WACA_FK FOREIGN KEY
(
PARENT_CAUSE_TYPE
)
REFERENCES R_WELL_ACTIVITY_CAUSE
(
CAUSE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_WLC_PPS_FK'
ALTER TABLE R_WELL_LIC_COND ADD CONSTRAINT R_WLC_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_WLCC_R_WLC_FK'
ALTER TABLE R_WELL_LIC_COND_CODE ADD CONSTRAINT R_WLCC_R_WLC_FK FOREIGN KEY
(
CONDITION_TYPE
)
REFERENCES R_WELL_LIC_COND
(
CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_WSM_PPS_FK'
ALTER TABLE R_WELL_SERVICE_METRIC ADD CONSTRAINT R_WSM_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_WSMC_R_WSM_FK'
ALTER TABLE R_WELL_SERV_METRIC_CODE ADD CONSTRAINT R_WSMC_R_WSM_FK FOREIGN KEY
(
SERVICE_METRIC
)
REFERENCES R_WELL_SERVICE_METRIC
(
SERVICE_METRIC
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_WS_R_SG_FK'
ALTER TABLE R_WELL_STATUS ADD CONSTRAINT R_WS_R_SG_FK FOREIGN KEY
(
STATUS_GROUP
)
REFERENCES R_STATUS_GROUP
(
STATUS_GROUP
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_WS_R_WST_FK'
ALTER TABLE R_WELL_STATUS ADD CONSTRAINT R_WS_R_WST_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_WELL_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_WSQ_R_WST_FK'
ALTER TABLE R_WELL_STATUS_QUAL ADD CONSTRAINT R_WSQ_R_WST_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_WELL_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_WSQV_R_SG_FK'
ALTER TABLE R_WELL_STATUS_QUAL_VALUE ADD CONSTRAINT R_WSQV_R_SG_FK FOREIGN KEY
(
STATUS_GROUP
)
REFERENCES R_STATUS_GROUP
(
STATUS_GROUP
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_WSQV_R_WS_FK'
ALTER TABLE R_WELL_STATUS_QUAL_VALUE ADD CONSTRAINT R_WSQV_R_WS_FK FOREIGN KEY
(
STATUS_TYPE,
STATUS
)
REFERENCES R_WELL_STATUS
(
STATUS_TYPE,
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_WSQV_R_WSQ_FK'
ALTER TABLE R_WELL_STATUS_QUAL_VALUE ADD CONSTRAINT R_WSQV_R_WSQ_FK FOREIGN KEY
(
STATUS_TYPE,
STATUS_QUALIFIER
)
REFERENCES R_WELL_STATUS_QUAL
(
STATUS_TYPE,
STATUS_QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_WSPS_R_PS1_FK'
ALTER TABLE R_WELL_STATUS_SYMBOL ADD CONSTRAINT R_WSPS_R_PS1_FK FOREIGN KEY
(
PLOT_SYMBOL
)
REFERENCES R_PLOT_SYMBOL
(
PLOT_SYMBOL
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_WSPS_R_WS_FK'
ALTER TABLE R_WELL_STATUS_SYMBOL ADD CONSTRAINT R_WSPS_R_WS_FK FOREIGN KEY
(
STATUS_TYPE,
STATUS
)
REFERENCES R_WELL_STATUS
(
STATUS_TYPE,
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_WSPS_R_WSQV_FK'
ALTER TABLE R_WELL_STATUS_SYMBOL ADD CONSTRAINT R_WSPS_R_WSQV_FK FOREIGN KEY
(
STATUS_TYPE,
STATUS,
STATUS_QUALIFIER,
QUALIFIER_VALUE
)
REFERENCES R_WELL_STATUS_QUAL_VALUE
(
STATUS_TYPE,
STATUS,
STATUS_QUALIFIER,
STATUS_QUALIFIER_VALUE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_WSX_R_WS_FK'
ALTER TABLE R_WELL_STATUS_XREF ADD CONSTRAINT R_WSX_R_WS_FK FOREIGN KEY
(
STATUS_TYPE1,
STATUS1
)
REFERENCES R_WELL_STATUS
(
STATUS_TYPE,
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_WSX_R_WS_FK2'
ALTER TABLE R_WELL_STATUS_XREF ADD CONSTRAINT R_WSX_R_WS_FK2 FOREIGN KEY
(
STATUS_TYPE2,
STATUS2
)
REFERENCES R_WELL_STATUS
(
STATUS_TYPE,
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_WSX_R_WSQ_FK2'
ALTER TABLE R_WELL_STATUS_XREF ADD CONSTRAINT R_WSX_R_WSQ_FK2 FOREIGN KEY
(
STATUS_TYPE2,
STATUS_QUALIFIER2
)
REFERENCES R_WELL_STATUS_QUAL
(
STATUS_TYPE,
STATUS_QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_WSX_R_WSQ_FK'
ALTER TABLE R_WELL_STATUS_XREF ADD CONSTRAINT R_WSX_R_WSQ_FK FOREIGN KEY
(
STATUS_TYPE1,
STATUS_QUALIFIER1
)
REFERENCES R_WELL_STATUS_QUAL
(
STATUS_TYPE,
STATUS_QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_WSX_R_WSQV_FK2'
ALTER TABLE R_WELL_STATUS_XREF ADD CONSTRAINT R_WSX_R_WSQV_FK2 FOREIGN KEY
(
STATUS_TYPE2,
STATUS2,
STATUS_QUALIFIER2,
QUALIFIER_VALUE2
)
REFERENCES R_WELL_STATUS_QUAL_VALUE
(
STATUS_TYPE,
STATUS,
STATUS_QUALIFIER,
STATUS_QUALIFIER_VALUE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_WSX_R_WSQV_FK'
ALTER TABLE R_WELL_STATUS_XREF ADD CONSTRAINT R_WSX_R_WSQV_FK FOREIGN KEY
(
STATUS_TYPE1,
STATUS1,
STATUS_QUALIFIER1,
QUALIFIER_VALUE1
)
REFERENCES R_WELL_STATUS_QUAL_VALUE
(
STATUS_TYPE,
STATUS,
STATUS_QUALIFIER,
STATUS_QUALIFIER_VALUE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_WSX_R_WST_FK'
ALTER TABLE R_WELL_STATUS_XREF ADD CONSTRAINT R_WSX_R_WST_FK FOREIGN KEY
(
STATUS_TYPE1
)
REFERENCES R_WELL_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_WSX_R_WST_FK2'
ALTER TABLE R_WELL_STATUS_XREF ADD CONSTRAINT R_WSX_R_WST_FK2 FOREIGN KEY
(
STATUS_TYPE2
)
REFERENCES R_WELL_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_WZIV_PPS_FK'
ALTER TABLE R_WELL_ZONE_INT_VALUE ADD CONSTRAINT R_WZIV_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT R_WOC_R_WOT_FK'
ALTER TABLE R_WO_CONDITION ADD CONSTRAINT R_WOC_R_WOT_FK FOREIGN KEY
(
WORK_ORDER_TYPE
)
REFERENCES R_WO_TYPE
(
WORK_ORDER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SM_BA_FK'
ALTER TABLE SAMPLE ADD CONSTRAINT SM_BA_FK FOREIGN KEY
(
COLLECTED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SM_BA_FK2'
ALTER TABLE SAMPLE ADD CONSTRAINT SM_BA_FK2 FOREIGN KEY
(
COLLECTED_FOR_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SM_EQ_FK'
ALTER TABLE SAMPLE ADD CONSTRAINT SM_EQ_FK FOREIGN KEY
(
COLLECTED_EQUIP_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SM_EQ_FK2'
ALTER TABLE SAMPLE ADD CONSTRAINT SM_EQ_FK2 FOREIGN KEY
(
STORED_EQUIP_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SM_RMPI_FK'
ALTER TABLE SAMPLE ADD CONSTRAINT SM_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SM_R_Q_FK'
ALTER TABLE SAMPLE ADD CONSTRAINT SM_R_Q_FK FOREIGN KEY
(
SAMPLE_QUALITY
)
REFERENCES R_QUALITY
(
QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SM_R_SCT2_FK'
ALTER TABLE SAMPLE ADD CONSTRAINT SM_R_SCT2_FK FOREIGN KEY
(
COLLECTION_TYPE
)
REFERENCES R_SAMPLE_COLLECTION_TYPE
(
COLLECTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SM_R_SPH_FK'
ALTER TABLE SAMPLE ADD CONSTRAINT SM_R_SPH_FK FOREIGN KEY
(
STORED_PHASE_TYPE
)
REFERENCES R_SAMPLE_PHASE
(
PHASE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SM_R_SPH_FK2'
ALTER TABLE SAMPLE ADD CONSTRAINT SM_R_SPH_FK2 FOREIGN KEY
(
COLLECTION_PHASE_TYPE
)
REFERENCES R_SAMPLE_PHASE
(
PHASE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SM_R_SS_FK'
ALTER TABLE SAMPLE ADD CONSTRAINT SM_R_SS_FK FOREIGN KEY
(
SAMPLE_SHAPE_TYPE
)
REFERENCES R_SAMPLE_SHAPE
(
SAMPLE_SHAPE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SM_R_ST1_FK'
ALTER TABLE SAMPLE ADD CONSTRAINT SM_R_ST1_FK FOREIGN KEY
(
SAMPLE_TYPE
)
REFERENCES R_SAMPLE_TYPE
(
SAMPLE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SM_R_WDT_FK'
ALTER TABLE SAMPLE ADD CONSTRAINT SM_R_WDT_FK FOREIGN KEY
(
WELL_DATUM_TYPE
)
REFERENCES R_WELL_DATUM_TYPE
(
WELL_DATUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SM_R_WTT_FK'
ALTER TABLE SAMPLE ADD CONSTRAINT SM_R_WTT_FK FOREIGN KEY
(
COLLECTION_TEST_TYPE
)
REFERENCES R_WELL_TEST_TYPE
(
WELL_TEST_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SM_STU_FK'
ALTER TABLE SAMPLE ADD CONSTRAINT SM_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
BASE_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SM_STU_FK2'
ALTER TABLE SAMPLE ADD CONSTRAINT SM_STU_FK2 FOREIGN KEY
(
STRAT_NAME_SET_ID,
TOP_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMA_BA_FK'
ALTER TABLE SAMPLE_ALIAS ADD CONSTRAINT SMA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMA_PSWA_FK'
ALTER TABLE SAMPLE_ALIAS ADD CONSTRAINT SMA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMA_R_ART_FK'
ALTER TABLE SAMPLE_ALIAS ADD CONSTRAINT SMA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMA_R_ATY_FK'
ALTER TABLE SAMPLE_ALIAS ADD CONSTRAINT SMA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMA_R_LANG_FK'
ALTER TABLE SAMPLE_ALIAS ADD CONSTRAINT SMA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMA_SM_FK'
ALTER TABLE SAMPLE_ALIAS ADD CONSTRAINT SMA_SM_FK FOREIGN KEY
(
SAMPLE_ID
)
REFERENCES SAMPLE
(
SAMPLE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMA_SRCD_FK'
ALTER TABLE SAMPLE_ALIAS ADD CONSTRAINT SMA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_ANLR_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_APP_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_A_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_BAAU_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_BAE_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_BAO_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_BA_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_CA_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_CEQ_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_CLSL_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_CON_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_CO_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_COT_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_C_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_EZ_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_ENT_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_EQ_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_FAC_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_FLD_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_FIN_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_FOS_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_HI_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_INS_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_INT_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_LR_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_LS_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_LIL_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_NOTI_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_OB_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_PASU_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_PDE_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_PL_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_PSWA_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_PSYS_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_PT_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_PS_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_PS_FK FOREIGN KEY
(
PR_STR_UWI,
PR_STR_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_PROJ_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_RATE_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_RSCL_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_RSE_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_RMDSS_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_RMII_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_RMPI_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_RMTW_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_R_SACT_1_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_R_SACT_1_FK FOREIGN KEY
(
COMPONENT_TYPE
)
REFERENCES R_SAMPLE_COMP_TYPE
(
SAMPLE_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_SM_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_SM_FK FOREIGN KEY
(
SAMPLE_ID
)
REFERENCES SAMPLE
(
SAMPLE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_SS_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_SF_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_SPD_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_STFST_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_STU_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_SUB_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_W_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_WAC_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_WAC_FK FOREIGN KEY
(
WELL_ACTIVITY_UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_WCR_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_WCR_FK FOREIGN KEY
(
WELL_CORE_UWI,
WELL_CORE_SOURCE,
WELL_CORE_ID
)
REFERENCES WELL_CORE
(
UWI,
SOURCE,
CORE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_WSET_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMCPT_WO_FK'
ALTER TABLE SAMPLE_COMPONENT ADD CONSTRAINT SMCPT_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMDO_ANLCM_FK'
ALTER TABLE SAMPLE_DESC_OTHER ADD CONSTRAINT SMDO_ANLCM_FK FOREIGN KEY
(
CALCULATE_METHOD_ID
)
REFERENCES ANL_CALC_METHOD
(
CALCULATE_METHOD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMDO_R_SDC_FK'
ALTER TABLE SAMPLE_DESC_OTHER ADD CONSTRAINT SMDO_R_SDC_FK FOREIGN KEY
(
DESCRIPTION_TYPE,
DESCRIPTION_CODE
)
REFERENCES R_SAMPLE_DESC_CODE
(
DESCRIPTION_TYPE,
DESCRIPTION_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMDO_R_SDT_FK'
ALTER TABLE SAMPLE_DESC_OTHER ADD CONSTRAINT SMDO_R_SDT_FK FOREIGN KEY
(
DESCRIPTION_TYPE
)
REFERENCES R_SAMPLE_DESC_TYPE
(
DESCRIPTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMDO_R_SRVT_FK'
ALTER TABLE SAMPLE_DESC_OTHER ADD CONSTRAINT SMDO_R_SRVT_FK FOREIGN KEY
(
REFERENCE_VALUE_TYPE
)
REFERENCES R_SAMPLE_REF_VALUE_TYPE
(
REFERENCE_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMDO_SM_FK'
ALTER TABLE SAMPLE_DESC_OTHER ADD CONSTRAINT SMDO_SM_FK FOREIGN KEY
(
SAMPLE_ID
)
REFERENCES SAMPLE
(
SAMPLE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMLD_EZ_FK'
ALTER TABLE SAMPLE_LITH_DESC ADD CONSTRAINT SMLD_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMLD_R_L_FK'
ALTER TABLE SAMPLE_LITH_DESC ADD CONSTRAINT SMLD_R_L_FK FOREIGN KEY
(
LITHOLOGY
)
REFERENCES R_LITHOLOGY
(
LITHOLOGY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMLD_R_LC_FK'
ALTER TABLE SAMPLE_LITH_DESC ADD CONSTRAINT SMLD_R_LC_FK FOREIGN KEY
(
COLOR_TYPE
)
REFERENCES R_LITH_COLOR
(
COLOR
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMLD_R_LDE_FK'
ALTER TABLE SAMPLE_LITH_DESC ADD CONSTRAINT SMLD_R_LDE_FK FOREIGN KEY
(
DEPOSITIONAL_ENVIRONMENT
)
REFERENCES R_LITH_DEP_ENV
(
DEPOSITIONAL_ENVIRONMENT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMLD_R_LD1_FK'
ALTER TABLE SAMPLE_LITH_DESC ADD CONSTRAINT SMLD_R_LD1_FK FOREIGN KEY
(
DIAGENESIS_TYPE
)
REFERENCES R_LITH_DIAGENESIS
(
DIAGENESIS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMLD_R_LI_FK'
ALTER TABLE SAMPLE_LITH_DESC ADD CONSTRAINT SMLD_R_LI_FK FOREIGN KEY
(
COLOR_INTENSITY
)
REFERENCES R_LITH_INTENSITY
(
INTENSITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMLD_R_LOS1_FK'
ALTER TABLE SAMPLE_LITH_DESC ADD CONSTRAINT SMLD_R_LOS1_FK FOREIGN KEY
(
OIL_STAIN
)
REFERENCES R_LITH_OIL_STAIN
(
OIL_STAIN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMLD_R_LRM_FK'
ALTER TABLE SAMPLE_LITH_DESC ADD CONSTRAINT SMLD_R_LRM_FK FOREIGN KEY
(
ROCK_MATRIX
)
REFERENCES R_LITH_ROCK_MATRIX
(
ROCK_MATRIX
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMLD_R_LRT1_FK'
ALTER TABLE SAMPLE_LITH_DESC ADD CONSTRAINT SMLD_R_LRT1_FK FOREIGN KEY
(
ROCK_TYPE
)
REFERENCES R_LITH_ROCK_TYPE
(
ROCK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMLD_R_PRMT_FK'
ALTER TABLE SAMPLE_LITH_DESC ADD CONSTRAINT SMLD_R_PRMT_FK FOREIGN KEY
(
PERMEABILITY_TYPE
)
REFERENCES R_PERMEABILITY_TYPE
(
PERMEABILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMLD_R_PORT_FK'
ALTER TABLE SAMPLE_LITH_DESC ADD CONSTRAINT SMLD_R_PORT_FK FOREIGN KEY
(
POROSITY_TYPE
)
REFERENCES R_POROSITY_TYPE
(
POROSITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMLD_R_SAPCT_FK'
ALTER TABLE SAMPLE_LITH_DESC ADD CONSTRAINT SMLD_R_SAPCT_FK FOREIGN KEY
(
CONTAMINANT
)
REFERENCES R_SAMPLE_CONTAMINANT
(
SAMPLE_CONTAMINANT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMLD_SM_FK'
ALTER TABLE SAMPLE_LITH_DESC ADD CONSTRAINT SMLD_SM_FK FOREIGN KEY
(
SAMPLE_ID
)
REFERENCES SAMPLE
(
SAMPLE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMLD_STU_FK'
ALTER TABLE SAMPLE_LITH_DESC ADD CONSTRAINT SMLD_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMC_ANLAS_FK'
ALTER TABLE SAMPLE_ORIGIN ADD CONSTRAINT SMC_ANLAS_FK FOREIGN KEY
(
ANALYSIS_ID,
ANALYSIS_SOURCE,
ANL_STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMC_A_FK'
ALTER TABLE SAMPLE_ORIGIN ADD CONSTRAINT SMC_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMC_BA_FK'
ALTER TABLE SAMPLE_ORIGIN ADD CONSTRAINT SMC_BA_FK FOREIGN KEY
(
COLLECTED_FOR_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMC_BA_FK2'
ALTER TABLE SAMPLE_ORIGIN ADD CONSTRAINT SMC_BA_FK2 FOREIGN KEY
(
COLLECTED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMC_LR_FK'
ALTER TABLE SAMPLE_ORIGIN ADD CONSTRAINT SMC_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMC_LIMS_FK'
ALTER TABLE SAMPLE_ORIGIN ADD CONSTRAINT SMC_LIMS_FK FOREIGN KEY
(
MEAS_SECTION_ID,
MEAS_SECTION_SOURCE
)
REFERENCES LITH_MEASURED_SEC
(
MEAS_SECTION_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMC_PS_FK'
ALTER TABLE SAMPLE_ORIGIN ADD CONSTRAINT SMC_PS_FK FOREIGN KEY
(
WELL_UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMC_PROJ_FK'
ALTER TABLE SAMPLE_ORIGIN ADD CONSTRAINT SMC_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMC_R_CT5_FK'
ALTER TABLE SAMPLE_ORIGIN ADD CONSTRAINT SMC_R_CT5_FK FOREIGN KEY
(
CORE_TYPE
)
REFERENCES R_CORE_TYPE
(
CORE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMC_R_SCMD_FK'
ALTER TABLE SAMPLE_ORIGIN ADD CONSTRAINT SMC_R_SCMD_FK FOREIGN KEY
(
COLLECT_METHOD
)
REFERENCES R_SAMPLE_COLLECT_METHOD
(
COLLECT_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMC_SM_FK2'
ALTER TABLE SAMPLE_ORIGIN ADD CONSTRAINT SMC_SM_FK2 FOREIGN KEY
(
SAMPLE_PART_ID
)
REFERENCES SAMPLE
(
SAMPLE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMC_SM_FK'
ALTER TABLE SAMPLE_ORIGIN ADD CONSTRAINT SMC_SM_FK FOREIGN KEY
(
SAMPLE_ID
)
REFERENCES SAMPLE
(
SAMPLE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMC_STFST_FK'
ALTER TABLE SAMPLE_ORIGIN ADD CONSTRAINT SMC_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMC_W_FK'
ALTER TABLE SAMPLE_ORIGIN ADD CONSTRAINT SMC_W_FK FOREIGN KEY
(
WELL_UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMC_WCR_FK'
ALTER TABLE SAMPLE_ORIGIN ADD CONSTRAINT SMC_WCR_FK FOREIGN KEY
(
WELL_UWI,
WELL_SOURCE,
WELL_CORE_ID
)
REFERENCES WELL_CORE
(
UWI,
SOURCE,
CORE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SMC_WDS_FK'
ALTER TABLE SAMPLE_ORIGIN ADD CONSTRAINT SMC_WDS_FK FOREIGN KEY
(
WELL_UWI,
WELL_SURVEY_ID,
WELL_SURVEY_SOURCE
)
REFERENCES WELL_DIR_SRVY
(
UWI,
SURVEY_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SS3_R_S3T_FK'
ALTER TABLE SEIS_3D ADD CONSTRAINT SS3_R_S3T_FK FOREIGN KEY
(
SEIS_3D_TYPE
)
REFERENCES R_SEIS_3D_TYPE
(
SEISMIC_3D_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SS3_R_SSR_FK'
ALTER TABLE SEIS_3D ADD CONSTRAINT SS3_R_SSR_FK FOREIGN KEY
(
SEIS_3D_REASON
)
REFERENCES R_SEIS_SEGMENT_REASON
(
SEIS_SEGMENT_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SS3_SS_FK'
ALTER TABLE SEIS_3D ADD CONSTRAINT SS3_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_3D_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSAD_BA_FK'
ALTER TABLE SEIS_ACQTN_DESIGN ADD CONSTRAINT SSAD_BA_FK FOREIGN KEY
(
SHOT_BY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSAD_BA_FK2'
ALTER TABLE SEIS_ACQTN_DESIGN ADD CONSTRAINT SSAD_BA_FK2 FOREIGN KEY
(
SHOT_FOR
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSAD_R_DIR_FK'
ALTER TABLE SEIS_ACQTN_DESIGN ADD CONSTRAINT SSAD_R_DIR_FK FOREIGN KEY
(
ACQTN_DIRECTION
)
REFERENCES R_DIRECTION
(
DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSAD_R_E_FK'
ALTER TABLE SEIS_ACQTN_DESIGN ADD CONSTRAINT SSAD_R_E_FK FOREIGN KEY
(
ENVIRONMENT
)
REFERENCES R_ENVIRONMENT
(
ENVIRONMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSAD_R_SD_FK'
ALTER TABLE SEIS_ACQTN_DESIGN ADD CONSTRAINT SSAD_R_SD_FK FOREIGN KEY
(
ACQTN_DIMENSION
)
REFERENCES R_SEIS_DIMENSION
(
SEIS_DIMENSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSAD_R_SET_FK'
ALTER TABLE SEIS_ACQTN_DESIGN ADD CONSTRAINT SSAD_R_SET_FK FOREIGN KEY
(
ENERGY_TYPE
)
REFERENCES R_SEIS_ENERGY_TYPE
(
SEIS_ENERGY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSAD_R_SRFT_FK'
ALTER TABLE SEIS_ACQTN_DESIGN ADD CONSTRAINT SSAD_R_SRFT_FK FOREIGN KEY
(
RCRD_FORMAT_TYPE
)
REFERENCES R_SEIS_RCRD_FMT_TYPE
(
SEIS_RCRD_FMT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSAD_R_SRM_FK'
ALTER TABLE SEIS_ACQTN_DESIGN ADD CONSTRAINT SSAD_R_SRM_FK FOREIGN KEY
(
RCRD_MAKE
)
REFERENCES R_SEIS_RCRD_MAKE
(
SEIS_RCRD_MAKE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSAD_R_SSAT_FK'
ALTER TABLE SEIS_ACQTN_DESIGN ADD CONSTRAINT SSAD_R_SSAT_FK FOREIGN KEY
(
ENERGY_SRC_ARRAY_TYPE
)
REFERENCES R_SEIS_SRC_ARRAY_TYPE
(
SEIS_SRC_ARRAY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSAD_R_SSM_FK'
ALTER TABLE SEIS_ACQTN_DESIGN ADD CONSTRAINT SSAD_R_SSM_FK FOREIGN KEY
(
ENERGY_SRC_MAKE
)
REFERENCES R_SEIS_SRC_MAKE
(
SEIS_SRC_MAKE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSAD_R_SST4_FK'
ALTER TABLE SEIS_ACQTN_DESIGN ADD CONSTRAINT SSAD_R_SST4_FK FOREIGN KEY
(
ENERGY_SWEEP_TYPE
)
REFERENCES R_SEIS_SWEEP_TYPE
(
SEIS_SWEEP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSASP_R_SST1_FK'
ALTER TABLE SEIS_ACQTN_SPECTRUM ADD CONSTRAINT SSASP_R_SST1_FK FOREIGN KEY
(
SEIS_SPECTRUM_TYPE
)
REFERENCES R_SEIS_SPECTRUM_TYPE
(
SEIS_SPECTRUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSASP_SSAD_FK'
ALTER TABLE SEIS_ACQTN_SPECTRUM ADD CONSTRAINT SSASP_SSAD_FK FOREIGN KEY
(
ACQTN_DESIGN_ID
)
REFERENCES SEIS_ACQTN_DESIGN
(
ACQTN_DESIGN_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SAS_BA_FK'
ALTER TABLE SEIS_ACQTN_SURVEY ADD CONSTRAINT SAS_BA_FK FOREIGN KEY
(
SHOT_FOR
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SAS_R_SD_FK'
ALTER TABLE SEIS_ACQTN_SURVEY ADD CONSTRAINT SAS_R_SD_FK FOREIGN KEY
(
SEIS_DIMENSION
)
REFERENCES R_SEIS_DIMENSION
(
SEIS_DIMENSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SAS_SS_FK'
ALTER TABLE SEIS_ACQTN_SURVEY ADD CONSTRAINT SAS_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_ACQTN_SURVEY_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SAS_SSA_FK'
ALTER TABLE SEIS_ACQTN_SURVEY ADD CONSTRAINT SAS_SSA_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_ACQTN_SURVEY_ID,
AREA_ID,
AREA_TYPE
)
REFERENCES SEIS_SET_AREA
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSACT_BAC_FK'
ALTER TABLE SEIS_ACTIVITY ADD CONSTRAINT SSACT_BAC_FK FOREIGN KEY
(
CREW_COMPANY_BA_ID,
CREW_ID
)
REFERENCES BA_CREW
(
CREW_COMPANY_BA_ID,
CREW_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSACT_BA_FK'
ALTER TABLE SEIS_ACTIVITY ADD CONSTRAINT SSACT_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSACT_R_SACT1_FK'
ALTER TABLE SEIS_ACTIVITY ADD CONSTRAINT SSACT_R_SACT1_FK FOREIGN KEY
(
SEIS_ACTIVITY_CLASS,
SEIS_ACTIVITY_TYPE
)
REFERENCES R_SEIS_ACTIVITY_TYPE
(
SEIS_ACTIVITY_CLASS,
SEIS_ACTIVITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSACT_R_TZ_FK'
ALTER TABLE SEIS_ACTIVITY ADD CONSTRAINT SSACT_R_TZ_FK FOREIGN KEY
(
END_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSACT_R_TZ_FK2'
ALTER TABLE SEIS_ACTIVITY ADD CONSTRAINT SSACT_R_TZ_FK2 FOREIGN KEY
(
START_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSACT_SSPT_FK'
ALTER TABLE SEIS_ACTIVITY ADD CONSTRAINT SSACT_SSPT_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
FIRST_SEIS_POINT_ID
)
REFERENCES SEIS_POINT
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_POINT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSACT_SSPT_FK2'
ALTER TABLE SEIS_ACTIVITY ADD CONSTRAINT SSACT_SSPT_FK2 FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LAST_SEIS_POINT_ID
)
REFERENCES SEIS_POINT
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_POINT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSACT_SS_FK'
ALTER TABLE SEIS_ACTIVITY ADD CONSTRAINT SSACT_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSAL_BA_FK'
ALTER TABLE SEIS_ALIAS ADD CONSTRAINT SSAL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSAL_PSWA_FK'
ALTER TABLE SEIS_ALIAS ADD CONSTRAINT SSAL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSAL_R_ART_FK'
ALTER TABLE SEIS_ALIAS ADD CONSTRAINT SSAL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSAL_R_ATY_FK'
ALTER TABLE SEIS_ALIAS ADD CONSTRAINT SSAL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSAL_R_LANG_FK'
ALTER TABLE SEIS_ALIAS ADD CONSTRAINT SSAL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSAL_SS_FK'
ALTER TABLE SEIS_ALIAS ADD CONSTRAINT SSAL_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSAL_SRCD_FK'
ALTER TABLE SEIS_ALIAS ADD CONSTRAINT SSAL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBS_BA_FK3'
ALTER TABLE SEIS_BA_SERVICE ADD CONSTRAINT SSBS_BA_FK3 FOREIGN KEY
(
CONTACT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBS_BA_FK'
ALTER TABLE SEIS_BA_SERVICE ADD CONSTRAINT SSBS_BA_FK FOREIGN KEY
(
PROVIDED_BY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBS_BA_FK2'
ALTER TABLE SEIS_BA_SERVICE ADD CONSTRAINT SSBS_BA_FK2 FOREIGN KEY
(
REPRESENTED_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBS_C_FK'
ALTER TABLE SEIS_BA_SERVICE ADD CONSTRAINT SSBS_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBS_CP_FK'
ALTER TABLE SEIS_BA_SERVICE ADD CONSTRAINT SSBS_CP_FK FOREIGN KEY
(
CONTRACT_ID,
PROVISION_ID
)
REFERENCES CONT_PROVISION
(
CONTRACT_ID,
PROVISION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBS_RATE_FK'
ALTER TABLE SEIS_BA_SERVICE ADD CONSTRAINT SSBS_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBS_R_BST_FK'
ALTER TABLE SEIS_BA_SERVICE ADD CONSTRAINT SSBS_R_BST_FK FOREIGN KEY
(
BA_SERVICE_TYPE
)
REFERENCES R_BA_SERVICE_TYPE
(
BA_SERVICE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBS_R_SQ_FK'
ALTER TABLE SEIS_BA_SERVICE ADD CONSTRAINT SSBS_R_SQ_FK FOREIGN KEY
(
SERVICE_QUALITY
)
REFERENCES R_SERVICE_QUALITY
(
SERVICE_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBS_SS_FK'
ALTER TABLE SEIS_BA_SERVICE ADD CONSTRAINT SSBS_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBG_CS_FK'
ALTER TABLE SEIS_BIN_GRID ADD CONSTRAINT SSBG_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBG_CS_FK2'
ALTER TABLE SEIS_BIN_GRID ADD CONSTRAINT SSBG_CS_FK2 FOREIGN KEY
(
LOCAL_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBG_CSCA_FK'
ALTER TABLE SEIS_BIN_GRID ADD CONSTRAINT SSBG_CSCA_FK FOREIGN KEY
(
COORD_ACQUISITION_ID
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBG_R_N_FK'
ALTER TABLE SEIS_BIN_GRID ADD CONSTRAINT SSBG_R_N_FK FOREIGN KEY
(
NORTH_TYPE
)
REFERENCES R_NORTH
(
NORTH_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBG_R_SBM_FK'
ALTER TABLE SEIS_BIN_GRID ADD CONSTRAINT SSBG_R_SBM_FK FOREIGN KEY
(
BIN_METHOD
)
REFERENCES R_SEIS_BIN_METHOD
(
BIN_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBG_SS_FK'
ALTER TABLE SEIS_BIN_GRID ADD CONSTRAINT SSBG_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBO_CS_FK2'
ALTER TABLE SEIS_BIN_ORIGIN ADD CONSTRAINT SSBO_CS_FK2 FOREIGN KEY
(
LOCAL_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBO_CS_FK'
ALTER TABLE SEIS_BIN_ORIGIN ADD CONSTRAINT SSBO_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBO_CSCA_FK'
ALTER TABLE SEIS_BIN_ORIGIN ADD CONSTRAINT SSBO_CSCA_FK FOREIGN KEY
(
COORD_ACQUISITION_ID
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBO_SSBG_FK2'
ALTER TABLE SEIS_BIN_ORIGIN ADD CONSTRAINT SSBO_SSBG_FK2 FOREIGN KEY
(
INPUT_SEIS_SET_SUBTYPE,
INPUT_SEIS_SET_ID,
INPUT_BIN_GRID_ID,
INPUT_BIN_SOURCE
)
REFERENCES SEIS_BIN_GRID
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
BIN_GRID_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBO_SSBG_FK'
ALTER TABLE SEIS_BIN_ORIGIN ADD CONSTRAINT SSBO_SSBG_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
BIN_GRID_ID,
BIN_GRID_SOURCE
)
REFERENCES SEIS_BIN_GRID
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
BIN_GRID_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBOL_CS_FK2'
ALTER TABLE SEIS_BIN_OUTLINE ADD CONSTRAINT SSBOL_CS_FK2 FOREIGN KEY
(
LOCAL_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBOL_CS_FK'
ALTER TABLE SEIS_BIN_OUTLINE ADD CONSTRAINT SSBOL_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBOL_CSCA_FK'
ALTER TABLE SEIS_BIN_OUTLINE ADD CONSTRAINT SSBOL_CSCA_FK FOREIGN KEY
(
COORD_ACQUISITION_ID
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBOL_R_SBOT_FK'
ALTER TABLE SEIS_BIN_OUTLINE ADD CONSTRAINT SSBOL_R_SBOT_FK FOREIGN KEY
(
BIN_OUTLINE_TYPE
)
REFERENCES R_SEIS_BIN_OUTLINE_TYPE
(
BIN_OUTLINE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBOL_SSBG_FK'
ALTER TABLE SEIS_BIN_OUTLINE ADD CONSTRAINT SSBOL_SSBG_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
BIN_GRID_ID,
BIN_GRID_SOURCE
)
REFERENCES SEIS_BIN_GRID
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
BIN_GRID_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBP_SSBG_FK'
ALTER TABLE SEIS_BIN_POINT ADD CONSTRAINT SSBP_SSBG_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
BIN_GRID_ID,
BIN_GRID_SOURCE
)
REFERENCES SEIS_BIN_GRID
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
BIN_GRID_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBPT_RMST_FK'
ALTER TABLE SEIS_BIN_POINT_TRACE ADD CONSTRAINT SSBPT_RMST_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_SEIS_TRACE
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBPT_SSBP_FK'
ALTER TABLE SEIS_BIN_POINT_TRACE ADD CONSTRAINT SSBPT_SSBP_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
BIN_GRID_ID,
BIN_GRID_SOURCE,
BIN_POINT_ID
)
REFERENCES SEIS_BIN_POINT
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
BIN_GRID_ID,
BIN_GRID_SOURCE,
BIN_POINT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBPV_CS_FK2'
ALTER TABLE SEIS_BIN_POINT_VERSION ADD CONSTRAINT SSBPV_CS_FK2 FOREIGN KEY
(
MAP_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBPV_CS_FK3'
ALTER TABLE SEIS_BIN_POINT_VERSION ADD CONSTRAINT SSBPV_CS_FK3 FOREIGN KEY
(
LOCAL_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBPV_CS_FK'
ALTER TABLE SEIS_BIN_POINT_VERSION ADD CONSTRAINT SSBPV_CS_FK FOREIGN KEY
(
GEOG_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBPV_CSCA_FK'
ALTER TABLE SEIS_BIN_POINT_VERSION ADD CONSTRAINT SSBPV_CSCA_FK FOREIGN KEY
(
ACQUISITION_ID
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBPV_R_ED_FK'
ALTER TABLE SEIS_BIN_POINT_VERSION ADD CONSTRAINT SSBPV_R_ED_FK FOREIGN KEY
(
EW_DIRECTION
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBPV_R_ESL_FK'
ALTER TABLE SEIS_BIN_POINT_VERSION ADD CONSTRAINT SSBPV_R_ESL_FK FOREIGN KEY
(
EW_START_LINE
)
REFERENCES R_EW_START_LINE
(
EW_START_LINE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBPV_R_N_FK'
ALTER TABLE SEIS_BIN_POINT_VERSION ADD CONSTRAINT SSBPV_R_N_FK FOREIGN KEY
(
NORTH_TYPE
)
REFERENCES R_NORTH
(
NORTH_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBPV_R_ND_FK'
ALTER TABLE SEIS_BIN_POINT_VERSION ADD CONSTRAINT SSBPV_R_ND_FK FOREIGN KEY
(
NS_DIRECTION
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBPV_R_NSL_FK'
ALTER TABLE SEIS_BIN_POINT_VERSION ADD CONSTRAINT SSBPV_R_NSL_FK FOREIGN KEY
(
NS_START_LINE
)
REFERENCES R_NS_START_LINE
(
NS_START_LINE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBPV_R_SPVT_FK'
ALTER TABLE SEIS_BIN_POINT_VERSION ADD CONSTRAINT SSBPV_R_SPVT_FK FOREIGN KEY
(
VERSION_TYPE
)
REFERENCES R_SP_POINT_VERSION_TYPE
(
VERSION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBPV_SSBP_FK'
ALTER TABLE SEIS_BIN_POINT_VERSION ADD CONSTRAINT SSBPV_SSBP_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
BIN_GRID_ID,
BIN_GRID_SOURCE,
BIN_POINT_ID
)
REFERENCES SEIS_BIN_POINT
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
BIN_GRID_ID,
BIN_GRID_SOURCE,
BIN_POINT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSBPV_W_FK'
ALTER TABLE SEIS_BIN_POINT_VERSION ADD CONSTRAINT SSBPV_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCH_R_SCT_FK'
ALTER TABLE SEIS_CHANNEL ADD CONSTRAINT SSCH_R_SCT_FK FOREIGN KEY
(
CHANNEL_TYPE
)
REFERENCES R_SEIS_CHANNEL_TYPE
(
CHANNEL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCH_SSPT_FK'
ALTER TABLE SEIS_CHANNEL ADD CONSTRAINT SSCH_SSPT_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_RECEIVER_POINT_ID
)
REFERENCES SEIS_POINT
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_POINT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCH_SSR_FK'
ALTER TABLE SEIS_CHANNEL ADD CONSTRAINT SSCH_SSR_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
RECORD_ID
)
REFERENCES SEIS_RECORD
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
RECORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCH_SST_FK'
ALTER TABLE SEIS_CHANNEL ADD CONSTRAINT SSCH_SST_FK FOREIGN KEY
(
STREAMER_ID
)
REFERENCES SEIS_STREAMER
(
STREAMER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCH_SSV_FK'
ALTER TABLE SEIS_CHANNEL ADD CONSTRAINT SSCH_SSV_FK FOREIGN KEY
(
VESSEL_SF_SUBTYPE,
VESSEL_ID,
VESSEL_CONFIG_OBS_NO
)
REFERENCES SEIS_VESSEL
(
SF_SUBTYPE,
VESSEL_ID,
VESSEL_CONFIG_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSGC_R_SGT_FK'
ALTER TABLE SEIS_GROUP_COMP ADD CONSTRAINT SSGC_R_SGT_FK FOREIGN KEY
(
SEIS_GROUP_TYPE
)
REFERENCES R_SEIS_GROUP_TYPE
(
SEIS_GROUP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSGC_SS_FK'
ALTER TABLE SEIS_GROUP_COMP ADD CONSTRAINT SSGC_SS_FK FOREIGN KEY
(
INPUT_SEIS_SET_SUBTYPE,
INPUT_SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSGC_SS_FK2'
ALTER TABLE SEIS_GROUP_COMP ADD CONSTRAINT SSGC_SS_FK2 FOREIGN KEY
(
SEIS_GROUP_ID,
SEIS_GROUP_SET_SUBTYPE
)
REFERENCES SEIS_SET
(
SEIS_SET_ID,
SEIS_SET_SUBTYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSI_BAA_FK'
ALTER TABLE SEIS_INSPECTION ADD CONSTRAINT SSI_BAA_FK FOREIGN KEY
(
INSP_LOC_BA_ID,
INSP_LOC_SOURCE,
INSP_LOC_ADDRESS_OBS_NO
)
REFERENCES BA_ADDRESS
(
BUSINESS_ASSOCIATE_ID,
SOURCE,
ADDRESS_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSI_BA_FK'
ALTER TABLE SEIS_INSPECTION ADD CONSTRAINT SSI_BA_FK FOREIGN KEY
(
INSPECTING_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSI_R_IS_FK'
ALTER TABLE SEIS_INSPECTION ADD CONSTRAINT SSI_R_IS_FK FOREIGN KEY
(
INSPECTION_STATUS
)
REFERENCES R_INSP_STATUS
(
INSPECTION_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSI_R_SAR_FK'
ALTER TABLE SEIS_INSPECTION ADD CONSTRAINT SSI_R_SAR_FK FOREIGN KEY
(
REASON_TYPE
)
REFERENCES R_SEIS_AUTHORIZE_REASON
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_ANLR_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_APP_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_A_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_BAAU_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_BAE_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_BAO_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_BA_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_CA_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_CEQ_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_CLSL_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_CON_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_CO_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_COT_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_C_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_EZ_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_ENT_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_EQ_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_FAC_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_FLD_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_FIN_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_FOS_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_HI_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_INS_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_INT_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_LR_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_LS_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_LIL_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_NOTI_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_OB_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_PASU_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_PDE_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_PL_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_PSWA_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_PSYS_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_PT_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_PS_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_PROJ_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_RATE_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_RSCL_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_RSE_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_RMCI_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_RMCI_FK FOREIGN KEY
(
CIRC_ID
)
REFERENCES RM_CIRCULATION
(
CIRC_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_RMDSS_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_RMII_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_RMPI_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_RMTW_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_R_ICT_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_R_ICT_FK FOREIGN KEY
(
COMPONENT_TYPE
)
REFERENCES R_INSP_COMP_TYPE
(
COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_R_IS_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_R_IS_FK FOREIGN KEY
(
INSPECTION_STATUS
)
REFERENCES R_INSP_STATUS
(
INSPECTION_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_SSI_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_SSI_FK FOREIGN KEY
(
INSPECTION_ID
)
REFERENCES SEIS_INSPECTION
(
INSPECTION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_SS_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_SSAU_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_SSAU_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
AUTHORIZE_ID
)
REFERENCES SEIS_SET_AUTHORIZE
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
AUTHORIZE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_SF_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_SPD_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_STFST_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_STU_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_SUB_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_W_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_WAC_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_WAC_FK FOREIGN KEY
(
UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_WSET_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIC_WO_FK'
ALTER TABLE SEIS_INSP_COMPONENT ADD CONSTRAINT SSIC_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSICOM_A_FK'
ALTER TABLE SEIS_INTERP_COMP ADD CONSTRAINT SSICOM_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSICOM_CS_FK'
ALTER TABLE SEIS_INTERP_COMP ADD CONSTRAINT SSICOM_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSICOM_CS_FK2'
ALTER TABLE SEIS_INTERP_COMP ADD CONSTRAINT SSICOM_CS_FK2 FOREIGN KEY
(
LOCAL_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSICOM_CSCA_FK'
ALTER TABLE SEIS_INTERP_COMP ADD CONSTRAINT SSICOM_CSCA_FK FOREIGN KEY
(
COORD_ACQUISITION_ID
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSICOM_RMII_FK'
ALTER TABLE SEIS_INTERP_COMP ADD CONSTRAINT SSICOM_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSICOM_R_IOT_FK'
ALTER TABLE SEIS_INTERP_COMP ADD CONSTRAINT SSICOM_R_IOT_FK FOREIGN KEY
(
ORIGIN_TYPE
)
REFERENCES R_INTERP_ORIGIN_TYPE
(
ORIGIN_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSICOM_SSIS_FK'
ALTER TABLE SEIS_INTERP_COMP ADD CONSTRAINT SSICOM_SSIS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
INTERP_SET_ID
)
REFERENCES SEIS_INTERP_SET
(
SEIS_SET_SUBTYPE,
INTERP_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSICOM_SSPC_FK'
ALTER TABLE SEIS_INTERP_COMP ADD CONSTRAINT SSICOM_SSPC_FK FOREIGN KEY
(
PROC_SET_ID,
PROC_SET_SUBTYPE,
PROC_COMPONENT_ID
)
REFERENCES SEIS_PROC_COMPONENT
(
SEIS_PROC_SET_ID,
SEIS_SET_SUBTYPE,
COMPONENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSICOM_SSPSC_FK'
ALTER TABLE SEIS_INTERP_COMP ADD CONSTRAINT SSICOM_SSPSC_FK FOREIGN KEY
(
PROC_SET_ID,
PROC_SET_SUBTYPE,
PROC_COMPONENT_ID,
PROCESS_STEP_ID
)
REFERENCES SEIS_PROC_STEP_COMPONENT
(
SEIS_PROC_SET_ID,
SEIS_SET_SUBTYPE,
COMPONENT_ID,
PROCESS_STEP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSICOM_SSVV_FK'
ALTER TABLE SEIS_INTERP_COMP ADD CONSTRAINT SSICOM_SSVV_FK FOREIGN KEY
(
VELOCITY_VOLUME_ID
)
REFERENCES SEIS_VELOCITY_VOLUME
(
VELOCITY_VOLUME_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSICOM_W_FK'
ALTER TABLE SEIS_INTERP_COMP ADD CONSTRAINT SSICOM_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIL_R_SPS_FK'
ALTER TABLE SEIS_INTERP_LOAD ADD CONSTRAINT SSIL_R_SPS_FK FOREIGN KEY
(
PROCESS_STATUS
)
REFERENCES R_SEIS_PROC_STATUS
(
PROCESS_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIL_R_SSPSN_FK'
ALTER TABLE SEIS_INTERP_LOAD ADD CONSTRAINT SSIL_R_SSPSN_FK FOREIGN KEY
(
STEP_NAME
)
REFERENCES R_SEIS_PROC_STEP_NAME
(
STEP_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIL_SSICOM_FK'
ALTER TABLE SEIS_INTERP_LOAD ADD CONSTRAINT SSIL_SSICOM_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
INTERP_SET_ID,
INTERP_ORIGIN_ID
)
REFERENCES SEIS_INTERP_COMP
(
SEIS_SET_SUBTYPE,
INTERP_SET_ID,
COMPONENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIL_SSIS_FK'
ALTER TABLE SEIS_INTERP_LOAD ADD CONSTRAINT SSIL_SSIS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
INTERP_SET_ID
)
REFERENCES SEIS_INTERP_SET
(
SEIS_SET_SUBTYPE,
INTERP_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSILP_R_SPO_FK'
ALTER TABLE SEIS_INTERP_LOAD_PARM ADD CONSTRAINT SSILP_R_SPO_FK FOREIGN KEY
(
PARAMETER_ORIGIN
)
REFERENCES R_SEIS_PARM_ORIGIN
(
PARAMETER_ORIGIN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSILP_R_SPP_FK'
ALTER TABLE SEIS_INTERP_LOAD_PARM ADD CONSTRAINT SSILP_R_SPP_FK FOREIGN KEY
(
PARAMETER_TYPE
)
REFERENCES R_SEIS_PROC_PARM
(
PARAMETER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSILP_SSIL_FK'
ALTER TABLE SEIS_INTERP_LOAD_PARM ADD CONSTRAINT SSILP_SSIL_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
INTERP_SET_ID,
PROCESS_STEP_ID
)
REFERENCES SEIS_INTERP_LOAD
(
SEIS_SET_SUBTYPE,
INTERP_SET_ID,
PROCESS_STEP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIS_BA_FK'
ALTER TABLE SEIS_INTERP_SET ADD CONSTRAINT SSIS_BA_FK FOREIGN KEY
(
INTERPRETER
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIS_PSWA_FK'
ALTER TABLE SEIS_INTERP_SET ADD CONSTRAINT SSIS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIS_R_IT_FK'
ALTER TABLE SEIS_INTERP_SET ADD CONSTRAINT SSIS_R_IT_FK FOREIGN KEY
(
INTERP_TYPE
)
REFERENCES R_INTERP_TYPE
(
INTERP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIS_R_SPM_FK'
ALTER TABLE SEIS_INTERP_SET ADD CONSTRAINT SSIS_R_SPM_FK FOREIGN KEY
(
PICK_METHOD
)
REFERENCES R_SEIS_PICK_METHOD
(
PICK_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSIS_SS_FK'
ALTER TABLE SEIS_INTERP_SET ADD CONSTRAINT SSIS_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
INTERP_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSISU_R_CONR_FK'
ALTER TABLE SEIS_INTERP_SURFACE ADD CONSTRAINT SSISU_R_CONR_FK FOREIGN KEY
(
CONFORMITY_RELATIONSHIP
)
REFERENCES R_CONFORMITY_RELATION
(
CONFORMITY_RELATIONSHIP
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSISU_R_RFTY_FK'
ALTER TABLE SEIS_INTERP_SURFACE ADD CONSTRAINT SSISU_R_RFTY_FK FOREIGN KEY
(
REPEAT_STRAT_TYPE
)
REFERENCES R_REPEAT_STRAT_TYPE
(
REPEAT_STRAT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSISU_STU_FK'
ALTER TABLE SEIS_INTERP_SURFACE ADD CONSTRAINT SSISU_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLIC_APP_FK'
ALTER TABLE SEIS_LICENSE ADD CONSTRAINT SLIC_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLIC_BA_FK'
ALTER TABLE SEIS_LICENSE ADD CONSTRAINT SLIC_BA_FK FOREIGN KEY
(
GRANTED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLIC_BA_FK2'
ALTER TABLE SEIS_LICENSE ADD CONSTRAINT SLIC_BA_FK2 FOREIGN KEY
(
GRANTED_TO_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLIC_BA_FK3'
ALTER TABLE SEIS_LICENSE ADD CONSTRAINT SLIC_BA_FK3 FOREIGN KEY
(
GRANTED_BY_CONTACT_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLIC_BA_FK4'
ALTER TABLE SEIS_LICENSE ADD CONSTRAINT SLIC_BA_FK4 FOREIGN KEY
(
GRANTED_TO_CONTACT_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLIC_RATE_FK'
ALTER TABLE SEIS_LICENSE ADD CONSTRAINT SLIC_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLIC_SLIC_FK'
ALTER TABLE SEIS_LICENSE ADD CONSTRAINT SLIC_SLIC_FK FOREIGN KEY
(
REL_SEIS_SET_SUBTYPE,
REL_SEIS_SET_ID,
REL_LICENSE_ID
)
REFERENCES SEIS_LICENSE
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLIC_SLICT_FK'
ALTER TABLE SEIS_LICENSE ADD CONSTRAINT SLIC_SLICT_FK FOREIGN KEY
(
GRANTED_BY_BA_ID,
SEIS_LICENSE_TYPE_ID
)
REFERENCES SEIS_LICENSE_TYPE
(
GRANTED_BY_BA_ID,
SEIS_LICENSE_TYPE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLIC_SS_FK'
ALTER TABLE SEIS_LICENSE ADD CONSTRAINT SLIC_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICAL_BA_FK'
ALTER TABLE SEIS_LICENSE_ALIAS ADD CONSTRAINT SLICAL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICAL_PSWA_FK'
ALTER TABLE SEIS_LICENSE_ALIAS ADD CONSTRAINT SLICAL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICAL_R_ART_FK'
ALTER TABLE SEIS_LICENSE_ALIAS ADD CONSTRAINT SLICAL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICAL_R_ATY_FK'
ALTER TABLE SEIS_LICENSE_ALIAS ADD CONSTRAINT SLICAL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICAL_R_LANG_FK'
ALTER TABLE SEIS_LICENSE_ALIAS ADD CONSTRAINT SLICAL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICAL_SLIC_FK'
ALTER TABLE SEIS_LICENSE_ALIAS ADD CONSTRAINT SLICAL_SLIC_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID
)
REFERENCES SEIS_LICENSE
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICAL_SRCD_FK'
ALTER TABLE SEIS_LICENSE_ALIAS ADD CONSTRAINT SLICAL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_IDS
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICA_A_FK'
ALTER TABLE SEIS_LICENSE_AREA ADD CONSTRAINT SLICA_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICA_SLIC_FK'
ALTER TABLE SEIS_LICENSE_AREA ADD CONSTRAINT SLICA_SLIC_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID
)
REFERENCES SEIS_LICENSE
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICC_BA_FK2'
ALTER TABLE SEIS_LICENSE_COND ADD CONSTRAINT SLICC_BA_FK2 FOREIGN KEY
(
FULFILLED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICC_BA_FK'
ALTER TABLE SEIS_LICENSE_COND ADD CONSTRAINT SLICC_BA_FK FOREIGN KEY
(
CONTACT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICC_REST_FK'
ALTER TABLE SEIS_LICENSE_COND ADD CONSTRAINT SLICC_REST_FK FOREIGN KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION
)
REFERENCES RESTRICTION
(
RESTRICTION_ID,
RESTRICTION_VERSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICC_R_SLC_FK'
ALTER TABLE SEIS_LICENSE_COND ADD CONSTRAINT SLICC_R_SLC_FK FOREIGN KEY
(
CONDITION_TYPE
)
REFERENCES R_SEIS_LIC_COND
(
CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICC_R_SLCC_FK'
ALTER TABLE SEIS_LICENSE_COND ADD CONSTRAINT SLICC_R_SLCC_FK FOREIGN KEY
(
CONDITION_TYPE,
CONDITION_CODE
)
REFERENCES R_SEIS_LIC_COND_CODE
(
CONDITION_TYPE,
CONDITION_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICC_R_SLDC_FK'
ALTER TABLE SEIS_LICENSE_COND ADD CONSTRAINT SLICC_R_SLDC_FK FOREIGN KEY
(
DUE_CONDITION
)
REFERENCES R_SEIS_LIC_DUE_CONDITION
(
DUE_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICC_SLIC_FK'
ALTER TABLE SEIS_LICENSE_COND ADD CONSTRAINT SLICC_SLIC_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID
)
REFERENCES SEIS_LICENSE
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICR_R_RT2_FK'
ALTER TABLE SEIS_LICENSE_REMARK ADD CONSTRAINT SLICR_R_RT2_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_REMARK_TYPE
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICR_SLIC_FK'
ALTER TABLE SEIS_LICENSE_REMARK ADD CONSTRAINT SLICR_SLIC_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID
)
REFERENCES SEIS_LICENSE
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICS_R_LIST_FK'
ALTER TABLE SEIS_LICENSE_STATUS ADD CONSTRAINT SLICS_R_LIST_FK FOREIGN KEY
(
LICENSE_STATUS_TYPE,
LICENSE_STATUS
)
REFERENCES R_LICENSE_STATUS
(
LICENSE_STATUS_TYPE,
LICENSE_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICS_SLIC_FK'
ALTER TABLE SEIS_LICENSE_STATUS ADD CONSTRAINT SLICS_SLIC_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID
)
REFERENCES SEIS_LICENSE
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICT_BA_FK'
ALTER TABLE SEIS_LICENSE_TYPE ADD CONSTRAINT SLICT_BA_FK FOREIGN KEY
(
GRANTED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICT_RATE_FK'
ALTER TABLE SEIS_LICENSE_TYPE ADD CONSTRAINT SLICT_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICV_R_SLVRT_FK'
ALTER TABLE SEIS_LICENSE_VIOLATION ADD CONSTRAINT SLICV_R_SLVRT_FK FOREIGN KEY
(
RESOLVE_TYPE
)
REFERENCES R_SEIS_LIC_VIOL_RESOL
(
RESOLVE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICV_R_SLVT_FK'
ALTER TABLE SEIS_LICENSE_VIOLATION ADD CONSTRAINT SLICV_R_SLVT_FK FOREIGN KEY
(
VIOLATION_TYPE
)
REFERENCES R_SEIS_LIC_VIOL_TYPE
(
VIOLATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICV_SLIC_FK'
ALTER TABLE SEIS_LICENSE_VIOLATION ADD CONSTRAINT SLICV_SLIC_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID
)
REFERENCES SEIS_LICENSE
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SLICV_SLICC_FK'
ALTER TABLE SEIS_LICENSE_VIOLATION ADD CONSTRAINT SLICV_SLICC_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID,
CONDITION_ID
)
REFERENCES SEIS_LICENSE_COND
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID,
CONDITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSL_R_SD_FK'
ALTER TABLE SEIS_LINE ADD CONSTRAINT SSL_R_SD_FK FOREIGN KEY
(
DIMENSION
)
REFERENCES R_SEIS_DIMENSION
(
SEIS_DIMENSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSL_R_SST1_FK'
ALTER TABLE SEIS_LINE ADD CONSTRAINT SSL_R_SST1_FK FOREIGN KEY
(
SEIS_SPECTRUM_TYPE
)
REFERENCES R_SEIS_SPECTRUM_TYPE
(
SEIS_SPECTRUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSL_SAS_FK'
ALTER TABLE SEIS_LINE ADD CONSTRAINT SSL_SAS_FK FOREIGN KEY
(
SEIS_ACQTN_SET_SUBTYPE,
SEIS_ACQTN_SURVEY_ID
)
REFERENCES SEIS_ACQTN_SURVEY
(
SEIS_SET_SUBTYPE,
SEIS_ACQTN_SURVEY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSL_SSL_FK'
ALTER TABLE SEIS_LINE ADD CONSTRAINT SSL_SSL_FK FOREIGN KEY
(
RESHOOT_SEIS_SET_SUBTYPE,
RESHOOT_OF_SET_ID
)
REFERENCES SEIS_LINE
(
SEIS_SET_SUBTYPE,
SEIS_LINE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSL_SS_FK'
ALTER TABLE SEIS_LINE ADD CONSTRAINT SSL_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_LINE_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPA_R_RAM_FK'
ALTER TABLE SEIS_PATCH ADD CONSTRAINT SSPA_R_RAM_FK FOREIGN KEY
(
ROLL_ALONG_METHOD
)
REFERENCES R_ROLL_ALONG_METHOD
(
ROLL_ALONG_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPA_R_SPT_FK'
ALTER TABLE SEIS_PATCH ADD CONSTRAINT SSPA_R_SPT_FK FOREIGN KEY
(
PATCH_TYPE
)
REFERENCES R_SEIS_PATCH_TYPE
(
PATCH_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPD_SSPA_FK'
ALTER TABLE SEIS_PATCH_DESC ADD CONSTRAINT SSPD_SSPA_FK FOREIGN KEY
(
PATCH_ID
)
REFERENCES SEIS_PATCH
(
PATCH_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPK_R_IT_FK'
ALTER TABLE SEIS_PICK ADD CONSTRAINT SSPK_R_IT_FK FOREIGN KEY
(
INTERP_TYPE
)
REFERENCES R_INTERP_TYPE
(
INTERP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPK_R_PQ_FK'
ALTER TABLE SEIS_PICK ADD CONSTRAINT SSPK_R_PQ_FK FOREIGN KEY
(
PICK_QUALIFIER
)
REFERENCES R_PICK_QUALIFIER
(
PICK_QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPK_R_PQR_FK'
ALTER TABLE SEIS_PICK ADD CONSTRAINT SSPK_R_PQR_FK FOREIGN KEY
(
PICK_QUALIF_REASON
)
REFERENCES R_PICK_QUALIF_REASON
(
PICK_QUALIF_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPK_R_PQ1_FK'
ALTER TABLE SEIS_PICK ADD CONSTRAINT SSPK_R_PQ1_FK FOREIGN KEY
(
PICK_QUALITY
)
REFERENCES R_PICK_QUALITY
(
PICK_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPK_R_PVT_FK'
ALTER TABLE SEIS_PICK ADD CONSTRAINT SSPK_R_PVT_FK FOREIGN KEY
(
PICK_VERSION_TYPE
)
REFERENCES R_PICK_VERSION_TYPE
(
PICK_VERSION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPK_R_SPM_FK'
ALTER TABLE SEIS_PICK ADD CONSTRAINT SSPK_R_SPM_FK FOREIGN KEY
(
PICK_METHOD
)
REFERENCES R_SEIS_PICK_METHOD
(
PICK_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPK_SSBP_FK'
ALTER TABLE SEIS_PICK ADD CONSTRAINT SSPK_SSBP_FK FOREIGN KEY
(
BIN_SEIS_SET_SUBTYPE,
BIN_SEIS_SET_ID,
BIN_GRID_ID,
BIN_SOURCE,
BIN_POINT_ID
)
REFERENCES SEIS_BIN_POINT
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
BIN_GRID_ID,
BIN_GRID_SOURCE,
BIN_POINT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPK_SSIS_FK'
ALTER TABLE SEIS_PICK ADD CONSTRAINT SSPK_SSIS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
INTERP_SET_ID
)
REFERENCES SEIS_INTERP_SET
(
SEIS_SET_SUBTYPE,
INTERP_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPK_SSISU_FK'
ALTER TABLE SEIS_PICK ADD CONSTRAINT SSPK_SSISU_FK FOREIGN KEY
(
SURFACE_ID
)
REFERENCES SEIS_INTERP_SURFACE
(
SURFACE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPK_SSPT_FK'
ALTER TABLE SEIS_PICK ADD CONSTRAINT SSPK_SSPT_FK FOREIGN KEY
(
SEIS_POINT_SET_SUBTYPE,
SEIS_POINT_SET_ID,
SEIS_POINT_ID
)
REFERENCES SEIS_POINT
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_POINT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPT_R_SRD_FK'
ALTER TABLE SEIS_POINT ADD CONSTRAINT SSPT_R_SRD_FK FOREIGN KEY
(
REFERENCE_DATUM
)
REFERENCES R_SEIS_REF_DATUM
(
REFERENCE_DATUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPT_R_SST2_FK'
ALTER TABLE SEIS_POINT ADD CONSTRAINT SSPT_R_SST2_FK FOREIGN KEY
(
SEIS_STATION_TYPE
)
REFERENCES R_SEIS_STATION_TYPE
(
SEIS_STATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPT_SS_FK'
ALTER TABLE SEIS_POINT ADD CONSTRAINT SSPT_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPF_BA_FK'
ALTER TABLE SEIS_POINT_FLOW ADD CONSTRAINT SSPF_BA_FK FOREIGN KEY
(
REMEDIAL_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPF_SSPT_FK'
ALTER TABLE SEIS_POINT_FLOW ADD CONSTRAINT SSPF_SSPT_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_POINT_ID
)
REFERENCES SEIS_POINT
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_POINT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPFD_R_SFDT2_FK'
ALTER TABLE SEIS_POINT_FLOW_DESC ADD CONSTRAINT SSPFD_R_SFDT2_FK FOREIGN KEY
(
DESCRIPTION_TYPE
)
REFERENCES R_SEIS_FLOW_DESC_TYPE
(
FLOW_DESC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPFD_SSPF_FK'
ALTER TABLE SEIS_POINT_FLOW_DESC ADD CONSTRAINT SSPFD_SSPF_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_POINT_ID,
FLOW_ID
)
REFERENCES SEIS_POINT_FLOW
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_POINT_ID,
FLOW_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPSU_R_SST2_FK'
ALTER TABLE SEIS_POINT_SUMMARY ADD CONSTRAINT SSPSU_R_SST2_FK FOREIGN KEY
(
SEIS_STATION_TYPE
)
REFERENCES R_SEIS_STATION_TYPE
(
SEIS_STATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPSU_R_SST5_FK'
ALTER TABLE SEIS_POINT_SUMMARY ADD CONSTRAINT SSPSU_R_SST5_FK FOREIGN KEY
(
SUMMARY_TYPE
)
REFERENCES R_SEIS_SUMMARY_TYPE
(
SUMMARY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPSU_SSPT_FK2'
ALTER TABLE SEIS_POINT_SUMMARY ADD CONSTRAINT SSPSU_SSPT_FK2 FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LAST_SEIS_POINT_ID
)
REFERENCES SEIS_POINT
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_POINT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPSU_SSPT_FK'
ALTER TABLE SEIS_POINT_SUMMARY ADD CONSTRAINT SSPSU_SSPT_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
FIRST_SEIS_POINT_ID
)
REFERENCES SEIS_POINT
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_POINT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPSU_SS_FK'
ALTER TABLE SEIS_POINT_SUMMARY ADD CONSTRAINT SSPSU_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPV_CS_FK3'
ALTER TABLE SEIS_POINT_VERSION ADD CONSTRAINT SSPV_CS_FK3 FOREIGN KEY
(
LOCAL_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPV_CS_FK2'
ALTER TABLE SEIS_POINT_VERSION ADD CONSTRAINT SSPV_CS_FK2 FOREIGN KEY
(
MAP_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPV_CS_FK'
ALTER TABLE SEIS_POINT_VERSION ADD CONSTRAINT SSPV_CS_FK FOREIGN KEY
(
GEOG_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPV_CSCA_FK'
ALTER TABLE SEIS_POINT_VERSION ADD CONSTRAINT SSPV_CSCA_FK FOREIGN KEY
(
ACQUISITION_ID
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPV_R_ED_FK'
ALTER TABLE SEIS_POINT_VERSION ADD CONSTRAINT SSPV_R_ED_FK FOREIGN KEY
(
EW_DIRECTION
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPV_R_ESL_FK'
ALTER TABLE SEIS_POINT_VERSION ADD CONSTRAINT SSPV_R_ESL_FK FOREIGN KEY
(
EW_START_LINE
)
REFERENCES R_EW_START_LINE
(
EW_START_LINE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPV_R_N_FK'
ALTER TABLE SEIS_POINT_VERSION ADD CONSTRAINT SSPV_R_N_FK FOREIGN KEY
(
NORTH_TYPE
)
REFERENCES R_NORTH
(
NORTH_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPV_R_ND_FK'
ALTER TABLE SEIS_POINT_VERSION ADD CONSTRAINT SSPV_R_ND_FK FOREIGN KEY
(
NS_DIRECTION
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPV_R_NSL_FK'
ALTER TABLE SEIS_POINT_VERSION ADD CONSTRAINT SSPV_R_NSL_FK FOREIGN KEY
(
NS_START_LINE
)
REFERENCES R_NS_START_LINE
(
NS_START_LINE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPV_R_SPVT_FK'
ALTER TABLE SEIS_POINT_VERSION ADD CONSTRAINT SSPV_R_SPVT_FK FOREIGN KEY
(
VERSION_TYPE
)
REFERENCES R_SP_POINT_VERSION_TYPE
(
VERSION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPV_SSPT_FK'
ALTER TABLE SEIS_POINT_VERSION ADD CONSTRAINT SSPV_SSPT_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_LINE_ID,
SEIS_POINT_ID
)
REFERENCES SEIS_POINT
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_POINT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPV_W_FK'
ALTER TABLE SEIS_POINT_VERSION ADD CONSTRAINT SSPV_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPC_RMII_FK'
ALTER TABLE SEIS_PROC_COMPONENT ADD CONSTRAINT SSPC_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPC_R_SPCT_FK'
ALTER TABLE SEIS_PROC_COMPONENT ADD CONSTRAINT SSPC_R_SPCT_FK FOREIGN KEY
(
PROCESSING_COMPONENT_TYPE
)
REFERENCES R_SEIS_PROC_COMP_TYPE
(
PROCESSING_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPC_SSBG_FK'
ALTER TABLE SEIS_PROC_COMPONENT ADD CONSTRAINT SSPC_SSBG_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_PROC_SET_ID,
BIN_GRID_ID,
BIN_GRID_SOURCE
)
REFERENCES SEIS_BIN_GRID
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
BIN_GRID_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPC_SSPPL_FK'
ALTER TABLE SEIS_PROC_COMPONENT ADD CONSTRAINT SSPC_SSPPL_FK FOREIGN KEY
(
SEIS_PROC_PLAN_ID
)
REFERENCES SEIS_PROC_PLAN
(
SEIS_PROC_PLAN_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPC_SSPRS_FK'
ALTER TABLE SEIS_PROC_COMPONENT ADD CONSTRAINT SSPC_SSPRS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_PROC_SET_ID
)
REFERENCES SEIS_PROC_SET
(
SEIS_SET_SUBTYPE,
SEIS_PROC_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPC_SS_FK'
ALTER TABLE SEIS_PROC_COMPONENT ADD CONSTRAINT SSPC_SS_FK FOREIGN KEY
(
COMP_SEIS_SET_SUBTYPE,
COMP_SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPC_SSVV_FK'
ALTER TABLE SEIS_PROC_COMPONENT ADD CONSTRAINT SSPC_SSVV_FK FOREIGN KEY
(
VELOCITY_VOLUME_ID
)
REFERENCES SEIS_VELOCITY_VOLUME
(
VELOCITY_VOLUME_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPC_W_FK'
ALTER TABLE SEIS_PROC_COMPONENT ADD CONSTRAINT SSPC_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPC_WLC_FK'
ALTER TABLE SEIS_PROC_COMPONENT ADD CONSTRAINT SSPC_WLC_FK FOREIGN KEY
(
UWI,
WELL_LOG_CURVE_ID
)
REFERENCES WELL_LOG_CURVE
(
UWI,
CURVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPP_R_SPO_FK'
ALTER TABLE SEIS_PROC_PARM ADD CONSTRAINT SSPP_R_SPO_FK FOREIGN KEY
(
PARAMETER_ORIGIN
)
REFERENCES R_SEIS_PARM_ORIGIN
(
PARAMETER_ORIGIN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPP_R_SPP_FK'
ALTER TABLE SEIS_PROC_PARM ADD CONSTRAINT SSPP_R_SPP_FK FOREIGN KEY
(
PARAMETER_TYPE
)
REFERENCES R_SEIS_PROC_PARM
(
PARAMETER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPP_SSPS_FK'
ALTER TABLE SEIS_PROC_PARM ADD CONSTRAINT SSPP_SSPS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_PROC_SET_ID,
PROCESS_STEP_ID
)
REFERENCES SEIS_PROC_STEP
(
SEIS_SET_SUBTYPE,
SEIS_PROC_SET_ID,
PROCESS_STEP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPPL_BA_FK'
ALTER TABLE SEIS_PROC_PLAN ADD CONSTRAINT SSPPL_BA_FK FOREIGN KEY
(
CREATED_BY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPPL_BA_FK2'
ALTER TABLE SEIS_PROC_PLAN ADD CONSTRAINT SSPPL_BA_FK2 FOREIGN KEY
(
PLAN_OWNER
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPPP_R_SPO_FK'
ALTER TABLE SEIS_PROC_PLAN_PARM ADD CONSTRAINT SSPPP_R_SPO_FK FOREIGN KEY
(
PARAMETER_ORIGIN
)
REFERENCES R_SEIS_PARM_ORIGIN
(
PARAMETER_ORIGIN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPPP_R_SPP_FK'
ALTER TABLE SEIS_PROC_PLAN_PARM ADD CONSTRAINT SSPPP_R_SPP_FK FOREIGN KEY
(
PARAMETER_TYPE
)
REFERENCES R_SEIS_PROC_PARM
(
PARAMETER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPPP_SSPPS_FK'
ALTER TABLE SEIS_PROC_PLAN_PARM ADD CONSTRAINT SSPPP_SSPPS_FK FOREIGN KEY
(
SEIS_PROC_PLAN_ID,
PROC_PLAN_STEP_ID
)
REFERENCES SEIS_PROC_PLAN_STEP
(
SEIS_PROC_PLAN_ID,
PROC_PLAN_STEP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPPS_R_SSPSN_FK'
ALTER TABLE SEIS_PROC_PLAN_STEP ADD CONSTRAINT SSPPS_R_SSPSN_FK FOREIGN KEY
(
STEP_NAME
)
REFERENCES R_SEIS_PROC_STEP_NAME
(
STEP_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPPS_R_SPRST_FK'
ALTER TABLE SEIS_PROC_PLAN_STEP ADD CONSTRAINT SSPPS_R_SPRST_FK FOREIGN KEY
(
STEP_TYPE
)
REFERENCES R_SEIS_PROC_STEP_TYPE
(
STEP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPPS_SSPPL_FK'
ALTER TABLE SEIS_PROC_PLAN_STEP ADD CONSTRAINT SSPPS_SSPPL_FK FOREIGN KEY
(
SEIS_PROC_PLAN_ID
)
REFERENCES SEIS_PROC_PLAN
(
SEIS_PROC_PLAN_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPRS_BA_FK'
ALTER TABLE SEIS_PROC_SET ADD CONSTRAINT SSPRS_BA_FK FOREIGN KEY
(
PROCESSED_FOR
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPRS_BA_FK2'
ALTER TABLE SEIS_PROC_SET ADD CONSTRAINT SSPRS_BA_FK2 FOREIGN KEY
(
PROCESSING_COMPANY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPRS_R_SPST_FK'
ALTER TABLE SEIS_PROC_SET ADD CONSTRAINT SSPRS_R_SPST_FK FOREIGN KEY
(
PROC_SET_TYPE
)
REFERENCES R_SEIS_PROC_SET_TYPE
(
PROC_SET_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPRS_R_SPS_FK'
ALTER TABLE SEIS_PROC_SET ADD CONSTRAINT SSPRS_R_SPS_FK FOREIGN KEY
(
PROCESS_STATUS
)
REFERENCES R_SEIS_PROC_STATUS
(
PROCESS_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPRS_SS_FK'
ALTER TABLE SEIS_PROC_SET ADD CONSTRAINT SSPRS_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_PROC_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPRS_SSA_FK'
ALTER TABLE SEIS_PROC_SET ADD CONSTRAINT SSPRS_SSA_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_PROC_SET_ID,
AREA_ID,
AREA_TYPE
)
REFERENCES SEIS_SET_AREA
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPS_R_SPS_FK'
ALTER TABLE SEIS_PROC_STEP ADD CONSTRAINT SSPS_R_SPS_FK FOREIGN KEY
(
PROCESS_STATUS
)
REFERENCES R_SEIS_PROC_STATUS
(
PROCESS_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPS_R_SSPSN_FK'
ALTER TABLE SEIS_PROC_STEP ADD CONSTRAINT SSPS_R_SSPSN_FK FOREIGN KEY
(
STEP_NAME
)
REFERENCES R_SEIS_PROC_STEP_NAME
(
STEP_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPS_R_SPRST_FK'
ALTER TABLE SEIS_PROC_STEP ADD CONSTRAINT SSPS_R_SPRST_FK FOREIGN KEY
(
STEP_TYPE
)
REFERENCES R_SEIS_PROC_STEP_TYPE
(
STEP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPS_SSPRS_FK'
ALTER TABLE SEIS_PROC_STEP ADD CONSTRAINT SSPS_SSPRS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_PROC_SET_ID
)
REFERENCES SEIS_PROC_SET
(
SEIS_SET_SUBTYPE,
SEIS_PROC_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPSC_SSPC_FK'
ALTER TABLE SEIS_PROC_STEP_COMPONENT ADD CONSTRAINT SSPSC_SSPC_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_PROC_SET_ID,
COMPONENT_ID
)
REFERENCES SEIS_PROC_COMPONENT
(
SEIS_SET_SUBTYPE,
SEIS_PROC_SET_ID,
COMPONENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSPSC_SSPS_FK'
ALTER TABLE SEIS_PROC_STEP_COMPONENT ADD CONSTRAINT SSPSC_SSPS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_PROC_SET_ID,
PROCESS_STEP_ID
)
REFERENCES SEIS_PROC_STEP
(
SEIS_SET_SUBTYPE,
SEIS_PROC_SET_ID,
PROCESS_STEP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSR_RMII_FK'
ALTER TABLE SEIS_RECORD ADD CONSTRAINT SSR_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSR_R_Q_FK'
ALTER TABLE SEIS_RECORD ADD CONSTRAINT SSR_R_Q_FK FOREIGN KEY
(
RECORD_QUALITY
)
REFERENCES R_QUALITY
(
QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSR_R_SRT1_FK'
ALTER TABLE SEIS_RECORD ADD CONSTRAINT SSR_R_SRT1_FK FOREIGN KEY
(
RECORD_TYPE
)
REFERENCES R_SEIS_RECORD_TYPE
(
RECORD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSR_SSAD_FK'
ALTER TABLE SEIS_RECORD ADD CONSTRAINT SSR_SSAD_FK FOREIGN KEY
(
ACTUAL_ACQTN_DESIGN_ID
)
REFERENCES SEIS_ACQTN_DESIGN
(
ACQTN_DESIGN_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSR_SSPA_FK'
ALTER TABLE SEIS_RECORD ADD CONSTRAINT SSR_SSPA_FK FOREIGN KEY
(
PATCH_ID
)
REFERENCES SEIS_PATCH
(
PATCH_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSR_SSPT_FK'
ALTER TABLE SEIS_RECORD ADD CONSTRAINT SSR_SSPT_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_SHOT_POINT_ID
)
REFERENCES SEIS_POINT
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_POINT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSR_SS_FK'
ALTER TABLE SEIS_RECORD ADD CONSTRAINT SSR_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSR_SSV_FK'
ALTER TABLE SEIS_RECORD ADD CONSTRAINT SSR_SSV_FK FOREIGN KEY
(
VESSEL_SF_SUBTYPE,
VESSEL_ID,
VESSEL_CONFIG_OBS_NO
)
REFERENCES SEIS_VESSEL
(
SF_SUBTYPE,
VESSEL_ID,
VESSEL_CONFIG_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSRM_R_SRT_FK'
ALTER TABLE SEIS_RECVR_MAKE ADD CONSTRAINT SSRM_R_SRT_FK FOREIGN KEY
(
SEIS_RCVR_TYPE
)
REFERENCES R_SEIS_RCVR_TYPE
(
SEIS_RCVR_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSRS_R_DIR_FK'
ALTER TABLE SEIS_RECVR_SETUP ADD CONSTRAINT SSRS_R_DIR_FK FOREIGN KEY
(
INLINE_OFFSET_DIRECTION
)
REFERENCES R_DIRECTION
(
DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSRS_R_DIR_FK2'
ALTER TABLE SEIS_RECVR_SETUP ADD CONSTRAINT SSRS_R_DIR_FK2 FOREIGN KEY
(
OFFLINE_OFFSET_DIRECTION
)
REFERENCES R_DIRECTION
(
DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSRS_R_SRAT_FK'
ALTER TABLE SEIS_RECVR_SETUP ADD CONSTRAINT SSRS_R_SRAT_FK FOREIGN KEY
(
RCVR_ARRAY_TYPE
)
REFERENCES R_SEIS_RCVR_ARRY_TYPE
(
SEIS_RCVR_ARRAY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSRS_R_SRT_FK'
ALTER TABLE SEIS_RECVR_SETUP ADD CONSTRAINT SSRS_R_SRT_FK FOREIGN KEY
(
RCVR_TYPE
)
REFERENCES R_SEIS_RCVR_TYPE
(
SEIS_RCVR_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSRS_SSAD_FK'
ALTER TABLE SEIS_RECVR_SETUP ADD CONSTRAINT SSRS_SSAD_FK FOREIGN KEY
(
ACQTN_DESIGN_ID
)
REFERENCES SEIS_ACQTN_DESIGN
(
ACQTN_DESIGN_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSRS_SSRM_FK'
ALTER TABLE SEIS_RECVR_SETUP ADD CONSTRAINT SSRS_SSRM_FK FOREIGN KEY
(
RCVR_MAKE
)
REFERENCES SEIS_RECVR_MAKE
(
SEIS_RCVR_MAKE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSEG_BA_FK'
ALTER TABLE SEIS_SEGMENT ADD CONSTRAINT SSEG_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSEG_R_SD_FK'
ALTER TABLE SEIS_SEGMENT ADD CONSTRAINT SSEG_R_SD_FK FOREIGN KEY
(
SEIS_DIMENSION
)
REFERENCES R_SEIS_DIMENSION
(
SEIS_DIMENSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSEG_R_SSR_FK'
ALTER TABLE SEIS_SEGMENT ADD CONSTRAINT SSEG_R_SSR_FK FOREIGN KEY
(
SEIS_SEGMENT_REASON
)
REFERENCES R_SEIS_SEGMENT_REASON
(
SEIS_SEGMENT_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSEG_R_SST1_FK'
ALTER TABLE SEIS_SEGMENT ADD CONSTRAINT SSEG_R_SST1_FK FOREIGN KEY
(
SEIS_SPECTRUM_TYPE
)
REFERENCES R_SEIS_SPECTRUM_TYPE
(
SEIS_SPECTRUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSEG_R_SST2_FK'
ALTER TABLE SEIS_SEGMENT ADD CONSTRAINT SSEG_R_SST2_FK FOREIGN KEY
(
SEIS_STATION_TYPE
)
REFERENCES R_SEIS_STATION_TYPE
(
SEIS_STATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSEG_SSL_FK'
ALTER TABLE SEIS_SEGMENT ADD CONSTRAINT SSEG_SSL_FK FOREIGN KEY
(
SEIS_LINE_SET_SUBTYPE,
SEIS_LINE_ID
)
REFERENCES SEIS_LINE
(
SEIS_SET_SUBTYPE,
SEIS_LINE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSEG_SS_FK'
ALTER TABLE SEIS_SEGMENT ADD CONSTRAINT SSEG_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEGMENT_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSEG_SSA_FK'
ALTER TABLE SEIS_SEGMENT ADD CONSTRAINT SSEG_SSA_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEGMENT_ID,
AREA_ID,
AREA_TYPE
)
REFERENCES SEIS_SET_AREA
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SS_CS_FK3'
ALTER TABLE SEIS_SET ADD CONSTRAINT SS_CS_FK3 FOREIGN KEY
(
LOCAL_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SS_CS_FK'
ALTER TABLE SEIS_SET ADD CONSTRAINT SS_CS_FK FOREIGN KEY
(
GEOGRAPHIC_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SS_CS_FK2'
ALTER TABLE SEIS_SET ADD CONSTRAINT SS_CS_FK2 FOREIGN KEY
(
XY_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SS_CSCA_FK'
ALTER TABLE SEIS_SET ADD CONSTRAINT SS_CSCA_FK FOREIGN KEY
(
COORD_ACQUISITION_ID
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SS_FIN_FK'
ALTER TABLE SEIS_SET ADD CONSTRAINT SS_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SS_R_SS2_FK'
ALTER TABLE SEIS_SET ADD CONSTRAINT SS_R_SS2_FK FOREIGN KEY
(
CURRENT_SEIS_STATUS
)
REFERENCES R_SEIS_STATUS
(
SEIS_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SS_SSAD_FK'
ALTER TABLE SEIS_SET ADD CONSTRAINT SS_SSAD_FK FOREIGN KEY
(
ACQTN_DESIGN_ID
)
REFERENCES SEIS_ACQTN_DESIGN
(
ACQTN_DESIGN_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SS_SSA_FK'
ALTER TABLE SEIS_SET ADD CONSTRAINT SS_SSA_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
AREA_ID,
AREA_TYPE
)
REFERENCES SEIS_SET_AREA
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSA_A_FK'
ALTER TABLE SEIS_SET_AREA ADD CONSTRAINT SSA_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSA_SS_FK'
ALTER TABLE SEIS_SET_AREA ADD CONSTRAINT SSA_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSAU_BA_FK'
ALTER TABLE SEIS_SET_AUTHORIZE ADD CONSTRAINT SSAU_BA_FK FOREIGN KEY
(
AUTHORIZED_BY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSAU_BA_FK2'
ALTER TABLE SEIS_SET_AUTHORIZE ADD CONSTRAINT SSAU_BA_FK2 FOREIGN KEY
(
PARTNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSAU_R_SAL_FK'
ALTER TABLE SEIS_SET_AUTHORIZE ADD CONSTRAINT SSAU_R_SAL_FK FOREIGN KEY
(
LIMIT_TYPE
)
REFERENCES R_SEIS_AUTHORIZE_LIMIT
(
LIMIT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSAU_R_SAR_FK'
ALTER TABLE SEIS_SET_AUTHORIZE ADD CONSTRAINT SSAU_R_SAR_FK FOREIGN KEY
(
REASON_TYPE
)
REFERENCES R_SEIS_AUTHORIZE_REASON
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSAU_R_SAT_FK'
ALTER TABLE SEIS_SET_AUTHORIZE ADD CONSTRAINT SSAU_R_SAT_FK FOREIGN KEY
(
AUTHORIZE_TYPE
)
REFERENCES R_SEIS_AUTHORIZE_TYPE
(
AUTHORIZE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSAU_SS_FK'
ALTER TABLE SEIS_SET_AUTHORIZE ADD CONSTRAINT SSAU_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_ANLR_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_APP_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_A_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_BAAU_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_BAE_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_BAO_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_BA_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_CA_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_CEQ_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_CLSL_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_CON_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_CO_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_COT_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_C_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_EZ_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_ENT_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_EQ_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_FAC_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_FLD_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_FIN_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_FOS_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_HI_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_INS_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_INT_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_LR_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_LS_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_LIL_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_NOTI_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_OB_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_PASU_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_PDE_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_PL_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_PSWA_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_PT_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_PS_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_PS_FK FOREIGN KEY
(
PR_STR_UWI,
PR_STR_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_PROJ_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_RATE_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_RSCL_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_RSE_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_RMDSS_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_RMII_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_RMPI_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_RMTW_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_R_SSCT_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_R_SSCT_FK FOREIGN KEY
(
SEIS_SET_COMPONENT_TYPE
)
REFERENCES R_SEIS_SET_COMPONENT_TYPE
(
SEIS_SET_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_SSACT_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_SSACT_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_ACT_OBS_NO
)
REFERENCES SEIS_ACTIVITY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_SSACT_FK2'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_SSACT_FK2 FOREIGN KEY
(
SEIS_ACT_SEIS_SET_SUBTYPE,
SEIS_ACT_SEIS_SET_ID,
SEIS_ACT_OBS_NO
)
REFERENCES SEIS_ACTIVITY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_SS_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_SF_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_SPD_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_STFST_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_STU_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_SUB_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_W_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_WAC_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_WAC_FK FOREIGN KEY
(
WELL_ACT_UWI,
WELL_ACT_SOURCE,
WELL_ACT_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_WSET_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSCMP_WO_FK'
ALTER TABLE SEIS_SET_COMPONENT ADD CONSTRAINT SSCMP_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSJ_BA_FK'
ALTER TABLE SEIS_SET_JURISDICTION ADD CONSTRAINT SSJ_BA_FK FOREIGN KEY
(
JURISDICTION
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSJ_SS_FK'
ALTER TABLE SEIS_SET_JURISDICTION ADD CONSTRAINT SSJ_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSP_SS_FK'
ALTER TABLE SEIS_SET_PLAN ADD CONSTRAINT SSP_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSST_R_SS2_FK'
ALTER TABLE SEIS_SET_STATUS ADD CONSTRAINT SSST_R_SS2_FK FOREIGN KEY
(
SEIS_STATUS
)
REFERENCES R_SEIS_STATUS
(
SEIS_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSST_R_SST3_FK'
ALTER TABLE SEIS_SET_STATUS ADD CONSTRAINT SSST_R_SST3_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_SEIS_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSST_SS_FK'
ALTER TABLE SEIS_SET_STATUS ADD CONSTRAINT SSST_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSS_R_ED_FK'
ALTER TABLE SEIS_SP_SURVEY ADD CONSTRAINT SSS_R_ED_FK FOREIGN KEY
(
EW_DIRECTION
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSS_R_ESL_FK'
ALTER TABLE SEIS_SP_SURVEY ADD CONSTRAINT SSS_R_ESL_FK FOREIGN KEY
(
EW_START_LINE
)
REFERENCES R_EW_START_LINE
(
EW_START_LINE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSS_R_LT1_FK'
ALTER TABLE SEIS_SP_SURVEY ADD CONSTRAINT SSS_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSS_R_N_FK'
ALTER TABLE SEIS_SP_SURVEY ADD CONSTRAINT SSS_R_N_FK FOREIGN KEY
(
NORTH_TYPE
)
REFERENCES R_NORTH
(
NORTH_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSS_R_ND_FK'
ALTER TABLE SEIS_SP_SURVEY ADD CONSTRAINT SSS_R_ND_FK FOREIGN KEY
(
NS_DIRECTION
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSS_R_NSL_FK'
ALTER TABLE SEIS_SP_SURVEY ADD CONSTRAINT SSS_R_NSL_FK FOREIGN KEY
(
NS_START_LINE
)
REFERENCES R_NS_START_LINE
(
NS_START_LINE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSS_R_O_FK'
ALTER TABLE SEIS_SP_SURVEY ADD CONSTRAINT SSS_R_O_FK FOREIGN KEY
(
ORIENTATION
)
REFERENCES R_ORIENTATION
(
ORIENTATION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSS_SSPT_FK'
ALTER TABLE SEIS_SP_SURVEY ADD CONSTRAINT SSS_SSPT_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_POINT_ID
)
REFERENCES SEIS_POINT
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_POINT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSS_SFMO_FK'
ALTER TABLE SEIS_SP_SURVEY ADD CONSTRAINT SSS_SFMO_FK FOREIGN KEY
(
MONUMENT_SF_SUBTYPE,
MONUMENT_ID
)
REFERENCES SF_MONUMENT
(
SF_SUBTYPE,
MONUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSS_WN_FK'
ALTER TABLE SEIS_SP_SURVEY ADD CONSTRAINT SSS_WN_FK FOREIGN KEY
(
WELL_NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SST_R_SCM_FK'
ALTER TABLE SEIS_STREAMER ADD CONSTRAINT SST_R_SCM_FK FOREIGN KEY
(
CABLE_MAKE
)
REFERENCES R_SEIS_CABLE_MAKE
(
CABLE_MAKE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SST_R_SP1_FK'
ALTER TABLE SEIS_STREAMER ADD CONSTRAINT SST_R_SP1_FK FOREIGN KEY
(
STREAMER_POSITION
)
REFERENCES R_STREAMER_POSITION
(
STREAMER_POSITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SST_SSAD_FK'
ALTER TABLE SEIS_STREAMER ADD CONSTRAINT SST_SSAD_FK FOREIGN KEY
(
ACQTN_DESIGN_ID
)
REFERENCES SEIS_ACQTN_DESIGN
(
ACQTN_DESIGN_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SST_SSV_FK'
ALTER TABLE SEIS_STREAMER ADD CONSTRAINT SST_SSV_FK FOREIGN KEY
(
SF_SUBTYPE,
VESSEL_ID,
VESSEL_CONFIG_OBS_NO
)
REFERENCES SEIS_VESSEL
(
SF_SUBTYPE,
VESSEL_ID,
VESSEL_CONFIG_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSB_R_SC_FK'
ALTER TABLE SEIS_STREAMER_BUILD ADD CONSTRAINT SSB_R_SC_FK FOREIGN KEY
(
COMPONENT_TYPE
)
REFERENCES R_STREAMER_COMP
(
COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSB_SST_FK'
ALTER TABLE SEIS_STREAMER_BUILD ADD CONSTRAINT SSB_SST_FK FOREIGN KEY
(
STREAMER_ID
)
REFERENCES SEIS_STREAMER
(
STREAMER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSC_R_SC_FK'
ALTER TABLE SEIS_STREAMER_COMP ADD CONSTRAINT SSC_R_SC_FK FOREIGN KEY
(
COMPONENT_TYPE
)
REFERENCES R_STREAMER_COMP
(
COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSC_SST_FK'
ALTER TABLE SEIS_STREAMER_COMP ADD CONSTRAINT SSC_SST_FK FOREIGN KEY
(
STREAMER_ID
)
REFERENCES SEIS_STREAMER
(
STREAMER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTR_R_TS1_FK'
ALTER TABLE SEIS_TRANSACTION ADD CONSTRAINT SSTR_R_TS1_FK FOREIGN KEY
(
TRANSACTION_STATUS
)
REFERENCES R_TRANS_STATUS
(
TRANSACTION_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTR_R_TT3_FK'
ALTER TABLE SEIS_TRANSACTION ADD CONSTRAINT SSTR_R_TT3_FK FOREIGN KEY
(
TRANSACTION_TYPE
)
REFERENCES R_TRANS_TYPE
(
TRANS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_ANLR_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_APP_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_A_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_BAAU_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_BAE_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_BAO_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_BA_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_CA_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_CEQ_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_CLSL_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_CON_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_CO_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_COT_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_C_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_EZ_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_ENT_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_EQ_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_FAC_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_FLD_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_FIN_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_FOS_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_HI_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_INS_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_INT_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_LR_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_LS_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_LIL_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_NOTI_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_OB_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_PASU_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_PDE_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_PL_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_PSWA_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_PSYS_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_PT_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_PS_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_PROJ_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_RATE_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_RSCL_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_RSE_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_RMCI_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_RMCI_FK FOREIGN KEY
(
CIRC_ID
)
REFERENCES RM_CIRCULATION
(
CIRC_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_RMDSS_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_RMII_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_RMPI_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_RMTW_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_R_TCT_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_R_TCT_FK FOREIGN KEY
(
COMPONENT_TYPE
)
REFERENCES R_TRANS_COMP_TYPE
(
TRANS_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_R_TS1_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_R_TS1_FK FOREIGN KEY
(
TRANSACTION_STATUS
)
REFERENCES R_TRANS_STATUS
(
TRANSACTION_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_SSI_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_SSI_FK FOREIGN KEY
(
INSPECTION_ID
)
REFERENCES SEIS_INSPECTION
(
INSPECTION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_SS_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_SSAU_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_SSAU_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
AUTHORIZE_ID
)
REFERENCES SEIS_SET_AUTHORIZE
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
AUTHORIZE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_SSTR_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_SSTR_FK FOREIGN KEY
(
SEIS_TRANSACTION_ID,
TRANSACTION_TYPE
)
REFERENCES SEIS_TRANSACTION
(
SEIS_TRANSACTION_ID,
TRANSACTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_SF_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_SPD_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_STFST_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_STU_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_SUB_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_W_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_WAC_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_WAC_FK FOREIGN KEY
(
UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_WSET_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSTC_WO_FK'
ALTER TABLE SEIS_TRANS_COMPONENT ADD CONSTRAINT SSTC_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSVL_R_VC_FK'
ALTER TABLE SEIS_VELOCITY ADD CONSTRAINT SSVL_R_VC_FK FOREIGN KEY
(
COMPUTE_METHOD
)
REFERENCES R_VELOCITY_COMPUTE
(
COMPUTE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSVL_R_VT_FK'
ALTER TABLE SEIS_VELOCITY ADD CONSTRAINT SSVL_R_VT_FK FOREIGN KEY
(
VELOCITY_TYPE
)
REFERENCES R_VELOCITY_TYPE
(
VELOCITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSVL_SSBP_FK'
ALTER TABLE SEIS_VELOCITY ADD CONSTRAINT SSVL_SSBP_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
BIN_GRID_ID,
BIN_SOURCE,
BIN_POINT_ID
)
REFERENCES SEIS_BIN_POINT
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
BIN_GRID_ID,
BIN_GRID_SOURCE,
BIN_POINT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSVL_SSPT_FK'
ALTER TABLE SEIS_VELOCITY ADD CONSTRAINT SSVL_SSPT_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_POINT_ID
)
REFERENCES SEIS_POINT
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_POINT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSVL_SSVV_FK'
ALTER TABLE SEIS_VELOCITY ADD CONSTRAINT SSVL_SSVV_FK FOREIGN KEY
(
VELOCITY_VOLUME_ID
)
REFERENCES SEIS_VELOCITY_VOLUME
(
VELOCITY_VOLUME_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSVL_SSW_FK'
ALTER TABLE SEIS_VELOCITY ADD CONSTRAINT SSVL_SSW_FK FOREIGN KEY
(
SEIS_WELL_SET_ID,
SEIS_WELL_SET_SUBTYPE
)
REFERENCES SEIS_WELL
(
SEIS_SET_ID,
SEIS_SET_SUBTYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSVI_R_Q_FK'
ALTER TABLE SEIS_VELOCITY_INTERVAL ADD CONSTRAINT SSVI_R_Q_FK FOREIGN KEY
(
VELOCITY_QUALITY
)
REFERENCES R_QUALITY
(
QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSVI_R_VT_FK'
ALTER TABLE SEIS_VELOCITY_INTERVAL ADD CONSTRAINT SSVI_R_VT_FK FOREIGN KEY
(
VELOCITY_TYPE
)
REFERENCES R_VELOCITY_TYPE
(
VELOCITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSVI_SSW_FK'
ALTER TABLE SEIS_VELOCITY_INTERVAL ADD CONSTRAINT SSVI_SSW_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_WELL
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSVI_STU_FK'
ALTER TABLE SEIS_VELOCITY_INTERVAL ADD CONSTRAINT SSVI_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
BASE_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSVI_STU_FK2'
ALTER TABLE SEIS_VELOCITY_INTERVAL ADD CONSTRAINT SSVI_STU_FK2 FOREIGN KEY
(
STRAT_NAME_SET_ID,
TOP_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSVI_W_FK'
ALTER TABLE SEIS_VELOCITY_INTERVAL ADD CONSTRAINT SSVI_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSVV_BA_FK'
ALTER TABLE SEIS_VELOCITY_VOLUME ADD CONSTRAINT SSVV_BA_FK FOREIGN KEY
(
PICKED_BY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSVV_R_VD_FK'
ALTER TABLE SEIS_VELOCITY_VOLUME ADD CONSTRAINT SSVV_R_VD_FK FOREIGN KEY
(
VELOCITY_DIMENSION
)
REFERENCES R_VELOCITY_DIMENSION
(
VELOCITY_DIMENSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSVV_SSBG_FK'
ALTER TABLE SEIS_VELOCITY_VOLUME ADD CONSTRAINT SSVV_SSBG_FK FOREIGN KEY
(
BIN_GRID_SEIS_SET_SUBTYPE,
BIN_GRID_SEIS_SET_ID,
BIN_GRID_ID,
BIN_GRID_SOURCE
)
REFERENCES SEIS_BIN_GRID
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
BIN_GRID_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSVV_SSW_FK'
ALTER TABLE SEIS_VELOCITY_VOLUME ADD CONSTRAINT SSVV_SSW_FK FOREIGN KEY
(
SEIS_WELL_SET_ID,
SEIS_WELL_SET_SUBTYPE
)
REFERENCES SEIS_WELL
(
SEIS_SET_ID,
SEIS_SET_SUBTYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSV_R_VR_FK'
ALTER TABLE SEIS_VESSEL ADD CONSTRAINT SSV_R_VR_FK FOREIGN KEY
(
REFERENCE_POINT
)
REFERENCES R_VESSEL_REFERENCE
(
REFERENCE_POINT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSV_SSAD_FK'
ALTER TABLE SEIS_VESSEL ADD CONSTRAINT SSV_SSAD_FK FOREIGN KEY
(
ACQTN_DESIGN_ID
)
REFERENCES SEIS_ACQTN_DESIGN
(
ACQTN_DESIGN_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSV_SFV_FK'
ALTER TABLE SEIS_VESSEL ADD CONSTRAINT SSV_SFV_FK FOREIGN KEY
(
SF_SUBTYPE,
VESSEL_ID
)
REFERENCES SF_VESSEL
(
SF_SUBTYPE,
VESSEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSW_R_CST_FK'
ALTER TABLE SEIS_WELL ADD CONSTRAINT SSW_R_CST_FK FOREIGN KEY
(
CHECKSHOT_SURVEY_TYPE
)
REFERENCES R_CHECKSHOT_SRVY_TYPE
(
CHECKSHOT_SURVEY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSW_R_SP_FK'
ALTER TABLE SEIS_WELL ADD CONSTRAINT SSW_R_SP_FK FOREIGN KEY
(
SEISMIC_PATH
)
REFERENCES R_SEISMIC_PATH
(
SEISMIC_PATH
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSW_R_VT1_FK'
ALTER TABLE SEIS_WELL ADD CONSTRAINT SSW_R_VT1_FK FOREIGN KEY
(
VSP_TYPE
)
REFERENCES R_VSP_TYPE
(
VSP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSW_R_WDT_FK'
ALTER TABLE SEIS_WELL ADD CONSTRAINT SSW_R_WDT_FK FOREIGN KEY
(
DEPTH_DATUM
)
REFERENCES R_WELL_DATUM_TYPE
(
WELL_DATUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSW_SS_FK'
ALTER TABLE SEIS_WELL ADD CONSTRAINT SSW_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSW_W_FK'
ALTER TABLE SEIS_WELL ADD CONSTRAINT SSW_W_FK FOREIGN KEY
(
SOURCE_UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSW_W_FK2'
ALTER TABLE SEIS_WELL ADD CONSTRAINT SSW_W_FK2 FOREIGN KEY
(
RECEIVER_UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SSW_WDS_FK'
ALTER TABLE SEIS_WELL ADD CONSTRAINT SSW_WDS_FK FOREIGN KEY
(
DIR_SURVEY_UWI,
DIR_SURVEY_ID,
DIR_SURVEY_SOURCE
)
REFERENCES WELL_DIR_SRVY
(
UWI,
SURVEY_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFAC_R_ACT1_FK'
ALTER TABLE SF_AIRCRAFT ADD CONSTRAINT SFAC_R_ACT1_FK FOREIGN KEY
(
AIRCRAFT_TYPE
)
REFERENCES R_AIRCRAFT_TYPE
(
AIRCRAFT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFAC_SF_FK'
ALTER TABLE SF_AIRCRAFT ADD CONSTRAINT SFAC_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFAS_R_SFAT_FK'
ALTER TABLE SF_AIRSTRIP ADD CONSTRAINT SFAS_R_SFAT_FK FOREIGN KEY
(
AIRSTRIP_TYPE
)
REFERENCES R_SF_AIRSTRIP_TYPE
(
AIRSTRIP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFAS_R_SFST1_FK'
ALTER TABLE SF_AIRSTRIP ADD CONSTRAINT SFAS_R_SFST1_FK FOREIGN KEY
(
SURFACE_TYPE
)
REFERENCES R_SF_SURFACE_TYPE
(
SURFACE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFAS_SF_FK'
ALTER TABLE SF_AIRSTRIP ADD CONSTRAINT SFAS_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFAL_BA_FK'
ALTER TABLE SF_ALIAS ADD CONSTRAINT SFAL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFAL_PSWA_FK'
ALTER TABLE SF_ALIAS ADD CONSTRAINT SFAL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFAL_R_ART_FK'
ALTER TABLE SF_ALIAS ADD CONSTRAINT SFAL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFAL_R_ATY_FK'
ALTER TABLE SF_ALIAS ADD CONSTRAINT SFAL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFAL_R_LANG_FK'
ALTER TABLE SF_ALIAS ADD CONSTRAINT SFAL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFAL_SF_FK'
ALTER TABLE SF_ALIAS ADD CONSTRAINT SFAL_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFAL_SRCD_FK'
ALTER TABLE SF_ALIAS ADD CONSTRAINT SFAL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFA_A_FK'
ALTER TABLE SF_AREA ADD CONSTRAINT SFA_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFA_SF_FK'
ALTER TABLE SF_AREA ADD CONSTRAINT SFA_SF_FK FOREIGN KEY
(
SUPPORT_FACILITY_ID,
SF_SUBTYPE
)
REFERENCES SF_SUPPORT_FACILITY
(
SUPPORT_FACILITY_ID,
SF_SUBTYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFBC_BAC_FK'
ALTER TABLE SF_BA_CREW ADD CONSTRAINT SFBC_BAC_FK FOREIGN KEY
(
CREW_COMPANY_BA_ID,
CREW_ID
)
REFERENCES BA_CREW
(
CREW_COMPANY_BA_ID,
CREW_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFBC_SF_FK'
ALTER TABLE SF_BA_CREW ADD CONSTRAINT SFBC_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFBS_BA_FK'
ALTER TABLE SF_BA_SERVICE ADD CONSTRAINT SFBS_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFBS_BA_FK2'
ALTER TABLE SF_BA_SERVICE ADD CONSTRAINT SFBS_BA_FK2 FOREIGN KEY
(
REPRESENTED_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFBS_BA_FK3'
ALTER TABLE SF_BA_SERVICE ADD CONSTRAINT SFBS_BA_FK3 FOREIGN KEY
(
CONTACT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFBS_C_FK'
ALTER TABLE SF_BA_SERVICE ADD CONSTRAINT SFBS_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFBS_CP_FK'
ALTER TABLE SF_BA_SERVICE ADD CONSTRAINT SFBS_CP_FK FOREIGN KEY
(
CONTRACT_ID,
PROVISION_ID
)
REFERENCES CONT_PROVISION
(
CONTRACT_ID,
PROVISION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFBS_RATE_FK'
ALTER TABLE SF_BA_SERVICE ADD CONSTRAINT SFBS_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFBS_R_BST_FK'
ALTER TABLE SF_BA_SERVICE ADD CONSTRAINT SFBS_R_BST_FK FOREIGN KEY
(
BA_SERVICE_TYPE
)
REFERENCES R_BA_SERVICE_TYPE
(
BA_SERVICE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFBS_R_SQ_FK'
ALTER TABLE SF_BA_SERVICE ADD CONSTRAINT SFBS_R_SQ_FK FOREIGN KEY
(
SERVICE_QUALITY
)
REFERENCES R_SERVICE_QUALITY
(
SERVICE_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFBS_SF_FK'
ALTER TABLE SF_BA_SERVICE ADD CONSTRAINT SFBS_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFB_R_SFBT_FK'
ALTER TABLE SF_BRIDGE ADD CONSTRAINT SFB_R_SFBT_FK FOREIGN KEY
(
BRIDGE_TYPE
)
REFERENCES R_SF_BRIDGE_TYPE
(
BRIDGE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFB_R_SFST1_FK'
ALTER TABLE SF_BRIDGE ADD CONSTRAINT SFB_R_SFST1_FK FOREIGN KEY
(
SURFACE_TYPE
)
REFERENCES R_SF_SURFACE_TYPE
(
SURFACE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFB_SF_FK'
ALTER TABLE SF_BRIDGE ADD CONSTRAINT SFB_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
BRIDGE_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_A_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_BALIC_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_BALIC_FK FOREIGN KEY
(
BA_LICENSEE_BA_ID,
BA_LICENSE_ID
)
REFERENCES BA_LICENSE
(
LICENSEE_BA_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_BA_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_CON_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_CO_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_COT_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_C_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_FAC_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_FACL_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_FACL_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE,
FACILITY_LICENSE_ID
)
REFERENCES FACILITY_LICENSE
(
FACILITY_ID,
FACILITY_TYPE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_FLD_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_FIN_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_HI_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_HI_FK FOREIGN KEY
(
HSE_INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_INS_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_INT_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_LR_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_LS_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_LS_FK FOREIGN KEY
(
LAND_SALE_JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_OB_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_PDE_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_PL_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_PSWA_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_PT_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_PS_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_PSF_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_PSF_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID,
PR_STR_FORM_OBS_NO
)
REFERENCES PROD_STRING_FORMATION
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_PROJ_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_RATE_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_RMII_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_R_SFCT_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_R_SFCT_FK FOREIGN KEY
(
SF_COMPONENT_TYPE
)
REFERENCES R_SF_COMPONENT_TYPE
(
SF_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_SLIC_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_SLIC_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_LICENSE_ID
)
REFERENCES SEIS_LICENSE
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_SS_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_SF_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_SRCD_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_STFST_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_W_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_WLIC_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_WLIC_FK FOREIGN KEY
(
UWI,
WELL_LICENSE_SOURCE,
WELL_LICENSE_ID
)
REFERENCES WELL_LICENSE
(
UWI,
SOURCE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_WSET_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFCOM_WO_FK'
ALTER TABLE SF_COMPONENT ADD CONSTRAINT SFCOM_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFDE_R_SFDT1_FK'
ALTER TABLE SF_DESCRIPTION ADD CONSTRAINT SFDE_R_SFDT1_FK FOREIGN KEY
(
DESC_TYPE
)
REFERENCES R_SF_DESC_TYPE
(
DESC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFDE_R_SFDV_FK'
ALTER TABLE SF_DESCRIPTION ADD CONSTRAINT SFDE_R_SFDV_FK FOREIGN KEY
(
DESC_TYPE,
DESC_VALUE_CODE
)
REFERENCES R_SF_DESC_VALUE
(
DESC_TYPE,
VALUE_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFDE_SF_FK'
ALTER TABLE SF_DESCRIPTION ADD CONSTRAINT SFDE_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFDDI_SF_FK'
ALTER TABLE SF_DISPOSAL ADD CONSTRAINT SFDDI_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFD_R_SFDT_FK'
ALTER TABLE SF_DOCK ADD CONSTRAINT SFD_R_SFDT_FK FOREIGN KEY
(
DOCK_TYPE
)
REFERENCES R_SF_DOCK_TYPE
(
DOCK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFD_R_SFST1_FK'
ALTER TABLE SF_DOCK ADD CONSTRAINT SFD_R_SFST1_FK FOREIGN KEY
(
SURFACE_TYPE
)
REFERENCES R_SF_SURFACE_TYPE
(
SURFACE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFD_SF_FK'
ALTER TABLE SF_DOCK ADD CONSTRAINT SFD_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
DOCK_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFE_R_SFET_FK'
ALTER TABLE SF_ELECTRIC ADD CONSTRAINT SFE_R_SFET_FK FOREIGN KEY
(
ELECTRIC_FACILITY_TYPE
)
REFERENCES R_SF_ELECTRIC_TYPE
(
ELECTRIC_FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFE_SF_FK'
ALTER TABLE SF_ELECTRIC ADD CONSTRAINT SFE_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFEQ_CEQ_FK'
ALTER TABLE SF_EQUIPMENT ADD CONSTRAINT SFEQ_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFEQ_EQ_FK'
ALTER TABLE SF_EQUIPMENT ADD CONSTRAINT SFEQ_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFEQ_SF_FK'
ALTER TABLE SF_EQUIPMENT ADD CONSTRAINT SFEQ_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFH_SF_FK'
ALTER TABLE SF_HABITAT ADD CONSTRAINT SFH_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFL_R_SFLT_FK'
ALTER TABLE SF_LANDING ADD CONSTRAINT SFL_R_SFLT_FK FOREIGN KEY
(
LANDING_TYPE
)
REFERENCES R_SF_LANDING_TYPE
(
LANDING_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFL_R_SFST1_FK'
ALTER TABLE SF_LANDING ADD CONSTRAINT SFL_R_SFST1_FK FOREIGN KEY
(
SURFACE_TYPE
)
REFERENCES R_SF_SURFACE_TYPE
(
SURFACE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFL_SFA_FK'
ALTER TABLE SF_LANDING ADD CONSTRAINT SFL_SFA_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID,
AREA_ID,
AREA_TYPE
)
REFERENCES SF_AREA
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID,
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFL_SF_FK'
ALTER TABLE SF_LANDING ADD CONSTRAINT SFL_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFM_BA_FK'
ALTER TABLE SF_MAINTAIN ADD CONSTRAINT SFM_BA_FK FOREIGN KEY
(
MAINTAIN_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFM_R_SFMT_FK'
ALTER TABLE SF_MAINTAIN ADD CONSTRAINT SFM_R_SFMT_FK FOREIGN KEY
(
SF_SUBTYPE,
MAINTAIN_TYPE
)
REFERENCES R_SF_MAINTAIN_TYPE
(
SF_SUBTYPE,
MAINTAIN_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFM_SF_FK'
ALTER TABLE SF_MAINTAIN ADD CONSTRAINT SFM_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFMO_CS_FK2'
ALTER TABLE SF_MONUMENT ADD CONSTRAINT SFMO_CS_FK2 FOREIGN KEY
(
VERT_COORD_SYSTEM
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFMO_CS_FK3'
ALTER TABLE SF_MONUMENT ADD CONSTRAINT SFMO_CS_FK3 FOREIGN KEY
(
LOCAL_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFMO_CS_FK'
ALTER TABLE SF_MONUMENT ADD CONSTRAINT SFMO_CS_FK FOREIGN KEY
(
HORIZ_COORD_SYSTEM
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFMO_CSCA_FK'
ALTER TABLE SF_MONUMENT ADD CONSTRAINT SFMO_CSCA_FK FOREIGN KEY
(
COORD_ACQUISITION_ID
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFMO_R_LT1_FK'
ALTER TABLE SF_MONUMENT ADD CONSTRAINT SFMO_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFMO_SF_FK'
ALTER TABLE SF_MONUMENT ADD CONSTRAINT SFMO_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
MONUMENT_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFMO_SRCD_FK'
ALTER TABLE SF_MONUMENT ADD CONSTRAINT SFMO_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFO_SF_FK'
ALTER TABLE SF_OTHER ADD CONSTRAINT SFO_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFP_R_SFPT_FK'
ALTER TABLE SF_PAD ADD CONSTRAINT SFP_R_SFPT_FK FOREIGN KEY
(
PAD_TYPE
)
REFERENCES R_SF_PAD_TYPE
(
PAD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFP_SF_FK'
ALTER TABLE SF_PAD ADD CONSTRAINT SFP_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
PAD_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFPL_R_PT5_FK'
ALTER TABLE SF_PLATFORM ADD CONSTRAINT SFPL_R_PT5_FK FOREIGN KEY
(
PLATFORM_TYPE
)
REFERENCES R_PLATFORM_TYPE
(
PLATFORM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFPL_SF_FK'
ALTER TABLE SF_PLATFORM ADD CONSTRAINT SFPL_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
PLATFORM_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFPT_SF_FK'
ALTER TABLE SF_PORT ADD CONSTRAINT SFPT_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRR_SF_FK'
ALTER TABLE SF_RAILWAY ADD CONSTRAINT SFRR_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
RAILWAY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFREST_REST_FK'
ALTER TABLE SF_RESTRICTION ADD CONSTRAINT SFREST_REST_FK FOREIGN KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION
)
REFERENCES RESTRICTION
(
RESTRICTION_ID,
RESTRICTION_VERSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFREST_SF_FK'
ALTER TABLE SF_RESTRICTION ADD CONSTRAINT SFREST_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRESTR_R_RR_FK'
ALTER TABLE SF_REST_REMARK ADD CONSTRAINT SFRESTR_R_RR_FK FOREIGN KEY
(
RESTRICTION_REMARK_TYPE
)
REFERENCES R_REST_REMARK
(
RESTRICTION_REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRESTR_SFREST_FK'
ALTER TABLE SF_REST_REMARK ADD CONSTRAINT SFRESTR_SFREST_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID,
RESTRICTION_ID,
RESTRICTION_VERSION
)
REFERENCES SF_RESTRICTION
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID,
RESTRICTION_ID,
RESTRICTION_VERSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRIG_BA_FK2'
ALTER TABLE SF_RIG ADD CONSTRAINT SFRIG_BA_FK2 FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRIG_BA_FK'
ALTER TABLE SF_RIG ADD CONSTRAINT SFRIG_BA_FK FOREIGN KEY
(
OPERATOR_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRIG_R_RIGC_FK'
ALTER TABLE SF_RIG ADD CONSTRAINT SFRIG_R_RIGC_FK FOREIGN KEY
(
RIG_CATEGORY
)
REFERENCES R_RIG_CATEGORY
(
RIG_CATEGORY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRIG_R_RCL_FK'
ALTER TABLE SF_RIG ADD CONSTRAINT SFRIG_R_RCL_FK FOREIGN KEY
(
RIG_CLASS
)
REFERENCES R_RIG_CLASS
(
RIG_CLASS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRIG_R_RC_FK'
ALTER TABLE SF_RIG ADD CONSTRAINT SFRIG_R_RC_FK FOREIGN KEY
(
RIG_CODE
)
REFERENCES R_RIG_CODE
(
RIG_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRIG_R_RDST_FK'
ALTER TABLE SF_RIG ADD CONSTRAINT SFRIG_R_RDST_FK FOREIGN KEY
(
DESANDER_TYPE
)
REFERENCES R_RIG_DESANDER_TYPE
(
DESANDER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRIG_R_RDT_FK'
ALTER TABLE SF_RIG ADD CONSTRAINT SFRIG_R_RDT_FK FOREIGN KEY
(
DESILTER_TYPE
)
REFERENCES R_RIG_DESILTER_TYPE
(
DESILTER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRIG_R_RDW_FK'
ALTER TABLE SF_RIG ADD CONSTRAINT SFRIG_R_RDW_FK FOREIGN KEY
(
DRAWWORKS_TYPE
)
REFERENCES R_RIG_DRAWWORKS
(
DRAWWORKS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRIG_R_HBT_FK'
ALTER TABLE SF_RIG ADD CONSTRAINT SFRIG_R_HBT_FK FOREIGN KEY
(
HOOKBLOCK_TYPE
)
REFERENCES R_RIG_HOOKBLOCK_TYPE
(
HOOKBLOCK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRIG_R_RMT_FK'
ALTER TABLE SF_RIG ADD CONSTRAINT SFRIG_R_RMT_FK FOREIGN KEY
(
MAST_TYPE
)
REFERENCES R_RIG_MAST
(
MAST_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRIG_R_RSST_FK'
ALTER TABLE SF_RIG ADD CONSTRAINT SFRIG_R_RSST_FK FOREIGN KEY
(
SUBSTRUCTURE_TYPE
)
REFERENCES R_RIG_SUBSTRUCTURE
(
SUBSTRUCTURE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRIG_R_RST_FK'
ALTER TABLE SF_RIG ADD CONSTRAINT SFRIG_R_RST_FK FOREIGN KEY
(
SWIVEL_TYPE
)
REFERENCES R_RIG_SWIVEL_TYPE
(
SWIVEL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRIG_R_RT4_FK'
ALTER TABLE SF_RIG ADD CONSTRAINT SFRIG_R_RT4_FK FOREIGN KEY
(
RIG_TYPE
)
REFERENCES R_RIG_TYPE
(
RIG_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRIG_SF_FK'
ALTER TABLE SF_RIG ADD CONSTRAINT SFRIG_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
RIG_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRB_CEQ_FK'
ALTER TABLE SF_RIG_BOP ADD CONSTRAINT SFRB_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRB_EQ_FK'
ALTER TABLE SF_RIG_BOP ADD CONSTRAINT SFRB_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRB_R_INT_FK'
ALTER TABLE SF_RIG_BOP ADD CONSTRAINT SFRB_R_INT_FK FOREIGN KEY
(
INPUT_TYPE
)
REFERENCES R_INPUT_TYPE
(
INPUT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRB_R_RBOP_FK'
ALTER TABLE SF_RIG_BOP ADD CONSTRAINT SFRB_R_RBOP_FK FOREIGN KEY
(
BOP_TYPE
)
REFERENCES R_RIG_BLOWOUT_PREVENTER
(
BLOWOUT_PREVENTER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRB_SFRIG_FK'
ALTER TABLE SF_RIG_BOP ADD CONSTRAINT SFRB_SFRIG_FK FOREIGN KEY
(
SF_SUBTYPE,
RIG_ID
)
REFERENCES SF_RIG
(
SF_SUBTYPE,
RIG_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRG_CEQ_FK'
ALTER TABLE SF_RIG_GENERATOR ADD CONSTRAINT SFRG_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRG_EQ_FK'
ALTER TABLE SF_RIG_GENERATOR ADD CONSTRAINT SFRG_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRG_R_INT_FK'
ALTER TABLE SF_RIG_GENERATOR ADD CONSTRAINT SFRG_R_INT_FK FOREIGN KEY
(
INPUT_TYPE
)
REFERENCES R_INPUT_TYPE
(
INPUT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRG_R_RGT1_FK'
ALTER TABLE SF_RIG_GENERATOR ADD CONSTRAINT SFRG_R_RGT1_FK FOREIGN KEY
(
GENERATOR_TYPE
)
REFERENCES R_RIG_GENERATOR_TYPE
(
PLANT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRG_SFRIG_FK'
ALTER TABLE SF_RIG_GENERATOR ADD CONSTRAINT SFRG_SFRIG_FK FOREIGN KEY
(
SF_SUBTYPE,
RIG_ID
)
REFERENCES SF_RIG
(
SF_SUBTYPE,
RIG_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFROE_CEQ_FK'
ALTER TABLE SF_RIG_OVERHEAD_EQUIP ADD CONSTRAINT SFROE_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFROE_EQ_FK'
ALTER TABLE SF_RIG_OVERHEAD_EQUIP ADD CONSTRAINT SFROE_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFROE_R_INT_FK'
ALTER TABLE SF_RIG_OVERHEAD_EQUIP ADD CONSTRAINT SFROE_R_INT_FK FOREIGN KEY
(
INPUT_TYPE
)
REFERENCES R_INPUT_TYPE
(
INPUT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFROE_R_ROCT_FK'
ALTER TABLE SF_RIG_OVERHEAD_EQUIP ADD CONSTRAINT SFROE_R_ROCT_FK FOREIGN KEY
(
CAPACITY_TYPE
)
REFERENCES R_RIG_OVERHEAD_CAPACITY
(
CAPACITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFROE_R_ROT_FK'
ALTER TABLE SF_RIG_OVERHEAD_EQUIP ADD CONSTRAINT SFROE_R_ROT_FK FOREIGN KEY
(
OVERHEAD_EQUIP_TYPE
)
REFERENCES R_RIG_OVERHEAD_TYPE
(
OVERHEAD_EQUIP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFROE_SFRIG_FK'
ALTER TABLE SF_RIG_OVERHEAD_EQUIP ADD CONSTRAINT SFROE_SFRIG_FK FOREIGN KEY
(
SF_SUBTYPE,
RIG_ID
)
REFERENCES SF_RIG
(
SF_SUBTYPE,
RIG_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRP_CEQ_FK'
ALTER TABLE SF_RIG_PUMP ADD CONSTRAINT SFRP_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRP_EQ_FK'
ALTER TABLE SF_RIG_PUMP ADD CONSTRAINT SFRP_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRP_R_INT_FK'
ALTER TABLE SF_RIG_PUMP ADD CONSTRAINT SFRP_R_INT_FK FOREIGN KEY
(
INPUT_TYPE
)
REFERENCES R_INPUT_TYPE
(
INPUT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRP_R_RPU_FK'
ALTER TABLE SF_RIG_PUMP ADD CONSTRAINT SFRP_R_RPU_FK FOREIGN KEY
(
PUMP_TYPE
)
REFERENCES R_RIG_PUMP
(
PUMP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRP_R_RPF_FK'
ALTER TABLE SF_RIG_PUMP ADD CONSTRAINT SFRP_R_RPF_FK FOREIGN KEY
(
PUMP_FUNCTION
)
REFERENCES R_RIG_PUMP_FUNCTION
(
PUMP_FUNCTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRP_SFRIG_FK'
ALTER TABLE SF_RIG_PUMP ADD CONSTRAINT SFRP_SFRIG_FK FOREIGN KEY
(
SF_SUBTYPE,
RIG_ID
)
REFERENCES SF_RIG
(
SF_SUBTYPE,
RIG_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRS_CEQ_FK'
ALTER TABLE SF_RIG_SHAKER ADD CONSTRAINT SFRS_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRS_EQ_FK'
ALTER TABLE SF_RIG_SHAKER ADD CONSTRAINT SFRS_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRS_R_INT_FK'
ALTER TABLE SF_RIG_SHAKER ADD CONSTRAINT SFRS_R_INT_FK FOREIGN KEY
(
INPUT_TYPE
)
REFERENCES R_INPUT_TYPE
(
INPUT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFRS_SFRIG_FK'
ALTER TABLE SF_RIG_SHAKER ADD CONSTRAINT SFRS_SFRIG_FK FOREIGN KEY
(
SF_SUBTYPE,
RIG_ID
)
REFERENCES SF_RIG
(
SF_SUBTYPE,
RIG_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFR_BA_FK'
ALTER TABLE SF_ROAD ADD CONSTRAINT SFR_BA_FK FOREIGN KEY
(
CURRENT_OPERATOR_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFR_R_DIR_FK'
ALTER TABLE SF_ROAD ADD CONSTRAINT SFR_R_DIR_FK FOREIGN KEY
(
DIRECTION
)
REFERENCES R_DIRECTION
(
DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFR_R_RCT1_FK'
ALTER TABLE SF_ROAD ADD CONSTRAINT SFR_R_RCT1_FK FOREIGN KEY
(
CONTROL_TYPE
)
REFERENCES R_ROAD_CONTROL_TYPE
(
CONTROL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFR_R_RDS_FK'
ALTER TABLE SF_ROAD ADD CONSTRAINT SFR_R_RDS_FK FOREIGN KEY
(
DRIVING_SIDE
)
REFERENCES R_ROAD_DRIVING_SIDE
(
DRIVING_SIDE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFR_R_RDTF_FK'
ALTER TABLE SF_ROAD ADD CONSTRAINT SFR_R_RDTF_FK FOREIGN KEY
(
TRAFFIC_FLOW_TYPE
)
REFERENCES R_ROAD_TRAFFIC_FLOW_TYPE
(
TRAFFIC_FLOW_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFR_R_SFRT_FK'
ALTER TABLE SF_ROAD ADD CONSTRAINT SFR_R_SFRT_FK FOREIGN KEY
(
ROAD_TYPE
)
REFERENCES R_SF_ROAD_TYPE
(
ROAD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFR_R_SFST1_FK'
ALTER TABLE SF_ROAD ADD CONSTRAINT SFR_R_SFST1_FK FOREIGN KEY
(
SURFACE_TYPE
)
REFERENCES R_SF_SURFACE_TYPE
(
SURFACE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFR_SF_FK'
ALTER TABLE SF_ROAD ADD CONSTRAINT SFR_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
ROAD_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFST_R_SFS_FK'
ALTER TABLE SF_STATUS ADD CONSTRAINT SFST_R_SFS_FK FOREIGN KEY
(
STATUS
)
REFERENCES R_SF_STATUS
(
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFST_R_SFST_FK'
ALTER TABLE SF_STATUS ADD CONSTRAINT SFST_R_SFST_FK FOREIGN KEY
(
STATUS_TYPE
)
REFERENCES R_SF_STATUS_TYPE
(
STATUS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFST_SF_FK'
ALTER TABLE SF_STATUS ADD CONSTRAINT SFST_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFT_R_SFTT_FK'
ALTER TABLE SF_TOWER ADD CONSTRAINT SFT_R_SFTT_FK FOREIGN KEY
(
TOWER_TYPE
)
REFERENCES R_SF_TOWER_TYPE
(
TOWER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFT_SF_FK'
ALTER TABLE SF_TOWER ADD CONSTRAINT SFT_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
TOWER_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFVH_BA_FK'
ALTER TABLE SF_VEHICLE ADD CONSTRAINT SFVH_BA_FK FOREIGN KEY
(
CURRENT_OWNER
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFVH_BA_FK2'
ALTER TABLE SF_VEHICLE ADD CONSTRAINT SFVH_BA_FK2 FOREIGN KEY
(
LICENSE_REGISTER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFVH_R_SVT_FK'
ALTER TABLE SF_VEHICLE ADD CONSTRAINT SFVH_R_SVT_FK FOREIGN KEY
(
VEHICLE_TYPE
)
REFERENCES R_SF_VEHICLE_TYPE
(
VEHICLE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFVH_SF_FK'
ALTER TABLE SF_VEHICLE ADD CONSTRAINT SFVH_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
VEHICLE_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFV_BA_FK'
ALTER TABLE SF_VESSEL ADD CONSTRAINT SFV_BA_FK FOREIGN KEY
(
CURRENT_OPERATOR
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFV_CSCA_FK'
ALTER TABLE SF_VESSEL ADD CONSTRAINT SFV_CSCA_FK FOREIGN KEY
(
POSITIONING_METHOD
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFV_R_DHP_FK'
ALTER TABLE SF_VESSEL ADD CONSTRAINT SFV_R_DHP_FK FOREIGN KEY
(
DRILL_HOLE_POSITION
)
REFERENCES R_DRILL_HOLE_POSITION
(
DRILL_HOLE_POSITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFV_R_SFVT_FK'
ALTER TABLE SF_VESSEL ADD CONSTRAINT SFV_R_SFVT_FK FOREIGN KEY
(
VESSEL_TYPE
)
REFERENCES R_SF_VESSEL_TYPE
(
VESSEL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFV_R_VS_FK'
ALTER TABLE SF_VESSEL ADD CONSTRAINT SFV_R_VS_FK FOREIGN KEY
(
VESSEL_SIZE
)
REFERENCES R_VESSEL_SIZE
(
VESSEL_SIZE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFV_SFA_FK'
ALTER TABLE SF_VESSEL ADD CONSTRAINT SFV_SFA_FK FOREIGN KEY
(
SF_SUBTYPE,
VESSEL_ID,
AREA_ID,
AREA_TYPE
)
REFERENCES SF_AREA
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID,
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFV_SF_FK'
ALTER TABLE SF_VESSEL ADD CONSTRAINT SFV_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
VESSEL_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFW_BA_FK2'
ALTER TABLE SF_WASTE ADD CONSTRAINT SFW_BA_FK2 FOREIGN KEY
(
LICENSE_REGISTER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFW_BA_FK'
ALTER TABLE SF_WASTE ADD CONSTRAINT SFW_BA_FK FOREIGN KEY
(
CURRENT_OWNER
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFW_R_WFT_FK'
ALTER TABLE SF_WASTE ADD CONSTRAINT SFW_R_WFT_FK FOREIGN KEY
(
WASTE_FACILITY_TYPE
)
REFERENCES R_WASTE_FACILITY_TYPE
(
WASTE_FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFW_SF_FK'
ALTER TABLE SF_WASTE ADD CONSTRAINT SFW_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
WASTE_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFWD_BA_FK3'
ALTER TABLE SF_WASTE_DISPOSAL ADD CONSTRAINT SFWD_BA_FK3 FOREIGN KEY
(
OPERATOR_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFWD_BA_FK2'
ALTER TABLE SF_WASTE_DISPOSAL ADD CONSTRAINT SFWD_BA_FK2 FOREIGN KEY
(
RECEIVER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFWD_BA_FK'
ALTER TABLE SF_WASTE_DISPOSAL ADD CONSTRAINT SFWD_BA_FK FOREIGN KEY
(
TRANSPORT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFWD_C_FK'
ALTER TABLE SF_WASTE_DISPOSAL ADD CONSTRAINT SFWD_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFWD_CP_FK'
ALTER TABLE SF_WASTE_DISPOSAL ADD CONSTRAINT SFWD_CP_FK FOREIGN KEY
(
CONTRACT_ID,
PROVISION_ID
)
REFERENCES CONT_PROVISION
(
CONTRACT_ID,
PROVISION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFWD_FAC_FK'
ALTER TABLE SF_WASTE_DISPOSAL ADD CONSTRAINT SFWD_FAC_FK FOREIGN KEY
(
ORIGIN_FACILITY_ID,
ORIGIN_FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFWD_HI_FK'
ALTER TABLE SF_WASTE_DISPOSAL ADD CONSTRAINT SFWD_HI_FK FOREIGN KEY
(
ORIGIN_HSE_INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFWD_RATE_FK'
ALTER TABLE SF_WASTE_DISPOSAL ADD CONSTRAINT SFWD_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFWD_R_BST_FK'
ALTER TABLE SF_WASTE_DISPOSAL ADD CONSTRAINT SFWD_R_BST_FK FOREIGN KEY
(
SERVICE_TYPE
)
REFERENCES R_BA_SERVICE_TYPE
(
BA_SERVICE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFWD_R_SQ_FK'
ALTER TABLE SF_WASTE_DISPOSAL ADD CONSTRAINT SFWD_R_SQ_FK FOREIGN KEY
(
SERVICE_QUALITY
)
REFERENCES R_SERVICE_QUALITY
(
SERVICE_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFWD_R_WAR_FK'
ALTER TABLE SF_WASTE_DISPOSAL ADD CONSTRAINT SFWD_R_WAR_FK FOREIGN KEY
(
ADJUST_REASON
)
REFERENCES R_WASTE_ADJUST_REASON
(
ADJUST_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFWD_R_WH_FK'
ALTER TABLE SF_WASTE_DISPOSAL ADD CONSTRAINT SFWD_R_WH_FK FOREIGN KEY
(
WASTE_HANDLING_METHOD
)
REFERENCES R_WASTE_HANDLING
(
WASTE_HANDLING_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFWD_R_WHZ_FK'
ALTER TABLE SF_WASTE_DISPOSAL ADD CONSTRAINT SFWD_R_WHZ_FK FOREIGN KEY
(
WASTE_HAZARD
)
REFERENCES R_WASTE_HAZARD_TYPE
(
WASTE_HAZARD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFWD_R_WM_FK'
ALTER TABLE SF_WASTE_DISPOSAL ADD CONSTRAINT SFWD_R_WM_FK FOREIGN KEY
(
WASTE_MATERIAL
)
REFERENCES R_WASTE_MATERIAL
(
WASTE_MATERIAL
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFWD_R_WO_FK'
ALTER TABLE SF_WASTE_DISPOSAL ADD CONSTRAINT SFWD_R_WO_FK FOREIGN KEY
(
WASTE_ORIGIN
)
REFERENCES R_WASTE_ORIGIN
(
WASTE_ORIGIN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFWD_SF_FK'
ALTER TABLE SF_WASTE_DISPOSAL ADD CONSTRAINT SFWD_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
WASTE_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFWD_W_FK'
ALTER TABLE SF_WASTE_DISPOSAL ADD CONSTRAINT SFWD_W_FK FOREIGN KEY
(
ORIGIN_UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFX_R_SFXT_FK'
ALTER TABLE SF_XREF ADD CONSTRAINT SFX_R_SFXT_FK FOREIGN KEY
(
XREF_TYPE
)
REFERENCES R_SF_XREF_TYPE
(
XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFX_SF_FK'
ALTER TABLE SF_XREF ADD CONSTRAINT SFX_SF_FK FOREIGN KEY
(
SF_SUBTYPE2,
SUPPORT_FACILITY_ID2
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SFX_SF_FK2'
ALTER TABLE SF_XREF ADD CONSTRAINT SFX_SF_FK2 FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SRCD_R_DOC_FK'
ALTER TABLE SOURCE_DOCUMENT ADD CONSTRAINT SRCD_R_DOC_FK FOREIGN KEY
(
DOCUMENT_TYPE
)
REFERENCES R_DOCUMENT_TYPE
(
DOCUMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SRCD_R_LANG_FK'
ALTER TABLE SOURCE_DOCUMENT ADD CONSTRAINT SRCD_R_LANG_FK FOREIGN KEY
(
LANGUAGE
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SRCD_R_PN_FK'
ALTER TABLE SOURCE_DOCUMENT ADD CONSTRAINT SRCD_R_PN_FK FOREIGN KEY
(
PUBLICATION
)
REFERENCES R_PUBLICATION_NAME
(
PUBLICATION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SRCDA_BA_FK'
ALTER TABLE SOURCE_DOC_AUTHOR ADD CONSTRAINT SRCDA_BA_FK FOREIGN KEY
(
AUTHOR_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SRCDA_R_AUTH_FK'
ALTER TABLE SOURCE_DOC_AUTHOR ADD CONSTRAINT SRCDA_R_AUTH_FK FOREIGN KEY
(
AUTHOR_TYPE
)
REFERENCES R_AUTHOR_TYPE
(
AUTHOR_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SRCDA_SRCD_FK'
ALTER TABLE SOURCE_DOC_AUTHOR ADD CONSTRAINT SRCDA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SRCDB_SRCD_FK2'
ALTER TABLE SOURCE_DOC_BIBLIO ADD CONSTRAINT SRCDB_SRCD_FK2 FOREIGN KEY
(
REFERENCED_DOCUMENT
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SRCDB_SRCD_FK'
ALTER TABLE SOURCE_DOC_BIBLIO ADD CONSTRAINT SRCDB_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SU_R_SUT_FK'
ALTER TABLE SPACING_UNIT ADD CONSTRAINT SU_R_SUT_FK FOREIGN KEY
(
SPACING_UNIT_TYPE
)
REFERENCES R_SPACING_UNIT_TYPE
(
SPACING_UNIT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUI_INS_FK'
ALTER TABLE SPACING_UNIT_INST ADD CONSTRAINT SUI_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUI_SU_FK'
ALTER TABLE SPACING_UNIT_INST ADD CONSTRAINT SUI_SU_FK FOREIGN KEY
(
SPACING_UNIT_ID
)
REFERENCES SPACING_UNIT
(
SPACING_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPD_CS_FK'
ALTER TABLE SPATIAL_DESCRIPTION ADD CONSTRAINT SPD_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPD_CS_FK2'
ALTER TABLE SPATIAL_DESCRIPTION ADD CONSTRAINT SPD_CS_FK2 FOREIGN KEY
(
LOCAL_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPD_CSCA_FK'
ALTER TABLE SPATIAL_DESCRIPTION ADD CONSTRAINT SPD_CSCA_FK FOREIGN KEY
(
COORD_ACQUISITION_ID
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPD_R_SDT1_FK'
ALTER TABLE SPATIAL_DESCRIPTION ADD CONSTRAINT SPD_R_SDT1_FK FOREIGN KEY
(
SPATIAL_DESC_TYPE
)
REFERENCES R_SPATIAL_DESC_TYPE
(
SPATIAL_DESC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPB_R_LQ1_FK'
ALTER TABLE SP_BOUNDARY ADD CONSTRAINT SPB_R_LQ1_FK FOREIGN KEY
(
LOCATION_QUALITY
)
REFERENCES R_LOCATION_QUALITY
(
LOCATION_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPB_R_NP_FK'
ALTER TABLE SP_BOUNDARY ADD CONSTRAINT SPB_R_NP_FK FOREIGN KEY
(
POINT_POSITION
)
REFERENCES R_NODE_POSITION
(
NODE_POSITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPB_SPPOL_FK'
ALTER TABLE SP_BOUNDARY ADD CONSTRAINT SPB_SPPOL_FK FOREIGN KEY
(
POLYGON_ID
)
REFERENCES SP_POLYGON
(
POLYGON_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPBV_A_FK'
ALTER TABLE SP_BOUNDARY_VERSION ADD CONSTRAINT SPBV_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPBV_CS_FK'
ALTER TABLE SP_BOUNDARY_VERSION ADD CONSTRAINT SPBV_CS_FK FOREIGN KEY
(
MAP_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPBV_CS_FK2'
ALTER TABLE SP_BOUNDARY_VERSION ADD CONSTRAINT SPBV_CS_FK2 FOREIGN KEY
(
GEOG_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPBV_CS_FK3'
ALTER TABLE SP_BOUNDARY_VERSION ADD CONSTRAINT SPBV_CS_FK3 FOREIGN KEY
(
LOCAL_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPBV_CSCA_FK'
ALTER TABLE SP_BOUNDARY_VERSION ADD CONSTRAINT SPBV_CSCA_FK FOREIGN KEY
(
ACQUISITION_ID
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPBV_R_ED_FK'
ALTER TABLE SP_BOUNDARY_VERSION ADD CONSTRAINT SPBV_R_ED_FK FOREIGN KEY
(
EW_DIRECTION
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPBV_R_LST1_FK'
ALTER TABLE SP_BOUNDARY_VERSION ADD CONSTRAINT SPBV_R_LST1_FK FOREIGN KEY
(
LEGAL_SURVEY_TYPE
)
REFERENCES R_LEGAL_SURVEY_TYPE
(
LEGAL_SURVEY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPBV_R_LQ_FK'
ALTER TABLE SP_BOUNDARY_VERSION ADD CONSTRAINT SPBV_R_LQ_FK FOREIGN KEY
(
LOCATION_QUALIFIER
)
REFERENCES R_LOCATION_QUALIFIER
(
LOCATION_QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPBV_R_LQ1_FK'
ALTER TABLE SP_BOUNDARY_VERSION ADD CONSTRAINT SPBV_R_LQ1_FK FOREIGN KEY
(
LOCATION_QUALITY
)
REFERENCES R_LOCATION_QUALITY
(
LOCATION_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPBV_R_NP_FK'
ALTER TABLE SP_BOUNDARY_VERSION ADD CONSTRAINT SPBV_R_NP_FK FOREIGN KEY
(
NODE_POSITION
)
REFERENCES R_NODE_POSITION
(
NODE_POSITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPBV_R_N_FK'
ALTER TABLE SP_BOUNDARY_VERSION ADD CONSTRAINT SPBV_R_N_FK FOREIGN KEY
(
NORTH_TYPE
)
REFERENCES R_NORTH
(
NORTH_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPBV_R_ND_FK'
ALTER TABLE SP_BOUNDARY_VERSION ADD CONSTRAINT SPBV_R_ND_FK FOREIGN KEY
(
NS_DIRECTION
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPBV_R_SPVT_FK'
ALTER TABLE SP_BOUNDARY_VERSION ADD CONSTRAINT SPBV_R_SPVT_FK FOREIGN KEY
(
VERSION_TYPE
)
REFERENCES R_SP_POINT_VERSION_TYPE
(
VERSION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPBV_SFMO_FK'
ALTER TABLE SP_BOUNDARY_VERSION ADD CONSTRAINT SPBV_SFMO_FK FOREIGN KEY
(
MONUMENT_SF_SUBTYPE,
MONUMENT_ID
)
REFERENCES SF_MONUMENT
(
SF_SUBTYPE,
MONUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPBV_SPB_FK'
ALTER TABLE SP_BOUNDARY_VERSION ADD CONSTRAINT SPBV_SPB_FK FOREIGN KEY
(
POLYGON_ID,
POINT_SEQ_NO
)
REFERENCES SP_BOUNDARY
(
POLYGON_ID,
POINT_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_ANLR_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_APP_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_A_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_BAA_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_BAA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ADDRESS_SOURCE,
BA_ADDRESS_OBS_NO
)
REFERENCES BA_ADDRESS
(
BUSINESS_ASSOCIATE_ID,
SOURCE,
ADDRESS_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_BAAU_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_BAE_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_BALIC_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_BALIC_FK FOREIGN KEY
(
BA_LICENSEE_BA_ID,
BA_LICENSE_ID
)
REFERENCES BA_LICENSE
(
LICENSEE_BA_ID,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_BAO_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_BA_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_CA_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_CEQ_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_CLSL_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_CON_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_CO_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_COT_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_C_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_EZ_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_ENT_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_EQ_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_FAC_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_FLD_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_FIN_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_FOS_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_HI_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_HI_FK FOREIGN KEY
(
HSE_INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_INS_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_INT_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_LR_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_LS_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_LSO_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_LSO_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID
)
REFERENCES LAND_SALE_OFFERING
(
JURISDICTION,
LAND_SALE_NUMBER,
LAND_SALE_OFFERING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_LSRQ_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_LSRQ_FK FOREIGN KEY
(
LAND_REQUEST_ID
)
REFERENCES LAND_SALE_REQUEST
(
LAND_REQUEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_LRSZ_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_LRSZ_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
SIZE_TYPE,
SIZE_SEQ_NO
)
REFERENCES LAND_SIZE
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
SIZE_TYPE,
SIZE_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_LRST_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_LRST_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
LAND_RIGHT_STATUS_TYPE,
LAND_RIGHT_STATUS,
LAND_RIGHT_STATUS_SEQ_NO
)
REFERENCES LAND_STATUS
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID,
STATUS_TYPE,
LAND_RIGHT_STATUS,
STATUS_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_LIL_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_NOTI_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_OB_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_PASU_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_PDE_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_PL_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_PSWA_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_PSYS_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_PT_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_PS_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_PROJ_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_RATE_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_RSP_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_RSP_FK FOREIGN KEY
(
RESENT_ID,
RESENT_RESERVE_CLASS_ID,
RESENT_PRODUCT_TYPE
)
REFERENCES RESENT_PRODUCT
(
RESENT_ID,
RESERVE_CLASS_ID,
PRODUCT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_RSCL_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_RSE_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_REST_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_REST_FK FOREIGN KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION
)
REFERENCES RESTRICTION
(
RESTRICTION_ID,
RESTRICTION_VERSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_RMDSS_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_RMII_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_RMPI_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_RMTW_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_R_SPCT2_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_R_SPCT2_FK FOREIGN KEY
(
SP_COMPONENT_TYPE
)
REFERENCES R_SPATIAL_DESC_COMP_TYPE
(
SP_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_SM_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_SM_FK FOREIGN KEY
(
LITH_SAMPLE_ID
)
REFERENCES SAMPLE
(
SAMPLE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_SSBG_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_SSBG_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
SEIS_BIN_GRID_ID,
SEIS_BIN_SOURCE
)
REFERENCES SEIS_BIN_GRID
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID,
BIN_GRID_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_SS_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_SF_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_SU_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_SU_FK FOREIGN KEY
(
SPACING_UNIT_ID
)
REFERENCES SPACING_UNIT
(
SPACING_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_SPD_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_STFN_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_STFN_FK FOREIGN KEY
(
FIELD_STATION_ID,
FIELD_NODE_ID,
FIELD_NODE_SOURCE
)
REFERENCES STRAT_FIELD_NODE
(
FIELD_STATION_ID,
NODE_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_STFST_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_STU_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_SUB_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_W_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_WAC_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_WAC_FK FOREIGN KEY
(
UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_WN_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_WN_FK FOREIGN KEY
(
NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_WSET_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCOM_WO_FK'
ALTER TABLE SP_COMPONENT ADD CONSTRAINT SPCOM_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPDT_SPD_FK'
ALTER TABLE SP_DESC_TEXT ADD CONSTRAINT SPDT_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPDX_R_SXT_FK'
ALTER TABLE SP_DESC_XREF ADD CONSTRAINT SPDX_R_SXT_FK FOREIGN KEY
(
SPATIAL_XREF_TYPE
)
REFERENCES R_SPATIAL_XREF_TYPE
(
SPATIAL_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPDX_SPD_FK'
ALTER TABLE SP_DESC_XREF ADD CONSTRAINT SPDX_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPDX_SPD_FK2'
ALTER TABLE SP_DESC_XREF ADD CONSTRAINT SPDX_SPD_FK2 FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID_2,
SPATIAL_OBS_NO_2
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLN_CS_FK'
ALTER TABLE SP_LINE ADD CONSTRAINT SPLN_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLN_CS_FK2'
ALTER TABLE SP_LINE ADD CONSTRAINT SPLN_CS_FK2 FOREIGN KEY
(
LOCAL_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLN_CSCA_FK'
ALTER TABLE SP_LINE ADD CONSTRAINT SPLN_CSCA_FK FOREIGN KEY
(
ACQUISITION_ID
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLN_R_LT1_FK'
ALTER TABLE SP_LINE ADD CONSTRAINT SPLN_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLN_R_SRD_FK'
ALTER TABLE SP_LINE ADD CONSTRAINT SPLN_R_SRD_FK FOREIGN KEY
(
REFERENCE_DATUM
)
REFERENCES R_SEIS_REF_DATUM
(
REFERENCE_DATUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLN_SPD_FK'
ALTER TABLE SP_LINE ADD CONSTRAINT SPLN_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLP_R_LQ1_FK'
ALTER TABLE SP_LINE_POINT ADD CONSTRAINT SPLP_R_LQ1_FK FOREIGN KEY
(
LOCATION_QUALITY
)
REFERENCES R_LOCATION_QUALITY
(
LOCATION_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLP_R_NP_FK'
ALTER TABLE SP_LINE_POINT ADD CONSTRAINT SPLP_R_NP_FK FOREIGN KEY
(
POINT_POSITION
)
REFERENCES R_NODE_POSITION
(
NODE_POSITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLP_SPLN_FK'
ALTER TABLE SP_LINE_POINT ADD CONSTRAINT SPLP_SPLN_FK FOREIGN KEY
(
LINE_ID
)
REFERENCES SP_LINE
(
LINE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLPV_A_FK'
ALTER TABLE SP_LINE_POINT_VERSION ADD CONSTRAINT SPLPV_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLPV_CS_FK2'
ALTER TABLE SP_LINE_POINT_VERSION ADD CONSTRAINT SPLPV_CS_FK2 FOREIGN KEY
(
LOCAL_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLPV_CS_FK'
ALTER TABLE SP_LINE_POINT_VERSION ADD CONSTRAINT SPLPV_CS_FK FOREIGN KEY
(
GEOG_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLPV_CS_FK3'
ALTER TABLE SP_LINE_POINT_VERSION ADD CONSTRAINT SPLPV_CS_FK3 FOREIGN KEY
(
MAP_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLPV_CSCA_FK'
ALTER TABLE SP_LINE_POINT_VERSION ADD CONSTRAINT SPLPV_CSCA_FK FOREIGN KEY
(
ACQUISITION_ID
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLPV_R_ED_FK'
ALTER TABLE SP_LINE_POINT_VERSION ADD CONSTRAINT SPLPV_R_ED_FK FOREIGN KEY
(
EW_DIRECTION
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLPV_R_LST1_FK'
ALTER TABLE SP_LINE_POINT_VERSION ADD CONSTRAINT SPLPV_R_LST1_FK FOREIGN KEY
(
LEGAL_SURVEY_TYPE
)
REFERENCES R_LEGAL_SURVEY_TYPE
(
LEGAL_SURVEY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLPV_R_LQ_FK'
ALTER TABLE SP_LINE_POINT_VERSION ADD CONSTRAINT SPLPV_R_LQ_FK FOREIGN KEY
(
LOCATION_QUALIFIER
)
REFERENCES R_LOCATION_QUALIFIER
(
LOCATION_QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLPV_R_LQ1_FK'
ALTER TABLE SP_LINE_POINT_VERSION ADD CONSTRAINT SPLPV_R_LQ1_FK FOREIGN KEY
(
LOCATION_QUALITY
)
REFERENCES R_LOCATION_QUALITY
(
LOCATION_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLPV_R_NP_FK'
ALTER TABLE SP_LINE_POINT_VERSION ADD CONSTRAINT SPLPV_R_NP_FK FOREIGN KEY
(
NODE_POSITION
)
REFERENCES R_NODE_POSITION
(
NODE_POSITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLPV_R_N_FK'
ALTER TABLE SP_LINE_POINT_VERSION ADD CONSTRAINT SPLPV_R_N_FK FOREIGN KEY
(
NORTH_TYPE
)
REFERENCES R_NORTH
(
NORTH_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLPV_R_ND_FK'
ALTER TABLE SP_LINE_POINT_VERSION ADD CONSTRAINT SPLPV_R_ND_FK FOREIGN KEY
(
NS_DIRECTION
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLPV_R_SPVT_FK'
ALTER TABLE SP_LINE_POINT_VERSION ADD CONSTRAINT SPLPV_R_SPVT_FK FOREIGN KEY
(
VERSION_TYPE
)
REFERENCES R_SP_POINT_VERSION_TYPE
(
VERSION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLPV_SFMO_FK'
ALTER TABLE SP_LINE_POINT_VERSION ADD CONSTRAINT SPLPV_SFMO_FK FOREIGN KEY
(
MONUMENT_SF_SUBTYPE,
MONUMENT_ID
)
REFERENCES SF_MONUMENT
(
SF_SUBTYPE,
MONUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLPV_SPLP_FK'
ALTER TABLE SP_LINE_POINT_VERSION ADD CONSTRAINT SPLPV_SPLP_FK FOREIGN KEY
(
LINE_ID,
POINT_SEQ_NO
)
REFERENCES SP_LINE_POINT
(
LINE_ID,
POINT_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMZ_R_SUQ_FK2'
ALTER TABLE SP_MINERAL_ZONE ADD CONSTRAINT SPMZ_R_SUQ_FK2 FOREIGN KEY
(
TOP_QUALIFIER
)
REFERENCES R_STRAT_UNIT_QUALIFIER
(
QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMZ_R_SUQ_FK'
ALTER TABLE SP_MINERAL_ZONE ADD CONSTRAINT SPMZ_R_SUQ_FK FOREIGN KEY
(
BASE_QUALIFIER
)
REFERENCES R_STRAT_UNIT_QUALIFIER
(
QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMZ_SPD_FK'
ALTER TABLE SP_MINERAL_ZONE ADD CONSTRAINT SPMZ_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMZ_SPZD_FK2'
ALTER TABLE SP_MINERAL_ZONE ADD CONSTRAINT SPMZ_SPZD_FK2 FOREIGN KEY
(
BASE_ZONE_DEFINITION_ID
)
REFERENCES SP_ZONE_DEFINITION
(
ZONE_DEFINITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMZ_SPZD_FK'
ALTER TABLE SP_MINERAL_ZONE ADD CONSTRAINT SPMZ_SPZD_FK FOREIGN KEY
(
TOP_ZONE_DEFINITION_ID
)
REFERENCES SP_ZONE_DEFINITION
(
ZONE_DEFINITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPP_CS_FK'
ALTER TABLE SP_PARCEL ADD CONSTRAINT SPP_CS_FK FOREIGN KEY
(
LOCAL_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPP_SPD_FK'
ALTER TABLE SP_PARCEL ADD CONSTRAINT SPP_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPP_SPCA_FK'
ALTER TABLE SP_PARCEL ADD CONSTRAINT SPP_SPCA_FK FOREIGN KEY
(
PARCEL_CARTER_ID
)
REFERENCES SP_PARCEL_CARTER
(
PARCEL_CARTER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPP_SPCO_FK'
ALTER TABLE SP_PARCEL ADD CONSTRAINT SPP_SPCO_FK FOREIGN KEY
(
PARCEL_CONGRESS_ID
)
REFERENCES SP_PARCEL_CONGRESS
(
PARCEL_CONGRESS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPP_SPDLS_FK'
ALTER TABLE SP_PARCEL ADD CONSTRAINT SPP_SPDLS_FK FOREIGN KEY
(
PARCEL_DLS_ID
)
REFERENCES SP_PARCEL_DLS
(
PARCEL_DLS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPP_SPDR_FK'
ALTER TABLE SP_PARCEL ADD CONSTRAINT SPP_SPDR_FK FOREIGN KEY
(
PARCEL_DLS_ID,
DLS_ROAD_ALLOWANCE_ID
)
REFERENCES SP_PARCEL_DLS_ROAD
(
PARCEL_DLS_ID,
DLS_ROAD_ALLOWANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPP_SPFPS_FK'
ALTER TABLE SP_PARCEL ADD CONSTRAINT SPP_SPFPS_FK FOREIGN KEY
(
PARCEL_FPS_ID
)
REFERENCES SP_PARCEL_FPS
(
PARCEL_FPS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPP_SPLY_FK'
ALTER TABLE SP_PARCEL ADD CONSTRAINT SPP_SPLY_FK FOREIGN KEY
(
PARCEL_LIBYA_ID
)
REFERENCES SP_PARCEL_LIBYA
(
PARCEL_LYBIA_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPP_SPL_FK'
ALTER TABLE SP_PARCEL ADD CONSTRAINT SPP_SPL_FK FOREIGN KEY
(
PARCEL_LOT_ID,
PARCEL_LOT_TYPE,
PARCEL_LOT_NUM
)
REFERENCES SP_PARCEL_LOT
(
PARCEL_LOT_ID,
PARCEL_LOT_TYPE,
PARCEL_LOT_NUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPP_SPNL_FK'
ALTER TABLE SP_PARCEL ADD CONSTRAINT SPP_SPNL_FK FOREIGN KEY
(
PARCEL_NE_LOC_ID
)
REFERENCES SP_PARCEL_NE_LOC
(
PARCEL_NE_LOC_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPP_SPNS_FK'
ALTER TABLE SP_PARCEL ADD CONSTRAINT SPP_SPNS_FK FOREIGN KEY
(
PARCEL_NORTH_SEA_ID
)
REFERENCES SP_PARCEL_NORTH_SEA
(
PARCEL_NORTH_SEA_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPP_SPNTS_FK'
ALTER TABLE SP_PARCEL ADD CONSTRAINT SPP_SPNTS_FK FOREIGN KEY
(
PARCEL_NTS_ID
)
REFERENCES SP_PARCEL_NTS
(
PARCEL_NTS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPP_SPOFF_FK'
ALTER TABLE SP_PARCEL ADD CONSTRAINT SPP_SPOFF_FK FOREIGN KEY
(
PARCEL_OFFSHORE_ID
)
REFERENCES SP_PARCEL_OFFSHORE
(
PARCEL_OFFSHORE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPP_SPOH_FK'
ALTER TABLE SP_PARCEL ADD CONSTRAINT SPP_SPOH_FK FOREIGN KEY
(
PARCEL_OHIO_ID
)
REFERENCES SP_PARCEL_OHIO
(
PARCEL_OHIO_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPP_SPPBL_FK'
ALTER TABLE SP_PARCEL ADD CONSTRAINT SPP_SPPBL_FK FOREIGN KEY
(
PARCEL_PBL_ID
)
REFERENCES SP_PARCEL_PBL
(
PARCEL_PBL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPP_SPTX_FK'
ALTER TABLE SP_PARCEL ADD CONSTRAINT SPP_SPTX_FK FOREIGN KEY
(
PARCEL_TEXAS_ID
)
REFERENCES SP_PARCEL_TEXAS
(
PARCEL_TEXAS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPA_A_FK'
ALTER TABLE SP_PARCEL_AREA ADD CONSTRAINT SPA_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPA_R_LT1_FK'
ALTER TABLE SP_PARCEL_AREA ADD CONSTRAINT SPA_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCA_A_FK'
ALTER TABLE SP_PARCEL_CARTER ADD CONSTRAINT SPCA_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCA_CS_FK'
ALTER TABLE SP_PARCEL_CARTER ADD CONSTRAINT SPCA_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCA_R_ED_FK'
ALTER TABLE SP_PARCEL_CARTER ADD CONSTRAINT SPCA_R_ED_FK FOREIGN KEY
(
EW_DIRECTION
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCA_R_ND_FK'
ALTER TABLE SP_PARCEL_CARTER ADD CONSTRAINT SPCA_R_ND_FK FOREIGN KEY
(
NS_DIRECTION
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCA_SPD_FK'
ALTER TABLE SP_PARCEL_CARTER ADD CONSTRAINT SPCA_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCO_A_FK'
ALTER TABLE SP_PARCEL_CONGRESS ADD CONSTRAINT SPCO_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCO_CS_FK'
ALTER TABLE SP_PARCEL_CONGRESS ADD CONSTRAINT SPCO_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCO_CSPME_FK'
ALTER TABLE SP_PARCEL_CONGRESS ADD CONSTRAINT SPCO_CSPME_FK FOREIGN KEY
(
PRINCIPAL_MERIDIAN
)
REFERENCES CS_PRINCIPAL_MERIDIAN
(
PRINCIPAL_MERIDIAN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCO_R_ED_FK'
ALTER TABLE SP_PARCEL_CONGRESS ADD CONSTRAINT SPCO_R_ED_FK FOREIGN KEY
(
EW_DIRECTION
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCO_R_ND_FK'
ALTER TABLE SP_PARCEL_CONGRESS ADD CONSTRAINT SPCO_R_ND_FK FOREIGN KEY
(
NS_DIRECTION
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCO_R_ST3_FK'
ALTER TABLE SP_PARCEL_CONGRESS ADD CONSTRAINT SPCO_R_ST3_FK FOREIGN KEY
(
SECTION_TYPE
)
REFERENCES R_SECTION_TYPE
(
SECTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPCO_SPD_FK'
ALTER TABLE SP_PARCEL_CONGRESS ADD CONSTRAINT SPCO_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPDLS_A_FK'
ALTER TABLE SP_PARCEL_DLS ADD CONSTRAINT SPDLS_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPDLS_CS_FK'
ALTER TABLE SP_PARCEL_DLS ADD CONSTRAINT SPDLS_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPDLS_CS_FK2'
ALTER TABLE SP_PARCEL_DLS ADD CONSTRAINT SPDLS_CS_FK2 FOREIGN KEY
(
LOCAL_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPDLS_CSPME_FK'
ALTER TABLE SP_PARCEL_DLS ADD CONSTRAINT SPDLS_CSPME_FK FOREIGN KEY
(
PRINCIPAL_MERIDIAN
)
REFERENCES CS_PRINCIPAL_MERIDIAN
(
PRINCIPAL_MERIDIAN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPDLS_SPD_FK'
ALTER TABLE SP_PARCEL_DLS ADD CONSTRAINT SPDLS_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPDR_SPDLS_FK'
ALTER TABLE SP_PARCEL_DLS_ROAD ADD CONSTRAINT SPDR_SPDLS_FK FOREIGN KEY
(
PARCEL_DLS_ID
)
REFERENCES SP_PARCEL_DLS
(
PARCEL_DLS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPFPS_A_FK'
ALTER TABLE SP_PARCEL_FPS ADD CONSTRAINT SPFPS_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPFPS_CS_FK'
ALTER TABLE SP_PARCEL_FPS ADD CONSTRAINT SPFPS_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPFPS_SPD_FK'
ALTER TABLE SP_PARCEL_FPS ADD CONSTRAINT SPFPS_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLY_A_FK'
ALTER TABLE SP_PARCEL_LIBYA ADD CONSTRAINT SPLY_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLY_CS_FK'
ALTER TABLE SP_PARCEL_LIBYA ADD CONSTRAINT SPLY_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLY_R_ED_FK'
ALTER TABLE SP_PARCEL_LIBYA ADD CONSTRAINT SPLY_R_ED_FK FOREIGN KEY
(
EW_DIRECTION
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPLY_SPD_FK'
ALTER TABLE SP_PARCEL_LIBYA ADD CONSTRAINT SPLY_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPL_R_PLT_FK'
ALTER TABLE SP_PARCEL_LOT ADD CONSTRAINT SPL_R_PLT_FK FOREIGN KEY
(
PARCEL_LOT_TYPE
)
REFERENCES R_PARCEL_LOT_TYPE
(
PARCEL_LOT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPL_R_RT2_FK'
ALTER TABLE SP_PARCEL_LOT ADD CONSTRAINT SPL_R_RT2_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_REMARK_TYPE
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPL_SPD_FK'
ALTER TABLE SP_PARCEL_LOT ADD CONSTRAINT SPL_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPL_SPCO_FK'
ALTER TABLE SP_PARCEL_LOT ADD CONSTRAINT SPL_SPCO_FK FOREIGN KEY
(
PARCEL_CONGRESS_ID
)
REFERENCES SP_PARCEL_CONGRESS
(
PARCEL_CONGRESS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPL_SPOH_FK'
ALTER TABLE SP_PARCEL_LOT ADD CONSTRAINT SPL_SPOH_FK FOREIGN KEY
(
PARCEL_OHIO_ID
)
REFERENCES SP_PARCEL_OHIO
(
PARCEL_OHIO_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPL_SPPBL_FK'
ALTER TABLE SP_PARCEL_LOT ADD CONSTRAINT SPL_SPPBL_FK FOREIGN KEY
(
PARCEL_PBL_ID
)
REFERENCES SP_PARCEL_PBL
(
PARCEL_PBL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPL_SPTX_FK'
ALTER TABLE SP_PARCEL_LOT ADD CONSTRAINT SPL_SPTX_FK FOREIGN KEY
(
PARCEL_TEXAS_ID
)
REFERENCES SP_PARCEL_TEXAS
(
PARCEL_TEXAS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMB_CS_FK'
ALTER TABLE SP_PARCEL_M_B ADD CONSTRAINT SPMB_CS_FK FOREIGN KEY
(
LOCAL_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMB_R_ED_FK'
ALTER TABLE SP_PARCEL_M_B ADD CONSTRAINT SPMB_R_ED_FK FOREIGN KEY
(
EW_DIRECTION
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMB_R_ESL_FK'
ALTER TABLE SP_PARCEL_M_B ADD CONSTRAINT SPMB_R_ESL_FK FOREIGN KEY
(
EW_START_LINE
)
REFERENCES R_EW_START_LINE
(
EW_START_LINE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMB_R_LT1_FK'
ALTER TABLE SP_PARCEL_M_B ADD CONSTRAINT SPMB_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMB_R_ND_FK'
ALTER TABLE SP_PARCEL_M_B ADD CONSTRAINT SPMB_R_ND_FK FOREIGN KEY
(
NS_DIRECTION
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMB_R_NSL_FK'
ALTER TABLE SP_PARCEL_M_B ADD CONSTRAINT SPMB_R_NSL_FK FOREIGN KEY
(
NS_START_LINE
)
REFERENCES R_NS_START_LINE
(
NS_START_LINE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMB_R_O_FK'
ALTER TABLE SP_PARCEL_M_B ADD CONSTRAINT SPMB_R_O_FK FOREIGN KEY
(
ORIENTATION
)
REFERENCES R_ORIENTATION
(
ORIENTATION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMB_SPD_FK'
ALTER TABLE SP_PARCEL_M_B ADD CONSTRAINT SPMB_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMB_SPCA_FK'
ALTER TABLE SP_PARCEL_M_B ADD CONSTRAINT SPMB_SPCA_FK FOREIGN KEY
(
PARCEL_CARTER_ID
)
REFERENCES SP_PARCEL_CARTER
(
PARCEL_CARTER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMB_SPCO_FK'
ALTER TABLE SP_PARCEL_M_B ADD CONSTRAINT SPMB_SPCO_FK FOREIGN KEY
(
PARCEL_CONGRESS_ID
)
REFERENCES SP_PARCEL_CONGRESS
(
PARCEL_CONGRESS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMB_SPDLS_FK'
ALTER TABLE SP_PARCEL_M_B ADD CONSTRAINT SPMB_SPDLS_FK FOREIGN KEY
(
PARCEL_DLS_ID
)
REFERENCES SP_PARCEL_DLS
(
PARCEL_DLS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMB_SPDR_FK'
ALTER TABLE SP_PARCEL_M_B ADD CONSTRAINT SPMB_SPDR_FK FOREIGN KEY
(
PARCEL_DLS_ID,
DLS_ROAD_ALLOWANCE_ID
)
REFERENCES SP_PARCEL_DLS_ROAD
(
PARCEL_DLS_ID,
DLS_ROAD_ALLOWANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMB_SPFPS_FK'
ALTER TABLE SP_PARCEL_M_B ADD CONSTRAINT SPMB_SPFPS_FK FOREIGN KEY
(
PARCEL_FPS_ID
)
REFERENCES SP_PARCEL_FPS
(
PARCEL_FPS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMB_SPLY_FK'
ALTER TABLE SP_PARCEL_M_B ADD CONSTRAINT SPMB_SPLY_FK FOREIGN KEY
(
PARCEL_LIBYA_ID
)
REFERENCES SP_PARCEL_LIBYA
(
PARCEL_LYBIA_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMB_SPL_FK'
ALTER TABLE SP_PARCEL_M_B ADD CONSTRAINT SPMB_SPL_FK FOREIGN KEY
(
PARCEL_LOT_ID,
PARCEL_LOT_TYPE,
PARCEL_LOT_NUM
)
REFERENCES SP_PARCEL_LOT
(
PARCEL_LOT_ID,
PARCEL_LOT_TYPE,
PARCEL_LOT_NUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMB_SPNL_FK'
ALTER TABLE SP_PARCEL_M_B ADD CONSTRAINT SPMB_SPNL_FK FOREIGN KEY
(
PARCEL_NE_LOC_ID
)
REFERENCES SP_PARCEL_NE_LOC
(
PARCEL_NE_LOC_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMB_SPNS_FK'
ALTER TABLE SP_PARCEL_M_B ADD CONSTRAINT SPMB_SPNS_FK FOREIGN KEY
(
PARCEL_NORTH_SEA_ID
)
REFERENCES SP_PARCEL_NORTH_SEA
(
PARCEL_NORTH_SEA_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMB_SPNTS_FK'
ALTER TABLE SP_PARCEL_M_B ADD CONSTRAINT SPMB_SPNTS_FK FOREIGN KEY
(
PARCEL_NTS_ID
)
REFERENCES SP_PARCEL_NTS
(
PARCEL_NTS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMB_SPOFF_FK'
ALTER TABLE SP_PARCEL_M_B ADD CONSTRAINT SPMB_SPOFF_FK FOREIGN KEY
(
PARCEL_OFFSHORE_ID
)
REFERENCES SP_PARCEL_OFFSHORE
(
PARCEL_OFFSHORE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMB_SPOH_FK'
ALTER TABLE SP_PARCEL_M_B ADD CONSTRAINT SPMB_SPOH_FK FOREIGN KEY
(
PARCEL_OHIO_ID
)
REFERENCES SP_PARCEL_OHIO
(
PARCEL_OHIO_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMB_SPPBL_FK'
ALTER TABLE SP_PARCEL_M_B ADD CONSTRAINT SPMB_SPPBL_FK FOREIGN KEY
(
PARCEL_PBL_ID
)
REFERENCES SP_PARCEL_PBL
(
PARCEL_PBL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPMB_SPTX_FK'
ALTER TABLE SP_PARCEL_M_B ADD CONSTRAINT SPMB_SPTX_FK FOREIGN KEY
(
PARCEL_TEXAS_ID
)
REFERENCES SP_PARCEL_TEXAS
(
PARCEL_TEXAS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPNL_A_FK'
ALTER TABLE SP_PARCEL_NE_LOC ADD CONSTRAINT SPNL_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPNL_CS_FK'
ALTER TABLE SP_PARCEL_NE_LOC ADD CONSTRAINT SPNL_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPNL_SPD_FK'
ALTER TABLE SP_PARCEL_NE_LOC ADD CONSTRAINT SPNL_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPNS_A_FK'
ALTER TABLE SP_PARCEL_NORTH_SEA ADD CONSTRAINT SPNS_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPNS_CS_FK'
ALTER TABLE SP_PARCEL_NORTH_SEA ADD CONSTRAINT SPNS_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPNS_CSPME_FK'
ALTER TABLE SP_PARCEL_NORTH_SEA ADD CONSTRAINT SPNS_CSPME_FK FOREIGN KEY
(
PRINCIPAL_MERIDIAN
)
REFERENCES CS_PRINCIPAL_MERIDIAN
(
PRINCIPAL_MERIDIAN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPNS_SPD_FK'
ALTER TABLE SP_PARCEL_NORTH_SEA ADD CONSTRAINT SPNS_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPNTS_A_FK'
ALTER TABLE SP_PARCEL_NTS ADD CONSTRAINT SPNTS_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPNTS_CS_FK'
ALTER TABLE SP_PARCEL_NTS ADD CONSTRAINT SPNTS_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPNTS_SPD_FK'
ALTER TABLE SP_PARCEL_NTS ADD CONSTRAINT SPNTS_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPOFF_A_FK'
ALTER TABLE SP_PARCEL_OFFSHORE ADD CONSTRAINT SPOFF_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPOFF_CS_FK'
ALTER TABLE SP_PARCEL_OFFSHORE ADD CONSTRAINT SPOFF_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPOFF_R_ED_FK'
ALTER TABLE SP_PARCEL_OFFSHORE ADD CONSTRAINT SPOFF_R_ED_FK FOREIGN KEY
(
EW_DIRECTION
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPOFF_R_ND_FK'
ALTER TABLE SP_PARCEL_OFFSHORE ADD CONSTRAINT SPOFF_R_ND_FK FOREIGN KEY
(
NS_DIRECTION
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPOFF_R_OAC_FK'
ALTER TABLE SP_PARCEL_OFFSHORE ADD CONSTRAINT SPOFF_R_OAC_FK FOREIGN KEY
(
OFFSHORE_AREA_CODE
)
REFERENCES R_OFFSHORE_AREA_CODE
(
OFFSHORE_AREA_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPOFF_R_WBZ_FK'
ALTER TABLE SP_PARCEL_OFFSHORE ADD CONSTRAINT SPOFF_R_WBZ_FK FOREIGN KEY
(
WATER_BOTTOM_ZONE
)
REFERENCES R_WATER_BOTTOM_ZONE
(
WATER_BOTTOM_ZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPOFF_SPD_FK'
ALTER TABLE SP_PARCEL_OFFSHORE ADD CONSTRAINT SPOFF_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPOH_A_FK'
ALTER TABLE SP_PARCEL_OHIO ADD CONSTRAINT SPOH_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPOH_BA_FK'
ALTER TABLE SP_PARCEL_OHIO ADD CONSTRAINT SPOH_BA_FK FOREIGN KEY
(
JURISDICTION
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPOH_CS_FK'
ALTER TABLE SP_PARCEL_OHIO ADD CONSTRAINT SPOH_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPOH_CSPME_FK'
ALTER TABLE SP_PARCEL_OHIO ADD CONSTRAINT SPOH_CSPME_FK FOREIGN KEY
(
PRINCIPAL_MERIDIAN
)
REFERENCES CS_PRINCIPAL_MERIDIAN
(
PRINCIPAL_MERIDIAN
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPOH_R_ED_FK'
ALTER TABLE SP_PARCEL_OHIO ADD CONSTRAINT SPOH_R_ED_FK FOREIGN KEY
(
OHIO_RANGE_DIR
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPOH_R_ND_FK'
ALTER TABLE SP_PARCEL_OHIO ADD CONSTRAINT SPOH_R_ND_FK FOREIGN KEY
(
OHIO_TOWNSHIP_DIR
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPOH_SPD_FK'
ALTER TABLE SP_PARCEL_OHIO ADD CONSTRAINT SPOH_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPBL_A_FK'
ALTER TABLE SP_PARCEL_PBL ADD CONSTRAINT SPPBL_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPBL_BA_FK'
ALTER TABLE SP_PARCEL_PBL ADD CONSTRAINT SPPBL_BA_FK FOREIGN KEY
(
JURISDICTION
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPBL_CS_FK'
ALTER TABLE SP_PARCEL_PBL ADD CONSTRAINT SPPBL_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPBL_SPD_FK'
ALTER TABLE SP_PARCEL_PBL ADD CONSTRAINT SPPBL_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPR_SPP_FK'
ALTER TABLE SP_PARCEL_REMARK ADD CONSTRAINT SPR_SPP_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO,
PARCEL_ID
)
REFERENCES SP_PARCEL
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO,
PARCEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPTX_A_FK'
ALTER TABLE SP_PARCEL_TEXAS ADD CONSTRAINT SPTX_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPTX_CS_FK'
ALTER TABLE SP_PARCEL_TEXAS ADD CONSTRAINT SPTX_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPTX_R_ND_FK'
ALTER TABLE SP_PARCEL_TEXAS ADD CONSTRAINT SPTX_R_ND_FK FOREIGN KEY
(
NS_DIRECTION
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPTX_SPD_FK'
ALTER TABLE SP_PARCEL_TEXAS ADD CONSTRAINT SPTX_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPT_CS_FK'
ALTER TABLE SP_POINT ADD CONSTRAINT SPPT_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPT_CS_FK2'
ALTER TABLE SP_POINT ADD CONSTRAINT SPPT_CS_FK2 FOREIGN KEY
(
LOCAL_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPT_CSCA_FK'
ALTER TABLE SP_POINT ADD CONSTRAINT SPPT_CSCA_FK FOREIGN KEY
(
COORD_ACQUISITION_ID
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPT_R_LQ1_FK'
ALTER TABLE SP_POINT ADD CONSTRAINT SPPT_R_LQ1_FK FOREIGN KEY
(
LOCATION_QUALITY
)
REFERENCES R_LOCATION_QUALITY
(
LOCATION_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPT_R_LT1_FK'
ALTER TABLE SP_POINT ADD CONSTRAINT SPPT_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPT_R_NP_FK'
ALTER TABLE SP_POINT ADD CONSTRAINT SPPT_R_NP_FK FOREIGN KEY
(
POINT_POSITION
)
REFERENCES R_NODE_POSITION
(
NODE_POSITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPT_R_SRD_FK'
ALTER TABLE SP_POINT ADD CONSTRAINT SPPT_R_SRD_FK FOREIGN KEY
(
REFERENCE_DATUM
)
REFERENCES R_SEIS_REF_DATUM
(
REFERENCE_DATUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPT_SPD_FK'
ALTER TABLE SP_POINT ADD CONSTRAINT SPPT_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPV_A_FK'
ALTER TABLE SP_POINT_VERSION ADD CONSTRAINT SPPV_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPV_CS_FK3'
ALTER TABLE SP_POINT_VERSION ADD CONSTRAINT SPPV_CS_FK3 FOREIGN KEY
(
GEOG_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPV_CS_FK2'
ALTER TABLE SP_POINT_VERSION ADD CONSTRAINT SPPV_CS_FK2 FOREIGN KEY
(
MAP_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPV_CS_FK'
ALTER TABLE SP_POINT_VERSION ADD CONSTRAINT SPPV_CS_FK FOREIGN KEY
(
LOCAL_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPV_CSCA_FK'
ALTER TABLE SP_POINT_VERSION ADD CONSTRAINT SPPV_CSCA_FK FOREIGN KEY
(
ACQUISITION_ID
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPV_R_ED_FK'
ALTER TABLE SP_POINT_VERSION ADD CONSTRAINT SPPV_R_ED_FK FOREIGN KEY
(
EW_DIRECTION
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPV_R_LST1_FK'
ALTER TABLE SP_POINT_VERSION ADD CONSTRAINT SPPV_R_LST1_FK FOREIGN KEY
(
LEGAL_SURVEY_TYPE
)
REFERENCES R_LEGAL_SURVEY_TYPE
(
LEGAL_SURVEY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPV_R_LQ_FK'
ALTER TABLE SP_POINT_VERSION ADD CONSTRAINT SPPV_R_LQ_FK FOREIGN KEY
(
LOCATION_QUALIFIER
)
REFERENCES R_LOCATION_QUALIFIER
(
LOCATION_QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPV_R_LQ1_FK'
ALTER TABLE SP_POINT_VERSION ADD CONSTRAINT SPPV_R_LQ1_FK FOREIGN KEY
(
LOCATION_QUALITY
)
REFERENCES R_LOCATION_QUALITY
(
LOCATION_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPV_R_NP_FK'
ALTER TABLE SP_POINT_VERSION ADD CONSTRAINT SPPV_R_NP_FK FOREIGN KEY
(
NODE_POSITION
)
REFERENCES R_NODE_POSITION
(
NODE_POSITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPV_R_N_FK'
ALTER TABLE SP_POINT_VERSION ADD CONSTRAINT SPPV_R_N_FK FOREIGN KEY
(
NORTH_TYPE
)
REFERENCES R_NORTH
(
NORTH_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPV_R_ND_FK'
ALTER TABLE SP_POINT_VERSION ADD CONSTRAINT SPPV_R_ND_FK FOREIGN KEY
(
NS_DIRECTION
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPV_R_SPVT_FK'
ALTER TABLE SP_POINT_VERSION ADD CONSTRAINT SPPV_R_SPVT_FK FOREIGN KEY
(
VERSION_TYPE
)
REFERENCES R_SP_POINT_VERSION_TYPE
(
VERSION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPV_SFMO_FK'
ALTER TABLE SP_POINT_VERSION ADD CONSTRAINT SPPV_SFMO_FK FOREIGN KEY
(
MONUMENT_SF_SUBTYPE,
MONUMENT_ID
)
REFERENCES SF_MONUMENT
(
SF_SUBTYPE,
MONUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPV_SPPT_FK'
ALTER TABLE SP_POINT_VERSION ADD CONSTRAINT SPPV_SPPT_FK FOREIGN KEY
(
POINT_ID
)
REFERENCES SP_POINT
(
POINT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPOL_CS_FK2'
ALTER TABLE SP_POLYGON ADD CONSTRAINT SPPOL_CS_FK2 FOREIGN KEY
(
LOCAL_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPOL_CS_FK'
ALTER TABLE SP_POLYGON ADD CONSTRAINT SPPOL_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPOL_CSCA_FK'
ALTER TABLE SP_POLYGON ADD CONSTRAINT SPPOL_CSCA_FK FOREIGN KEY
(
ACQUISITION_ID
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPOL_R_LT1_FK'
ALTER TABLE SP_POLYGON ADD CONSTRAINT SPPOL_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPOL_R_SRD_FK'
ALTER TABLE SP_POLYGON ADD CONSTRAINT SPPOL_R_SRD_FK FOREIGN KEY
(
REFERENCE_DATUM
)
REFERENCES R_SEIS_REF_DATUM
(
REFERENCE_DATUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPOL_SPD_FK'
ALTER TABLE SP_POLYGON ADD CONSTRAINT SPPOL_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPPOL_SPPOL_FK'
ALTER TABLE SP_POLYGON ADD CONSTRAINT SPPOL_SPPOL_FK FOREIGN KEY
(
CONTAINED_BY_POLYGON_ID
)
REFERENCES SP_POLYGON
(
POLYGON_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPZD_BA_FK'
ALTER TABLE SP_ZONE_DEFINITION ADD CONSTRAINT SPZD_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPZD_R_SZD_FK'
ALTER TABLE SP_ZONE_DEFINITION ADD CONSTRAINT SPZD_R_SZD_FK FOREIGN KEY
(
ZONE_DERIVATION_METHOD
)
REFERENCES R_SP_ZONE_DERIV
(
ZONE_DERIVATION_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPZD_R_SZT_FK'
ALTER TABLE SP_ZONE_DEFINITION ADD CONSTRAINT SPZD_R_SZT_FK FOREIGN KEY
(
ZONE_TYPE
)
REFERENCES R_SP_ZONE_TYPE
(
ZONE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPZD_R_SUQ_FK'
ALTER TABLE SP_ZONE_DEFINITION ADD CONSTRAINT SPZD_R_SUQ_FK FOREIGN KEY
(
BASE_QUALIFIER
)
REFERENCES R_STRAT_UNIT_QUALIFIER
(
QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPZD_R_SUQ_FK2'
ALTER TABLE SP_ZONE_DEFINITION ADD CONSTRAINT SPZD_R_SUQ_FK2 FOREIGN KEY
(
TOP_QUALIFIER
)
REFERENCES R_STRAT_UNIT_QUALIFIER
(
QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPZD_STU_FK'
ALTER TABLE SP_ZONE_DEFINITION ADD CONSTRAINT SPZD_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
BASE_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPZD_STU_FK2'
ALTER TABLE SP_ZONE_DEFINITION ADD CONSTRAINT SPZD_STU_FK2 FOREIGN KEY
(
STRAT_NAME_SET_ID,
TOP_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPZD_STU_FK3'
ALTER TABLE SP_ZONE_DEFINITION ADD CONSTRAINT SPZD_STU_FK3 FOREIGN KEY
(
STRAT_NAME_SET_ID,
DEFINED_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPZD_W_FK'
ALTER TABLE SP_ZONE_DEFINITION ADD CONSTRAINT SPZD_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SZDX_BA_FK'
ALTER TABLE SP_ZONE_DEFIN_XREF ADD CONSTRAINT SZDX_BA_FK FOREIGN KEY
(
RESPONSIBLE_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SZDX_R_SZDX_FK'
ALTER TABLE SP_ZONE_DEFIN_XREF ADD CONSTRAINT SZDX_R_SZDX_FK FOREIGN KEY
(
XREF_REASON
)
REFERENCES R_SP_ZONE_DEFIN_XREF
(
XREF_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SZDX_SPZD_FK'
ALTER TABLE SP_ZONE_DEFIN_XREF ADD CONSTRAINT SZDX_SPZD_FK FOREIGN KEY
(
ZONE_DEFINITION_ID_1
)
REFERENCES SP_ZONE_DEFINITION
(
ZONE_DEFINITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SZDX_SPZD_FK2'
ALTER TABLE SP_ZONE_DEFIN_XREF ADD CONSTRAINT SZDX_SPZD_FK2 FOREIGN KEY
(
ZONE_DEFINITION_ID_2
)
REFERENCES SP_ZONE_DEFINITION
(
ZONE_DEFINITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPZS_R_SUQ_FK'
ALTER TABLE SP_ZONE_SUBSTANCE ADD CONSTRAINT SPZS_R_SUQ_FK FOREIGN KEY
(
BASE_QUALIFIER
)
REFERENCES R_STRAT_UNIT_QUALIFIER
(
QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPZS_R_SUQ_FK2'
ALTER TABLE SP_ZONE_SUBSTANCE ADD CONSTRAINT SPZS_R_SUQ_FK2 FOREIGN KEY
(
TOP_QUALIFIER
)
REFERENCES R_STRAT_UNIT_QUALIFIER
(
QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPZS_SPMZ_FK'
ALTER TABLE SP_ZONE_SUBSTANCE ADD CONSTRAINT SPZS_SPMZ_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO,
MINERAL_ZONE_ID
)
REFERENCES SP_MINERAL_ZONE
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO,
MINERAL_ZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPZS_STU_FK'
ALTER TABLE SP_ZONE_SUBSTANCE ADD CONSTRAINT SPZS_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
BASE_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPZS_STU_FK2'
ALTER TABLE SP_ZONE_SUBSTANCE ADD CONSTRAINT SPZS_STU_FK2 FOREIGN KEY
(
STRAT_NAME_SET_ID,
TOP_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SPZS_SUB_FK'
ALTER TABLE SP_ZONE_SUBSTANCE ADD CONSTRAINT SPZS_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STAM_R_SAM_FK'
ALTER TABLE STRAT_ACQTN_METHOD ADD CONSTRAINT STAM_R_SAM_FK FOREIGN KEY
(
ACQTN_METHOD_TYPE
)
REFERENCES R_STRAT_ACQTN_METHOD
(
ACQTN_METHOD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STAM_STCU_FK'
ALTER TABLE STRAT_ACQTN_METHOD ADD CONSTRAINT STAM_STCU_FK FOREIGN KEY
(
STRAT_COLUMN_ID,
STRAT_COLUMN_SOURCE,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
)
REFERENCES STRAT_COLUMN_UNIT
(
STRAT_COLUMN_ID,
STRAT_COLUMN_SOURCE,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STAM_STFS_FK'
ALTER TABLE STRAT_ACQTN_METHOD ADD CONSTRAINT STAM_STFS_FK FOREIGN KEY
(
FIELD_STATION_ID,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
)
REFERENCES STRAT_FIELD_SECTION
(
FIELD_STATION_ID,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STAM_STWS_FK'
ALTER TABLE STRAT_ACQTN_METHOD ADD CONSTRAINT STAM_STWS_FK FOREIGN KEY
(
UWI,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
)
REFERENCES STRAT_WELL_SECTION
(
UWI,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STAL_BA_FK'
ALTER TABLE STRAT_ALIAS ADD CONSTRAINT STAL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STAL_PSWA_FK'
ALTER TABLE STRAT_ALIAS ADD CONSTRAINT STAL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STAL_R_ART_FK'
ALTER TABLE STRAT_ALIAS ADD CONSTRAINT STAL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STAL_R_LANG_FK'
ALTER TABLE STRAT_ALIAS ADD CONSTRAINT STAL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STAL_R_SAT1_FK'
ALTER TABLE STRAT_ALIAS ADD CONSTRAINT STAL_R_SAT1_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_STRAT_ALIAS_TYPE
(
STRAT_ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STAL_SRCD_FK'
ALTER TABLE STRAT_ALIAS ADD CONSTRAINT STAL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STAL_STU_FK'
ALTER TABLE STRAT_ALIAS ADD CONSTRAINT STAL_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STAL_STU_FK2'
ALTER TABLE STRAT_ALIAS ADD CONSTRAINT STAL_STU_FK2 FOREIGN KEY
(
ALIAS_STRAT_NAME_SET_ID,
ALIAS_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCOL_A_FK'
ALTER TABLE STRAT_COLUMN ADD CONSTRAINT STCOL_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCOL_BA_FK'
ALTER TABLE STRAT_COLUMN ADD CONSTRAINT STCOL_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCOL_R_SCT1_FK'
ALTER TABLE STRAT_COLUMN ADD CONSTRAINT STCOL_R_SCT1_FK FOREIGN KEY
(
STRAT_COLUMN_TYPE
)
REFERENCES R_STRAT_COLUMN_TYPE
(
STRAT_COLUMN_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCOL_SRCD_FK'
ALTER TABLE STRAT_COLUMN ADD CONSTRAINT STCOL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCA_PROJ_FK'
ALTER TABLE STRAT_COLUMN_ACQTN ADD CONSTRAINT STCA_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCA_RMII_FK'
ALTER TABLE STRAT_COLUMN_ACQTN ADD CONSTRAINT STCA_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCA_SS_FK'
ALTER TABLE STRAT_COLUMN_ACQTN ADD CONSTRAINT STCA_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCA_STCOL_FK'
ALTER TABLE STRAT_COLUMN_ACQTN ADD CONSTRAINT STCA_STCOL_FK FOREIGN KEY
(
STRAT_COLUMN_ID,
STRAT_COLUMN_SOURCE
)
REFERENCES STRAT_COLUMN
(
STRAT_COLUMN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCA_STCU_FK'
ALTER TABLE STRAT_COLUMN_ACQTN ADD CONSTRAINT STCA_STCU_FK FOREIGN KEY
(
STRAT_COLUMN_ID,
STRAT_COLUMN_SOURCE,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
)
REFERENCES STRAT_COLUMN_UNIT
(
STRAT_COLUMN_ID,
STRAT_COLUMN_SOURCE,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCA_STFS_FK'
ALTER TABLE STRAT_COLUMN_ACQTN ADD CONSTRAINT STCA_STFS_FK FOREIGN KEY
(
FIELD_STATION_ID,
STRAT_NAME_SET_ID,
FIELD_STRAT_UNIT_ID,
FIELD_INTERP_ID
)
REFERENCES STRAT_FIELD_SECTION
(
FIELD_STATION_ID,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCA_STFST_FK'
ALTER TABLE STRAT_COLUMN_ACQTN ADD CONSTRAINT STCA_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCA_STWS_FK'
ALTER TABLE STRAT_COLUMN_ACQTN ADD CONSTRAINT STCA_STWS_FK FOREIGN KEY
(
UWI,
STRAT_NAME_SET_ID,
WS_STRAT_UNIT_ID,
WS_INTERP_ID
)
REFERENCES STRAT_WELL_SECTION
(
UWI,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCA_W_FK'
ALTER TABLE STRAT_COLUMN_ACQTN ADD CONSTRAINT STCA_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCA_WCR_FK'
ALTER TABLE STRAT_COLUMN_ACQTN ADD CONSTRAINT STCA_WCR_FK FOREIGN KEY
(
UWI,
CORE_SOURCE,
CORE_ID
)
REFERENCES WELL_CORE
(
UWI,
SOURCE,
CORE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCA_WLC_FK'
ALTER TABLE STRAT_COLUMN_ACQTN ADD CONSTRAINT STCA_WLC_FK FOREIGN KEY
(
UWI,
LOG_CURVE_ID
)
REFERENCES WELL_LOG_CURVE
(
UWI,
CURVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCU_BA_FK'
ALTER TABLE STRAT_COLUMN_UNIT ADD CONSTRAINT STCU_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCU_PSWA_FK'
ALTER TABLE STRAT_COLUMN_UNIT ADD CONSTRAINT STCU_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCU_R_CONR_FK'
ALTER TABLE STRAT_COLUMN_UNIT ADD CONSTRAINT STCU_R_CONR_FK FOREIGN KEY
(
CONFORMITY_RELATIONSHIP
)
REFERENCES R_CONFORMITY_RELATION
(
CONFORMITY_RELATIONSHIP
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCU_R_L_FK'
ALTER TABLE STRAT_COLUMN_UNIT ADD CONSTRAINT STCU_R_L_FK FOREIGN KEY
(
LITHOLOGY
)
REFERENCES R_LITHOLOGY
(
LITHOLOGY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCU_R_RFTY_FK'
ALTER TABLE STRAT_COLUMN_UNIT ADD CONSTRAINT STCU_R_RFTY_FK FOREIGN KEY
(
REPEAT_STRAT_TYPE
)
REFERENCES R_REPEAT_STRAT_TYPE
(
REPEAT_STRAT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCU_R_SIM_FK'
ALTER TABLE STRAT_COLUMN_UNIT ADD CONSTRAINT STCU_R_SIM_FK FOREIGN KEY
(
STRAT_INTERPRET_METHOD
)
REFERENCES R_STRAT_INTERP_METHOD
(
STRAT_INTERPRET_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCU_R_SOT_FK'
ALTER TABLE STRAT_COLUMN_UNIT ADD CONSTRAINT STCU_R_SOT_FK FOREIGN KEY
(
OCCURRENCE_TYPE
)
REFERENCES R_STRAT_OCCURRENCE_TYPE
(
OCCURRENCE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCU_SRCD_FK'
ALTER TABLE STRAT_COLUMN_UNIT ADD CONSTRAINT STCU_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCU_STCOL_FK'
ALTER TABLE STRAT_COLUMN_UNIT ADD CONSTRAINT STCU_STCOL_FK FOREIGN KEY
(
STRAT_COLUMN_ID,
STRAT_COLUMN_SOURCE
)
REFERENCES STRAT_COLUMN
(
STRAT_COLUMN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCU_STU_FK'
ALTER TABLE STRAT_COLUMN_UNIT ADD CONSTRAINT STCU_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCX_R_SCXT_FK'
ALTER TABLE STRAT_COLUMN_XREF ADD CONSTRAINT STCX_R_SCXT_FK FOREIGN KEY
(
STRAT_COLUMN_XREF_TYPE
)
REFERENCES R_STRAT_COL_XREF_TYPE
(
STRAT_COLUMN_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCX_STCOL_FK'
ALTER TABLE STRAT_COLUMN_XREF ADD CONSTRAINT STCX_STCOL_FK FOREIGN KEY
(
STRAT_COLUMN_ID_2,
STRAT_COLUMN_SOURCE_2
)
REFERENCES STRAT_COLUMN
(
STRAT_COLUMN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCX_STCOL_FK2'
ALTER TABLE STRAT_COLUMN_XREF ADD CONSTRAINT STCX_STCOL_FK2 FOREIGN KEY
(
STRAT_COLUMN_ID_1,
STRAT_COLUMN_SOURCE_1
)
REFERENCES STRAT_COLUMN
(
STRAT_COLUMN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCUA_R_SAM1_FK'
ALTER TABLE STRAT_COL_UNIT_AGE ADD CONSTRAINT STCUA_R_SAM1_FK FOREIGN KEY
(
STRAT_AGE_METHOD
)
REFERENCES R_STRAT_AGE_METHOD
(
STRAT_AGE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCUA_SRCD_FK'
ALTER TABLE STRAT_COL_UNIT_AGE ADD CONSTRAINT STCUA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCUA_STCU_FK'
ALTER TABLE STRAT_COL_UNIT_AGE ADD CONSTRAINT STCUA_STCU_FK FOREIGN KEY
(
STRAT_COLUMN_ID,
STRAT_COLUMN_SOURCE,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
)
REFERENCES STRAT_COLUMN_UNIT
(
STRAT_COLUMN_ID,
STRAT_COLUMN_SOURCE,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCUA_STU_FK3'
ALTER TABLE STRAT_COL_UNIT_AGE ADD CONSTRAINT STCUA_STU_FK3 FOREIGN KEY
(
LOWER_REL_STRAT_NAME_SET,
LOWER_REL_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCUA_STU_FK'
ALTER TABLE STRAT_COL_UNIT_AGE ADD CONSTRAINT STCUA_STU_FK FOREIGN KEY
(
UPPER_REL_STRAT_NAME_SET,
UPPER_REL_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STCUA_STU_FK2'
ALTER TABLE STRAT_COL_UNIT_AGE ADD CONSTRAINT STCUA_STU_FK2 FOREIGN KEY
(
AVERAGE_REL_STRAT_NAME_SET,
AVERAGE_REL_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STE_A_FK'
ALTER TABLE STRAT_EQUIVALENCE ADD CONSTRAINT STE_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STE_A_FK2'
ALTER TABLE STRAT_EQUIVALENCE ADD CONSTRAINT STE_A_FK2 FOREIGN KEY
(
AREA_ID2,
AREA_TYPE2
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STE_R_SED_FK'
ALTER TABLE STRAT_EQUIVALENCE ADD CONSTRAINT STE_R_SED_FK FOREIGN KEY
(
EQUIV_DIRECTION
)
REFERENCES R_STRAT_EQUIV_DIRECT
(
STRAT_EQUIVALENCE_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STE_R_SET1_FK'
ALTER TABLE STRAT_EQUIVALENCE ADD CONSTRAINT STE_R_SET1_FK FOREIGN KEY
(
STRAT_EQUIVALENCE_TYPE
)
REFERENCES R_STRAT_EQUIV_TYPE
(
STRAT_EQUIVALENCE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STE_SRCD_FK'
ALTER TABLE STRAT_EQUIVALENCE ADD CONSTRAINT STE_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STE_STCOL_FK'
ALTER TABLE STRAT_EQUIVALENCE ADD CONSTRAINT STE_STCOL_FK FOREIGN KEY
(
EQUIV_STRAT_COLUMN_ID,
EQUIV_STRAT_COLUMN_SOURCE
)
REFERENCES STRAT_COLUMN
(
STRAT_COLUMN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STE_STCOL_FK2'
ALTER TABLE STRAT_EQUIVALENCE ADD CONSTRAINT STE_STCOL_FK2 FOREIGN KEY
(
STRAT_COLUMN_ID,
STRAT_COLUMN_SOURCE
)
REFERENCES STRAT_COLUMN
(
STRAT_COLUMN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STE_STCU_FK'
ALTER TABLE STRAT_EQUIVALENCE ADD CONSTRAINT STE_STCU_FK FOREIGN KEY
(
STRAT_COLUMN_ID,
STRAT_COLUMN_SOURCE,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
STRAT_INTERP_ID
)
REFERENCES STRAT_COLUMN_UNIT
(
STRAT_COLUMN_ID,
STRAT_COLUMN_SOURCE,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STE_STCU_FK2'
ALTER TABLE STRAT_EQUIVALENCE ADD CONSTRAINT STE_STCU_FK2 FOREIGN KEY
(
EQUIV_STRAT_COLUMN_ID,
EQUIV_STRAT_COLUMN_SOURCE,
EQUIV_STRAT_NAME_SET_ID,
EQUIV_STRAT_UNIT_ID,
EQUIV_INTERP_ID
)
REFERENCES STRAT_COLUMN_UNIT
(
STRAT_COLUMN_ID,
STRAT_COLUMN_SOURCE,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STE_STU_FK2'
ALTER TABLE STRAT_EQUIVALENCE ADD CONSTRAINT STE_STU_FK2 FOREIGN KEY
(
EQUIV_STRAT_NAME_SET_ID,
EQUIV_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STE_STU_FK'
ALTER TABLE STRAT_EQUIVALENCE ADD CONSTRAINT STE_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFA_PROJ_FK'
ALTER TABLE STRAT_FIELD_ACQTN ADD CONSTRAINT STFA_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFA_RMII_FK'
ALTER TABLE STRAT_FIELD_ACQTN ADD CONSTRAINT STFA_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFA_SS_FK'
ALTER TABLE STRAT_FIELD_ACQTN ADD CONSTRAINT STFA_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFA_STCOL_FK'
ALTER TABLE STRAT_FIELD_ACQTN ADD CONSTRAINT STFA_STCOL_FK FOREIGN KEY
(
STRAT_COLUMN_ID,
STRAT_COLUMN_SOURCE
)
REFERENCES STRAT_COLUMN
(
STRAT_COLUMN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFA_STFS_FK'
ALTER TABLE STRAT_FIELD_ACQTN ADD CONSTRAINT STFA_STFS_FK FOREIGN KEY
(
FIELD_STATION_ID,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
)
REFERENCES STRAT_FIELD_SECTION
(
FIELD_STATION_ID,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFA_STFST_FK'
ALTER TABLE STRAT_FIELD_ACQTN ADD CONSTRAINT STFA_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFA_W_FK'
ALTER TABLE STRAT_FIELD_ACQTN ADD CONSTRAINT STFA_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFA_WCR_FK'
ALTER TABLE STRAT_FIELD_ACQTN ADD CONSTRAINT STFA_WCR_FK FOREIGN KEY
(
UWI,
CORE_SOURCE,
CORE_ID
)
REFERENCES WELL_CORE
(
UWI,
SOURCE,
CORE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFA_WLC_FK'
ALTER TABLE STRAT_FIELD_ACQTN ADD CONSTRAINT STFA_WLC_FK FOREIGN KEY
(
UWI,
LOG_CURVE_ID
)
REFERENCES WELL_LOG_CURVE
(
UWI,
CURVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFN_CS_FK2'
ALTER TABLE STRAT_FIELD_NODE ADD CONSTRAINT STFN_CS_FK2 FOREIGN KEY
(
LOCAL_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFN_CS_FK'
ALTER TABLE STRAT_FIELD_NODE ADD CONSTRAINT STFN_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFN_CSCA_FK'
ALTER TABLE STRAT_FIELD_NODE ADD CONSTRAINT STFN_CSCA_FK FOREIGN KEY
(
COORD_ACQUISITION_ID
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFN_R_SFNL_FK'
ALTER TABLE STRAT_FIELD_NODE ADD CONSTRAINT STFN_R_SFNL_FK FOREIGN KEY
(
NODE_LOC_TYPE
)
REFERENCES R_STRAT_FLD_NODE_LOC
(
NODE_LOC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFN_STFST_FK'
ALTER TABLE STRAT_FIELD_NODE ADD CONSTRAINT STFN_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFS_A_FK'
ALTER TABLE STRAT_FIELD_SECTION ADD CONSTRAINT STFS_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFS_BA_FK'
ALTER TABLE STRAT_FIELD_SECTION ADD CONSTRAINT STFS_BA_FK FOREIGN KEY
(
INTERPRETER
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFS_PSWA_FK'
ALTER TABLE STRAT_FIELD_SECTION ADD CONSTRAINT STFS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFS_R_CONR_FK'
ALTER TABLE STRAT_FIELD_SECTION ADD CONSTRAINT STFS_R_CONR_FK FOREIGN KEY
(
CONFORMITY_RELATIONSHIP
)
REFERENCES R_CONFORMITY_RELATION
(
CONFORMITY_RELATIONSHIP
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFS_R_L_FK'
ALTER TABLE STRAT_FIELD_SECTION ADD CONSTRAINT STFS_R_L_FK FOREIGN KEY
(
LITHOLOGY
)
REFERENCES R_LITHOLOGY
(
LITHOLOGY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFS_R_N_FK'
ALTER TABLE STRAT_FIELD_SECTION ADD CONSTRAINT STFS_R_N_FK FOREIGN KEY
(
AZIMUTH_NORTH_TYPE
)
REFERENCES R_NORTH
(
NORTH_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFS_R_PL_FK'
ALTER TABLE STRAT_FIELD_SECTION ADD CONSTRAINT STFS_R_PL_FK FOREIGN KEY
(
PICK_LOCATION
)
REFERENCES R_PICK_LOCATION
(
PICK_LOCATION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFS_R_PQ_FK'
ALTER TABLE STRAT_FIELD_SECTION ADD CONSTRAINT STFS_R_PQ_FK FOREIGN KEY
(
PICK_QUALIFIER
)
REFERENCES R_PICK_QUALIFIER
(
PICK_QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFS_R_PQR_FK'
ALTER TABLE STRAT_FIELD_SECTION ADD CONSTRAINT STFS_R_PQR_FK FOREIGN KEY
(
PICK_QUALIF_REASON
)
REFERENCES R_PICK_QUALIF_REASON
(
PICK_QUALIF_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFS_R_PQ1_FK'
ALTER TABLE STRAT_FIELD_SECTION ADD CONSTRAINT STFS_R_PQ1_FK FOREIGN KEY
(
PICK_QUALITY
)
REFERENCES R_PICK_QUALITY
(
PICK_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFS_R_PVT_FK'
ALTER TABLE STRAT_FIELD_SECTION ADD CONSTRAINT STFS_R_PVT_FK FOREIGN KEY
(
PICK_VERSION_TYPE
)
REFERENCES R_PICK_VERSION_TYPE
(
PICK_VERSION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFS_R_RFTY_FK'
ALTER TABLE STRAT_FIELD_SECTION ADD CONSTRAINT STFS_R_RFTY_FK FOREIGN KEY
(
REPEAT_STRAT_TYPE
)
REFERENCES R_REPEAT_STRAT_TYPE
(
REPEAT_STRAT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFS_R_SIM_FK'
ALTER TABLE STRAT_FIELD_SECTION ADD CONSTRAINT STFS_R_SIM_FK FOREIGN KEY
(
STRAT_INTERPRET_METHOD
)
REFERENCES R_STRAT_INTERP_METHOD
(
STRAT_INTERPRET_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFS_R_TM_FK'
ALTER TABLE STRAT_FIELD_SECTION ADD CONSTRAINT STFS_R_TM_FK FOREIGN KEY
(
TVD_METHOD
)
REFERENCES R_TVD_METHOD
(
TVD_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFS_SRCD_FK'
ALTER TABLE STRAT_FIELD_SECTION ADD CONSTRAINT STFS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFS_STFST_FK'
ALTER TABLE STRAT_FIELD_SECTION ADD CONSTRAINT STFS_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFS_STU_FK'
ALTER TABLE STRAT_FIELD_SECTION ADD CONSTRAINT STFS_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFST_A_FK'
ALTER TABLE STRAT_FIELD_STATION ADD CONSTRAINT STFST_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFST_R_FST_FK'
ALTER TABLE STRAT_FIELD_STATION ADD CONSTRAINT STFST_R_FST_FK FOREIGN KEY
(
FIELD_STATION_TYPE
)
REFERENCES R_FIELD_STATION_TYPE
(
FIELD_STATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFST_SRCD_FK'
ALTER TABLE STRAT_FIELD_STATION ADD CONSTRAINT STFST_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFIA_R_SAM1_FK'
ALTER TABLE STRAT_FLD_INTERP_AGE ADD CONSTRAINT STFIA_R_SAM1_FK FOREIGN KEY
(
STRAT_AGE_METHOD
)
REFERENCES R_STRAT_AGE_METHOD
(
STRAT_AGE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFIA_SRCD_FK'
ALTER TABLE STRAT_FLD_INTERP_AGE ADD CONSTRAINT STFIA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFIA_STFS_FK'
ALTER TABLE STRAT_FLD_INTERP_AGE ADD CONSTRAINT STFIA_STFS_FK FOREIGN KEY
(
FIELD_STATION_ID,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
)
REFERENCES STRAT_FIELD_SECTION
(
FIELD_STATION_ID,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFIA_STU_FK3'
ALTER TABLE STRAT_FLD_INTERP_AGE ADD CONSTRAINT STFIA_STU_FK3 FOREIGN KEY
(
UPPER_REL_STRAT_NAME_SET,
UPPER_REL_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFIA_STU_FK2'
ALTER TABLE STRAT_FLD_INTERP_AGE ADD CONSTRAINT STFIA_STU_FK2 FOREIGN KEY
(
LOWER_REL_STRAT_NAME_SET,
LOWER_REL_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STFIA_STU_FK'
ALTER TABLE STRAT_FLD_INTERP_AGE ADD CONSTRAINT STFIA_STU_FK FOREIGN KEY
(
AVERAGE_REL_STRAT_NAME_SET,
AVERAGE_REL_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STH_A_FK'
ALTER TABLE STRAT_HIERARCHY ADD CONSTRAINT STH_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STH_R_SH_FK'
ALTER TABLE STRAT_HIERARCHY ADD CONSTRAINT STH_R_SH_FK FOREIGN KEY
(
STRAT_HIERARCHY_TYPE
)
REFERENCES R_STRAT_HIERARCHY
(
STRAT_HIERARCHY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STH_SRCD_FK'
ALTER TABLE STRAT_HIERARCHY ADD CONSTRAINT STH_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STH_STCOL_FK'
ALTER TABLE STRAT_HIERARCHY ADD CONSTRAINT STH_STCOL_FK FOREIGN KEY
(
PARENT_STRAT_COLUMN_ID,
PARENT_STRAT_COLUMN_SOURCE
)
REFERENCES STRAT_COLUMN
(
STRAT_COLUMN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STH_STCOL_FK2'
ALTER TABLE STRAT_HIERARCHY ADD CONSTRAINT STH_STCOL_FK2 FOREIGN KEY
(
CHILD_STRAT_COLUMN_ID,
CHILD_STRAT_COLUMN_SOURCE
)
REFERENCES STRAT_COLUMN
(
STRAT_COLUMN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STH_STCU_FK'
ALTER TABLE STRAT_HIERARCHY ADD CONSTRAINT STH_STCU_FK FOREIGN KEY
(
PARENT_STRAT_COLUMN_ID,
PARENT_STRAT_COLUMN_SOURCE,
PARENT_STRAT_NAME_SET_ID,
PARENT_STRAT_UNIT_ID,
PARENT_INTERP_ID
)
REFERENCES STRAT_COLUMN_UNIT
(
STRAT_COLUMN_ID,
STRAT_COLUMN_SOURCE,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STH_STCU_FK2'
ALTER TABLE STRAT_HIERARCHY ADD CONSTRAINT STH_STCU_FK2 FOREIGN KEY
(
CHILD_STRAT_COLUMN_ID,
CHILD_STRAT_COLUMN_SOURCE,
CHILD_STRAT_NAME_SET_ID,
CHILD_STRAT_UNIT_ID,
CHILD_INTERP_ID2
)
REFERENCES STRAT_COLUMN_UNIT
(
STRAT_COLUMN_ID,
STRAT_COLUMN_SOURCE,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STH_STU_FK'
ALTER TABLE STRAT_HIERARCHY ADD CONSTRAINT STH_STU_FK FOREIGN KEY
(
CHILD_STRAT_NAME_SET_ID,
CHILD_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STH_STU_FK2'
ALTER TABLE STRAT_HIERARCHY ADD CONSTRAINT STH_STU_FK2 FOREIGN KEY
(
PARENT_STRAT_NAME_SET_ID,
PARENT_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STHD_R_SH_FK'
ALTER TABLE STRAT_HIERARCHY_DESC ADD CONSTRAINT STHD_R_SH_FK FOREIGN KEY
(
STRAT_HIERARCHY_TYPE
)
REFERENCES R_STRAT_HIERARCHY
(
STRAT_HIERARCHY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STHD_R_STYPE_FK'
ALTER TABLE STRAT_HIERARCHY_DESC ADD CONSTRAINT STHD_R_STYPE_FK FOREIGN KEY
(
STRAT_TYPE
)
REFERENCES R_STRAT_TYPE
(
STRAT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STHD_R_SUNT_FK2'
ALTER TABLE STRAT_HIERARCHY_DESC ADD CONSTRAINT STHD_R_SUNT_FK2 FOREIGN KEY
(
STRAT_TYPE,
PARENT_STRAT_UNIT_TYPE
)
REFERENCES R_STRAT_UNIT_TYPE
(
STRAT_TYPE,
STRAT_UNIT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STHD_R_SUNT_FK'
ALTER TABLE STRAT_HIERARCHY_DESC ADD CONSTRAINT STHD_R_SUNT_FK FOREIGN KEY
(
STRAT_TYPE,
STRAT_UNIT_TYPE
)
REFERENCES R_STRAT_UNIT_TYPE
(
STRAT_TYPE,
STRAT_UNIT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STHD_SRCD_FK'
ALTER TABLE STRAT_HIERARCHY_DESC ADD CONSTRAINT STHD_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STIC_A_FK'
ALTER TABLE STRAT_INTERP_CORR ADD CONSTRAINT STIC_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STIC_BA_FK'
ALTER TABLE STRAT_INTERP_CORR ADD CONSTRAINT STIC_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STIC_PROJ_FK'
ALTER TABLE STRAT_INTERP_CORR ADD CONSTRAINT STIC_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STIC_R_Q_FK'
ALTER TABLE STRAT_INTERP_CORR ADD CONSTRAINT STIC_R_Q_FK FOREIGN KEY
(
STRAT_CORRELATION_QUALITY
)
REFERENCES R_QUALITY
(
QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STIC_R_SCC_FK'
ALTER TABLE STRAT_INTERP_CORR ADD CONSTRAINT STIC_R_SCC_FK FOREIGN KEY
(
STRAT_CORRELATION_CRITERIA
)
REFERENCES R_STRAT_CORR_CRITERIA
(
STRAT_CORRELATION_CRITERIA
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STIC_R_SCTY_FK'
ALTER TABLE STRAT_INTERP_CORR ADD CONSTRAINT STIC_R_SCTY_FK FOREIGN KEY
(
STRAT_CORRELATION_TYPE
)
REFERENCES R_STRAT_CORR_TYPE
(
STRAT_CORRELATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STIC_R_SIM_FK'
ALTER TABLE STRAT_INTERP_CORR ADD CONSTRAINT STIC_R_SIM_FK FOREIGN KEY
(
STRAT_INTERPRET_METHOD
)
REFERENCES R_STRAT_INTERP_METHOD
(
STRAT_INTERPRET_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STIC_SRCD_FK'
ALTER TABLE STRAT_INTERP_CORR ADD CONSTRAINT STIC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STIC_STFS_FK'
ALTER TABLE STRAT_INTERP_CORR ADD CONSTRAINT STIC_STFS_FK FOREIGN KEY
(
FIELD_STATION_ID_1,
FIELD_STRAT_NAME_SET_1,
FIELD_STRAT_UNIT_ID_1,
FIELD_INTERP_ID_1
)
REFERENCES STRAT_FIELD_SECTION
(
FIELD_STATION_ID,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STIC_STFS_FK2'
ALTER TABLE STRAT_INTERP_CORR ADD CONSTRAINT STIC_STFS_FK2 FOREIGN KEY
(
FIELD_STATION_ID_2,
FIELD_STRAT_NAME_SET_2,
FIELD_STRAT_UNIT_ID_2,
FIELD_INTERP_ID_2
)
REFERENCES STRAT_FIELD_SECTION
(
FIELD_STATION_ID,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STIC_STWS_FK2'
ALTER TABLE STRAT_INTERP_CORR ADD CONSTRAINT STIC_STWS_FK2 FOREIGN KEY
(
UWI_2,
UWI_STRAT_NAME_SET_2,
UWI_STRAT_UNIT_ID_2,
UWI_INTERP_ID_2
)
REFERENCES STRAT_WELL_SECTION
(
UWI,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STIC_STWS_FK'
ALTER TABLE STRAT_INTERP_CORR ADD CONSTRAINT STIC_STWS_FK FOREIGN KEY
(
UWI_1,
UWI_STRAT_NAME_SET_1,
UWI_STRAT_UNIT_ID_1,
UWI_INTERP_ID_1
)
REFERENCES STRAT_WELL_SECTION
(
UWI,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STNS_A_FK'
ALTER TABLE STRAT_NAME_SET ADD CONSTRAINT STNS_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STNS_BA_FK'
ALTER TABLE STRAT_NAME_SET ADD CONSTRAINT STNS_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STNS_R_SNST_FK'
ALTER TABLE STRAT_NAME_SET ADD CONSTRAINT STNS_R_SNST_FK FOREIGN KEY
(
STRAT_NAME_SET_TYPE
)
REFERENCES R_STRAT_NAME_SET_TYPE
(
STRAT_NAME_SET_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STNSX_R_NSXT_FK'
ALTER TABLE STRAT_NAME_SET_XREF ADD CONSTRAINT STNSX_R_NSXT_FK FOREIGN KEY
(
XREF_TYPE
)
REFERENCES R_NAME_SET_XREF_TYPE
(
XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STNSX_STNS_FK'
ALTER TABLE STRAT_NAME_SET_XREF ADD CONSTRAINT STNSX_STNS_FK FOREIGN KEY
(
STRAT_NAME_SET_ID_1
)
REFERENCES STRAT_NAME_SET
(
STRAT_NAME_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STNSX_STNS_FK2'
ALTER TABLE STRAT_NAME_SET_XREF ADD CONSTRAINT STNSX_STNS_FK2 FOREIGN KEY
(
STRAT_NAME_SET_ID_2
)
REFERENCES STRAT_NAME_SET
(
STRAT_NAME_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STNV_CS_FK'
ALTER TABLE STRAT_NODE_VERSION ADD CONSTRAINT STNV_CS_FK FOREIGN KEY
(
GEOG_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STNV_CS_FK3'
ALTER TABLE STRAT_NODE_VERSION ADD CONSTRAINT STNV_CS_FK3 FOREIGN KEY
(
LOCAL_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STNV_CS_FK2'
ALTER TABLE STRAT_NODE_VERSION ADD CONSTRAINT STNV_CS_FK2 FOREIGN KEY
(
MAP_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STNV_CSCA_FK'
ALTER TABLE STRAT_NODE_VERSION ADD CONSTRAINT STNV_CSCA_FK FOREIGN KEY
(
ACQUISITION_ID
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STNV_R_ED_FK'
ALTER TABLE STRAT_NODE_VERSION ADD CONSTRAINT STNV_R_ED_FK FOREIGN KEY
(
EW_DIRECTION
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STNV_R_LST1_FK'
ALTER TABLE STRAT_NODE_VERSION ADD CONSTRAINT STNV_R_LST1_FK FOREIGN KEY
(
LEGAL_SURVEY_TYPE
)
REFERENCES R_LEGAL_SURVEY_TYPE
(
LEGAL_SURVEY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STNV_R_LQ_FK'
ALTER TABLE STRAT_NODE_VERSION ADD CONSTRAINT STNV_R_LQ_FK FOREIGN KEY
(
LOCATION_QUALIFIER
)
REFERENCES R_LOCATION_QUALIFIER
(
LOCATION_QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STNV_R_N_FK'
ALTER TABLE STRAT_NODE_VERSION ADD CONSTRAINT STNV_R_N_FK FOREIGN KEY
(
NORTH_TYPE
)
REFERENCES R_NORTH
(
NORTH_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STNV_R_ND_FK'
ALTER TABLE STRAT_NODE_VERSION ADD CONSTRAINT STNV_R_ND_FK FOREIGN KEY
(
NS_DIRECTION
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STNV_R_SPVT_FK'
ALTER TABLE STRAT_NODE_VERSION ADD CONSTRAINT STNV_R_SPVT_FK FOREIGN KEY
(
VERSION_TYPE
)
REFERENCES R_SP_POINT_VERSION_TYPE
(
VERSION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STNV_R_SFNL_FK'
ALTER TABLE STRAT_NODE_VERSION ADD CONSTRAINT STNV_R_SFNL_FK FOREIGN KEY
(
NODE_LOC_TYPE
)
REFERENCES R_STRAT_FLD_NODE_LOC
(
NODE_LOC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STNV_STFN_FK'
ALTER TABLE STRAT_NODE_VERSION ADD CONSTRAINT STNV_STFN_FK FOREIGN KEY
(
FIELD_STATION_ID,
NODE_ID,
SOURCE
)
REFERENCES STRAT_FIELD_NODE
(
FIELD_STATION_ID,
NODE_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STTR_A_FK'
ALTER TABLE STRAT_TOPO_RELATION ADD CONSTRAINT STTR_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STTR_R_STR_FK'
ALTER TABLE STRAT_TOPO_RELATION ADD CONSTRAINT STTR_R_STR_FK FOREIGN KEY
(
TOPO_RELATION_TYPE
)
REFERENCES R_STRAT_TOPO_RELATION
(
TOPO_RELATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STTR_STCOL_FK'
ALTER TABLE STRAT_TOPO_RELATION ADD CONSTRAINT STTR_STCOL_FK FOREIGN KEY
(
STRAT_COLUMN_ID_1,
STRAT_COLUMN_SOURCE_1
)
REFERENCES STRAT_COLUMN
(
STRAT_COLUMN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STTR_STCOL_FK2'
ALTER TABLE STRAT_TOPO_RELATION ADD CONSTRAINT STTR_STCOL_FK2 FOREIGN KEY
(
STRAT_COLUMN_ID_2,
STRAT_COLUMN_SOURCE_2
)
REFERENCES STRAT_COLUMN
(
STRAT_COLUMN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STTR_STCU_FK'
ALTER TABLE STRAT_TOPO_RELATION ADD CONSTRAINT STTR_STCU_FK FOREIGN KEY
(
STRAT_COLUMN_ID_1,
STRAT_COLUMN_SOURCE_1,
STRAT_NAME_SET_ID_1,
STRAT_UNIT_ID_1,
INTERP_ID_1
)
REFERENCES STRAT_COLUMN_UNIT
(
STRAT_COLUMN_ID,
STRAT_COLUMN_SOURCE,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STTR_STCU_FK2'
ALTER TABLE STRAT_TOPO_RELATION ADD CONSTRAINT STTR_STCU_FK2 FOREIGN KEY
(
STRAT_COLUMN_ID_2,
STRAT_COLUMN_SOURCE_2,
STRAT_NAME_SET_ID_2,
STRAT_UNIT_ID_2,
INTERP_ID_2
)
REFERENCES STRAT_COLUMN_UNIT
(
STRAT_COLUMN_ID,
STRAT_COLUMN_SOURCE,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STTR_STU_FK'
ALTER TABLE STRAT_TOPO_RELATION ADD CONSTRAINT STTR_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID_1,
STRAT_UNIT_ID_1
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STTR_STU_FK2'
ALTER TABLE STRAT_TOPO_RELATION ADD CONSTRAINT STTR_STU_FK2 FOREIGN KEY
(
STRAT_NAME_SET_ID_2,
STRAT_UNIT_ID_2
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STU_A_FK'
ALTER TABLE STRAT_UNIT ADD CONSTRAINT STU_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STU_BA_FK'
ALTER TABLE STRAT_UNIT ADD CONSTRAINT STU_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STU_PACO_FK'
ALTER TABLE STRAT_UNIT ADD CONSTRAINT STU_PACO_FK FOREIGN KEY
(
CONFIDENCE_ID
)
REFERENCES PALEO_CONFIDENCE
(
CONFIDENCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STU_R_FT1_FK'
ALTER TABLE STRAT_UNIT ADD CONSTRAINT STU_R_FT1_FK FOREIGN KEY
(
FAULT_TYPE
)
REFERENCES R_FAULT_TYPE
(
FAULT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STU_R_SIM_FK'
ALTER TABLE STRAT_UNIT ADD CONSTRAINT STU_R_SIM_FK FOREIGN KEY
(
STRAT_INTERPRET_METHOD
)
REFERENCES R_STRAT_INTERP_METHOD
(
STRAT_INTERPRET_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STU_R_SSTAT_FK'
ALTER TABLE STRAT_UNIT ADD CONSTRAINT STU_R_SSTAT_FK FOREIGN KEY
(
STRAT_STATUS
)
REFERENCES R_STRAT_STATUS
(
STRAT_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STU_R_STYPE_FK'
ALTER TABLE STRAT_UNIT ADD CONSTRAINT STU_R_STYPE_FK FOREIGN KEY
(
STRAT_TYPE
)
REFERENCES R_STRAT_TYPE
(
STRAT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STU_R_SUNT_FK'
ALTER TABLE STRAT_UNIT ADD CONSTRAINT STU_R_SUNT_FK FOREIGN KEY
(
STRAT_TYPE,
STRAT_UNIT_TYPE
)
REFERENCES R_STRAT_UNIT_TYPE
(
STRAT_TYPE,
STRAT_UNIT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STU_STNS_FK'
ALTER TABLE STRAT_UNIT ADD CONSTRAINT STU_STNS_FK FOREIGN KEY
(
STRAT_NAME_SET_ID
)
REFERENCES STRAT_NAME_SET
(
STRAT_NAME_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUA_R_SAM1_FK'
ALTER TABLE STRAT_UNIT_AGE ADD CONSTRAINT STUA_R_SAM1_FK FOREIGN KEY
(
STRAT_AGE_METHOD
)
REFERENCES R_STRAT_AGE_METHOD
(
STRAT_AGE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUA_SRCD_FK'
ALTER TABLE STRAT_UNIT_AGE ADD CONSTRAINT STUA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUA_STU_FK3'
ALTER TABLE STRAT_UNIT_AGE ADD CONSTRAINT STUA_STU_FK3 FOREIGN KEY
(
UPPER_REL_STRAT_NAME_SET,
UPPER_REL_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUA_STU_FK4'
ALTER TABLE STRAT_UNIT_AGE ADD CONSTRAINT STUA_STU_FK4 FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUA_STU_FK'
ALTER TABLE STRAT_UNIT_AGE ADD CONSTRAINT STUA_STU_FK FOREIGN KEY
(
AVERAGE_REL_STRAT_NAME_SET,
AVERAGE_REL_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUA_STU_FK2'
ALTER TABLE STRAT_UNIT_AGE ADD CONSTRAINT STUA_STU_FK2 FOREIGN KEY
(
LOWER_REL_STRAT_NAME_SET,
LOWER_REL_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_ANLR_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_APP_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_A_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_BAAU_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_BAE_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_BAO_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_BA_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_CA_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_CEQ_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_CLSL_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_CON_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_CO_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_COT_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_C_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_EZ_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_ENT_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_EQ_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_FAC_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_FLD_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_FIN_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_FOS_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_HI_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_INS_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_INT_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_LR_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_LS_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_LIL_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_NOTI_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_OB_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_PASU_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_PDE_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_PL_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_PSWA_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_PSYS_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_PT_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_PS_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_PS_FK FOREIGN KEY
(
PR_STR_UWI,
PR_STR_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_PROJ_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_RATE_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_RSCL_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_RSE_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_RMDSS_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_RMII_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_RMPI_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_RMTW_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_R_STUCT_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_R_STUCT_FK FOREIGN KEY
(
STRAT_UNIT_COMPONENT_TYPE
)
REFERENCES R_STRAT_UNIT_COMP_TYPE
(
STRAT_UNIT_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_SS_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_SF_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_SPD_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_STFST_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_STU_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_SUB_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_W_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_WAC_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_WAC_FK FOREIGN KEY
(
WELL_ACTIVITY_UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_WSET_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUC_WO_FK'
ALTER TABLE STRAT_UNIT_COMPONENT ADD CONSTRAINT STUC_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUD_R_SDT2_FK'
ALTER TABLE STRAT_UNIT_DESCRIPTION ADD CONSTRAINT STUD_R_SDT2_FK FOREIGN KEY
(
DESCRIPTION_TYPE
)
REFERENCES R_STRAT_DESC_TYPE
(
DESCRIPTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUD_R_SUD_FK'
ALTER TABLE STRAT_UNIT_DESCRIPTION ADD CONSTRAINT STUD_R_SUD_FK FOREIGN KEY
(
STRAT_UNIT_DESC
)
REFERENCES R_STRAT_UNIT_DESC
(
STRAT_UNIT_DESC
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUD_SRCD_FK'
ALTER TABLE STRAT_UNIT_DESCRIPTION ADD CONSTRAINT STUD_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STUD_STU_FK'
ALTER TABLE STRAT_UNIT_DESCRIPTION ADD CONSTRAINT STUD_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWC_PROJ_FK'
ALTER TABLE STRAT_WELL_ACQTN ADD CONSTRAINT STWC_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWC_RMII_FK'
ALTER TABLE STRAT_WELL_ACQTN ADD CONSTRAINT STWC_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWC_SS_FK'
ALTER TABLE STRAT_WELL_ACQTN ADD CONSTRAINT STWC_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWC_STCOL_FK'
ALTER TABLE STRAT_WELL_ACQTN ADD CONSTRAINT STWC_STCOL_FK FOREIGN KEY
(
STRAT_COLUMN_ID,
STRAT_COLUMN_SOURCE
)
REFERENCES STRAT_COLUMN
(
STRAT_COLUMN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWC_STCU_FK'
ALTER TABLE STRAT_WELL_ACQTN ADD CONSTRAINT STWC_STCU_FK FOREIGN KEY
(
STRAT_COLUMN_ID,
STRAT_COLUMN_SOURCE,
STRAT_NAME_SET_ID,
SC_STRAT_UNIT_ID,
SC_INTERP_ID
)
REFERENCES STRAT_COLUMN_UNIT
(
STRAT_COLUMN_ID,
STRAT_COLUMN_SOURCE,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWC_STFS_FK'
ALTER TABLE STRAT_WELL_ACQTN ADD CONSTRAINT STWC_STFS_FK FOREIGN KEY
(
FIELD_STATION_ID,
FIELD_STRAT_NAME_SET_ID,
FIELD_STRAT_UNIT_ID,
FIELD_INTERP_ID
)
REFERENCES STRAT_FIELD_SECTION
(
FIELD_STATION_ID,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWC_STWS_FK'
ALTER TABLE STRAT_WELL_ACQTN ADD CONSTRAINT STWC_STWS_FK FOREIGN KEY
(
UWI,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
)
REFERENCES STRAT_WELL_SECTION
(
UWI,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWC_W_FK'
ALTER TABLE STRAT_WELL_ACQTN ADD CONSTRAINT STWC_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWC_WCR_FK'
ALTER TABLE STRAT_WELL_ACQTN ADD CONSTRAINT STWC_WCR_FK FOREIGN KEY
(
UWI,
CORE_SOURCE,
CORE_ID
)
REFERENCES WELL_CORE
(
UWI,
SOURCE,
CORE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWC_WLC_FK'
ALTER TABLE STRAT_WELL_ACQTN ADD CONSTRAINT STWC_WLC_FK FOREIGN KEY
(
UWI,
LOG_CURVE_ID
)
REFERENCES WELL_LOG_CURVE
(
UWI,
CURVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWIA_R_SAM1_FK'
ALTER TABLE STRAT_WELL_INTERP_AGE ADD CONSTRAINT STWIA_R_SAM1_FK FOREIGN KEY
(
STRAT_AGE_METHOD
)
REFERENCES R_STRAT_AGE_METHOD
(
STRAT_AGE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWIA_SRCD_FK'
ALTER TABLE STRAT_WELL_INTERP_AGE ADD CONSTRAINT STWIA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWIA_STU_FK'
ALTER TABLE STRAT_WELL_INTERP_AGE ADD CONSTRAINT STWIA_STU_FK FOREIGN KEY
(
UPPER_REL_STRAT_NAME_SET,
UPPER_REL_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWIA_STU_FK2'
ALTER TABLE STRAT_WELL_INTERP_AGE ADD CONSTRAINT STWIA_STU_FK2 FOREIGN KEY
(
AVERAGE_REL_STRAT_NAME_SET,
AVERAGE_REL_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWIA_STU_FK3'
ALTER TABLE STRAT_WELL_INTERP_AGE ADD CONSTRAINT STWIA_STU_FK3 FOREIGN KEY
(
LOWER_REL_STRAT_NAME_SET,
LOWER_REL_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWIA_STWS_FK'
ALTER TABLE STRAT_WELL_INTERP_AGE ADD CONSTRAINT STWIA_STWS_FK FOREIGN KEY
(
UWI,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
)
REFERENCES STRAT_WELL_SECTION
(
UWI,
STRAT_NAME_SET_ID,
STRAT_UNIT_ID,
INTERP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWS_A_FK'
ALTER TABLE STRAT_WELL_SECTION ADD CONSTRAINT STWS_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWS_BA_FK'
ALTER TABLE STRAT_WELL_SECTION ADD CONSTRAINT STWS_BA_FK FOREIGN KEY
(
INTERPRETER
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWS_PSWA_FK'
ALTER TABLE STRAT_WELL_SECTION ADD CONSTRAINT STWS_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWS_R_CONR_FK'
ALTER TABLE STRAT_WELL_SECTION ADD CONSTRAINT STWS_R_CONR_FK FOREIGN KEY
(
CONFORMITY_RELATIONSHIP
)
REFERENCES R_CONFORMITY_RELATION
(
CONFORMITY_RELATIONSHIP
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWS_R_L_FK'
ALTER TABLE STRAT_WELL_SECTION ADD CONSTRAINT STWS_R_L_FK FOREIGN KEY
(
DOMINANT_LITHOLOGY
)
REFERENCES R_LITHOLOGY
(
LITHOLOGY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWS_R_MIST_FK'
ALTER TABLE STRAT_WELL_SECTION ADD CONSTRAINT STWS_R_MIST_FK FOREIGN KEY
(
MISSING_STRAT_TYPE
)
REFERENCES R_MISSING_STRAT_TYPE
(
MISSING_STRAT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWS_R_N_FK'
ALTER TABLE STRAT_WELL_SECTION ADD CONSTRAINT STWS_R_N_FK FOREIGN KEY
(
AZIMUTH_NORTH_TYPE
)
REFERENCES R_NORTH
(
NORTH_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWS_R_PL_FK'
ALTER TABLE STRAT_WELL_SECTION ADD CONSTRAINT STWS_R_PL_FK FOREIGN KEY
(
PICK_LOCATION
)
REFERENCES R_PICK_LOCATION
(
PICK_LOCATION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWS_R_PQ_FK'
ALTER TABLE STRAT_WELL_SECTION ADD CONSTRAINT STWS_R_PQ_FK FOREIGN KEY
(
PICK_QUALIFIER
)
REFERENCES R_PICK_QUALIFIER
(
PICK_QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWS_R_PQR_FK'
ALTER TABLE STRAT_WELL_SECTION ADD CONSTRAINT STWS_R_PQR_FK FOREIGN KEY
(
PICK_QUALIF_REASON
)
REFERENCES R_PICK_QUALIF_REASON
(
PICK_QUALIF_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWS_R_PQ1_FK'
ALTER TABLE STRAT_WELL_SECTION ADD CONSTRAINT STWS_R_PQ1_FK FOREIGN KEY
(
PICK_QUALITY
)
REFERENCES R_PICK_QUALITY
(
PICK_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWS_R_PVT_FK'
ALTER TABLE STRAT_WELL_SECTION ADD CONSTRAINT STWS_R_PVT_FK FOREIGN KEY
(
PICK_VERSION_TYPE
)
REFERENCES R_PICK_VERSION_TYPE
(
PICK_VERSION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWS_R_RFTY_FK'
ALTER TABLE STRAT_WELL_SECTION ADD CONSTRAINT STWS_R_RFTY_FK FOREIGN KEY
(
REPEAT_STRAT_TYPE
)
REFERENCES R_REPEAT_STRAT_TYPE
(
REPEAT_STRAT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWS_R_SIM_FK'
ALTER TABLE STRAT_WELL_SECTION ADD CONSTRAINT STWS_R_SIM_FK FOREIGN KEY
(
STRAT_INTERPRET_METHOD
)
REFERENCES R_STRAT_INTERP_METHOD
(
STRAT_INTERPRET_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWS_R_TM_FK'
ALTER TABLE STRAT_WELL_SECTION ADD CONSTRAINT STWS_R_TM_FK FOREIGN KEY
(
TVD_METHOD
)
REFERENCES R_TVD_METHOD
(
TVD_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWS_SRCD_FK'
ALTER TABLE STRAT_WELL_SECTION ADD CONSTRAINT STWS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWS_STU_FK'
ALTER TABLE STRAT_WELL_SECTION ADD CONSTRAINT STWS_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT STWS_W_FK'
ALTER TABLE STRAT_WELL_SECTION ADD CONSTRAINT STWS_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUB_PPS_FK'
ALTER TABLE SUBSTANCE ADD CONSTRAINT SUB_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUB_PQ_FK'
ALTER TABLE SUBSTANCE ADD CONSTRAINT SUB_PQ_FK FOREIGN KEY
(
CONVERSION_QUANTITY
)
REFERENCES PPDM_QUANTITY
(
QUANTITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBA_BA_FK'
ALTER TABLE SUBSTANCE_ALIAS ADD CONSTRAINT SUBA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBA_CEQ_FK'
ALTER TABLE SUBSTANCE_ALIAS ADD CONSTRAINT SUBA_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBA_PSWA_FK'
ALTER TABLE SUBSTANCE_ALIAS ADD CONSTRAINT SUBA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBA_R_ART_FK'
ALTER TABLE SUBSTANCE_ALIAS ADD CONSTRAINT SUBA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBA_R_ATY_FK'
ALTER TABLE SUBSTANCE_ALIAS ADD CONSTRAINT SUBA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBA_R_LANG_FK'
ALTER TABLE SUBSTANCE_ALIAS ADD CONSTRAINT SUBA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBA_SRCD_FK'
ALTER TABLE SUBSTANCE_ALIAS ADD CONSTRAINT SUBA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBA_SUB_FK'
ALTER TABLE SUBSTANCE_ALIAS ADD CONSTRAINT SUBA_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBBA_ANLR_FK'
ALTER TABLE SUBSTANCE_BA ADD CONSTRAINT SUBBA_ANLR_FK FOREIGN KEY
(
SUBSTANCE_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBBA_ANLAS_FK'
ALTER TABLE SUBSTANCE_BA ADD CONSTRAINT SUBBA_ANLAS_FK FOREIGN KEY
(
SUBSTANCE_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBBA_BA_FK'
ALTER TABLE SUBSTANCE_BA ADD CONSTRAINT SUBBA_BA_FK FOREIGN KEY
(
SUBSTANCE_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBBA_R_ABRT_FK'
ALTER TABLE SUBSTANCE_BA ADD CONSTRAINT SUBBA_R_ABRT_FK FOREIGN KEY
(
BA_ROLE_TYPE
)
REFERENCES R_ANL_BA_ROLE_TYPE
(
BA_ROLE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBBA_SUB_FK'
ALTER TABLE SUBSTANCE_BA ADD CONSTRAINT SUBBA_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBB_PPS_FK'
ALTER TABLE SUBSTANCE_BEHAVIOR ADD CONSTRAINT SUBB_PPS_FK FOREIGN KEY
(
PROPERTY_SET_ID
)
REFERENCES PPDM_PROPERTY_SET
(
PROPERTY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBB_SUB_FK'
ALTER TABLE SUBSTANCE_BEHAVIOR ADD CONSTRAINT SUBB_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBC_BA_FK'
ALTER TABLE SUBSTANCE_COMPOSITION ADD CONSTRAINT SUBC_BA_FK FOREIGN KEY
(
DEFINED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBC_R_SUBCT_FK'
ALTER TABLE SUBSTANCE_COMPOSITION ADD CONSTRAINT SUBC_R_SUBCT_FK FOREIGN KEY
(
SUBSTANCE_COMPONENT_TYPE
)
REFERENCES R_SUBSTANCE_COMP_TYPE
(
SUBSTANCE_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBC_SRCD_FK'
ALTER TABLE SUBSTANCE_COMPOSITION ADD CONSTRAINT SUBC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBC_SUB_FK'
ALTER TABLE SUBSTANCE_COMPOSITION ADD CONSTRAINT SUBC_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBC_SUB_FK2'
ALTER TABLE SUBSTANCE_COMPOSITION ADD CONSTRAINT SUBC_SUB_FK2 FOREIGN KEY
(
SUB_SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBPD_R_SUBP_FK'
ALTER TABLE SUBSTANCE_PROPERTY_DETAIL ADD CONSTRAINT SUBPD_R_SUBP_FK FOREIGN KEY
(
SUBSTANCE_PROPERTY
)
REFERENCES R_SUBSTANCE_PROPERTY
(
SUBSTANCE_PROPERTY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBPD_SUB_FK'
ALTER TABLE SUBSTANCE_PROPERTY_DETAIL ADD CONSTRAINT SUBPD_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBU_A_FK'
ALTER TABLE SUBSTANCE_USE ADD CONSTRAINT SUBU_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBU_BA_FK'
ALTER TABLE SUBSTANCE_USE ADD CONSTRAINT SUBU_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBU_C_FK'
ALTER TABLE SUBSTANCE_USE ADD CONSTRAINT SUBU_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBU_LR_FK'
ALTER TABLE SUBSTANCE_USE ADD CONSTRAINT SUBU_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBU_PC_FK'
ALTER TABLE SUBSTANCE_USE ADD CONSTRAINT SUBU_PC_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME,
PPDM_COLUMN_NAME
)
REFERENCES PPDM_COLUMN
(
SYSTEM_ID,
TABLE_NAME,
COLUMN_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBU_PT_FK'
ALTER TABLE SUBSTANCE_USE ADD CONSTRAINT SUBU_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBU_PROJ_FK'
ALTER TABLE SUBSTANCE_USE ADD CONSTRAINT SUBU_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBU_R_SUBUR_FK'
ALTER TABLE SUBSTANCE_USE ADD CONSTRAINT SUBU_R_SUBUR_FK FOREIGN KEY
(
SUBSTANCE_USE_RULE_TYPE
)
REFERENCES R_SUBSTANCE_USE_RULE
(
SUBSTANCE_USE_RULE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBU_SUB_FK'
ALTER TABLE SUBSTANCE_USE ADD CONSTRAINT SUBU_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBU_SUBA_FK'
ALTER TABLE SUBSTANCE_USE ADD CONSTRAINT SUBU_SUBA_FK FOREIGN KEY
(
SUBSTANCE_ID,
SUBSTANCE_ALIAS_ID
)
REFERENCES SUBSTANCE_ALIAS
(
SUBSTANCE_ID,
ALIAS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBX_R_SUBXT_FK'
ALTER TABLE SUBSTANCE_XREF ADD CONSTRAINT SUBX_R_SUBXT_FK FOREIGN KEY
(
SUBSTANCE_XREF_TYPE
)
REFERENCES R_SUBSTANCE_XREF_TYPE
(
SUBSTANCE_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBX_SUB_FK'
ALTER TABLE SUBSTANCE_XREF ADD CONSTRAINT SUBX_SUB_FK FOREIGN KEY
(
SUBSTANCE_ID2
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT SUBX_SUB_FK2'
ALTER TABLE SUBSTANCE_XREF ADD CONSTRAINT SUBX_SUB_FK2 FOREIGN KEY
(
SUBSTANCE_ID1
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_BA_FK'
ALTER TABLE WELL ADD CONSTRAINT W_BA_FK FOREIGN KEY
(
OPERATOR
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_BA_FK2'
ALTER TABLE WELL ADD CONSTRAINT W_BA_FK2 FOREIGN KEY
(
REGULATORY_AGENCY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_FLD_FK'
ALTER TABLE WELL ADD CONSTRAINT W_FLD_FK FOREIGN KEY
(
ASSIGNED_FIELD
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_R_CT3_FK'
ALTER TABLE WELL ADD CONSTRAINT W_R_CT3_FK FOREIGN KEY
(
CONFIDENTIAL_TYPE
)
REFERENCES R_CONFIDENTIAL_TYPE
(
CONFIDENTIAL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_R_E_FK'
ALTER TABLE WELL ADD CONSTRAINT W_R_E_FK FOREIGN KEY
(
ENVIRONMENT_TYPE
)
REFERENCES R_ENVIRONMENT
(
ENVIRONMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_R_LST1_FK'
ALTER TABLE WELL ADD CONSTRAINT W_R_LST1_FK FOREIGN KEY
(
LEGAL_SURVEY_TYPE
)
REFERENCES R_LEGAL_SURVEY_TYPE
(
LEGAL_SURVEY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_R_LT1_FK'
ALTER TABLE WELL ADD CONSTRAINT W_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_R_PS1_FK'
ALTER TABLE WELL ADD CONSTRAINT W_R_PS1_FK FOREIGN KEY
(
PLOT_SYMBOL
)
REFERENCES R_PLOT_SYMBOL
(
PLOT_SYMBOL
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_R_TCC_FK'
ALTER TABLE WELL ADD CONSTRAINT W_R_TCC_FK FOREIGN KEY
(
TAX_CREDIT_CODE
)
REFERENCES R_TAX_CREDIT_CODE
(
TAX_CREDIT_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_R_WD_FK2'
ALTER TABLE WELL ADD CONSTRAINT W_R_WD_FK2 FOREIGN KEY
(
ELEV_REF_DATUM
)
REFERENCES R_WATER_DATUM
(
WATER_DATUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_R_WD_FK'
ALTER TABLE WELL ADD CONSTRAINT W_R_WD_FK FOREIGN KEY
(
WATER_DEPTH_DATUM
)
REFERENCES R_WATER_DATUM
(
WATER_DATUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_R_WC_FK'
ALTER TABLE WELL ADD CONSTRAINT W_R_WC_FK FOREIGN KEY
(
INITIAL_CLASS
)
REFERENCES R_WELL_CLASS
(
WELL_CLASS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_R_WC_FK2'
ALTER TABLE WELL ADD CONSTRAINT W_R_WC_FK2 FOREIGN KEY
(
CURRENT_CLASS
)
REFERENCES R_WELL_CLASS
(
WELL_CLASS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_R_WDT_FK'
ALTER TABLE WELL ADD CONSTRAINT W_R_WDT_FK FOREIGN KEY
(
GROUND_ELEV_TYPE
)
REFERENCES R_WELL_DATUM_TYPE
(
WELL_DATUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_R_WDT_FK2'
ALTER TABLE WELL ADD CONSTRAINT W_R_WDT_FK2 FOREIGN KEY
(
DEPTH_DATUM
)
REFERENCES R_WELL_DATUM_TYPE
(
WELL_DATUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_R_WDT_FK3'
ALTER TABLE WELL ADD CONSTRAINT W_R_WDT_FK3 FOREIGN KEY
(
SUBSEA_ELEV_REF_TYPE
)
REFERENCES R_WELL_DATUM_TYPE
(
WELL_DATUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_R_WLT_FK'
ALTER TABLE WELL ADD CONSTRAINT W_R_WLT_FK FOREIGN KEY
(
WELL_LEVEL_TYPE
)
REFERENCES R_WELL_LEVEL_TYPE
(
WELL_LEVEL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_R_WPT_FK'
ALTER TABLE WELL ADD CONSTRAINT W_R_WPT_FK FOREIGN KEY
(
PROFILE_TYPE
)
REFERENCES R_WELL_PROFILE_TYPE
(
WELL_PROFILE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_R_WS_FK'
ALTER TABLE WELL ADD CONSTRAINT W_R_WS_FK FOREIGN KEY
(
STATUS_TYPE,
CURRENT_STATUS
)
REFERENCES R_WELL_STATUS
(
STATUS_TYPE,
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_SFPL_FK'
ALTER TABLE WELL ADD CONSTRAINT W_SFPL_FK FOREIGN KEY
(
PLATFORM_SF_SUBTYPE,
PLATFORM_ID
)
REFERENCES SF_PLATFORM
(
SF_SUBTYPE,
PLATFORM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_SRCD_FK'
ALTER TABLE WELL ADD CONSTRAINT W_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_STU_FK'
ALTER TABLE WELL ADD CONSTRAINT W_STU_FK FOREIGN KEY
(
CONFID_STRAT_NAME_SET_ID,
CONFID_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_STU_FK2'
ALTER TABLE WELL ADD CONSTRAINT W_STU_FK2 FOREIGN KEY
(
TD_STRAT_NAME_SET_AGE,
TD_STRAT_AGE
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_STU_FK3'
ALTER TABLE WELL ADD CONSTRAINT W_STU_FK3 FOREIGN KEY
(
OLDEST_STRAT_NAME_SET_ID,
OLDEST_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_STU_FK4'
ALTER TABLE WELL ADD CONSTRAINT W_STU_FK4 FOREIGN KEY
(
TD_STRAT_NAME_SET_ID,
TD_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_STU_FK6'
ALTER TABLE WELL ADD CONSTRAINT W_STU_FK6 FOREIGN KEY
(
BASE_STRAT_NAME_SET_ID,
BASE_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_STU_FK7'
ALTER TABLE WELL ADD CONSTRAINT W_STU_FK7 FOREIGN KEY
(
TOP_STRAT_NAME_SET_ID,
TOP_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_STU_FK5'
ALTER TABLE WELL ADD CONSTRAINT W_STU_FK5 FOREIGN KEY
(
OLDEST_STRAT_NAME_SET_AGE,
OLDEST_STRAT_AGE
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_WAR_FK'
ALTER TABLE WELL ADD CONSTRAINT W_WAR_FK FOREIGN KEY
(
UWI,
PRIMARY_SOURCE,
AREA_ID,
AREA_TYPE
)
REFERENCES WELL_AREA
(
UWI,
SOURCE,
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_WN_FK'
ALTER TABLE WELL ADD CONSTRAINT W_WN_FK FOREIGN KEY
(
SURFACE_NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT W_WN_FK2'
ALTER TABLE WELL ADD CONSTRAINT W_WN_FK2 FOREIGN KEY
(
BASE_NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WAC_PS_FK'
ALTER TABLE WELL_ACTIVITY ADD CONSTRAINT WAC_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WAC_PSF_FK'
ALTER TABLE WELL_ACTIVITY ADD CONSTRAINT WAC_PSF_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID,
PR_STR_FORM_OBS_NO
)
REFERENCES PROD_STRING_FORMATION
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WAC_R_BF_FK'
ALTER TABLE WELL_ACTIVITY ADD CONSTRAINT WAC_R_BF_FK FOREIGN KEY
(
BLOWOUT_FLUID
)
REFERENCES R_BLOWOUT_FLUID
(
BLOWOUT_FLUID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WAC_R_L_FK'
ALTER TABLE WELL_ACTIVITY ADD CONSTRAINT WAC_R_L_FK FOREIGN KEY
(
LITHOLOGY
)
REFERENCES R_LITHOLOGY
(
LITHOLOGY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WAC_R_LMT_FK'
ALTER TABLE WELL_ACTIVITY ADD CONSTRAINT WAC_R_LMT_FK FOREIGN KEY
(
LOST_MATERIAL_TYPE
)
REFERENCES R_LOST_MATERIAL_TYPE
(
LOST_MATERIAL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WAC_R_SV_FK'
ALTER TABLE WELL_ACTIVITY ADD CONSTRAINT WAC_R_SV_FK FOREIGN KEY
(
LOST_CIRC_SEVERITY
)
REFERENCES R_SEVERITY
(
SEVERITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WAC_R_TZ_FK'
ALTER TABLE WELL_ACTIVITY ADD CONSTRAINT WAC_R_TZ_FK FOREIGN KEY
(
START_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WAC_R_TZ_FK2'
ALTER TABLE WELL_ACTIVITY ADD CONSTRAINT WAC_R_TZ_FK2 FOREIGN KEY
(
END_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WAC_R_WDT1_FK'
ALTER TABLE WELL_ACTIVITY ADD CONSTRAINT WAC_R_WDT1_FK FOREIGN KEY
(
DOWNTIME_TYPE
)
REFERENCES R_WELL_DOWNTIME_TYPE
(
DOWNTIME_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WAC_STU_FK'
ALTER TABLE WELL_ACTIVITY ADD CONSTRAINT WAC_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
TOP_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WAC_STU_FK2'
ALTER TABLE WELL_ACTIVITY ADD CONSTRAINT WAC_STU_FK2 FOREIGN KEY
(
STRAT_NAME_SET_ID,
BASE_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WAC_SUB_FK'
ALTER TABLE WELL_ACTIVITY ADD CONSTRAINT WAC_SUB_FK FOREIGN KEY
(
ACTIVITY_PRODUCT
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WAC_SUB_FK1'
ALTER TABLE WELL_ACTIVITY ADD CONSTRAINT WAC_SUB_FK1 FOREIGN KEY
(
LOST_VOLUME_PRODUCT
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WAC_W_FK'
ALTER TABLE WELL_ACTIVITY ADD CONSTRAINT WAC_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WAC_WAT_FK'
ALTER TABLE WELL_ACTIVITY ADD CONSTRAINT WAC_WAT_FK FOREIGN KEY
(
ACTIVITY_SET_ID,
ACTIVITY_TYPE_ID
)
REFERENCES WELL_ACTIVITY_TYPE
(
ACTIVITY_SET_ID,
ACTIVITY_TYPE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WAC_WDP_FK'
ALTER TABLE WELL_ACTIVITY ADD CONSTRAINT WAC_WDP_FK FOREIGN KEY
(
UWI,
PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACA_EQ_FK'
ALTER TABLE WELL_ACTIVITY_CAUSE ADD CONSTRAINT WACA_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACA_R_WACA_FK'
ALTER TABLE WELL_ACTIVITY_CAUSE ADD CONSTRAINT WACA_R_WACA_FK FOREIGN KEY
(
CAUSE_TYPE
)
REFERENCES R_WELL_ACTIVITY_CAUSE
(
CAUSE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACA_WAC_FK'
ALTER TABLE WELL_ACTIVITY_CAUSE ADD CONSTRAINT WACA_WAC_FK FOREIGN KEY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACA_WDP_FK'
ALTER TABLE WELL_ACTIVITY_CAUSE ADD CONSTRAINT WACA_WDP_FK FOREIGN KEY
(
UWI,
PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_ANLR_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_APP_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_A_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_BAAU_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_BAC_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_BAC_FK FOREIGN KEY
(
CREW_COMPANY_BA_ID,
CREW_ID
)
REFERENCES BA_CREW
(
CREW_COMPANY_BA_ID,
CREW_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_BAE_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_BAO_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_BA_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_CA_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_CEQ_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_CLSL_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_CON_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_CO_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_COT_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_C_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_EZ_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_ENT_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_EQ_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_EQ_FK FOREIGN KEY
(
MAINT_EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_EQM_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_EQM_FK FOREIGN KEY
(
MAINT_EQUIPMENT_ID,
MAINT_EQUIP_MAINT_ID
)
REFERENCES EQUIPMENT_MAINTAIN
(
EQUIPMENT_ID,
EQUIP_MAINT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_FAC_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_FLD_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_FIN_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_FOS_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_HI_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_INS_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_INT_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_LR_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_LS_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_LIL_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_NOTI_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_OB_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_PASU_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_PDE_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_PDENVS_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_PDENVS_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
PDEN_VOLUME_METHOD,
PDEN_ACTIVITY_TYPE,
PDEN_PERIOD_TYPE,
PDEN_PERIOD_ID,
PDEN_AMENDMENT_SEQ_NO
)
REFERENCES PDEN_VOL_SUMMARY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE,
VOLUME_METHOD,
ACTIVITY_TYPE,
PERIOD_TYPE,
PERIOD_ID,
AMENDMENT_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_PL_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_PSWA_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_PSYS_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_PT_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_PS_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_PSF_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_PSF_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID,
PR_STR_FORM_OBS_NO
)
REFERENCES PROD_STRING_FORMATION
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_PROJ_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_RATE_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_RSCL_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_RSE_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_RMDSS_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_RMII_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_RMPI_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_RMTW_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_R_WACT_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_R_WACT_FK FOREIGN KEY
(
COMPONENT_TYPE
)
REFERENCES R_WELL_ACTIVITY_COMP_TYPE
(
WELL_ACTIVITY_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_SS_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_SF_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_SPD_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_STFST_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_STU_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_SUB_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_W_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_WAC_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_WAC_FK FOREIGN KEY
(
UWI,
ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_WBS_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_WBS_FK FOREIGN KEY
(
UWI,
BA_SERVICE_PROVIDED_BY,
BA_SERVICE_SEQ_NO
)
REFERENCES WELL_BA_SERVICE
(
UWI,
PROVIDED_BY,
SERVICE_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_WCE_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_WCE_FK FOREIGN KEY
(
UWI,
TUBING_SOURCE,
TUBING_TYPE,
TUBING_OBS_NO,
CEMENT_OBS_NO
)
REFERENCES WELL_CEMENT
(
UWI,
WELL_TUBE_SOURCE,
TUBING_TYPE,
TUBING_OBS_NO,
CEMENT_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_WCR_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_WCR_FK FOREIGN KEY
(
UWI,
WELL_CORE_SOURCE,
WELL_CORE_ID
)
REFERENCES WELL_CORE
(
UWI,
SOURCE,
CORE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_WDS_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_WDS_FK FOREIGN KEY
(
UWI,
DIR_SURVEY_ID,
DIR_SURVEY_SOURCE
)
REFERENCES WELL_DIR_SRVY
(
UWI,
SURVEY_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_WDBP_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_WDBP_FK FOREIGN KEY
(
UWI,
PERIOD_OBS_NO,
BIT_SOURCE,
BIT_INTERVAL_OBS_NO,
DRILL_BIT_PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_BIT_PERIOD
(
UWI,
PERIOD_OBS_NO,
BIT_SOURCE,
BIT_INTERVAL_OBS_NO,
DRILL_BIT_PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_WDCK_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_WDCK_FK FOREIGN KEY
(
UWI,
PERIOD_OBS_NO,
DRILL_CHECK_OBS_NO
)
REFERENCES WELL_DRILL_CHECK
(
UWI,
PERIOD_OBS_NO,
DRILL_CHECK_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_WDE_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_WDE_FK FOREIGN KEY
(
UWI,
MAINT_EQUIPMENT_ID,
EQUIPMENT_OBS_NO
)
REFERENCES WELL_DRILL_EQUIPMENT
(
UWI,
EQUIPMENT_ID,
EQUIPMENT_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_WDP_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_WDP_FK FOREIGN KEY
(
UWI,
PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_WL_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_WL_FK FOREIGN KEY
(
UWI,
WELL_LOG_ID,
WELL_LOG_SOURCE
)
REFERENCES WELL_LOG
(
UWI,
WELL_LOG_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_WPRF_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_WPRF_FK FOREIGN KEY
(
UWI,
PERFORATION_SOURCE,
PERFORATION_OBS_NO
)
REFERENCES WELL_PERFORATION
(
UWI,
SOURCE,
PERFORATION_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_WPL_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_WPL_FK FOREIGN KEY
(
UWI,
PLUGBACK_SOURCE,
PLUGBACK_OBS_NO
)
REFERENCES WELL_PLUGBACK
(
UWI,
SOURCE,
PLUGBACK_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_WSET_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_WT_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_WT_FK FOREIGN KEY
(
UWI,
WELL_TEST_SOURCE,
WELL_TEST_TYPE,
WELL_TEST_RUN_NUM,
WELL_TEST_NUM
)
REFERENCES WELL_TEST
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_WTUB_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_WTUB_FK FOREIGN KEY
(
UWI,
TUBING_SOURCE,
TUBING_TYPE,
TUBING_OBS_NO
)
REFERENCES WELL_TUBULAR
(
UWI,
SOURCE,
TUBING_TYPE,
TUBING_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WACOMP_WO_FK'
ALTER TABLE WELL_ACTIVITY_COMPONENT ADD CONSTRAINT WACOMP_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WADU_R_TZ_FK2'
ALTER TABLE WELL_ACTIVITY_DURATION ADD CONSTRAINT WADU_R_TZ_FK2 FOREIGN KEY
(
END_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WADU_R_TZ_FK'
ALTER TABLE WELL_ACTIVITY_DURATION ADD CONSTRAINT WADU_R_TZ_FK FOREIGN KEY
(
START_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WADU_R_WDT1_FK'
ALTER TABLE WELL_ACTIVITY_DURATION ADD CONSTRAINT WADU_R_WDT1_FK FOREIGN KEY
(
DOWNTIME_TYPE
)
REFERENCES R_WELL_DOWNTIME_TYPE
(
DOWNTIME_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WADU_WAC_FK'
ALTER TABLE WELL_ACTIVITY_DURATION ADD CONSTRAINT WADU_WAC_FK FOREIGN KEY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WADU_WDP_FK'
ALTER TABLE WELL_ACTIVITY_DURATION ADD CONSTRAINT WADU_WDP_FK FOREIGN KEY
(
UWI,
PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WAS_BA_FK'
ALTER TABLE WELL_ACTIVITY_SET ADD CONSTRAINT WAS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WAS_R_ACTST_FK'
ALTER TABLE WELL_ACTIVITY_SET ADD CONSTRAINT WAS_R_ACTST_FK FOREIGN KEY
(
ACTIVITY_SET_TYPE
)
REFERENCES R_ACTIVITY_SET_TYPE
(
ACTIVITY_SET_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WAS_SRCD_FK'
ALTER TABLE WELL_ACTIVITY_SET ADD CONSTRAINT WAS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WAT_WAS_FK'
ALTER TABLE WELL_ACTIVITY_TYPE ADD CONSTRAINT WAT_WAS_FK FOREIGN KEY
(
ACTIVITY_SET_ID
)
REFERENCES WELL_ACTIVITY_SET
(
ACTIVITY_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WATA_BA_FK'
ALTER TABLE WELL_ACTIVITY_TYPE_ALIAS ADD CONSTRAINT WATA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WATA_PSWA_FK'
ALTER TABLE WELL_ACTIVITY_TYPE_ALIAS ADD CONSTRAINT WATA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WATA_R_ART_FK'
ALTER TABLE WELL_ACTIVITY_TYPE_ALIAS ADD CONSTRAINT WATA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WATA_R_ATY_FK'
ALTER TABLE WELL_ACTIVITY_TYPE_ALIAS ADD CONSTRAINT WATA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WATA_R_LANG_FK'
ALTER TABLE WELL_ACTIVITY_TYPE_ALIAS ADD CONSTRAINT WATA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WATA_SRCD_FK'
ALTER TABLE WELL_ACTIVITY_TYPE_ALIAS ADD CONSTRAINT WATA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WATA_WAT_FK'
ALTER TABLE WELL_ACTIVITY_TYPE_ALIAS ADD CONSTRAINT WATA_WAT_FK FOREIGN KEY
(
ACTIVITY_SET_ID,
ACTIVITY_TYPE_ID
)
REFERENCES WELL_ACTIVITY_TYPE
(
ACTIVITY_SET_ID,
ACTIVITY_TYPE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WATE_BA_FK'
ALTER TABLE WELL_ACTIVITY_TYPE_EQUIV ADD CONSTRAINT WATE_BA_FK FOREIGN KEY
(
EQUIV_OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WATE_R_WATE_FK'
ALTER TABLE WELL_ACTIVITY_TYPE_EQUIV ADD CONSTRAINT WATE_R_WATE_FK FOREIGN KEY
(
EQUIV_TYPE
)
REFERENCES R_WELL_ACT_TYPE_EQUIV
(
EQUIV_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WATE_WAT_FK'
ALTER TABLE WELL_ACTIVITY_TYPE_EQUIV ADD CONSTRAINT WATE_WAT_FK FOREIGN KEY
(
ACTIVITY_SET_ID,
ACTIVITY_TYPE_ID
)
REFERENCES WELL_ACTIVITY_TYPE
(
ACTIVITY_SET_ID,
ACTIVITY_TYPE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WATE_WAT_FK2'
ALTER TABLE WELL_ACTIVITY_TYPE_EQUIV ADD CONSTRAINT WATE_WAT_FK2 FOREIGN KEY
(
ACTIVITY_SET_ID2,
ACTIVITY_TYPE_ID2
)
REFERENCES WELL_ACTIVITY_TYPE
(
ACTIVITY_SET_ID,
ACTIVITY_TYPE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WAD_BA_FK'
ALTER TABLE WELL_AIR_DRILL ADD CONSTRAINT WAD_BA_FK FOREIGN KEY
(
CONTRACTOR
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WAD_W_FK'
ALTER TABLE WELL_AIR_DRILL ADD CONSTRAINT WAD_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WADI_R_AGC_FK'
ALTER TABLE WELL_AIR_DRILL_INTERVAL ADD CONSTRAINT WADI_R_AGC_FK FOREIGN KEY
(
AIR_GAS_CODE
)
REFERENCES R_AIR_GAS_CODE
(
AIR_GAS_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WADI_WAD_FK'
ALTER TABLE WELL_AIR_DRILL_INTERVAL ADD CONSTRAINT WADI_WAD_FK FOREIGN KEY
(
UWI,
AIR_DRILL_SOURCE,
AIR_DRILL_OBS_NO
)
REFERENCES WELL_AIR_DRILL
(
UWI,
SOURCE,
AIR_DRILL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WADP_WADI_FK'
ALTER TABLE WELL_AIR_DRILL_PERIOD ADD CONSTRAINT WADP_WADI_FK FOREIGN KEY
(
UWI,
INTERVAL_SOURCE,
AIR_DRILL_OBS_NO,
DEPTH_OBS_NO
)
REFERENCES WELL_AIR_DRILL_INTERVAL
(
UWI,
AIR_DRILL_SOURCE,
AIR_DRILL_OBS_NO,
DEPTH_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WADP_WDP_FK'
ALTER TABLE WELL_AIR_DRILL_PERIOD ADD CONSTRAINT WADP_WDP_FK FOREIGN KEY
(
UWI,
PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WA_BA_FK'
ALTER TABLE WELL_ALIAS ADD CONSTRAINT WA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WA_PSWA_FK'
ALTER TABLE WELL_ALIAS ADD CONSTRAINT WA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WA_R_ART_FK'
ALTER TABLE WELL_ALIAS ADD CONSTRAINT WA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WA_R_ATY_FK'
ALTER TABLE WELL_ALIAS ADD CONSTRAINT WA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WA_R_LANG_FK'
ALTER TABLE WELL_ALIAS ADD CONSTRAINT WA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WA_R_WAL_FK'
ALTER TABLE WELL_ALIAS ADD CONSTRAINT WA_R_WAL_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_WELL_ALIAS_LOCATION
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WA_SRCD_FK'
ALTER TABLE WELL_ALIAS ADD CONSTRAINT WA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WA_W_FK'
ALTER TABLE WELL_ALIAS ADD CONSTRAINT WA_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WAR_A_FK'
ALTER TABLE WELL_AREA ADD CONSTRAINT WAR_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WAR_W_FK'
ALTER TABLE WELL_AREA ADD CONSTRAINT WAR_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WBS_BA_FK'
ALTER TABLE WELL_BA_SERVICE ADD CONSTRAINT WBS_BA_FK FOREIGN KEY
(
CONTACT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WBS_BA_FK2'
ALTER TABLE WELL_BA_SERVICE ADD CONSTRAINT WBS_BA_FK2 FOREIGN KEY
(
PROVIDED_BY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WBS_BA_FK3'
ALTER TABLE WELL_BA_SERVICE ADD CONSTRAINT WBS_BA_FK3 FOREIGN KEY
(
REPRESENTED_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WBS_C_FK'
ALTER TABLE WELL_BA_SERVICE ADD CONSTRAINT WBS_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WBS_CP_FK'
ALTER TABLE WELL_BA_SERVICE ADD CONSTRAINT WBS_CP_FK FOREIGN KEY
(
CONTRACT_ID,
PROVISION_ID
)
REFERENCES CONT_PROVISION
(
CONTRACT_ID,
PROVISION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WBS_RATE_FK'
ALTER TABLE WELL_BA_SERVICE ADD CONSTRAINT WBS_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WBS_R_BST_FK'
ALTER TABLE WELL_BA_SERVICE ADD CONSTRAINT WBS_R_BST_FK FOREIGN KEY
(
SERVICE_TYPE
)
REFERENCES R_BA_SERVICE_TYPE
(
BA_SERVICE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WBS_R_SQ_FK'
ALTER TABLE WELL_BA_SERVICE ADD CONSTRAINT WBS_R_SQ_FK FOREIGN KEY
(
SERVICE_QUALITY
)
REFERENCES R_SERVICE_QUALITY
(
SERVICE_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WBS_R_TZ_FK'
ALTER TABLE WELL_BA_SERVICE ADD CONSTRAINT WBS_R_TZ_FK FOREIGN KEY
(
SERVICE_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WBS_W_FK'
ALTER TABLE WELL_BA_SERVICE ADD CONSTRAINT WBS_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WBS_WAC_FK'
ALTER TABLE WELL_BA_SERVICE ADD CONSTRAINT WBS_WAC_FK FOREIGN KEY
(
UWI,
WELL_ACTIVITY_SOURCE,
WELL_ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WBS_WDP_FK'
ALTER TABLE WELL_BA_SERVICE ADD CONSTRAINT WBS_WDP_FK FOREIGN KEY
(
UWI,
WELL_DRILL_PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCE_BA_FK'
ALTER TABLE WELL_CEMENT ADD CONSTRAINT WCE_BA_FK FOREIGN KEY
(
CEMENT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCE_R_CT_FK'
ALTER TABLE WELL_CEMENT ADD CONSTRAINT WCE_R_CT_FK FOREIGN KEY
(
CEMENT_TYPE
)
REFERENCES R_CEMENT_TYPE
(
CEMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCE_WTUB_FK'
ALTER TABLE WELL_CEMENT ADD CONSTRAINT WCE_WTUB_FK FOREIGN KEY
(
UWI,
WELL_TUBE_SOURCE,
TUBING_TYPE,
TUBING_OBS_NO
)
REFERENCES WELL_TUBULAR
(
UWI,
SOURCE,
TUBING_TYPE,
TUBING_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCO_R_CM_FK'
ALTER TABLE WELL_COMPLETION ADD CONSTRAINT WCO_R_CM_FK FOREIGN KEY
(
COMPLETION_METHOD
)
REFERENCES R_COMPLETION_METHOD
(
COMPLETION_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCO_R_CT2_FK'
ALTER TABLE WELL_COMPLETION ADD CONSTRAINT WCO_R_CT2_FK FOREIGN KEY
(
COMPLETION_TYPE
)
REFERENCES R_COMPLETION_TYPE
(
COMPLETION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCO_STU_FK'
ALTER TABLE WELL_COMPLETION ADD CONSTRAINT WCO_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
COMPLETION_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCO_STU_FK2'
ALTER TABLE WELL_COMPLETION ADD CONSTRAINT WCO_STU_FK2 FOREIGN KEY
(
STRAT_NAME_SET_ID,
BASE_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCO_STU_FK3'
ALTER TABLE WELL_COMPLETION ADD CONSTRAINT WCO_STU_FK3 FOREIGN KEY
(
STRAT_NAME_SET_ID,
TOP_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCO_W_FK'
ALTER TABLE WELL_COMPLETION ADD CONSTRAINT WCO_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_ANLR_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_APP_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_A_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_BAAU_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_BAE_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_BAO_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_BA_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_CA_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_CEQ_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_CLSL_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_CON_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_CO_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_COT_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_C_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_EZ_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_ENT_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_EQ_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_FAC_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_FLD_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_FIN_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_FOS_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_HI_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_INS_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_INT_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_LR_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_LS_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_LIL_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_NOTI_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_OB_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_PASU_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_PDE_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_PL_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_PSWA_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_PSYS_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_PT_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_PS_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_PS_FK FOREIGN KEY
(
PR_STR_UWI,
PR_STR_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_PROJ_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_RATE_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_RSCL_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_RSE_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_RMDSS_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_RMII_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_RMPI_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_RMTW_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_R_WCT_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_R_WCT_FK FOREIGN KEY
(
WELL_COMPONENT_TYPE
)
REFERENCES R_WELL_COMPONENT_TYPE
(
WELL_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_SS_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_SF_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_SPD_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_STFST_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_STU_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_SUB_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_W_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_WAC_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_WAC_FK FOREIGN KEY
(
WELL_ACTIVITY_UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_WSET_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WC_WO_FK'
ALTER TABLE WELL_COMPONENT ADD CONSTRAINT WC_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCR_BA_FK'
ALTER TABLE WELL_CORE ADD CONSTRAINT WCR_BA_FK FOREIGN KEY
(
CONTRACTOR
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCR_R_CH_FK'
ALTER TABLE WELL_CORE ADD CONSTRAINT WCR_R_CH_FK FOREIGN KEY
(
CORE_HANDLING_TYPE
)
REFERENCES R_CORE_HANDLING
(
CORE_HANDLING
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCR_R_CT5_FK'
ALTER TABLE WELL_CORE ADD CONSTRAINT WCR_R_CT5_FK FOREIGN KEY
(
CORE_TYPE
)
REFERENCES R_CORE_TYPE
(
CORE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCR_R_DM_FK'
ALTER TABLE WELL_CORE ADD CONSTRAINT WCR_R_DM_FK FOREIGN KEY
(
CORING_FLUID
)
REFERENCES R_DRILLING_MEDIA
(
DRILLING_MEDIA
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCR_R_ST4_FK'
ALTER TABLE WELL_CORE ADD CONSTRAINT WCR_R_ST4_FK FOREIGN KEY
(
CORE_SHOW_TYPE
)
REFERENCES R_SHOW_TYPE
(
SHOW_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCR_STU_FK'
ALTER TABLE WELL_CORE ADD CONSTRAINT WCR_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
PRIMARY_CORE_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCR_W_FK'
ALTER TABLE WELL_CORE ADD CONSTRAINT WCR_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRA_BA_FK'
ALTER TABLE WELL_CORE_ANALYSIS ADD CONSTRAINT WCRA_BA_FK FOREIGN KEY
(
ANALYZING_COMPANY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRA_R_CST2_FK2'
ALTER TABLE WELL_CORE_ANALYSIS ADD CONSTRAINT WCRA_R_CST2_FK2 FOREIGN KEY
(
SECOND_SAMPLE_TYPE
)
REFERENCES R_CORE_SAMPLE_TYPE
(
CORE_SAMPLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRA_R_CST2_FK'
ALTER TABLE WELL_CORE_ANALYSIS ADD CONSTRAINT WCRA_R_CST2_FK FOREIGN KEY
(
PRIMARY_SAMPLE_TYPE
)
REFERENCES R_CORE_SAMPLE_TYPE
(
CORE_SAMPLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRA_R_SS_FK'
ALTER TABLE WELL_CORE_ANALYSIS ADD CONSTRAINT WCRA_R_SS_FK FOREIGN KEY
(
SAMPLE_SHAPE
)
REFERENCES R_SAMPLE_SHAPE
(
SAMPLE_SHAPE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRA_WCR_FK'
ALTER TABLE WELL_CORE_ANALYSIS ADD CONSTRAINT WCRA_WCR_FK FOREIGN KEY
(
UWI,
SOURCE,
CORE_ID
)
REFERENCES WELL_CORE
(
UWI,
SOURCE,
CORE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRAM_R_CS1_FK'
ALTER TABLE WELL_CORE_ANAL_METHOD ADD CONSTRAINT WCRAM_R_CS1_FK FOREIGN KEY
(
CORE_SOLVENT
)
REFERENCES R_CORE_SOLVENT
(
CORE_SOLVENT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRAM_R_CF_FK'
ALTER TABLE WELL_CORE_ANAL_METHOD ADD CONSTRAINT WCRAM_R_CF_FK FOREIGN KEY
(
CUTTING_FLUID
)
REFERENCES R_CUTTING_FLUID
(
CUTTING_FLUID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRAM_WCRA_FK'
ALTER TABLE WELL_CORE_ANAL_METHOD ADD CONSTRAINT WCRAM_WCRA_FK FOREIGN KEY
(
UWI,
SOURCE,
CORE_ID,
ANALYSIS_OBS_NO
)
REFERENCES WELL_CORE_ANALYSIS
(
UWI,
SOURCE,
CORE_ID,
ANALYSIS_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRAR_WCRA_FK'
ALTER TABLE WELL_CORE_ANAL_REMARK ADD CONSTRAINT WCRAR_WCRA_FK FOREIGN KEY
(
UWI,
SOURCE,
CORE_ID,
ANALYSIS_OBS_NO
)
REFERENCES WELL_CORE_ANALYSIS
(
UWI,
SOURCE,
CORE_ID,
ANALYSIS_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRD_BA_FK'
ALTER TABLE WELL_CORE_DESCRIPTION ADD CONSTRAINT WCRD_BA_FK FOREIGN KEY
(
CORE_DESCRIPTION_COMPANY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRD_R_PORT_FK'
ALTER TABLE WELL_CORE_DESCRIPTION ADD CONSTRAINT WCRD_R_PORT_FK FOREIGN KEY
(
POROSITY_TYPE
)
REFERENCES R_POROSITY_TYPE
(
POROSITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRD_R_Q_FK'
ALTER TABLE WELL_CORE_DESCRIPTION ADD CONSTRAINT WCRD_R_Q_FK FOREIGN KEY
(
POROSITY_QUALITY
)
REFERENCES R_QUALITY
(
QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRD_R_ST4_FK'
ALTER TABLE WELL_CORE_DESCRIPTION ADD CONSTRAINT WCRD_R_ST4_FK FOREIGN KEY
(
SHOW_TYPE
)
REFERENCES R_SHOW_TYPE
(
SHOW_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRD_WCR_FK'
ALTER TABLE WELL_CORE_DESCRIPTION ADD CONSTRAINT WCRD_WCR_FK FOREIGN KEY
(
UWI,
SOURCE,
CORE_ID
)
REFERENCES WELL_CORE
(
UWI,
SOURCE,
CORE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRM_WCR_FK'
ALTER TABLE WELL_CORE_REMARK ADD CONSTRAINT WCRM_WCR_FK FOREIGN KEY
(
UWI,
SOURCE,
CORE_ID
)
REFERENCES WELL_CORE
(
UWI,
SOURCE,
CORE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRSA_R_OQ_FK3'
ALTER TABLE WELL_CORE_SAMPLE_ANAL ADD CONSTRAINT WCRSA_R_OQ_FK3 FOREIGN KEY
(
KVERT_QUALIFIER
)
REFERENCES R_OPERAND_QUALIFIER
(
OPERAND_QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRSA_R_OQ_FK2'
ALTER TABLE WELL_CORE_SAMPLE_ANAL ADD CONSTRAINT WCRSA_R_OQ_FK2 FOREIGN KEY
(
KMAX_QUALIFIER
)
REFERENCES R_OPERAND_QUALIFIER
(
OPERAND_QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRSA_R_OQ_FK'
ALTER TABLE WELL_CORE_SAMPLE_ANAL ADD CONSTRAINT WCRSA_R_OQ_FK FOREIGN KEY
(
K90_QUALIFIER
)
REFERENCES R_OPERAND_QUALIFIER
(
OPERAND_QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRSA_WCRA_FK'
ALTER TABLE WELL_CORE_SAMPLE_ANAL ADD CONSTRAINT WCRSA_WCRA_FK FOREIGN KEY
(
UWI,
SOURCE,
CORE_ID,
ANALYSIS_OBS_NO
)
REFERENCES WELL_CORE_ANALYSIS
(
UWI,
SOURCE,
CORE_ID,
ANALYSIS_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRSD_R_CRT_FK'
ALTER TABLE WELL_CORE_SAMPLE_DESC ADD CONSTRAINT WCRSD_R_CRT_FK FOREIGN KEY
(
SWC_RECOVERY_TYPE
)
REFERENCES R_CORE_RECOVERY_TYPE
(
CORE_RECOVERY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRSD_R_CST2_FK'
ALTER TABLE WELL_CORE_SAMPLE_DESC ADD CONSTRAINT WCRSD_R_CST2_FK FOREIGN KEY
(
SAMPLE_TYPE
)
REFERENCES R_CORE_SAMPLE_TYPE
(
CORE_SAMPLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRSD_R_Q_FK'
ALTER TABLE WELL_CORE_SAMPLE_DESC ADD CONSTRAINT WCRSD_R_Q_FK FOREIGN KEY
(
POROSITY_QUALITY
)
REFERENCES R_QUALITY
(
QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRSD_R_Q_FK2'
ALTER TABLE WELL_CORE_SAMPLE_DESC ADD CONSTRAINT WCRSD_R_Q_FK2 FOREIGN KEY
(
SHOW_QUALITY
)
REFERENCES R_QUALITY
(
QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRSD_R_ST4_FK'
ALTER TABLE WELL_CORE_SAMPLE_DESC ADD CONSTRAINT WCRSD_R_ST4_FK FOREIGN KEY
(
SHOW_TYPE
)
REFERENCES R_SHOW_TYPE
(
SHOW_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRSD_STU_FK'
ALTER TABLE WELL_CORE_SAMPLE_DESC ADD CONSTRAINT WCRSD_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRSD_WCRSA_FK'
ALTER TABLE WELL_CORE_SAMPLE_DESC ADD CONSTRAINT WCRSD_WCRSA_FK FOREIGN KEY
(
UWI,
SOURCE,
CORE_ID,
ANALYSIS_OBS_NO,
SAMPLE_NUM,
SAMPLE_ANALYSIS_OBS_NO
)
REFERENCES WELL_CORE_SAMPLE_ANAL
(
UWI,
SOURCE,
CORE_ID,
ANALYSIS_OBS_NO,
SAMPLE_NUM,
SAMPLE_ANALYSIS_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRSR_WCRSA_FK'
ALTER TABLE WELL_CORE_SAMPLE_RMK ADD CONSTRAINT WCRSR_WCRSA_FK FOREIGN KEY
(
UWI,
SOURCE,
CORE_ID,
ANALYSIS_OBS_NO,
SAMPLE_NUM,
SAMPLE_ANALYSIS_OBS_NO
)
REFERENCES WELL_CORE_SAMPLE_ANAL
(
UWI,
SOURCE,
CORE_ID,
ANALYSIS_OBS_NO,
SAMPLE_NUM,
SAMPLE_ANALYSIS_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRS_BA_FK'
ALTER TABLE WELL_CORE_SHIFT ADD CONSTRAINT WCRS_BA_FK FOREIGN KEY
(
CORE_SHIFT_COMPANY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRS_R_CSM_FK'
ALTER TABLE WELL_CORE_SHIFT ADD CONSTRAINT WCRS_R_CSM_FK FOREIGN KEY
(
CORE_SHIFT_METHOD
)
REFERENCES R_CORE_SHIFT_METHOD
(
CORE_SHIFT_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRS_WCR_FK'
ALTER TABLE WELL_CORE_SHIFT ADD CONSTRAINT WCRS_WCR_FK FOREIGN KEY
(
UWI,
SOURCE,
CORE_ID
)
REFERENCES WELL_CORE
(
UWI,
SOURCE,
CORE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRSU_STU_FK'
ALTER TABLE WELL_CORE_STRAT_UNIT ADD CONSTRAINT WCRSU_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
CORE_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WCRSU_WCRD_FK'
ALTER TABLE WELL_CORE_STRAT_UNIT ADD CONSTRAINT WCRSU_WCRD_FK FOREIGN KEY
(
UWI,
SOURCE,
CORE_ID,
DESCRIPTION_OBS_NO
)
REFERENCES WELL_CORE_DESCRIPTION
(
UWI,
SOURCE,
CORE_ID,
DESCRIPTION_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_BA_FK'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_BA_FK FOREIGN KEY
(
SURVEY_COMPANY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_BA_FK2'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_BA_FK2 FOREIGN KEY
(
SURVEY_COMPILER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_BA_FK3'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_BA_FK3 FOREIGN KEY
(
SURVEY_DIGITAL_PRVDR_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_CS_FK'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_CS_FK FOREIGN KEY
(
AZIMUTH_COORD_SYS_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_CS_FK4'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_CS_FK4 FOREIGN KEY
(
OFFSET_COORD_SYS_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_CS_FK2'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_CS_FK2 FOREIGN KEY
(
LOCAL_COORD_SYS_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_CS_FK3'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_CS_FK3 FOREIGN KEY
(
GEOG_COORD_SYS_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_CS_FK5'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_CS_FK5 FOREIGN KEY
(
RPT_COORD_SYS_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_CSCA_FK'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_CSCA_FK FOREIGN KEY
(
COORD_ACQUISITION_ID
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_R_CT3_FK'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_R_CT3_FK FOREIGN KEY
(
CONFIDENTIAL_TYPE
)
REFERENCES R_CONFIDENTIAL_TYPE
(
CONFIDENTIAL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_R_DSC_FK'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_R_DSC_FK FOREIGN KEY
(
DIR_SURVEY_CLASS
)
REFERENCES R_DIR_SRVY_CLASS
(
DIR_SURVEY_CLASS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_R_DSC1_FK'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_R_DSC1_FK FOREIGN KEY
(
COMPUTE_METHOD
)
REFERENCES R_DIR_SRVY_COMPUTE
(
COMPUTE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_R_DSCAT_FK'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_R_DSCAT_FK FOREIGN KEY
(
AZIMUTH_CORR_ANGLE_TYPE
)
REFERENCES R_DIR_SRVY_CORR_ANGLE_TYPE
(
CORR_ANGLE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_R_DSPM_FK'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_R_DSPM_FK FOREIGN KEY
(
SURVEY_PROCESS_METHOD
)
REFERENCES R_DIR_SRVY_PROCESS_METH
(
PROCESS_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_R_DSRU_FK'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_R_DSRU_FK FOREIGN KEY
(
RAD_UNCERT_DIST_REASON
)
REFERENCES R_DIR_SRVY_RAD_UNCERT
(
RAD_UNCERT_DIST_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_R_DSR_FK'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_R_DSR_FK FOREIGN KEY
(
RECORD_MODE
)
REFERENCES R_DIR_SRVY_RECORD
(
RECORD_MODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_R_DSRT_FK'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_R_DSRT_FK FOREIGN KEY
(
SURVEY_REPORT_TYPE
)
REFERENCES R_DIR_SRVY_REPORT_TYPE
(
REPORT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_R_DST1_FK1'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_R_DST1_FK1 FOREIGN KEY
(
RPT_SURVEY_TYPE
)
REFERENCES R_DIR_SRVY_TYPE
(
SURVEY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_R_DST1_FK'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_R_DST1_FK FOREIGN KEY
(
SURVEY_TYPE
)
REFERENCES R_DIR_SRVY_TYPE
(
SURVEY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_R_ED_FK2'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_R_ED_FK2 FOREIGN KEY
(
RPT_TIE_X_OFFSET_EW_DIR
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_R_ED_FK'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_R_ED_FK FOREIGN KEY
(
MAG_DECL_EW_DIRECTION
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_R_N_FK2'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_R_N_FK2 FOREIGN KEY
(
OFFSET_NORTH_TYPE
)
REFERENCES R_NORTH
(
NORTH_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_R_N_FK3'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_R_N_FK3 FOREIGN KEY
(
RPT_NORTH_TYPE
)
REFERENCES R_NORTH
(
NORTH_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_R_N_FK'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_R_N_FK FOREIGN KEY
(
AZIMUTH_NORTH_TYPE
)
REFERENCES R_NORTH
(
NORTH_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_R_ND_FK'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_R_ND_FK FOREIGN KEY
(
RPT_TIE_Y_OFFSET_NS_DIR
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_R_PQCQ_FK'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_R_PQCQ_FK FOREIGN KEY
(
AZIMUTH_COORD_SYS_QUALIFIER
)
REFERENCES R_PPDM_QC_QUALITY
(
QUALITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_R_PQCQ_FK2'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_R_PQCQ_FK2 FOREIGN KEY
(
OFFSET_COORD_SYS_QUALIFIER
)
REFERENCES R_PPDM_QC_QUALITY
(
QUALITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_R_PQCQ_FK4'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_R_PQCQ_FK4 FOREIGN KEY
(
SURVEY_START_DATE_QUALIFIER
)
REFERENCES R_PPDM_QC_QUALITY
(
QUALITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_R_PQCQ_FK3'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_R_PQCQ_FK3 FOREIGN KEY
(
SURVEY_END_DATE_QUALIFIER
)
REFERENCES R_PPDM_QC_QUALITY
(
QUALITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_R_Q_FK'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_R_Q_FK FOREIGN KEY
(
SURVEY_QUALITY
)
REFERENCES R_QUALITY
(
QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_R_WDT_FK'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_R_WDT_FK FOREIGN KEY
(
REPORT_LOG_DATUM
)
REFERENCES R_WELL_DATUM_TYPE
(
WELL_DATUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_R_WDT_FK2'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_R_WDT_FK2 FOREIGN KEY
(
REPORT_PERM_DATUM
)
REFERENCES R_WELL_DATUM_TYPE
(
WELL_DATUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_SRCD_FK'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDS_W_FK'
ALTER TABLE WELL_DIR_SRVY ADD CONSTRAINT WDS_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSC_WDS_FK'
ALTER TABLE WELL_DIR_SRVY_COMPOSITE ADD CONSTRAINT WDSC_WDS_FK FOREIGN KEY
(
COMPOSITE_UWI,
COMPOSITE_SURVEY_ID,
COMPOSITE_SOURCE
)
REFERENCES WELL_DIR_SRVY
(
UWI,
SURVEY_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSC_WDSS_FK1'
ALTER TABLE WELL_DIR_SRVY_COMPOSITE ADD CONSTRAINT WDSC_WDSS_FK1 FOREIGN KEY
(
INPUT_UWI,
INPUT_SURVEY_ID,
INPUT_SOURCE,
DEPTH_OBS_NO_FROM
)
REFERENCES WELL_DIR_SRVY_STATION
(
UWI,
SURVEY_ID,
SOURCE,
DEPTH_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSC_WDSS_FK2'
ALTER TABLE WELL_DIR_SRVY_COMPOSITE ADD CONSTRAINT WDSC_WDSS_FK2 FOREIGN KEY
(
INPUT_UWI,
INPUT_SURVEY_ID,
INPUT_SOURCE,
DEPTH_OBS_NO_TO
)
REFERENCES WELL_DIR_SRVY_STATION
(
UWI,
SURVEY_ID,
SOURCE,
DEPTH_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSS_R_DSAR_FK'
ALTER TABLE WELL_DIR_SRVY_STATION ADD CONSTRAINT WDSS_R_DSAR_FK FOREIGN KEY
(
ACCURACY_PROBLEM_REASON
)
REFERENCES R_DIR_SRVY_ACC_REASON
(
ACCURACY_PROBLEM_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSS_R_DSPT_FK'
ALTER TABLE WELL_DIR_SRVY_STATION ADD CONSTRAINT WDSS_R_DSPT_FK FOREIGN KEY
(
POINT_TYPE
)
REFERENCES R_DIR_SRVY_POINT_TYPE
(
POINT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSS_R_DSRU_FK'
ALTER TABLE WELL_DIR_SRVY_STATION ADD CONSTRAINT WDSS_R_DSRU_FK FOREIGN KEY
(
RAD_UNCERT_DIST_REASON
)
REFERENCES R_DIR_SRVY_RAD_UNCERT
(
RAD_UNCERT_DIST_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSS_R_DST1_FK'
ALTER TABLE WELL_DIR_SRVY_STATION ADD CONSTRAINT WDSS_R_DST1_FK FOREIGN KEY
(
SURVEY_TYPE
)
REFERENCES R_DIR_SRVY_TYPE
(
SURVEY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSS_R_ED_FK'
ALTER TABLE WELL_DIR_SRVY_STATION ADD CONSTRAINT WDSS_R_ED_FK FOREIGN KEY
(
X_OFFSET_EW_DIRECTION
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSS_R_ND_FK'
ALTER TABLE WELL_DIR_SRVY_STATION ADD CONSTRAINT WDSS_R_ND_FK FOREIGN KEY
(
Y_OFFSET_NS_DIRECTION
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSS_WDS_FK'
ALTER TABLE WELL_DIR_SRVY_STATION ADD CONSTRAINT WDSS_WDS_FK FOREIGN KEY
(
UWI,
SURVEY_ID,
SOURCE
)
REFERENCES WELL_DIR_SRVY
(
UWI,
SURVEY_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSS_WDP_FK'
ALTER TABLE WELL_DIR_SRVY_STATION ADD CONSTRAINT WDSS_WDP_FK FOREIGN KEY
(
UWI,
PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSSV_R_DSAR_FK'
ALTER TABLE WELL_DIR_SRVY_ST_VERSION ADD CONSTRAINT WDSSV_R_DSAR_FK FOREIGN KEY
(
ACCURACY_PROBLEM_REASON
)
REFERENCES R_DIR_SRVY_ACC_REASON
(
ACCURACY_PROBLEM_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSSV_R_DSPT_FK'
ALTER TABLE WELL_DIR_SRVY_ST_VERSION ADD CONSTRAINT WDSSV_R_DSPT_FK FOREIGN KEY
(
POINT_TYPE
)
REFERENCES R_DIR_SRVY_POINT_TYPE
(
POINT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSSV_R_DSRU_FK'
ALTER TABLE WELL_DIR_SRVY_ST_VERSION ADD CONSTRAINT WDSSV_R_DSRU_FK FOREIGN KEY
(
RAD_UNCERT_DIST_REASON
)
REFERENCES R_DIR_SRVY_RAD_UNCERT
(
RAD_UNCERT_DIST_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSSV_R_DST1_FK'
ALTER TABLE WELL_DIR_SRVY_ST_VERSION ADD CONSTRAINT WDSSV_R_DST1_FK FOREIGN KEY
(
SURVEY_TYPE
)
REFERENCES R_DIR_SRVY_TYPE
(
SURVEY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSSV_R_ED_FK'
ALTER TABLE WELL_DIR_SRVY_ST_VERSION ADD CONSTRAINT WDSSV_R_ED_FK FOREIGN KEY
(
X_OFFSET_EW_DIRECTION
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSSV_R_ND_FK'
ALTER TABLE WELL_DIR_SRVY_ST_VERSION ADD CONSTRAINT WDSSV_R_ND_FK FOREIGN KEY
(
Y_OFFSET_NS_DIRECTION
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSSV_WDS_FK'
ALTER TABLE WELL_DIR_SRVY_ST_VERSION ADD CONSTRAINT WDSSV_WDS_FK FOREIGN KEY
(
UWI,
SURVEY_ID,
SOURCE
)
REFERENCES WELL_DIR_SRVY
(
UWI,
SURVEY_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSSV_WDSV_FK'
ALTER TABLE WELL_DIR_SRVY_ST_VERSION ADD CONSTRAINT WDSSV_WDSV_FK FOREIGN KEY
(
UWI,
SURVEY_ID,
SOURCE,
VERSION_OBS_NO
)
REFERENCES WELL_DIR_SRVY_VERSION
(
UWI,
SURVEY_ID,
SOURCE,
VERSION_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSSV_WDP_FK'
ALTER TABLE WELL_DIR_SRVY_ST_VERSION ADD CONSTRAINT WDSSV_WDP_FK FOREIGN KEY
(
UWI,
PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_BA_FK'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_BA_FK FOREIGN KEY
(
SURVEY_COMPANY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_BA_FK3'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_BA_FK3 FOREIGN KEY
(
SURVEY_COMPILER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_BA_FK2'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_BA_FK2 FOREIGN KEY
(
SURVEY_DIGITAL_PRVDR_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_CS_FK5'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_CS_FK5 FOREIGN KEY
(
GEOG_COORD_SYS_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_CS_FK4'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_CS_FK4 FOREIGN KEY
(
OFFSET_COORD_SYS_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_CS_FK3'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_CS_FK3 FOREIGN KEY
(
RPT_COORD_SYS_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_CS_FK2'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_CS_FK2 FOREIGN KEY
(
AZIMUTH_COORD_SYS_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_CS_FK'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_CS_FK FOREIGN KEY
(
LOCAL_COORD_SYS_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_CSCA_FK'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_CSCA_FK FOREIGN KEY
(
COORD_ACQUISITION_ID
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_R_CT3_FK'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_R_CT3_FK FOREIGN KEY
(
CONFIDENTIAL_TYPE
)
REFERENCES R_CONFIDENTIAL_TYPE
(
CONFIDENTIAL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_R_DSC_FK'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_R_DSC_FK FOREIGN KEY
(
DIR_SURVEY_CLASS
)
REFERENCES R_DIR_SRVY_CLASS
(
DIR_SURVEY_CLASS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_R_DSC1_FK'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_R_DSC1_FK FOREIGN KEY
(
COMPUTE_METHOD
)
REFERENCES R_DIR_SRVY_COMPUTE
(
COMPUTE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_R_DSCAT_FK'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_R_DSCAT_FK FOREIGN KEY
(
AZIMUTH_CORR_ANGLE_TYPE
)
REFERENCES R_DIR_SRVY_CORR_ANGLE_TYPE
(
CORR_ANGLE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_R_DSPM_FK'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_R_DSPM_FK FOREIGN KEY
(
SURVEY_PROCESS_METHOD
)
REFERENCES R_DIR_SRVY_PROCESS_METH
(
PROCESS_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_R_DSRU_FK'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_R_DSRU_FK FOREIGN KEY
(
RAD_UNCERT_DIST_REASON
)
REFERENCES R_DIR_SRVY_RAD_UNCERT
(
RAD_UNCERT_DIST_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_R_DSR_FK'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_R_DSR_FK FOREIGN KEY
(
RECORD_MODE
)
REFERENCES R_DIR_SRVY_RECORD
(
RECORD_MODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_R_DST1_FK'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_R_DST1_FK FOREIGN KEY
(
RPT_SURVEY_TYPE
)
REFERENCES R_DIR_SRVY_TYPE
(
SURVEY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_R_DST1_FK2'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_R_DST1_FK2 FOREIGN KEY
(
SURVEY_TYPE
)
REFERENCES R_DIR_SRVY_TYPE
(
SURVEY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_R_ED_FK'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_R_ED_FK FOREIGN KEY
(
RPT_TIE_X_OFFSET_EW_DIR
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_R_ED_FK2'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_R_ED_FK2 FOREIGN KEY
(
MAG_DECL_EW_DIRECTION
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_R_N_FK'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_R_N_FK FOREIGN KEY
(
AZIMUTH_NORTH_TYPE
)
REFERENCES R_NORTH
(
NORTH_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_R_N_FK3'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_R_N_FK3 FOREIGN KEY
(
OFFSET_NORTH_TYPE
)
REFERENCES R_NORTH
(
NORTH_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_R_N_FK2'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_R_N_FK2 FOREIGN KEY
(
RPT_NORTH_TYPE
)
REFERENCES R_NORTH
(
NORTH_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_R_ND_FK'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_R_ND_FK FOREIGN KEY
(
RPT_TIE_Y_OFFSET_NS_DIR
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_R_PQCQ_FK'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_R_PQCQ_FK FOREIGN KEY
(
SURVEY_END_DATE_QUALIFIER
)
REFERENCES R_PPDM_QC_QUALITY
(
QUALITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_R_PQCQ_FK2'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_R_PQCQ_FK2 FOREIGN KEY
(
SURVEY_START_DATE_QUALIFIER
)
REFERENCES R_PPDM_QC_QUALITY
(
QUALITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_R_PQCQ_FK3'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_R_PQCQ_FK3 FOREIGN KEY
(
AZIMUTH_COORD_SYS_QUALIFIER
)
REFERENCES R_PPDM_QC_QUALITY
(
QUALITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_R_PQCQ_FK4'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_R_PQCQ_FK4 FOREIGN KEY
(
OFFSET_COORD_SYS_QUALIFIER
)
REFERENCES R_PPDM_QC_QUALITY
(
QUALITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_R_Q_FK'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_R_Q_FK FOREIGN KEY
(
SURVEY_QUALITY
)
REFERENCES R_QUALITY
(
QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_R_WDT_FK'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_R_WDT_FK FOREIGN KEY
(
REPORT_LOG_DATUM
)
REFERENCES R_WELL_DATUM_TYPE
(
WELL_DATUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_R_WDT_FK2'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_R_WDT_FK2 FOREIGN KEY
(
REPORT_PERM_DATUM
)
REFERENCES R_WELL_DATUM_TYPE
(
WELL_DATUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_SRCD_FK'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSV_W_FK'
ALTER TABLE WELL_DIR_SRVY_VERSION ADD CONSTRAINT WDSV_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDAI_CA_FK'
ALTER TABLE WELL_DRILL_ADD_INV ADD CONSTRAINT WDAI_CA_FK FOREIGN KEY
(
ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDAI_R_DRT_FK'
ALTER TABLE WELL_DRILL_ADD_INV ADD CONSTRAINT WDAI_R_DRT_FK FOREIGN KEY
(
REPORT_TIME_TYPE
)
REFERENCES R_DRILL_REPORT_TIME
(
REPORT_TIME_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDAI_SF_FK'
ALTER TABLE WELL_DRILL_ADD_INV ADD CONSTRAINT WDAI_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDAI_WDP_FK'
ALTER TABLE WELL_DRILL_ADD_INV ADD CONSTRAINT WDAI_WDP_FK FOREIGN KEY
(
UWI,
DRILL_PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDA_R_TZ_FK2'
ALTER TABLE WELL_DRILL_ASSEMBLY ADD CONSTRAINT WDA_R_TZ_FK2 FOREIGN KEY
(
START_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDA_R_TZ_FK'
ALTER TABLE WELL_DRILL_ASSEMBLY ADD CONSTRAINT WDA_R_TZ_FK FOREIGN KEY
(
END_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDA_W_FK'
ALTER TABLE WELL_DRILL_ASSEMBLY ADD CONSTRAINT WDA_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDAC_CEQ_FK'
ALTER TABLE WELL_DRILL_ASSEMBLY_COMP ADD CONSTRAINT WDAC_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDAC_R_DAC_FK'
ALTER TABLE WELL_DRILL_ASSEMBLY_COMP ADD CONSTRAINT WDAC_R_DAC_FK FOREIGN KEY
(
COMPONENT_TYPE
)
REFERENCES R_DRILL_ASSEMBLY_COMP
(
COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDAC_WDA_FK'
ALTER TABLE WELL_DRILL_ASSEMBLY_COMP ADD CONSTRAINT WDAC_WDA_FK FOREIGN KEY
(
UWI,
ASSEMBLY_ID
)
REFERENCES WELL_DRILL_ASSEMBLY
(
UWI,
ASSEMBLY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDAP_R_TZ_FK'
ALTER TABLE WELL_DRILL_ASSEMBLY_PER ADD CONSTRAINT WDAP_R_TZ_FK FOREIGN KEY
(
END_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDAP_R_TZ_FK2'
ALTER TABLE WELL_DRILL_ASSEMBLY_PER ADD CONSTRAINT WDAP_R_TZ_FK2 FOREIGN KEY
(
START_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDAP_WDA_FK'
ALTER TABLE WELL_DRILL_ASSEMBLY_PER ADD CONSTRAINT WDAP_WDA_FK FOREIGN KEY
(
UWI,
ASSEMBLY_ID
)
REFERENCES WELL_DRILL_ASSEMBLY
(
UWI,
ASSEMBLY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDAP_WDP_FK'
ALTER TABLE WELL_DRILL_ASSEMBLY_PER ADD CONSTRAINT WDAP_WDP_FK FOREIGN KEY
(
UWI,
PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDBC_R_BBC_FK'
ALTER TABLE WELL_DRILL_BIT_CONDITION ADD CONSTRAINT WDBC_R_BBC_FK FOREIGN KEY
(
BEARING_CONDITION
)
REFERENCES R_BIT_BEARING_CONDITION
(
BEARING_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDBC_R_DBC_FK'
ALTER TABLE WELL_DRILL_BIT_CONDITION ADD CONSTRAINT WDBC_R_DBC_FK FOREIGN KEY
(
DRILL_BIT_CONDITION
)
REFERENCES R_DRILL_BIT_CONDITION
(
DRILL_BIT_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDBC_WDBI_FK'
ALTER TABLE WELL_DRILL_BIT_CONDITION ADD CONSTRAINT WDBC_WDBI_FK FOREIGN KEY
(
UWI,
BIT_SOURCE,
BIT_INTERVAL_OBS_NO
)
REFERENCES WELL_DRILL_BIT_INTERVAL
(
UWI,
SOURCE,
BIT_INTERVAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDBI_BA_FK'
ALTER TABLE WELL_DRILL_BIT_INTERVAL ADD CONSTRAINT WDBI_BA_FK FOREIGN KEY
(
BIT_COMPANY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDBI_EQ_FK'
ALTER TABLE WELL_DRILL_BIT_INTERVAL ADD CONSTRAINT WDBI_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDBI_R_BCSD_FK'
ALTER TABLE WELL_DRILL_BIT_INTERVAL ADD CONSTRAINT WDBI_R_BCSD_FK FOREIGN KEY
(
CUTTING_STRUCTURE_MDC
)
REFERENCES R_BIT_CUT_STRUCT_DULL
(
CUTTING_STRUCTURE_MDC
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDBI_R_BCSI_FK'
ALTER TABLE WELL_DRILL_BIT_INTERVAL ADD CONSTRAINT WDBI_R_BCSI_FK FOREIGN KEY
(
CUTTING_STRUCTURE_TI
)
REFERENCES R_BIT_CUT_STRUCT_INNER
(
CUTTING_STRUCTURE_T1
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDBI_R_BCSL_FK'
ALTER TABLE WELL_DRILL_BIT_INTERVAL ADD CONSTRAINT WDBI_R_BCSL_FK FOREIGN KEY
(
CUTTING_STRUCTURE_LOC
)
REFERENCES R_BIT_CUT_STRUCT_LOC
(
CUTTING_STRUCTURE_LOC
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDBI_R_BCSO_FK'
ALTER TABLE WELL_DRILL_BIT_INTERVAL ADD CONSTRAINT WDBI_R_BCSO_FK FOREIGN KEY
(
CUTTING_STRUCTURE_TO
)
REFERENCES R_BIT_CUT_STRUCT_OUTER
(
CUTTING_STRUCTURE_TO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDBI_R_BRP_FK'
ALTER TABLE WELL_DRILL_BIT_INTERVAL ADD CONSTRAINT WDBI_R_BRP_FK FOREIGN KEY
(
REASON_PULLED
)
REFERENCES R_BIT_REASON_PULLED
(
REASON_PULLED
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDBI_R_DBT_FK'
ALTER TABLE WELL_DRILL_BIT_INTERVAL ADD CONSTRAINT WDBI_R_DBT_FK FOREIGN KEY
(
DRILL_BIT_TYPE
)
REFERENCES R_DRILL_BIT_TYPE
(
DRILL_BIT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDBI_W_FK'
ALTER TABLE WELL_DRILL_BIT_INTERVAL ADD CONSTRAINT WDBI_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDBJ_R_DBJT_FK'
ALTER TABLE WELL_DRILL_BIT_JET ADD CONSTRAINT WDBJ_R_DBJT_FK FOREIGN KEY
(
JET_TYPE
)
REFERENCES R_DRILL_BIT_JET_TYPE
(
JET_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDBJ_WDBI_FK'
ALTER TABLE WELL_DRILL_BIT_JET ADD CONSTRAINT WDBJ_WDBI_FK FOREIGN KEY
(
UWI,
BIT_SOURCE,
BIT_INTERVAL_OBS_NO
)
REFERENCES WELL_DRILL_BIT_INTERVAL
(
UWI,
SOURCE,
BIT_INTERVAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDBP_R_WDOT_FK'
ALTER TABLE WELL_DRILL_BIT_PERIOD ADD CONSTRAINT WDBP_R_WDOT_FK FOREIGN KEY
(
DRILL_OP_TYPE
)
REFERENCES R_WELL_DRILL_OP_TYPE
(
DRILL_OP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDBP_WDBI_FK'
ALTER TABLE WELL_DRILL_BIT_PERIOD ADD CONSTRAINT WDBP_WDBI_FK FOREIGN KEY
(
UWI,
BIT_SOURCE,
BIT_INTERVAL_OBS_NO
)
REFERENCES WELL_DRILL_BIT_INTERVAL
(
UWI,
SOURCE,
BIT_INTERVAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDBP_WDP_FK'
ALTER TABLE WELL_DRILL_BIT_PERIOD ADD CONSTRAINT WDBP_WDP_FK FOREIGN KEY
(
UWI,
PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDCK_BA_FK2'
ALTER TABLE WELL_DRILL_CHECK ADD CONSTRAINT WDCK_BA_FK2 FOREIGN KEY
(
CONTRACTOR_REP_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDCK_BA_FK'
ALTER TABLE WELL_DRILL_CHECK ADD CONSTRAINT WDCK_BA_FK FOREIGN KEY
(
OPERATOR_REP_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDCK_WDCKT_FK'
ALTER TABLE WELL_DRILL_CHECK ADD CONSTRAINT WDCK_WDCKT_FK FOREIGN KEY
(
CHECK_SET_ID,
CHECK_TYPE
)
REFERENCES WELL_DRILL_CHECK_TYPE
(
CHECK_SET_ID,
CHECK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDCK_WDP_FK'
ALTER TABLE WELL_DRILL_CHECK ADD CONSTRAINT WDCK_WDP_FK FOREIGN KEY
(
UWI,
PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDCKS_BA_FK'
ALTER TABLE WELL_DRILL_CHECK_SET ADD CONSTRAINT WDCKS_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDCKT_R_PT3_FK'
ALTER TABLE WELL_DRILL_CHECK_TYPE ADD CONSTRAINT WDCKT_R_PT3_FK FOREIGN KEY
(
FREQUENCY
)
REFERENCES R_PERIOD_TYPE
(
PERIOD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDCKT_SRCD_FK'
ALTER TABLE WELL_DRILL_CHECK_TYPE ADD CONSTRAINT WDCKT_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDCKT_WDCKS_FK'
ALTER TABLE WELL_DRILL_CHECK_TYPE ADD CONSTRAINT WDCKT_WDCKS_FK FOREIGN KEY
(
CHECK_SET_ID
)
REFERENCES WELL_DRILL_CHECK_SET
(
CHECK_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDE_BA_FK'
ALTER TABLE WELL_DRILL_EQUIPMENT ADD CONSTRAINT WDE_BA_FK FOREIGN KEY
(
OPERATED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDE_EQ_FK'
ALTER TABLE WELL_DRILL_EQUIPMENT ADD CONSTRAINT WDE_EQ_FK FOREIGN KEY
(
PARENT_EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDE_EQ_FK2'
ALTER TABLE WELL_DRILL_EQUIPMENT ADD CONSTRAINT WDE_EQ_FK2 FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDE_R_TZ_FK'
ALTER TABLE WELL_DRILL_EQUIPMENT ADD CONSTRAINT WDE_R_TZ_FK FOREIGN KEY
(
TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDE_W_FK'
ALTER TABLE WELL_DRILL_EQUIPMENT ADD CONSTRAINT WDE_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDID_R_DBDC_FK'
ALTER TABLE WELL_DRILL_INT_DETAIL ADD CONSTRAINT WDID_R_DBDC_FK FOREIGN KEY
(
BIT_DETAIL_TYPE,
BIT_DETAIL_CODE
)
REFERENCES R_DRILL_BIT_DETAIL_CODE
(
BIT_DETAIL_TYPE,
BIT_DETAIL_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDID_R_DBD_FK'
ALTER TABLE WELL_DRILL_INT_DETAIL ADD CONSTRAINT WDID_R_DBD_FK FOREIGN KEY
(
BIT_DETAIL_TYPE
)
REFERENCES R_DRILL_BIT_DETAIL_TYPE
(
BIT_DETAIL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDID_R_TZ_FK'
ALTER TABLE WELL_DRILL_INT_DETAIL ADD CONSTRAINT WDID_R_TZ_FK FOREIGN KEY
(
TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDID_WDBI_FK'
ALTER TABLE WELL_DRILL_INT_DETAIL ADD CONSTRAINT WDID_WDBI_FK FOREIGN KEY
(
UWI,
BIT_SOURCE,
BIT_INTERVAL_OBS_NO
)
REFERENCES WELL_DRILL_BIT_INTERVAL
(
UWI,
SOURCE,
BIT_INTERVAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDMA_CA_FK'
ALTER TABLE WELL_DRILL_MUD_ADDITIVE ADD CONSTRAINT WDMA_CA_FK FOREIGN KEY
(
ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDMA_R_AM_FK'
ALTER TABLE WELL_DRILL_MUD_ADDITIVE ADD CONSTRAINT WDMA_R_AM_FK FOREIGN KEY
(
ADDITIVE_METHOD
)
REFERENCES R_ADDITIVE_METHOD
(
ADDITIVE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDMA_R_TZ_FK'
ALTER TABLE WELL_DRILL_MUD_ADDITIVE ADD CONSTRAINT WDMA_R_TZ_FK FOREIGN KEY
(
TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDMA_WDP_FK'
ALTER TABLE WELL_DRILL_MUD_ADDITIVE ADD CONSTRAINT WDMA_WDP_FK FOREIGN KEY
(
UWI,
DRILL_PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDMI_R_DM_FK'
ALTER TABLE WELL_DRILL_MUD_INTRVL ADD CONSTRAINT WDMI_R_DM_FK FOREIGN KEY
(
MEDIA_TYPE
)
REFERENCES R_DRILLING_MEDIA
(
DRILLING_MEDIA
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDMI_W_FK'
ALTER TABLE WELL_DRILL_MUD_INTRVL ADD CONSTRAINT WDMI_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDMW_W_FK'
ALTER TABLE WELL_DRILL_MUD_WEIGHT ADD CONSTRAINT WDMW_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDP_BA_FK'
ALTER TABLE WELL_DRILL_PERIOD ADD CONSTRAINT WDP_BA_FK FOREIGN KEY
(
CONTRACTOR_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDP_BA_FK4'
ALTER TABLE WELL_DRILL_PERIOD ADD CONSTRAINT WDP_BA_FK4 FOREIGN KEY
(
OPERATOR_REP_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDP_BA_FK2'
ALTER TABLE WELL_DRILL_PERIOD ADD CONSTRAINT WDP_BA_FK2 FOREIGN KEY
(
CONTRACTOR_REP_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDP_BA_FK3'
ALTER TABLE WELL_DRILL_PERIOD ADD CONSTRAINT WDP_BA_FK3 FOREIGN KEY
(
OPERATOR_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDP_FIN_FK'
ALTER TABLE WELL_DRILL_PERIOD ADD CONSTRAINT WDP_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDP_RATE_FK'
ALTER TABLE WELL_DRILL_PERIOD ADD CONSTRAINT WDP_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDP_R_DM_FK'
ALTER TABLE WELL_DRILL_PERIOD ADD CONSTRAINT WDP_R_DM_FK FOREIGN KEY
(
MUD_SYSTEM_TYPE
)
REFERENCES R_DRILLING_MEDIA
(
DRILLING_MEDIA
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDP_R_DRT_FK'
ALTER TABLE WELL_DRILL_PERIOD ADD CONSTRAINT WDP_R_DRT_FK FOREIGN KEY
(
REPORT_TIME_TYPE
)
REFERENCES R_DRILL_REPORT_TIME
(
REPORT_TIME_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDP_R_TZ_FK4'
ALTER TABLE WELL_DRILL_PERIOD ADD CONSTRAINT WDP_R_TZ_FK4 FOREIGN KEY
(
REPORTED_SPUD_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDP_R_TZ_FK2'
ALTER TABLE WELL_DRILL_PERIOD ADD CONSTRAINT WDP_R_TZ_FK2 FOREIGN KEY
(
START_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDP_R_TZ_FK'
ALTER TABLE WELL_DRILL_PERIOD ADD CONSTRAINT WDP_R_TZ_FK FOREIGN KEY
(
END_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDP_R_TZ_FK3'
ALTER TABLE WELL_DRILL_PERIOD ADD CONSTRAINT WDP_R_TZ_FK3 FOREIGN KEY
(
REPORTED_RIG_REL_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDP_R_WCPT_FK'
ALTER TABLE WELL_DRILL_PERIOD ADD CONSTRAINT WDP_R_WCPT_FK FOREIGN KEY
(
CIRC_PRESSURE_TYPE
)
REFERENCES R_WELL_CIRC_PRESS_TYPE
(
CIRC_PRESSURE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDP_R_WPT_FK'
ALTER TABLE WELL_DRILL_PERIOD ADD CONSTRAINT WDP_R_WPT_FK FOREIGN KEY
(
REPORTED_PROFILE_TYPE
)
REFERENCES R_WELL_PROFILE_TYPE
(
WELL_PROFILE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDP_W_FK'
ALTER TABLE WELL_DRILL_PERIOD ADD CONSTRAINT WDP_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDP_WAT_FK'
ALTER TABLE WELL_DRILL_PERIOD ADD CONSTRAINT WDP_WAT_FK FOREIGN KEY
(
DRILL_ACTIVITY_SET_ID,
DRILL_ACTIVITY_TYPE_ID
)
REFERENCES WELL_ACTIVITY_TYPE
(
ACTIVITY_SET_ID,
ACTIVITY_TYPE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPC_BA_FK2'
ALTER TABLE WELL_DRILL_PERIOD_CREW ADD CONSTRAINT WDPC_BA_FK2 FOREIGN KEY
(
CREW_COMPANY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPC_BA_FK'
ALTER TABLE WELL_DRILL_PERIOD_CREW ADD CONSTRAINT WDPC_BA_FK FOREIGN KEY
(
CREW_MEMBER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPC_R_BCOT_FK'
ALTER TABLE WELL_DRILL_PERIOD_CREW ADD CONSTRAINT WDPC_R_BCOT_FK FOREIGN KEY
(
OVERHEAD_TYPE
)
REFERENCES R_BA_CREW_OVERHEAD_TYPE
(
OVERHEAD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPC_R_EP_FK'
ALTER TABLE WELL_DRILL_PERIOD_CREW ADD CONSTRAINT WDPC_R_EP_FK FOREIGN KEY
(
CREW_POSITION
)
REFERENCES R_EMPLOYEE_POSITION
(
EMPLOYEE_POSITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPC_SF_FK'
ALTER TABLE WELL_DRILL_PERIOD_CREW ADD CONSTRAINT WDPC_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPC_WDP_FK'
ALTER TABLE WELL_DRILL_PERIOD_CREW ADD CONSTRAINT WDPC_WDP_FK FOREIGN KEY
(
UWI,
PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPE_EQ_FK'
ALTER TABLE WELL_DRILL_PERIOD_EQUIP ADD CONSTRAINT WDPE_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPE_WDE_FK'
ALTER TABLE WELL_DRILL_PERIOD_EQUIP ADD CONSTRAINT WDPE_WDE_FK FOREIGN KEY
(
UWI,
EQUIPMENT_ID,
EQUIPMENT_OBS_NO
)
REFERENCES WELL_DRILL_EQUIPMENT
(
UWI,
EQUIPMENT_ID,
EQUIPMENT_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPE_WDP_FK'
ALTER TABLE WELL_DRILL_PERIOD_EQUIP ADD CONSTRAINT WDPE_WDP_FK FOREIGN KEY
(
UWI,
PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPE_WTUB_FK'
ALTER TABLE WELL_DRILL_PERIOD_EQUIP ADD CONSTRAINT WDPE_WTUB_FK FOREIGN KEY
(
UWI,
TUBING_SOURCE,
TUBING_TYPE,
TUBING_OBS_NO
)
REFERENCES WELL_TUBULAR
(
UWI,
SOURCE,
TUBING_TYPE,
TUBING_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPIN_CA_FK'
ALTER TABLE WELL_DRILL_PERIOD_INV ADD CONSTRAINT WDPIN_CA_FK FOREIGN KEY
(
CAT_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPIN_CEQ_FK'
ALTER TABLE WELL_DRILL_PERIOD_INV ADD CONSTRAINT WDPIN_CEQ_FK FOREIGN KEY
(
CAT_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPIN_EQ_FK'
ALTER TABLE WELL_DRILL_PERIOD_INV ADD CONSTRAINT WDPIN_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPIN_R_DRT_FK'
ALTER TABLE WELL_DRILL_PERIOD_INV ADD CONSTRAINT WDPIN_R_DRT_FK FOREIGN KEY
(
REPORT_TIME_TYPE
)
REFERENCES R_DRILL_REPORT_TIME
(
REPORT_TIME_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPIN_R_IMT_FK'
ALTER TABLE WELL_DRILL_PERIOD_INV ADD CONSTRAINT WDPIN_R_IMT_FK FOREIGN KEY
(
INVENTORY_MATERIAL_TYPE
)
REFERENCES R_INV_MATERIAL_TYPE
(
INVENTORY_MATERIAL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPIN_R_TZ_FK'
ALTER TABLE WELL_DRILL_PERIOD_INV ADD CONSTRAINT WDPIN_R_TZ_FK FOREIGN KEY
(
REPORT_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPIN_WDP_FK'
ALTER TABLE WELL_DRILL_PERIOD_INV ADD CONSTRAINT WDPIN_WDP_FK FOREIGN KEY
(
UWI,
PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPS_R_TZ_FK'
ALTER TABLE WELL_DRILL_PERIOD_SERV ADD CONSTRAINT WDPS_R_TZ_FK FOREIGN KEY
(
END_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPS_R_TZ_FK2'
ALTER TABLE WELL_DRILL_PERIOD_SERV ADD CONSTRAINT WDPS_R_TZ_FK2 FOREIGN KEY
(
START_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPS_R_WSM_FK'
ALTER TABLE WELL_DRILL_PERIOD_SERV ADD CONSTRAINT WDPS_R_WSM_FK FOREIGN KEY
(
SERVICE_METRIC
)
REFERENCES R_WELL_SERVICE_METRIC
(
SERVICE_METRIC
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPS_R_WSMC_FK'
ALTER TABLE WELL_DRILL_PERIOD_SERV ADD CONSTRAINT WDPS_R_WSMC_FK FOREIGN KEY
(
SERVICE_METRIC,
METRIC_CODE
)
REFERENCES R_WELL_SERV_METRIC_CODE
(
SERVICE_METRIC,
METRIC_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPS_WBS_FK'
ALTER TABLE WELL_DRILL_PERIOD_SERV ADD CONSTRAINT WDPS_WBS_FK FOREIGN KEY
(
UWI,
PROVIDED_BY,
SERVICE_SEQ_NO
)
REFERENCES WELL_BA_SERVICE
(
UWI,
PROVIDED_BY,
SERVICE_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPS_WDP_FK'
ALTER TABLE WELL_DRILL_PERIOD_SERV ADD CONSTRAINT WDPS_WDP_FK FOREIGN KEY
(
UWI,
PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPV_R_N_FK'
ALTER TABLE WELL_DRILL_PERIOD_VESSEL ADD CONSTRAINT WDPV_R_N_FK FOREIGN KEY
(
HEADING_NORTH_TYPE
)
REFERENCES R_NORTH
(
NORTH_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPV_R_SFVR_FK'
ALTER TABLE WELL_DRILL_PERIOD_VESSEL ADD CONSTRAINT WDPV_R_SFVR_FK FOREIGN KEY
(
VESSEL_ROLE
)
REFERENCES R_SF_VESSEL_ROLE
(
VESSEL_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPV_SF_FK'
ALTER TABLE WELL_DRILL_PERIOD_VESSEL ADD CONSTRAINT WDPV_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
VESSEL_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPV_WDP_FK'
ALTER TABLE WELL_DRILL_PERIOD_VESSEL ADD CONSTRAINT WDPV_WDP_FK FOREIGN KEY
(
UWI,
PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPI_BA_FK'
ALTER TABLE WELL_DRILL_PIPE_INV ADD CONSTRAINT WDPI_BA_FK FOREIGN KEY
(
LOAN_TO_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPI_BA_FK2'
ALTER TABLE WELL_DRILL_PIPE_INV ADD CONSTRAINT WDPI_BA_FK2 FOREIGN KEY
(
LOAN_AUTHORIZED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPI_CEQ_FK'
ALTER TABLE WELL_DRILL_PIPE_INV ADD CONSTRAINT WDPI_CEQ_FK FOREIGN KEY
(
CAT_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPI_R_CT1_FK'
ALTER TABLE WELL_DRILL_PIPE_INV ADD CONSTRAINT WDPI_R_CT1_FK FOREIGN KEY
(
COUPLING_TYPE
)
REFERENCES R_COUPLING_TYPE
(
COUPLING_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPI_R_DRT_FK'
ALTER TABLE WELL_DRILL_PIPE_INV ADD CONSTRAINT WDPI_R_DRT_FK FOREIGN KEY
(
REPORT_TIME_TYPE
)
REFERENCES R_DRILL_REPORT_TIME
(
REPORT_TIME_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPI_R_TZ_FK'
ALTER TABLE WELL_DRILL_PIPE_INV ADD CONSTRAINT WDPI_R_TZ_FK FOREIGN KEY
(
REPORT_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPI_R_TG_FK'
ALTER TABLE WELL_DRILL_PIPE_INV ADD CONSTRAINT WDPI_R_TG_FK FOREIGN KEY
(
TUBING_GRADE
)
REFERENCES R_TUBING_GRADE
(
TUBING_GRADE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPI_R_TT2_FK'
ALTER TABLE WELL_DRILL_PIPE_INV ADD CONSTRAINT WDPI_R_TT2_FK FOREIGN KEY
(
TUBING_TYPE
)
REFERENCES R_TUBING_TYPE
(
TUBING_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDPI_WDP_FK'
ALTER TABLE WELL_DRILL_PIPE_INV ADD CONSTRAINT WDPI_WDP_FK FOREIGN KEY
(
UWI,
PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDRK_BA_FK'
ALTER TABLE WELL_DRILL_REMARK ADD CONSTRAINT WDRK_BA_FK FOREIGN KEY
(
REMARK_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDRK_R_RT2_FK'
ALTER TABLE WELL_DRILL_REMARK ADD CONSTRAINT WDRK_R_RT2_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_REMARK_TYPE
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDRK_STU_FK'
ALTER TABLE WELL_DRILL_REMARK ADD CONSTRAINT WDRK_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDRK_W_FK'
ALTER TABLE WELL_DRILL_REMARK ADD CONSTRAINT WDRK_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDRK_WDP_FK'
ALTER TABLE WELL_DRILL_REMARK ADD CONSTRAINT WDRK_WDP_FK FOREIGN KEY
(
UWI,
START_PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDRK_WDP_FK2'
ALTER TABLE WELL_DRILL_REMARK ADD CONSTRAINT WDRK_WDP_FK2 FOREIGN KEY
(
UWI,
END_PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDR_BA_FK'
ALTER TABLE WELL_DRILL_REPORT ADD CONSTRAINT WDR_BA_FK FOREIGN KEY
(
CONTRACTOR_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDR_PSWA_FK'
ALTER TABLE WELL_DRILL_REPORT ADD CONSTRAINT WDR_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDR_R_DF_FK2'
ALTER TABLE WELL_DRILL_REPORT ADD CONSTRAINT WDR_R_DF_FK2 FOREIGN KEY
(
VENDOR_DIGITAL_FORMAT
)
REFERENCES R_DIGITAL_FORMAT
(
DIGITAL_FORMAT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDR_R_DF_FK'
ALTER TABLE WELL_DRILL_REPORT ADD CONSTRAINT WDR_R_DF_FK FOREIGN KEY
(
STANDARD_DIGITAL_FORMAT
)
REFERENCES R_DIGITAL_FORMAT
(
DIGITAL_FORMAT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDR_R_TZ_FK'
ALTER TABLE WELL_DRILL_REPORT ADD CONSTRAINT WDR_R_TZ_FK FOREIGN KEY
(
START_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDR_R_TZ_FK3'
ALTER TABLE WELL_DRILL_REPORT ADD CONSTRAINT WDR_R_TZ_FK3 FOREIGN KEY
(
FILE_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDR_R_TZ_FK2'
ALTER TABLE WELL_DRILL_REPORT ADD CONSTRAINT WDR_R_TZ_FK2 FOREIGN KEY
(
END_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDR_W_FK'
ALTER TABLE WELL_DRILL_REPORT ADD CONSTRAINT WDR_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSH_CEQ_FK'
ALTER TABLE WELL_DRILL_SHAKER ADD CONSTRAINT WDSH_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSH_EQ_FK'
ALTER TABLE WELL_DRILL_SHAKER ADD CONSTRAINT WDSH_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSH_R_SL1_FK'
ALTER TABLE WELL_DRILL_SHAKER ADD CONSTRAINT WDSH_R_SL1_FK FOREIGN KEY
(
SCREEN_LOCATION
)
REFERENCES R_SCREEN_LOCATION
(
SCREEN_LOCATION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSH_WDP_FK'
ALTER TABLE WELL_DRILL_SHAKER ADD CONSTRAINT WDSH_WDP_FK FOREIGN KEY
(
UWI,
PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSTAT_R_DSTC_FK'
ALTER TABLE WELL_DRILL_STATISTIC ADD CONSTRAINT WDSTAT_R_DSTC_FK FOREIGN KEY
(
STATISTIC_TYPE,
STATISTIC_CODE
)
REFERENCES R_DRILL_STAT_CODE
(
STATISTIC_TYPE,
STATISTIC_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSTAT_R_DSTAT_FK'
ALTER TABLE WELL_DRILL_STATISTIC ADD CONSTRAINT WDSTAT_R_DSTAT_FK FOREIGN KEY
(
STATISTIC_TYPE
)
REFERENCES R_DRILL_STAT_TYPE
(
STATISTIC_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSTAT_R_TZ_FK'
ALTER TABLE WELL_DRILL_STATISTIC ADD CONSTRAINT WDSTAT_R_TZ_FK FOREIGN KEY
(
STATISTIC_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDSTAT_WDP_FK'
ALTER TABLE WELL_DRILL_STATISTIC ADD CONSTRAINT WDSTAT_WDP_FK FOREIGN KEY
(
UWI,
PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDW_R_DIR_FK'
ALTER TABLE WELL_DRILL_WEATHER ADD CONSTRAINT WDW_R_DIR_FK FOREIGN KEY
(
WIND_DIRECTION
)
REFERENCES R_DIRECTION
(
DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDW_R_RCOND_FK'
ALTER TABLE WELL_DRILL_WEATHER ADD CONSTRAINT WDW_R_RCOND_FK FOREIGN KEY
(
ROAD_CONDITION
)
REFERENCES R_ROAD_CONDITION
(
ROAD_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDW_R_TZ_FK'
ALTER TABLE WELL_DRILL_WEATHER ADD CONSTRAINT WDW_R_TZ_FK FOREIGN KEY
(
RECORDED_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDW_R_WATC_FK'
ALTER TABLE WELL_DRILL_WEATHER ADD CONSTRAINT WDW_R_WATC_FK FOREIGN KEY
(
WATER_CONDITION
)
REFERENCES R_WATER_CONDITION
(
WATER_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDW_R_WCOND_FK'
ALTER TABLE WELL_DRILL_WEATHER ADD CONSTRAINT WDW_R_WCOND_FK FOREIGN KEY
(
WEATHER_CONDITION
)
REFERENCES R_WEATHER_CONDITION
(
WEATHER_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDW_R_WWIND_FK'
ALTER TABLE WELL_DRILL_WEATHER ADD CONSTRAINT WDW_R_WWIND_FK FOREIGN KEY
(
WIND_STRENGTH
)
REFERENCES R_WIND_STRENGTH
(
WIND_STRENGTH
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WDW_WDP_FK'
ALTER TABLE WELL_DRILL_WEATHER ADD CONSTRAINT WDW_WDP_FK FOREIGN KEY
(
UWI,
PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WEQ_EQ_FK'
ALTER TABLE WELL_EQUIPMENT ADD CONSTRAINT WEQ_EQ_FK FOREIGN KEY
(
PARENT_EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WEQ_EQ_FK2'
ALTER TABLE WELL_EQUIPMENT ADD CONSTRAINT WEQ_EQ_FK2 FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WEQ_PS_FK'
ALTER TABLE WELL_EQUIPMENT ADD CONSTRAINT WEQ_PS_FK FOREIGN KEY
(
UWI,
STRING_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WEQ_W_FK'
ALTER TABLE WELL_EQUIPMENT ADD CONSTRAINT WEQ_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WFAC_FAC_FK'
ALTER TABLE WELL_FACILITY ADD CONSTRAINT WFAC_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WFAC_PS_FK'
ALTER TABLE WELL_FACILITY ADD CONSTRAINT WFAC_PS_FK FOREIGN KEY
(
UWI,
STRING_SOURCE,
STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WFAC_R_WFUT_FK'
ALTER TABLE WELL_FACILITY ADD CONSTRAINT WFAC_R_WFUT_FK FOREIGN KEY
(
FACILITY_USE_TYPE
)
REFERENCES R_WELL_FACILITY_USE_TYPE
(
FACILITY_USE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WFAC_W_FK'
ALTER TABLE WELL_FACILITY ADD CONSTRAINT WFAC_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WHD_BA_FK'
ALTER TABLE WELL_HORIZ_DRILL ADD CONSTRAINT WHD_BA_FK FOREIGN KEY
(
CONTRACTOR
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WHD_R_BRT_FK'
ALTER TABLE WELL_HORIZ_DRILL ADD CONSTRAINT WHD_R_BRT_FK FOREIGN KEY
(
BUILDUP_RADIUS_TYPE
)
REFERENCES R_BUILDUP_RADIUS_TYPE
(
BUILDUP_RADIUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WHD_R_HDR_FK'
ALTER TABLE WELL_HORIZ_DRILL ADD CONSTRAINT WHD_R_HDR_FK FOREIGN KEY
(
HORIZ_DRILLING_REASON
)
REFERENCES R_HORIZ_DRILL_REASON
(
HORIZ_DRILL_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WHD_R_HDT_FK'
ALTER TABLE WELL_HORIZ_DRILL ADD CONSTRAINT WHD_R_HDT_FK FOREIGN KEY
(
HORIZ_DRILLING_TYPE
)
REFERENCES R_HORIZ_DRILL_TYPE
(
HORIZ_DRILL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WHD_STU_FK'
ALTER TABLE WELL_HORIZ_DRILL ADD CONSTRAINT WHD_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
HORIZ_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WHD_W_FK'
ALTER TABLE WELL_HORIZ_DRILL ADD CONSTRAINT WHD_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WHDK_WHD_FK'
ALTER TABLE WELL_HORIZ_DRILL_KOP ADD CONSTRAINT WHDK_WHD_FK FOREIGN KEY
(
UWI,
SOURCE
)
REFERENCES WELL_HORIZ_DRILL
(
UWI,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WHDK_WN_FK'
ALTER TABLE WELL_HORIZ_DRILL_KOP ADD CONSTRAINT WHDK_WN_FK FOREIGN KEY
(
NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WHDP_STU_FK'
ALTER TABLE WELL_HORIZ_DRILL_POE ADD CONSTRAINT WHDP_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
POINT_OF_ENTRY_STRAT_UNIT
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WHDP_WHD_FK'
ALTER TABLE WELL_HORIZ_DRILL_POE ADD CONSTRAINT WHDP_WHD_FK FOREIGN KEY
(
UWI,
SOURCE
)
REFERENCES WELL_HORIZ_DRILL
(
UWI,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WHDP_WN_FK'
ALTER TABLE WELL_HORIZ_DRILL_POE ADD CONSTRAINT WHDP_WN_FK FOREIGN KEY
(
NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WHDS_WHDK_FK'
ALTER TABLE WELL_HORIZ_DRILL_SPOKE ADD CONSTRAINT WHDS_WHDK_FK FOREIGN KEY
(
UWI,
SOURCE,
KICKOFF_POINT_OBS_NO
)
REFERENCES WELL_HORIZ_DRILL_KOP
(
UWI,
SOURCE,
KICKOFF_POINT_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WHDS_WN_FK'
ALTER TABLE WELL_HORIZ_DRILL_SPOKE ADD CONSTRAINT WHDS_WN_FK FOREIGN KEY
(
NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLIC_APP_FK'
ALTER TABLE WELL_LICENSE ADD CONSTRAINT WLIC_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLIC_BA_FK5'
ALTER TABLE WELL_LICENSE ADD CONSTRAINT WLIC_BA_FK5 FOREIGN KEY
(
REGULATORY_AGENCY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLIC_BA_FK'
ALTER TABLE WELL_LICENSE ADD CONSTRAINT WLIC_BA_FK FOREIGN KEY
(
REGULATORY_CONTACT_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLIC_BA_FK2'
ALTER TABLE WELL_LICENSE ADD CONSTRAINT WLIC_BA_FK2 FOREIGN KEY
(
LICENSEE_CONTACT_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLIC_BA_FK3'
ALTER TABLE WELL_LICENSE ADD CONSTRAINT WLIC_BA_FK3 FOREIGN KEY
(
AGENT
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLIC_BA_FK4'
ALTER TABLE WELL_LICENSE ADD CONSTRAINT WLIC_BA_FK4 FOREIGN KEY
(
CONTRACTOR
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLIC_BA_FK7'
ALTER TABLE WELL_LICENSE ADD CONSTRAINT WLIC_BA_FK7 FOREIGN KEY
(
SURVEYOR
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLIC_BA_FK6'
ALTER TABLE WELL_LICENSE ADD CONSTRAINT WLIC_BA_FK6 FOREIGN KEY
(
LICENSEE
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLIC_RATE_FK'
ALTER TABLE WELL_LICENSE ADD CONSTRAINT WLIC_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLIC_R_DRP_FK'
ALTER TABLE WELL_LICENSE ADD CONSTRAINT WLIC_R_DRP_FK FOREIGN KEY
(
DISTANCE_REF_POINT
)
REFERENCES R_DIST_REF_PT
(
DISTANCE_REF_POINT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLIC_R_DTT_FK'
ALTER TABLE WELL_LICENSE ADD CONSTRAINT WLIC_R_DTT_FK FOREIGN KEY
(
DRILL_TOOL
)
REFERENCES R_DRILL_TOOL_TYPE
(
DRILL_TOOL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLIC_R_FT2_FK'
ALTER TABLE WELL_LICENSE ADD CONSTRAINT WLIC_R_FT2_FK FOREIGN KEY
(
TARGET_OBJECTIVE_FLUID
)
REFERENCES R_FLUID_TYPE
(
FLUID_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLIC_R_OCT_FK'
ALTER TABLE WELL_LICENSE ADD CONSTRAINT WLIC_R_OCT_FK FOREIGN KEY
(
OFFSHORE_COMPLETION_TYPE
)
REFERENCES R_OFFSHORE_COMP_TYPE
(
OFFSHORE_COMPLETION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLIC_R_RC_FK'
ALTER TABLE WELL_LICENSE ADD CONSTRAINT WLIC_R_RC_FK FOREIGN KEY
(
RIG_CODE
)
REFERENCES R_RIG_CODE
(
RIG_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLIC_R_RT4_FK'
ALTER TABLE WELL_LICENSE ADD CONSTRAINT WLIC_R_RT4_FK FOREIGN KEY
(
RIG_TYPE
)
REFERENCES R_RIG_TYPE
(
RIG_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLIC_SF_FK'
ALTER TABLE WELL_LICENSE ADD CONSTRAINT WLIC_SF_FK FOREIGN KEY
(
RIG_SF_SUBTYPE,
RIG_SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLIC_SRCD_FK'
ALTER TABLE WELL_LICENSE ADD CONSTRAINT WLIC_SRCD_FK FOREIGN KEY
(
REGULATION_TEXT_SOURCE_DOC
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLIC_STU_FK'
ALTER TABLE WELL_LICENSE ADD CONSTRAINT WLIC_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
AUTHORIZED_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLIC_STU_FK2'
ALTER TABLE WELL_LICENSE ADD CONSTRAINT WLIC_STU_FK2 FOREIGN KEY
(
STRAT_NAME_SET_ID,
PROJECTED_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLIC_W_FK'
ALTER TABLE WELL_LICENSE ADD CONSTRAINT WLIC_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLIC_WPT_FK'
ALTER TABLE WELL_LICENSE ADD CONSTRAINT WLIC_WPT_FK FOREIGN KEY
(
REGULATORY_AGENCY,
PERMIT_TYPE
)
REFERENCES WELL_PERMIT_TYPE
(
GRANTED_BY_BA_ID,
PERMIT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLICAL_BA_FK'
ALTER TABLE WELL_LICENSE_ALIAS ADD CONSTRAINT WLICAL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLICAL_PSWA_FK'
ALTER TABLE WELL_LICENSE_ALIAS ADD CONSTRAINT WLICAL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLICAL_R_ART_FK'
ALTER TABLE WELL_LICENSE_ALIAS ADD CONSTRAINT WLICAL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLICAL_R_ATY_FK'
ALTER TABLE WELL_LICENSE_ALIAS ADD CONSTRAINT WLICAL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLICAL_R_LANG_FK'
ALTER TABLE WELL_LICENSE_ALIAS ADD CONSTRAINT WLICAL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLICAL_SRCD_FK'
ALTER TABLE WELL_LICENSE_ALIAS ADD CONSTRAINT WLICAL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLICAL_WLIC_FK'
ALTER TABLE WELL_LICENSE_ALIAS ADD CONSTRAINT WLICAL_WLIC_FK FOREIGN KEY
(
UWI,
WELL_LIC_SOURCE,
LICENSE_ID
)
REFERENCES WELL_LICENSE
(
UWI,
SOURCE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLICA_A_FK'
ALTER TABLE WELL_LICENSE_AREA ADD CONSTRAINT WLICA_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLICA_WLIC_FK'
ALTER TABLE WELL_LICENSE_AREA ADD CONSTRAINT WLICA_WLIC_FK FOREIGN KEY
(
UWI,
WELL_LIC_SOURCE,
LICENSE_ID
)
REFERENCES WELL_LICENSE
(
UWI,
SOURCE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLICC_BA_FK'
ALTER TABLE WELL_LICENSE_COND ADD CONSTRAINT WLICC_BA_FK FOREIGN KEY
(
CONTACT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLICC_BA_FK2'
ALTER TABLE WELL_LICENSE_COND ADD CONSTRAINT WLICC_BA_FK2 FOREIGN KEY
(
FULFILLED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLICC_REST_FK'
ALTER TABLE WELL_LICENSE_COND ADD CONSTRAINT WLICC_REST_FK FOREIGN KEY
(
RESTRICTION_ID,
RESTRICTION_VERSION
)
REFERENCES RESTRICTION
(
RESTRICTION_ID,
RESTRICTION_VERSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLICC_R_WLC_FK'
ALTER TABLE WELL_LICENSE_COND ADD CONSTRAINT WLICC_R_WLC_FK FOREIGN KEY
(
CONDITION_TYPE
)
REFERENCES R_WELL_LIC_COND
(
CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLICC_R_WLCC_FK'
ALTER TABLE WELL_LICENSE_COND ADD CONSTRAINT WLICC_R_WLCC_FK FOREIGN KEY
(
CONDITION_TYPE,
CONDITION_CODE
)
REFERENCES R_WELL_LIC_COND_CODE
(
CONDITION_TYPE,
CONDITION_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLICC_R_WLDC_FK'
ALTER TABLE WELL_LICENSE_COND ADD CONSTRAINT WLICC_R_WLDC_FK FOREIGN KEY
(
DUE_CONDITION
)
REFERENCES R_WELL_LIC_DUE_CONDITION
(
DUE_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLICC_STU_FK'
ALTER TABLE WELL_LICENSE_COND ADD CONSTRAINT WLICC_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLICC_SUB_FK'
ALTER TABLE WELL_LICENSE_COND ADD CONSTRAINT WLICC_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLICC_WLIC_FK'
ALTER TABLE WELL_LICENSE_COND ADD CONSTRAINT WLICC_WLIC_FK FOREIGN KEY
(
UWI,
WELL_LIC_SOURCE,
LICENSE_ID
)
REFERENCES WELL_LICENSE
(
UWI,
SOURCE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLICR_R_RT2_FK'
ALTER TABLE WELL_LICENSE_REMARK ADD CONSTRAINT WLICR_R_RT2_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_REMARK_TYPE
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLICR_WLIC_FK'
ALTER TABLE WELL_LICENSE_REMARK ADD CONSTRAINT WLICR_WLIC_FK FOREIGN KEY
(
UWI,
WELL_LIC_SOURCE,
LICENSE_ID
)
REFERENCES WELL_LICENSE
(
UWI,
SOURCE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLICS_R_LIST_FK'
ALTER TABLE WELL_LICENSE_STATUS ADD CONSTRAINT WLICS_R_LIST_FK FOREIGN KEY
(
LICENSE_STATUS_TYPE,
LICENSE_STATUS
)
REFERENCES R_LICENSE_STATUS
(
LICENSE_STATUS_TYPE,
LICENSE_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLICS_WLIC_FK'
ALTER TABLE WELL_LICENSE_STATUS ADD CONSTRAINT WLICS_WLIC_FK FOREIGN KEY
(
UWI,
LICENSE_SOURCE,
LICENSE_ID
)
REFERENCES WELL_LICENSE
(
UWI,
SOURCE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLV_R_WLVRT_FK'
ALTER TABLE WELL_LICENSE_VIOLATION ADD CONSTRAINT WLV_R_WLVRT_FK FOREIGN KEY
(
RESOLVE_TYPE
)
REFERENCES R_WELL_LIC_VIOL_RESOL
(
RESOLVE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLV_R_WLVT_FK'
ALTER TABLE WELL_LICENSE_VIOLATION ADD CONSTRAINT WLV_R_WLVT_FK FOREIGN KEY
(
VIOLATION_TYPE
)
REFERENCES R_WELL_LIC_VIOL_TYPE
(
VIOLATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLV_WLIC_FK'
ALTER TABLE WELL_LICENSE_VIOLATION ADD CONSTRAINT WLV_WLIC_FK FOREIGN KEY
(
UWI,
WELL_LIC_SOURCE,
LICENSE_ID
)
REFERENCES WELL_LICENSE
(
UWI,
SOURCE,
LICENSE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLV_WLICC_FK'
ALTER TABLE WELL_LICENSE_VIOLATION ADD CONSTRAINT WLV_WLICC_FK FOREIGN KEY
(
UWI,
LICENSE_ID,
WELL_LIC_SOURCE,
CONDITION_ID
)
REFERENCES WELL_LICENSE_COND
(
UWI,
LICENSE_ID,
WELL_LIC_SOURCE,
CONDITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WL_BA_FK'
ALTER TABLE WELL_LOG ADD CONSTRAINT WL_BA_FK FOREIGN KEY
(
ACQUIRED_FOR_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WL_R_LDT1_FK'
ALTER TABLE WELL_LOG ADD CONSTRAINT WL_R_LDT1_FK FOREIGN KEY
(
DEPTH_TYPE
)
REFERENCES R_LOG_DEPTH_TYPE
(
DEPTH_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WL_W_FK'
ALTER TABLE WELL_LOG ADD CONSTRAINT WL_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WL_WLD_FK'
ALTER TABLE WELL_LOG ADD CONSTRAINT WL_WLD_FK FOREIGN KEY
(
DICTIONARY_ID
)
REFERENCES WELL_LOG_DICTIONARY
(
DICTIONARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WL_WLPS_FK'
ALTER TABLE WELL_LOG ADD CONSTRAINT WL_WLPS_FK FOREIGN KEY
(
UWI,
LOG_JOB_SOURCE,
LOG_JOB_ID,
TRIP_OBS_NO,
LOG_TOOL_PASS_NO
)
REFERENCES WELL_LOG_PASS
(
UWI,
SOURCE,
JOB_ID,
TRIP_OBS_NO,
LOG_TOOL_PASS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WL_WLT_FK'
ALTER TABLE WELL_LOG ADD CONSTRAINT WL_WLT_FK FOREIGN KEY
(
UWI,
LOG_JOB_SOURCE,
LOG_JOB_ID,
TRIP_OBS_NO
)
REFERENCES WELL_LOG_TRIP
(
UWI,
SOURCE,
JOB_ID,
TRIP_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLAC_WLCA_FK'
ALTER TABLE WELL_LOG_AXIS_COORD ADD CONSTRAINT WLAC_WLCA_FK FOREIGN KEY
(
UWI,
CURVE_ID,
AXIS_ID
)
REFERENCES WELL_LOG_CURVE_AXIS
(
UWI,
CURVE_ID,
AXIS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCLS_R_WLC1_FK'
ALTER TABLE WELL_LOG_CLASS ADD CONSTRAINT WLCLS_R_WLC1_FK FOREIGN KEY
(
WELL_LOG_CLASS_ID
)
REFERENCES R_WELL_LOG_CLASS
(
WELL_LOG_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCLS_WL_FK'
ALTER TABLE WELL_LOG_CLASS ADD CONSTRAINT WLCLS_WL_FK FOREIGN KEY
(
UWI,
WELL_LOG_ID,
WELL_LOG_SOURCE
)
REFERENCES WELL_LOG
(
UWI,
WELL_LOG_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCCC_R_WLC1_FK'
ALTER TABLE WELL_LOG_CLS_CRV_CLS ADD CONSTRAINT WLCCC_R_WLC1_FK FOREIGN KEY
(
WELL_LOG_CLASS_ID
)
REFERENCES R_WELL_LOG_CLASS
(
WELL_LOG_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCCC_WLCC_FK'
ALTER TABLE WELL_LOG_CLS_CRV_CLS ADD CONSTRAINT WLCCC_WLCC_FK FOREIGN KEY
(
CURVE_CLASS_ID
)
REFERENCES WELL_LOG_CURVE_CLASS
(
CURVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCCX_R_CX_FK'
ALTER TABLE WELL_LOG_CRV_CLS_XREF ADD CONSTRAINT WLCCX_R_CX_FK FOREIGN KEY
(
XREF_TYPE
)
REFERENCES R_CURVE_XREF_TYPE
(
XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCCX_WLCC_FK'
ALTER TABLE WELL_LOG_CRV_CLS_XREF ADD CONSTRAINT WLCCX_WLCC_FK FOREIGN KEY
(
PARENT_CURVE_CLASS_ID
)
REFERENCES WELL_LOG_CURVE_CLASS
(
CURVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCCX_WLCC_FK2'
ALTER TABLE WELL_LOG_CRV_CLS_XREF ADD CONSTRAINT WLCCX_WLCC_FK2 FOREIGN KEY
(
CHILD_CURVE_CLASS_ID
)
REFERENCES WELL_LOG_CURVE_CLASS
(
CURVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLC_BA_FK'
ALTER TABLE WELL_LOG_CURVE ADD CONSTRAINT WLC_BA_FK FOREIGN KEY
(
ACQUIRED_FOR_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLC_R_ALS_FK'
ALTER TABLE WELL_LOG_CURVE ADD CONSTRAINT WLC_R_ALS_FK FOREIGN KEY
(
API_CODE_SYSTEM
)
REFERENCES R_API_LOG_SYSTEM
(
API_CODE_SYSTEM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLC_R_DO1_FK'
ALTER TABLE WELL_LOG_CURVE ADD CONSTRAINT WLC_R_DO1_FK FOREIGN KEY
(
CURVE_OUTPUT_TYPE
)
REFERENCES R_DIGITAL_OUTPUT
(
DIGITAL_OUTPUT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLC_R_LGVT_FK'
ALTER TABLE WELL_LOG_CURVE ADD CONSTRAINT WLC_R_LGVT_FK FOREIGN KEY
(
GOOD_VALUE_TYPE
)
REFERENCES R_LOG_GOOD_VALUE_TYPE
(
GOOD_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLC_R_LIX_FK'
ALTER TABLE WELL_LOG_CURVE ADD CONSTRAINT WLC_R_LIX_FK FOREIGN KEY
(
PRIMARY_INDEX_TYPE
)
REFERENCES R_LOG_INDEX_TYPE
(
INDEX_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLC_R_LTT_FK'
ALTER TABLE WELL_LOG_CURVE ADD CONSTRAINT WLC_R_LTT_FK FOREIGN KEY
(
LOG_TOOL_TYPE
)
REFERENCES R_LOG_TOOL_TYPE
(
LOG_TOOL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLC_R_Q_FK'
ALTER TABLE WELL_LOG_CURVE ADD CONSTRAINT WLC_R_Q_FK FOREIGN KEY
(
CURVE_QUALITY
)
REFERENCES R_QUALITY
(
QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLC_W_FK'
ALTER TABLE WELL_LOG_CURVE ADD CONSTRAINT WLC_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLC_WL_FK'
ALTER TABLE WELL_LOG_CURVE ADD CONSTRAINT WLC_WL_FK FOREIGN KEY
(
UWI,
WELL_LOG_ID,
WELL_LOG_SOURCE
)
REFERENCES WELL_LOG
(
UWI,
WELL_LOG_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLC_WLC_FK'
ALTER TABLE WELL_LOG_CURVE ADD CONSTRAINT WLC_WLC_FK FOREIGN KEY
(
UWI,
INDEX_CURVE_ID
)
REFERENCES WELL_LOG_CURVE
(
UWI,
CURVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLC_WLCF_FK'
ALTER TABLE WELL_LOG_CURVE ADD CONSTRAINT WLC_WLCF_FK FOREIGN KEY
(
UWI,
WELL_LOG_ID,
WELL_LOG_SOURCE,
FRAME_ID
)
REFERENCES WELL_LOG_CURVE_FRAME
(
UWI,
WELL_LOG_ID,
WELL_LOG_SOURCE,
FRAME_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLC_WLDCV_FK'
ALTER TABLE WELL_LOG_CURVE ADD CONSTRAINT WLC_WLDCV_FK FOREIGN KEY
(
DICTIONARY_ID,
DICT_CURVE_ID
)
REFERENCES WELL_LOG_DICT_CURVE
(
DICTIONARY_ID,
DICT_CURVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLC_WLPS_FK'
ALTER TABLE WELL_LOG_CURVE ADD CONSTRAINT WLC_WLPS_FK FOREIGN KEY
(
UWI,
WELL_LOG_JOB_SOURCE,
JOB_ID,
TRIP_OBS_NO,
LOG_TOOL_PASS_NO
)
REFERENCES WELL_LOG_PASS
(
UWI,
SOURCE,
JOB_ID,
TRIP_OBS_NO,
LOG_TOOL_PASS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLC_WLT_FK'
ALTER TABLE WELL_LOG_CURVE ADD CONSTRAINT WLC_WLT_FK FOREIGN KEY
(
UWI,
WELL_LOG_JOB_SOURCE,
JOB_ID,
TRIP_OBS_NO
)
REFERENCES WELL_LOG_TRIP
(
UWI,
SOURCE,
JOB_ID,
TRIP_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCA_WLC_FK'
ALTER TABLE WELL_LOG_CURVE_AXIS ADD CONSTRAINT WLCA_WLC_FK FOREIGN KEY
(
UWI,
CURVE_ID
)
REFERENCES WELL_LOG_CURVE
(
UWI,
CURVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCC_PQ_FK'
ALTER TABLE WELL_LOG_CURVE_CLASS ADD CONSTRAINT WLCC_PQ_FK FOREIGN KEY
(
QUANTITY_ID
)
REFERENCES PPDM_QUANTITY
(
QUANTITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCC_R_LCCS_FK'
ALTER TABLE WELL_LOG_CURVE_CLASS ADD CONSTRAINT WLCC_R_LCCS_FK FOREIGN KEY
(
SYSTEM_TYPE
)
REFERENCES R_LOG_CRV_CLASS_SYSTEM
(
SYSTEM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCF_R_LD3_FK'
ALTER TABLE WELL_LOG_CURVE_FRAME ADD CONSTRAINT WLCF_R_LD3_FK FOREIGN KEY
(
LOG_DIRECTION
)
REFERENCES R_LOG_DIRECTION
(
LOG_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCF_R_LIX_FK'
ALTER TABLE WELL_LOG_CURVE_FRAME ADD CONSTRAINT WLCF_R_LIX_FK FOREIGN KEY
(
PRIMARY_INDEX_TYPE
)
REFERENCES R_LOG_INDEX_TYPE
(
INDEX_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCF_WL_FK'
ALTER TABLE WELL_LOG_CURVE_FRAME ADD CONSTRAINT WLCF_WL_FK FOREIGN KEY
(
UWI,
WELL_LOG_ID,
WELL_LOG_SOURCE
)
REFERENCES WELL_LOG
(
UWI,
WELL_LOG_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCP_WLC_FK'
ALTER TABLE WELL_LOG_CURVE_PROC ADD CONSTRAINT WLCP_WLC_FK FOREIGN KEY
(
UWI,
CURVE_ID
)
REFERENCES WELL_LOG_CURVE
(
UWI,
CURVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCP_WLCSP_FK'
ALTER TABLE WELL_LOG_CURVE_PROC ADD CONSTRAINT WLCP_WLCSP_FK FOREIGN KEY
(
UWI,
CURVE_ID,
SPLICE_OBS_NO
)
REFERENCES WELL_LOG_CURVE_SPLICE
(
UWI,
CURVE_ID,
SPLICE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCP_WLDPR_FK'
ALTER TABLE WELL_LOG_CURVE_PROC ADD CONSTRAINT WLCP_WLDPR_FK FOREIGN KEY
(
DICTIONARY_ID,
DICT_PROCESS_ID
)
REFERENCES WELL_LOG_DICT_PROC
(
DICTIONARY_ID,
PROCESS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCR_BA_FK'
ALTER TABLE WELL_LOG_CURVE_REMARK ADD CONSTRAINT WLCR_BA_FK FOREIGN KEY
(
MADE_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCR_R_RT2_FK'
ALTER TABLE WELL_LOG_CURVE_REMARK ADD CONSTRAINT WLCR_R_RT2_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_REMARK_TYPE
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCR_R_RUT1_FK'
ALTER TABLE WELL_LOG_CURVE_REMARK ADD CONSTRAINT WLCR_R_RUT1_FK FOREIGN KEY
(
REMARK_USE_TYPE
)
REFERENCES R_REMARK_USE_TYPE
(
REMARK_USE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCR_WLC_FK'
ALTER TABLE WELL_LOG_CURVE_REMARK ADD CONSTRAINT WLCR_WLC_FK FOREIGN KEY
(
UWI,
CURVE_ID
)
REFERENCES WELL_LOG_CURVE
(
UWI,
CURVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCS_R_CS2_FK'
ALTER TABLE WELL_LOG_CURVE_SCALE ADD CONSTRAINT WLCS_R_CS2_FK FOREIGN KEY
(
BACKUP_CURVE_SCALE
)
REFERENCES R_CURVE_SCALE
(
CURVE_SCALE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCS_R_LM_FK'
ALTER TABLE WELL_LOG_CURVE_SCALE ADD CONSTRAINT WLCS_R_LM_FK FOREIGN KEY
(
MATRIX_LITHOLOGY_SETTING
)
REFERENCES R_LOG_MATRIX
(
LOG_MATRIX_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCS_R_ST2_FK'
ALTER TABLE WELL_LOG_CURVE_SCALE ADD CONSTRAINT WLCS_R_ST2_FK FOREIGN KEY
(
SCALE_TRANSFORM_TYPE
)
REFERENCES R_SCALE_TRANSFORM
(
SCALE_TRANSFORM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCS_WLDC_FK'
ALTER TABLE WELL_LOG_CURVE_SCALE ADD CONSTRAINT WLCS_WLDC_FK FOREIGN KEY
(
UWI,
CURVE_ID,
DIGITAL_CURVE_ID
)
REFERENCES WELL_LOG_DGTZ_CURVE
(
UWI,
CURVE_ID,
DIGITAL_CURVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCSP_BA_FK'
ALTER TABLE WELL_LOG_CURVE_SPLICE ADD CONSTRAINT WLCSP_BA_FK FOREIGN KEY
(
CREATED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCSP_RMII_FK'
ALTER TABLE WELL_LOG_CURVE_SPLICE ADD CONSTRAINT WLCSP_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCSP_WLC_FK'
ALTER TABLE WELL_LOG_CURVE_SPLICE ADD CONSTRAINT WLCSP_WLC_FK FOREIGN KEY
(
UWI,
CURVE_ID
)
REFERENCES WELL_LOG_CURVE
(
UWI,
CURVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCSP_WLC_FK2'
ALTER TABLE WELL_LOG_CURVE_SPLICE ADD CONSTRAINT WLCSP_WLC_FK2 FOREIGN KEY
(
UWI,
SOURCE_CURVE_ID
)
REFERENCES WELL_LOG_CURVE
(
UWI,
CURVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCV_R_LIX_FK'
ALTER TABLE WELL_LOG_CURVE_VALUE ADD CONSTRAINT WLCV_R_LIX_FK FOREIGN KEY
(
INDEX_TYPE
)
REFERENCES R_LOG_INDEX_TYPE
(
INDEX_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLCV_WLC_FK'
ALTER TABLE WELL_LOG_CURVE_VALUE ADD CONSTRAINT WLCV_WLC_FK FOREIGN KEY
(
UWI,
CURVE_ID
)
REFERENCES WELL_LOG_CURVE
(
UWI,
CURVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLDC_R_LCM_FK'
ALTER TABLE WELL_LOG_DGTZ_CURVE ADD CONSTRAINT WLDC_R_LCM_FK FOREIGN KEY
(
DEPTH_CORRECTION_METHOD
)
REFERENCES R_LOG_CORRECT_METHOD
(
CORRECTION_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLDC_R_Q_FK'
ALTER TABLE WELL_LOG_DGTZ_CURVE ADD CONSTRAINT WLDC_R_Q_FK FOREIGN KEY
(
CURVE_QUALITY
)
REFERENCES R_QUALITY
(
QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLDC_WLC_FK'
ALTER TABLE WELL_LOG_DGTZ_CURVE ADD CONSTRAINT WLDC_WLC_FK FOREIGN KEY
(
UWI,
CURVE_ID
)
REFERENCES WELL_LOG_CURVE
(
UWI,
CURVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLD_BA_FK'
ALTER TABLE WELL_LOG_DICTIONARY ADD CONSTRAINT WLD_BA_FK FOREIGN KEY
(
OWNED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLDA_BA_FK'
ALTER TABLE WELL_LOG_DICT_ALIAS ADD CONSTRAINT WLDA_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLDA_PSWA_FK'
ALTER TABLE WELL_LOG_DICT_ALIAS ADD CONSTRAINT WLDA_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLDA_R_ART_FK'
ALTER TABLE WELL_LOG_DICT_ALIAS ADD CONSTRAINT WLDA_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLDA_R_ATY_FK'
ALTER TABLE WELL_LOG_DICT_ALIAS ADD CONSTRAINT WLDA_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLDA_R_LANG_FK'
ALTER TABLE WELL_LOG_DICT_ALIAS ADD CONSTRAINT WLDA_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLDA_SRCD_FK'
ALTER TABLE WELL_LOG_DICT_ALIAS ADD CONSTRAINT WLDA_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLDA_WLD_FK'
ALTER TABLE WELL_LOG_DICT_ALIAS ADD CONSTRAINT WLDA_WLD_FK FOREIGN KEY
(
DICTIONARY_ID
)
REFERENCES WELL_LOG_DICTIONARY
(
DICTIONARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLDB_BA_FK'
ALTER TABLE WELL_LOG_DICT_BA ADD CONSTRAINT WLDB_BA_FK FOREIGN KEY
(
USED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLDB_WLD_FK'
ALTER TABLE WELL_LOG_DICT_BA ADD CONSTRAINT WLDB_WLD_FK FOREIGN KEY
(
DICTIONARY_ID
)
REFERENCES WELL_LOG_DICTIONARY
(
DICTIONARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLDCC_WLCC_FK'
ALTER TABLE WELL_LOG_DICT_CRV_CLS ADD CONSTRAINT WLDCC_WLCC_FK FOREIGN KEY
(
CURVE_CLASS_ID
)
REFERENCES WELL_LOG_CURVE_CLASS
(
CURVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLDCC_WLDCV_FK'
ALTER TABLE WELL_LOG_DICT_CRV_CLS ADD CONSTRAINT WLDCC_WLDCV_FK FOREIGN KEY
(
DICTIONARY_ID,
DICT_CURVE_ID
)
REFERENCES WELL_LOG_DICT_CURVE
(
DICTIONARY_ID,
DICT_CURVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLDCV_WLD_FK'
ALTER TABLE WELL_LOG_DICT_CURVE ADD CONSTRAINT WLDCV_WLD_FK FOREIGN KEY
(
DICTIONARY_ID
)
REFERENCES WELL_LOG_DICTIONARY
(
DICTIONARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLDP_PQ_FK'
ALTER TABLE WELL_LOG_DICT_PARM ADD CONSTRAINT WLDP_PQ_FK FOREIGN KEY
(
QUANTITY_ID
)
REFERENCES PPDM_QUANTITY
(
QUANTITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLDP_WLD_FK'
ALTER TABLE WELL_LOG_DICT_PARM ADD CONSTRAINT WLDP_WLD_FK FOREIGN KEY
(
DICTIONARY_ID
)
REFERENCES WELL_LOG_DICTIONARY
(
DICTIONARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLDPC_WLDP_FK'
ALTER TABLE WELL_LOG_DICT_PARM_CLS ADD CONSTRAINT WLDPC_WLDP_FK FOREIGN KEY
(
DICTIONARY_ID,
PARAMETER_ID
)
REFERENCES WELL_LOG_DICT_PARM
(
DICTIONARY_ID,
PARAMETER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLDPC_WLPC_FK'
ALTER TABLE WELL_LOG_DICT_PARM_CLS ADD CONSTRAINT WLDPC_WLPC_FK FOREIGN KEY
(
PARAMETER_CLASS_ID
)
REFERENCES WELL_LOG_PARM_CLASS
(
PARAMETER_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLDPV_WLDP_FK'
ALTER TABLE WELL_LOG_DICT_PARM_VAL ADD CONSTRAINT WLDPV_WLDP_FK FOREIGN KEY
(
DICTIONARY_ID,
PARAMETER_ID
)
REFERENCES WELL_LOG_DICT_PARM
(
DICTIONARY_ID,
PARAMETER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLDPR_WLD_FK'
ALTER TABLE WELL_LOG_DICT_PROC ADD CONSTRAINT WLDPR_WLD_FK FOREIGN KEY
(
DICTIONARY_ID
)
REFERENCES WELL_LOG_DICTIONARY
(
DICTIONARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLJ_BA_FK'
ALTER TABLE WELL_LOG_JOB ADD CONSTRAINT WLJ_BA_FK FOREIGN KEY
(
LOGGING_COMPANY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLJ_BA_FK2'
ALTER TABLE WELL_LOG_JOB ADD CONSTRAINT WLJ_BA_FK2 FOREIGN KEY
(
ENGINEER
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLJ_W_FK'
ALTER TABLE WELL_LOG_JOB ADD CONSTRAINT WLJ_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLJ_WAR_FK'
ALTER TABLE WELL_LOG_JOB ADD CONSTRAINT WLJ_WAR_FK FOREIGN KEY
(
UWI,
SOURCE,
AREA_ID,
AREA_TYPE
)
REFERENCES WELL_AREA
(
UWI,
SOURCE,
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLP_R_DO1_FK'
ALTER TABLE WELL_LOG_PARM ADD CONSTRAINT WLP_R_DO1_FK FOREIGN KEY
(
PARAMETER_OUTPUT
)
REFERENCES R_DIGITAL_OUTPUT
(
DIGITAL_OUTPUT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLP_WL_FK'
ALTER TABLE WELL_LOG_PARM ADD CONSTRAINT WLP_WL_FK FOREIGN KEY
(
UWI,
WELL_LOG_ID,
WELL_LOG_SOURCE
)
REFERENCES WELL_LOG
(
UWI,
WELL_LOG_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLP_WLDP_FK'
ALTER TABLE WELL_LOG_PARM ADD CONSTRAINT WLP_WLDP_FK FOREIGN KEY
(
DICTIONARY_ID,
DICT_PARAMETER_ID
)
REFERENCES WELL_LOG_DICT_PARM
(
DICTIONARY_ID,
PARAMETER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLPA_R_LADT_FK'
ALTER TABLE WELL_LOG_PARM_ARRAY ADD CONSTRAINT WLPA_R_LADT_FK FOREIGN KEY
(
DIMENSION
)
REFERENCES R_LOG_ARRAY_DIMENSION
(
DIMENSION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLPA_WLP_FK'
ALTER TABLE WELL_LOG_PARM_ARRAY ADD CONSTRAINT WLPA_WLP_FK FOREIGN KEY
(
UWI,
WELL_LOG_ID,
WELL_LOG_SOURCE,
PARAMETER_SEQ_NO
)
REFERENCES WELL_LOG_PARM
(
UWI,
WELL_LOG_ID,
WELL_LOG_SOURCE,
PARAMETER_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLPC_PQ_FK'
ALTER TABLE WELL_LOG_PARM_CLASS ADD CONSTRAINT WLPC_PQ_FK FOREIGN KEY
(
QUANTITY_ID
)
REFERENCES PPDM_QUANTITY
(
QUANTITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLPS_R_TZ_FK2'
ALTER TABLE WELL_LOG_PASS ADD CONSTRAINT WLPS_R_TZ_FK2 FOREIGN KEY
(
START_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLPS_R_TZ_FK'
ALTER TABLE WELL_LOG_PASS ADD CONSTRAINT WLPS_R_TZ_FK FOREIGN KEY
(
END_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLPS_WLT_FK'
ALTER TABLE WELL_LOG_PASS ADD CONSTRAINT WLPS_WLT_FK FOREIGN KEY
(
UWI,
SOURCE,
JOB_ID,
TRIP_OBS_NO
)
REFERENCES WELL_LOG_TRIP
(
UWI,
SOURCE,
JOB_ID,
TRIP_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLR_BA_FK'
ALTER TABLE WELL_LOG_REMARK ADD CONSTRAINT WLR_BA_FK FOREIGN KEY
(
MADE_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLR_R_RT2_FK'
ALTER TABLE WELL_LOG_REMARK ADD CONSTRAINT WLR_R_RT2_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_REMARK_TYPE
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLR_R_RUT1_FK'
ALTER TABLE WELL_LOG_REMARK ADD CONSTRAINT WLR_R_RUT1_FK FOREIGN KEY
(
REMARK_USE_TYPE
)
REFERENCES R_REMARK_USE_TYPE
(
REMARK_USE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLR_WL_FK'
ALTER TABLE WELL_LOG_REMARK ADD CONSTRAINT WLR_WL_FK FOREIGN KEY
(
UWI,
WELL_LOG_ID,
WELL_LOG_SOURCE
)
REFERENCES WELL_LOG
(
UWI,
WELL_LOG_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLT_R_CT6_FK'
ALTER TABLE WELL_LOG_TRIP ADD CONSTRAINT WLT_R_CT6_FK FOREIGN KEY
(
LOGGING_SERVICE_TYPE
)
REFERENCES R_CURVE_TYPE
(
CURVE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLT_R_MST_FK'
ALTER TABLE WELL_LOG_TRIP ADD CONSTRAINT WLT_R_MST_FK FOREIGN KEY
(
MUD_SAMPLE_TYPE
)
REFERENCES R_MUD_SAMPLE_TYPE
(
MUD_SAMPLE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLT_R_TZ_FK'
ALTER TABLE WELL_LOG_TRIP ADD CONSTRAINT WLT_R_TZ_FK FOREIGN KEY
(
ON_BOTTOM_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLT_R_WDT_FK'
ALTER TABLE WELL_LOG_TRIP ADD CONSTRAINT WLT_R_WDT_FK FOREIGN KEY
(
REPORT_LOG_DATUM
)
REFERENCES R_WELL_DATUM_TYPE
(
WELL_DATUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLT_R_WDT_FK2'
ALTER TABLE WELL_LOG_TRIP ADD CONSTRAINT WLT_R_WDT_FK2 FOREIGN KEY
(
REPORT_PERM_DATUM
)
REFERENCES R_WELL_DATUM_TYPE
(
WELL_DATUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLT_STU_FK'
ALTER TABLE WELL_LOG_TRIP ADD CONSTRAINT WLT_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
BASE_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLT_STU_FK2'
ALTER TABLE WELL_LOG_TRIP ADD CONSTRAINT WLT_STU_FK2 FOREIGN KEY
(
STRAT_NAME_SET_ID,
TOP_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLT_WLJ_FK'
ALTER TABLE WELL_LOG_TRIP ADD CONSTRAINT WLT_WLJ_FK FOREIGN KEY
(
UWI,
SOURCE,
JOB_ID
)
REFERENCES WELL_LOG_JOB
(
UWI,
SOURCE,
JOB_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WLTR_WLT_FK'
ALTER TABLE WELL_LOG_TRIP_REMARK ADD CONSTRAINT WLTR_WLT_FK FOREIGN KEY
(
UWI,
JOB_SOURCE,
JOB_ID,
TRIP_OBS_NO
)
REFERENCES WELL_LOG_TRIP
(
UWI,
SOURCE,
JOB_ID,
TRIP_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WMD_R_MDC_FK'
ALTER TABLE WELL_MISC_DATA ADD CONSTRAINT WMD_R_MDC_FK FOREIGN KEY
(
MISC_DATA_TYPE,
MISC_DATA_CODE
)
REFERENCES R_MISC_DATA_CODE
(
MISC_DATA_TYPE,
MISC_DATA_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WMD_R_MDT_FK'
ALTER TABLE WELL_MISC_DATA ADD CONSTRAINT WMD_R_MDT_FK FOREIGN KEY
(
MISC_DATA_TYPE
)
REFERENCES R_MISC_DATA_TYPE
(
MISC_DATA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WMD_R_WRVT_FK'
ALTER TABLE WELL_MISC_DATA ADD CONSTRAINT WMD_R_WRVT_FK FOREIGN KEY
(
REFERENCE_VALUE_TYPE
)
REFERENCES R_WELL_REF_VALUE_TYPE
(
REFERENCE_VALUE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WMD_W_FK'
ALTER TABLE WELL_MISC_DATA ADD CONSTRAINT WMD_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WMP_ANLR_FK'
ALTER TABLE WELL_MUD_PROPERTY ADD CONSTRAINT WMP_ANLR_FK FOREIGN KEY
(
SAMPLE_ANALYSIS_ID,
SAMPLE_ANALYSIS_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WMP_ANLAS_FK'
ALTER TABLE WELL_MUD_PROPERTY ADD CONSTRAINT WMP_ANLAS_FK FOREIGN KEY
(
SAMPLE_ANALYSIS_ID,
SAMPLE_ANALYSIS_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WMP_R_MPC_FK'
ALTER TABLE WELL_MUD_PROPERTY ADD CONSTRAINT WMP_R_MPC_FK FOREIGN KEY
(
MUD_PROPERTY,
MUD_PROPERTY_CODE
)
REFERENCES R_MUD_PROPERTY_CODE
(
MUD_PROPERTY,
MUD_PROPERTY_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WMP_R_MPR_FK'
ALTER TABLE WELL_MUD_PROPERTY ADD CONSTRAINT WMP_R_MPR_FK FOREIGN KEY
(
MUD_PROPERTY_REF
)
REFERENCES R_MUD_PROPERTY_REF
(
MUD_PROPERTY_REF
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WMP_R_MPT_FK'
ALTER TABLE WELL_MUD_PROPERTY ADD CONSTRAINT WMP_R_MPT_FK FOREIGN KEY
(
MUD_PROPERTY
)
REFERENCES R_MUD_PROPERTY_TYPE
(
MUD_PROPERTY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WMP_WMS_FK'
ALTER TABLE WELL_MUD_PROPERTY ADD CONSTRAINT WMP_WMS_FK FOREIGN KEY
(
SAMPLE_ANALYSIS_ID,
SAMPLE_ANALYSIS_SOURCE,
STEP_SEQ_NO,
MUD_ANL_OBS_NO
)
REFERENCES WELL_MUD_SAMPLE
(
ANL_ID,
ANL_SOURCE,
STEP_SEQ_NO,
MUD_ANL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WMS_ANLR_FK'
ALTER TABLE WELL_MUD_SAMPLE ADD CONSTRAINT WMS_ANLR_FK FOREIGN KEY
(
ANL_ID,
ANL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WMS_ANLAS_FK'
ALTER TABLE WELL_MUD_SAMPLE ADD CONSTRAINT WMS_ANLAS_FK FOREIGN KEY
(
ANL_ID,
ANL_SOURCE,
STEP_SEQ_NO
)
REFERENCES ANL_ANALYSIS_STEP
(
ANALYSIS_ID,
ANL_SOURCE,
STEP_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WMS_R_DM_FK'
ALTER TABLE WELL_MUD_SAMPLE ADD CONSTRAINT WMS_R_DM_FK FOREIGN KEY
(
MUD_TYPE
)
REFERENCES R_DRILLING_MEDIA
(
DRILLING_MEDIA
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WMS_R_MCR_FK'
ALTER TABLE WELL_MUD_SAMPLE ADD CONSTRAINT WMS_R_MCR_FK FOREIGN KEY
(
MUD_COLLECT_REASON
)
REFERENCES R_MUD_COLLECT_REASON
(
MUD_COLLECT_REASON
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WMS_R_MST_FK'
ALTER TABLE WELL_MUD_SAMPLE ADD CONSTRAINT WMS_R_MST_FK FOREIGN KEY
(
MUD_SAMPLE_TYPE
)
REFERENCES R_MUD_SAMPLE_TYPE
(
MUD_SAMPLE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WMS_R_TZ_FK'
ALTER TABLE WELL_MUD_SAMPLE ADD CONSTRAINT WMS_R_TZ_FK FOREIGN KEY
(
CIRCULATION_STOP_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WMS_R_TZ_FK2'
ALTER TABLE WELL_MUD_SAMPLE ADD CONSTRAINT WMS_R_TZ_FK2 FOREIGN KEY
(
SAMPLE_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WMS_W_FK'
ALTER TABLE WELL_MUD_SAMPLE ADD CONSTRAINT WMS_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WMS_WDP_FK'
ALTER TABLE WELL_MUD_SAMPLE ADD CONSTRAINT WMS_WDP_FK FOREIGN KEY
(
UWI,
PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WN_CS_FK'
ALTER TABLE WELL_NODE ADD CONSTRAINT WN_CS_FK FOREIGN KEY
(
COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WN_CS_FK2'
ALTER TABLE WELL_NODE ADD CONSTRAINT WN_CS_FK2 FOREIGN KEY
(
LOCAL_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WN_CSCA_FK'
ALTER TABLE WELL_NODE ADD CONSTRAINT WN_CSCA_FK FOREIGN KEY
(
COORD_ACQUISITION_ID
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WN_R_CQ_FK'
ALTER TABLE WELL_NODE ADD CONSTRAINT WN_R_CQ_FK FOREIGN KEY
(
COORDINATE_QUALITY
)
REFERENCES R_COORD_QUALITY
(
COORDINATE_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WN_R_LST1_FK'
ALTER TABLE WELL_NODE ADD CONSTRAINT WN_R_LST1_FK FOREIGN KEY
(
LEGAL_SURVEY_TYPE
)
REFERENCES R_LEGAL_SURVEY_TYPE
(
LEGAL_SURVEY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WN_R_LQ1_FK'
ALTER TABLE WELL_NODE ADD CONSTRAINT WN_R_LQ1_FK FOREIGN KEY
(
LOCATION_QUALITY
)
REFERENCES R_LOCATION_QUALITY
(
LOCATION_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WN_R_LT1_FK'
ALTER TABLE WELL_NODE ADD CONSTRAINT WN_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WN_R_NP_FK'
ALTER TABLE WELL_NODE ADD CONSTRAINT WN_R_NP_FK FOREIGN KEY
(
NODE_POSITION
)
REFERENCES R_NODE_POSITION
(
NODE_POSITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WN_SFPL_FK'
ALTER TABLE WELL_NODE ADD CONSTRAINT WN_SFPL_FK FOREIGN KEY
(
PLATFORM_SF_SUBTYPE,
PLATFORM_ID
)
REFERENCES SF_PLATFORM
(
SF_SUBTYPE,
PLATFORM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WN_W_FK'
ALTER TABLE WELL_NODE ADD CONSTRAINT WN_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNA_A_FK'
ALTER TABLE WELL_NODE_AREA ADD CONSTRAINT WNA_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNA_WN_FK'
ALTER TABLE WELL_NODE_AREA ADD CONSTRAINT WNA_WN_FK FOREIGN KEY
(
NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNMB_R_ED_FK'
ALTER TABLE WELL_NODE_M_B ADD CONSTRAINT WNMB_R_ED_FK FOREIGN KEY
(
EW_DIRECTION
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNMB_R_ESL_FK'
ALTER TABLE WELL_NODE_M_B ADD CONSTRAINT WNMB_R_ESL_FK FOREIGN KEY
(
EW_START_LINE
)
REFERENCES R_EW_START_LINE
(
EW_START_LINE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNMB_R_LT1_FK'
ALTER TABLE WELL_NODE_M_B ADD CONSTRAINT WNMB_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNMB_R_ND_FK'
ALTER TABLE WELL_NODE_M_B ADD CONSTRAINT WNMB_R_ND_FK FOREIGN KEY
(
NS_DIRECTION
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNMB_R_NSL_FK'
ALTER TABLE WELL_NODE_M_B ADD CONSTRAINT WNMB_R_NSL_FK FOREIGN KEY
(
NS_START_LINE
)
REFERENCES R_NS_START_LINE
(
NS_START_LINE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNMB_R_O_FK'
ALTER TABLE WELL_NODE_M_B ADD CONSTRAINT WNMB_R_O_FK FOREIGN KEY
(
ORIENTATION
)
REFERENCES R_ORIENTATION
(
ORIENTATION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNMB_SPCA_FK'
ALTER TABLE WELL_NODE_M_B ADD CONSTRAINT WNMB_SPCA_FK FOREIGN KEY
(
PARCEL_CARTER_ID
)
REFERENCES SP_PARCEL_CARTER
(
PARCEL_CARTER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNMB_SPCO_FK'
ALTER TABLE WELL_NODE_M_B ADD CONSTRAINT WNMB_SPCO_FK FOREIGN KEY
(
PARCEL_CONGRESS_ID
)
REFERENCES SP_PARCEL_CONGRESS
(
PARCEL_CONGRESS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNMB_SPDLS_FK'
ALTER TABLE WELL_NODE_M_B ADD CONSTRAINT WNMB_SPDLS_FK FOREIGN KEY
(
PARCEL_DLS_ID
)
REFERENCES SP_PARCEL_DLS
(
PARCEL_DLS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNMB_SPDR_FK'
ALTER TABLE WELL_NODE_M_B ADD CONSTRAINT WNMB_SPDR_FK FOREIGN KEY
(
PARCEL_DLS_ID,
DLS_ROAD_ALLOWANCE_ID
)
REFERENCES SP_PARCEL_DLS_ROAD
(
PARCEL_DLS_ID,
DLS_ROAD_ALLOWANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNMB_SPFPS_FK'
ALTER TABLE WELL_NODE_M_B ADD CONSTRAINT WNMB_SPFPS_FK FOREIGN KEY
(
PARCEL_FPS_ID
)
REFERENCES SP_PARCEL_FPS
(
PARCEL_FPS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNMB_SPLY_FK'
ALTER TABLE WELL_NODE_M_B ADD CONSTRAINT WNMB_SPLY_FK FOREIGN KEY
(
PARCEL_LIBYA_ID
)
REFERENCES SP_PARCEL_LIBYA
(
PARCEL_LYBIA_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNMB_SPNL_FK'
ALTER TABLE WELL_NODE_M_B ADD CONSTRAINT WNMB_SPNL_FK FOREIGN KEY
(
PARCEL_NE_LOC_ID
)
REFERENCES SP_PARCEL_NE_LOC
(
PARCEL_NE_LOC_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNMB_SPNS_FK'
ALTER TABLE WELL_NODE_M_B ADD CONSTRAINT WNMB_SPNS_FK FOREIGN KEY
(
PARCEL_NORTH_SEA_ID
)
REFERENCES SP_PARCEL_NORTH_SEA
(
PARCEL_NORTH_SEA_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNMB_SPNTS_FK'
ALTER TABLE WELL_NODE_M_B ADD CONSTRAINT WNMB_SPNTS_FK FOREIGN KEY
(
PARCEL_NTS_ID
)
REFERENCES SP_PARCEL_NTS
(
PARCEL_NTS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNMB_SPOFF_FK'
ALTER TABLE WELL_NODE_M_B ADD CONSTRAINT WNMB_SPOFF_FK FOREIGN KEY
(
PARCEL_OFFSHORE_ID
)
REFERENCES SP_PARCEL_OFFSHORE
(
PARCEL_OFFSHORE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNMB_SPOH_FK'
ALTER TABLE WELL_NODE_M_B ADD CONSTRAINT WNMB_SPOH_FK FOREIGN KEY
(
PARCEL_OHIO_ID
)
REFERENCES SP_PARCEL_OHIO
(
PARCEL_OHIO_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNMB_SPPBL_FK'
ALTER TABLE WELL_NODE_M_B ADD CONSTRAINT WNMB_SPPBL_FK FOREIGN KEY
(
PARCEL_PBL_ID
)
REFERENCES SP_PARCEL_PBL
(
PARCEL_PBL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNMB_SPTX_FK'
ALTER TABLE WELL_NODE_M_B ADD CONSTRAINT WNMB_SPTX_FK FOREIGN KEY
(
PARCEL_TEXAS
)
REFERENCES SP_PARCEL_TEXAS
(
PARCEL_TEXAS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNMB_WN_FK'
ALTER TABLE WELL_NODE_M_B ADD CONSTRAINT WNMB_WN_FK FOREIGN KEY
(
NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNSU_BA_FK'
ALTER TABLE WELL_NODE_STRAT_UNIT ADD CONSTRAINT WNSU_BA_FK FOREIGN KEY
(
INTERPRETER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNSU_R_LT1_FK'
ALTER TABLE WELL_NODE_STRAT_UNIT ADD CONSTRAINT WNSU_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNSU_R_NP_FK'
ALTER TABLE WELL_NODE_STRAT_UNIT ADD CONSTRAINT WNSU_R_NP_FK FOREIGN KEY
(
NODE_POSITION
)
REFERENCES R_NODE_POSITION
(
NODE_POSITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNSU_R_PL_FK'
ALTER TABLE WELL_NODE_STRAT_UNIT ADD CONSTRAINT WNSU_R_PL_FK FOREIGN KEY
(
PICK_LOCATION
)
REFERENCES R_PICK_LOCATION
(
PICK_LOCATION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNSU_R_PQ1_FK'
ALTER TABLE WELL_NODE_STRAT_UNIT ADD CONSTRAINT WNSU_R_PQ1_FK FOREIGN KEY
(
PICK_QUALITY
)
REFERENCES R_PICK_QUALITY
(
PICK_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNSU_R_WNPM_FK'
ALTER TABLE WELL_NODE_STRAT_UNIT ADD CONSTRAINT WNSU_R_WNPM_FK FOREIGN KEY
(
PICK_METHOD
)
REFERENCES R_WELL_NODE_PICK_METHOD
(
PICK_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNSU_STU_FK'
ALTER TABLE WELL_NODE_STRAT_UNIT ADD CONSTRAINT WNSU_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNSU_W_FK'
ALTER TABLE WELL_NODE_STRAT_UNIT ADD CONSTRAINT WNSU_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNSU_WN_FK'
ALTER TABLE WELL_NODE_STRAT_UNIT ADD CONSTRAINT WNSU_WN_FK FOREIGN KEY
(
NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNV_CS_FK'
ALTER TABLE WELL_NODE_VERSION ADD CONSTRAINT WNV_CS_FK FOREIGN KEY
(
GEOG_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNV_CS_FK2'
ALTER TABLE WELL_NODE_VERSION ADD CONSTRAINT WNV_CS_FK2 FOREIGN KEY
(
MAP_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNV_CS_FK3'
ALTER TABLE WELL_NODE_VERSION ADD CONSTRAINT WNV_CS_FK3 FOREIGN KEY
(
LOCAL_COORD_SYSTEM_ID
)
REFERENCES CS_COORDINATE_SYSTEM
(
COORD_SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNV_CSCA_FK'
ALTER TABLE WELL_NODE_VERSION ADD CONSTRAINT WNV_CSCA_FK FOREIGN KEY
(
COORD_ACQUISITION_ID
)
REFERENCES CS_COORD_ACQUISITION
(
ACQUISITION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNV_R_CQ_FK'
ALTER TABLE WELL_NODE_VERSION ADD CONSTRAINT WNV_R_CQ_FK FOREIGN KEY
(
COORDINATE_QUALITY
)
REFERENCES R_COORD_QUALITY
(
COORDINATE_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNV_R_ED_FK'
ALTER TABLE WELL_NODE_VERSION ADD CONSTRAINT WNV_R_ED_FK FOREIGN KEY
(
EW_DIRECTION
)
REFERENCES R_EW_DIRECTION
(
EW_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNV_R_LST1_FK'
ALTER TABLE WELL_NODE_VERSION ADD CONSTRAINT WNV_R_LST1_FK FOREIGN KEY
(
LEGAL_SURVEY_TYPE
)
REFERENCES R_LEGAL_SURVEY_TYPE
(
LEGAL_SURVEY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNV_R_LQ_FK'
ALTER TABLE WELL_NODE_VERSION ADD CONSTRAINT WNV_R_LQ_FK FOREIGN KEY
(
LOCATION_QUALIFIER
)
REFERENCES R_LOCATION_QUALIFIER
(
LOCATION_QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNV_R_LQ1_FK'
ALTER TABLE WELL_NODE_VERSION ADD CONSTRAINT WNV_R_LQ1_FK FOREIGN KEY
(
LOCATION_QUALITY
)
REFERENCES R_LOCATION_QUALITY
(
LOCATION_QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNV_R_LT1_FK'
ALTER TABLE WELL_NODE_VERSION ADD CONSTRAINT WNV_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNV_R_NP_FK'
ALTER TABLE WELL_NODE_VERSION ADD CONSTRAINT WNV_R_NP_FK FOREIGN KEY
(
NODE_POSITION
)
REFERENCES R_NODE_POSITION
(
NODE_POSITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNV_R_N_FK'
ALTER TABLE WELL_NODE_VERSION ADD CONSTRAINT WNV_R_N_FK FOREIGN KEY
(
NORTH_TYPE
)
REFERENCES R_NORTH
(
NORTH_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNV_R_ND_FK'
ALTER TABLE WELL_NODE_VERSION ADD CONSTRAINT WNV_R_ND_FK FOREIGN KEY
(
NS_DIRECTION
)
REFERENCES R_NS_DIRECTION
(
NS_DIRECTION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNV_R_SPVT_FK'
ALTER TABLE WELL_NODE_VERSION ADD CONSTRAINT WNV_R_SPVT_FK FOREIGN KEY
(
VERSION_TYPE
)
REFERENCES R_SP_POINT_VERSION_TYPE
(
VERSION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNV_SFMO_FK'
ALTER TABLE WELL_NODE_VERSION ADD CONSTRAINT WNV_SFMO_FK FOREIGN KEY
(
MONUMENT_SF_SUBTYPE,
MONUMENT_ID
)
REFERENCES SF_MONUMENT
(
SF_SUBTYPE,
MONUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNV_SFPL_FK'
ALTER TABLE WELL_NODE_VERSION ADD CONSTRAINT WNV_SFPL_FK FOREIGN KEY
(
PLATFORM_SF_SUBTYPE,
PLATFORM_ID
)
REFERENCES SF_PLATFORM
(
SF_SUBTYPE,
PLATFORM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNV_W_FK'
ALTER TABLE WELL_NODE_VERSION ADD CONSTRAINT WNV_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNV_WN_FK'
ALTER TABLE WELL_NODE_VERSION ADD CONSTRAINT WNV_WN_FK FOREIGN KEY
(
NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WNV_WNA_FK'
ALTER TABLE WELL_NODE_VERSION ADD CONSTRAINT WNV_WNA_FK FOREIGN KEY
(
NODE_ID,
SOURCE,
AREA_ID,
AREA_TYPE
)
REFERENCES WELL_NODE_AREA
(
NODE_ID,
SOURCE,
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WP_R_FT2_FK'
ALTER TABLE WELL_PAYZONE ADD CONSTRAINT WP_R_FT2_FK FOREIGN KEY
(
FLUID_TYPE
)
REFERENCES R_FLUID_TYPE
(
FLUID_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WP_R_PT2_FK'
ALTER TABLE WELL_PAYZONE ADD CONSTRAINT WP_R_PT2_FK FOREIGN KEY
(
PAYZONE_TYPE
)
REFERENCES R_PAYZONE_TYPE
(
PAYZONE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WP_STU_FK'
ALTER TABLE WELL_PAYZONE ADD CONSTRAINT WP_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
TOP_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WP_STU_FK2'
ALTER TABLE WELL_PAYZONE ADD CONSTRAINT WP_STU_FK2 FOREIGN KEY
(
STRAT_NAME_SET_ID,
BASE_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WP_W_FK'
ALTER TABLE WELL_PAYZONE ADD CONSTRAINT WP_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WP_Z_FK'
ALTER TABLE WELL_PAYZONE ADD CONSTRAINT WP_Z_FK FOREIGN KEY
(
ZONE_ID,
ZONE_SOURCE
)
REFERENCES ZONE
(
ZONE_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPRF_BA_FK'
ALTER TABLE WELL_PERFORATION ADD CONSTRAINT WPRF_BA_FK FOREIGN KEY
(
PERFORATION_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPRF_R_CS_FK'
ALTER TABLE WELL_PERFORATION ADD CONSTRAINT WPRF_R_CS_FK FOREIGN KEY
(
COMPLETION_STATUS_TYPE,
COMPLETION_STATUS
)
REFERENCES R_COMPLETION_STATUS
(
STATUS_TYPE,
COMPLETION_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPRF_R_PFM_FK'
ALTER TABLE WELL_PERFORATION ADD CONSTRAINT WPRF_R_PFM_FK FOREIGN KEY
(
PERFORATION_METHOD
)
REFERENCES R_PERFORATION_METHOD
(
PERFORATION_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPRF_R_PFT_FK'
ALTER TABLE WELL_PERFORATION ADD CONSTRAINT WPRF_R_PFT_FK FOREIGN KEY
(
PERFORATION_TYPE
)
REFERENCES R_PERFORATION_TYPE
(
PERF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPRF_STU_FK'
ALTER TABLE WELL_PERFORATION ADD CONSTRAINT WPRF_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
TOP_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPRF_STU_FK2'
ALTER TABLE WELL_PERFORATION ADD CONSTRAINT WPRF_STU_FK2 FOREIGN KEY
(
STRAT_NAME_SET_ID,
BASE_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPRF_W_FK'
ALTER TABLE WELL_PERFORATION ADD CONSTRAINT WPRF_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPRF_WCO_FK'
ALTER TABLE WELL_PERFORATION ADD CONSTRAINT WPRF_WCO_FK FOREIGN KEY
(
UWI,
COMPLETION_SOURCE,
COMPLETION_OBS_NO
)
REFERENCES WELL_COMPLETION
(
UWI,
SOURCE,
COMPLETION_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPRFR_BA_FK'
ALTER TABLE WELL_PERF_REMARK ADD CONSTRAINT WPRFR_BA_FK FOREIGN KEY
(
REMARK_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPRFR_WPRF_FK'
ALTER TABLE WELL_PERF_REMARK ADD CONSTRAINT WPRFR_WPRF_FK FOREIGN KEY
(
UWI,
PERFORATION_SOURCE,
PERFORATION_OBS_NO
)
REFERENCES WELL_PERFORATION
(
UWI,
SOURCE,
PERFORATION_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPT_BA_FK'
ALTER TABLE WELL_PERMIT_TYPE ADD CONSTRAINT WPT_BA_FK FOREIGN KEY
(
GRANTED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPT_RATE_FK'
ALTER TABLE WELL_PERMIT_TYPE ADD CONSTRAINT WPT_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPL_BA_FK'
ALTER TABLE WELL_PLUGBACK ADD CONSTRAINT WPL_BA_FK FOREIGN KEY
(
PLUGBACK_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPL_R_PT6_FK'
ALTER TABLE WELL_PLUGBACK ADD CONSTRAINT WPL_R_PT6_FK FOREIGN KEY
(
PLUG_TYPE
)
REFERENCES R_PLUG_TYPE
(
PLUG_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPL_STU_FK2'
ALTER TABLE WELL_PLUGBACK ADD CONSTRAINT WPL_STU_FK2 FOREIGN KEY
(
STRAT_NAME_SET_ID,
BASE_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPL_STU_FK'
ALTER TABLE WELL_PLUGBACK ADD CONSTRAINT WPL_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
TOP_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPL_W_FK'
ALTER TABLE WELL_PLUGBACK ADD CONSTRAINT WPL_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPL_WCO_FK'
ALTER TABLE WELL_PLUGBACK ADD CONSTRAINT WPL_WCO_FK FOREIGN KEY
(
UWI,
COMPLETION_SOURCE,
COMPLETION_OBS_NO
)
REFERENCES WELL_COMPLETION
(
UWI,
SOURCE,
COMPLETION_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPI_R_PORT_FK'
ALTER TABLE WELL_POROUS_INTERVAL ADD CONSTRAINT WPI_R_PORT_FK FOREIGN KEY
(
POROSITY_TYPE
)
REFERENCES R_POROSITY_TYPE
(
POROSITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPI_R_Q_FK'
ALTER TABLE WELL_POROUS_INTERVAL ADD CONSTRAINT WPI_R_Q_FK FOREIGN KEY
(
POROSITY_QUALITY
)
REFERENCES R_QUALITY
(
QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPI_STU_FK'
ALTER TABLE WELL_POROUS_INTERVAL ADD CONSTRAINT WPI_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
POROUS_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPI_STU_FK2'
ALTER TABLE WELL_POROUS_INTERVAL ADD CONSTRAINT WPI_STU_FK2 FOREIGN KEY
(
STRAT_AGE_NAME_SET_ID,
STRAT_AGE
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPI_W_FK'
ALTER TABLE WELL_POROUS_INTERVAL ADD CONSTRAINT WPI_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPSR_FLD_FK'
ALTER TABLE WELL_PRESSURE ADD CONSTRAINT WPSR_FLD_FK FOREIGN KEY
(
ASSIGNED_FIELD
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPSR_PL_FK'
ALTER TABLE WELL_PRESSURE ADD CONSTRAINT WPSR_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPSR_PS_FK'
ALTER TABLE WELL_PRESSURE ADD CONSTRAINT WPSR_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPSR_PSF_FK'
ALTER TABLE WELL_PRESSURE ADD CONSTRAINT WPSR_PSF_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID,
PR_STR_FORM_OBS_NO
)
REFERENCES PROD_STRING_FORMATION
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPSR_R_WTT_FK'
ALTER TABLE WELL_PRESSURE ADD CONSTRAINT WPSR_R_WTT_FK FOREIGN KEY
(
WELL_TEST_TYPE
)
REFERENCES R_WELL_TEST_TYPE
(
WELL_TEST_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPSR_STU_FK2'
ALTER TABLE WELL_PRESSURE ADD CONSTRAINT WPSR_STU_FK2 FOREIGN KEY
(
STRAT_NAME_SET_ID,
BASE_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPSR_STU_FK'
ALTER TABLE WELL_PRESSURE ADD CONSTRAINT WPSR_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
TOP_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPSR_W_FK'
ALTER TABLE WELL_PRESSURE ADD CONSTRAINT WPSR_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPSR_WAC_FK'
ALTER TABLE WELL_PRESSURE ADD CONSTRAINT WPSR_WAC_FK FOREIGN KEY
(
UWI,
EVENT_SOURCE,
EVENT_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPSR_WT_FK'
ALTER TABLE WELL_PRESSURE ADD CONSTRAINT WPSR_WT_FK FOREIGN KEY
(
UWI,
WELL_TEST_SOURCE,
WELL_TEST_TYPE,
WELL_TEST_RUN_NUM,
WELL_TEST_NUM
)
REFERENCES WELL_TEST
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPA_R_AAT_FK'
ALTER TABLE WELL_PRESSURE_AOF ADD CONSTRAINT WPA_R_AAT_FK FOREIGN KEY
(
ANALYSIS_TYPE
)
REFERENCES R_AOF_ANALYSIS_TYPE
(
AOF_ANALYSIS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPA_R_ACM_FK'
ALTER TABLE WELL_PRESSURE_AOF ADD CONSTRAINT WPA_R_ACM_FK FOREIGN KEY
(
AOF_CALCULATE_METHOD
)
REFERENCES R_AOF_CALC_METHOD
(
AOF_CALCULATE_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPA_R_SPT1_FK'
ALTER TABLE WELL_PRESSURE_AOF ADD CONSTRAINT WPA_R_SPT1_FK FOREIGN KEY
(
SHUTIN_PRESSURE_TYPE
)
REFERENCES R_SHUTIN_PRESS_TYPE
(
SHUTIN_PRESSURE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPA_WPSR_FK'
ALTER TABLE WELL_PRESSURE_AOF ADD CONSTRAINT WPA_WPSR_FK FOREIGN KEY
(
UWI,
SOURCE,
PRESSURE_OBS_NO
)
REFERENCES WELL_PRESSURE
(
UWI,
SOURCE,
PRESSURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPA4_WPA_FK'
ALTER TABLE WELL_PRESSURE_AOF_4PT ADD CONSTRAINT WPA4_WPA_FK FOREIGN KEY
(
UWI,
SOURCE,
PRESSURE_OBS_NO,
AOF_OBS_NO
)
REFERENCES WELL_PRESSURE_AOF
(
UWI,
SOURCE,
PRESSURE_OBS_NO,
AOF_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPB_R_BM_FK'
ALTER TABLE WELL_PRESSURE_BH ADD CONSTRAINT WPB_R_BM_FK FOREIGN KEY
(
BHP_METHOD
)
REFERENCES R_BHP_METHOD
(
BHP_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPB_R_BPTT_FK'
ALTER TABLE WELL_PRESSURE_BH ADD CONSTRAINT WPB_R_BPTT_FK FOREIGN KEY
(
BH_TEST_CODE
)
REFERENCES R_BH_PRESS_TEST_TYPE
(
BH_PRESSURE_TEST_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WPB_WPSR_FK'
ALTER TABLE WELL_PRESSURE_BH ADD CONSTRAINT WPB_WPSR_FK FOREIGN KEY
(
UWI,
SOURCE,
PRESSURE_OBS_NO
)
REFERENCES WELL_PRESSURE
(
UWI,
SOURCE,
PRESSURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WR_R_RT2_FK'
ALTER TABLE WELL_REMARK ADD CONSTRAINT WR_R_RT2_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_REMARK_TYPE
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WR_STU_FK'
ALTER TABLE WELL_REMARK ADD CONSTRAINT WR_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
REMARK_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WR_W_FK'
ALTER TABLE WELL_REMARK ADD CONSTRAINT WR_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WSET_R_WSETT_FK'
ALTER TABLE WELL_SET ADD CONSTRAINT WSET_R_WSETT_FK FOREIGN KEY
(
WELL_SET_TYPE
)
REFERENCES R_WELL_SET_TYPE
(
WELL_SET_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WSW_R_WSETR_FK'
ALTER TABLE WELL_SET_WELL ADD CONSTRAINT WSW_R_WSETR_FK FOREIGN KEY
(
WELL_SET_ROLE
)
REFERENCES R_WELL_SET_ROLE
(
WELL_SET_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WSW_W_FK'
ALTER TABLE WELL_SET_WELL ADD CONSTRAINT WSW_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WSW_WSET_FK'
ALTER TABLE WELL_SET_WELL ADD CONSTRAINT WSW_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WS_R_ST1_FK'
ALTER TABLE WELL_SHOW ADD CONSTRAINT WS_R_ST1_FK FOREIGN KEY
(
SAMPLE_TYPE
)
REFERENCES R_SAMPLE_TYPE
(
SAMPLE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WS_R_ST4_FK'
ALTER TABLE WELL_SHOW ADD CONSTRAINT WS_R_ST4_FK FOREIGN KEY
(
SHOW_TYPE
)
REFERENCES R_SHOW_TYPE
(
SHOW_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WS_SRCD_FK'
ALTER TABLE WELL_SHOW ADD CONSTRAINT WS_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WS_STU_FK2'
ALTER TABLE WELL_SHOW ADD CONSTRAINT WS_STU_FK2 FOREIGN KEY
(
STRAT_NAME_SET_ID,
BASE_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WS_STU_FK'
ALTER TABLE WELL_SHOW ADD CONSTRAINT WS_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
TOP_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WS_W_FK'
ALTER TABLE WELL_SHOW ADD CONSTRAINT WS_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WSR_BA_FK'
ALTER TABLE WELL_SHOW_REMARK ADD CONSTRAINT WSR_BA_FK FOREIGN KEY
(
REMARK_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WSR_WS_FK'
ALTER TABLE WELL_SHOW_REMARK ADD CONSTRAINT WSR_WS_FK FOREIGN KEY
(
UWI,
SHOW_SOURCE,
SHOW_TYPE,
SHOW_OBS_NO
)
REFERENCES WELL_SHOW
(
UWI,
SOURCE,
SHOW_TYPE,
SHOW_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WSA_BA_FK'
ALTER TABLE WELL_SIEVE_ANALYSIS ADD CONSTRAINT WSA_BA_FK FOREIGN KEY
(
LABORATORY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WSA_W_FK'
ALTER TABLE WELL_SIEVE_ANALYSIS ADD CONSTRAINT WSA_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WSS_CEQ_FK'
ALTER TABLE WELL_SIEVE_SCREEN ADD CONSTRAINT WSS_CEQ_FK FOREIGN KEY
(
CAT_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WSS_EQ_FK'
ALTER TABLE WELL_SIEVE_SCREEN ADD CONSTRAINT WSS_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WSS_WSA_FK'
ALTER TABLE WELL_SIEVE_SCREEN ADD CONSTRAINT WSS_WSA_FK FOREIGN KEY
(
UWI,
ANL_SOURCE,
ANALYSIS_OBS_NO
)
REFERENCES WELL_SIEVE_ANALYSIS
(
UWI,
SOURCE,
ANALYSIS_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WST_R_TZ_FK'
ALTER TABLE WELL_STATUS ADD CONSTRAINT WST_R_TZ_FK FOREIGN KEY
(
TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WST_R_WS_FK'
ALTER TABLE WELL_STATUS ADD CONSTRAINT WST_R_WS_FK FOREIGN KEY
(
STATUS_TYPE,
STATUS
)
REFERENCES R_WELL_STATUS
(
STATUS_TYPE,
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WST_R_WSQ_FK'
ALTER TABLE WELL_STATUS ADD CONSTRAINT WST_R_WSQ_FK FOREIGN KEY
(
STATUS_TYPE,
STATUS_QUALIFIER
)
REFERENCES R_WELL_STATUS_QUAL
(
STATUS_TYPE,
STATUS_QUALIFIER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WST_R_WSQV_FK'
ALTER TABLE WELL_STATUS ADD CONSTRAINT WST_R_WSQV_FK FOREIGN KEY
(
STATUS_TYPE,
STATUS,
STATUS_QUALIFIER,
STATUS_QUALIFIER_VALUE
)
REFERENCES R_WELL_STATUS_QUAL_VALUE
(
STATUS_TYPE,
STATUS,
STATUS_QUALIFIER,
STATUS_QUALIFIER_VALUE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WST_W_FK'
ALTER TABLE WELL_STATUS ADD CONSTRAINT WST_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WSF_R_E_FK'
ALTER TABLE WELL_SUPPORT_FACILITY ADD CONSTRAINT WSF_R_E_FK FOREIGN KEY
(
ENVIRONMENT_TYPE
)
REFERENCES R_ENVIRONMENT
(
ENVIRONMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WSF_R_WD_FK'
ALTER TABLE WELL_SUPPORT_FACILITY ADD CONSTRAINT WSF_R_WD_FK FOREIGN KEY
(
ELEV_REF_DATUM
)
REFERENCES R_WATER_DATUM
(
WATER_DATUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WSF_R_WDT_FK2'
ALTER TABLE WELL_SUPPORT_FACILITY ADD CONSTRAINT WSF_R_WDT_FK2 FOREIGN KEY
(
SUBSEA_ELEV_REF_TYPE
)
REFERENCES R_WELL_DATUM_TYPE
(
WELL_DATUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WSF_R_WDT_FK'
ALTER TABLE WELL_SUPPORT_FACILITY ADD CONSTRAINT WSF_R_WDT_FK FOREIGN KEY
(
DEPTH_DATUM
)
REFERENCES R_WELL_DATUM_TYPE
(
WELL_DATUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WSF_R_WSUT_FK'
ALTER TABLE WELL_SUPPORT_FACILITY ADD CONSTRAINT WSF_R_WSUT_FK FOREIGN KEY
(
SF_USE_TYPE
)
REFERENCES R_WELL_SF_USE_TYPE
(
SF_USE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WSF_SF_FK'
ALTER TABLE WELL_SUPPORT_FACILITY ADD CONSTRAINT WSF_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WSF_W_FK'
ALTER TABLE WELL_SUPPORT_FACILITY ADD CONSTRAINT WSF_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WT_BA_FK'
ALTER TABLE WELL_TEST ADD CONSTRAINT WT_BA_FK FOREIGN KEY
(
TEST_COMPANY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WT_PS_FK'
ALTER TABLE WELL_TEST ADD CONSTRAINT WT_PS_FK FOREIGN KEY
(
UWI,
STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WT_PSF_FK'
ALTER TABLE WELL_TEST ADD CONSTRAINT WT_PSF_FK FOREIGN KEY
(
UWI,
STRING_SOURCE,
PROD_STRING_ID,
PROD_STR_FORM_OBS_NO
)
REFERENCES PROD_STRING_FORMATION
(
UWI,
PROD_STRING_SOURCE,
STRING_ID,
PR_STR_FORM_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WT_R_CT2_FK'
ALTER TABLE WELL_TEST ADD CONSTRAINT WT_R_CT2_FK FOREIGN KEY
(
WELLBORE_COMPLETION_TYPE
)
REFERENCES R_COMPLETION_TYPE
(
COMPLETION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WT_R_FT2_FK'
ALTER TABLE WELL_TEST ADD CONSTRAINT WT_R_FT2_FK FOREIGN KEY
(
PRIMARY_FLUID_RECOVERED
)
REFERENCES R_FLUID_TYPE
(
FLUID_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WT_R_HC_FK'
ALTER TABLE WELL_TEST ADD CONSTRAINT WT_R_HC_FK FOREIGN KEY
(
HOLE_CONDITION
)
REFERENCES R_HOLE_CONDITION
(
HOLE_CONDITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WT_R_PM1_FK'
ALTER TABLE WELL_TEST ADD CONSTRAINT WT_R_PM1_FK FOREIGN KEY
(
PRODUCTION_METHOD
)
REFERENCES R_PRODUCTION_METHOD
(
PRODUCTION_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WT_R_Q_FK'
ALTER TABLE WELL_TEST ADD CONSTRAINT WT_R_Q_FK FOREIGN KEY
(
PERMEABILITY_QUALITY
)
REFERENCES R_QUALITY
(
QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WT_R_Q_FK2'
ALTER TABLE WELL_TEST ADD CONSTRAINT WT_R_Q_FK2 FOREIGN KEY
(
DAMAGE_QUALITY
)
REFERENCES R_QUALITY
(
QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WT_R_ST4_FK'
ALTER TABLE WELL_TEST ADD CONSTRAINT WT_R_ST4_FK FOREIGN KEY
(
SHOW_TYPE
)
REFERENCES R_SHOW_TYPE
(
SHOW_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WT_R_TR_FK'
ALTER TABLE WELL_TEST ADD CONSTRAINT WT_R_TR_FK FOREIGN KEY
(
TEST_RESULT_CODE
)
REFERENCES R_TEST_RESULT
(
TEST_RESULT
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WT_R_TS_FK'
ALTER TABLE WELL_TEST ADD CONSTRAINT WT_R_TS_FK FOREIGN KEY
(
TEST_TYPE,
TEST_SUBTYPE
)
REFERENCES R_TEST_SUBTYPE
(
TEST_TYPE,
TEST_SUBTYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WT_R_TZ_FK'
ALTER TABLE WELL_TEST ADD CONSTRAINT WT_R_TZ_FK FOREIGN KEY
(
START_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WT_R_TZ_FK2'
ALTER TABLE WELL_TEST ADD CONSTRAINT WT_R_TZ_FK2 FOREIGN KEY
(
TOOL_OPEN_TIMEZONE
)
REFERENCES R_TIMEZONE
(
TIMEZONE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WT_R_WTT_FK'
ALTER TABLE WELL_TEST ADD CONSTRAINT WT_R_WTT_FK FOREIGN KEY
(
TEST_TYPE
)
REFERENCES R_WELL_TEST_TYPE
(
WELL_TEST_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WT_STU_FK'
ALTER TABLE WELL_TEST ADD CONSTRAINT WT_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
TOP_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WT_STU_FK2'
ALTER TABLE WELL_TEST ADD CONSTRAINT WT_STU_FK2 FOREIGN KEY
(
STRAT_NAME_SET_ID,
REPORTED_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WT_STU_FK4'
ALTER TABLE WELL_TEST ADD CONSTRAINT WT_STU_FK4 FOREIGN KEY
(
STRAT_NAME_SET_ID,
BASE_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WT_STU_FK3'
ALTER TABLE WELL_TEST ADD CONSTRAINT WT_STU_FK3 FOREIGN KEY
(
STRAT_AGE_NAME_SET_ID,
STRAT_AGE
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WT_W_FK'
ALTER TABLE WELL_TEST ADD CONSTRAINT WT_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WT_WAC_FK'
ALTER TABLE WELL_TEST ADD CONSTRAINT WT_WAC_FK FOREIGN KEY
(
UWI,
EVENT_SOURCE,
EVENT_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WT_WCO_FK'
ALTER TABLE WELL_TEST ADD CONSTRAINT WT_WCO_FK FOREIGN KEY
(
UWI,
COMPLETION_SOURCE,
COMPLETION_OBS_NO
)
REFERENCES WELL_COMPLETION
(
UWI,
SOURCE,
COMPLETION_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTA_R_FT2_FK'
ALTER TABLE WELL_TEST_ANALYSIS ADD CONSTRAINT WTA_R_FT2_FK FOREIGN KEY
(
FLUID_TYPE
)
REFERENCES R_FLUID_TYPE
(
FLUID_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTA_R_ST_FK'
ALTER TABLE WELL_TEST_ANALYSIS ADD CONSTRAINT WTA_R_ST_FK FOREIGN KEY
(
SALINITY_TYPE
)
REFERENCES R_SALINITY_TYPE
(
SALINITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTA_WTP_FK'
ALTER TABLE WELL_TEST_ANALYSIS ADD CONSTRAINT WTA_WTP_FK FOREIGN KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
PERIOD_TYPE,
PERIOD_OBS_NO
)
REFERENCES WELL_TEST_PERIOD
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
PERIOD_TYPE,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTCA_BA_FK'
ALTER TABLE WELL_TEST_COMPUT_ANAL ADD CONSTRAINT WTCA_BA_FK FOREIGN KEY
(
ANALYSIS_COMPANY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTCA_WT_FK'
ALTER TABLE WELL_TEST_COMPUT_ANAL ADD CONSTRAINT WTCA_WT_FK FOREIGN KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
)
REFERENCES WELL_TEST
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTCA_WTR_FK'
ALTER TABLE WELL_TEST_COMPUT_ANAL ADD CONSTRAINT WTCA_WTR_FK FOREIGN KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
RECORDER_ID
)
REFERENCES WELL_TEST_RECORDER
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
RECORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTC_R_CONTY_FK'
ALTER TABLE WELL_TEST_CONTAMINANT ADD CONSTRAINT WTC_R_CONTY_FK FOREIGN KEY
(
CONTAMINANT_TYPE
)
REFERENCES R_CONTAMINANT_TYPE
(
CONTAMINANT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTC_WTRCV_FK'
ALTER TABLE WELL_TEST_CONTAMINANT ADD CONSTRAINT WTC_WTRCV_FK FOREIGN KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
RECOVERY_OBS_NO
)
REFERENCES WELL_TEST_RECOVERY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
RECOVERY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTCU_R_CT7_FK'
ALTER TABLE WELL_TEST_CUSHION ADD CONSTRAINT WTCU_R_CT7_FK FOREIGN KEY
(
CUSHION_TYPE
)
REFERENCES R_CUSHION_TYPE
(
CUSHION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTCU_WT_FK'
ALTER TABLE WELL_TEST_CUSHION ADD CONSTRAINT WTCU_WT_FK FOREIGN KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
)
REFERENCES WELL_TEST
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTE_EQ_FK'
ALTER TABLE WELL_TEST_EQUIPMENT ADD CONSTRAINT WTE_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTE_R_TE_FK'
ALTER TABLE WELL_TEST_EQUIPMENT ADD CONSTRAINT WTE_R_TE_FK FOREIGN KEY
(
EQUIPMENT_TYPE
)
REFERENCES R_TEST_EQUIPMENT
(
EQUIP_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTE_WT_FK'
ALTER TABLE WELL_TEST_EQUIPMENT ADD CONSTRAINT WTE_WT_FK FOREIGN KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
)
REFERENCES WELL_TEST
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTF_R_FT2_FK'
ALTER TABLE WELL_TEST_FLOW ADD CONSTRAINT WTF_R_FT2_FK FOREIGN KEY
(
FLUID_TYPE
)
REFERENCES R_FLUID_TYPE
(
FLUID_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTF_R_MT_FK'
ALTER TABLE WELL_TEST_FLOW ADD CONSTRAINT WTF_R_MT_FK FOREIGN KEY
(
MEASUREMENT_TECHNIQUE
)
REFERENCES R_MEASURE_TECHNIQUE
(
MEASUREMENT_TECHNIQUE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTF_WTP_FK'
ALTER TABLE WELL_TEST_FLOW ADD CONSTRAINT WTF_WTP_FK FOREIGN KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
PERIOD_TYPE,
PERIOD_OBS_NO
)
REFERENCES WELL_TEST_PERIOD
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
PERIOD_TYPE,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTFM_R_FT2_FK'
ALTER TABLE WELL_TEST_FLOW_MEAS ADD CONSTRAINT WTFM_R_FT2_FK FOREIGN KEY
(
FLUID_TYPE
)
REFERENCES R_FLUID_TYPE
(
FLUID_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTFM_WT_FK'
ALTER TABLE WELL_TEST_FLOW_MEAS ADD CONSTRAINT WTFM_WT_FK FOREIGN KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
)
REFERENCES WELL_TEST
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTFM_WTP_FK'
ALTER TABLE WELL_TEST_FLOW_MEAS ADD CONSTRAINT WTFM_WTP_FK FOREIGN KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
PERIOD_TYPE,
PERIOD_OBS_NO
)
REFERENCES WELL_TEST_PERIOD
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
PERIOD_TYPE,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTM_R_DM_FK'
ALTER TABLE WELL_TEST_MUD ADD CONSTRAINT WTM_R_DM_FK FOREIGN KEY
(
MUD_TYPE
)
REFERENCES R_DRILLING_MEDIA
(
DRILLING_MEDIA
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTM_R_MST_FK'
ALTER TABLE WELL_TEST_MUD ADD CONSTRAINT WTM_R_MST_FK FOREIGN KEY
(
MUD_SAMPLE_TYPE
)
REFERENCES R_MUD_SAMPLE_TYPE
(
MUD_SAMPLE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTM_WT_FK'
ALTER TABLE WELL_TEST_MUD ADD CONSTRAINT WTM_WT_FK FOREIGN KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
)
REFERENCES WELL_TEST
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTP_R_TPT_FK'
ALTER TABLE WELL_TEST_PERIOD ADD CONSTRAINT WTP_R_TPT_FK FOREIGN KEY
(
PERIOD_TYPE
)
REFERENCES R_TEST_PERIOD_TYPE
(
TEST_PERIOD_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTP_WT_FK'
ALTER TABLE WELL_TEST_PERIOD ADD CONSTRAINT WTP_WT_FK FOREIGN KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
)
REFERENCES WELL_TEST
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTPSR_R_Q_FK'
ALTER TABLE WELL_TEST_PRESSURE ADD CONSTRAINT WTPSR_R_Q_FK FOREIGN KEY
(
QUALITY_CODE
)
REFERENCES R_QUALITY
(
QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTPSR_WTP_FK'
ALTER TABLE WELL_TEST_PRESSURE ADD CONSTRAINT WTPSR_WTP_FK FOREIGN KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
PERIOD_TYPE,
PERIOD_OBS_NO
)
REFERENCES WELL_TEST_PERIOD
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
PERIOD_TYPE,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTPSR_WTR_FK'
ALTER TABLE WELL_TEST_PRESSURE ADD CONSTRAINT WTPSR_WTR_FK FOREIGN KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
RECORDER_ID
)
REFERENCES WELL_TEST_RECORDER
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
RECORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTPM_WT_FK'
ALTER TABLE WELL_TEST_PRESS_MEAS ADD CONSTRAINT WTPM_WT_FK FOREIGN KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
)
REFERENCES WELL_TEST
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTPM_WTP_FK'
ALTER TABLE WELL_TEST_PRESS_MEAS ADD CONSTRAINT WTPM_WTP_FK FOREIGN KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
PERIOD_TYPE,
PERIOD_OBS_NO
)
REFERENCES WELL_TEST_PERIOD
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
PERIOD_TYPE,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTPM_WTR_FK'
ALTER TABLE WELL_TEST_PRESS_MEAS ADD CONSTRAINT WTPM_WTR_FK FOREIGN KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
RECORDER_ID
)
REFERENCES WELL_TEST_RECORDER
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
RECORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTR_R_Q_FK'
ALTER TABLE WELL_TEST_RECORDER ADD CONSTRAINT WTR_R_Q_FK FOREIGN KEY
(
PERFORMANCE_QUALITY
)
REFERENCES R_QUALITY
(
QUALITY
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTR_R_RP_FK'
ALTER TABLE WELL_TEST_RECORDER ADD CONSTRAINT WTR_R_RP_FK FOREIGN KEY
(
RECORDER_POSITION
)
REFERENCES R_RECORDER_POSITION
(
RECORDER_POSITION
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTR_R_RT1_FK'
ALTER TABLE WELL_TEST_RECORDER ADD CONSTRAINT WTR_R_RT1_FK FOREIGN KEY
(
RECORDER_TYPE
)
REFERENCES R_RECORDER_TYPE
(
RECORDER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTR_WT_FK'
ALTER TABLE WELL_TEST_RECORDER ADD CONSTRAINT WTR_WT_FK FOREIGN KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
)
REFERENCES WELL_TEST
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTRCV_R_FT2_FK'
ALTER TABLE WELL_TEST_RECOVERY ADD CONSTRAINT WTRCV_R_FT2_FK FOREIGN KEY
(
RECOVERY_TYPE
)
REFERENCES R_FLUID_TYPE
(
FLUID_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTRCV_R_ST4_FK'
ALTER TABLE WELL_TEST_RECOVERY ADD CONSTRAINT WTRCV_R_ST4_FK FOREIGN KEY
(
RECOVERY_SHOW_TYPE
)
REFERENCES R_SHOW_TYPE
(
SHOW_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTRCV_R_TRM_FK'
ALTER TABLE WELL_TEST_RECOVERY ADD CONSTRAINT WTRCV_R_TRM_FK FOREIGN KEY
(
RECOVERY_METHOD
)
REFERENCES R_TEST_RECOV_METHOD
(
RECOVERY_METHOD
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTRCV_WT_FK'
ALTER TABLE WELL_TEST_RECOVERY ADD CONSTRAINT WTRCV_WT_FK FOREIGN KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
)
REFERENCES WELL_TEST
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTRCV_WTP_FK'
ALTER TABLE WELL_TEST_RECOVERY ADD CONSTRAINT WTRCV_WTP_FK FOREIGN KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
PERIOD_TYPE,
PERIOD_OBS_NO
)
REFERENCES WELL_TEST_PERIOD
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM,
PERIOD_TYPE,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTRM_R_RT2_FK'
ALTER TABLE WELL_TEST_REMARK ADD CONSTRAINT WTRM_R_RT2_FK FOREIGN KEY
(
REMARK_TYPE
)
REFERENCES R_REMARK_TYPE
(
REMARK_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTRM_WT_FK'
ALTER TABLE WELL_TEST_REMARK ADD CONSTRAINT WTRM_WT_FK FOREIGN KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
)
REFERENCES WELL_TEST
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTS_R_TST_FK'
ALTER TABLE WELL_TEST_SHUTOFF ADD CONSTRAINT WTS_R_TST_FK FOREIGN KEY
(
SHUTOFF_TYPE
)
REFERENCES R_TEST_SHUTOFF_TYPE
(
TEST_SHUTOFF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTS_WT_FK'
ALTER TABLE WELL_TEST_SHUTOFF ADD CONSTRAINT WTS_WT_FK FOREIGN KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
)
REFERENCES WELL_TEST
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTSU_STU_FK2'
ALTER TABLE WELL_TEST_STRAT_UNIT ADD CONSTRAINT WTSU_STU_FK2 FOREIGN KEY
(
STRAT_AGE_NAME_SET_ID,
STRAT_AGE
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTSU_STU_FK'
ALTER TABLE WELL_TEST_STRAT_UNIT ADD CONSTRAINT WTSU_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTSU_WT_FK'
ALTER TABLE WELL_TEST_STRAT_UNIT ADD CONSTRAINT WTSU_WT_FK FOREIGN KEY
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
)
REFERENCES WELL_TEST
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTRT_BA_FK'
ALTER TABLE WELL_TREATMENT ADD CONSTRAINT WTRT_BA_FK FOREIGN KEY
(
TREATMENT_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTRT_R_ADT_FK'
ALTER TABLE WELL_TREATMENT ADD CONSTRAINT WTRT_R_ADT_FK FOREIGN KEY
(
ADDITIVE_TYPE
)
REFERENCES R_ADDITIVE_TYPE
(
ADDITIVE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTRT_R_CS_FK'
ALTER TABLE WELL_TREATMENT ADD CONSTRAINT WTRT_R_CS_FK FOREIGN KEY
(
TREATMENT_STATUS_TYPE,
TREATMENT_STATUS
)
REFERENCES R_COMPLETION_STATUS
(
STATUS_TYPE,
COMPLETION_STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTRT_R_PT11_FK'
ALTER TABLE WELL_TREATMENT ADD CONSTRAINT WTRT_R_PT11_FK FOREIGN KEY
(
PROPPANT_AGENT_TYPE
)
REFERENCES R_PROPPANT_TYPE
(
PROPPANT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTRT_R_TF_FK'
ALTER TABLE WELL_TREATMENT ADD CONSTRAINT WTRT_R_TF_FK FOREIGN KEY
(
TREATMENT_FLUID_TYPE
)
REFERENCES R_TREATMENT_FLUID
(
TREATMENT_FLUID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTRT_R_TT1_FK'
ALTER TABLE WELL_TREATMENT ADD CONSTRAINT WTRT_R_TT1_FK FOREIGN KEY
(
TREATMENT_TYPE
)
REFERENCES R_TREATMENT_TYPE
(
TREATMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTRT_STU_FK2'
ALTER TABLE WELL_TREATMENT ADD CONSTRAINT WTRT_STU_FK2 FOREIGN KEY
(
STRAT_NAME_SET_ID,
TOP_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTRT_STU_FK'
ALTER TABLE WELL_TREATMENT ADD CONSTRAINT WTRT_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
BASE_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTRT_W_FK'
ALTER TABLE WELL_TREATMENT ADD CONSTRAINT WTRT_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTRT_WCO_FK'
ALTER TABLE WELL_TREATMENT ADD CONSTRAINT WTRT_WCO_FK FOREIGN KEY
(
UWI,
COMPLETION_SOURCE,
COMPLETION_OBS_NO
)
REFERENCES WELL_COMPLETION
(
UWI,
SOURCE,
COMPLETION_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTRT_WT_FK'
ALTER TABLE WELL_TREATMENT ADD CONSTRAINT WTRT_WT_FK FOREIGN KEY
(
UWI,
WELL_TEST_SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
)
REFERENCES WELL_TEST
(
UWI,
SOURCE,
TEST_TYPE,
RUN_NUM,
TEST_NUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTUB_BA_FK'
ALTER TABLE WELL_TUBULAR ADD CONSTRAINT WTUB_BA_FK FOREIGN KEY
(
MANUFACTURER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTUB_CEQ_FK'
ALTER TABLE WELL_TUBULAR ADD CONSTRAINT WTUB_CEQ_FK FOREIGN KEY
(
CAT_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTUB_EQ_FK'
ALTER TABLE WELL_TUBULAR ADD CONSTRAINT WTUB_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTUB_R_COT_FK'
ALTER TABLE WELL_TUBULAR ADD CONSTRAINT WTUB_R_COT_FK FOREIGN KEY
(
COLLAR_TYPE
)
REFERENCES R_COLLAR_TYPE
(
COLLAR_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTUB_R_CT1_FK'
ALTER TABLE WELL_TUBULAR ADD CONSTRAINT WTUB_R_CT1_FK FOREIGN KEY
(
COUPLING_TYPE
)
REFERENCES R_COUPLING_TYPE
(
COUPLING_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTUB_R_LT_FK'
ALTER TABLE WELL_TUBULAR ADD CONSTRAINT WTUB_R_LT_FK FOREIGN KEY
(
LINER_TYPE
)
REFERENCES R_LINER_TYPE
(
LINER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTUB_R_TG_FK'
ALTER TABLE WELL_TUBULAR ADD CONSTRAINT WTUB_R_TG_FK FOREIGN KEY
(
TUBING_GRADE
)
REFERENCES R_TUBING_GRADE
(
TUBING_GRADE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTUB_R_TT2_FK'
ALTER TABLE WELL_TUBULAR ADD CONSTRAINT WTUB_R_TT2_FK FOREIGN KEY
(
TUBING_TYPE
)
REFERENCES R_TUBING_TYPE
(
TUBING_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTUB_STU_FK2'
ALTER TABLE WELL_TUBULAR ADD CONSTRAINT WTUB_STU_FK2 FOREIGN KEY
(
STRAT_NAME_SET_ID,
TOP_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTUB_STU_FK'
ALTER TABLE WELL_TUBULAR ADD CONSTRAINT WTUB_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
BASE_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTUB_W_FK'
ALTER TABLE WELL_TUBULAR ADD CONSTRAINT WTUB_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WTUB_WDP_FK'
ALTER TABLE WELL_TUBULAR ADD CONSTRAINT WTUB_WDP_FK FOREIGN KEY
(
UWI,
PERIOD_OBS_NO
)
REFERENCES WELL_DRILL_PERIOD
(
UWI,
PERIOD_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_BA_FK'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_BA_FK FOREIGN KEY
(
OPERATOR
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_BA_FK2'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_BA_FK2 FOREIGN KEY
(
REGULATORY_AGENCY
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_FLD_FK'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_FLD_FK FOREIGN KEY
(
ASSIGNED_FIELD
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_R_CT3_FK'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_R_CT3_FK FOREIGN KEY
(
CONFIDENTIAL_TYPE
)
REFERENCES R_CONFIDENTIAL_TYPE
(
CONFIDENTIAL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_R_E_FK'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_R_E_FK FOREIGN KEY
(
ENVIRONMENT_TYPE
)
REFERENCES R_ENVIRONMENT
(
ENVIRONMENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_R_LST1_FK'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_R_LST1_FK FOREIGN KEY
(
LEGAL_SURVEY_TYPE
)
REFERENCES R_LEGAL_SURVEY_TYPE
(
LEGAL_SURVEY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_R_LT1_FK'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_R_LT1_FK FOREIGN KEY
(
LOCATION_TYPE
)
REFERENCES R_LOCATION_TYPE
(
LOCATION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_R_PS1_FK'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_R_PS1_FK FOREIGN KEY
(
PLOT_SYMBOL
)
REFERENCES R_PLOT_SYMBOL
(
PLOT_SYMBOL
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_R_TCC_FK'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_R_TCC_FK FOREIGN KEY
(
TAX_CREDIT_CODE
)
REFERENCES R_TAX_CREDIT_CODE
(
TAX_CREDIT_CODE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_R_WD_FK'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_R_WD_FK FOREIGN KEY
(
ELEV_REF_DATUM
)
REFERENCES R_WATER_DATUM
(
WATER_DATUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_R_WD_FK2'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_R_WD_FK2 FOREIGN KEY
(
WATER_DEPTH_DATUM
)
REFERENCES R_WATER_DATUM
(
WATER_DATUM
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_R_WC_FK'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_R_WC_FK FOREIGN KEY
(
CURRENT_CLASS
)
REFERENCES R_WELL_CLASS
(
WELL_CLASS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_R_WC_FK2'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_R_WC_FK2 FOREIGN KEY
(
INITIAL_CLASS
)
REFERENCES R_WELL_CLASS
(
WELL_CLASS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_R_WDT_FK'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_R_WDT_FK FOREIGN KEY
(
DEPTH_DATUM
)
REFERENCES R_WELL_DATUM_TYPE
(
WELL_DATUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_R_WDT_FK2'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_R_WDT_FK2 FOREIGN KEY
(
GROUND_ELEV_TYPE
)
REFERENCES R_WELL_DATUM_TYPE
(
WELL_DATUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_R_WDT_FK3'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_R_WDT_FK3 FOREIGN KEY
(
SUBSEA_ELEV_REF_TYPE
)
REFERENCES R_WELL_DATUM_TYPE
(
WELL_DATUM_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_R_WLT_FK'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_R_WLT_FK FOREIGN KEY
(
WELL_LEVEL_TYPE
)
REFERENCES R_WELL_LEVEL_TYPE
(
WELL_LEVEL_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_R_WPT_FK'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_R_WPT_FK FOREIGN KEY
(
PROFILE_TYPE
)
REFERENCES R_WELL_PROFILE_TYPE
(
WELL_PROFILE_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_R_WS_FK'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_R_WS_FK FOREIGN KEY
(
STATUS_TYPE,
CURRENT_STATUS
)
REFERENCES R_WELL_STATUS
(
STATUS_TYPE,
STATUS
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_SFPL_FK'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_SFPL_FK FOREIGN KEY
(
PLATFORM_SF_SUBTYPE,
PLATFORM_ID
)
REFERENCES SF_PLATFORM
(
SF_SUBTYPE,
PLATFORM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_SRCD_FK'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_STU_FK3'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_STU_FK3 FOREIGN KEY
(
OLDEST_STRAT_NAME_SET_AGE,
OLDEST_STRAT_AGE
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_STU_FK2'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_STU_FK2 FOREIGN KEY
(
OLDEST_STRAT_NAME_SET_ID,
OLDEST_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_STU_FK'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_STU_FK FOREIGN KEY
(
CONFID_STRAT_NAME_SET_ID,
CONFID_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_STU_FK4'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_STU_FK4 FOREIGN KEY
(
TD_STRAT_NAME_SET_AGE,
TD_STRAT_AGE
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_STU_FK7'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_STU_FK7 FOREIGN KEY
(
TOP_STRAT_NAME_SET_ID,
TOP_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_STU_FK6'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_STU_FK6 FOREIGN KEY
(
BASE_STRAT_NAME_SET_ID,
BASE_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_STU_FK5'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_STU_FK5 FOREIGN KEY
(
TD_STRAT_NAME_SET_ID,
TD_STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_W_FK'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_WN_FK'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_WN_FK FOREIGN KEY
(
SURFACE_NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WV_WN_FK2'
ALTER TABLE WELL_VERSION ADD CONSTRAINT WV_WN_FK2 FOREIGN KEY
(
BASE_NODE_ID
)
REFERENCES WELL_NODE
(
NODE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WVAR_A_FK'
ALTER TABLE WELL_VERSION_AREA ADD CONSTRAINT WVAR_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WVAR_WV_FK'
ALTER TABLE WELL_VERSION_AREA ADD CONSTRAINT WVAR_WV_FK FOREIGN KEY
(
UWI,
WELL_VERSION_SOURCE
)
REFERENCES WELL_VERSION
(
UWI,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WX_BA_FK'
ALTER TABLE WELL_XREF ADD CONSTRAINT WX_BA_FK FOREIGN KEY
(
XREF_OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WX_R_WXT_FK'
ALTER TABLE WELL_XREF ADD CONSTRAINT WX_R_WXT_FK FOREIGN KEY
(
XREF_TYPE
)
REFERENCES R_WELL_XREF_TYPE
(
XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WX_W_FK'
ALTER TABLE WELL_XREF ADD CONSTRAINT WX_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WX_W_FK2'
ALTER TABLE WELL_XREF ADD CONSTRAINT WX_W_FK2 FOREIGN KEY
(
UWI2
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WZI_W_FK'
ALTER TABLE WELL_ZONE_INTERVAL ADD CONSTRAINT WZI_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WZI_Z_FK'
ALTER TABLE WELL_ZONE_INTERVAL ADD CONSTRAINT WZI_Z_FK FOREIGN KEY
(
ZONE_ID,
ZONE_SOURCE
)
REFERENCES ZONE
(
ZONE_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WZIV_WZI_FK'
ALTER TABLE WELL_ZONE_INTRVL_VALUE ADD CONSTRAINT WZIV_WZI_FK FOREIGN KEY
(
UWI,
INTERVAL_SOURCE,
INTERVAL_ID,
ZONE_ID,
ZONE_SOURCE
)
REFERENCES WELL_ZONE_INTERVAL
(
UWI,
SOURCE,
INTERVAL_ID,
ZONE_ID,
ZONE_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WO_R_WOT_FK'
ALTER TABLE WORK_ORDER ADD CONSTRAINT WO_R_WOT_FK FOREIGN KEY
(
WORK_ORDER_TYPE
)
REFERENCES R_WO_TYPE
(
WORK_ORDER_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOAL_BA_FK'
ALTER TABLE WORK_ORDER_ALIAS ADD CONSTRAINT WOAL_BA_FK FOREIGN KEY
(
OWNER_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOAL_PSWA_FK'
ALTER TABLE WORK_ORDER_ALIAS ADD CONSTRAINT WOAL_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOAL_R_ART_FK'
ALTER TABLE WORK_ORDER_ALIAS ADD CONSTRAINT WOAL_R_ART_FK FOREIGN KEY
(
ALIAS_REASON_TYPE
)
REFERENCES R_ALIAS_REASON_TYPE
(
REASON_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOAL_R_ATY_FK'
ALTER TABLE WORK_ORDER_ALIAS ADD CONSTRAINT WOAL_R_ATY_FK FOREIGN KEY
(
ALIAS_TYPE
)
REFERENCES R_ALIAS_TYPE
(
ALIAS_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOAL_R_LANG_FK'
ALTER TABLE WORK_ORDER_ALIAS ADD CONSTRAINT WOAL_R_LANG_FK FOREIGN KEY
(
LANGUAGE_ID
)
REFERENCES R_LANGUAGE
(
LANGUAGE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOAL_SRCD_FK'
ALTER TABLE WORK_ORDER_ALIAS ADD CONSTRAINT WOAL_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOAL_WO_FK'
ALTER TABLE WORK_ORDER_ALIAS ADD CONSTRAINT WOAL_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOBA_BA_FK'
ALTER TABLE WORK_ORDER_BA ADD CONSTRAINT WOBA_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOBA_R_WOBR_FK'
ALTER TABLE WORK_ORDER_BA ADD CONSTRAINT WOBA_R_WOBR_FK FOREIGN KEY
(
BA_ROLE
)
REFERENCES R_WO_BA_ROLE
(
BA_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOBA_WO_FK'
ALTER TABLE WORK_ORDER_BA ADD CONSTRAINT WOBA_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_ANLR_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_ANLR_FK FOREIGN KEY
(
ANALYSIS_ID,
SAMPLE_ANAL_SOURCE
)
REFERENCES ANL_ANALYSIS_REPORT
(
ANALYSIS_ID,
ANL_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_APP_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_APP_FK FOREIGN KEY
(
APPLICATION_ID
)
REFERENCES APPLICATION
(
APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_A_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_A_FK FOREIGN KEY
(
AREA_ID,
AREA_TYPE
)
REFERENCES AREA
(
AREA_ID,
AREA_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_BAAU_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_BAAU_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
)
REFERENCES BA_AUTHORITY
(
BUSINESS_ASSOCIATE_ID,
AUTHORITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_BAE_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_BAE_FK FOREIGN KEY
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
)
REFERENCES BA_EMPLOYEE
(
EMPLOYER_BA_ID,
EMPLOYEE_BA_ID,
EMPLOYEE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_BAO_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_BAO_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ORGANIZATION_ID,
BA_ORGANIZATION_SEQ_NO
)
REFERENCES BA_ORGANIZATION
(
BUSINESS_ASSOCIATE_ID,
ORGANIZATION_ID,
ORGANIZATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_BA_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_CA_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_CA_FK FOREIGN KEY
(
CATALOGUE_ADDITIVE_ID
)
REFERENCES CAT_ADDITIVE
(
CATALOGUE_ADDITIVE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_CEQ_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_CEQ_FK FOREIGN KEY
(
CATALOGUE_EQUIP_ID
)
REFERENCES CAT_EQUIPMENT
(
CATALOGUE_EQUIP_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_CLSL_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_CLSL_FK FOREIGN KEY
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
)
REFERENCES CLASS_LEVEL
(
CLASSIFICATION_SYSTEM_ID,
CLASS_LEVEL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_CON_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_CON_FK FOREIGN KEY
(
CONSENT_ID
)
REFERENCES CONSENT
(
CONSENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_CO_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_CO_FK FOREIGN KEY
(
CONSULT_ID
)
REFERENCES CONSULT
(
CONSULT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_COT_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_COT_FK FOREIGN KEY
(
CONTEST_ID
)
REFERENCES CONTEST
(
CONTEST_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_C_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_C_FK FOREIGN KEY
(
CONTRACT_ID
)
REFERENCES CONTRACT
(
CONTRACT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_EZ_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_EZ_FK FOREIGN KEY
(
ECOZONE_ID
)
REFERENCES ECOZONE
(
ECOZONE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_ENT_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_ENT_FK FOREIGN KEY
(
ENTITLEMENT_ID
)
REFERENCES ENTITLEMENT
(
ENTITLEMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_EQ_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_EQ_FK FOREIGN KEY
(
EQUIPMENT_ID
)
REFERENCES EQUIPMENT
(
EQUIPMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_EQM_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_EQM_FK FOREIGN KEY
(
EQUIPMENT_ID,
EQUIP_MAINT_ID
)
REFERENCES EQUIPMENT_MAINTAIN
(
EQUIPMENT_ID,
EQUIP_MAINT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_FAC_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_FAC_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE
)
REFERENCES FACILITY
(
FACILITY_ID,
FACILITY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_FACM_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_FACM_FK FOREIGN KEY
(
FACILITY_ID,
FACILITY_TYPE,
FACILITY_MAINTAIN_ID
)
REFERENCES FACILITY_MAINTAIN
(
FACILITY_ID,
FACILITY_TYPE,
MAINTAIN_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_FLD_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_FLD_FK FOREIGN KEY
(
FIELD_ID
)
REFERENCES FIELD
(
FIELD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_FIN_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_FIN_FK FOREIGN KEY
(
FINANCE_ID
)
REFERENCES FINANCE
(
FINANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_FOS_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_FOS_FK FOREIGN KEY
(
FOSSIL_ID
)
REFERENCES FOSSIL
(
FOSSIL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_HI_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_HI_FK FOREIGN KEY
(
INCIDENT_ID
)
REFERENCES HSE_INCIDENT
(
INCIDENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_INS_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_INS_FK FOREIGN KEY
(
INSTRUMENT_ID
)
REFERENCES INSTRUMENT
(
INSTRUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_INT_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_INT_FK FOREIGN KEY
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
)
REFERENCES INTEREST_SET
(
INTEREST_SET_ID,
INTEREST_SET_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_LR_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_LR_FK FOREIGN KEY
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
)
REFERENCES LAND_RIGHT
(
LAND_RIGHT_SUBTYPE,
LAND_RIGHT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_LS_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_LS_FK FOREIGN KEY
(
JURISDICTION,
LAND_SALE_NUMBER
)
REFERENCES LAND_SALE
(
JURISDICTION,
LAND_SALE_NUMBER
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_LIL_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_LIL_FK FOREIGN KEY
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
)
REFERENCES LITH_LOG
(
LITHOLOGY_LOG_ID,
LITH_LOG_SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_NOTI_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_NOTI_FK FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATION
(
NOTIFICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_OB_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_OB_FK FOREIGN KEY
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
)
REFERENCES OBLIGATION
(
OBLIGATION_ID,
OBLIGATION_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_PASU_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_PASU_FK FOREIGN KEY
(
PALEO_SUMMARY_ID
)
REFERENCES PALEO_SUMMARY
(
PALEO_SUMMARY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_PDE_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_PDE_FK FOREIGN KEY
(
PDEN_SUBTYPE,
PDEN_ID,
PDEN_SOURCE
)
REFERENCES PDEN
(
PDEN_SUBTYPE,
PDEN_ID,
SOURCE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_PL_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_PL_FK FOREIGN KEY
(
POOL_ID
)
REFERENCES POOL
(
POOL_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_PSWA_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_PSWA_FK FOREIGN KEY
(
SW_APPLICATION_ID
)
REFERENCES PPDM_SW_APPLICATION
(
SW_APPLICATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_PSYS_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_PSYS_FK FOREIGN KEY
(
PPDM_SYSTEM_ID
)
REFERENCES PPDM_SYSTEM
(
SYSTEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_PT_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_PT_FK FOREIGN KEY
(
PPDM_SYSTEM_ID,
PPDM_TABLE_NAME
)
REFERENCES PPDM_TABLE
(
SYSTEM_ID,
TABLE_NAME
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_PS_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_PS_FK FOREIGN KEY
(
UWI,
PROD_STRING_SOURCE,
PROD_STRING_ID
)
REFERENCES PROD_STRING
(
UWI,
SOURCE,
STRING_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_PROJ_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_PROJ_FK FOREIGN KEY
(
PROJECT_ID
)
REFERENCES PROJECT
(
PROJECT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_RATE_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_RATE_FK FOREIGN KEY
(
RATE_SCHEDULE_ID
)
REFERENCES RATE_SCHEDULE
(
RATE_SCHEDULE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_RSCL_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_RSCL_FK FOREIGN KEY
(
RESERVE_CLASS_ID
)
REFERENCES RESERVE_CLASS
(
RESERVE_CLASS_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_RSE_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_RSE_FK FOREIGN KEY
(
RESENT_ID
)
REFERENCES RESERVE_ENTITY
(
RESENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_RMCI_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_RMCI_FK FOREIGN KEY
(
CIRC_ID
)
REFERENCES RM_CIRCULATION
(
CIRC_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_RMDSS_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_RMDSS_FK FOREIGN KEY
(
STORE_ID,
STORE_STRUCTURE_OBS_NO
)
REFERENCES RM_DATA_STORE_STRUCTURE
(
STORE_ID,
STRUCTURE_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_RMII_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_RMII_FK FOREIGN KEY
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
)
REFERENCES RM_INFORMATION_ITEM
(
INFO_ITEM_SUBTYPE,
INFORMATION_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_RMPI_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_RMPI_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID
)
REFERENCES RM_PHYSICAL_ITEM
(
PHYSICAL_ITEM_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_RMPIO_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_RMPIO_FK FOREIGN KEY
(
PHYSICAL_ITEM_ID,
ORIGIN_SEQ_NO
)
REFERENCES RM_PHYS_ITEM_ORIGIN
(
PHYSICAL_ITEM_ID,
ORIGIN_SEQ_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_RMTW_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_RMTW_FK FOREIGN KEY
(
THESAURUS_ID,
THESAURUS_WORD_ID
)
REFERENCES RM_THESAURUS_WORD
(
THESAURUS_ID,
THESAURUS_WORD_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_R_WOCT_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_R_WOCT_FK FOREIGN KEY
(
COMPONENT_TYPE
)
REFERENCES R_WO_COMPONENT_TYPE
(
COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_SSI_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_SSI_FK FOREIGN KEY
(
INSPECTION_ID
)
REFERENCES SEIS_INSPECTION
(
INSPECTION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_SS_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_SS_FK FOREIGN KEY
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
)
REFERENCES SEIS_SET
(
SEIS_SET_SUBTYPE,
SEIS_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_SSTR_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_SSTR_FK FOREIGN KEY
(
SEIS_TRANSACTION_ID,
TRANSACTION_TYPE
)
REFERENCES SEIS_TRANSACTION
(
SEIS_TRANSACTION_ID,
TRANSACTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_SF_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_SF_FK FOREIGN KEY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
)
REFERENCES SF_SUPPORT_FACILITY
(
SF_SUBTYPE,
SUPPORT_FACILITY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_SPD_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_SPD_FK FOREIGN KEY
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
)
REFERENCES SPATIAL_DESCRIPTION
(
SPATIAL_DESCRIPTION_ID,
SPATIAL_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_STFST_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_STFST_FK FOREIGN KEY
(
FIELD_STATION_ID
)
REFERENCES STRAT_FIELD_STATION
(
FIELD_STATION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_STU_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_STU_FK FOREIGN KEY
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
)
REFERENCES STRAT_UNIT
(
STRAT_NAME_SET_ID,
STRAT_UNIT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_SUB_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_SUB_FK FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_W_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_W_FK FOREIGN KEY
(
UWI
)
REFERENCES WELL
(
UWI
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_WAC_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_WAC_FK FOREIGN KEY
(
UWI,
WELL_ACTIVITY_SOURCE,
ACTIVITY_OBS_NO
)
REFERENCES WELL_ACTIVITY
(
UWI,
SOURCE,
ACTIVITY_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_WSET_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_WSET_FK FOREIGN KEY
(
WELL_SET_ID
)
REFERENCES WELL_SET
(
WELL_SET_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOCOM_WO_FK'
ALTER TABLE WORK_ORDER_COMPONENT ADD CONSTRAINT WOCOM_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOC_BA_FK'
ALTER TABLE WORK_ORDER_CONDITION ADD CONSTRAINT WOC_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOC_R_WOBR_FK'
ALTER TABLE WORK_ORDER_CONDITION ADD CONSTRAINT WOC_R_WOBR_FK FOREIGN KEY
(
BA_ROLE
)
REFERENCES R_WO_BA_ROLE
(
BA_ROLE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOC_R_WOC_FK'
ALTER TABLE WORK_ORDER_CONDITION ADD CONSTRAINT WOC_R_WOC_FK FOREIGN KEY
(
WORK_ORDER_TYPE,
CONDITION_TYPE
)
REFERENCES R_WO_CONDITION
(
WORK_ORDER_TYPE,
CONDITION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOC_WO_FK'
ALTER TABLE WORK_ORDER_CONDITION ADD CONSTRAINT WOC_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOD_BAA_FK'
ALTER TABLE WORK_ORDER_DELIVERY ADD CONSTRAINT WOD_BAA_FK FOREIGN KEY
(
DELIVERY_BA_ID,
DELIVERY_BA_ADDRESS_SOURCE,
DELIVERY_BA_ADDRESS_OBS_NO
)
REFERENCES BA_ADDRESS
(
BUSINESS_ASSOCIATE_ID,
SOURCE,
ADDRESS_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOD_R_WODT_FK'
ALTER TABLE WORK_ORDER_DELIVERY ADD CONSTRAINT WOD_R_WODT_FK FOREIGN KEY
(
DELIVERY_TYPE
)
REFERENCES R_WO_DELIVERY_TYPE
(
DELIVERY_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOD_WO_FK'
ALTER TABLE WORK_ORDER_DELIVERY ADD CONSTRAINT WOD_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOD_WOBA_FK'
ALTER TABLE WORK_ORDER_DELIVERY ADD CONSTRAINT WOD_WOBA_FK FOREIGN KEY
(
WORK_ORDER_ID,
BUSINESS_ASSOCIATE_ID,
BA_OBS_NO
)
REFERENCES WORK_ORDER_BA
(
WORK_ORDER_ID,
BUSINESS_ASSOCIATE_ID,
BA_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WODC_WOCOM_FK'
ALTER TABLE WORK_ORDER_DELIVERY_COMP ADD CONSTRAINT WODC_WOCOM_FK FOREIGN KEY
(
WORK_ORDER_ID,
COMPONENT_ID
)
REFERENCES WORK_ORDER_COMPONENT
(
WORK_ORDER_ID,
COMPONENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WODC_WOD_FK'
ALTER TABLE WORK_ORDER_DELIVERY_COMP ADD CONSTRAINT WODC_WOD_FK FOREIGN KEY
(
WORK_ORDER_ID,
DELIVERY_ID
)
REFERENCES WORK_ORDER_DELIVERY
(
WORK_ORDER_ID,
DELIVERY_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOI_BAA_FK'
ALTER TABLE WORK_ORDER_INSTRUCTION ADD CONSTRAINT WOI_BAA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID,
BA_ADDRESS_SOURCE,
BA_ADDRESS_OBS_NO
)
REFERENCES BA_ADDRESS
(
BUSINESS_ASSOCIATE_ID,
SOURCE,
ADDRESS_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOI_R_WOIT_FK'
ALTER TABLE WORK_ORDER_INSTRUCTION ADD CONSTRAINT WOI_R_WOIT_FK FOREIGN KEY
(
INSTRUCTION_TYPE
)
REFERENCES R_WO_INSTRUCTION
(
INSTRUCTION_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOI_WO_FK'
ALTER TABLE WORK_ORDER_INSTRUCTION ADD CONSTRAINT WOI_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOI_WOBA_FK'
ALTER TABLE WORK_ORDER_INSTRUCTION ADD CONSTRAINT WOI_WOBA_FK FOREIGN KEY
(
WORK_ORDER_ID,
BUSINESS_ASSOCIATE_ID,
BA_OBS_NO
)
REFERENCES WORK_ORDER_BA
(
WORK_ORDER_ID,
BUSINESS_ASSOCIATE_ID,
BA_OBS_NO
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOIC_WOCOM_FK'
ALTER TABLE WORK_ORDER_INST_COMP ADD CONSTRAINT WOIC_WOCOM_FK FOREIGN KEY
(
WORK_ORDER_ID,
COMPONENT_ID
)
REFERENCES WORK_ORDER_COMPONENT
(
WORK_ORDER_ID,
COMPONENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOIC_WOI_FK'
ALTER TABLE WORK_ORDER_INST_COMP ADD CONSTRAINT WOIC_WOI_FK FOREIGN KEY
(
WORK_ORDER_ID,
INSTRUCTION_ID
)
REFERENCES WORK_ORDER_INSTRUCTION
(
WORK_ORDER_ID,
INSTRUCTION_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOX_BA_FK'
ALTER TABLE WORK_ORDER_XREF ADD CONSTRAINT WOX_BA_FK FOREIGN KEY
(
BUSINESS_ASSOCIATE_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOX_R_WOX_FK'
ALTER TABLE WORK_ORDER_XREF ADD CONSTRAINT WOX_R_WOX_FK FOREIGN KEY
(
WO_XREF_TYPE
)
REFERENCES R_WO_XREF_TYPE
(
WO_XREF_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOX_WO_FK'
ALTER TABLE WORK_ORDER_XREF ADD CONSTRAINT WOX_WO_FK FOREIGN KEY
(
WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT WOX_WO_FK2'
ALTER TABLE WORK_ORDER_XREF ADD CONSTRAINT WOX_WO_FK2 FOREIGN KEY
(
PARENT_WORK_ORDER_ID
)
REFERENCES WORK_ORDER
(
WORK_ORDER_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT Z_PRODC_BA_FK'
ALTER TABLE Z_PRODUCT_COMPOSITION ADD CONSTRAINT Z_PRODC_BA_FK FOREIGN KEY
(
DEFINED_BY_BA_ID
)
REFERENCES BUSINESS_ASSOCIATE
(
BUSINESS_ASSOCIATE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT Z_PRODC_R_PRCT_FK'
ALTER TABLE Z_PRODUCT_COMPOSITION ADD CONSTRAINT Z_PRODC_R_PRCT_FK FOREIGN KEY
(
PRODUCT_COMPONENT_TYPE
)
REFERENCES R_PRODUCT_COMPONENT_TYPE
(
PRODUCT_COMPONENT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT Z_PRODC_SRCD_FK'
ALTER TABLE Z_PRODUCT_COMPOSITION ADD CONSTRAINT Z_PRODC_SRCD_FK FOREIGN KEY
(
SOURCE_DOCUMENT_ID
)
REFERENCES SOURCE_DOCUMENT
(
SOURCE_DOCUMENT_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT Z_PRODC_SUB_FK'
ALTER TABLE Z_PRODUCT_COMPOSITION ADD CONSTRAINT Z_PRODC_SUB_FK FOREIGN KEY
(
SUBPRODUCT_TYPE
)
REFERENCES SUBSTANCE
(
SUBSTANCE_ID
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT Z_PRODC_Z_PROD_FK'
ALTER TABLE Z_PRODUCT_COMPOSITION ADD CONSTRAINT Z_PRODC_Z_PROD_FK FOREIGN KEY
(
SUBPRODUCT_TYPE
)
REFERENCES Z_PRODUCT
(
PRODUCT_TYPE
);
\qecho 'CREATING FOREIGN KEY CONSTRAINT Z_PRODC_Z_PROD_FK2'
ALTER TABLE Z_PRODUCT_COMPOSITION ADD CONSTRAINT Z_PRODC_Z_PROD_FK2 FOREIGN KEY
(
PRODUCT_TYPE
)
REFERENCES Z_PRODUCT
(
PRODUCT_TYPE
);
